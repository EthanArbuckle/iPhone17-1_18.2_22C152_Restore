uint64_t sub_100140730()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  sub_1000FF33C(&qword_1015CF1C8);
  result = static _SetStorage.resize(original:capacity:move:)();
  v4 = result;
  if (!*(void *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    v8 = ~(-1 << v7);
  }
  else {
    v8 = -1;
  }
  v9 = v8 & *(void *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    result = static Hasher._hash(seed:_:)();
    v19 = -1 << *(unsigned char *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23) {
          v21 = 0;
        }
        v22 |= v24;
        v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100140994()
{
  uint64_t v1 = *v0;
  sub_1000FF33C(&qword_1015CF1E8);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v9 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v8) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v1 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    uint64_t v29 = v18;
    swift_unknownObjectRetain_n();
    sub_1000FF33C(&qword_1015CF1D8);
    if (swift_dynamicCast())
    {
      v30[0] = v26;
      v30[1] = v27;
      uint64_t v31 = v28;
      AnyHashable.hash(into:)();
      sub_1000F351C((uint64_t)v30);
    }
    else
    {
      uint64_t v28 = 0;
      long long v26 = 0u;
      long long v27 = 0u;
      sub_1000FF2E0((uint64_t)&v26, &qword_1015CF1E0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v3 + 48) + 8 * v12) = v18;
    ++*(void *)(v3 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v8)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v5 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100140C90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF230);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_24:
    sub_10010A768(*(void *)(v2 + 48) + 40 * v18, (uint64_t)v29);
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v4 + 40));
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    uint64_t v14 = *(void *)(v4 + 48) + 40 * v13;
    long long v15 = v29[0];
    long long v16 = v29[1];
    *(void *)(v14 + 32) = v30;
    *(_OWORD *)uint64_t v14 = v15;
    *(_OWORD *)(v14 + 16) = v16;
    ++*(void *)(v4 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100140F24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C(&qword_1015CF210);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001411D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1000FF33C((uint64_t *)&unk_1015CF2C0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    sub_100144284(v20, v21);
    Data.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100141488(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_1000FF33C(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_100141700(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        int64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = static Hasher._hash(seed:_:)() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            unint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *unint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100141888(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            BOOL v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *BOOL v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100141A2C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10013DDF4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_10013FB60();
      goto LABEL_14;
    }
    sub_100140730();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_100141B50(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10013E670();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100140224();
      goto LABEL_22;
    }
    sub_100140F24();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_100141CEC(Swift::Int result, unint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_10013E950();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (Swift::Int)sub_1001403D8();
        goto LABEL_125;
      }
      sub_1001411D4();
    }
    uint64_t v11 = *v4;
    Hasher.init(_seed:)();
    Data.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v92 = ~v12;
      uint64_t v88 = v11;
      unint64_t v90 = a2 >> 62;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v89 = v14;
      uint64_t v91 = v11 + 56;
      v86 = v4;
      uint64_t v87 = v8 >> 32;
      uint64_t v85 = (v8 >> 32) - (int)v8;
      do
      {
        uint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
              goto LABEL_131;
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_100144284(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v89) {
                  goto LABEL_129;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_130;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_165;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  uint64_t result = sub_1001442DC(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_165;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_128;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_132;
            }
            v40 = (unsigned char *)__DataStorage._bytes.getter();
            if (!v40) {
              goto LABEL_52;
            }
            uint64_t v41 = __DataStorage._offset.getter();
            if (__OFSUB__((int)v17, v41)) {
              goto LABEL_134;
            }
            v40 += (int)v17 - v41;
LABEL_52:
            __DataStorage._length.getter();
            uint64_t v13 = v91;
            if (!v90)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v40) {
                goto LABEL_160;
              }
              v48 = (uint64_t *)__s1;
              v47 = v40;
LABEL_110:
              int v71 = memcmp(v47, v48, BYTE6(a2));
              uint64_t result = sub_1001442DC(v17, v16);
              if (!v71) {
                goto LABEL_166;
              }
              break;
            }
            if (v90 == 1)
            {
              if (v87 < (int)v8) {
                goto LABEL_143;
              }
              swift_retain();
              uint64_t v42 = __DataStorage._bytes.getter();
              if (v42)
              {
                uint64_t v43 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v8, v43)) {
                  goto LABEL_150;
                }
                v42 += (int)v8 - v43;
              }
              uint64_t v44 = __DataStorage._length.getter();
              uint64_t v45 = (v8 >> 32) - (int)v8;
              if (v44 < v85) {
                uint64_t v45 = v44;
              }
              if (!v40) {
                goto LABEL_153;
              }
              if (!v42) {
                goto LABEL_154;
              }
              size_t v38 = v45;
              v39 = v40;
              v37 = (const void *)v42;
              goto LABEL_63;
            }
            uint64_t v72 = *(void *)(v8 + 16);
            uint64_t v84 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v73 = __DataStorage._bytes.getter();
            if (v73)
            {
              uint64_t v74 = v73;
              uint64_t v75 = __DataStorage._offset.getter();
              if (__OFSUB__(v72, v75)) {
                goto LABEL_149;
              }
              v76 = (const void *)(v74 + v72 - v75);
            }
            else
            {
              v76 = 0;
            }
            if (__OFSUB__(v84, v72)) {
              goto LABEL_144;
            }
            uint64_t v77 = __DataStorage._length.getter();
            if (v77 >= v84 - v72) {
              size_t v78 = v84 - v72;
            }
            else {
              size_t v78 = v77;
            }
            uint64_t v11 = v88;
            if (!v40) {
              goto LABEL_163;
            }
            uint64_t v13 = v91;
            if (!v76) {
              goto LABEL_164;
            }
            int v64 = memcmp(v40, v76, v78);
            swift_release();
LABEL_123:
            swift_release();
            uint64_t result = sub_1001442DC(v17, v16);
            uint64_t v5 = v86;
            if (!v64) {
              goto LABEL_166;
            }
            break;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            uint64_t v30 = __DataStorage._bytes.getter();
            if (v30)
            {
              uint64_t v31 = v30;
              uint64_t v32 = __DataStorage._offset.getter();
              if (__OFSUB__(v29, v32)) {
                goto LABEL_133;
              }
              v33 = (const void *)(v31 + v29 - v32);
            }
            else
            {
              v33 = 0;
            }
            __DataStorage._length.getter();
            uint64_t v11 = v88;
            uint64_t v13 = v91;
            if (v90)
            {
              if (v90 == 1)
              {
                if (v87 < (int)v8) {
                  goto LABEL_137;
                }
                swift_retain();
                v49 = (char *)__DataStorage._bytes.getter();
                if (v49)
                {
                  uint64_t v50 = __DataStorage._offset.getter();
                  if (__OFSUB__((int)v8, v50)) {
                    goto LABEL_148;
                  }
                  v49 += (int)v8 - v50;
                }
                uint64_t v51 = __DataStorage._length.getter();
                size_t v52 = (v8 >> 32) - (int)v8;
                if (v51 < v85) {
                  size_t v52 = v51;
                }
                if (!v33) {
                  goto LABEL_155;
                }
                if (!v49) {
                  goto LABEL_156;
                }
                int v46 = memcmp(v33, v49, v52);
                sub_1001442DC(v8, a2);
                swift_release();
              }
              else
              {
                uint64_t v65 = *(void *)(v8 + 16);
                uint64_t v83 = *(void *)(v8 + 24);
                swift_retain();
                swift_retain();
                v66 = (char *)__DataStorage._bytes.getter();
                if (v66)
                {
                  uint64_t v67 = __DataStorage._offset.getter();
                  if (__OFSUB__(v65, v67)) {
                    goto LABEL_147;
                  }
                  v66 += v65 - v67;
                }
                BOOL v24 = __OFSUB__(v83, v65);
                int64_t v68 = v83 - v65;
                if (v24) {
                  goto LABEL_142;
                }
                uint64_t v69 = __DataStorage._length.getter();
                if (v69 >= v68) {
                  size_t v70 = v68;
                }
                else {
                  size_t v70 = v69;
                }
                if (!v33) {
                  goto LABEL_161;
                }
                uint64_t v11 = v88;
                if (!v66) {
                  goto LABEL_162;
                }
                int v46 = memcmp(v33, v66, v70);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              uint64_t result = sub_1001442DC(v17, v16);
              uint64_t v5 = v86;
              goto LABEL_106;
            }
            *(void *)__s1 = v8;
            *(_WORD *)&__s1[8] = a2;
            __s1[10] = BYTE2(a2);
            __s1[11] = BYTE3(a2);
            __s1[12] = BYTE4(a2);
            __s1[13] = BYTE5(a2);
            if (!v33) {
              goto LABEL_159;
            }
            int v64 = memcmp(v33, __s1, BYTE6(a2));
            swift_release();
            goto LABEL_123;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v90) {
              goto LABEL_64;
            }
            if (v90 == 1)
            {
              if (v87 < (int)v8) {
                goto LABEL_136;
              }
              swift_retain();
              uint64_t v34 = __DataStorage._bytes.getter();
              if (!v34) {
                goto LABEL_152;
              }
              uint64_t v26 = v34;
              uint64_t v35 = __DataStorage._offset.getter();
              uint64_t v28 = (int)v8 - v35;
              if (__OFSUB__((int)v8, v35)) {
                goto LABEL_141;
              }
              goto LABEL_44;
            }
            uint64_t v59 = *(void *)(v8 + 16);
            uint64_t v60 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            v55 = (char *)__DataStorage._bytes.getter();
            if (v55)
            {
              uint64_t v61 = __DataStorage._offset.getter();
              if (__OFSUB__(v59, v61)) {
                goto LABEL_146;
              }
              v55 += v59 - v61;
            }
            BOOL v24 = __OFSUB__(v60, v59);
            int64_t v57 = v60 - v59;
            if (v24) {
              goto LABEL_139;
            }
            uint64_t v58 = __DataStorage._length.getter();
            uint64_t v11 = v88;
            if (!v55) {
              goto LABEL_158;
            }
            goto LABEL_88;
          default:
            *(void *)__s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v90)
            {
LABEL_64:
              uint64_t v93 = v8;
              __int16 v94 = a2;
              char v95 = BYTE2(a2);
              char v96 = BYTE3(a2);
              char v97 = BYTE4(a2);
              char v98 = BYTE5(a2);
              v47 = __s1;
              v48 = &v93;
              goto LABEL_110;
            }
            if (v90 == 1)
            {
              if (v87 < (int)v8) {
                goto LABEL_135;
              }
              swift_retain();
              uint64_t v25 = __DataStorage._bytes.getter();
              if (!v25)
              {
                __DataStorage._length.getter();
                __break(1u);
LABEL_152:
                __DataStorage._length.getter();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
LABEL_165:
                sub_1001442DC(v17, v16);
LABEL_166:
                ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                __break(1u);
                JUMPOUT(0x100142704);
              }
              uint64_t v26 = v25;
              uint64_t v27 = __DataStorage._offset.getter();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_140;
              }
LABEL_44:
              uint64_t v36 = __DataStorage._length.getter();
              v37 = (const void *)(v26 + v28);
              if (v36 >= v85) {
                size_t v38 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v38 = v36;
              }
              v39 = __s1;
LABEL_63:
              int v46 = memcmp(v39, v37, v38);
              sub_1001442DC(v8, a2);
              uint64_t result = sub_1001442DC(v17, v16);
LABEL_106:
              uint64_t v13 = v91;
              if (!v46) {
                goto LABEL_166;
              }
              break;
            }
            uint64_t v53 = *(void *)(v8 + 16);
            uint64_t v54 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            v55 = (char *)__DataStorage._bytes.getter();
            if (v55)
            {
              uint64_t v56 = __DataStorage._offset.getter();
              if (__OFSUB__(v53, v56)) {
                goto LABEL_145;
              }
              v55 += v53 - v56;
            }
            BOOL v24 = __OFSUB__(v54, v53);
            int64_t v57 = v54 - v53;
            if (v24) {
              goto LABEL_138;
            }
            uint64_t v58 = __DataStorage._length.getter();
            uint64_t v11 = v88;
            if (!v55) {
              goto LABEL_157;
            }
LABEL_88:
            if (v58 >= v57) {
              size_t v62 = v57;
            }
            else {
              size_t v62 = v58;
            }
            int v63 = memcmp(__s1, v55, v62);
            swift_release();
            swift_release();
            uint64_t result = sub_1001442DC(v17, v16);
            uint64_t v13 = v91;
            if (!v63) {
              goto LABEL_166;
            }
            break;
        }
LABEL_15:
        a3 = (a3 + 1) & v92;
      }
      while (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
    }
  }
LABEL_125:
  uint64_t v79 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v80 = (uint64_t *)(*(void *)(v79 + 48) + 16 * a3);
  uint64_t *v80 = v8;
  v80[1] = a2;
  uint64_t v81 = *(void *)(v79 + 16);
  BOOL v24 = __OFADD__(v81, 1);
  uint64_t v82 = v81 + 1;
  if (v24)
  {
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
  }
  *(void *)(v79 + 16) = v82;
  return result;
}

uint64_t sub_10014273C(void *a1)
{
  id v1 = [a1 incidents];
  if (v1)
  {
    int64_t v2 = v1;
    sub_1000FF33C((uint64_t *)&unk_1015D85B0);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_61;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_4:
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      unint64_t v52 = v3 + 32;
      uint64_t v53 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v7 = _swiftEmptyDictionarySingleton;
      uint64_t v8 = &selRef_addActiveiOSPlatformControllerForScene_;
      unint64_t v9 = &selRef_mapView_didDeselectLabelMarker_;
      uint64_t v55 = v4;
      unint64_t v56 = v3;
      unint64_t v54 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10) {
            goto LABEL_59;
          }
        }
        else
        {
          if (v5 >= *(void *)(v53 + 16)) {
            goto LABEL_60;
          }
          id v61 = *(id *)(v52 + 8 * v5);
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10) {
            goto LABEL_59;
          }
        }
        id v11 = [v61 v8[462] v52];
        if (v11) {
          break;
        }
        swift_unknownObjectRelease();
LABEL_6:
        if (v5 == v4) {
          goto LABEL_63;
        }
      }
      uint64_t v12 = v11;
      sub_1000FF33C(&qword_1015CF1C0);
      unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v13 >> 62))
      {
        uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14) {
          goto LABEL_16;
        }
        goto LABEL_53;
      }
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v14)
      {
LABEL_53:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
LABEL_16:
      unint64_t v57 = v5;
      unint64_t v59 = v13;
      unint64_t v60 = v13 & 0xC000000000000001;
      uint64_t v15 = 4;
      id v16 = v61;
      uint64_t v58 = v14;
      while (1)
      {
        uint64_t v19 = v15 - 4;
        if (v60)
        {
          uint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v21 = v15 - 3;
          if (__OFADD__(v19, 1)) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v20 = *(void **)(v13 + 8 * v15);
          swift_unknownObjectRetain();
          uint64_t v21 = v15 - 3;
          if (__OFADD__(v19, 1))
          {
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            swift_bridgeObjectRetain();
            uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v4) {
              break;
            }
            goto LABEL_4;
          }
        }
        id v22 = [v20 v9[459]];
        if (v7[2] && (uint64_t v23 = sub_1001EC99C(v22), (v24 & 1) != 0))
        {
          unint64_t v63 = *(void *)(v7[7] + 8 * v23);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v25 = [v20 v9[459]];
          unint64_t v26 = v63;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          size_t v62 = v7;
          unint64_t v3 = (unint64_t)v7;
          unint64_t v29 = sub_1001EC99C(v25);
          uint64_t v30 = v7[2];
          BOOL v31 = (v28 & 1) == 0;
          uint64_t v32 = v30 + v31;
          if (__OFADD__(v30, v31)) {
            goto LABEL_57;
          }
          char v33 = v28;
          if (v7[3] >= v32)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              unint64_t v7 = v62;
              if ((v28 & 1) == 0) {
                goto LABEL_45;
              }
            }
            else
            {
              unint64_t v3 = (unint64_t)&v62;
              sub_10035244C();
              unint64_t v7 = v62;
              if ((v33 & 1) == 0) {
                goto LABEL_45;
              }
            }
          }
          else
          {
            sub_10034F3E4(v32, isUniquelyReferenced_nonNull_native);
            unint64_t v3 = (unint64_t)v62;
            uint64_t v34 = sub_1001EC99C(v25);
            if ((v33 & 1) != (v35 & 1)) {
              goto LABEL_65;
            }
            unint64_t v29 = v34;
            unint64_t v7 = v62;
            if ((v33 & 1) == 0)
            {
LABEL_45:
              v7[(v29 >> 6) + 8] |= 1 << v29;
              uint64_t v49 = 8 * v29;
              *(void *)(v7[6] + v49) = v25;
              *(void *)(v7[7] + v49) = v26;
              uint64_t v50 = v7[2];
              BOOL v10 = __OFADD__(v50, 1);
              uint64_t v48 = v50 + 1;
              if (v10) {
                goto LABEL_58;
              }
LABEL_46:
              v7[2] = v48;
              goto LABEL_18;
            }
          }
        }
        else
        {
          id v36 = [v20 v9[459]];
          sub_1000FF33C(&qword_1015CD310);
          uint64_t v37 = swift_allocObject();
          *(_OWORD *)(v37 + 16) = xmmword_100F5DFF0;
          *(void *)(v37 + 32) = v16;
          unint64_t v63 = v37;
          specialized Array._endMutation()();
          unint64_t v26 = v63;
          swift_unknownObjectRetain();
          char v38 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v63 = (unint64_t)v7;
          unint64_t v3 = (unint64_t)v7;
          unint64_t v29 = sub_1001EC99C(v36);
          uint64_t v40 = v7[2];
          BOOL v41 = (v39 & 1) == 0;
          uint64_t v42 = v40 + v41;
          if (__OFADD__(v40, v41)) {
            goto LABEL_55;
          }
          char v43 = v39;
          if (v7[3] >= v42)
          {
            if (v38)
            {
              unint64_t v7 = (void *)v63;
              if ((v39 & 1) == 0) {
                goto LABEL_40;
              }
            }
            else
            {
              unint64_t v3 = (unint64_t)&v63;
              sub_10035244C();
              unint64_t v7 = (void *)v63;
              if ((v43 & 1) == 0) {
                goto LABEL_40;
              }
            }
          }
          else
          {
            sub_10034F3E4(v42, v38);
            unint64_t v3 = v63;
            uint64_t v44 = sub_1001EC99C(v36);
            if ((v43 & 1) != (v45 & 1)) {
              goto LABEL_65;
            }
            unint64_t v29 = v44;
            unint64_t v7 = (void *)v63;
            if ((v43 & 1) == 0)
            {
LABEL_40:
              v7[(v29 >> 6) + 8] |= 1 << v29;
              uint64_t v46 = 8 * v29;
              *(void *)(v7[6] + v46) = v36;
              *(void *)(v7[7] + v46) = v26;
              uint64_t v47 = v7[2];
              BOOL v10 = __OFADD__(v47, 1);
              uint64_t v48 = v47 + 1;
              if (v10) {
                goto LABEL_56;
              }
              goto LABEL_46;
            }
          }
        }
        uint64_t v17 = v7[7];
        unint64_t v3 = 8 * v29;
        swift_bridgeObjectRelease();
        *(void *)(v17 + 8 * v29) = v26;
LABEL_18:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v9 = &selRef_mapView_didDeselectLabelMarker_;
        id v16 = v61;
        ++v15;
        BOOL v18 = v21 == v58;
        unint64_t v13 = v59;
        if (v18)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v55;
          unint64_t v3 = v56;
          unint64_t v5 = v57;
          unint64_t v6 = v54;
          uint64_t v8 = &selRef_addActiveiOSPlatformControllerForScene_;
          goto LABEL_6;
        }
      }
    }
    unint64_t v7 = _swiftEmptyDictionarySingleton;
LABEL_63:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  else
  {
    __break(1u);
LABEL_65:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100142CC4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100142D30(uint64_t a1)
{
  return a1;
}

uint64_t sub_100142D9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_10013C680(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

void *sub_100142E10(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_21:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      unint64_t v5 = 0;
      unint64_t v18 = v3 & 0xC000000000000001;
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v7 = (void **)(v3 + 32);
      uint64_t v8 = a2 + 56;
      while (1)
      {
        if (v18)
        {
          unint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10)
          {
LABEL_18:
            __break(1u);
            return v19;
          }
        }
        else
        {
          if (v5 >= *(void *)(v6 + 16))
          {
            __break(1u);
            goto LABEL_21;
          }
          unint64_t v9 = v7[v5];
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v5++, 1);
          if (v10) {
            goto LABEL_18;
          }
        }
        id v11 = (void **)[v9 muid];
        if (*(void *)(a2 + 16))
        {
          unint64_t v3 = (unint64_t)v11;
          uint64_t v12 = static Hasher._hash(seed:_:)();
          uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v14 = v12 & ~v13;
          if ((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
          {
            uint64_t v15 = *(void *)(a2 + 48);
            if (*(void *)(v15 + 8 * v14) == v3)
            {
LABEL_15:
              swift_unknownObjectRelease();
              goto LABEL_5;
            }
            uint64_t v16 = ~v13;
            while (1)
            {
              unint64_t v14 = (v14 + 1) & v16;
              if (((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
                break;
              }
              if (*(void *)(v15 + 8 * v14) == v3) {
                goto LABEL_15;
              }
            }
          }
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        unint64_t v3 = (unint64_t)&v19;
        specialized ContiguousArray._endMutation()();
LABEL_5:
        if (v5 == v4) {
          return v19;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100142FE8(unint64_t a1, uint64_t a2, char a3, char a4)
{
  unint64_t v4 = a1;
  if (!*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    return (void *)v4;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)result;
    if (result) {
      goto LABEL_4;
    }
    goto LABEL_34;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = (void *)swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v9 = v4 & 0xC000000000000001;
    while (1)
    {
      if (v9)
      {
        BOOL v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (a3) {
          goto LABEL_14;
        }
      }
      else
      {
        BOOL v10 = *(void **)(v4 + 8 * v8 + 32);
        swift_unknownObjectRetain();
        if (a3) {
          goto LABEL_14;
        }
      }
      if ([v10 isBlockingIncident]) {
        goto LABEL_6;
      }
LABEL_14:
      id v11 = [v10 affectedEntities];
      if (!v11)
      {
LABEL_6:
        swift_unknownObjectRetain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_26;
        }
        goto LABEL_7;
      }
      uint64_t v12 = v11;
      sub_1000FF33C(&qword_1015CF1C0);
      unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      unint64_t v14 = swift_bridgeObjectRetain();
      unint64_t v15 = (unint64_t)sub_100142E10(v14, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v18)
        {
LABEL_29:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v9 = v4 & 0xC000000000000001;
          goto LABEL_8;
        }
      }
      else if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if (a4)
      {
        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v13 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v16 != v17)
        {
          swift_unknownObjectRelease();
          unint64_t v9 = v4 & 0xC000000000000001;
          goto LABEL_8;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRetain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v9 = v4 & 0xC000000000000001;
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_26:
      }
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_7:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
LABEL_8:
      if (v6 == ++v8) {
        goto LABEL_34;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100143368(unint64_t a1)
{
  return sub_1000F804C(a1, (unint64_t *)&qword_1015CF218, (uint64_t)CNPhoneNumber_ptr, (unint64_t *)&qword_1015CF220, &qword_1015CF228);
}

uint64_t sub_10014338C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10013C798(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100143424()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100143464(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  Swift::Int v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *Swift::Int v7 = v2;
  v7[1] = sub_10005056C;
  return sub_10013ACB4(a1, v4, v5, v6);
}

uint64_t sub_100143518()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100143558()
{
  sub_10013B4B4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_100143560()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_isTrackingUser) == 1)
  {
    id v1 = [self sharedLocationManager];
    id v2 = [v1 currentLocation];

    if (!v2) {
      return 0;
    }
  }
  else
  {
    id v2 = *(id *)(v0 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_requestedLocation);
    id v3 = v2;
    if (!v2) {
      return 0;
    }
  }
  uint64_t v4 = self;
  id v5 = v2;
  id v6 = [v4 sharedService];
  if (!v6)
  {

    return 0;
  }
  Swift::Int v7 = v6;
  id v8 = sub_10013665C();
  id v9 = [self sharedLocationManager];
  id v10 = [v9 currentLocation];

  id v11 = [v7 ticketForNearbyTransitDeparturesWithLookupOrigin:v5 userLocation:v10 traits:v8];
  return v11;
}

void sub_1001436CC(id a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v5 = &OBJC_METACLASS___RAPIncidentsQuestion;
  if (a2)
  {
    swift_errorRetain();
    if (qword_1015CBD38 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1000F2248(v6, (uint64_t)qword_101611760);
    swift_errorRetain();
    swift_errorRetain();
    Swift::Int v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      swift_getErrorValue();
      uint64_t v10 = Error.localizedDescription.getter();
      uint64_t v22 = sub_1000F2280(v10, v11, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Error when attempting to update mapItem: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v5 = &OBJC_METACLASS___RAPIncidentsQuestion;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  id v12 = [a1 _transitInfo:v22];
  if (v12
    && (id v13 = [v12 nearbySchedule], swift_unknownObjectRelease(), v13))
  {
    if (v5[84].vtable != (void *)-1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_1000F2248(v14, (uint64_t)qword_101611760);
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Updated mapItem", v17, 2u);
      swift_slowDealloc();
    }

    *(void *)(v3 + OBJC_IVAR____TtC4Maps31NearbyTransitDeparturesProvider_geoNearbyTransitSchedule) = v13;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    sub_1001380D0();
    swift_unknownObjectRelease();
  }
  else
  {
    if (v5[84].vtable != (void *)-1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_1000F2248(v18, (uint64_t)qword_101611760);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Missing nearby schedule in updated mapItem response", v21, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100143A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v25 = (char *)&v22 - v6;
  __chkstk_darwin(v7);
  id v9 = (char *)&v22 - v8;
  if (qword_1015CBD38 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000F2248(v10, (uint64_t)qword_101611760);
  char v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v24(v9, a1, v2);
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v23 = a1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = v22;
    *(_DWORD *)uint64_t v14 = 136315138;
    sub_10007FEBC(&qword_1015CF278, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v28 = sub_1000F2280(v15, v16, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v9, v2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Updated referenceDate: %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v23;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t))(v3 + 8);
    v17(v9, v2);
  }

  uint64_t v19 = (void (*)(char *, char *, uint64_t))v24;
  uint64_t v18 = v25;
  v24(v25, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v19(v26, v18, v2);
  id v20 = v27;
  static Published.subscript.setter();
  return ((uint64_t (*)(char *, uint64_t))v17)(v18, v2);
}

void sub_100143E14(void *a1)
{
  type metadata accessor for CollectionTransitItem();
  uint64_t v2 = (void *)MapsSyncObject.__allocating_init()();
  id v3 = [objc_allocWithZone((Class)MSPTransitStorageLine) initWithLine:a1];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 data];
    if (v5)
    {
      uint64_t v6 = v5;
      static Data._unconditionallyBridgeFromObjectiveC(_:)();
    }
    dispatch thunk of CollectionTransitItem.transitLineStorage.setter();
    [a1 muid];
    dispatch thunk of CollectionTransitItem.muid.setter();
  }
  type metadata accessor for MapsSyncStore();
  uint64_t v7 = (void *)static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100F5DFF0;
  *(void *)(v8 + 32) = v2;
  specialized Array._endMutation()();
  id v9 = v2;
  dispatch thunk of MapsSyncStore.save(_:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_1001441E4()
{
  return sub_100144210((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100144210(void (*a1)(void), void (*a2)(void))
{
  swift_release();
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

void sub_100144278()
{
  sub_10013BED4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100144284(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1001442DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_100144354(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  id v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *id v3 = *a2;
    id v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    uint64_t v5 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for UICollectionView.SupplementaryRegistration();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v10(v7, v8, v9);
  }
  return v3;
}

void *sub_100144468(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UICollectionView.SupplementaryRegistration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_100144520(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UICollectionView.SupplementaryRegistration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1001445A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UICollectionView.SupplementaryRegistration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100144640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100144654);
}

uint64_t sub_100144654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UICollectionView.SupplementaryRegistration();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100144708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10014471C);
}

uint64_t sub_10014471C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UICollectionView.SupplementaryRegistration();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t destroy for PlaceSummaryResultTemplatePair(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s4Maps30PlaceSummaryResultTemplatePairVwCP_0(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  id v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PlaceSummaryResultTemplatePair(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a2[1];
  uint64_t v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PlaceSummaryStringFormat(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PlaceSummaryResultTemplatePair(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryResultTemplatePair(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryResultTemplatePair(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryResultTemplatePair()
{
  return &type metadata for PlaceSummaryResultTemplatePair;
}

uint64_t sub_1001449CC(void *a1)
{
  id v1 = [a1 geoMapItemPlaceTypes];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_100144B70();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_19:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      unsigned int v10 = [v8 intValue];

      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1001CFC00(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_1001CFC00((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        v7[2] = v12 + 1;
        *((_DWORD *)v7 + v12 + 8) = v10;
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

unint64_t sub_100144B70()
{
  unint64_t result = qword_1015D9680;
  if (!qword_1015D9680)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D9680);
  }
  return result;
}

Swift::Int sub_100144BB0()
{
  Swift::UInt8 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100144BF8()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100144C24()
{
  Swift::UInt8 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unsigned __int8 *sub_100144C68@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result;
  BOOL v3 = v2 > 2;
  if (v2 > 2) {
    LOBYTE(v2) = 0;
  }
  *a2 = v2;
  a2[1] = v3;
  return result;
}

void sub_100144C84(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t (*sub_100144CE4())()
{
  return j__swift_endAccess;
}

void sub_100144D74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_containerStyle;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_containerStyle + 8) & 1) != 0
    || *(void *)v4 != a1)
  {
    *(void *)uint64_t v4 = a1;
    *(unsigned char *)(v4 + 8) = 0;
    uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
    if (v5)
    {
      id v6 = v5;
      sub_10033EED0(a1, 0);
    }
    sub_10010DF84();
  }
}

void sub_100144E68(uint64_t a1, char a2, void *a3)
{
  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = *(void *)&Strong[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_animationCount];
    BOOL v7 = __OFADD__(v6, 1);
    uint64_t v8 = v6 + 1;
    if (v7)
    {
      __break(1u);
      return;
    }
    *(void *)&Strong[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_animationCount] = v8;
  }
  if ((a2 & 1) == 0) {
    [a3 setHidden:0];
  }
}

void sub_100144EF8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
    if (v2 && (id v3 = [v2 view]) != 0)
    {
      uint64_t v4 = v3;
      double v5 = 0.0;
      if ((v1[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden] & 1) == 0) {
        double v5 = *(double *)&v1[OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayAlpha];
      }
      [v3 setAlpha:v5];
    }
    else
    {
      uint64_t v4 = v1;
    }
  }
}

void sub_100144FB0(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = (unsigned __int8 *)Strong;
    uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_animationCount);
    BOOL v7 = __OFSUB__(v6, 1);
    uint64_t v8 = v6 - 1;
    if (v7)
    {
      __break(1u);
    }
    else
    {
      *(void *)(Strong + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_animationCount) = v8;
      if (!v8)
      {
        uint64_t v9 = OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden;
        if (*(unsigned char *)(Strong + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_overlayHidden) == 1)
        {
          unsigned int v10 = *(unsigned char **)(Strong + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_redoSearchController);
          uint64_t v11 = 1;
          if (v10)
          {
            v10[OBJC_IVAR____TtC4Maps33RedoSearchContainerViewController_state] = 1;
            unint64_t v12 = v10;
            sub_10008825C();

            uint64_t v11 = v5[v9];
          }
          [a3 setHidden:v11];
        }
      }
    }
  }
}

id sub_10014516C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RedoSearchChromeOverlay();
  return [super dealloc];
}

ValueMetadata *type metadata accessor for SearchHereFloatingControlState()
{
  return &type metadata for SearchHereFloatingControlState;
}

unint64_t sub_100145220()
{
  unint64_t result = qword_1015CF480;
  if (!qword_1015CF480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF480);
  }
  return result;
}

uint64_t sub_100145274()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001452AC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001452EC()
{
  sub_100144E68(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1001452FC()
{
}

uint64_t sub_100145304()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100145344(uint64_t a1)
{
  sub_100144FB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10014534C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC4Maps23RedoSearchChromeOverlay_constraints);
  uint64_t result = swift_beginAccess();
  unint64_t v3 = *v1;
  if (*v1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4) {
        return swift_bridgeObjectRelease();
      }
    }
    double v5 = self;
    sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deactivateConstraints:isa];

    uint64_t v8 = sub_100144CE4();
    if (*v7)
    {
      *BOOL v7 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
    }
    ((void (*)(unsigned char *, void))v8)(v9, 0);
    *uint64_t v1 = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10014548C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    objc_super v2 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      [v2 shouldStartRedoSearch];
      swift_unknownObjectRelease();
    }
  }
}

void sub_10014550C()
{
}

uint64_t sub_100145524()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v5, qword_1016112C8);
  sub_1000F2248(v5, (uint64_t)qword_1016112C8);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100145690()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF4F8);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = v2;
  uint64_t v3 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v33 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_1000FF33C(&qword_1015CF508);
  uint64_t v8 = (int *)(sub_1000FF33C(&qword_1015CD290) - 8);
  uint64_t v9 = *(void *)v8;
  uint64_t v34 = *(void *)(*(void *)v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v35 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_100F5CFA0;
  unint64_t v30 = v11 + v10 + v8[14];
  unint64_t v31 = v11 + v10;
  *(unsigned char *)(v11 + v10) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v7 += 56;
  uint64_t v32 = v12;
  uint64_t v13 = v5;
  v12(v5, 1, 1, v6);
  uint64_t v14 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v29 = v15 + 56;
  v28(v2, 1, 1, v14);
  uint64_t v16 = sub_1000FF33C((uint64_t *)&unk_1015CF510);
  uint64_t v17 = *(void *)(v7 + 16);
  uint64_t v18 = *(unsigned __int8 *)(v7 + 24);
  uint64_t v26 = ((v18 + 32) & ~v18) + 4 * v17;
  uint64_t v27 = v16;
  uint64_t v25 = v18 | 7;
  uint64_t v19 = swift_allocObject();
  long long v24 = xmmword_100F5F5F0;
  *(_OWORD *)(v19 + 16) = xmmword_100F5F5F0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v23[1] = 3 * v17;
  LocalizedStringResource.init(stringLiteral:)();
  id v20 = (char *)v23[0];
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v21 = (unsigned char *)(v31 + v34);
  v34 += v31 + v8[14];
  *uint64_t v21 = 1;
  LocalizedStringResource.init(stringLiteral:)();
  v32(v13, 1, 1, v33);
  v28(v20, 1, 1, v14);
  *(_OWORD *)(swift_allocObject() + 16) = v24;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  unint64_t result = sub_1001161EC(v35);
  qword_1016112E0 = result;
  return result;
}

uint64_t sub_100145B70(char *a1, char *a2)
{
  return sub_100308BB0(*a1, *a2);
}

unint64_t sub_100145B80()
{
  unint64_t result = qword_1015CF488;
  if (!qword_1015CF488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF488);
  }
  return result;
}

Swift::Int sub_100145BD4()
{
  return Hasher._finalize()();
}

uint64_t sub_100145C58()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100145CC8()
{
  return Hasher._finalize()();
}

uint64_t sub_100145D48@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012D7A90, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100145DA8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x74736574726F6873;
  if (*v1) {
    uint64_t v2 = 0x74736574736166;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100145DEC()
{
  unint64_t result = qword_1015CF490;
  if (!qword_1015CF490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF490);
  }
  return result;
}

unint64_t sub_100145E44()
{
  unint64_t result = qword_1015CF498;
  if (!qword_1015CF498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF498);
  }
  return result;
}

unint64_t sub_100145E9C()
{
  unint64_t result = qword_1015CF4A0;
  if (!qword_1015CF4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4A0);
  }
  return result;
}

void *sub_100145EF0()
{
  return &protocol witness table for String;
}

unint64_t sub_100145F00()
{
  unint64_t result = qword_1015CF4A8;
  if (!qword_1015CF4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4A8);
  }
  return result;
}

unint64_t sub_100145F58()
{
  unint64_t result = qword_1015CF4B0;
  if (!qword_1015CF4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4B0);
  }
  return result;
}

unint64_t sub_100145FB0()
{
  unint64_t result = qword_1015CF4B8;
  if (!qword_1015CF4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4B8);
  }
  return result;
}

unint64_t sub_100146008()
{
  unint64_t result = qword_1015CF4C0;
  if (!qword_1015CF4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4C0);
  }
  return result;
}

uint64_t sub_100146060@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBB50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_1016112C8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100146108()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100146158()
{
  unint64_t result = qword_1015CF4C8;
  if (!qword_1015CF4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4C8);
  }
  return result;
}

uint64_t sub_1001461AC(uint64_t a1)
{
  unint64_t v2 = sub_100146158();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001461FC()
{
  unint64_t result = qword_1015CF4D0;
  if (!qword_1015CF4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4D0);
  }
  return result;
}

unint64_t sub_100146254()
{
  unint64_t result = qword_1015CF4D8;
  if (!qword_1015CF4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4D8);
  }
  return result;
}

unint64_t sub_1001462AC()
{
  unint64_t result = qword_1015CF4E0;
  if (!qword_1015CF4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4E0);
  }
  return result;
}

uint64_t sub_100146300()
{
  if (qword_1015CBB58 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10014635C(uint64_t a1)
{
  unint64_t v2 = sub_100146008();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001463AC()
{
  unint64_t result = qword_1015CF4E8;
  if (!qword_1015CF4E8)
  {
    sub_10010118C(&qword_1015CF4F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF4E8);
  }
  return result;
}

void sub_100146408(void *a1@<X8>)
{
  *a1 = &off_1012D7AE0;
}

unsigned char *storeEnumTagSinglePayload for RoutePreferenceEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001464E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RoutePreferenceEnum()
{
  return &type metadata for RoutePreferenceEnum;
}

unint64_t sub_100146584()
{
  uint64_t v1 = v0;
  *(void *)buf = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  switch(*(void *)(v0 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel))
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      unint64_t v2 = @"No Override";
      goto LABEL_7;
    case 0:
      unint64_t v2 = @"None";
      goto LABEL_7;
    case 1:
      unint64_t v2 = @"Incidents Only";
      goto LABEL_7;
    case 2:
      unint64_t v2 = @"Full";
LABEL_7:
      int v3 = v2;
      break;
    default:
      unint64_t v2 = +[NSString stringWithFormat:@"UNKNOWN: %lu", *(void *)(v0 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel)];
      break;
  }
  unsigned int v4 = v2;
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v8 = 0;
  }
  *(void *)buf = v6;
  unint64_t v26 = v8;
  sub_1000FF33C(&qword_1015D0E70);
  v9._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x74536E676973202CLL;
  v10._object = (void *)0xED0000203A656C79;
  String.append(_:)(v10);
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle);
  if (v11)
  {
    if (v11 == 1)
    {
      unint64_t v12 = @".Mini";
    }
    else
    {
      uint64_t v13 = sub_1005762E4();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      {
        sub_100148C88((uint64_t)buf, (uint64_t)"NSString * _Nonnull NSStringFromCarNavigationGuidanceSignStyle(CarNavigationGuidanceSignStyle)", (uint64_t)"CarNavigationGuidanceSign.h", 36);
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", buf, 0x1Cu);
      }

      if (sub_100BB36BC())
      {
        uint64_t v14 = sub_1005762E4();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
        {
          uint64_t v15 = +[NSThread callStackSymbols];
          id v16 = v15;
          sub_100148CB4((uint64_t)buf, (uint64_t)v15);
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
        }
      }
      unint64_t v12 = @".Unknown";
    }
  }
  else
  {
    unint64_t v12 = @".Default";
  }
  uint64_t v17 = v12;
  uint64_t v18 = v12;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  return 0xD000000000000010;
}

void sub_1001468C4(void *a1)
{
  Class isa = UInt._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 encodeObject:isa forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle);
  id v6 = String._bridgeToObjectiveC()();
  [a1 encodeInteger:v5 forKey:v6];
}

id sub_100146A40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationModeGuidanceConfiguration();
  return [super dealloc];
}

uint64_t type metadata accessor for NavigationModeGuidanceConfiguration()
{
  return self;
}

void sub_100146A98(void *a1)
{
  if (qword_1015CBB60 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_1015CF528);
  id v4 = a1;
  id v5 = v1;
  id v6 = v4;
  unint64_t v7 = (char *)v5;
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    id v40 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    id v11 = v6;
    sub_1000FF33C(&qword_1015CF5E8);
    uint64_t v12 = String.init<A>(describing:)();
    sub_1000F2280(v12, v13, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    id v14 = *(id *)&v7[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration];
    uint64_t v15 = String.init<A>(describing:)();
    sub_1000F2280(v15, v16, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "didSet initialGuidanceConfiguration from: %s to: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v17 = OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration;
  uint64_t v18 = *(void **)&v7[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration];
  if (v18)
  {
    uint64_t v19 = self;
    id v40 = 0;
    id v20 = v18;
    id v21 = [v19 archivedDataWithRootObject:v20 requiringSecureCoding:1 error:&v40];
    id v22 = v40;
    if (v21)
    {
      uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      unint64_t v26 = *(void **)&v7[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      NSString v28 = String._bridgeToObjectiveC()();
      [v26 setObject:isa forKey:v28];

      sub_1001442DC(v23, v25);
    }
    else
    {
      unint64_t v31 = v22;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v32 = v7;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        id v36 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315138;
        id v40 = v36;
        id v37 = *(id *)&v7[v17];
        sub_1000FF33C(&qword_1015CF5E8);
        uint64_t v38 = String.init<A>(describing:)();
        sub_1000F2280(v38, v39, (uint64_t *)&v40);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "failed to persist initialGuidanceConfiguration in user defaults: %s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
      }
    }
  }
  else
  {
    uint64_t v29 = *(void **)&v7[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults];
    NSString v30 = String._bridgeToObjectiveC()();
    [v29 setURL:0 forKey:v30];
  }
}

id sub_100146F88()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults];
  swift_bridgeObjectRetain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 removeObserver:v0 forKeyPath:v3];

  id v4 = *(id *)&v0[v1];
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 removeObserver:v0 forKeyPath:v5];

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NavigationAlertsOnlyOverrideSynchronizationTask();
  return [super dealloc];
}

void sub_100147160(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_isApplyingConfiguration;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_isApplyingConfiguration) = 1;
  if (qword_1015CBB60 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_1015CF528);
  id v6 = a1;
  objc_super v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 136315138;
    uint64_t v10 = v6;
    id v11 = [v10 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_1000F2280(v12, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "applyConfiguration: Will apply configuration override to: %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioPreferences);
  id v16 = [v15 guidanceLevelForTransportType:0];
  if (v16 != *(id *)&v6[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel])
  {
    [v15 setGuidanceLevel:forTransportType:];
    [v15 synchronize];
  }
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults);
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 integerForKey:v18];

  id v20 = *(id *)&v6[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle];
  if (v19 != v20)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    [v17 setInteger:v20 forKey:v21];
  }
  *(unsigned char *)(v2 + v4) = 0;
}

void sub_10014744C(uint64_t a1, void *a2, uint64_t a3, Class isa, uint64_t a5)
{
  id v6 = v5;
  NSString v10 = a2;
  if (!a2)
  {
LABEL_46:
    sub_10011D518(a3, (uint64_t)v58);
    uint64_t v42 = v59;
    if (v59)
    {
      char v43 = sub_1000FF380(v58, v59);
      uint64_t v44 = *(void *)(v42 - 8);
      __n128 v45 = __chkstk_darwin(v43);
      uint64_t v47 = (char *)&v55 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v44 + 16))(v47, v45);
      uint64_t v48 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v42);
      sub_1000FF22C((uint64_t)v58);
      if (!isa)
      {
LABEL_49:
        uint64_t v49 = (objc_class *)type metadata accessor for NavigationAlertsOnlyOverrideSynchronizationTask();
        v57.receiver = v6;
        v57.super_class = v49;
        [super observeValueForKeyPath:v10 ofObject:v48 change:isa context:a5];

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v48 = 0;
      if (!isa) {
        goto LABEL_49;
      }
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_100148C30();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_49;
  }
  if (*(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioKey] == a1
    && *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioKey + 8] == (void)a2)
  {
    goto LABEL_13;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    BOOL v13 = *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_signKey] == a1
       && *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_signKey + 8] == (void)v10;
    if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      NSString v10 = String._bridgeToObjectiveC()();
      goto LABEL_46;
    }
  }
  if (_stringCompareWithSmolCheck(_:_:expecting:)())
  {
LABEL_13:
    uint64_t v14 = qword_1015CBB60;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1000F2248(v15, (uint64_t)qword_1015CF528);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      NSString v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "observeValue: called for audioKey, will reload values from default", v18, 2u);
      swift_slowDealloc();
    }

    [*(id *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioPreferences] loadValuesFromDefaults];
    goto LABEL_18;
  }
  BOOL v36 = *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_signKey] == a1
     && *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_signKey + 8] == (void)v10;
  if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v37 = qword_1015CBB60;
    swift_bridgeObjectRetain();
    if (v37 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_1000F2248(v38, (uint64_t)qword_1015CF528);
    unint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v39, v40))
    {
      BOOL v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "observeValue: called for signKey", v41, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
LABEL_18:
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v20 = Strong,
        id v21 = [Strong currentNavigationSession],
        v20,
        v21))
  {

    if ((v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_isApplyingConfiguration] & 1) == 0
      && *(void *)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration])
    {
      if (qword_1015CBB60 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_1000F2248(v22, (uint64_t)qword_1015CF528);
      swift_bridgeObjectRetain();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc();
        v58[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v25 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v56 = sub_1000F2280(a1, (unint64_t)v10, v58);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "observeValue: was called for %s during an Alerts Only navigation session -> We will not reset initial settings after nav ends", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation] = 1;
      uint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v50, v51))
      {
        unint64_t v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v52 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "user modified config during active nav -> will not persist configuration as we don't want to revert", v52, 2u);
        swift_slowDealloc();
      }

      uint64_t v53 = *(void **)&v6[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults];
      NSString v54 = String._bridgeToObjectiveC()();
      [v53 setURL:0 forKey:v54];

      return;
    }
    int v26 = 1;
  }
  else
  {
    int v26 = 0;
  }
  if (qword_1015CBB60 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_1000F2248(v27, (uint64_t)qword_1015CF528);
  NSString v28 = v6;
  swift_bridgeObjectRetain();
  uint64_t v55 = v28;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    v58[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315906;
    swift_bridgeObjectRetain();
    HIDWORD(v56) = (unint64_t)sub_1000F2280(a1, (unint64_t)v10, v58) >> 32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 1024;
    LODWORD(v56) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 18) = 1024;
    int v32 = v55[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_isApplyingConfiguration];

    LODWORD(v56) = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v31 + 24) = 2080;
    id v33 = *(id *)&v55[OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration];
    sub_1000FF33C(&qword_1015CF5E8);
    uint64_t v34 = String.init<A>(describing:)();
    uint64_t v56 = sub_1000F2280(v34, v35, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "observeValue: was called for %s, but it was ignored. isNavigating: %{BOOL}d, isApplyingConfiguration: %{BOOL}d, initialGuidanceConfiguration: %s", (uint8_t *)v31, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_100147EA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration;
  NSString v3 = *(void **)(v0
                + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration);
  if (v3)
  {
    uint64_t v4 = (unsigned char *)(v0
                 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation);
    int v5 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation);
    uint64_t v6 = qword_1015CBB60;
    objc_super v7 = v3;
    if (v5 == 1)
    {
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_1000F2248(v8, (uint64_t)qword_1015CF528);
      os_log_type_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v9, v10))
      {
        id v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "navigaitonWillEnd: navigation started with an override, but the user changed configuration during nav -> will not restore initial settings", v11, 2u);
        swift_slowDealloc();
        uint64_t v12 = v7;
      }
      else
      {
        uint64_t v12 = v9;
        os_log_type_t v9 = v7;
      }

      NSString v28 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = 0;
      uint64_t v29 = v28;
    }
    else
    {
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for Logger();
      sub_1000F2248(v18, (uint64_t)qword_1015CF528);
      id v19 = v7;
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136315138;
        buf = v22;
        uint64_t v23 = v19;
        id v24 = [v23 description];
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v26;

        sub_1000F2280(v25, v27, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "navigationWillEnd: navigation started with an override and the user did not change config during nav -> will apply back previous configuration (%s)", buf, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100147160(v19);

      NSString v28 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = 0;
      uint64_t v29 = v28;
    }
    sub_100146A98(v29);
  }
  else
  {
    if (qword_1015CBB60 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1000F2248(v13, (uint64_t)qword_1015CF528);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "navigationWillEnd: did not have an initialGuidanceConfiguration so we were not overriding. -> nothing to do", v16, 2u);
      swift_slowDealloc();
    }

    os_log_type_t v17 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = 0;
    sub_100146A98(v17);

    uint64_t v4 = (unsigned char *)(v1
                 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation);
  }
  *uint64_t v4 = 0;
}

void sub_100148360(void *a1)
{
  uint64_t v2 = v1;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userModifiedConfigurationDuringNavigation) = 0;
  id v3 = [a1 configuration];
  unsigned int v4 = [v3 isETAOnlyMode];

  if (v4)
  {
    int v5 = *(void **)(v2 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_userDefaults);
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 integerForKey:v6];

    id v8 = [*(id *)(v2 + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_audioPreferences) guidanceLevelForTransportType:0];
    os_log_type_t v9 = (objc_class *)type metadata accessor for NavigationModeGuidanceConfiguration();
    os_log_type_t v10 = (char *)objc_allocWithZone(v9);
    *(void *)&v10[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel] = v8;
    *(void *)&v10[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle] = v7;
    v43.receiver = v10;
    v43.super_class = v9;
    id v11 = [super init];
    id v12 = sub_100148B60((uint64_t)v11);
    if (v12)
    {
      uint64_t v13 = qword_1015CBB60;
      uint64_t v14 = v12;
      if (v13 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1000F2248(v15, (uint64_t)qword_1015CF528);
      id v16 = v11;
      os_log_type_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v17, v18))
      {
        id v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)id v19 = 136315138;
        id v20 = v16;
        id v21 = [v20 description];
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        os_log_t osloga = v14;
        unint64_t v24 = v23;

        sub_1000F2280(v22, v24, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v14 = osloga;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "navigationStarted: NavigationSession started in ETA only mode. Will save current configuration before overriding: %s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v38 = *(void **)(v2
                     + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration);
      *(void *)(v2
                + OBJC_IVAR____TtC4Maps47NavigationAlertsOnlyOverrideSynchronizationTask_initialGuidanceConfiguration) = v16;
      id v39 = v16;
      sub_100146A98(v38);

      sub_100147160(v14);
    }
    else
    {
      if (qword_1015CBB60 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_1000F2248(v28, (uint64_t)qword_1015CF528);
      id v29 = v11;
      os_log_type_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        int v32 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)int v32 = 136315138;
        id v33 = v29;
        id v34 = [v33 description];
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;

        sub_1000F2280(v35, v37, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "navigationStarted: NavigationSession started in ETA only mode, but current configuration (%s) did not need to be overridden.", v32, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    if (qword_1015CBB60 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_1000F2248(v25, (uint64_t)qword_1015CF528);
    oslog = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v26, "navigationStarted: session was not launched in ETA only mode. Nothing to do.", v27, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_100148A24(void *a1)
{
  id v3 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  unint64_t v5 = (unint64_t)[a1 decodeIntegerForKey:v4];

  if ((v5 & 0x8000000000000000) != 0)
  {
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [a1 decodeIntegerForKey:v6];

    *(void *)&v3[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel] = v5;
    *(void *)&v3[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle] = v7;

    v9.receiver = v3;
    v9.super_class = (Class)type metadata accessor for NavigationModeGuidanceConfiguration();
    return [super init];
  }
  return result;
}

id sub_100148B60(uint64_t a1)
{
  if (*(void *)(a1 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel) == 1
    && *(void *)(a1 + OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle) == 1)
  {
    return 0;
  }
  uint64_t v2 = (objc_class *)type metadata accessor for NavigationModeGuidanceConfiguration();
  id v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_guidanceLevel] = 1;
  *(void *)&v3[OBJC_IVAR____TtC4Maps35NavigationModeGuidanceConfiguration_navigationSignStyle] = 1;
  v4.receiver = v3;
  v4.super_class = v2;
  return [super init];
}

unint64_t sub_100148BF0()
{
  unint64_t result = qword_1015CF5F8;
  if (!qword_1015CF5F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CF5F8);
  }
  return result;
}

unint64_t sub_100148C30()
{
  unint64_t result = qword_1015CD430;
  if (!qword_1015CD430)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CD430);
  }
  return result;
}

double sub_100148C88(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)&double result = 136315650;
  *(_DWORD *)a1 = 136315650;
  *(void *)(a1 + 4) = a2;
  *(_WORD *)(a1 + 12) = 2080;
  *(void *)(a1 + 14) = a3;
  *(_WORD *)(a1 + 22) = 1024;
  *(_DWORD *)(a1 + 24) = a4;
  return result;
}

double sub_100148CB4(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = 138412290;
  *(_DWORD *)a1 = 138412290;
  *(void *)(a1 + 4) = a2;
  return result;
}

id sub_100148CC8()
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for HomeListCompositionalLayout();
  id v2 = objc_msgSendSuper2(&v8, "finalLayoutAttributesForDisappearingItemAtIndexPath:", isa);

  id v3 = [v0 collectionView];
  if (v3)
  {
    objc_super v4 = v3;
    id v5 = [v3 dataSource];
    if (v5)
    {
      if ([v5 collectionView:v4 numberOfItemsInSection:IndexPath.section.getter()])
      {

        swift_unknownObjectRelease();
        return v2;
      }
      if (v2)
      {
        id v6 = v2;
        [v6 setAlpha:0.0];
      }
      swift_unknownObjectRelease();
    }
  }
  return v2;
}

id sub_100148ECC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for HomeListCompositionalLayout();
  [super finalLayoutAttributesForDisappearingDecorationElementOfKind:v1 atIndexPath:isa];

  id v4 = [v0 collectionView];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v4 dataSource];
    if (v6)
    {
      if ([v6 collectionView:v5 numberOfItemsInSection:IndexPath.section.getter()])
      {

        swift_unknownObjectRelease();
        return v3;
      }
      if (v3)
      {
        id v7 = v3;
        [v7 setAlpha:0.0];
      }
      swift_unknownObjectRelease();
    }
  }
  return v3;
}

id sub_100149320()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListCompositionalLayout();
  return [super dealloc];
}

uint64_t sub_100149354()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_100149394()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_noteEditorViewController);
  if (v2)
  {
    id v3 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  return _swiftEmptyArrayStorage;
}

void sub_100149534()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [Strong searchPinsManager];

    if (!v2)
    {
      __break(1u);
      goto LABEL_15;
    }
    id v3 = [v2 singleSearchResultItemSource];

    if (v3)
    {
      id v4 = v3;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v5 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v5) {
    return;
  }
  id v6 = v5;
  id v7 = [v5 searchPinsManager];

  if (!v7)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v8 = [v7 droppedPinsItemSource];

  if (v8)
  {
    id v9 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
}

void sub_1001498E4(void *a1, void *a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  uint64_t v15 = sub_100149BF0;
  uint64_t v16 = v5;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_10008C380;
  uint64_t v14 = &unk_1012DA658;
  id v6 = _Block_copy(&v11);
  id v7 = a1;
  swift_release();
  [a2 addPreparation:v6];
  _Block_release(v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v2;
  uint64_t v15 = sub_100149BF8;
  uint64_t v16 = v8;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  uint64_t v13 = sub_100316A88;
  uint64_t v14 = &unk_1012DA6A8;
  id v9 = _Block_copy(&v11);
  id v10 = v2;
  swift_release();
  [a2 addCompletion:v9];
  _Block_release(v9);
}

void sub_100149A70(void *a1)
{
  id v1 = [a1 searchPinsManager];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 singleSearchResultItemSource];

    if (v3)
    {
      sub_100100830(0, &qword_1015CF700);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v3 setSearchResults:isa];
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100149BB8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100149BF0()
{
  sub_100149A70(*(void **)(v0 + 16));
}

id sub_100149BF8()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController) resetState];
}

uint64_t sub_100149C18()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_100149C50()
{
  sub_100321684(*(unsigned char *)(v0 + 24));
}

id sub_100149C7C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_placeViewController);
  [v1 setPlaceCardItem:*(void *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_placeCardItem) withHistory:*(unsigned __int8 *)(*(void *)(v0 + OBJC_IVAR____TtC4Maps16PlaceCardContext_configuration)+ OBJC_IVAR____TtC4Maps29PlaceCardContextConfiguration_shouldInsertInHistory)];
  [v1 setPlaceCardDelegate:v0];

  return [v1 setContaineeDelegate:v0];
}

uint64_t sub_100149D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100149D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_100149DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

void sub_100149E30(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x10014A048);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_10014A070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  unsigned int v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v8);
  unsigned int v10 = *(void (**)(char *, __n128))(v5 + 16);
  v10((char *)&v14 - v11, v9);
  if (!swift_dynamicCast())
  {
    uint64_t v19 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    sub_10010A7C4((uint64_t)&v17);
LABEL_6:
    char v12 = 0;
    return v12 & 1;
  }
  v20[0] = v17;
  v20[1] = v18;
  uint64_t v21 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v10)(v7, a2, a3);
  if (!swift_dynamicCast())
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    sub_10010A7C4((uint64_t)&v14);
    sub_1000F351C((uint64_t)v20);
    goto LABEL_6;
  }
  long long v17 = v14;
  long long v18 = v15;
  uint64_t v19 = v16;
  char v12 = static AnyHashable.== infix(_:_:)();
  sub_1000F351C((uint64_t)&v17);
  sub_1000F351C((uint64_t)v20);
  return v12 & 1;
}

uint64_t sub_10014A228(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __n128 v4 = __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v3, v4);
  if (swift_dynamicCast())
  {
    v11[0] = v8;
    v11[1] = v9;
    uint64_t v12 = v10;
    AnyHashable.hash(into:)();
    return sub_1000F351C((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    return sub_10010A7C4((uint64_t)&v8);
  }
}

Swift::Int sub_10014A340(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_10014A228((uint64_t)v3, a1);
  return Hasher._finalize()();
}

Swift::Int sub_10014A390(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  sub_10014A228((uint64_t)v4, a2);
  return Hasher._finalize()();
}

uint64_t sub_10014A3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10014A070(a1, a2, *(void *)(a3 + 16));
}

Swift::UInt sub_10014A3DC()
{
  if (swift_unknownObjectWeakLoadStrong() && (swift_dynamicCast() & 1) != 0)
  {
    if (*((void *)&v2 + 1))
    {
      v4[0] = v1;
      v4[1] = v2;
      uint64_t v5 = v3;
      AnyHashable.hash(into:)();
      return sub_1000F351C((uint64_t)v4);
    }
  }
  else
  {
    uint64_t v3 = 0;
    long long v1 = 0u;
    long long v2 = 0u;
  }
  sub_10010A7C4((uint64_t)&v1);
  Swift::UInt result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    Hasher._combine(_:)(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Int sub_10014A4A8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10014A4F0()
{
  return Hasher._finalize()();
}

uint64_t sub_10014A52C()
{
  return swift_getWitnessTable();
}

uint64_t sub_10014A558(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10014A578(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)Swift::UInt result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t destroy for RefinementsBar(uint64_t a1)
{
  return swift_release();
}

uint64_t initializeWithCopy for RefinementsBar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for RefinementsBar(void *a1, void *a2)
{
  *a1 = *a2;
  long long v4 = (void *)a2[1];
  id v5 = (void *)a1[1];
  a1[1] = v4;
  id v6 = v4;

  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RefinementsBar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;

  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NearbyTransitCategory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NearbyTransitCategory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)Swift::UInt result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RefinementsBar()
{
  return &type metadata for RefinementsBar;
}

uint64_t sub_10014A774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014A790@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a5;
  uint64_t v9 = sub_1000FF33C(&qword_1015CF838);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015CF828);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  long long v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v11 = static VerticalAlignment.center.getter();
  *((void *)v11 + 1) = 0x4018000000000000;
  v11[16] = 0;
  v33[1] = &v11[*(int *)(sub_1000FF33C(&qword_1015CF848) + 44)];
  swift_getKeyPath();
  swift_getKeyPath();
  id v16 = a2;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  long long v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = v16;
  v17[4] = a3;
  v17[5] = a4;
  id v18 = v16;
  swift_retain();
  sub_1000FF33C(&qword_1015CEBE8);
  type metadata accessor for UUID();
  sub_1000FF33C(&qword_1015CF850);
  sub_1001010F8(&qword_1015CF858, &qword_1015CEBE8);
  sub_10014B720();
  sub_10014B7FC(&qword_1015CF870, (void (*)(uint64_t))type metadata accessor for RefinementsBarButtonViewModel);
  ForEach<>.init(_:content:)();
  char v19 = static Edge.Set.horizontal.getter();
  sub_1000FF27C((uint64_t)v11, (uint64_t)v15, &qword_1015CF838);
  id v20 = &v15[*(int *)(v13 + 44)];
  *id v20 = v19;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  v20[40] = 1;
  sub_1000FF2E0((uint64_t)v11, &qword_1015CF838);
  char v21 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = v34;
  sub_1000FF27C((uint64_t)v15, v34, &qword_1015CF828);
  uint64_t v31 = v30 + *(int *)(sub_1000FF33C(&qword_1015CF810) + 36);
  *(unsigned char *)uint64_t v31 = v21;
  *(void *)(v31 + 8) = v23;
  *(void *)(v31 + 16) = v25;
  *(void *)(v31 + 24) = v27;
  *(void *)(v31 + 32) = v29;
  *(unsigned char *)(v31 + 40) = 0;
  return sub_1000FF2E0((uint64_t)v15, &qword_1015CF828);
}

uint64_t sub_10014AAC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  id v94 = a3;
  uint64_t v95 = a5;
  uint64_t v87 = a2;
  uint64_t v88 = a4;
  uint64_t v93 = a6;
  uint64_t v92 = type metadata accessor for RefinementMenu(0);
  __chkstk_darwin(v92);
  long long v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v78 - v10;
  uint64_t v89 = sub_1000FF33C(&qword_1015CF878);
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v19 = (char *)&v78 - v18;
  uint64_t v90 = type metadata accessor for RefinementBarButton(0);
  __chkstk_darwin(v90);
  char v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v78 - v23;
  uint64_t v25 = (int *)type metadata accessor for RefinementsBarButtonViewModel(0);
  uint64_t v26 = (char **)(a1 + v25[8]);
  uint64_t v27 = *v26;
  if (*v26)
  {
    uint64_t v28 = v26[3];
    uint64_t v84 = v26[1];
    uint64_t v85 = v28;
    LODWORD(v83) = *((_DWORD *)v26 + 4);
    uint64_t v29 = *(void (**)(void, void, void))(v14 + 16);
    uint64_t v82 = v27;
    v29(v16, a1, v13);
    uint64_t v30 = v25[6];
    uint64_t v31 = (uint64_t *)(a1 + v25[5]);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    int v34 = *((unsigned __int8 *)v31 + 16);
    int v86 = v34;
    BOOL v35 = v34 == 0;
    if (v34) {
      uint64_t v36 = v33;
    }
    else {
      uint64_t v36 = 0;
    }
    if (v34) {
      uint64_t v37 = v32;
    }
    else {
      uint64_t v37 = 0;
    }
    uint64_t v78 = v36;
    uint64_t v79 = v37;
    uint64_t v81 = v11;
    if (v35) {
      uint64_t v38 = v33;
    }
    else {
      uint64_t v38 = 0;
    }
    if (v35) {
      uint64_t v39 = v32;
    }
    else {
      uint64_t v39 = 0;
    }
    int v80 = *(unsigned __int8 *)(a1 + v30);
    char v40 = *(unsigned char *)(a1 + v25[7]);
    BOOL v41 = (void (*)(uint64_t, uint64_t))swift_allocObject();
    id v42 = v94;
    *((void *)v41 + 2) = v87;
    *((void *)v41 + 3) = v42;
    uint64_t v43 = v95;
    *((void *)v41 + 4) = v88;
    *((void *)v41 + 5) = v43;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v16, v13);
    uint64_t v44 = (int *)v92;
    __n128 v45 = &v8[*(int *)(v92 + 20)];
    *(void *)__n128 v45 = v38;
    *((void *)v45 + 1) = v39;
    uint64_t v46 = &v8[v44[6]];
    uint64_t v47 = v79;
    *(void *)uint64_t v46 = v78;
    *((void *)v46 + 1) = v47;
    v8[v44[7]] = v80;
    v8[v44[8]] = v40;
    uint64_t v48 = &v8[v44[9]];
    uint64_t v49 = (uint64_t)v81;
    uint64_t v50 = v84;
    *(void *)uint64_t v48 = v82;
    *((void *)v48 + 1) = v50;
    v48[16] = v83 & 1;
    *((void *)v48 + 3) = v85;
    os_log_type_t v51 = (void (**)(uint64_t, uint64_t))&v8[v44[10]];
    *os_log_type_t v51 = sub_10014B898;
    v51[1] = v41;
    sub_10014B8A4((uint64_t)v8, v49, type metadata accessor for RefinementMenu);
    sub_10014B90C(v49, v91, type metadata accessor for RefinementMenu);
    swift_storeEnumTagMultiPayload();
    sub_10012FA94();
    sub_10014B7FC(&qword_1015CF868, (void (*)(uint64_t))type metadata accessor for RefinementMenu);
    sub_10014B7FC(&qword_1015CFF20, (void (*)(uint64_t))type metadata accessor for RefinementBarButton);
    swift_bridgeObjectRetain();
    id v52 = v94;
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    uint64_t v53 = v49;
    NSString v54 = type metadata accessor for RefinementMenu;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, a1, v13);
    uint64_t v55 = v25[6];
    uint64_t v56 = (char **)(a1 + v25[5]);
    uint64_t v57 = v13;
    uint64_t v58 = *v56;
    uint64_t v59 = v56[1];
    int v60 = *((unsigned __int8 *)v56 + 16);
    int v86 = v60;
    BOOL v61 = v60 == 0;
    if (v60) {
      size_t v62 = v58;
    }
    else {
      size_t v62 = 0;
    }
    if (v60) {
      unint64_t v63 = v59;
    }
    else {
      unint64_t v63 = 0;
    }
    uint64_t v83 = v62;
    uint64_t v84 = v63;
    if (v61) {
      int v64 = v58;
    }
    else {
      int v64 = 0;
    }
    if (v61) {
      uint64_t v65 = v59;
    }
    else {
      uint64_t v65 = 0;
    }
    uint64_t v81 = v64;
    uint64_t v82 = v65;
    LODWORD(v85) = *(unsigned __int8 *)(a1 + v55);
    char v66 = *(unsigned char *)(a1 + v25[7]);
    uint64_t v67 = (void (*)(uint64_t))swift_allocObject();
    id v68 = v94;
    *((void *)v67 + 2) = v87;
    *((void *)v67 + 3) = v68;
    uint64_t v69 = v95;
    *((void *)v67 + 4) = v88;
    *((void *)v67 + 5) = v69;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v19, v57);
    size_t v70 = (int *)v90;
    int v71 = &v21[*(int *)(v90 + 20)];
    uint64_t v72 = v82;
    *(void *)int v71 = v81;
    *((void *)v71 + 1) = v72;
    uint64_t v73 = &v21[v70[6]];
    uint64_t v74 = v84;
    *(void *)uint64_t v73 = v83;
    *((void *)v73 + 1) = v74;
    v21[v70[7]] = (char)v85;
    v21[v70[8]] = v66;
    uint64_t v75 = (void (**)(uint64_t))&v21[v70[9]];
    *uint64_t v75 = sub_10014B848;
    v75[1] = v67;
    sub_10014B8A4((uint64_t)v21, (uint64_t)v24, type metadata accessor for RefinementBarButton);
    sub_10014B90C((uint64_t)v24, v91, type metadata accessor for RefinementBarButton);
    swift_storeEnumTagMultiPayload();
    sub_10012FA94();
    sub_10014B7FC(&qword_1015CF868, (void (*)(uint64_t))type metadata accessor for RefinementMenu);
    sub_10014B7FC(&qword_1015CFF20, (void (*)(uint64_t))type metadata accessor for RefinementBarButton);
    id v76 = v68;
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    uint64_t v53 = (uint64_t)v24;
    NSString v54 = type metadata accessor for RefinementBarButton;
  }
  return sub_10014B974(v53, v54);
}

void sub_10014B140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, char *))
{
  uint64_t v9 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a4 + OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled) == 1)
  {
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    a5(a1, v11);
    sub_1000FF2E0((uint64_t)v11, (uint64_t *)&unk_1015D5DE0);
  }
}

void sub_10014B298(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, char *))
{
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a3 + OBJC_IVAR____TtC4Maps23RefinementsBarViewModel_tapInteractionEnabled) == 1)
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    a4(a1, v9);
    sub_1000FF2E0((uint64_t)v9, (uint64_t *)&unk_1015D5DE0);
  }
}

uint64_t sub_10014B398()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[3];
  static Axis.Set.horizontal.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  long long v4 = *(_OWORD *)(v0 + 1);
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  id v5 = (id)v4;
  swift_retain();
  sub_1000FF33C(&qword_1015CF810);
  sub_10014B4CC();
  ScrollView.init(_:showsIndicators:content:)();
  sub_1000FF33C(&qword_1015CF840);
  ScrollView.scrollsContentToBeginningInRightToLeft.setter();
  return swift_release();
}

uint64_t sub_10014B498@<X0>(uint64_t a1@<X8>)
{
  return sub_10014A790(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_10014B4A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10014B4CC()
{
  unint64_t result = qword_1015CF818;
  if (!qword_1015CF818)
  {
    sub_10010118C(&qword_1015CF810);
    sub_10014B548();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF818);
  }
  return result;
}

unint64_t sub_10014B548()
{
  unint64_t result = qword_1015CF820;
  if (!qword_1015CF820)
  {
    sub_10010118C(&qword_1015CF828);
    sub_1001010F8(&qword_1015CF830, &qword_1015CF838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF820);
  }
  return result;
}

uint64_t sub_10014B5E8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10014B610@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10014B694(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10014B714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10014AAC0(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

unint64_t sub_10014B720()
{
  unint64_t result = qword_1015CF860;
  if (!qword_1015CF860)
  {
    sub_10010118C(&qword_1015CF850);
    sub_10014B7FC(&qword_1015CF868, (void (*)(uint64_t))type metadata accessor for RefinementMenu);
    sub_10014B7FC(&qword_1015CFF20, (void (*)(uint64_t))type metadata accessor for RefinementBarButton);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CF860);
  }
  return result;
}

uint64_t sub_10014B7FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10014B848(uint64_t a1)
{
  sub_10014B298(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t, char *))(v1 + 32));
}

uint64_t sub_10014B858()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10014B898(uint64_t a1, uint64_t a2)
{
  sub_10014B140(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, char *))(v2 + 32));
}

uint64_t sub_10014B8A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014B90C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014B974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014B9D4()
{
  return sub_1001010F8(&qword_1015CF880, &qword_1015CF888);
}

uint64_t sub_10014BB20(uint64_t a1, uint64_t a2)
{
  sub_10011D518(a2, (uint64_t)v23);
  uint64_t v5 = v24;
  if (v24)
  {
    id v6 = sub_1000FF380(v23, v24);
    uint64_t v7 = *(void *)(v5 - 8);
    __n128 v8 = __chkstk_darwin(v6);
    uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    sub_1000FF22C((uint64_t)v23);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = (objc_class *)type metadata accessor for LibraryAddCollectionItemViewController();
  v22.receiver = v2;
  v22.super_class = v12;
  unsigned __int8 v13 = [super searchDataSource:a1 shouldFilterItem:v11];
  swift_unknownObjectRelease();
  if (v13) {
    return 1;
  }
  sub_10011D518(a2, (uint64_t)v23);
  if (v24)
  {
    sub_10014C758();
    if (swift_dynamicCast())
    {
      id v15 = v21;
      id v16 = [v21 mapItem];
      if (v16)
      {
        uint64_t v17 = v16;
        sub_10014C288(v16, (void (*)(void))&type metadata accessor for CollectionPlaceItemRequest, (uint64_t (*)(void))&CollectionPlaceItemRequest.__allocating_init(), (uint64_t (*)(void *))&dispatch thunk of CollectionPlaceItemRequest.fetchSync(options:));
        char v19 = v18;

        if (v19)
        {

          return 1;
        }
      }
      else
      {
      }
    }
  }
  else
  {
    sub_1001189D4((uint64_t)v23);
  }
  return 0;
}

void sub_10014BDF0(void *a1)
{
  sub_10014C288(a1, (void (*)(void))&type metadata accessor for CollectionPlaceItemRequest, (uint64_t (*)(void))&CollectionPlaceItemRequest.__allocating_init(), (uint64_t (*)(void *))&dispatch thunk of CollectionPlaceItemRequest.fetchSync(options:));
  long long v4 = v3;

  if (!v4)
  {
    id v5 = [a1 _geoMapItem];
    if (v5)
    {
      id v6 = [self mapItemStorageForGEOMapItem:v5];
      if (v6)
      {
        id v14 = v6;
        if (objc_msgSend(a1, "_maps_canRenameCollectionItem"))
        {
          uint64_t v7 = self;
          __n128 v8 = (void *)swift_allocObject();
          v8[2] = v1;
          v8[3] = a1;
          v8[4] = v14;
          aBlock[4] = sub_10014C748;
          aBlock[5] = v8;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10014C074;
          aBlock[3] = &unk_1012DA918;
          uint64_t v9 = _Block_copy(aBlock);
          id v10 = v1;
          id v11 = a1;
          id v12 = v14;
          swift_release();
          id v13 = [v7 _maps_viewControllerForRenamingMapItem:v11 saveHandler:v9 cancelHandler:0];
          _Block_release(v9);
          [v10 presentViewController:v13 animated:1 completion:0];

          swift_unknownObjectRelease();
        }
        else
        {
          sub_10014C4EC(a1, v14, 0, 0);
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_10014C074(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_10014C230()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryAddCollectionItemViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for LibraryAddCollectionItemViewController()
{
  return self;
}

void sub_10014C288(void *a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void *))
{
  if ([a1 _geoMapItem])
  {
    id v8 = [a1 _geoMapItemStorageForPersistence];
    uint64_t v9 = v8;
    if (v8)
    {
      id v10 = [v8 userValues];

      if (v10)
      {
        id v11 = [v10 name];

        if (v11)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
    }
    id v12 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryPredicate());
    id v13 = (void *)MapsSyncQueryPredicate.init(mapItem:customName:)();
    id v14 = objc_allocWithZone((Class)type metadata accessor for MapsSyncRange());
    id v15 = v13;
    MapsSyncRange.init(offset:limit:)();
    id v16 = objc_allocWithZone((Class)type metadata accessor for MapsSyncQueryOptions());
    uint64_t v17 = (void *)MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
    a2(0);
    uint64_t v18 = (void *)a3();
    id v19 = v17;
    unint64_t v20 = a4(v17);

    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v22) {
        goto LABEL_11;
      }
    }
    else if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:

      swift_bridgeObjectRelease();
      return;
    }
    if ((v20 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_11;
    }
    if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v21 = *(id *)(v20 + 32);
      goto LABEL_11;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_10014C4EC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v7 - 8);
  type metadata accessor for CollectionPlaceItem();
  id v8 = (void *)MapsSyncObject.__allocating_init()();
  id v9 = a2;
  dispatch thunk of CollectionPlaceItem.mapItemStorage.setter();
  if (!a4)
  {
    id v10 = [a1 name];
    if (v10)
    {
      id v11 = v10;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  swift_bridgeObjectRetain();
  dispatch thunk of CollectionPlaceItem.customName.setter();
  sub_10014C288(a1, (void (*)(void))&type metadata accessor for FavoriteItemRequest, (uint64_t (*)(void))&FavoriteItemRequest.__allocating_init(), (uint64_t (*)(void *))&dispatch thunk of FavoriteItemRequest.fetchSync(options:));
  if (v12)
  {
    id v13 = v12;
    dispatch thunk of CollectionPlaceItem.type.setter();
    id v14 = v13;
    dispatch thunk of MapsSyncObject.identifier.getter();

    dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
  }
  type metadata accessor for MapsSyncStore();
  id v15 = (void *)static MapsSyncStore.sharedStore.getter();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100F5DFF0;
  *(void *)(v16 + 32) = v8;
  specialized Array._endMutation()();
  id v17 = v8;
  dispatch thunk of MapsSyncStore.save(_:)();
  swift_bridgeObjectRelease();
}

uint64_t sub_10014C700()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10014C748(uint64_t a1, uint64_t a2)
{
  sub_10014C4EC(*(void **)(v2 + 24), *(void **)(v2 + 32), a1, a2);
}

unint64_t sub_10014C758()
{
  unint64_t result = qword_1015CF8B8;
  if (!qword_1015CF8B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CF8B8);
  }
  return result;
}

id sub_10014C970()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel____lazy_storage___chargerSymbolString;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel____lazy_storage___chargerSymbolString);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = sub_10014C9DC();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_10010B3BC(v4);
  }
  sub_1000F41B8(v2);
  return v3;
}

id sub_10014C9DC()
{
  id result = [self _mapsCar_fontForTextStyle:UIFontTextStyleCaption2 weight:UIFontWeightThin];
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = self;
    id v3 = [self configurationWithFont:v1 scale:1];

    id v4 = [v2 evPlugIconWithConfiguration:v3];
    if (!v4) {
      return 0;
    }
    id v5 = [self textAttachmentWithImage:v4];
    id v6 = [self attributedStringWithAttachment:v5];

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id CarPlaceCardEVChargingViewModel.__allocating_init(mapItem:virtualGarageService:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return CarPlaceCardEVChargingViewModel.init(mapItem:virtualGarageService:)(a1, a2);
}

id CarPlaceCardEVChargingViewModel.init(mapItem:virtualGarageService:)(void *a1, void *a2)
{
  id v3 = v2;
  id v6 = [a1 _identifier];
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v7 = v6;
  id result = [a1 _geoMapItem];
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v9 = [result _evCharger];
  swift_unknownObjectRelease();
  if (!v9)
  {

LABEL_12:
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v10 = [v9 plugs];

  sub_100100830(0, &qword_1015CF8C0);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v11 >> 62))
  {
    if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v16 <= 0)
  {
LABEL_11:

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_6:
  id result = [a1 _geoMapItem];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v12 = [result _evCharger];
  id result = (id)swift_unknownObjectRelease();
  if (v12)
  {
    id v13 = [v12 aggregatedAvailabilityInfo];

    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v15 = [v3 initWithMapItemIdentifier:v7 plugs:isa initialAggregatedAvailabilityInfo:v13 virtualGarageService:a2];

    return v15;
  }
LABEL_16:
  __break(1u);
  return result;
}

char *CarPlaceCardEVChargingViewModel.__allocating_init(mapItemIdentifier:plugs:initialAggregatedAvailabilityInfo:virtualGarageService:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  return CarPlaceCardEVChargingViewModel.init(mapItemIdentifier:plugs:initialAggregatedAvailabilityInfo:virtualGarageService:)(a1, a2, a3, a4);
}

char *CarPlaceCardEVChargingViewModel.init(mapItemIdentifier:plugs:initialAggregatedAvailabilityInfo:virtualGarageService:)(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_sections] = _swiftEmptyArrayStorage;
  unint64_t v11 = &v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryTitle];
  *unint64_t v11 = 0;
  v11[1] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_isActive] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel____lazy_storage___chargerSymbolString] = 1;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_mapItemIdentifier] = a1;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_plugs] = a2;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_initialAggregatedAvailabilityInfo] = a3;
  *(void *)&v5[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_virtualGarageService] = a4;
  id v12 = objc_allocWithZone((Class)MUEVChargerAvailabilityDownloader);
  id v13 = a4;
  id v14 = v5;
  id v15 = a1;
  id v16 = a3;
  id v17 = [v12 initWithMapItemIdentifier:v15];
  *(void *)&v14[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_availabilityRefresher] = v17;

  v26.receiver = v14;
  v26.super_class = ObjectType;
  uint64_t v18 = (char *)[super init];
  id v19 = *(void **)&v18[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_availabilityRefresher];
  unint64_t v20 = v18;
  [v19 setDelegate:v20];
  id v21 = *(void **)&v20[OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_virtualGarageService];
  if (v21)
  {
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v25[4] = sub_10014D444;
    v25[5] = v22;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = sub_100033BC0;
    v25[3] = &unk_1012DA968;
    uint64_t v23 = _Block_copy(v25);
    swift_release();
    [v21 virtualGarageGetGarageWithReply:v23];
    _Block_release(v23);
  }

  return v20;
}

uint64_t sub_10014D084()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014D14C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v11 = (void *)result;
    sub_100100830(0, (unint64_t *)&qword_1015CE570);
    uint64_t v12 = static OS_dispatch_queue.main.getter();
    uint64_t v18 = v6;
    id v13 = (void *)v12;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v11;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_10014FB58;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012DAA38;
    id v15 = _Block_copy(aBlock);
    id v16 = a1;
    id v17 = v11;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10014FB60((unint64_t *)&qword_1015CE1E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_10010B554();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
  return result;
}

uint64_t sub_10014D444(void *a1)
{
  return sub_10014D14C(a1);
}

void *sub_10014D44C(uint64_t a1, id a2)
{
  id v3 = [a2 selectedVehicle];
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle);
  *(void *)(a1 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle) = v3;

  sub_10014D500();
  uint64_t result = (void *)sub_10014D97C();
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_isActive) == 1)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result evChargingViewModelDidUpdate:a1];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_10014D500()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_initialAggregatedAvailabilityInfo);
  if (!v1)
  {
    uint64_t v7 = (void *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryTitle);
    *uint64_t v7 = 0;
    v7[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription);
    *(void *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription) = 0;
LABEL_7:

    return;
  }
  id v2 = v1;
  if ([v2 _realTimePlugAvailabilityStatus])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v3._countAndFlagsBits = 0xD000000000000021;
    v24._object = (void *)0x8000000100F77C10;
    v3._object = (void *)0x8000000100F77CF0;
    v4._countAndFlagsBits = 0x6C62616C69617641;
    v4._object = (void *)0xED0000776F4E2065;
    v24._countAndFlagsBits = 0xD000000000000039;
    *(Swift::String *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryTitle) = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)qword_101611820, v4, v24);
    swift_bridgeObjectRelease();
    id v5 = sub_10014F4A8([v2 availableEVChargers], [v2 totalEVChargers]);

    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription);
    *(void *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription) = v5;
    goto LABEL_7;
  }
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v8._countAndFlagsBits = 0xD00000000000001CLL;
  v25._object = (void *)0x8000000100F77C10;
  v8._object = (void *)0x8000000100F77D20;
  v9._countAndFlagsBits = 0x7372656772616843;
  v9._object = (void *)0xE800000000000000;
  v25._countAndFlagsBits = 0xD000000000000039;
  *(Swift::String *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryTitle) = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)qword_101611820, v9, v25);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0xD00000000000001DLL;
  v26._countAndFlagsBits = 0xD00000000000003ALL;
  v26._object = (void *)0x8000000100F77D60;
  v10._object = (void *)0x8000000100F77D40;
  v11._countAndFlagsBits = 0x61746F7420646C25;
  v11._object = (void *)0xE90000000000006CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v26);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F5CF70;
  id v13 = [v2 totalEVChargers];
  *(void *)(v12 + 56) = &type metadata for UInt;
  *(void *)(v12 + 64) = &protocol witness table for UInt;
  *(void *)(v12 + 32) = v13;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_1000FF33C(&qword_1015D6B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v15 = self;
  id v16 = NSForegroundColorAttributeName;
  id v17 = [v15 labelColor];
  *(void *)(inited + 64) = sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  *(void *)(inited + 40) = v17;
  sub_1001163E4(inited);
  id v18 = objc_allocWithZone((Class)NSAttributedString);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10014FB60((unint64_t *)&qword_1015CD440, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v21 = [v18 initWithString:v19 attributes:isa];

  uint64_t v22 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription);
  *(void *)(v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_summaryDescription) = v21;
}

uint64_t sub_10014D97C()
{
  unint64_t v1 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_plugs);
  uint64_t v82 = _swiftEmptyDictionarySingleton;
  if (v1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = v0; v2; i = v0)
  {
    Swift::String v3 = _swiftEmptyDictionarySingleton;
    uint64_t v4 = 4;
    while (1)
    {
      uint64_t v0 = (uint64_t *)(v4 - 4);
      id v6 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v4);
      id v7 = v6;
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v0, 1)) {
        break;
      }
      Swift::UInt32 v9 = [v6 connectorType];
      uint64_t v0 = v3;
      unint64_t v11 = sub_1001EA850(v9);
      uint64_t v12 = v3[2];
      BOOL v13 = (v10 & 1) == 0;
      uint64_t v14 = v12 + v13;
      if (__OFADD__(v12, v13)) {
        goto LABEL_20;
      }
      char v15 = v10;
      if (v3[3] < v14)
      {
        sub_10034F3F0(v14, 1);
        Swift::String v3 = v82;
        unint64_t v16 = sub_1001EA850(v9);
        if ((v15 & 1) != (v17 & 1))
        {
          type metadata accessor for GEOEVChargerPlugConnectorType(0);
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x10014E1B0);
        }
        unint64_t v11 = v16;
      }
      if (v15)
      {
        id v5 = (void *)(v3[7] + 8 * v11);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        sub_1000FF33C(&qword_1015CD310);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_100F5DFF0;
        *(void *)(v18 + 32) = v7;
        uint64_t v81 = v18;
        uint64_t v0 = &v81;
        specialized Array._endMutation()();
        uint64_t v19 = v81;
        v3[(v11 >> 6) + 8] |= 1 << v11;
        *(_DWORD *)(v3[6] + 4 * v11) = v9;
        *(void *)(v3[7] + 8 * v11) = v19;
        uint64_t v20 = v3[2];
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_21;
        }
        v3[2] = v22;
      }
      ++v4;
      if (v8 == v2) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain_n();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  Swift::String v3 = _swiftEmptyDictionarySingleton;
LABEL_24:
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v23 = swift_bridgeObjectRetain();
  Swift::String v24 = sub_10034E8B8(v23);
  swift_release();
  uint64_t v82 = v24;
  sub_10014EB3C((uint64_t *)&v82);
  swift_release();
  uint64_t v25 = OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle;
  Swift::String v26 = i;
  uint64_t v27 = *(void **)((char *)i + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle);
  if (!v27)
  {
    uint64_t v31 = v82;
LABEL_61:
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  uint64_t v28 = v82[2];
  if (v28)
  {
    uint64_t v80 = OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_selectedVehicle;
    uint64_t v29 = (int *)(v82 + 4);
    id v30 = v27;
    uint64_t v31 = _swiftEmptyArrayStorage;
    uint64_t v32 = _swiftEmptyArrayStorage;
    while (2)
    {
      int v35 = *v29++;
      int v34 = v35;
      uint64_t v36 = 8;
      switch(v35)
      {
        case 1:
          goto LABEL_38;
        case 2:
          uint64_t v36 = 1;
          goto LABEL_38;
        case 3:
          if (([v30 supportedConnectors] & 0x40) != 0) {
            goto LABEL_39;
          }
          uint64_t v36 = 256;
LABEL_38:
          if (((unint64_t)[v30 supportedConnectors] & v36) != 0)
          {
LABEL_39:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_1001CFFA4(0, v32[2] + 1, 1, v32);
            }
            unint64_t v38 = v32[2];
            unint64_t v37 = v32[3];
            unint64_t v39 = v38 + 1;
            if (v38 < v37 >> 1)
            {
              uint64_t v33 = v32;
            }
            else
            {
              uint64_t v33 = sub_1001CFFA4((void *)(v37 > 1), v38 + 1, 1, v32);
              uint64_t v32 = v33;
            }
          }
          else
          {
LABEL_43:
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v33 = v31;
            }
            else {
              uint64_t v33 = sub_1001CFFA4(0, v31[2] + 1, 1, v31);
            }
            unint64_t v38 = v33[2];
            unint64_t v40 = v33[3];
            unint64_t v39 = v38 + 1;
            if (v38 >= v40 >> 1) {
              uint64_t v33 = sub_1001CFFA4((void *)(v40 > 1), v38 + 1, 1, v33);
            }
            uint64_t v31 = v33;
          }
          void v33[2] = v39;
          *((_DWORD *)v33 + v38 + 8) = v34;
          if (--v28) {
            continue;
          }

          Swift::String v26 = i;
          uint64_t v25 = v80;
          break;
        case 4:
          uint64_t v36 = 2;
          goto LABEL_38;
        case 5:
          uint64_t v36 = 4;
          goto LABEL_38;
        case 6:
          uint64_t v36 = 16;
          goto LABEL_38;
        case 7:
          uint64_t v36 = 32;
          goto LABEL_38;
        case 8:
          uint64_t v36 = 128;
          goto LABEL_38;
        default:
          goto LABEL_43;
      }
      break;
    }
  }
  else
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    uint64_t v32 = _swiftEmptyArrayStorage;
  }
  swift_release();
  BOOL v41 = *(void **)((char *)v26 + v25);
  if (!v41 || !v32[2]) {
    goto LABEL_61;
  }
  uint64_t v42 = qword_1015CBD78;
  id v43 = v41;
  if (v42 != -1) {
    swift_once();
  }
  v44._uint64_t countAndFlagsBits = 0xD000000000000020;
  v84._object = (void *)0x8000000100F77C80;
  v44._object = (void *)0x8000000100F77C50;
  v45._uint64_t countAndFlagsBits = 0x402520726F46;
  v45._object = (void *)0xE600000000000000;
  v84._uint64_t countAndFlagsBits = 0xD000000000000015;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)qword_101611820, v45, v84);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_100F5CF70;
  id v47 = [v43 displayName];
  uint64_t v48 = v43;
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;

  *(void *)(v46 + 56) = &type metadata for String;
  *(void *)(v46 + 64) = sub_10011A750();
  *(void *)(v46 + 32) = v49;
  *(void *)(v46 + 40) = v51;
  uint64_t v52 = String.init(format:_:)();
  uint64_t v54 = v53;
  swift_bridgeObjectRelease();
  Swift::String v26 = i;
  uint64_t v55 = sub_10014E1D0((uint64_t)v32, (uint64_t)v3, v52, v54);
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v59)
  {
    int v60 = v48;
    BOOL v61 = sub_1001CFE7C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v63 = v61[2];
    unint64_t v62 = v61[3];
    if (v63 >= v62 >> 1) {
      BOOL v61 = sub_1001CFE7C((void *)(v62 > 1), v63 + 1, 1, v61);
    }
    v61[2] = v63 + 1;
    int v64 = &v61[3 * v63];
    v64[4] = v55;
    v64[5] = v57;
    v64[6] = v59;

    Swift::String v26 = i;
    if (!v31[2]) {
      goto LABEL_60;
    }
    goto LABEL_63;
  }

LABEL_62:
  BOOL v61 = _swiftEmptyArrayStorage;
  if (!v31[2])
  {
LABEL_60:
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_74;
  }
LABEL_63:
  if (v61[2])
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v65._uint64_t countAndFlagsBits = 0xD000000000000022;
    v85._uint64_t countAndFlagsBits = 0xD000000000000039;
    v85._object = (void *)0x8000000100F77C10;
    v65._object = (void *)0x8000000100F77BE0;
    v66._uint64_t countAndFlagsBits = 0x684320726568744FLL;
    v66._object = (void *)0xEE00737265677261;
    Swift::String v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)qword_101611820, v66, v85);
    uint64_t countAndFlagsBits = v67._countAndFlagsBits;
    object = v67._object;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  uint64_t v70 = sub_10014E1D0((uint64_t)v31, (uint64_t)v3, countAndFlagsBits, (uint64_t)object);
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v74)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v61 = sub_1001CFE7C(0, v61[2] + 1, 1, v61);
    }
    unint64_t v76 = v61[2];
    unint64_t v75 = v61[3];
    if (v76 >= v75 >> 1) {
      BOOL v61 = sub_1001CFE7C((void *)(v75 > 1), v76 + 1, 1, v61);
    }
    v61[2] = v76 + 1;
    uint64_t v77 = &v61[3 * v76];
    v77[4] = v70;
    v77[5] = v72;
    v77[6] = v74;
    Swift::String v26 = i;
  }
LABEL_74:
  *(uint64_t *)((char *)v26 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_sections) = (uint64_t)v61;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10014E1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v7 = sub_1000FF33C(&qword_1015CF9B8);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  Swift::UInt32 v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v10 - 8);
  Swift::String v45 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AttributedString();
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    return 0;
  }
  v38[1] = a4;
  unint64_t v40 = (void (**)(char *, uint64_t))(v13 + 8);
  BOOL v41 = (void (**)(uint64_t, char *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  char v17 = _swiftEmptyArrayStorage;
  uint64_t v43 = a1;
  Swift::String v44 = v9;
  uint64_t v42 = v12;
  while (1)
  {
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
    unint64_t v18 = sub_1001EA850(*(_DWORD *)(a1 + 4 * v16 + 32));
    if ((v19 & 1) == 0) {
      goto LABEL_4;
    }
    unint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * v18);
    if (!(v20 >> 62))
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21) {
        break;
      }
      goto LABEL_3;
    }
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_4:
    if (v15 == ++v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      return v39;
    }
  }
  uint64_t result = sub_10014F688(v20);
  uint64_t v24 = v23;
  char v26 = v25;
  uint64_t v48 = result;
  if ((v20 & 0xC000000000000001) != 0)
  {
    id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(v20 + 32);
LABEL_12:
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    id v29 = [v28 connectorTypeDisplayText];

    if (v29)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v30 = (uint64_t)v44;
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    if (v26) {
      id v31 = sub_10014E5FC(v24);
    }
    else {
      id v31 = sub_10014F4A8(v48, v24);
    }
    uint64_t v32 = v31;
    uint64_t v33 = *(int *)(v47 + 48);
    uint64_t v34 = v42;
    (*v41)(v30, v49, v42);
    *(void *)(v30 + v33) = v32;
    id v35 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v17 = (void *)sub_1001CFC0C(0, v17[2] + 1, 1, (unint64_t)v17);
    }
    unint64_t v37 = v17[2];
    unint64_t v36 = v17[3];
    if (v37 >= v36 >> 1) {
      char v17 = (void *)sub_1001CFC0C(v36 > 1, v37 + 1, 1, (unint64_t)v17);
    }
    v17[2] = v37 + 1;
    sub_10014FAB0(v30, (uint64_t)v17+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v37);

    (*v40)(v49, v34);
    a1 = v43;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

id sub_10014E5FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  __chkstk_darwin(v2 - 8);
  Swift::String v3 = self;
  id v4 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:a1];
  id v5 = [v3 localizedStringFromNumber:v4 numberStyle:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v6 = objc_allocWithZone((Class)NSAttributedString);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithString:v7];

  id v9 = sub_10014C970();
  if (v9)
  {
    uint64_t v10 = v9;
    sub_1000FF33C(&qword_1015CD310);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100F5E000;
    *(void *)(v11 + 32) = v8;
    sub_100100830(0, (unint64_t *)&unk_1015CF9C0);
    id v12 = v8;
    AttributedString.init(stringLiteral:)();
    *(void *)(v11 + 40) = NSAttributedString.init(_:)();
    *(void *)(v11 + 48) = v10;
    specialized Array._endMutation()();
    uint64_t v13 = self;
    id v14 = v10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v13 buildAttributedDisplayStringForComponents:isa];

    id v8 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v16];
    sub_1000FF33C(&qword_1015D6B10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    unint64_t v18 = self;
    char v19 = NSForegroundColorAttributeName;
    id v20 = [v18 systemGrayColor];
    *(void *)(inited + 64) = sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
    *(void *)(inited + 40) = v20;
    sub_1001163E4(inited);
    type metadata accessor for Key(0);
    sub_10014FB60((unint64_t *)&qword_1015CD440, type metadata accessor for Key);
    Class v21 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 addAttributes:v21 range:0, [v8 length]];
  }
  return v8;
}

void CarPlaceCardEVChargingViewModel.init()()
{
}

void *CarPlaceCardEVChargingViewModel.evChargerAvailabilityDownloader(_:didDownloadAvailabilityWith:)(uint64_t a1, uint64_t a2)
{
  return sub_10014F828(a2);
}

Swift::Int sub_10014EB3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1003561B4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_10014EBA8(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_10014EBA8(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        int v81 = *(_DWORD *)(v79 + 4 * i);
        uint64_t v82 = v78;
        do
        {
          int v83 = *(_DWORD *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_DWORD *)(v79 + v82 + 4) = v83;
          *(_DWORD *)(v79 + v82) = v81;
          v82 -= 4;
        }
        while (v82 != -4);
        v78 += 4;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v95 = result;
  Swift::Int v96 = v3;
  if (v3 < 2)
  {
    id v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      id v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          int v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_10014F238((char *)(v84 + 4 * v88), (char *)(v84 + 4 * *(void *)&v87[16 * v12 - 16]), v84 + 4 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v86 = sub_10035503C((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    type metadata accessor for GEOEVChargerPlugConnectorType(0);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v96;
    id v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 4;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      int v14 = *(_DWORD *)(v10 + 4 * v9);
      int v15 = *(_DWORD *)(v10 + 4 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        int v16 = v14;
        while (1)
        {
          int v17 = *(_DWORD *)(v10 + 4 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          int v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          Swift::Int v18 = v9 - 1;
          Swift::Int v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              int v20 = *(_DWORD *)(v10 + 4 * v19);
              *(_DWORD *)(v10 + 4 * v19) = *(_DWORD *)(v10 + 4 * v18);
              *(_DWORD *)(v10 + 4 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    Swift::Int v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      Swift::Int v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (int *)(v93 + 4 * v9);
      do
      {
        int v23 = *(_DWORD *)(v10 + 4 * v9);
        Swift::Int v24 = v13;
        char v25 = v22;
        do
        {
          int v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *char v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      Swift::Int v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10035496C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_10035496C((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    id v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          Swift::String v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            Swift::String v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        unint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_10014F238((char *)(v10 + 4 * *(void *)v71), (char *)(v10 + 4 * *(void *)v74), v10 + 4 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        id v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      id v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10014F238(char *__src, char *a2, unint64_t a3, char *__dst)
{
  id v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 3;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 2;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 3;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 2;
  Swift::Int v24 = __src;
  int v23 = __dst;
  if (v10 >= v12 >> 2)
  {
    if (v11 >= -3)
    {
      if (__dst != a2 || &a2[4 * v13] <= __dst) {
        memmove(__dst, a2, 4 * v13);
      }
      int v16 = &v4[4 * v13];
      uint64_t v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 4)
      {
        int v17 = (char *)(a3 - 4);
        while (1)
        {
          Swift::Int v18 = v17 + 4;
          Swift::Int v19 = v6 - 4;
          int v20 = *((_DWORD *)v6 - 1);
          if (*((_DWORD *)v16 - 1) >= v20)
          {
            uint64_t v22 = v16 - 4;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(_DWORD *)int v17 = *((_DWORD *)v16 - 1);
            }
            v16 -= 4;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(_DWORD *)int v17 = v20;
            }
            Swift::Int v24 = v6 - 4;
            v6 -= 4;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 4;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -3)
  {
    if (__dst != __src || &__src[4 * v10] <= __dst) {
      memmove(__dst, __src, 4 * v10);
    }
    int v14 = &v4[4 * v10];
    uint64_t v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 4)
    {
      do
      {
        if (*(_DWORD *)v6 >= *(_DWORD *)v4)
        {
          if (v7 != v4) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v4;
          }
          v4 += 4;
          int v23 = v4;
          int v15 = v6;
        }
        else
        {
          int v15 = v6 + 4;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(_DWORD *)uint64_t v7 = *(_DWORD *)v6;
          }
        }
        v7 += 4;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_100354A68((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10014F4A8(uint64_t a1, uint64_t a2)
{
  id result = self;
  if ((a2 | a1) < 0)
  {
    __break(1u);
  }
  else
  {
    id v5 = [result localizedStringForAvailableChargers:a1 outOfTotal:a2 radiowavesSymbolScale:2];
    uint64_t v6 = self;
    uint64_t v7 = &selRef_systemGrayColor;
    if (a1) {
      uint64_t v7 = &selRef_systemGreenColor;
    }
    id v8 = [v6 *v7];
    id v9 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v5];
    sub_1000FF33C(&qword_1015D6B10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100F5CF70;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    *(void *)(inited + 64) = sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
    *(void *)(inited + 40) = v8;
    uint64_t v11 = NSForegroundColorAttributeName;
    id v12 = v8;
    sub_1001163E4(inited);
    type metadata accessor for Key(0);
    sub_10014FB60((unint64_t *)&qword_1015CD440, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 addAttributes:isa range:0, [v9 length]];

    return v9;
  }
  return result;
}

uint64_t sub_10014F688(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v3 = a1 & 0xC000000000000001;
    uint64_t v4 = 4;
    do
    {
      if (v3) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4);
      }
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
      {
        __break(1u);
        goto LABEL_23;
      }
      unsigned int v8 = [v5 realtimeStatus];

      ++v4;
      if (v8) {
        BOOL v9 = 1;
      }
      else {
        BOOL v9 = v7 == v2;
      }
    }
    while (!v9);
    uint64_t result = swift_bridgeObjectRelease();
    if (v2 < 1)
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    while (1)
    {
      id v14 = v3 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v11 + 32);
      int v15 = v14;
      id v16 = [v14 availableNumberOfChargers];
      BOOL v17 = __CFADD__(v13, v16);
      v13 += (uint64_t)v16;
      if (v17) {
        break;
      }
      id v18 = [v15 totalNumberOfChargers];

      BOOL v17 = __CFADD__(v12, v18);
      v12 += (uint64_t)v18;
      if (v17) {
        goto LABEL_24;
      }
      if (v2 == ++v11) {
        goto LABEL_27;
      }
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  uint64_t v13 = 0;
LABEL_27:
  swift_bridgeObjectRelease();
  return v13;
}

void *sub_10014F828(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_plugs) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10014D500();
  uint64_t result = (void *)sub_10014D97C();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Maps31CarPlaceCardEVChargingViewModel_isActive) == 1)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      [result evChargingViewModelDidUpdate:v1];
      return (void *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for CarPlaceCardEVChargingViewModel()
{
  return self;
}

uint64_t destroy for CarPlaceCardEVChargingViewModel.EVChargingSection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s4Maps31CarPlaceCardEVChargingViewModelC17EVChargingSectionVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CarPlaceCardEVChargingViewModel.EVChargingSection(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CarPlaceCardEVChargingViewModel.EVChargingSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CarPlaceCardEVChargingViewModel.EVChargingSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CarPlaceCardEVChargingViewModel.EVChargingSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarPlaceCardEVChargingViewModel.EVChargingSection()
{
  return &type metadata for CarPlaceCardEVChargingViewModel.EVChargingSection;
}

uint64_t sub_10014FAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015CF9B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014FB18()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10014FB58()
{
  return sub_10014D44C(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_10014FB60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitDistance()
{
  return &type metadata for PlaceSummaryUnitDistance;
}

ValueMetadata *_s17SearchLoadingViewVMa()
{
  return &_s17SearchLoadingViewVN;
}

uint64_t _s17RefinementButtonsVwxx()
{
  sub_100127C4C();

  return swift_bridgeObjectRelease();
}

uint64_t _s17RefinementButtonsVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17RefinementButtonsVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100127C4C();
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17RefinementButtonsVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100127C4C();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17RefinementButtonsVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17RefinementButtonsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17RefinementButtonsVMa()
{
  return &_s17RefinementButtonsVN;
}

void *initializeBufferWithCopyOfBuffer for PlaceSummaryUnitSecondaryName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PlaceSummaryUnitSecondaryName(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PlaceSummaryUnitSecondaryName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s13ActionButtonsVMa()
{
  return &_s13ActionButtonsVN;
}

void *sub_10014FEA0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    unsigned int v8 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10014FFA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for PlaceSummaryViewModelLine(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100150018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001500C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10015018C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100150234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001502E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001502FC);
}

uint64_t sub_1001502FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017660C(a1, a2, a3, type metadata accessor for PlaceSummaryViewModelLine);
}

uint64_t sub_100150314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100150328);
}

uint64_t sub_100150328(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10017670C(a1, a2, a3, a4, type metadata accessor for PlaceSummaryViewModelLine);
}

uint64_t _s4LineVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015CFA28);
}

uint64_t sub_100150360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001767E4(a1, a2, a3, type metadata accessor for PlaceSummaryViewModelLine);
}

ValueMetadata *_s23AutocompleteLoadingViewVMa()
{
  return &_s23AutocompleteLoadingViewVN;
}

uint64_t sub_100150388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_100150390()
{
  return sub_10018448C();
}

unint64_t *sub_10015039C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 8) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    unint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    unint64_t v11 = *a2;
    sub_10012E3D8(*a2);
    *a1 = v11;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 8) & ~v7, ((unint64_t)a2 + v7 + 8) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_1001504B0(unint64_t *a1, uint64_t a2)
{
  sub_10012E4B0(*a1);
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

unint64_t *sub_100150524(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  sub_10012E3D8(*a2);
  *a1 = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

unint64_t *sub_1001505AC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  sub_10012E3D8(*a2);
  unint64_t v7 = *a1;
  *a1 = v6;
  sub_10012E4B0(v7);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

unint64_t *sub_100150640(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6 = *a1;
  *a1 = *a2;
  sub_10012E4B0(v6);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1001506C8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7B) {
    unsigned int v7 = 123;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0x7B) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      int v15 = ((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7));
      unsigned int v16 = v15 ^ 0x7F;
      unsigned int v17 = 128 - v15;
      if (v16 >= 0x7B) {
        return 0;
      }
      else {
        return v17;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100150884(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7B) {
    unsigned int v8 = 123;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x100150AF8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0x7B)
        {
          unint64_t v20 = (unint64_t)&a1[v9 + 8] & ~v9;
          Swift::Int v21 = *(void (**)(unint64_t))(v6 + 56);
          v21(v20);
        }
        else
        {
          if (a2 > 0x7B)
          {
            unint64_t v19 = a2 - 124;
          }
          else
          {
            uint64_t v18 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
            unint64_t v19 = (v18 | (v18 << 57)) & 0xF000000000000007;
          }
          *(void *)a1 = v19;
        }
      }
      return;
  }
}

uint64_t _s13AccessoryViewVMa()
{
  return sub_1000F5520();
}

uint64_t sub_100150B38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100150B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100150C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100150D44(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      size_t v10 = (long long *)(v5 + 2);
      BOOL v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *BOOL v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  unint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    Swift::Int v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_100150F08()
{
  static Color.white.getter();
  uint64_t v0 = Color.opacity(_:)();
  uint64_t result = swift_release();
  qword_1016112E8 = v0;
  return result;
}

uint64_t sub_100150F50()
{
  uint64_t result = static Color.secondary.getter();
  qword_1016112F0 = result;
  return result;
}

uint64_t sub_100150F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015CFD80);
  __chkstk_darwin(v2 - 8);
  uint64_t v41 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v41 - v5;
  uint64_t v7 = _s10TitleLabelVMa(0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D0810);
  __chkstk_darwin(v14 - 8);
  BOOL v42 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v16 = *v1;
  if (!*v1) {
    goto LABEL_10;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v16;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  char v18 = v44;
  sub_100173DDC((uint64_t)v1, (uint64_t)v9, _s10TitleLabelVMa);
  if ((v18 & 1) == 0)
  {
    sub_100174240((uint64_t)v9, _s10TitleLabelVMa);
    goto LABEL_7;
  }
  sub_1000FF27C((uint64_t)&v9[*(int *)(v7 + 24)], (uint64_t)v6, &qword_1015CFD80);
  sub_100174240((uint64_t)v9, _s10TitleLabelVMa);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v20 = v19(v6, 1, v10);
  sub_1000FF2E0((uint64_t)v6, &qword_1015CFD80);
  if (v20 == 1)
  {
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, (char *)v1 + *(int *)(v7 + 20), v10);
    goto LABEL_8;
  }
  uint64_t v21 = v41;
  sub_1000FF27C((uint64_t)v1 + *(int *)(v7 + 24), v41, &qword_1015CFD80);
  if (v19((char *)v21, 1, v10) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v13, v21, v10);
LABEL_8:
    uint64_t v22 = Text.init(_:)();
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    static Font.headline.getter();
    uint64_t v27 = Text.font(_:)();
    uint64_t v29 = v28;
    char v31 = v30;
    swift_release();
    sub_10017F958(v22, v24, v26);
    swift_bridgeObjectRelease();
    static Color.primary.getter();
    uint64_t v32 = Text.foregroundColor(_:)();
    uint64_t v34 = v33;
    LOBYTE(v24) = v35;
    uint64_t v37 = v36;
    swift_release();
    sub_10017F958(v27, v29, v31 & 1);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v44 = v32;
    uint64_t v45 = v34;
    char v46 = v24 & 1;
    uint64_t v47 = v37;
    uint64_t v48 = KeyPath;
    uint64_t v49 = 1;
    char v50 = 0;
    sub_1000FF33C(&qword_1015D0818);
    sub_1001817C4(&qword_1015D0820, &qword_1015D0818, &qword_1015D0828, &qword_1015D0830);
    uint64_t v39 = (uint64_t)v42;
    View.accessibility(identifier:)();
    sub_10017F958(v32, v34, v24 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100101750(v39, v43, &qword_1015D0810);
  }
  __break(1u);
LABEL_10:
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100151494@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D0838);
  __chkstk_darwin(v3);
  uint64_t v55 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1000FF33C(&qword_1015D0840);
  __chkstk_darwin(v61);
  uint64_t v63 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D0848);
  __chkstk_darwin(v6);
  BOOL v59 = (uint64_t *)((char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v62 = sub_1000FF33C(&qword_1015D0850);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_1000FF33C(&qword_1015D0858);
  __chkstk_darwin(v58);
  uint64_t v56 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)_s5LabelVMa(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AttributedString();
  __n128 v14 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, __n128))(v16 + 16))((char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v1, v14);
  uint64_t v69 = Text.init(_:)();
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  LODWORD(v67) = v19;
  uint64_t v70 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  int v20 = *(void **)(v1 + v10[11]);
  if (v20)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v21 = v20;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v74 = v1;
    uint64_t v64 = a1;
    uint64_t v65 = v3;
    uint64_t v57 = v6;
    if (v75[0])
    {
      if (qword_1015CBB68 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1016112E8;
    }
    else
    {
      if (qword_1015CBB70 != -1) {
        swift_once();
      }
      uint64_t v22 = &qword_1016112F0;
    }
    uint64_t v66 = *v22;
    swift_retain();
    uint64_t v23 = swift_getKeyPath();
    uint64_t v24 = v74;
    char v25 = (uint64_t *)(v74 + v10[10]);
    uint64_t v26 = *v25;
    char v27 = *((unsigned char *)v25 + 8);
    uint64_t v28 = swift_getKeyPath();
    uint64_t v29 = *(void *)(v24 + v10[5] + 8);
    sub_100173DDC(v24, (uint64_t)v12, _s5LabelVMa);
    uint64_t v68 = v28;
    if (v29)
    {
      sub_100174240((uint64_t)v12, _s5LabelVMa);
LABEL_12:
      v76[0] = v69;
      v76[1] = v72;
      char v77 = v67 & 1;
      char v31 = v67 & 1;
      LODWORD(v67) = v67 & 1;
      uint64_t v78 = v73;
      __int16 v79 = 256;
      uint64_t v80 = KeyPath;
      uint64_t v81 = v70;
      uint64_t v82 = v23;
      uint64_t v83 = v66;
      uint64_t v84 = v28;
      uint64_t v85 = v26;
      char v86 = v27;
      uint64_t v32 = v69;
      uint64_t v33 = v72;
      sub_10017FDF0(v69, v72, v31);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v55 = (char *)static VerticalAlignment.center.getter();
      sub_1001521D0(v74, (uint64_t)v76, (uint64_t)v75);
      sub_10017F958(v32, v33, v67);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      long long v95 = *(_OWORD *)&v75[16];
      v96[0] = *(_OWORD *)&v75[18];
      *(_OWORD *)((char *)v96 + 9) = *(_OWORD *)((char *)&v75[19] + 1);
      long long v91 = *(_OWORD *)&v75[8];
      long long v92 = *(_OWORD *)&v75[10];
      long long v93 = *(_OWORD *)&v75[12];
      long long v94 = *(_OWORD *)&v75[14];
      long long v87 = *(_OWORD *)v75;
      long long v88 = *(_OWORD *)&v75[2];
      long long v89 = *(_OWORD *)&v75[4];
      long long v90 = *(_OWORD *)&v75[6];
      *(_OWORD *)&v97[119] = *(_OWORD *)&v75[14];
      *(_OWORD *)&v97[55] = *(_OWORD *)&v75[6];
      *(_OWORD *)&v97[135] = *(_OWORD *)&v75[16];
      *(_OWORD *)&v97[151] = v96[0];
      *(_OWORD *)&v97[160] = *(_OWORD *)((char *)&v75[19] + 1);
      *(_OWORD *)&v97[71] = *(_OWORD *)&v75[8];
      *(_OWORD *)&v97[87] = *(_OWORD *)&v75[10];
      *(_OWORD *)&v97[103] = *(_OWORD *)&v75[12];
      *(_OWORD *)&v97[7] = *(_OWORD *)v75;
      *(_OWORD *)&v97[23] = *(_OWORD *)&v75[2];
      *(_OWORD *)&v97[39] = *(_OWORD *)&v75[4];
      *(_OWORD *)((char *)&v75[16] + 1) = *(_OWORD *)&v97[112];
      *(_OWORD *)((char *)&v75[18] + 1) = *(_OWORD *)&v97[128];
      *(_OWORD *)((char *)&v75[20] + 1) = *(_OWORD *)&v97[144];
      *(_OWORD *)((char *)&v75[22] + 1) = *(_OWORD *)&v97[160];
      *(_OWORD *)((char *)&v75[8] + 1) = *(_OWORD *)&v97[48];
      *(_OWORD *)((char *)&v75[10] + 1) = *(_OWORD *)&v97[64];
      char v98 = 0;
      v75[0] = v55;
      v75[1] = 0x4010000000000000;
      LOBYTE(v75[2]) = 0;
      *(_OWORD *)((char *)&v75[12] + 1) = *(_OWORD *)&v97[80];
      *(_OWORD *)((char *)&v75[14] + 1) = *(_OWORD *)&v97[96];
      *(_OWORD *)((char *)&v75[2] + 1) = *(_OWORD *)v97;
      *(_OWORD *)((char *)&v75[4] + 1) = *(_OWORD *)&v97[16];
      *(_OWORD *)((char *)&v75[6] + 1) = *(_OWORD *)&v97[32];
      sub_100152970();
      sub_1000FF33C(&qword_1015D08C8);
      sub_1001010F8(&qword_1015D08C0, &qword_1015D08C8);
      uint64_t v34 = (uint64_t)v56;
      View.accessibility(identifier:)();
      swift_bridgeObjectRelease();
      sub_10017FF48((uint64_t)&v87);
      char v35 = &qword_1015D0858;
      sub_1000FF27C(v34, (uint64_t)v59, &qword_1015D0858);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D08D8);
      sub_10017FC74();
      sub_1001010F8(&qword_1015D08D0, &qword_1015D08D8);
      uint64_t v36 = (uint64_t)v60;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v36, v63, &qword_1015D0850);
      swift_storeEnumTagMultiPayload();
      sub_10017FBD4();
      sub_10017FD44();
      _ConditionalContent<>.init(storage:)();
      sub_10017F958(v69, v72, v67);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1000FF2E0(v36, &qword_1015D0850);
      uint64_t v37 = v34;
      return sub_1000FF2E0(v37, v35);
    }
    uint64_t v30 = *(void *)&v12[v10[8]];
    sub_100174240((uint64_t)v12, _s5LabelVMa);
    if (v30) {
      goto LABEL_12;
    }
    uint64_t v39 = *(char **)(v74 + v10[9]);
    if (!v39)
    {
      v75[0] = v69;
      v75[1] = v72;
      char v52 = v67 & 1;
      LOBYTE(v75[2]) = v67 & 1;
      v75[3] = v73;
      LOWORD(v75[4]) = 256;
      v75[5] = KeyPath;
      v75[6] = v70;
      uint64_t v54 = v23;
      v75[7] = v23;
      v75[8] = v66;
      v75[9] = v28;
      v75[10] = v26;
      LOBYTE(v75[11]) = v27;
      sub_100152970();
      sub_1000FF33C(&qword_1015D0860);
      sub_10017F9D4();
      uint64_t v53 = (uint64_t)v55;
      View.accessibility(identifier:)();
      swift_bridgeObjectRelease();
      char v35 = &qword_1015D0838;
      sub_1000FF27C(v53, v63, &qword_1015D0838);
      swift_storeEnumTagMultiPayload();
      sub_10017FBD4();
      sub_10017FD44();
      _ConditionalContent<>.init(storage:)();
      sub_10017F958(v69, v72, v52);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v37 = v53;
      return sub_1000FF2E0(v37, v35);
    }
    *(void *)&long long v87 = v69;
    uint64_t v56 = v39;
    *((void *)&v87 + 1) = v72;
    LOBYTE(v88) = v67 & 1;
    LODWORD(v55) = v67 & 1;
    *((void *)&v88 + 1) = v73;
    LOWORD(v89) = 256;
    *((void *)&v89 + 1) = KeyPath;
    *(void *)&long long v90 = v70;
    *((void *)&v90 + 1) = v23;
    *(void *)&long long v91 = v66;
    *((void *)&v91 + 1) = v28;
    *(void *)&long long v92 = v26;
    BYTE8(v92) = v27;
    uint64_t v40 = v69;
    sub_10017FDF0(v69, v72, v67 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v41 = (uint64_t)v56;
    swift_retain();
    uint64_t v67 = static VerticalAlignment.center.getter();
    sub_100152A40(v41, (uint64_t)&v87, (uint64_t)v75);
    uint64_t v42 = v40;
    LOBYTE(v40) = (_BYTE)v55;
    sub_10017F958(v42, v72, (char)v55);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)&v97[96] = *(_OWORD *)&v75[12];
    *(_OWORD *)&v97[112] = *(_OWORD *)&v75[14];
    *(_OWORD *)&v97[128] = *(_OWORD *)&v75[16];
    *(_OWORD *)&v97[137] = *(_OWORD *)((char *)&v75[17] + 1);
    *(_OWORD *)&v97[32] = *(_OWORD *)&v75[4];
    *(_OWORD *)&v97[48] = *(_OWORD *)&v75[6];
    *(_OWORD *)&v97[64] = *(_OWORD *)&v75[8];
    *(_OWORD *)&v97[80] = *(_OWORD *)&v75[10];
    *(_OWORD *)uint64_t v97 = *(_OWORD *)v75;
    *(_OWORD *)&v97[16] = *(_OWORD *)&v75[2];
    LOBYTE(v76[0]) = 0;
    *(_OWORD *)((char *)&v75[4] + 7) = *(_OWORD *)&v75[4];
    *(_OWORD *)((char *)&v75[12] + 7) = *(_OWORD *)&v75[12];
    long long v43 = *(_OWORD *)&v75[8];
    *(_OWORD *)((char *)&v75[6] + 7) = *(_OWORD *)&v97[48];
    *(_OWORD *)((char *)&v75[14] + 7) = *(_OWORD *)&v97[112];
    *(_OWORD *)((char *)&v75[16] + 7) = *(_OWORD *)&v97[128];
    *(_OWORD *)&v75[18] = *(_OWORD *)&v97[137];
    *(_OWORD *)((char *)&v75[8] + 7) = v43;
    *(_OWORD *)((char *)&v75[10] + 7) = *(_OWORD *)&v97[80];
    long long v44 = *(_OWORD *)&v75[2];
    *(_OWORD *)((char *)v75 + 7) = *(_OWORD *)v75;
    *(_OWORD *)((char *)&v75[2] + 7) = v44;
    uint64_t v45 = v59;
    *BOOL v59 = v67;
    v45[1] = 0x4010000000000000;
    *((unsigned char *)v45 + 16) = 0;
    long long v46 = *(_OWORD *)&v75[14];
    *(_OWORD *)((char *)v45 + 113) = *(_OWORD *)&v75[12];
    *(_OWORD *)((char *)v45 + 129) = v46;
    long long v47 = *(_OWORD *)&v75[18];
    *(_OWORD *)((char *)v45 + 145) = *(_OWORD *)&v75[16];
    *(_OWORD *)((char *)v45 + 161) = v47;
    long long v48 = *(_OWORD *)&v75[6];
    *(_OWORD *)((char *)v45 + 49) = *(_OWORD *)&v75[4];
    *(_OWORD *)((char *)v45 + 65) = v48;
    long long v49 = *(_OWORD *)&v75[10];
    *(_OWORD *)((char *)v45 + 81) = *(_OWORD *)&v75[8];
    *(_OWORD *)((char *)v45 + 97) = v49;
    long long v50 = *(_OWORD *)&v75[2];
    *(_OWORD *)((char *)v45 + 17) = *(_OWORD *)v75;
    *(_OWORD *)((char *)v45 + 33) = v50;
    swift_storeEnumTagMultiPayload();
    sub_10017FE00((uint64_t)v97);
    sub_1000FF33C(&qword_1015D08D8);
    sub_10017FC74();
    sub_1001010F8(&qword_1015D08D0, &qword_1015D08D8);
    uint64_t v51 = (uint64_t)v60;
    _ConditionalContent<>.init(storage:)();
    sub_1000FF27C(v51, v63, &qword_1015D0850);
    swift_storeEnumTagMultiPayload();
    sub_10017FBD4();
    sub_10017FD44();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    sub_10017F958(v69, v72, v40);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1000FF2E0(v51, &qword_1015D0850);
    return sub_10017FEA4((uint64_t)v97);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001521D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = _s5LabelVMa(0);
  if (*(void *)(a1 + *(int *)(v6 + 32)))
  {
    type metadata accessor for PlaceSummaryImageViewModel(0);
    sub_1001732B8(&qword_1015CFE80, (void (*)(uint64_t))type metadata accessor for PlaceSummaryImageViewModel);
    swift_retain_n();
    ObservedObject.init(wrappedValue:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    swift_retain();
    sub_1000FF33C(&qword_1015D08E8);
    sub_1000FF33C(&qword_1015D08F0);
    sub_10018601C(&qword_1015D08F8, &qword_1015D08E8, &qword_1015D0900, &qword_1015D0908);
    sub_100180144();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
LABEL_10:
    uint64_t v10 = v44;
    uint64_t v11 = v45;
    uint64_t v12 = v46;
    uint64_t v13 = v47;
    uint64_t v14 = v48;
    uint64_t v15 = v49;
    uint64_t v16 = v50;
    uint64_t v17 = v51;
    uint64_t v18 = v52;
    unsigned __int8 v19 = v53;
    goto LABEL_11;
  }
  uint64_t v7 = (int *)v6;
  if (!*(void *)(a1 + *(int *)(v6 + 20) + 8))
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    unsigned __int8 v19 = -1;
LABEL_11:
    unsigned __int8 v34 = v19;
    uint64_t v35 = v18;
    uint64_t v20 = *(void *)a2;
    uint64_t v21 = *(void *)(a2 + 8);
    uint64_t v23 = *(void *)(a2 + 24);
    char v24 = *(unsigned char *)(a2 + 32);
    char v25 = *(unsigned char *)(a2 + 33);
    uint64_t v26 = *(void *)(a2 + 40);
    uint64_t v27 = *(void *)(a2 + 48);
    uint64_t v28 = *(void *)(a2 + 56);
    uint64_t v29 = *(void *)(a2 + 64);
    uint64_t v31 = *(void *)(a2 + 72);
    uint64_t v30 = *(void *)(a2 + 80);
    char v22 = *(unsigned char *)(a2 + 16);
    char v43 = *(unsigned char *)(a2 + 88);
    *(void *)a3 = v10;
    *(void *)(a3 + 8) = v11;
    *(void *)(a3 + 16) = v12;
    *(void *)(a3 + 24) = v13;
    *(void *)(a3 + 32) = v14;
    *(void *)(a3 + 40) = v15;
    *(void *)(a3 + 48) = v16;
    *(void *)(a3 + 56) = v17;
    *(void *)(a3 + 64) = v18;
    *(unsigned char *)(a3 + 72) = v19;
    *(void *)(a3 + 80) = v20;
    *(void *)(a3 + 88) = v21;
    *(unsigned char *)(a3 + 96) = v22;
    *(void *)(a3 + 104) = v23;
    *(unsigned char *)(a3 + 112) = v24;
    *(unsigned char *)(a3 + 113) = v25;
    *(void *)(a3 + 120) = v26;
    *(void *)(a3 + 128) = v27;
    *(void *)(a3 + 136) = v28;
    *(void *)(a3 + 144) = v29;
    *(void *)(a3 + 152) = v31;
    *(void *)(a3 + 160) = v30;
    *(unsigned char *)(a3 + 168) = v43;
    uint64_t v32 = v10;
    uint64_t v41 = v12;
    uint64_t v42 = v11;
    uint64_t v39 = v14;
    uint64_t v40 = v13;
    uint64_t v37 = v16;
    uint64_t v38 = v15;
    uint64_t v36 = v17;
    sub_1001800A8(v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    sub_10017FDF0(v20, v21, v22);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017FDF0(v20, v21, v22);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v20, v21, v22);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_100180010(v32, v42, v41, v40, v39, v38, v37, v36, v35, v34);
  }
  swift_bridgeObjectRetain();
  Image.init(_internalSystemName:)();
  static Font.caption.getter();
  swift_getKeyPath();
  uint64_t v8 = *(void **)(a1 + v7[11]);
  if (v8)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v44) {
      static Color.white.getter();
    }
    else {
      sub_1001527F0(*(void *)(a1 + v7[6]), *(void *)(a1 + v7[7]));
    }
    swift_getKeyPath();
    sub_1000FF33C(&qword_1015D08E8);
    sub_1000FF33C(&qword_1015D08F0);
    sub_10018601C(&qword_1015D08F8, &qword_1015D08E8, &qword_1015D0900, &qword_1015D0908);
    sub_100180144();
    _ConditionalContent<>.init(storage:)();
    goto LABEL_10;
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001526F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  type metadata accessor for PlaceSummaryImageViewModel(0);
  sub_1001732B8(&qword_1015CFE80, (void (*)(uint64_t))type metadata accessor for PlaceSummaryImageViewModel);
  *(void *)a3 = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 8) = v8;
  *(double *)(a3 + 16) = a4;
  uint64_t v9 = a3 + *(int *)(_s9ImageViewVMa() + 40);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);

  return v10(v9, a1, a2);
}

uint64_t sub_1001527F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorScheme();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - v9;
  _s5LabelVMa(0);
  sub_1001272E8((uint64_t)v10);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4);
  char v11 = static ColorScheme.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  if ((v11 & 1) == 0 || !a2)
  {
    a2 = a1;
    if (!a1) {
      a2 = static Color.secondary.getter();
    }
  }
  swift_retain();
  return a2;
}

unint64_t sub_100152970()
{
  uint64_t v1 = _s5LabelVMa(0);
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(v1 + 20));
  uint64_t v3 = (void *)v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    v5._uint64_t countAndFlagsBits = v4;
    v5._object = v3;
    String.append(_:)(v5);
    return 0xD00000000000001ALL;
  }
  else if (*(void *)(v0 + *(int *)(v1 + 32)))
  {
    return 0xD00000000000001ALL;
  }
  else
  {
    return 0xD000000000000011;
  }
}

uint64_t sub_100152A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  type metadata accessor for PlaceSummaryStackedImageViewModel(0);
  sub_1001732B8(&qword_1015D0928, (void (*)(uint64_t))type metadata accessor for PlaceSummaryStackedImageViewModel);
  swift_retain();
  uint64_t v6 = ObservedObject.init(wrappedValue:)();
  uint64_t v20 = v7;
  uint64_t v21 = v6;
  sub_100152C84(a1);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v8 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 33);
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v16 = *(void *)(a2 + 64);
  uint64_t v18 = *(void *)(a2 + 72);
  uint64_t v17 = *(void *)(a2 + 80);
  char v28 = *(unsigned char *)(a2 + 16);
  char v27 = *(unsigned char *)(a2 + 88);
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v20;
  *(void *)(a3 + 16) = v22;
  *(unsigned char *)(a3 + 24) = v23;
  *(void *)(a3 + 32) = v24;
  *(unsigned char *)(a3 + 40) = v25;
  *(_OWORD *)(a3 + 48) = v26;
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = v9;
  *(unsigned char *)(a3 + 80) = v28;
  *(void *)(a3 + 88) = v10;
  *(unsigned char *)(a3 + 96) = v11;
  *(unsigned char *)(a3 + 97) = v12;
  *(void *)(a3 + 104) = v13;
  *(void *)(a3 + 112) = v14;
  *(void *)(a3 + 120) = v15;
  *(void *)(a3 + 128) = v16;
  *(void *)(a3 + 136) = v18;
  *(void *)(a3 + 144) = v17;
  *(unsigned char *)(a3 + 152) = v27;
  swift_retain();
  sub_10017FDF0(v8, v9, v28);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017FDF0(v8, v9, v28);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017F958(v8, v9, v28);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100152C84(uint64_t result)
{
  unint64_t v1 = *(void *)(result + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel_imageSpecs);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (__OFSUB__(v4, 1)) {
        goto LABEL_10;
      }
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_3:
      if ((unint64_t)(v2 - 0x800000000000000) >> 60 == 15) {
        return result;
      }
      __break(1u);
LABEL_10:
      __break(1u);
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_100152D80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = _s4LineVMa(0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v30 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = sub_1000FF33C(&qword_1015CFAE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000FF33C(&qword_1015CFAE8);
  __chkstk_darwin(v35);
  uint64_t v31 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v32 = (uint64_t)&v30 - v9;
  uint64_t v33 = sub_1000FF33C(&qword_1015CFAF0);
  __chkstk_darwin(v33);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1000FF33C(&qword_1015CFAF8);
  __chkstk_darwin(v34);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = sub_10015332C(v1);
  uint64_t v22 = v21;
  if (v21[2] == 1)
  {
    sub_100173DDC((uint64_t)v21 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), (uint64_t)v17, type metadata accessor for PlaceSummaryViewModelUnit);
    swift_bridgeObjectRelease();
    sub_100173E44((uint64_t)v17, (uint64_t)v20, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_100153840((uint64_t)v20, (uint64_t)v13);
    sub_1000FF27C((uint64_t)v13, (uint64_t)v11, &qword_1015CFAF8);
    swift_storeEnumTagMultiPayload();
    sub_100172F20();
    sub_100173D3C();
    _ConditionalContent<>.init(storage:)();
    sub_1000FF2E0((uint64_t)v13, &qword_1015CFAF8);
    return sub_100174240((uint64_t)v20, type metadata accessor for PlaceSummaryViewModelUnit);
  }
  else
  {
    *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
    *((void *)v6 + 1) = 0;
    v6[16] = 0;
    sub_1000FF33C(&qword_1015CFB00);
    uint64_t v37 = v22;
    sub_100173DDC(v1, (uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), _s4LineVMa);
    unint64_t v24 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v25 = swift_allocObject();
    sub_100173E44((uint64_t)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, _s4LineVMa);
    sub_1000FF33C(&qword_1015CFB08);
    type metadata accessor for UUID();
    sub_1001010F8(&qword_1015CFB10, &qword_1015CFB08);
    sub_100172F20();
    sub_1001732B8(&qword_1015CFCA8, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelUnit);
    ForEach<>.init(_:content:)();
    uint64_t v26 = v31;
    sub_1000FF27C((uint64_t)v6, v31, &qword_1015CFAE0);
    uint64_t v27 = v26 + *(int *)(v35 + 36);
    *(void *)uint64_t v27 = 0xD000000000000010;
    *(void *)(v27 + 8) = 0x8000000100F77DA0;
    *(unsigned char *)(v27 + 16) = 9;
    sub_1000FF2E0((uint64_t)v6, &qword_1015CFAE0);
    uint64_t v28 = v26;
    uint64_t v29 = v32;
    sub_100101750(v28, v32, &qword_1015CFAE8);
    sub_1000FF27C(v29, (uint64_t)v11, &qword_1015CFAE8);
    swift_storeEnumTagMultiPayload();
    sub_100173D3C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000FF2E0(v29, &qword_1015CFAE8);
  }
}

void *sub_10015332C(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v40 - v6;
  uint64_t v42 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v8 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v40 - v14;
  __chkstk_darwin(v16);
  uint64_t v57 = (uint64_t)&v40 - v17;
  uint64_t v41 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v52 = *(int *)(v41 + 20);
  uint64_t v18 = *(void *)(a1 + v52);
  uint64_t v49 = *(void *)(v18 + 16);
  if (v49)
  {
    unint64_t v50 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v48 = v18 + v50;
    uint64_t v19 = (void (**)(char *, uint64_t))(v2 + 8);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v21 = 0;
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v45 = v8;
    uint64_t v46 = a1;
    uint64_t v44 = v15;
    uint64_t v47 = v18;
    while (v21 < *(void *)(v18 + 16))
    {
      uint64_t v23 = *(void *)(v8 + 72);
      unint64_t v53 = v21;
      uint64_t v56 = v23;
      uint64_t v24 = v48 + v23 * v21;
      uint64_t v25 = v57;
      sub_100173DDC(v24, v57, type metadata accessor for PlaceSummaryViewModelUnit);
      sub_100173DDC(v25, (uint64_t)v15, type metadata accessor for PlaceSummaryViewModelUnit);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)sub_1001D00BC(0, v22[2] + 1, 1, (unint64_t)v22);
      }
      unint64_t v27 = v22[2];
      unint64_t v26 = v22[3];
      if (v27 >= v26 >> 1) {
        uint64_t v22 = (void *)sub_1001D00BC(v26 > 1, v27 + 1, 1, (unint64_t)v22);
      }
      v22[2] = v27 + 1;
      unint64_t v28 = v50;
      uint64_t v54 = v22;
      sub_100173E44((uint64_t)v15, (uint64_t)v22 + v50 + v27 * v56, type metadata accessor for PlaceSummaryViewModelUnit);
      uint64_t v29 = *(void *)(a1 + v52);
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v31 = v29 + v28;
        uint64_t v51 = *(void *)(a1 + v52);
        swift_bridgeObjectRetain();
        uint64_t v32 = 0;
        while (1)
        {
          sub_100173DDC(v31, (uint64_t)v12, type metadata accessor for PlaceSummaryViewModelUnit);
          sub_1001A4F6C((uint64_t)v7);
          sub_1001A4F6C((uint64_t)v4);
          char v33 = static UUID.== infix(_:_:)();
          uint64_t v34 = *v19;
          uint64_t v35 = v55;
          (*v19)(v4, v55);
          v34(v7, v35);
          sub_100174240((uint64_t)v12, type metadata accessor for PlaceSummaryViewModelUnit);
          if (v33) {
            break;
          }
          ++v32;
          v31 += v56;
          if (v30 == v32)
          {
            swift_bridgeObjectRelease();
            a1 = v46;
LABEL_3:
            uint64_t v15 = v44;
            uint64_t v8 = v45;
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRelease();
        a1 = v46;
        if (v32 >= *(void *)(*(void *)(v46 + v52) + 16) - 1) {
          goto LABEL_3;
        }
        char v36 = *(unsigned char *)(v46 + *(int *)(v41 + 28));
        uint64_t v37 = v43;
        UUID.init()();
        *(unsigned char *)(v37 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0) + 20)) = (v36 & 1) == 0;
        swift_storeEnumTagMultiPayload();
        uint64_t v22 = v54;
        unint64_t v39 = v54[2];
        unint64_t v38 = v54[3];
        uint64_t v15 = v44;
        uint64_t v8 = v45;
        if (v39 >= v38 >> 1) {
          uint64_t v22 = (void *)sub_1001D00BC(v38 > 1, v39 + 1, 1, (unint64_t)v54);
        }
        v22[2] = v39 + 1;
        sub_100173E44(v43, (uint64_t)v22 + v50 + v39 * v56, type metadata accessor for PlaceSummaryViewModelUnit);
        uint64_t v18 = v47;
      }
      else
      {
LABEL_4:
        uint64_t v18 = v47;
        uint64_t v22 = v54;
      }
      unint64_t v21 = v53 + 1;
      uint64_t result = (void *)sub_100174240(v57, type metadata accessor for PlaceSummaryViewModelUnit);
      if (v21 == v49)
      {
        swift_bridgeObjectRelease();
        return v22;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

id *sub_100153840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v424 = a1;
  uint64_t v428 = a2;
  uint64_t v352 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
  __chkstk_darwin(v352);
  uint64_t v389 = (uint64_t)&v323 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v387 = _s28RealTimeAvailableChargerViewVMa(0);
  __chkstk_darwin(v387);
  v358 = (uint64_t *)((char *)&v323 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v405 = sub_1000FF33C(&qword_1015CFCC8);
  __chkstk_darwin(v405);
  v407 = (_OWORD *)((char *)&v323 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v385 = sub_1000FF33C(&qword_1015CFCD0);
  __chkstk_darwin(v385);
  uint64_t v386 = (uint64_t)&v323 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v406 = sub_1000FF33C(&qword_1015CFC68);
  __chkstk_darwin(v406);
  v388 = (char *)&v323 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v417 = sub_1000FF33C(&qword_1015CFC58);
  __chkstk_darwin(v417);
  v408 = (char *)&v323 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v384 = _s5HoursVMa(0);
  __chkstk_darwin(v384);
  v357 = (char *)&v323 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v348 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
  __chkstk_darwin(v348);
  uint64_t v355 = (uint64_t)&v323 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v382 = _s9DelimiterVMa(0);
  __chkstk_darwin(v382);
  v356 = (uint64_t *)((char *)&v323 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v345 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
  __chkstk_darwin(v345);
  uint64_t v354 = (uint64_t)&v323 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v379 = sub_1000FF33C(&qword_1015CFCD8);
  __chkstk_darwin(v379);
  uint64_t v381 = (uint64_t)&v323 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v403 = sub_1000FF33C(&qword_1015CFC38);
  __chkstk_darwin(v403);
  v383 = (char *)&v323 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v380 = _s13TappableEntryVMa(0);
  __chkstk_darwin(v380);
  v351 = (uint64_t *)((char *)&v323 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v341 = (uint64_t)&v323 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v350 = (uint64_t)&v323 - v18;
  uint64_t v412 = sub_1000FF33C(&qword_1015CFCE0);
  __chkstk_darwin(v412);
  uint64_t v414 = (uint64_t)&v323 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v399 = sub_1000FF33C(&qword_1015CFCE8);
  __chkstk_darwin(v399);
  v400 = (Swift::String *)((char *)&v323 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v413 = sub_1000FF33C(&qword_1015CFC08);
  __chkstk_darwin(v413);
  v404 = (char *)&v323 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v422 = sub_1000FF33C(&qword_1015CFBF8);
  __chkstk_darwin(v422);
  v418 = (char *)&v323 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0);
  __chkstk_darwin(v337);
  uint64_t v346 = (uint64_t)&v323 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
  __chkstk_darwin(v335);
  uint64_t v349 = (uint64_t)&v323 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = sub_1000FF33C(&qword_1015CFCF0);
  __chkstk_darwin(v375);
  v377 = (Swift::String *)((char *)&v323 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v402 = sub_1000FF33C(&qword_1015CFBD8);
  __chkstk_darwin(v402);
  v378 = (char *)&v323 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v376 = _s17ThirdPartyRatingsVMa(0);
  __chkstk_darwin(v376);
  v347 = (uint64_t *)((char *)&v323 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  __chkstk_darwin(v28 - 8);
  uint64_t v344 = (uint64_t)&v323 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PartyRatingsVMa = _s17FirstPartyRatingsVMa(0);
  __chkstk_darwin(PartyRatingsVMa);
  v343 = (uint64_t *)((char *)&v323 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
  __chkstk_darwin(PartyRatings);
  uint64_t v342 = (uint64_t)&v323 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = sub_1000FF33C(&qword_1015CFCF8);
  __chkstk_darwin(v395);
  uint64_t v398 = (uint64_t)&v323 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = sub_1000FF33C(&qword_1015CFD00);
  __chkstk_darwin(v371);
  uint64_t v372 = (uint64_t)&v323 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v397 = sub_1000FF33C(&qword_1015CFBB8);
  __chkstk_darwin(v397);
  v373 = (char *)&v323 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v416 = (id)sub_1000FF33C(&qword_1015CFBA8);
  __chkstk_darwin(v416);
  v401 = (char *)&v323 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = _s18UserGeneratedGuideVMa(0);
  __chkstk_darwin(v370);
  v340 = (uint64_t *)((char *)&v323 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  __chkstk_darwin(v37 - 8);
  uint64_t v330 = (uint64_t)&v323 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v338 = (uint64_t)&v323 - v40;
  uint64_t v369 = _s18SingleCuratedGuideVMa(0);
  __chkstk_darwin(v369);
  v339 = (uint64_t *)((char *)&v323 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  __chkstk_darwin(v42 - 8);
  uint64_t v329 = (uint64_t)&v323 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v336 = (uint64_t)&v323 - v45;
  uint64_t v363 = sub_1000FF33C(&qword_1015CFD08);
  __chkstk_darwin(v363);
  uint64_t v366 = (uint64_t)&v323 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v396 = sub_1000FF33C(&qword_1015CFB88);
  __chkstk_darwin(v396);
  v368 = (char *)&v323 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v364 = _s26MultipleCuratedCollectionsVMa(0);
  __chkstk_darwin(v364);
  uint64_t v333 = (uint64_t)&v323 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  __chkstk_darwin(v49 - 8);
  uint64_t v327 = (uint64_t)&v323 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v332 = (uint64_t)&v323 - v52;
  uint64_t v53 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v53 - 8);
  v326 = (char *)&v323 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v325 = type metadata accessor for PlaceSummaryViewModelUnit.Distance(0);
  __chkstk_darwin(v325);
  uint64_t v331 = (uint64_t)&v323 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v425 = sub_1000FF33C(&qword_1015CFD10);
  __chkstk_darwin(v425);
  v427 = (uint64_t *)((char *)&v323 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v419 = sub_1000FF33C(&qword_1015CFD18);
  __chkstk_darwin(v419);
  uint64_t v421 = (uint64_t)&v323 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = sub_1000FF33C(&qword_1015CFD20);
  __chkstk_darwin(v409);
  uint64_t v411 = (uint64_t)&v323 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v391 = sub_1000FF33C(&qword_1015CFD28);
  __chkstk_darwin(v391);
  uint64_t v393 = (uint64_t)&v323 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v362 = sub_1000FF33C(&qword_1015CFD30);
  __chkstk_darwin(v362);
  uint64_t v365 = (uint64_t)&v323 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v392 = sub_1000FF33C(&qword_1015CFB58);
  __chkstk_darwin(v392);
  v367 = (char *)&v323 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v410 = sub_1000FF33C(&qword_1015CFB48);
  __chkstk_darwin(v410);
  v394 = (char *)&v323 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v420 = sub_1000FF33C(&qword_1015CFB38);
  __chkstk_darwin(v420);
  v415 = (char *)&v323 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v426 = sub_1000FF33C(&qword_1015CFB28);
  __chkstk_darwin(v426);
  v423 = (char *)&v323 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for AttributedString();
  uint64_t v390 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)&v323 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = _s5LabelVMa(0);
  __chkstk_darwin(v361);
  v359 = (char *)&v323 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1000FF33C(&qword_1015CFD38);
  __chkstk_darwin(v69);
  uint64_t v71 = (char *)&v323 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = _s10TitleLabelVMa(0);
  __chkstk_darwin(v324);
  uint64_t v73 = (uint64_t *)((char *)&v323 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v360 = sub_1000FF33C(&qword_1015CFB68);
  __chkstk_darwin(v360);
  v328 = (char *)&v323 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  __chkstk_darwin(v75);
  char v77 = (char *)&v323 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  __chkstk_darwin(v78);
  uint64_t v80 = (uint64_t *)((char *)&v323 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100173DDC(v424, (uint64_t)v80, type metadata accessor for PlaceSummaryViewModelUnit);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v89 = v331;
      sub_100173E44((uint64_t)v80, v331, type metadata accessor for PlaceSummaryViewModelUnit.Distance);
      swift_bridgeObjectRetain();
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v90 = EnvironmentObject.init()();
      uint64_t v92 = v91;
      uint64_t KeyPath = swift_getKeyPath();
      long long v94 = (int *)v361;
      uint64_t v95 = (uint64_t)v359;
      *(void *)&v359[*(int *)(v361 + 48)] = KeyPath;
      sub_1000FF33C(&qword_1015CE6F8);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, char *, uint64_t))(v390 + 32))(v95, v67, v65);
      Swift::Int v96 = (void *)(v95 + v94[5]);
      *Swift::Int v96 = 0;
      v96[1] = 0;
      *(void *)(v95 + v94[6]) = 0;
      *(void *)(v95 + v94[7]) = 0;
      *(void *)(v95 + v94[8]) = 0;
      *(void *)(v95 + v94[9]) = 0;
      uint64_t v97 = v95 + v94[10];
      *(void *)uint64_t v97 = 1;
      *(unsigned char *)(v97 + 8) = 0;
      char v98 = (uint64_t *)(v95 + v94[11]);
      *char v98 = v90;
      v98[1] = v92;
      sub_100173DDC(v95, v365, _s5LabelVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001731BC();
      sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
      uint64_t v99 = (uint64_t)v367;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v99, v393, &qword_1015CFB58);
      swift_storeEnumTagMultiPayload();
      sub_100173110();
      sub_100173320();
      uint64_t v100 = (uint64_t)v394;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v99, &qword_1015CFB58);
      sub_1000FF27C(v100, v411, &qword_1015CFB48);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v101 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v100, &qword_1015CFB48);
      sub_1000FF27C(v101, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v102 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v101, &qword_1015CFB38);
      sub_1000FF27C(v102, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v102, &qword_1015CFB28);
      sub_100174240(v95, _s5LabelVMa);
      v103 = type metadata accessor for PlaceSummaryViewModelUnit.Distance;
      uint64_t v104 = v89;
      return (id *)sub_100174240(v104, v103);
    case 2u:
      uint64_t v88 = v332;
      sub_100173E44((uint64_t)v80, v332, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
      uint64_t v105 = v327;
      sub_100173DDC(v88, v327, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v106 = EnvironmentObject.init()();
      uint64_t v108 = v107;
      uint64_t v109 = swift_getKeyPath();
      uint64_t v110 = v333;
      sub_100158984(v106, v108, v109, 0, 0, v105, v333);
      sub_100173DDC(v110, v366, _s26MultipleCuratedCollectionsVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFB90, (void (*)(uint64_t))_s26MultipleCuratedCollectionsVMa);
      sub_1001732B8(&qword_1015CFB98, (void (*)(uint64_t))_s18SingleCuratedGuideVMa);
      uint64_t v111 = (uint64_t)v368;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v111, v393, &qword_1015CFB88);
      swift_storeEnumTagMultiPayload();
      sub_100173110();
      sub_100173320();
      uint64_t v112 = (uint64_t)v394;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v111, &qword_1015CFB88);
      sub_1000FF27C(v112, v411, &qword_1015CFB48);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v113 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v112, &qword_1015CFB48);
      sub_1000FF27C(v113, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v114 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v113, &qword_1015CFB38);
      sub_1000FF27C(v114, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v114, &qword_1015CFB28);
      sub_100174240(v110, _s26MultipleCuratedCollectionsVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides;
      goto LABEL_38;
    case 3u:
      uint64_t v88 = v336;
      sub_100173E44((uint64_t)v80, v336, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      uint64_t v116 = v329;
      sub_100173DDC(v88, v329, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v117 = EnvironmentObject.init()();
      uint64_t v119 = v118;
      uint64_t v120 = swift_getKeyPath();
      uint64_t v121 = (uint64_t)v339;
      uint64_t *v339 = v117;
      *(void *)(v121 + 8) = v119;
      *(void *)(v121 + 16) = v120;
      *(void *)(v121 + 24) = 0;
      *(unsigned char *)(v121 + 32) = 0;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v122.super.Class isa = (Class)qword_101611820;
      v453._Swift::String countAndFlagsBits = 0xD00000000000004FLL;
      v453._object = (void *)0x8000000100F78050;
      v123._Swift::String countAndFlagsBits = 0x402520776F6853;
      v123._object = (void *)0xE700000000000000;
      v124._Swift::String countAndFlagsBits = 0;
      v124._object = (void *)0xE000000000000000;
      *(Swift::String *)(v121 + 40) = NSLocalizedString(_:tableName:bundle:value:comment:)(v123, (Swift::String_optional)0, (NSBundle)qword_101611820, v124, v453);
      v454._object = (void *)0x8000000100F780A0;
      v125._Swift::String countAndFlagsBits = 0x5020739980E24025;
      v125._object = (void *)0xAB000000006B6369;
      v126._Swift::String countAndFlagsBits = 0;
      v126._object = (void *)0xE000000000000000;
      v454._Swift::String countAndFlagsBits = 0x1000000000000048;
      *(Swift::String *)(v121 + 56) = NSLocalizedString(_:tableName:bundle:value:comment:)(v125, (Swift::String_optional)0, v122, v126, v454);
      uint64_t v127 = v369;
      sub_100173E44(v116, v121 + *(int *)(v369 + 32), type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      uint64_t v128 = *(int *)(v127 + 36);
      *(unsigned char *)(v121 + v128) = MapsFeature_IsEnabled_SearchAndDiscovery();
      *(void *)(v121 + *(int *)(v127 + 40)) = 0x4008000000000000;
      sub_100173DDC(v121, v366, _s18SingleCuratedGuideVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFB90, (void (*)(uint64_t))_s26MultipleCuratedCollectionsVMa);
      sub_1001732B8(&qword_1015CFB98, (void (*)(uint64_t))_s18SingleCuratedGuideVMa);
      uint64_t v129 = (uint64_t)v368;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v129, v393, &qword_1015CFB88);
      swift_storeEnumTagMultiPayload();
      sub_100173110();
      sub_100173320();
      uint64_t v130 = (uint64_t)v394;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v129, &qword_1015CFB88);
      sub_1000FF27C(v130, v411, &qword_1015CFB48);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v131 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v130, &qword_1015CFB48);
      sub_1000FF27C(v131, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v132 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v131, &qword_1015CFB38);
      sub_1000FF27C(v132, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v132, &qword_1015CFB28);
      sub_100174240(v121, _s18SingleCuratedGuideVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide;
      goto LABEL_38;
    case 4u:
      uint64_t v88 = v338;
      sub_100173E44((uint64_t)v80, v338, type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      uint64_t v133 = v330;
      sub_100173DDC(v88, v330, type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v134 = EnvironmentObject.init()();
      uint64_t v136 = v135;
      uint64_t v137 = swift_getKeyPath();
      uint64_t v138 = (uint64_t)v340;
      uint64_t *v340 = v134;
      *(void *)(v138 + 8) = v136;
      *(void *)(v138 + 16) = v137;
      *(void *)(v138 + 24) = 0;
      *(unsigned char *)(v138 + 32) = 0;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v455._Swift::String countAndFlagsBits = 0xD000000000000056;
      v455._object = (void *)0x8000000100F77FF0;
      v139._Swift::String countAndFlagsBits = 0x402520776F6853;
      v139._object = (void *)0xE700000000000000;
      v140._Swift::String countAndFlagsBits = 0;
      v140._object = (void *)0xE000000000000000;
      *(Swift::String *)(v138 + 40) = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, (Swift::String_optional)0, (NSBundle)qword_101611820, v140, v455);
      sub_100173E44(v133, v138 + *(int *)(v370 + 28), type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      sub_100173DDC(v138, v372, _s18UserGeneratedGuideVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFBC0, (void (*)(uint64_t))_s18UserGeneratedGuideVMa);
      sub_1001732B8(&qword_1015CFBC8, (void (*)(uint64_t))_s17FirstPartyRatingsVMa);
      uint64_t v141 = (uint64_t)v373;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v141, v398, &qword_1015CFBB8);
      swift_storeEnumTagMultiPayload();
      sub_1001734B8();
      sub_1001735D4();
      uint64_t v142 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v141, &qword_1015CFBB8);
      sub_1000FF27C(v142, v411, &qword_1015CFBA8);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v143 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v142, &qword_1015CFBA8);
      sub_1000FF27C(v143, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v144 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v143, &qword_1015CFB38);
      sub_1000FF27C(v144, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v144, &qword_1015CFB28);
      sub_100174240(v138, _s18UserGeneratedGuideVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide;
      goto LABEL_38;
    case 5u:
      uint64_t v88 = v342;
      sub_100173E44((uint64_t)v80, v342, type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings);
      uint64_t v145 = PartyRatings;
      id v146 = *(id *)(v88 + *(int *)(PartyRatings + 24));
      uint64_t v147 = Color.init(uiColor:)();
      uint64_t v148 = *(void *)(v88 + *(int *)(v145 + 20));
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v149 = EnvironmentObject.init()();
      uint64_t v150 = (uint64_t)v343;
      uint64_t *v343 = v149;
      *(void *)(v150 + 8) = v151;
      v152 = (int *)PartyRatingsVMa;
      v438._Swift::String countAndFlagsBits = 0x4010000000000000;
      sub_1001742F4();
      ScaledMetric.init(wrappedValue:)();
      v153 = (Swift::String *)(v150 + v152[6]);
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v456._object = (void *)0xE900000000000064;
      v154._Swift::String countAndFlagsBits = 0x6E656D6D6F636552;
      v154._object = (void *)0xEF5D4347555B2064;
      v155._Swift::String countAndFlagsBits = 0x6E656D6D6F636552;
      v155._object = (void *)0xE900000000000064;
      v456._Swift::String countAndFlagsBits = 0x6E656D6D6F636552;
      Swift::String *v153 = NSLocalizedString(_:tableName:bundle:value:comment:)(v154, (Swift::String_optional)0, (NSBundle)qword_101611820, v155, v456);
      *(void *)(v150 + v152[7]) = v147;
      *(void *)(v150 + v152[8]) = v148;
      uint64_t v156 = v152[9];
      *(unsigned char *)(v150 + v156) = MapsFeature_IsEnabled_SearchAndDiscovery();
      sub_100173DDC(v150, v372, _s17FirstPartyRatingsVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFBC0, (void (*)(uint64_t))_s18UserGeneratedGuideVMa);
      sub_1001732B8(&qword_1015CFBC8, (void (*)(uint64_t))_s17FirstPartyRatingsVMa);
      uint64_t v157 = (uint64_t)v373;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v157, v398, &qword_1015CFBB8);
      swift_storeEnumTagMultiPayload();
      sub_1001734B8();
      sub_1001735D4();
      uint64_t v158 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v157, &qword_1015CFBB8);
      sub_1000FF27C(v158, v411, &qword_1015CFBA8);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v159 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v158, &qword_1015CFBA8);
      sub_1000FF27C(v159, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v160 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v159, &qword_1015CFB38);
      sub_1000FF27C(v160, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v160, &qword_1015CFB28);
      sub_100174240(v150, _s17FirstPartyRatingsVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings;
      goto LABEL_38;
    case 6u:
      uint64_t v88 = v344;
      sub_100173E44((uint64_t)v80, v344, type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings);
      uint64_t v161 = v376;
      v162 = v347;
      sub_100173DDC(v88, (uint64_t)v347 + *(int *)(v376 + 28), type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t *v162 = EnvironmentObject.init()();
      v162[1] = v163;
      v438._Swift::String countAndFlagsBits = 0x4010000000000000;
      sub_1001742F4();
      ScaledMetric.init(wrappedValue:)();
      v164 = (Swift::String *)((char *)v162 + *(int *)(v161 + 24));
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v457._Swift::String countAndFlagsBits = 0xD00000000000005ELL;
      v457._object = (void *)0x8000000100F77F90;
      v165._Swift::String countAndFlagsBits = 0x4025206E6FLL;
      v165._object = (void *)0xE500000000000000;
      v166._Swift::String countAndFlagsBits = 0;
      v166._object = (void *)0xE000000000000000;
      Swift::String *v164 = NSLocalizedString(_:tableName:bundle:value:comment:)(v165, (Swift::String_optional)0, (NSBundle)qword_101611820, v166, v457);
      uint64_t v167 = *(int *)(v161 + 32);
      *((unsigned char *)v162 + v167) = MapsFeature_IsEnabled_SearchAndDiscovery();
      sub_100173DDC((uint64_t)v162, (uint64_t)v377, _s17ThirdPartyRatingsVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFBE0, (void (*)(uint64_t))_s17ThirdPartyRatingsVMa);
      sub_1001736A0();
      uint64_t v168 = (uint64_t)v378;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v168, v398, &qword_1015CFBD8);
      swift_storeEnumTagMultiPayload();
      sub_1001734B8();
      sub_1001735D4();
      uint64_t v169 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v168, &qword_1015CFBD8);
      sub_1000FF27C(v169, v411, &qword_1015CFBA8);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v170 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v169, &qword_1015CFBA8);
      sub_1000FF27C(v170, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v171 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v170, &qword_1015CFB38);
      sub_1000FF27C(v171, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v171, &qword_1015CFB28);
      sub_100174240((uint64_t)v162, _s17ThirdPartyRatingsVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings;
      goto LABEL_38;
    case 7u:
      uint64_t v172 = v349;
      sub_100173E44((uint64_t)v80, v349, type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations);
      char v173 = *(unsigned char *)(v172 + *(int *)(v335 + 20));
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      v174 = (void *)EnvironmentObject.init()();
      v176 = v175;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v177.super.Class isa = (Class)qword_101611820;
      v178._Swift::String countAndFlagsBits = 0xD000000000000013;
      v458._Swift::String countAndFlagsBits = 0xD00000000000004DLL;
      v458._object = (void *)0x8000000100F77ED0;
      v178._object = (void *)0x8000000100F77EB0;
      v179._Swift::String countAndFlagsBits = 0x6F63655220756F59;
      v179._object = (void *)0xED0000646E656D6DLL;
      Swift::String v180 = NSLocalizedString(_:tableName:bundle:value:comment:)(v178, (Swift::String_optional)0, (NSBundle)qword_101611820, v179, v458);
      v459._Swift::String countAndFlagsBits = 0xD00000000000004CLL;
      v459._object = (void *)0x8000000100F77F40;
      v181._object = (void *)0x8000000100F77F20;
      v181._Swift::String countAndFlagsBits = 0xD000000000000011;
      v182._Swift::String countAndFlagsBits = 0x6C73694420756F59;
      v182._object = (void *)0xEB00000000656B69;
      Swift::String v183 = NSLocalizedString(_:tableName:bundle:value:comment:)(v181, (Swift::String_optional)0, v177, v182, v459);
      v184 = v377;
      v377->_Swift::String countAndFlagsBits = (uint64_t)v174;
      v184->_object = v176;
      v184[1] = v180;
      v184[2] = v183;
      LOBYTE(v184[3]._countAndFlagsBits) = v173;
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFBE0, (void (*)(uint64_t))_s17ThirdPartyRatingsVMa);
      sub_1001736A0();
      id v185 = v174;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v186 = (uint64_t)v378;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v186, v398, &qword_1015CFBD8);
      swift_storeEnumTagMultiPayload();
      sub_1001734B8();
      sub_1001735D4();
      uint64_t v187 = (uint64_t)v401;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v186, &qword_1015CFBD8);
      sub_1000FF27C(v187, v411, &qword_1015CFBA8);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v188 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v187, &qword_1015CFBA8);
      sub_1000FF27C(v188, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v189 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v188, &qword_1015CFB38);
      sub_1000FF27C(v189, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v189, &qword_1015CFB28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v103 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations;
      uint64_t v104 = v172;
      return (id *)sub_100174240(v104, v103);
    case 8u:
      uint64_t v88 = v346;
      sub_100173E44((uint64_t)v80, v346, type metadata accessor for PlaceSummaryViewModelUnit.TransitShields);
      long long v429 = *(unint64_t *)(v88 + *(int *)(v337 + 20));
      v190 = (void *)v429;
      *(void *)&long long v430 = 0;
      *((void *)&v430 + 1) = 1;
      *(void *)&long long v432 = 0;
      uint64_t v431 = 0;
      *((void *)&v432 + 1) = 1;
      Swift::String v433 = (Swift::String)0;
      Swift::String countAndFlagsBits = (Swift::String)0;
      LOWORD(v435) = 0;
      sub_100173868();
      sub_1001738BC();
      id v191 = v190;
      _ConditionalContent<>.init(storage:)();
      uint64_t v192 = v443;
      char v193 = BYTE8(v443);
      char v194 = BYTE9(v443);
      Swift::String v195 = v439;
      v196 = v400;
      Swift::String *v400 = v438;
      v196[1] = v195;
      Swift::String v197 = v441;
      v196[2] = v440;
      v196[3] = v197;
      v196[4] = v442;
      v196[5]._Swift::String countAndFlagsBits = v192;
      LOBYTE(v196[5]._object) = v193;
      BYTE1(v196[5]._object) = v194;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC18);
      sub_1001737EC();
      sub_100173910();
      uint64_t v198 = (uint64_t)v404;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v198, v414, &qword_1015CFC08);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v199 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v198, &qword_1015CFC08);
      sub_1000FF27C(v199, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v200 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v199, &qword_1015CFBF8);
      sub_1000FF27C(v200, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v200, &qword_1015CFB28);

      v115 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields;
      goto LABEL_38;
    case 9u:
      uint64_t v201 = *v80;
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      swift_retain();
      v202 = (void *)EnvironmentObject.init()();
      uint64_t v204 = v203;
      uint64_t v205 = swift_getKeyPath();
      type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent(0);
      sub_1001732B8((unint64_t *)&unk_1015CFD70, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent);
      uint64_t v424 = v201;
      uint64_t v206 = ObservedObject.init(wrappedValue:)();
      uint64_t v208 = v207;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v209.super.Class isa = (Class)qword_101611820;
      v460._Swift::String countAndFlagsBits = 0xD000000000000022;
      v460._object = (void *)0x8000000100F77E20;
      v210._Swift::String countAndFlagsBits = 0x6E6F697461636F4CLL;
      v210._object = (void *)0xEB00000000402520;
      v211._Swift::String countAndFlagsBits = 0;
      v211._object = (void *)0xE000000000000000;
      Swift::String v212 = NSLocalizedString(_:tableName:bundle:value:comment:)(v210, (Swift::String_optional)0, (NSBundle)qword_101611820, v211, v460);
      v461._Swift::String countAndFlagsBits = 0xD000000000000058;
      v461._object = (void *)0x8000000100F77E50;
      v213._Swift::String countAndFlagsBits = 0x4025206F74206F47;
      v213._object = (void *)0xE800000000000000;
      v214._Swift::String countAndFlagsBits = 0;
      v214._object = (void *)0xE000000000000000;
      Swift::String v215 = NSLocalizedString(_:tableName:bundle:value:comment:)(v213, (Swift::String_optional)0, v209, v214, v461);
      char IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
      *(void *)&long long v429 = v202;
      *((void *)&v429 + 1) = v204;
      long long v430 = (unint64_t)v205;
      uint64_t v431 = 0;
      *(void *)&long long v432 = v206;
      *((void *)&v432 + 1) = v208;
      Swift::String v433 = v212;
      Swift::String countAndFlagsBits = v215;
      LOBYTE(v435) = IsEnabled_SearchAndDiscovery;
      BYTE1(v435) = 1;
      id v416 = v202;
      sub_10012EB20();
      sub_100173868();
      sub_1001738BC();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v217 = v443;
      char v218 = BYTE8(v443);
      char v219 = BYTE9(v443);
      Swift::String v220 = v439;
      v221 = v400;
      Swift::String *v400 = v438;
      v221[1] = v220;
      Swift::String v222 = v441;
      v221[2] = v440;
      v221[3] = v222;
      v221[4] = v442;
      v221[5]._Swift::String countAndFlagsBits = v217;
      LOBYTE(v221[5]._object) = v218;
      BYTE1(v221[5]._object) = v219;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC18);
      sub_1001737EC();
      sub_100173910();
      uint64_t v223 = (uint64_t)v404;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v223, v414, &qword_1015CFC08);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v224 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v223, &qword_1015CFC08);
      sub_1000FF27C(v224, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v225 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v224, &qword_1015CFBF8);
      sub_1000FF27C(v225, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000FF2E0(v225, &qword_1015CFB28);

      sub_100127C4C();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 0xAu:
      uint64_t v226 = v350;
      sub_100173E44((uint64_t)v80, v350, type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
      uint64_t v227 = v341;
      sub_100173DDC(v226, v341, type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v228 = EnvironmentObject.init()();
      uint64_t v230 = v229;
      uint64_t v231 = swift_getKeyPath();
      uint64_t v232 = (uint64_t)v351;
      uint64_t *v351 = v228;
      *(void *)(v232 + 8) = v230;
      *(void *)(v232 + 16) = v231;
      *(void *)(v232 + 24) = 0;
      *(unsigned char *)(v232 + 32) = 0;
      sub_100173E44(v227, v232 + *(int *)(v380 + 24), type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
      sub_100173DDC(v232, v381, _s13TappableEntryVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFC40, (void (*)(uint64_t))_s13TappableEntryVMa);
      sub_1001732B8(&qword_1015CFC48, (void (*)(uint64_t))_s9DelimiterVMa);
      uint64_t v233 = (uint64_t)v383;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v233, (uint64_t)v400, &qword_1015CFC38);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC18);
      sub_1001737EC();
      sub_100173910();
      uint64_t v234 = (uint64_t)v404;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v233, &qword_1015CFC38);
      sub_1000FF27C(v234, v414, &qword_1015CFC08);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v235 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v234, &qword_1015CFC08);
      sub_1000FF27C(v235, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v236 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v235, &qword_1015CFBF8);
      sub_1000FF27C(v236, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v236, &qword_1015CFB28);
      sub_100174240(v232, _s13TappableEntryVMa);
      v237 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry;
      goto LABEL_28;
    case 0xBu:
      uint64_t v88 = v354;
      sub_100173E44((uint64_t)v80, v354, type metadata accessor for PlaceSummaryViewModelUnit.Delimiter);
      char v238 = *(unsigned char *)(v88 + *(int *)(v345 + 20));
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t v239 = EnvironmentObject.init()();
      uint64_t v240 = (uint64_t)v356;
      uint64_t *v356 = v239;
      *(void *)(v240 + 8) = v241;
      uint64_t v242 = v382;
      v438._Swift::String countAndFlagsBits = 0x4010000000000000;
      sub_1001742F4();
      ScaledMetric.init(wrappedValue:)();
      *(unsigned char *)(v240 + *(int *)(v242 + 24)) = v238;
      sub_100173DDC(v240, v381, _s9DelimiterVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFC40, (void (*)(uint64_t))_s13TappableEntryVMa);
      sub_1001732B8(&qword_1015CFC48, (void (*)(uint64_t))_s9DelimiterVMa);
      uint64_t v243 = (uint64_t)v383;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v243, (uint64_t)v400, &qword_1015CFC38);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC18);
      sub_1001737EC();
      sub_100173910();
      uint64_t v244 = (uint64_t)v404;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v243, &qword_1015CFC38);
      sub_1000FF27C(v244, v414, &qword_1015CFC08);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v245 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v244, &qword_1015CFC08);
      sub_1000FF27C(v245, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v246 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v245, &qword_1015CFBF8);
      sub_1000FF27C(v246, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v246, &qword_1015CFB28);
      sub_100174240(v240, _s9DelimiterVMa);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter;
      goto LABEL_38;
    case 0xCu:
      uint64_t v226 = v355;
      sub_100173E44((uint64_t)v80, v355, type metadata accessor for PlaceSummaryViewModelUnit.Hours);
      uint64_t v247 = (uint64_t)v357;
      (*(void (**)(char *, uint64_t, uint64_t))(v390 + 16))(v357, v226 + *(int *)(v348 + 20), v65);
      uint64_t v248 = *(int *)(v384 + 20);
      *(unsigned char *)(v247 + v248) = MapsFeature_IsEnabled_SearchAndDiscovery();
      sub_100173DDC(v247, v386, _s5HoursVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFC70, (void (*)(uint64_t))_s5HoursVMa);
      sub_1001732B8(&qword_1015CFC78, (void (*)(uint64_t))_s28RealTimeAvailableChargerViewVMa);
      uint64_t v249 = (uint64_t)v388;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v249, (uint64_t)v407, &qword_1015CFC68);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC88);
      sub_100173AA8();
      sub_100173BC4();
      uint64_t v250 = (uint64_t)v408;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v249, &qword_1015CFC68);
      sub_1000FF27C(v250, v414, &qword_1015CFC58);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v251 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v250, &qword_1015CFC58);
      sub_1000FF27C(v251, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v252 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v251, &qword_1015CFBF8);
      sub_1000FF27C(v252, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v252, &qword_1015CFB28);
      sub_100174240(v247, _s5HoursVMa);
      v237 = type metadata accessor for PlaceSummaryViewModelUnit.Hours;
LABEL_28:
      v103 = v237;
      uint64_t v104 = v226;
      return (id *)sub_100174240(v104, v103);
    case 0xDu:
      swift_beginAccess();
      type metadata accessor for PlaceSummaryEVChargerViewModel(0);
      sub_1001732B8((unint64_t *)&unk_1015D5A50, (void (*)(uint64_t))type metadata accessor for PlaceSummaryEVChargerViewModel);
      swift_retain();
      uint64_t v253 = ObservedObject.init(wrappedValue:)();
      uint64_t v88 = (uint64_t)v358;
      uint64_t *v358 = v253;
      *(void *)(v88 + 8) = v254;
      strcpy((char *)(v88 + 16), "powerplug.fill");
      *(unsigned char *)(v88 + 31) = -18;
      *(void *)(v88 + 32) = 0xD000000000000019;
      *(void *)(v88 + 40) = 0x8000000100F77E00;
      uint64_t v255 = v387;
      *(void *)&long long v429 = 0xC008000000000000;
      sub_1001742A0();
      ScaledMetric.init(wrappedValue:)();
      *(void *)(v88 + *(int *)(v255 + 32)) = 0x4012D97C7F3321D2;
      sub_100173DDC(v88, v386, _s28RealTimeAvailableChargerViewVMa);
      swift_storeEnumTagMultiPayload();
      sub_1001732B8(&qword_1015CFC70, (void (*)(uint64_t))_s5HoursVMa);
      sub_1001732B8(&qword_1015CFC78, (void (*)(uint64_t))_s28RealTimeAvailableChargerViewVMa);
      uint64_t v256 = (uint64_t)v388;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v256, (uint64_t)v407, &qword_1015CFC68);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC88);
      sub_100173AA8();
      sub_100173BC4();
      uint64_t v257 = (uint64_t)v408;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v256, &qword_1015CFC68);
      sub_1000FF27C(v257, v414, &qword_1015CFC58);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v258 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v257, &qword_1015CFC58);
      sub_1000FF27C(v258, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v259 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v258, &qword_1015CFBF8);
      sub_1000FF27C(v259, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000FF2E0(v259, &qword_1015CFB28);
      v115 = _s28RealTimeAvailableChargerViewVMa;
      goto LABEL_38;
    case 0xEu:
      sub_100173E44((uint64_t)v80, v389, type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel);
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      swift_retain();
      v260 = (void *)EnvironmentObject.init()();
      uint64_t v262 = v261;
      uint64_t v263 = swift_getKeyPath();
      CGFloat y = CGPointZero.y;
      type metadata accessor for PlaceSummaryPhotoCarouselViewModel(0);
      sub_1001732B8((unint64_t *)&unk_1015CFD50, (void (*)(uint64_t))type metadata accessor for PlaceSummaryPhotoCarouselViewModel);
      uint64_t v265 = ObservedObject.init(wrappedValue:)();
      uint64_t v267 = v266;
      *(CGFloat *)&long long v429 = CGPointZero.x;
      *((CGFloat *)&v429 + 1) = y;
      type metadata accessor for CGPoint(0);
      State.init(wrappedValue:)();
      *(void *)&long long v429 = v265;
      *((void *)&v429 + 1) = v267;
      *(void *)&long long v430 = v260;
      *((void *)&v430 + 1) = v262;
      uint64_t v431 = v263;
      long long v432 = 0uLL;
      Swift::String v433 = v438;
      Swift::String countAndFlagsBits = (Swift::String)(unint64_t)v439._countAndFlagsBits;
      uint64_t v436 = 0;
      uint64_t v435 = 0;
      char v437 = 0;
      id v268 = v260;
      swift_retain();
      sub_10012EB20();
      sub_100173C40();
      sub_100173C94();
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      uint64_t v269 = v444;
      char v270 = v445;
      Swift::String v271 = v439;
      v272 = v407;
      _OWORD *v407 = v438;
      v272[1] = v271;
      Swift::String v273 = v441;
      v272[2] = v440;
      v272[3] = v273;
      long long v274 = v443;
      v272[4] = v442;
      v272[5] = v274;
      *((void *)v272 + 12) = v269;
      *((unsigned char *)v272 + 104) = v270;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC88);
      sub_100173AA8();
      sub_100173BC4();
      uint64_t v275 = (uint64_t)v408;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v275, v414, &qword_1015CFC58);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v276 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v275, &qword_1015CFC58);
      sub_1000FF27C(v276, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v277 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v276, &qword_1015CFBF8);
      sub_1000FF27C(v277, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v277, &qword_1015CFB28);

      swift_release();
      sub_100127C4C();
      swift_release();
      v103 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel;
      uint64_t v104 = v389;
      return (id *)sub_100174240(v104, v103);
    case 0xFu:
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      swift_retain();
      uint64_t v278 = EnvironmentObject.init()();
      uint64_t v280 = v279;
      uint64_t v281 = swift_getKeyPath();
      sub_100173F20(v278, v280, v281, 0, 0, (uint64_t)v446);
      long long v429 = v446[0];
      long long v430 = v446[1];
      uint64_t v431 = v447;
      long long v432 = v448;
      Swift::String v433 = v449;
      Swift::String countAndFlagsBits = v450;
      uint64_t v435 = v451;
      uint64_t v436 = v452;
      char v437 = 1;
      sub_100174120((id *)v446);
      sub_100173C40();
      sub_100173C94();
      _ConditionalContent<>.init(storage:)();
      uint64_t v282 = v444;
      char v283 = v445;
      Swift::String v284 = v439;
      v285 = v407;
      _OWORD *v407 = v438;
      v285[1] = v284;
      Swift::String v286 = v441;
      v285[2] = v440;
      v285[3] = v286;
      long long v287 = v443;
      v285[4] = v442;
      v285[5] = v287;
      *((void *)v285 + 12) = v282;
      *((unsigned char *)v285 + 104) = v283;
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015CFC88);
      sub_100173AA8();
      sub_100173BC4();
      uint64_t v288 = (uint64_t)v408;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v288, v414, &qword_1015CFC58);
      swift_storeEnumTagMultiPayload();
      sub_100173770();
      sub_100173A2C();
      uint64_t v289 = (uint64_t)v418;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v288, &qword_1015CFC58);
      sub_1000FF27C(v289, v421, &qword_1015CFBF8);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v290 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v289, &qword_1015CFBF8);
      sub_1000FF27C(v290, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1000FF2E0(v290, &qword_1015CFB28);
      return sub_1001741AC((id *)v446);
    case 0x10u:
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      swift_retain();
      v292 = (void *)EnvironmentObject.init()();
      uint64_t v294 = v293;
      uint64_t v295 = swift_getKeyPath();
      type metadata accessor for PlaceSummaryViewModelUnit.UserNote(0);
      sub_1001732B8(&qword_1015CFD48, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelUnit.UserNote);
      uint64_t v296 = ObservedObject.init(wrappedValue:)();
      uint64_t v298 = v297;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      v462._Swift::String countAndFlagsBits = 0xD00000000000003FLL;
      v462._object = (void *)0x8000000100F77DC0;
      v299._Swift::String countAndFlagsBits = 0x616C5020776F6853;
      v299._object = (void *)0xEF64726163206563;
      v300._Swift::String countAndFlagsBits = 0;
      v300._object = (void *)0xE000000000000000;
      Swift::String v301 = NSLocalizedString(_:tableName:bundle:value:comment:)(v299, (Swift::String_optional)0, (NSBundle)qword_101611820, v300, v462);
      v302 = v427;
      void *v427 = v292;
      v302[1] = v294;
      v302[2] = v295;
      v302[3] = 0;
      *((unsigned char *)v302 + 32) = 0;
      v302[5] = v296;
      v302[6] = v298;
      *(Swift::String *)(v302 + 7) = v301;
      swift_storeEnumTagMultiPayload();
      id v303 = v292;
      sub_10012EB20();
      sub_100172F9C();
      sub_100173CE8();
      swift_retain();
      swift_bridgeObjectRetain();
      _ConditionalContent<>.init(storage:)();

      swift_release();
      sub_100127C4C();
LABEL_35:
      swift_bridgeObjectRelease();
      return (id *)swift_release();
    default:
      uint64_t v81 = (uint64_t)v80;
      uint64_t v82 = v77;
      sub_100173E44(v81, (uint64_t)v77, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      uint64_t v83 = _s4LineVMa(0);
      uint64_t v84 = &v77[v75[5]];
      if (*(unsigned char *)(v353 + *(int *)(v83 + 20)) == 1)
      {
        uint64_t v85 = v324;
        (*(void (**)(char *, char *, uint64_t))(v390 + 16))((char *)v73 + *(int *)(v324 + 20), v84, v65);
        sub_1000FF27C((uint64_t)&v82[v75[12]], (uint64_t)v73 + *(int *)(v85 + 24), &qword_1015CFD80);
        type metadata accessor for PlaceSummaryViewModelTemplate(0);
        sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
        *uint64_t v73 = EnvironmentObject.init()();
        v73[1] = v86;
        sub_100173DDC((uint64_t)v73, (uint64_t)v71, _s10TitleLabelVMa);
        swift_storeEnumTagMultiPayload();
        sub_1001732B8(&qword_1015CFB70, (void (*)(uint64_t))_s10TitleLabelVMa);
        sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
        uint64_t v87 = (uint64_t)v328;
        _ConditionalContent<>.init(storage:)();
        sub_100174240((uint64_t)v73, _s10TitleLabelVMa);
        uint64_t v88 = (uint64_t)v82;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v390 + 16))(v67, v84, v65);
        uint64_t v304 = v75[7];
        v305 = (uint64_t *)&v77[v75[6]];
        uint64_t v306 = v305[1];
        uint64_t v417 = *v305;
        uint64_t v414 = v306;
        uint64_t v413 = *(void *)&v77[v304];
        uint64_t v307 = v75[9];
        uint64_t v405 = *(void *)&v77[v75[8]];
        uint64_t v412 = *(void *)&v77[v307];
        uint64_t v308 = v75[11];
        v408 = *(char **)&v77[v75[10]];
        uint64_t v424 = *(void *)&v77[v308];
        LODWORD(v418) = v77[v308 + 8];
        v407 = (_OWORD *)type metadata accessor for PlaceSummaryViewModelTemplate(0);
        uint64_t v406 = sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v309 = v405;
        swift_retain();
        swift_retain();
        swift_retain();
        v407 = (_OWORD *)EnvironmentObject.init()();
        uint64_t v406 = v310;
        uint64_t v311 = swift_getKeyPath();
        uint64_t v88 = (uint64_t)v82;
        v312 = (int *)v361;
        uint64_t v313 = (uint64_t)v359;
        *(void *)&v359[*(int *)(v361 + 48)] = v311;
        sub_1000FF33C(&qword_1015CE6F8);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, char *, uint64_t))(v390 + 32))(v313, v67, v65);
        v314 = (uint64_t *)(v313 + v312[5]);
        uint64_t v315 = v414;
        uint64_t *v314 = v417;
        v314[1] = v315;
        *(void *)(v313 + v312[6]) = v413;
        *(void *)(v313 + v312[7]) = v309;
        *(void *)(v313 + v312[8]) = v412;
        *(void *)(v313 + v312[9]) = v408;
        uint64_t v316 = v313 + v312[10];
        *(void *)uint64_t v316 = v424;
        *(unsigned char *)(v316 + 8) = (_BYTE)v418;
        v317 = (void *)(v313 + v312[11]);
        uint64_t v318 = v406;
        void *v317 = v407;
        v317[1] = v318;
        sub_100173DDC(v313, (uint64_t)v71, _s5LabelVMa);
        swift_storeEnumTagMultiPayload();
        sub_1001732B8(&qword_1015CFB70, (void (*)(uint64_t))_s10TitleLabelVMa);
        sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
        uint64_t v87 = (uint64_t)v328;
        _ConditionalContent<>.init(storage:)();
        sub_100174240(v313, _s5LabelVMa);
      }
      sub_1000FF27C(v87, v365, &qword_1015CFB68);
      swift_storeEnumTagMultiPayload();
      sub_1001731BC();
      sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
      uint64_t v319 = (uint64_t)v367;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF27C(v319, v393, &qword_1015CFB58);
      swift_storeEnumTagMultiPayload();
      sub_100173110();
      sub_100173320();
      uint64_t v320 = (uint64_t)v394;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v319, &qword_1015CFB58);
      sub_1000FF27C(v320, v411, &qword_1015CFB48);
      swift_storeEnumTagMultiPayload();
      sub_100173094();
      sub_10017343C();
      uint64_t v321 = (uint64_t)v415;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v320, &qword_1015CFB48);
      sub_1000FF27C(v321, v421, &qword_1015CFB38);
      swift_storeEnumTagMultiPayload();
      sub_100173018();
      sub_1001736F4();
      uint64_t v322 = (uint64_t)v423;
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v321, &qword_1015CFB38);
      sub_1000FF27C(v322, (uint64_t)v427, &qword_1015CFB28);
      swift_storeEnumTagMultiPayload();
      sub_100172F9C();
      sub_100173CE8();
      _ConditionalContent<>.init(storage:)();
      sub_1000FF2E0(v322, &qword_1015CFB28);
      sub_1000FF2E0(v87, &qword_1015CFB68);
      v115 = type metadata accessor for PlaceSummaryViewModelUnit.Label;
LABEL_38:
      v103 = v115;
      uint64_t v104 = v88;
      return (id *)sub_100174240(v104, v103);
  }
}

uint64_t sub_100158984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5 & 1;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v9.super.Class isa = (Class)qword_101611820;
  v19._Swift::String countAndFlagsBits = 0xD00000000000002DLL;
  v19._object = (void *)0x8000000100F78110;
  v10._object = (void *)0x8000000100F780F0;
  v10._Swift::String countAndFlagsBits = 0xD000000000000016;
  v11._Swift::String countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  *(Swift::String *)(a7 + 40) = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)qword_101611820, v11, v19);
  v20._Swift::String countAndFlagsBits = 0xD00000000000007DLL;
  v20._object = (void *)0x8000000100F78140;
  v12._Swift::String countAndFlagsBits = 0x6469754720756C25;
  v12._object = (void *)0xEA00000000007365;
  v13._Swift::String countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  *(Swift::String *)(a7 + 56) = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, v9, v13, v20);
  v21._object = (void *)0x8000000100F780A0;
  v14._Swift::String countAndFlagsBits = 0x5020739980E24025;
  v14._object = (void *)0xAB000000006B6369;
  v15._Swift::String countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v21._Swift::String countAndFlagsBits = 0x1000000000000048;
  *(Swift::String *)(a7 + 72) = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, v9, v15, v21);
  uint64_t v16 = (int *)_s26MultipleCuratedCollectionsVMa(0);
  sub_100173E44(a6, a7 + v16[9], type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
  uint64_t v17 = v16[10];
  uint64_t result = MapsFeature_IsEnabled_SearchAndDiscovery();
  *(unsigned char *)(a7 + v17) = result;
  *(void *)(a7 + v16[11]) = 0x4008000000000000;
  return result;
}

uint64_t sub_100158B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D0CB8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = sub_1000FF33C(&qword_1015D0CC0);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s9DelimiterVMa(0);
  if ((*((unsigned char *)v1 + *(int *)(v12 + 24)) & 1) == 0)
  {
    sub_1000FF33C(&qword_1015D8660);
    ScaledMetric.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v24 = v55;
    char v25 = v56;
    uint64_t v26 = v57;
    char v27 = v58;
    *(void *)Swift::String v11 = 0;
    v11[8] = 1;
    *((void *)v11 + 2) = v24;
    v11[24] = v25;
    *((void *)v11 + 4) = v26;
    v11[40] = v27;
    *((_OWORD *)v11 + 3) = v59;
    swift_storeEnumTagMultiPayload();
    sub_1000FF33C(&qword_1015D0CD8);
    sub_100183878(&qword_1015D0CE0, &qword_1015D0CD8);
    sub_10018250C();
    return _ConditionalContent<>.init(storage:)();
  }
  uint64_t v50 = v5;
  uint64_t v51 = v8;
  uint64_t v52 = v9;
  uint64_t v53 = a1;
  uint64_t v54 = v3;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v13 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.subheadline.getter();
  uint64_t v18 = Text.font(_:)();
  uint64_t v48 = v19;
  LODWORD(v46) = v20;
  uint64_t v49 = v21;
  swift_release();
  sub_10017F958(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v22 = *v1;
  if (*v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v23 = v22;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v47 = v12;
    if (v55)
    {
      if (qword_1015CBB68 == -1) {
        goto LABEL_8;
      }
    }
    else if (qword_1015CBB70 == -1)
    {
LABEL_8:
      char v29 = v46;
      swift_retain();
      uint64_t v30 = v48;
      uint64_t v31 = Text.foregroundColor(_:)();
      uint64_t v33 = v32;
      char v35 = v34;
      uint64_t v46 = v36;
      swift_release();
      v35 &= 1u;
      sub_10017F958(v18, v30, v29 & 1);
      swift_bridgeObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      char v38 = static Edge.Set.horizontal.getter();
      sub_1000FF33C(&qword_1015D8660);
      ScaledMetric.wrappedValue.getter();
      EdgeInsets.init(_all:)();
      uint64_t v55 = v31;
      uint64_t v56 = v33;
      LOBYTE(v57) = v35;
      uint64_t v58 = v46;
      *(void *)&long long v59 = KeyPath;
      *((void *)&v59 + 1) = 1;
      char v60 = 0;
      char v61 = v38;
      uint64_t v62 = v39;
      uint64_t v63 = v40;
      uint64_t v64 = v41;
      uint64_t v65 = v42;
      char v66 = 0;
      sub_1000FF33C(&qword_1015D0CC8);
      sub_100182470();
      uint64_t v43 = (uint64_t)v50;
      View.accessibilityHidden(_:)();
      sub_10017F958(v31, v33, v35);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v44 = (uint64_t)v51;
      sub_100101750(v43, (uint64_t)v51, &qword_1015D0CB8);
      sub_1000FF27C(v44, (uint64_t)v11, &qword_1015D0CB8);
      swift_storeEnumTagMultiPayload();
      sub_1000FF33C(&qword_1015D0CD8);
      sub_100183878(&qword_1015D0CE0, &qword_1015D0CD8);
      sub_10018250C();
      _ConditionalContent<>.init(storage:)();
      return sub_1000FF2E0(v44, &qword_1015D0CB8);
    }
    swift_once();
    goto LABEL_8;
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1001590F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v69 = *(void *)(v3 - 8);
  uint64_t v70 = v3;
  __chkstk_darwin(v3);
  uint64_t v68 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1000FF33C(&qword_1015D0930);
  __chkstk_darwin(v79);
  char v66 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v67 = (char *)v62 - v7;
  __chkstk_darwin(v8);
  uint64_t v72 = (char *)v62 - v9;
  __chkstk_darwin(v10);
  uint64_t v71 = (char *)v62 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v62 - v13;
  uint64_t v74 = sub_1000FF33C(&qword_1015D0938);
  __chkstk_darwin(v74);
  uint64_t v76 = (uint64_t)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1000FF33C(&qword_1015D0940);
  __chkstk_darwin(v75);
  char v17 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AttributedString();
  uint64_t v77 = *(void *)(v18 - 8);
  uint64_t v78 = v18;
  __chkstk_darwin(v18);
  uint64_t v81 = (uint64_t)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v62 - v21;
  uint64_t v23 = _s26MultipleCuratedCollectionsVMa(0);
  uint64_t v64 = *(void ***)(v23 - 8);
  uint64_t v24 = (char *)v64[8];
  __chkstk_darwin(v23);
  uint64_t v65 = (uint64_t)v62 - ((unint64_t)(v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  char v27 = (id *)((char *)v62 - v26);
  int v29 = *((unsigned __int8 *)v2 + *(int *)(v28 + 40));
  uint64_t v30 = v2;
  sub_100173DDC((uint64_t)v2, (uint64_t)v62 - v26, _s26MultipleCuratedCollectionsVMa);
  uint64_t v73 = v14;
  if (v29 == 1)
  {
    if (!*v27) {
      goto LABEL_13;
    }
    uint64_t v31 = (unsigned __int8 *)*v27;
    sub_100174240((uint64_t)v27, _s26MultipleCuratedCollectionsVMa);
    int v32 = v31[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase];

    if (v32 == 2)
    {
      uint64_t v33 = (char *)v2 + *(int *)(v23 + 36);
      uint64_t v34 = *(void *)&v33[*(int *)(type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0) + 20)];
      char v35 = (void *)(v34 - 1);
      if (__OFSUB__(v34, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v36 = *v2;
        if (*v2)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          id v37 = v36;
          static Published.subscript.getter();

          swift_release();
          swift_release();
          sub_100159BC0(v35, LOBYTE(v97._countAndFlagsBits), (uint64_t)v22);
          *(void *)char v17 = static VerticalAlignment.bottom.getter();
          *((void *)v17 + 1) = 0x4000000000000000;
          v17[16] = 0;
          sub_10015A9E0(v2, (uint64_t)v22, (uint64_t)&v17[*(int *)(v75 + 44)]);
          sub_1000FF27C((uint64_t)v17, v76, &qword_1015D0940);
          swift_storeEnumTagMultiPayload();
          sub_100180550();
          sub_100180614();
          _ConditionalContent<>.init(storage:)();
          sub_1000FF2E0((uint64_t)v17, &qword_1015D0940);
          return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v22, v78);
        }
      }
      while (1)
      {
LABEL_13:
        type metadata accessor for PlaceSummaryViewModelTemplate(0);
        sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
        EnvironmentObject.error()();
        __break(1u);
      }
    }
  }
  else
  {
    sub_100174240((uint64_t)v27, _s26MultipleCuratedCollectionsVMa);
  }
  uint64_t v39 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  uint64_t v40 = *v2;
  if (!*v2) {
    goto LABEL_13;
  }
  uint64_t v41 = *(void **)((char *)v2 + *(int *)(v23 + 36) + *(int *)(v39 + 20));
  swift_getKeyPath();
  swift_getKeyPath();
  id v42 = v40;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v43 = v81;
  sub_100159BC0(v41, LOBYTE(v97._countAndFlagsBits), v81);
  uint64_t v44 = v65;
  sub_100173DDC((uint64_t)v30, v65, _s26MultipleCuratedCollectionsVMa);
  unint64_t v45 = (*((unsigned __int8 *)v64 + 80) + 16) & ~(unint64_t)*((unsigned __int8 *)v64 + 80);
  v62[1] = &v24[v45];
  uint64_t v46 = swift_allocObject();
  unint64_t v63 = v45;
  sub_100173E44(v44, v46 + v45, _s26MultipleCuratedCollectionsVMa);
  uint64_t v47 = static VerticalAlignment.center.getter();
  uint64_t v64 = v30;
  sub_10015CAD4(v30, v43, (uint64_t)v93);
  char v96 = 0;
  *(_OWORD *)((char *)&v95[4] + 7) = v93[4];
  *(_OWORD *)((char *)&v95[5] + 7) = v93[5];
  *(_OWORD *)((char *)&v95[6] + 7) = v94[0];
  v95[7] = *(_OWORD *)((char *)v94 + 9);
  *(_OWORD *)((char *)v95 + 7) = v93[0];
  *(_OWORD *)((char *)&v95[1] + 7) = v93[1];
  *(_OWORD *)((char *)&v95[2] + 7) = v93[2];
  *(_OWORD *)((char *)&v95[3] + 7) = v93[3];
  *(_OWORD *)((char *)&v99[7] + 1) = *(_OWORD *)((char *)v94 + 9);
  *(_OWORD *)((char *)&v99[4] + 1) = v95[4];
  *(_OWORD *)((char *)&v99[5] + 1) = v95[5];
  *(_OWORD *)((char *)v99 + 1) = v95[0];
  *(_OWORD *)((char *)&v99[3] + 1) = v95[3];
  *(_OWORD *)((char *)&v99[2] + 1) = v95[2];
  v97._Swift::String countAndFlagsBits = (uint64_t)sub_100180208;
  v97._object = (void *)v46;
  *(void *)&long long v98 = v47;
  *((void *)&v98 + 1) = 0x4010000000000000;
  LOBYTE(v99[0]) = 0;
  *(_OWORD *)((char *)&v99[1] + 1) = v95[1];
  *(_OWORD *)((char *)&v99[6] + 1) = v95[6];
  long long v90 = v99[6];
  long long v91 = v99[7];
  char v92 = BYTE8(v94[1]);
  long long v86 = v99[2];
  long long v87 = v99[3];
  long long v88 = v99[4];
  long long v89 = v99[5];
  Swift::String v82 = v97;
  long long v83 = v98;
  long long v84 = v99[0];
  long long v85 = v99[1];
  sub_1000FF33C(&qword_1015D0948);
  sub_1001010F8((unint64_t *)&unk_1015D0950, &qword_1015D0948);
  uint64_t v48 = (uint64_t)v66;
  View.accessibility(identifier:)();
  sub_100180234((uint64_t)&v97);
  uint64_t v49 = (uint64_t)v67;
  ModifiedContent<>.accessibilityAutomationType(_:)();
  sub_1000FF2E0(v48, &qword_1015D0930);
  uint64_t v50 = v68;
  static AccessibilityTraits.isButton.getter();
  uint64_t v51 = (uint64_t)v72;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v70);
  sub_1000FF2E0(v49, &qword_1015D0930);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v100._Swift::String countAndFlagsBits = 0xD00000000000004FLL;
  v100._object = (void *)0x8000000100F78560;
  v52._object = (void *)0x8000000100F78540;
  v52._Swift::String countAndFlagsBits = 0xD00000000000001BLL;
  v53._Swift::String countAndFlagsBits = 0x69754720776F6853;
  v53._object = (void *)0xEB00000000736564;
  Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v52, (Swift::String_optional)0, (NSBundle)qword_101611820, v53, v100);
  sub_100180324();
  uint64_t v54 = Text.init<A>(_:)();
  uint64_t v56 = v55;
  char v58 = v57 & 1;
  sub_100173DDC((uint64_t)v64, v44, _s26MultipleCuratedCollectionsVMa);
  uint64_t v59 = swift_allocObject();
  sub_100173E44(v44, v59 + v63, _s26MultipleCuratedCollectionsVMa);
  uint64_t v60 = (uint64_t)v71;
  ModifiedContent<>.accessibilityAction(named:_:)();
  swift_release();
  sub_10017F958(v54, v56, v58);
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v51, &qword_1015D0930);
  uint64_t v61 = (uint64_t)v73;
  sub_100101750(v60, (uint64_t)v73, &qword_1015D0930);
  sub_1000FF27C(v61, v76, &qword_1015D0930);
  swift_storeEnumTagMultiPayload();
  sub_100180550();
  sub_100180614();
  _ConditionalContent<>.init(storage:)();
  sub_1000FF2E0(v61, &qword_1015D0930);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 8))(v81, v78);
}

uint64_t sub_100159BC0@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v86 = a2;
  long long v94 = a1;
  *(void *)&long long v89 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v89);
  long long v87 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v10 - 8);
  long long v90 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v83 = (char *)&v83 - v13;
  uint64_t v14 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v95 = *(void *)(v14 - 8);
  uint64_t v96 = v14;
  __chkstk_darwin(v14);
  uint64_t v85 = (uint64_t)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v91 = (char *)&v83 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v83 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v24 - 8);
  uint64_t v25 = type metadata accessor for AttributedString();
  uint64_t v97 = *(void *)(v25 - 8);
  uint64_t v98 = v25;
  __chkstk_darwin(v25);
  long long v88 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  int v29 = (char *)&v83 - v28;
  __chkstk_darwin(v30);
  long long v84 = (char *)&v83 - v31;
  uint64_t v32 = _s26MultipleCuratedCollectionsVMa(0);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (id *)((char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  int IsEnabled_SearchAndDiscovery = MapsFeature_IsEnabled_SearchAndDiscovery();
  sub_100173DDC((uint64_t)v93, (uint64_t)v34, _s26MultipleCuratedCollectionsVMa);
  uint64_t v99 = a3;
  char v92 = v29;
  if (!IsEnabled_SearchAndDiscovery)
  {
    sub_100174240((uint64_t)v34, _s26MultipleCuratedCollectionsVMa);
    goto LABEL_9;
  }
  long long v93 = v23;
  if (*v34)
  {
    uint64_t v36 = (unsigned __int8 *)*v34;
    sub_100174240((uint64_t)v34, _s26MultipleCuratedCollectionsVMa);
    int v37 = v36[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase];

    if (v37 == 2)
    {
      long long v90 = v20;
      long long v91 = v9;
      if (qword_1015CBD78 != -1) {
        swift_once();
      }
      char v38 = (void *)qword_101611820;
      NSString v39 = String._bridgeToObjectiveC()();
      NSString v40 = String._bridgeToObjectiveC()();
      id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1000FF33C((uint64_t *)&unk_1015D59C0);
      uint64_t v42 = swift_allocObject();
      long long v89 = xmmword_100F5CF70;
      *(_OWORD *)(v42 + 16) = xmmword_100F5CF70;
      *(void *)(v42 + 56) = &type metadata for Int;
      *(void *)(v42 + 64) = &protocol witness table for Int;
      uint64_t v43 = v94;
      *(void *)(v42 + 32) = v94;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      AttributeContainer.init()();
      uint64_t v44 = v84;
      AttributedString.init(_:attributes:)();
      unint64_t v45 = (void *)qword_101611820;
      NSString v46 = String._bridgeToObjectiveC()();
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = [v45 localizedStringForKey:v46 value:v47 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v89;
      *(void *)(v49 + 56) = &type metadata for Int;
      *(void *)(v49 + 64) = &protocol witness table for Int;
      uint64_t v50 = v44;
      *(void *)(v49 + 32) = v43;
      uint64_t v51 = static String.localizedStringWithFormat(_:_:)();
      uint64_t v53 = v52;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = v97;
      uint64_t v54 = v98;
      uint64_t v56 = v92;
      (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v92, v44, v98);
      Swift::String v100 = (void *)v51;
      uint64_t v101 = v53;
      uint64_t v57 = type metadata accessor for Locale();
      uint64_t v58 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v91, 1, 1, v57);
      sub_1001732B8(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
      sub_100180324();
      uint64_t v59 = (uint64_t)v83;
      AttributedStringProtocol.range<A>(of:options:locale:)();
      sub_1000FF2E0(v58, &qword_1015D0A30);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v59, 1, v96) == 1)
      {
        sub_1000FF2E0(v59, &qword_1015D0A38);
        uint64_t v60 = v99;
      }
      else
      {
        uint64_t v77 = (uint64_t)v93;
        sub_100101750(v59, (uint64_t)v93, &qword_1015D0A40);
        sub_1000FF27C(v77, (uint64_t)v90, &qword_1015D0A40);
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        if (v86) {
          uint64_t v79 = static Color.white.getter();
        }
        else {
          uint64_t v79 = static Color.blue.getter();
        }
        uint64_t v60 = v99;
        uint64_t v102 = v79;
        sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
        uint64_t v80 = (uint64_t)v90;
        uint64_t v81 = (void (*)(void **, void))AttributedString.subscript.modify();
        sub_100180AE8();
        AttributedSubstring.subscript.setter();
        v81(&v100, 0);
        sub_1000FF2E0(v80, &qword_1015D0A40);
        sub_1000FF2E0((uint64_t)v93, &qword_1015D0A40);
      }
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v60, v50, v54);
    }
LABEL_9:
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v61._Swift::String countAndFlagsBits = 0x6465727574616546;
    v61._object = (void *)0xEC000000206E6920;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v61);
    uint64_t v62 = v94;
    Swift::String v100 = v94;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v63._Swift::String countAndFlagsBits = 0x73656469754720;
    v63._object = (void *)0xE700000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v63);
    String.LocalizationValue.init(stringInterpolation:)();
    uint64_t v64 = type metadata accessor for Locale();
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56);
    v65(v9, 1, 1, v64);
    Swift::String v100 = _swiftEmptyArrayStorage;
    sub_1001732B8(&qword_1015D0A48, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
    sub_1000FF33C(&qword_1015D0A50);
    sub_1001010F8(&qword_1015D0A58, &qword_1015D0A50);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v66 = v88;
    AttributedString.init(localized:options:table:bundle:locale:comment:)();
    uint64_t v67 = v97;
    uint64_t v54 = v98;
    uint64_t v68 = v92;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v92, v66, v98);
    uint64_t v102 = (uint64_t)v62;
    Swift::String v100 = (void *)dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v101 = v69;
    v70._Swift::String countAndFlagsBits = 0x73656469754720;
    v70._object = (void *)0xE700000000000000;
    String.append(_:)(v70);
    v65(v9, 1, 1, v64);
    uint64_t v55 = v67;
    sub_1001732B8(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
    sub_100180324();
    uint64_t v71 = (uint64_t)v90;
    AttributedStringProtocol.range<A>(of:options:locale:)();
    sub_1000FF2E0((uint64_t)v9, &qword_1015D0A30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v68, v54);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v71, 1, v96) == 1)
    {
      sub_1000FF2E0(v71, &qword_1015D0A38);
      uint64_t v50 = v66;
      uint64_t v60 = v99;
    }
    else
    {
      uint64_t v72 = (uint64_t)v91;
      sub_100101750(v71, (uint64_t)v91, &qword_1015D0A40);
      uint64_t v73 = v85;
      sub_1000FF27C(v72, v85, &qword_1015D0A40);
      uint64_t v74 = swift_getKeyPath();
      __chkstk_darwin(v74);
      swift_getKeyPath();
      if (v86) {
        uint64_t v75 = static Color.white.getter();
      }
      else {
        uint64_t v75 = static Color.blue.getter();
      }
      uint64_t v60 = v99;
      uint64_t v102 = v75;
      sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
      uint64_t v76 = (void (*)(void **, void))AttributedString.subscript.modify();
      sub_100180AE8();
      AttributedSubstring.subscript.setter();
      v76(&v100, 0);
      sub_1000FF2E0(v73, &qword_1015D0A40);
      sub_1000FF2E0((uint64_t)v91, &qword_1015D0A40);
      uint64_t v50 = v66;
    }
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v55 + 32))(v60, v50, v54);
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10015A9E0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v188 = a2;
  uint64_t v197 = a3;
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v186 = *(void *)(v4 - 8);
  uint64_t v187 = v4;
  __chkstk_darwin(v4);
  id v185 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_1000FF33C(&qword_1015D0990);
  __chkstk_darwin(v194);
  uint64_t v196 = (uint64_t)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v190 = (char *)&v154 - v8;
  __chkstk_darwin(v9);
  id v191 = (char *)&v154 - v10;
  __chkstk_darwin(v11);
  char v193 = (char *)&v154 - v12;
  __chkstk_darwin(v13);
  uint64_t v192 = (char *)&v154 - v14;
  __chkstk_darwin(v15);
  uint64_t v195 = (uint64_t)&v154 - v16;
  uint64_t v17 = type metadata accessor for AccessibilityTraits();
  uint64_t v202 = *(void *)(v17 - 8);
  uint64_t v203 = v17;
  __chkstk_darwin(v17);
  uint64_t v201 = (char *)&v154 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = _s26MultipleCuratedCollectionsVMa(0);
  uint64_t v20 = v19 - 8;
  uint64_t v198 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v184 = (uint64_t)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v171 = (void **)((char *)&v154 - v23);
  uint64_t v199 = v24;
  __chkstk_darwin(v25);
  uint64_t v204 = (uint64_t)&v154 - v26;
  uint64_t v178 = sub_1000FF33C(&qword_1015D0998);
  __chkstk_darwin(v178);
  char v173 = (uint64_t (**)(uint64_t))((char *)&v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_1000FF33C(&qword_1015D09A0);
  uint64_t v182 = *(void *)(v28 - 8);
  uint64_t v183 = v28;
  __chkstk_darwin(v28);
  uint64_t v172 = (char *)&v154 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v174 = (char *)&v154 - v31;
  __chkstk_darwin(v32);
  Swift::String v181 = (char *)&v154 - v33;
  __chkstk_darwin(v34);
  v175 = (char *)&v154 - v35;
  uint64_t v36 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v36 - 8);
  NSBundle v177 = (char *)&v154 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000FF33C(&qword_1015D0498);
  __chkstk_darwin(v38 - 8);
  NSString v40 = (char *)&v154 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(void *)(v42 + 64);
  __chkstk_darwin(v41);
  uint64_t v170 = (uint64_t)&v154 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v179 = (uint64_t)&v154 - v45;
  __chkstk_darwin(v46);
  id v48 = (char *)&v154 - v47;
  uint64_t v49 = sub_1000FF33C(&qword_1015D09A8);
  __chkstk_darwin(v49 - 8);
  uint64_t v189 = (uint64_t)&v154 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v154 - v52;
  uint64_t v54 = *(int *)(v20 + 44);
  uint64_t v55 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  sub_1000FF27C((uint64_t)a1 + *(int *)(v55 + 28) + v54, (uint64_t)v40, &qword_1015D0498);
  uint64_t v168 = v42;
  int v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41);
  uint64_t v205 = a1;
  uint64_t v200 = v53;
  if (v56 == 1)
  {
    sub_1000FF2E0((uint64_t)v40, &qword_1015D0498);
    uint64_t v57 = 1;
    uint64_t v59 = v198;
    uint64_t v58 = v199;
    uint64_t v60 = v183;
  }
  else
  {
    sub_100173E44((uint64_t)v40, (uint64_t)v48, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_100F5CF70;
    uint64_t v62 = *(int *)(v41 + 24);
    Swift::String v180 = v48;
    Swift::String v63 = &v48[v62];
    uint64_t v65 = *(void *)v63;
    uint64_t v64 = *((void *)v63 + 1);
    *(void *)(v61 + 56) = &type metadata for String;
    *(void *)(v61 + 64) = sub_10011A750();
    *(void *)(v61 + 32) = v65;
    *(void *)(v61 + 40) = v64;
    swift_bridgeObjectRetain();
    uint64_t v66 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v68 = v67;
    swift_bridgeObjectRelease();
    v213._Swift::String countAndFlagsBits = v66;
    v213._object = v68;
    sub_100180324();
    uint64_t v69 = Text.init<A>(_:)();
    uint64_t v72 = *a1;
    if (!v72)
    {
LABEL_12:
      type metadata accessor for PlaceSummaryViewModelTemplate(0);
      sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
      return result;
    }
    uint64_t v73 = v69;
    uint64_t v74 = v70;
    char v75 = v71;
    swift_getKeyPath();
    swift_getKeyPath();
    id v76 = v72;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v161 = v43;
    if (v213._countAndFlagsBits) {
      static Color.white.getter();
    }
    else {
      static Color.blue.getter();
    }
    uint64_t v169 = Text.foregroundColor(_:)();
    uint64_t v163 = v77;
    uint64_t v164 = v78;
    char v80 = v79;
    swift_release();
    int v162 = v80 & 1;
    sub_10017F958(v73, v74, v75 & 1);
    swift_bridgeObjectRelease();
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v81._Swift::String countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v81);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    v82._Swift::String countAndFlagsBits = 0;
    v82._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v82);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v166 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v167 = v83;
    uint64_t v176 = v84;
    int v165 = v85 & 1;
    uint64_t v87 = v204;
    uint64_t v86 = (uint64_t)v205;
    Swift::String v154 = _s26MultipleCuratedCollectionsVMa;
    sub_100173DDC((uint64_t)v205, v204, _s26MultipleCuratedCollectionsVMa);
    uint64_t v89 = v179;
    uint64_t v88 = (uint64_t)v180;
    Swift::String v155 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide;
    sub_100173DDC((uint64_t)v180, v179, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    uint64_t v90 = *(unsigned __int8 *)(v198 + 80);
    uint64_t v91 = (v90 + 16) & ~v90;
    uint64_t v92 = *(unsigned __int8 *)(v168 + 80);
    uint64_t v168 = ((v199 + v92 + v91) & ~v92) + v161;
    uint64_t v93 = (v199 + v92 + v91) & ~v92;
    uint64_t v159 = v93;
    uint64_t v160 = v91;
    uint64_t v161 = v90 | v92 | 7;
    uint64_t v94 = swift_allocObject();
    uint64_t v158 = _s26MultipleCuratedCollectionsVMa;
    sub_100173E44(v87, v94 + v91, _s26MultipleCuratedCollectionsVMa);
    uint64_t v157 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide;
    sub_100173E44(v89, v94 + v93, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    uint64_t v95 = v170;
    sub_100173DDC(v88, v170, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    uint64_t v96 = v171;
    sub_100173DDC(v86, (uint64_t)v171, _s26MultipleCuratedCollectionsVMa);
    uint64_t v97 = (uint64_t)v173;
    *char v173 = sub_100180790;
    *(void *)(v97 + 8) = v94;
    uint64_t v98 = v97 + *(int *)(v178 + 36);
    uint64_t v99 = v166;
    uint64_t v100 = v176;
    LODWORD(v86) = v165;
    sub_10017FDF0(v166, v176, v165);
    uint64_t v101 = v167;
    swift_bridgeObjectRetain();
    swift_retain();
    *(void *)uint64_t v98 = static VerticalAlignment.center.getter();
    *(void *)(v98 + 8) = 0x4010000000000000;
    *(unsigned char *)(v98 + 16) = 0;
    uint64_t v102 = v98 + *(int *)(sub_1000FF33C(&qword_1015D09C8) + 44);
    sub_10015BCA4(v95, v96, v99, v100, v86, v101, v102);
    uint64_t v156 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide;
    sub_100174240(v95, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    sub_100174240((uint64_t)v96, _s26MultipleCuratedCollectionsVMa);
    sub_10017F958(v99, v100, v86);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1001010F8((unint64_t *)&unk_1015D09D0, &qword_1015D0998);
    uint64_t v103 = (uint64_t)v172;
    View.accessibility(identifier:)();
    sub_1000FF2E0(v97, &qword_1015D0998);
    uint64_t v104 = (uint64_t)v174;
    uint64_t v60 = v183;
    ModifiedContent<>.accessibilityAutomationType(_:)();
    sub_1000FF2E0(v103, &qword_1015D09A0);
    uint64_t v105 = v201;
    static AccessibilityTraits.isButton.getter();
    ModifiedContent<>.accessibilityRemoveTraits(_:)();
    (*(void (**)(char *, uint64_t))(v202 + 8))(v105, v203);
    sub_1000FF2E0(v104, &qword_1015D09A0);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v106._Swift::String countAndFlagsBits = 0x20776F6853;
    v106._object = (void *)0xE500000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v106);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    v107._Swift::String countAndFlagsBits = 0;
    v107._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v107);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v108 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v110 = v109;
    LOBYTE(v104) = v111 & 1;
    uint64_t v112 = v204;
    sub_100173DDC((uint64_t)v205, v204, v154);
    uint64_t v113 = v179;
    sub_100173DDC((uint64_t)v180, v179, v155);
    uint64_t v114 = swift_allocObject();
    sub_100173E44(v112, v114 + v160, v158);
    sub_100173E44(v113, v114 + v159, v157);
    uint64_t v115 = (uint64_t)v175;
    uint64_t v116 = (uint64_t)v181;
    ModifiedContent<>.accessibilityAction(named:_:)();
    uint64_t v59 = v198;
    uint64_t v58 = v199;
    swift_release();
    uint64_t v117 = v108;
    a1 = v205;
    sub_10017F958(v117, v110, v104);
    swift_bridgeObjectRelease();
    sub_10017F958(v169, v163, v162);
    swift_bridgeObjectRelease();
    sub_10017F958(v166, v176, v165);
    swift_bridgeObjectRelease();
    sub_1000FF2E0(v116, &qword_1015D09A0);
    sub_100174240((uint64_t)v180, v156);
    uint64_t v53 = v200;
    sub_100101750(v115, (uint64_t)v200, &qword_1015D09A0);
    uint64_t v57 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v182 + 56))(v53, v57, 1, v60);
  uint64_t v118 = v184;
  sub_100173DDC((uint64_t)a1, v184, _s26MultipleCuratedCollectionsVMa);
  uint64_t v119 = *(unsigned __int8 *)(v59 + 80);
  uint64_t v120 = (v119 + 16) & ~v119;
  uint64_t v198 = v120 + v58;
  uint64_t v183 = v119 | 7;
  uint64_t v121 = swift_allocObject();
  uint64_t v199 = v120;
  sub_100173E44(v118, v121 + v120, _s26MultipleCuratedCollectionsVMa);
  uint64_t v122 = static VerticalAlignment.center.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v186 + 16))(v185, v188, v187);
  uint64_t v123 = Text.init(_:)();
  uint64_t v127 = *a1;
  if (!*a1) {
    goto LABEL_12;
  }
  uint64_t v128 = v123;
  uint64_t v129 = v124;
  uint64_t v130 = v126;
  char v131 = v125 & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v132 = v127;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_10015C750(v213._countAndFlagsBits, v128, v129, v131, v130, (uint64_t)&v217);
  sub_10017F958(v128, v129, v131);
  swift_bridgeObjectRelease();
  v213._Swift::String countAndFlagsBits = (uint64_t)sub_100180208;
  v213._object = (void *)v121;
  *(void *)&long long v214 = v122;
  *((void *)&v214 + 1) = 0x4010000000000000;
  LOBYTE(v215[0]) = 0;
  *(_OWORD *)((char *)v215 + 8) = v217;
  BYTE8(v215[1]) = v218;
  v215[2] = v219;
  v215[3] = v220;
  v216[0] = v221;
  *(void *)&v216[1] = v222;
  BYTE8(v216[1]) = v223;
  long long v210 = v219;
  long long v211 = v220;
  v212[0] = v221;
  *(_OWORD *)((char *)v212 + 9) = *(_OWORD *)((char *)v216 + 9);
  Swift::String v206 = v213;
  long long v207 = v214;
  long long v208 = v215[0];
  long long v209 = v215[1];
  sub_1000FF33C(&qword_1015D09B0);
  sub_1001010F8(&qword_1015D09B8, &qword_1015D09B0);
  uint64_t v133 = (uint64_t)v190;
  View.accessibility(identifier:)();
  sub_1001806E8((uint64_t)&v213);
  uint64_t v134 = (uint64_t)v191;
  ModifiedContent<>.accessibilityAutomationType(_:)();
  sub_1000FF2E0(v133, &qword_1015D0990);
  uint64_t v135 = v201;
  static AccessibilityTraits.isButton.getter();
  uint64_t v136 = (uint64_t)v193;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v202 + 8))(v135, v203);
  sub_1000FF2E0(v134, &qword_1015D0990);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v224._Swift::String countAndFlagsBits = 0xD00000000000004FLL;
  v224._object = (void *)0x8000000100F78560;
  v137._object = (void *)0x8000000100F78540;
  v137._Swift::String countAndFlagsBits = 0xD00000000000001BLL;
  v138._Swift::String countAndFlagsBits = 0x69754720776F6853;
  v138._object = (void *)0xEB00000000736564;
  Swift::String v206 = NSLocalizedString(_:tableName:bundle:value:comment:)(v137, (Swift::String_optional)0, (NSBundle)qword_101611820, v138, v224);
  sub_100180324();
  uint64_t v139 = Text.init<A>(_:)();
  uint64_t v141 = v140;
  char v143 = v142 & 1;
  uint64_t v144 = v204;
  sub_100173DDC((uint64_t)v205, v204, _s26MultipleCuratedCollectionsVMa);
  uint64_t v145 = swift_allocObject();
  sub_100173E44(v144, v145 + v199, _s26MultipleCuratedCollectionsVMa);
  uint64_t v146 = (uint64_t)v192;
  ModifiedContent<>.accessibilityAction(named:_:)();
  swift_release();
  sub_10017F958(v139, v141, v143);
  swift_bridgeObjectRelease();
  sub_1000FF2E0(v136, &qword_1015D0990);
  uint64_t v147 = v195;
  sub_100101750(v146, v195, &qword_1015D0990);
  uint64_t v148 = (uint64_t)v200;
  uint64_t v149 = v189;
  sub_1000FF27C((uint64_t)v200, v189, &qword_1015D09A8);
  uint64_t v150 = v196;
  sub_1000FF27C(v147, v196, &qword_1015D0990);
  uint64_t v151 = v197;
  sub_1000FF27C(v149, v197, &qword_1015D09A8);
  uint64_t v152 = sub_1000FF33C(&qword_1015D09C0);
  sub_1000FF27C(v150, v151 + *(int *)(v152 + 48), &qword_1015D0990);
  sub_1000FF2E0(v147, &qword_1015D0990);
  sub_1000FF2E0(v148, &qword_1015D09A8);
  sub_1000FF2E0(v150, &qword_1015D0990);
  return sub_1000FF2E0(v149, &qword_1015D09A8);
}

uint64_t sub_10015BCA4@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v96 = a6;
  int v93 = a5;
  uint64_t v95 = a4;
  uint64_t v94 = a3;
  uint64_t v100 = a2;
  uint64_t v97 = a7;
  uint64_t v8 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v92 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000FF33C(&qword_1015CFF60) - 8;
  __chkstk_darwin(v99);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for RoundedRectangle();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Image.ResizingMode();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = (uint64_t (**)(void))(sub_1000FF33C(&qword_1015D09E8) - 8);
  __chkstk_darwin(v87);
  uint64_t v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000FF33C(&qword_1015D09F0) - 8;
  __chkstk_darwin(v88);
  uint64_t v101 = (uint64_t)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1000FF33C(&qword_1015D09F8) - 8;
  __chkstk_darwin(v90);
  uint64_t v89 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000FF33C(&qword_1015D0A00) - 8;
  __chkstk_darwin(v91);
  uint64_t v103 = (uint64_t)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v102 = (uint64_t)&v78 - v26;
  id v27 = objc_retain(*(id *)(a1
                          + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0) + 20)));
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for Image.ResizingMode.stretch(_:), v16);
  uint64_t v28 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v29 = v114;
  int v84 = v115;
  uint64_t v83 = v116;
  int v82 = v117;
  uint64_t v81 = v118;
  uint64_t v80 = v119;
  uint64_t v86 = *(int *)(_s26MultipleCuratedCollectionsVMa(0) + 44);
  uint64_t v30 = *(uint64_t *)((char *)v100 + v86);
  uint64_t v31 = v13;
  uint64_t v32 = &v15[*(int *)(v13 + 28)];
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = type metadata accessor for RoundedCornerStyle();
  char v85 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104);
  uint64_t v79 = v34;
  v85(v32, v33, v34);
  *(void *)uint64_t v15 = v30;
  *((void *)v15 + 1) = v30;
  uint64_t v98 = &type metadata accessor for RoundedRectangle;
  sub_100173DDC((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v11[*(int *)(v99 + 44)] = 256;
  sub_1000FF27C((uint64_t)v11, (uint64_t)&v21[*((int *)v87 + 11)], &qword_1015CFF60);
  *(void *)uint64_t v21 = v28;
  *((void *)v21 + 1) = v29;
  v21[16] = v84;
  *((void *)v21 + 3) = v83;
  v21[32] = v82;
  uint64_t v35 = v80;
  *((void *)v21 + 5) = v81;
  *((void *)v21 + 6) = v35;
  swift_retain();
  sub_1000FF2E0((uint64_t)v11, &qword_1015CFF60);
  uint64_t v87 = &type metadata accessor for RoundedRectangle;
  sub_100174240((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v36 = v100;
  uint64_t v37 = v86;
  uint64_t v38 = *(uint64_t *)((char *)v100 + v86);
  uint64_t v39 = v34;
  NSString v40 = v85;
  v85(&v15[*(int *)(v31 + 28)], v33, v39);
  *(void *)uint64_t v15 = v38;
  *((void *)v15 + 1) = v38;
  uint64_t v41 = v101;
  uint64_t v42 = v101 + *(int *)(v88 + 44);
  sub_100173DDC((uint64_t)v15, v42, (uint64_t (*)(void))v98);
  *(_WORD *)(v42 + *(int *)(v99 + 44)) = 256;
  sub_1000FF27C((uint64_t)v21, v41, &qword_1015D09E8);
  uint64_t v43 = v87;
  sub_100174240((uint64_t)v15, (uint64_t (*)(void))v87);
  sub_1000FF2E0((uint64_t)v21, &qword_1015D09E8);
  uint64_t v44 = *(uint64_t *)((char *)v36 + v37);
  v40(&v15[*(int *)(v31 + 28)], v33, v79);
  *(void *)uint64_t v15 = v44;
  *((void *)v15 + 1) = v44;
  id v45 = [self secondarySystemFillColor];
  uint64_t v46 = Color.init(_:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v47 = v92;
  sub_100173DDC((uint64_t)v15, v92, (uint64_t (*)(void))v98);
  uint64_t v48 = v47 + *(int *)(sub_1000FF33C(&qword_1015D0A08) + 36);
  long long v49 = v121;
  *(_OWORD *)uint64_t v48 = v120;
  *(_OWORD *)(v48 + 16) = v49;
  *(void *)(v48 + 32) = v122;
  uint64_t v50 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)(v47 + *(int *)(v50 + 52)) = v46;
  *(_WORD *)(v47 + *(int *)(v50 + 56)) = 256;
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t *)(v47 + *(int *)(sub_1000FF33C(&qword_1015D0A18) + 36));
  *uint64_t v54 = v51;
  v54[1] = v53;
  sub_100174240((uint64_t)v15, (uint64_t (*)(void))v43);
  uint64_t v55 = static Alignment.center.getter();
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t)v89;
  uint64_t v59 = (uint64_t)&v89[*(int *)(v90 + 44)];
  sub_1000FF27C(v47, v59, &qword_1015D09E0);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(sub_1000FF33C(&qword_1015D0A20) + 36));
  *uint64_t v60 = v55;
  v60[1] = v57;
  uint64_t v61 = v101;
  sub_1000FF27C(v101, v58, &qword_1015D09F0);
  sub_1000FF2E0(v47, &qword_1015D09E0);
  sub_1000FF2E0(v61, &qword_1015D09F0);
  uint64_t v62 = v103;
  sub_1000FF27C(v58, v103, &qword_1015D09F8);
  *(unsigned char *)(v62 + *(int *)(v91 + 44)) = 1;
  sub_1000FF2E0(v58, &qword_1015D09F8);
  sub_100101750(v62, v102, &qword_1015D0A00);
  Swift::String v63 = *v36;
  if (*v36)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v64 = v63;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v104[0], v94, v95, v93 & 1, v96, (uint64_t)v104);
    uint64_t v65 = v104[0];
    uint64_t v66 = v104[1];
    char v67 = v105;
    uint64_t v69 = v106;
    uint64_t v68 = v107;
    uint64_t v70 = v109;
    uint64_t v99 = v108;
    uint64_t v71 = v110;
    uint64_t v72 = v111;
    uint64_t v101 = v112;
    LODWORD(v100) = v113;
    uint64_t v73 = v103;
    sub_1000FF27C(v102, v103, &qword_1015D0A00);
    uint64_t v74 = v73;
    uint64_t v75 = v97;
    sub_1000FF27C(v74, v97, &qword_1015D0A00);
    uint64_t v76 = v75 + *(int *)(sub_1000FF33C(&qword_1015D0A28) + 48);
    *(void *)uint64_t v76 = v65;
    *(void *)(v76 + 8) = v66;
    *(unsigned char *)(v76 + 16) = v67;
    *(void *)(v76 + 24) = v69;
    *(void *)(v76 + 32) = v68;
    *(void *)(v76 + 40) = v99;
    *(void *)(v76 + 48) = v70;
    *(void *)(v76 + 56) = v71;
    *(void *)(v76 + 64) = v72;
    *(void *)(v76 + 72) = v101;
    *(unsigned char *)(v76 + 80) = (_BYTE)v100;
    sub_10017FDF0(v65, v66, v67);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000FF2E0(v102, &qword_1015D0A00);
    sub_10017F958(v65, v66, v67);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1000FF2E0(v103, &qword_1015D0A00);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015C750@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10017FDF0(a2, a3, a4 & 1);
  if (a1)
  {
    uint64_t v14 = qword_1015CBB68;
    swift_bridgeObjectRetain();
    if (v14 != -1) {
      swift_once();
    }
    uint64_t v15 = &qword_1016112E8;
  }
  else
  {
    uint64_t v16 = qword_1015CBB70;
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v15 = &qword_1016112F0;
  }
  uint64_t v17 = *v15;
  swift_retain();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = swift_getKeyPath();
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = a3;
  char v20 = a4 & 1;
  *(unsigned char *)(a6 + 16) = v20;
  *(void *)(a6 + 24) = a5;
  *(void *)(a6 + 32) = KeyPath;
  *(void *)(a6 + 40) = v12;
  *(void *)(a6 + 48) = v18;
  *(void *)(a6 + 56) = v17;
  *(void *)(a6 + 64) = v19;
  *(void *)(a6 + 72) = 1;
  *(unsigned char *)(a6 + 80) = 0;
  sub_10017FDF0(a2, a3, v20);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017F958(a2, a3, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10015C91C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  uint64_t v6 = (void (*)(uint64_t *))sub_1001275DC(v3, v4, v5);
  sub_100127C4C();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100F5DFF0;
  uint64_t v8 = *(void **)(a2 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0) + 32));
  *(void *)(v7 + 32) = v8;
  uint64_t v11 = v7;
  specialized Array._endMutation()();
  id v9 = v8;
  v6(&v11);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10015CA14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  char v5 = (void (*)(uint64_t *))sub_1001275DC(v2, v3, v4);
  sub_100127C4C();
  uint64_t v6 = a1 + *(int *)(_s26MultipleCuratedCollectionsVMa(0) + 36);
  uint64_t v8 = *(void *)(v6 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0) + 24));
  v5(&v8);

  return swift_release();
}

uint64_t sub_10015CAD4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Image.init(systemName:)();
  uint64_t v48 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = *a1;
  if (!*a1) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = v11;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v13 = (v54[0] & 1) != 0 ? static Color.white.getter() : static Color.secondary.getter();
  uint64_t v47 = v13;
  uint64_t v50 = v10;
  uint64_t v14 = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  uint64_t v15 = Text.init(_:)();
  uint64_t v19 = *a1;
  if (*a1)
  {
    uint64_t v20 = v15;
    uint64_t v21 = v16;
    uint64_t v22 = v18;
    char v23 = v17 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v24 = v19;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v54[0], v20, v21, v23, v22, (uint64_t)v54);
    sub_10017F958(v20, v21, v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = v54[0];
    uint64_t v26 = v54[1];
    uint64_t v41 = v54[0];
    char v27 = v55;
    uint64_t v28 = v56;
    uint64_t v29 = v57;
    uint64_t v42 = v56;
    uint64_t v30 = v58;
    uint64_t v31 = v59;
    uint64_t v43 = v58;
    uint64_t v44 = v59;
    uint64_t v32 = v60;
    uint64_t v33 = v61;
    uint64_t v34 = v62;
    char v35 = v63;
    char v53 = v55;
    char v51 = v63;
    *(_DWORD *)(a3 + 57) = *(_DWORD *)v52;
    *(_DWORD *)(a3 + 60) = *(_DWORD *)&v52[3];
    uint64_t v36 = KeyPath;
    *(void *)a3 = v50;
    *(void *)(a3 + 8) = v36;
    uint64_t v37 = v47;
    *(void *)(a3 + 16) = v48;
    *(void *)(a3 + 24) = v14;
    *(void *)(a3 + 32) = v37;
    *(void *)(a3 + 40) = v25;
    *(void *)(a3 + 48) = v26;
    *(unsigned char *)(a3 + 56) = v27;
    *(void *)(a3 + 64) = v28;
    *(void *)(a3 + 72) = v29;
    uint64_t v45 = v32;
    uint64_t v46 = v29;
    *(void *)(a3 + 80) = v30;
    *(void *)(a3 + 88) = v31;
    *(void *)(a3 + 96) = v32;
    *(void *)(a3 + 104) = v33;
    *(void *)(a3 + 112) = v34;
    *(unsigned char *)(a3 + 120) = v35;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v38 = v41;
    sub_10017FDF0(v41, v26, v27);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v38, v26, v27);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_7:
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015CEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v116 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityTraits();
  uint64_t v112 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v111 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1000FF33C(&qword_1015D0998);
  __chkstk_darwin(v108);
  uint64_t v107 = (uint64_t (**)())((char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = sub_1000FF33C(&qword_1015D09A0);
  __chkstk_darwin(v114);
  uint64_t v106 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v109 = (char *)&v98 - v7;
  __chkstk_darwin(v8);
  unsigned __int8 v115 = (char *)&v98 - v9;
  uint64_t v10 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  uint64_t v110 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s18SingleCuratedGuideVMa(0);
  uint64_t v103 = *(uint64_t (**)(uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  char v105 = (void **)((char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v125 = (uint64_t)&v98 - v15;
  uint64_t v104 = v16;
  __chkstk_darwin(v17);
  uint64_t v101 = (uint64_t (*)(uint64_t))((char *)&v98 - v18);
  uint64_t v117 = v19;
  uint64_t v20 = (char *)v1 + *(int *)(v19 + 32);
  uint64_t v21 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v22 = (uint64_t *)&v20[*(int *)(v21 + 28)];
  uint64_t v23 = v22[1];
  uint64_t v127 = *v22;
  uint64_t v128 = v23;
  unint64_t v24 = sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v120 = v24;
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v126 = v1;
  uint64_t v28 = *v1;
  if (*v1)
  {
    uint64_t v29 = v25;
    uint64_t v30 = v26;
    char v31 = v27;
    swift_getKeyPath();
    swift_getKeyPath();
    id v32 = v28;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v113 = v2;
    if (v127) {
      static Color.white.getter();
    }
    else {
      static Color.blue.getter();
    }
    uint64_t v33 = Text.foregroundColor(_:)();
    uint64_t v122 = v34;
    uint64_t v123 = v33;
    int v121 = v35;
    uint64_t v124 = v36;
    swift_release();
    sub_10017F958(v29, v30, v31 & 1);
    swift_bridgeObjectRelease();
    uint64_t v37 = v126;
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100F5CF70;
    uint64_t v39 = (Swift::String *)&v20[*(int *)(v21 + 24)];
    uint64_t countAndFlagsBits = v39->_countAndFlagsBits;
    object = v39->_object;
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_10011A750();
    *(void *)(v38 + 32) = countAndFlagsBits;
    *(void *)(v38 + 40) = object;
    swift_bridgeObjectRetain();
    uint64_t v42 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    uint64_t v127 = v42;
    uint64_t v128 = v44;
    uint64_t v45 = Text.init<A>(_:)();
    uint64_t v48 = *v37;
    if (*v37)
    {
      uint64_t v49 = v45;
      uint64_t v50 = v46;
      char v51 = v47;
      swift_getKeyPath();
      swift_getKeyPath();
      id v52 = v48;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      if (v127) {
        static Color.white.getter();
      }
      else {
        static Color.blue.getter();
      }
      char v53 = v51 & 1;
      uint64_t v54 = Text.foregroundColor(_:)();
      uint64_t v119 = v55;
      uint64_t v120 = v54;
      int v118 = v56;
      uint64_t v58 = v57;
      swift_release();
      sub_10017F958(v49, v50, v53);
      swift_bridgeObjectRelease();
      int v59 = *((unsigned __int8 *)v126 + *(int *)(v117 + 36));
      uint64_t v60 = (id *)v101;
      sub_100173DDC((uint64_t)v126, (uint64_t)v101, _s18SingleCuratedGuideVMa);
      uint64_t v102 = v58;
      if (v59 != 1)
      {
        sub_100174240((uint64_t)v60, _s18SingleCuratedGuideVMa);
        goto LABEL_14;
      }
      if (*v60)
      {
        uint64_t v61 = (unsigned __int8 *)*v60;
        sub_100174240((uint64_t)v60, _s18SingleCuratedGuideVMa);
        int v62 = v61[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase];

        if (v62 == 2)
        {
          int v63 = v118 & 1;
          uint64_t v65 = v119;
          uint64_t v64 = v120;
          sub_10017FDF0(v120, v119, v118 & 1);
          swift_bridgeObjectRetain();
          uint64_t v66 = v58;
          uint64_t v67 = v64;
          uint64_t v68 = v66;
LABEL_15:
          uint64_t v76 = v125;
          uint64_t v75 = (uint64_t)v126;
          uint64_t v101 = _s18SingleCuratedGuideVMa;
          sub_100173DDC((uint64_t)v126, v125, _s18SingleCuratedGuideVMa);
          uint64_t v77 = *((unsigned __int8 *)v103 + 80);
          uint64_t v110 = (char *)(((v77 + 16) & ~v77) + v104);
          uint64_t v78 = (v77 + 16) & ~v77;
          uint64_t v117 = v78;
          uint64_t v104 = v77 | 7;
          uint64_t v79 = swift_allocObject();
          uint64_t v103 = _s18SingleCuratedGuideVMa;
          sub_100173E44(v76, v79 + v78, _s18SingleCuratedGuideVMa);
          uint64_t v80 = v105;
          sub_100173DDC(v75, (uint64_t)v105, _s18SingleCuratedGuideVMa);
          uint64_t v81 = (uint64_t)v107;
          *uint64_t v107 = sub_100180B78;
          *(void *)(v81 + 8) = v79;
          uint64_t v82 = v81 + *(int *)(v108 + 36);
          sub_10017FDF0(v67, v65, v63);
          swift_bridgeObjectRetain();
          swift_retain();
          *(void *)uint64_t v82 = static VerticalAlignment.center.getter();
          *(void *)(v82 + 8) = 0x4010000000000000;
          *(unsigned char *)(v82 + 16) = 0;
          uint64_t v83 = v82 + *(int *)(sub_1000FF33C(&qword_1015D09C8) + 44);
          uint64_t v98 = v68;
          sub_10015DA74(v80, v67, v65, v63, v68, v83);
          sub_100174240((uint64_t)v80, _s18SingleCuratedGuideVMa);
          uint64_t v100 = v67;
          int v99 = v63;
          sub_10017F958(v67, v65, v63);
          swift_release();
          swift_bridgeObjectRelease();
          sub_1001010F8((unint64_t *)&unk_1015D09D0, &qword_1015D0998);
          uint64_t v84 = (uint64_t)v106;
          View.accessibility(identifier:)();
          sub_1000FF2E0(v81, &qword_1015D0998);
          uint64_t v85 = (uint64_t)v109;
          ModifiedContent<>.accessibilityAutomationType(_:)();
          sub_1000FF2E0(v84, &qword_1015D09A0);
          uint64_t v86 = v111;
          static AccessibilityTraits.isButton.getter();
          uint64_t v87 = (uint64_t)v115;
          ModifiedContent<>.accessibilityRemoveTraits(_:)();
          (*(void (**)(char *, uint64_t))(v112 + 8))(v86, v113);
          sub_1000FF2E0(v85, &qword_1015D09A0);
          LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
          v88._uint64_t countAndFlagsBits = 0x20776F6853;
          v88._object = (void *)0xE500000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v88);
          LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
          v89._uint64_t countAndFlagsBits = 0;
          v89._object = (void *)0xE000000000000000;
          LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v89);
          LocalizedStringKey.init(stringInterpolation:)();
          uint64_t v90 = Text.init(_:tableName:bundle:comment:)();
          uint64_t v92 = v91;
          char v94 = v93 & 1;
          uint64_t v95 = v125;
          sub_100173DDC((uint64_t)v126, v125, v101);
          uint64_t v96 = swift_allocObject();
          sub_100173E44(v95, v96 + v117, v103);
          ModifiedContent<>.accessibilityAction(named:_:)();
          swift_release();
          sub_10017F958(v90, v92, v94);
          swift_bridgeObjectRelease();
          sub_10017F958(v123, v122, v121 & 1);
          swift_bridgeObjectRelease();
          sub_10017F958(v120, v119, v118 & 1);
          swift_bridgeObjectRelease();
          sub_10017F958(v100, v65, v99);
          swift_bridgeObjectRelease();
          return sub_1000FF2E0(v87, &qword_1015D09A0);
        }
LABEL_14:
        LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v69._uint64_t countAndFlagsBits = 0;
        v69._object = (void *)0xE000000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v69);
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*v39);
        v70._uint64_t countAndFlagsBits = 8250;
        v70._object = (void *)0xE200000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v70);
        LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
        v71._uint64_t countAndFlagsBits = 0;
        v71._object = (void *)0xE000000000000000;
        LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v71);
        LocalizedStringKey.init(stringInterpolation:)();
        uint64_t v67 = Text.init(_:tableName:bundle:comment:)();
        uint64_t v65 = v72;
        uint64_t v68 = v73;
        int v63 = v74 & 1;
        goto LABEL_15;
      }
    }
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10015DA74@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v100 = a5;
  int v97 = a4;
  uint64_t v99 = a3;
  uint64_t v98 = a2;
  uint64_t v101 = a6;
  uint64_t v7 = sub_1000FF33C(&qword_1015D09E0);
  __chkstk_darwin(v7 - 8);
  uint64_t v96 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1000FF33C(&qword_1015CFF60) - 8;
  __chkstk_darwin(v103);
  uint64_t v92 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RoundedRectangle() - 8;
  uint64_t v86 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Image.ResizingMode();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000FF33C(&qword_1015D09E8) - 8;
  __chkstk_darwin(v89);
  uint64_t v18 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_1000FF33C(&qword_1015D09F0) - 8;
  __chkstk_darwin(v91);
  uint64_t v90 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000FF33C(&qword_1015D09F8) - 8;
  __chkstk_darwin(v94);
  char v93 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000FF33C(&qword_1015D0A00) - 8;
  __chkstk_darwin(v95);
  uint64_t v105 = (uint64_t)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v104 = (uint64_t)&v76 - v23;
  uint64_t v24 = _s18SingleCuratedGuideVMa(0);
  uint64_t v25 = *(int *)(v24 + 32);
  uint64_t v87 = a1;
  id v26 = objc_retain(*(void **)((char *)a1
                             + v25
                             + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0) + 20)));
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Image.ResizingMode.stretch(_:), v13);
  uint64_t v27 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v84 = v116;
  int v83 = v117;
  uint64_t v82 = v118;
  int v81 = v119;
  uint64_t v88 = *(int *)(v24 + 40);
  uint64_t v28 = *(uint64_t *)((char *)a1 + v88);
  uint64_t v79 = v120;
  uint64_t v80 = v121;
  uint64_t v29 = &v12[*(int *)(v10 + 28)];
  uint64_t v30 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v31 = type metadata accessor for RoundedCornerStyle();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 104);
  uint64_t v85 = v32 + 104;
  unsigned int v78 = v30;
  v33(v29, v30, v31);
  uint64_t v77 = v33;
  *(void *)uint64_t v12 = v28;
  *((void *)v12 + 1) = v28;
  uint64_t v102 = &type metadata accessor for RoundedRectangle;
  uint64_t v34 = v92;
  sub_100173DDC((uint64_t)v12, v92, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v34 + *(int *)(v103 + 44)) = 256;
  sub_1000FF27C(v34, (uint64_t)&v18[*(int *)(v89 + 44)], &qword_1015CFF60);
  uint64_t v35 = v84;
  *(void *)uint64_t v18 = v27;
  *((void *)v18 + 1) = v35;
  v18[16] = v83;
  *((void *)v18 + 3) = v82;
  v18[32] = v81;
  uint64_t v36 = v80;
  *((void *)v18 + 5) = v79;
  *((void *)v18 + 6) = v36;
  swift_retain();
  sub_1000FF2E0(v34, &qword_1015CFF60);
  sub_100174240((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  uint64_t v37 = v87;
  uint64_t v38 = v88;
  uint64_t v39 = *(uint64_t *)((char *)v87 + v88);
  uint64_t v40 = v86;
  v33(&v12[*(int *)(v86 + 28)], v30, v31);
  *(void *)uint64_t v12 = v39;
  *((void *)v12 + 1) = v39;
  uint64_t v41 = (uint64_t)v90;
  uint64_t v42 = (uint64_t)&v90[*(int *)(v91 + 44)];
  sub_100173DDC((uint64_t)v12, v42, (uint64_t (*)(void))v102);
  *(_WORD *)(v42 + *(int *)(v103 + 44)) = 256;
  sub_1000FF27C((uint64_t)v18, v41, &qword_1015D09E8);
  sub_100174240((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0((uint64_t)v18, &qword_1015D09E8);
  uint64_t v43 = *(uint64_t *)((char *)v37 + v38);
  v77(&v12[*(int *)(v40 + 28)], v78, v31);
  *(void *)uint64_t v12 = v43;
  *((void *)v12 + 1) = v43;
  id v44 = [self secondarySystemFillColor];
  uint64_t v45 = Color.init(_:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v46 = v96;
  sub_100173DDC((uint64_t)v12, v96, (uint64_t (*)(void))v102);
  uint64_t v47 = v46 + *(int *)(sub_1000FF33C(&qword_1015D0A08) + 36);
  long long v48 = v123;
  *(_OWORD *)uint64_t v47 = v122;
  *(_OWORD *)(v47 + 16) = v48;
  *(void *)(v47 + 32) = v124;
  uint64_t v49 = sub_1000FF33C(&qword_1015D0A10);
  *(void *)(v46 + *(int *)(v49 + 52)) = v45;
  *(_WORD *)(v46 + *(int *)(v49 + 56)) = 256;
  uint64_t v50 = static Alignment.center.getter();
  uint64_t v52 = v51;
  char v53 = (uint64_t *)(v46 + *(int *)(sub_1000FF33C(&qword_1015D0A18) + 36));
  *char v53 = v50;
  v53[1] = v52;
  sub_100174240((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v54 = static Alignment.center.getter();
  uint64_t v56 = v55;
  uint64_t v57 = (uint64_t)v93;
  uint64_t v58 = (uint64_t)&v93[*(int *)(v94 + 44)];
  sub_1000FF27C(v46, v58, &qword_1015D09E0);
  int v59 = (uint64_t *)(v58 + *(int *)(sub_1000FF33C(&qword_1015D0A20) + 36));
  *int v59 = v54;
  v59[1] = v56;
  sub_1000FF27C(v41, v57, &qword_1015D09F0);
  sub_1000FF2E0(v46, &qword_1015D09E0);
  sub_1000FF2E0(v41, &qword_1015D09F0);
  uint64_t v60 = v105;
  sub_1000FF27C(v57, v105, &qword_1015D09F8);
  *(unsigned char *)(v60 + *(int *)(v95 + 44)) = 1;
  sub_1000FF2E0(v57, &qword_1015D09F8);
  sub_100101750(v60, v104, &qword_1015D0A00);
  uint64_t v61 = *v37;
  if (*v37)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v62 = v61;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v106[0], v98, v99, v97 & 1, v100, (uint64_t)v106);
    uint64_t v63 = v106[0];
    uint64_t v64 = v106[1];
    char v65 = v107;
    uint64_t v67 = v108;
    uint64_t v66 = v109;
    uint64_t v68 = v111;
    uint64_t v100 = v110;
    uint64_t v69 = v112;
    uint64_t v70 = v113;
    uint64_t v103 = v114;
    LODWORD(v102) = v115;
    uint64_t v71 = v105;
    sub_1000FF27C(v104, v105, &qword_1015D0A00);
    uint64_t v72 = v71;
    uint64_t v73 = v101;
    sub_1000FF27C(v72, v101, &qword_1015D0A00);
    uint64_t v74 = v73 + *(int *)(sub_1000FF33C(&qword_1015D0A28) + 48);
    *(void *)uint64_t v74 = v63;
    *(void *)(v74 + 8) = v64;
    *(unsigned char *)(v74 + 16) = v65;
    *(void *)(v74 + 24) = v67;
    *(void *)(v74 + 32) = v66;
    *(void *)(v74 + 40) = v100;
    *(void *)(v74 + 48) = v68;
    *(void *)(v74 + 56) = v69;
    *(void *)(v74 + 64) = v70;
    *(void *)(v74 + 72) = v103;
    *(unsigned char *)(v74 + 80) = (_BYTE)v102;
    sub_10017FDF0(v63, v64, v65);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000FF2E0(v104, &qword_1015D0A00);
    sub_10017F958(v63, v64, v65);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1000FF2E0(v105, &qword_1015D0A00);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015E54C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  uint64_t v5 = (void (*)(uint64_t *))sub_1001275DC(v2, v3, v4);
  sub_100127C4C();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100F5DFF0;
  uint64_t v7 = a1 + *(int *)(_s18SingleCuratedGuideVMa(0) + 32);
  uint64_t v8 = *(void **)(v7 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0) + 32));
  *(void *)(v6 + 32) = v8;
  uint64_t v11 = v6;
  specialized Array._endMutation()();
  id v9 = v8;
  v5(&v11);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10015E658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v2 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  id v62 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AccessibilityTraits();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  int v59 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s18UserGeneratedGuideVMa(0);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v54 + 64);
  __chkstk_darwin(v6);
  uint64_t v63 = (uint64_t)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000FF33C(&qword_1015D0930);
  __chkstk_darwin(v64);
  uint64_t v57 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v58 = (char *)v47 - v10;
  __chkstk_darwin(v11);
  char v65 = (char *)v47 - v12;
  uint64_t v13 = type metadata accessor for AttributedString();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  uint64_t v17 = *v1;
  if (*v1)
  {
    uint64_t v56 = (Swift::String *)((char *)v1 + *(int *)(v6 + 28) + *(int *)(v16 + 20));
    uint64_t countAndFlagsBits = v56->_countAndFlagsBits;
    uint64_t object = (uint64_t)v56->_object;
    swift_getKeyPath();
    swift_getKeyPath();
    id v20 = v17;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015EE30(countAndFlagsBits, object, v87, (uint64_t)v15);
    uint64_t v21 = Text.init(_:)();
    uint64_t v50 = v22;
    uint64_t v51 = v21;
    uint64_t v23 = v22;
    uint64_t v25 = v24;
    v47[0] = (uint64_t)v1;
    v47[1] = v24;
    int v27 = v26 & 1;
    uint64_t v55 = _s18UserGeneratedGuideVMa;
    uint64_t v28 = v1;
    uint64_t v29 = v63;
    sub_100173DDC((uint64_t)v1, v63, _s18UserGeneratedGuideVMa);
    uint64_t v30 = *(unsigned __int8 *)(v54 + 80);
    uint64_t v53 = ((v30 + 16) & ~v30) + v7;
    uint64_t v54 = (v30 + 16) & ~v30;
    uint64_t v31 = v54;
    uint64_t v52 = v30 | 7;
    uint64_t v32 = swift_allocObject();
    long long v48 = _s18UserGeneratedGuideVMa;
    sub_100173E44(v29, v32 + v31, _s18UserGeneratedGuideVMa);
    LOBYTE(v31) = v27;
    int v49 = v27;
    sub_10017FDF0(v21, v23, v27);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v33 = static VerticalAlignment.center.getter();
    sub_10015F414(v28, v21, v23, v31, v25, (uint64_t)&v87);
    sub_10017F958(v21, v23, v31);
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)&v89[4] + 9);
    long long v83 = v89[3];
    v84[0] = v89[4];
    long long v78 = v87;
    long long v79 = v88;
    long long v80 = v89[0];
    long long v81 = v89[1];
    long long v82 = v89[2];
    char v86 = 0;
    *(_OWORD *)((char *)&v85[3] + 7) = v89[1];
    *(_OWORD *)((char *)&v85[2] + 7) = v89[0];
    *(_OWORD *)((char *)&v85[1] + 7) = v88;
    *(_OWORD *)((char *)v85 + 7) = v87;
    v85[7] = *(_OWORD *)((char *)v84 + 9);
    *(_OWORD *)((char *)&v85[6] + 7) = v89[4];
    *(_OWORD *)((char *)&v85[5] + 7) = v89[3];
    *(_OWORD *)((char *)&v85[4] + 7) = v89[2];
    *(void *)&long long v87 = sub_100180D00;
    *((void *)&v87 + 1) = v32;
    *(void *)&long long v88 = v33;
    *((void *)&v88 + 1) = 0x4010000000000000;
    LOBYTE(v89[0]) = 0;
    *(_OWORD *)((char *)&v89[3] + 1) = v85[3];
    *(_OWORD *)((char *)&v89[2] + 1) = v85[2];
    *(_OWORD *)((char *)&v89[1] + 1) = v85[1];
    *(_OWORD *)((char *)v89 + 1) = v85[0];
    *(_OWORD *)((char *)&v89[7] + 1) = v85[7];
    *(_OWORD *)((char *)&v89[6] + 1) = v85[6];
    *(_OWORD *)((char *)&v89[5] + 1) = v85[5];
    *(_OWORD *)((char *)&v89[4] + 1) = v85[4];
    long long v75 = v89[6];
    long long v76 = v89[7];
    char v77 = BYTE8(v84[1]);
    long long v69 = v89[0];
    long long v70 = v89[1];
    long long v71 = v89[2];
    long long v72 = v89[3];
    long long v73 = v89[4];
    long long v74 = v89[5];
    long long v67 = v87;
    long long v68 = v88;
    sub_1000FF33C(&qword_1015D0948);
    sub_1001010F8((unint64_t *)&unk_1015D0950, &qword_1015D0948);
    uint64_t v34 = (uint64_t)v57;
    View.accessibility(identifier:)();
    sub_100180234((uint64_t)&v87);
    uint64_t v35 = (uint64_t)v58;
    ModifiedContent<>.accessibilityAutomationType(_:)();
    sub_1000FF2E0(v34, &qword_1015D0930);
    uint64_t v36 = v59;
    static AccessibilityTraits.isButton.getter();
    uint64_t v37 = (uint64_t)v65;
    ModifiedContent<>.accessibilityRemoveTraits(_:)();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v61);
    sub_1000FF2E0(v35, &qword_1015D0930);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v38._uint64_t countAndFlagsBits = 0x20776F6853;
    v38._uint64_t object = (void *)0xE500000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v38);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*v56);
    v39._uint64_t countAndFlagsBits = 0;
    v39._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v39);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v40 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v42 = v41;
    char v44 = v43 & 1;
    sub_100173DDC(v47[0], v29, v55);
    uint64_t v45 = swift_allocObject();
    sub_100173E44(v29, v45 + v54, v48);
    ModifiedContent<>.accessibilityAction(named:_:)();
    swift_release();
    sub_10017F958(v40, v42, v44);
    swift_bridgeObjectRelease();
    sub_10017F958(v51, v50, v49);
    swift_bridgeObjectRelease();
    return sub_1000FF2E0(v37, &qword_1015D0930);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015EE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v37 = a3;
  uint64_t v42 = a4;
  uint64_t v6 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v6 - 8);
  Swift::String v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v35 = (uint64_t)&v34 - v16;
  uint64_t v17 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v17 - 8);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v18._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v44._uint64_t object = (void *)0x8000000100F78680;
  v18._uint64_t object = (void *)0x8000000100F78650;
  v19._uint64_t countAndFlagsBits = 0x4025206E49;
  v19._uint64_t object = (void *)0xE500000000000000;
  v44._uint64_t countAndFlagsBits = 0xD000000000000021;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)qword_101611820, v19, v44);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100F5CF70;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_10011A750();
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  uint64_t v21 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v22 = v42;
  AttributedString.init(_:attributes:)();
  uint64_t v23 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v22, v41);
  v43[0] = v21;
  v43[1] = a2;
  uint64_t v24 = type metadata accessor for Locale();
  uint64_t v25 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v39, 1, 1, v24);
  sub_1001732B8(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_100180324();
  swift_bridgeObjectRetain();
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_1000FF2E0(v25, &qword_1015D0A30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v13, 1, v40) == 1)
  {
    char v26 = &qword_1015D0A38;
    uint64_t v27 = (uint64_t)v13;
  }
  else
  {
    uint64_t v28 = v35;
    sub_100101750((uint64_t)v13, v35, &qword_1015D0A40);
    uint64_t v29 = v36;
    sub_1000FF27C(v28, v36, &qword_1015D0A40);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    if (v37) {
      uint64_t v31 = static Color.white.getter();
    }
    else {
      uint64_t v31 = static Color.blue.getter();
    }
    v43[4] = v31;
    sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
    uint64_t v32 = (void (*)(void *, void))AttributedString.subscript.modify();
    sub_100180AE8();
    AttributedSubstring.subscript.setter();
    v32(v43, 0);
    sub_1000FF2E0(v29, &qword_1015D0A40);
    uint64_t v27 = v28;
    char v26 = &qword_1015D0A40;
  }
  return sub_1000FF2E0(v27, v26);
}

uint64_t sub_10015F414@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = Image.init(systemName:)();
  uint64_t v13 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = *a1;
  if (*a1)
  {
    char v33 = a4;
    uint64_t v34 = KeyPath;
    uint64_t v35 = v13;
    swift_getKeyPath();
    swift_getKeyPath();
    id v16 = v15;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v17 = v12;
    if (v37[0]) {
      uint64_t v18 = static Color.white.getter();
    }
    else {
      uint64_t v18 = static Color.secondary.getter();
    }
    uint64_t v36 = v18;
    uint64_t v19 = swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    id v20 = v16;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v37[0], a2, a3, v33 & 1, a5, (uint64_t)v37);
    uint64_t v21 = v37[0];
    uint64_t v22 = v37[1];
    char v23 = v38;
    uint64_t v24 = v39;
    uint64_t v25 = v40;
    uint64_t v27 = v41;
    uint64_t v26 = v42;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    uint64_t v30 = v45;
    char v31 = v46;
    *(void *)a6 = v17;
    *(void *)(a6 + 8) = v34;
    *(void *)(a6 + 16) = v35;
    *(void *)(a6 + 24) = v19;
    *(void *)(a6 + 32) = v36;
    *(void *)(a6 + 40) = v21;
    *(void *)(a6 + 48) = v22;
    *(unsigned char *)(a6 + 56) = v23;
    *(void *)(a6 + 64) = v24;
    *(void *)(a6 + 72) = v25;
    *(void *)(a6 + 80) = v27;
    *(void *)(a6 + 88) = v26;
    *(void *)(a6 + 96) = v28;
    *(void *)(a6 + 104) = v29;
    *(void *)(a6 + 112) = v30;
    *(unsigned char *)(a6 + 120) = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017FDF0(v21, v22, v23);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v21, v22, v23);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10015F74C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  uint64_t v5 = (void (*)(uint64_t *))sub_1001275FC(v2, v3, v4);
  sub_100127C4C();
  uint64_t v6 = a1 + *(int *)(_s18UserGeneratedGuideVMa(0) + 28);
  uint64_t v8 = *(void *)(v6 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0) + 24));
  v5(&v8);

  return swift_release();
}

uint64_t sub_10015F810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v141 = a1;
  uint64_t v1 = sub_1000FF33C(&qword_1015D0A98);
  __chkstk_darwin(v1 - 8);
  uint64_t v120 = (uint64_t *)((char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = sub_1000FF33C(&qword_1015D0AA0);
  __chkstk_darwin(v140);
  uint64_t v119 = (uint64_t)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v121 = (uint64_t)&v114 - v5;
  uint64_t v138 = sub_1000FF33C(&qword_1015D0AA8);
  __chkstk_darwin(v138);
  uint64_t v139 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D0AB0);
  __chkstk_darwin(v7 - 8);
  unsigned __int8 v117 = (uint64_t *)((char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v137 = sub_1000FF33C(&qword_1015D0AB8);
  __chkstk_darwin(v137);
  uint64_t v116 = (uint64_t)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v118 = (uint64_t)&v114 - v11;
  uint64_t v12 = sub_1000FF33C(&qword_1015D0AC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v136 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D0AC8);
  __chkstk_darwin(v14 - 8);
  uint64_t v133 = (uint64_t *)((char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = sub_1000FF33C(&qword_1015D0AD0);
  __chkstk_darwin(v132);
  uint64_t v135 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v17 - 8);
  uint64_t v124 = (char *)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1000FF33C(&qword_1015D0AD8);
  __chkstk_darwin(v131);
  uint64_t v130 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v134 = (char *)&v114 - v21;
  uint64_t v22 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v114 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000FF33C(&qword_1015D0AE0);
  __chkstk_darwin(v25 - 8);
  uint64_t v143 = (uint64_t)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_101611820;
  NSString v28 = String._bridgeToObjectiveC()();
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v27 localizedStringForKey:v28 value:v29 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v32 = swift_allocObject();
  long long v142 = xmmword_100F5CF70;
  *(_OWORD *)(v32 + 16) = xmmword_100F5CF70;
  uint64_t v33 = _s17ThirdPartyRatingsVMa(0);
  uint64_t v34 = v145;
  uint64_t v35 = (char *)v145 + *(int *)(v33 + 28);
  uint64_t v36 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  uint64_t v37 = *(void *)&v35[v36[7]];
  *(void *)(v32 + 56) = &type metadata for Int;
  *(void *)(v32 + 64) = &protocol witness table for Int;
  *(void *)(v32 + 32) = v37;
  uint64_t v128 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v129 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)qword_101611820;
  NSString v40 = String._bridgeToObjectiveC()();
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v39 localizedStringForKey:v40 value:v41 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v123 = v31;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = v142;
  uint64_t v122 = v36[5];
  int v44 = *(_DWORD *)&v35[v122];
  *(void *)(v43 + 56) = &type metadata for Float;
  *(void *)(v43 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v43 + 32) = v44;
  uint64_t v125 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Image.init(systemName:)();
  uint64_t v47 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v48 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v49 = *(void *)(v48 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v24, v47, v48);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v24, 0, 1, v48);
  uint64_t v50 = Image.renderingMode(_:)();
  swift_release();
  sub_1000FF2E0((uint64_t)v24, &qword_1015D0A90);
  uint64_t v127 = v33;
  uint64_t v144 = *(int *)(v33 + 32);
  BOOL v51 = *((unsigned char *)v34 + v144) == 1;
  uint64_t v126 = v46;
  unsigned __int8 v115 = v36;
  if (v51)
  {
    uint64_t v52 = v34;
    uint64_t v53 = v50;
    uint64_t v54 = *v52;
    if (!*v52) {
      goto LABEL_30;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v55 = v54;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v146)
    {
      uint64_t v50 = v53;
      if (qword_1015CBB68 != -1) {
        swift_once();
      }
      uint64_t v57 = qword_1016112E8;
    }
    else
    {
      uint64_t v50 = v53;
      if (qword_1015CBB70 != -1) {
        swift_once();
      }
      uint64_t v57 = qword_1016112F0;
    }
    swift_retain();
  }
  else
  {
    id v56 = *(id *)&v35[v36[6]];
    uint64_t v57 = Color.init(uiColor:)();
  }
  uint64_t KeyPath = swift_getKeyPath();
  static Font.caption.getter();
  static Font.Weight.semibold.getter();
  uint64_t v59 = Font.weight(_:)();
  swift_release();
  uint64_t v60 = swift_getKeyPath();
  uint64_t v146 = v50;
  uint64_t v147 = KeyPath;
  uint64_t v148 = v57;
  uint64_t v149 = v60;
  uint64_t v150 = v59;
  uint64_t v151 = 0x4059000000000000;
  sub_1000FF33C(&qword_1015D0AE8);
  sub_100181244();
  View.accessibilityIdentifier(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v61._uint64_t countAndFlagsBits = 0;
  v61._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v61);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = v142;
  int v63 = *(_DWORD *)&v35[v122];
  *(void *)(v62 + 56) = &type metadata for Float;
  *(void *)(v62 + 64) = &protocol witness table for Float;
  *(_DWORD *)(v62 + 32) = v63;
  v64._uint64_t countAndFlagsBits = String.init(format:_:)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v64);
  swift_bridgeObjectRelease();
  v65._uint64_t countAndFlagsBits = 0;
  v65._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v65);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v66 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v68 = v67;
  char v70 = v69;
  long long v71 = v145;
  if (*((unsigned char *)v145 + v144) == 1)
  {
    long long v72 = *v145;
    if (*v145)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v73 = v72;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      if (v146)
      {
        if (qword_1015CBB68 == -1) {
          goto LABEL_21;
        }
      }
      else if (qword_1015CBB70 == -1)
      {
LABEL_21:
        swift_retain();
        goto LABEL_22;
      }
      swift_once();
      goto LABEL_21;
    }
LABEL_30:
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
    return result;
  }
  id v74 = *(id *)&v35[v115[6]];
  Color.init(uiColor:)();
LABEL_22:
  char v75 = v70 & 1;
  uint64_t v76 = Text.foregroundColor(_:)();
  uint64_t v78 = v77;
  char v80 = v79;
  swift_release();
  sub_10017F958(v66, v68, v75);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  if (*((unsigned char *)v71 + v144) == 1) {
    static Font.Weight.regular.getter();
  }
  else {
    static Font.Weight.bold.getter();
  }
  uint64_t v81 = (uint64_t)v135;
  Font.weight(_:)();
  swift_release();
  char v82 = v80 & 1;
  uint64_t v83 = Text.font(_:)();
  uint64_t v85 = v84;
  char v87 = v86;
  uint64_t v89 = v88;
  swift_release();
  sub_10017F958(v76, v78, v82);
  swift_bridgeObjectRelease();
  uint64_t v90 = swift_getKeyPath();
  uint64_t v146 = v83;
  uint64_t v147 = v85;
  LOBYTE(v148) = v87 & 1;
  uint64_t v149 = v89;
  uint64_t v150 = v90;
  uint64_t v151 = 1;
  char v152 = 0;
  uint64_t v153 = 0x4059000000000000;
  sub_1000FF33C(&qword_1015D0B28);
  sub_100181440();
  uint64_t v91 = (uint64_t)v130;
  View.accessibilityIdentifier(_:)();
  sub_10017F958(v83, v85, v87 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v146 = v125;
  uint64_t v147 = v126;
  sub_100180324();
  uint64_t v92 = (uint64_t)v134;
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_1000FF2E0(v91, &qword_1015D0AD8);
  swift_bridgeObjectRelease();
  char v93 = v145;
  sub_1000FF33C(&qword_1015D8660);
  ScaledMetric.wrappedValue.getter();
  uint64_t v94 = v146;
  uint64_t v95 = static VerticalAlignment.center.getter();
  uint64_t v96 = (uint64_t)v133;
  *uint64_t v133 = v95;
  *(void *)(v96 + 8) = v94;
  *(unsigned char *)(v96 + 16) = 0;
  uint64_t v97 = sub_1000FF33C(&qword_1015D0B38);
  uint64_t v98 = v128;
  uint64_t v99 = v129;
  sub_100160904(v92, v93, v128, v129, v96 + *(int *)(v97 + 44));
  sub_1000FF27C(v96, v81, &qword_1015D0AC8);
  *(unsigned char *)(v81 + *(int *)(v132 + 36)) = 0;
  sub_1000FF2E0(v96, &qword_1015D0AC8);
  if (*((unsigned char *)v93 + v144) == 1)
  {
    uint64_t v100 = static VerticalAlignment.center.getter();
    uint64_t v101 = (uint64_t)v117;
    *unsigned __int8 v117 = v100;
    *(void *)(v101 + 8) = 0x4008000000000000;
    *(unsigned char *)(v101 + 16) = 0;
    uint64_t v102 = sub_1000FF33C(&qword_1015D0B68);
    uint64_t v103 = v143;
    sub_100161164(v143, v92, v93, v98, v99, v101 + *(int *)(v102 + 44));
    swift_bridgeObjectRelease();
    uint64_t v104 = v116;
    sub_1000FF27C(v101, v116, &qword_1015D0AB0);
    *(void *)(v104 + *(int *)(v137 + 36)) = 0x4024000000000000;
    sub_1000FF2E0(v101, &qword_1015D0AB0);
    uint64_t v105 = &qword_1015D0AB8;
    uint64_t v106 = v118;
    sub_100101750(v104, v118, &qword_1015D0AB8);
    sub_1000FF27C(v106, v139, &qword_1015D0AB8);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v108 = static VerticalAlignment.center.getter();
    uint64_t v109 = (uint64_t)v120;
    *uint64_t v120 = v108;
    *(void *)(v109 + 8) = 0x4008000000000000;
    *(unsigned char *)(v109 + 16) = 0;
    uint64_t v110 = sub_1000FF33C(&qword_1015D0B40);
    uint64_t v103 = v143;
    sub_100161DD4(v143, v81, &qword_1015D0AD0, &qword_1015D0C00, v109 + *(int *)(v110 + 44));
    uint64_t v111 = v119;
    sub_1000FF27C(v109, v119, &qword_1015D0A98);
    uint64_t v112 = v111 + *(int *)(v140 + 36);
    *(void *)uint64_t v112 = 0xD000000000000016;
    *(void *)(v112 + 8) = 0x8000000100F78770;
    *(unsigned char *)(v112 + 16) = 9;
    sub_1000FF2E0(v109, &qword_1015D0A98);
    uint64_t v105 = &qword_1015D0AA0;
    uint64_t v106 = v121;
    sub_100101750(v111, v121, &qword_1015D0AA0);
    sub_1000FF27C(v106, v139, &qword_1015D0AA0);
  }
  swift_storeEnumTagMultiPayload();
  sub_100181500();
  sub_1001815C4();
  uint64_t v107 = (uint64_t)v136;
  _ConditionalContent<>.init(storage:)();
  sub_1000FF2E0(v106, v105);
  sub_100101750(v107, v141, &qword_1015D0AC0);
  sub_1000FF2E0(v81, &qword_1015D0AD0);
  sub_1000FF2E0(v92, &qword_1015D0AD8);
  return sub_1000FF2E0(v103, &qword_1015D0AE0);
}

uint64_t sub_100160904@<X0>(uint64_t a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v88 = a4;
  uint64_t v82 = a5;
  uint64_t v83 = a3;
  uint64_t v7 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_1000FF33C(&qword_1015D0B80);
  __chkstk_darwin(v81);
  uint64_t v87 = (uint64_t)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v80 = (char *)v73 - v12;
  __chkstk_darwin(v13);
  char v79 = (char *)v73 - v14;
  __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)v73 - v16;
  uint64_t v17 = sub_1000FF33C(&qword_1015D0AD8);
  __chkstk_darwin(v17 - 8);
  uint64_t v86 = (uint64_t)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v85 = (uint64_t)v73 - v20;
  sub_1000FF27C(a1, (uint64_t)v73 - v20, &qword_1015D0AD8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._uint64_t countAndFlagsBits = 40;
  v21._uint64_t object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v21);
  uint64_t v22 = (char *)a2 + *(int *)(_s17ThirdPartyRatingsVMa(0) + 28);
  uint64_t v77 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  uint64_t v23 = *(int *)(v77 + 28);
  unint64_t v78 = (unint64_t)v22;
  uint64_t v89 = *(void *)&v22[v23];
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v24._uint64_t countAndFlagsBits = 41;
  v24._uint64_t object = (void *)0xE100000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  v73[1] = v9;
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v25 = Text.init(_:tableName:bundle:comment:)();
  id v74 = a2;
  NSString v29 = *a2;
  if (!v29) {
    goto LABEL_12;
  }
  uint64_t v30 = v25;
  uint64_t v31 = v26;
  uint64_t v32 = v28;
  char v33 = v27 & 1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v34 = v29;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  sub_10015C750(v89, v30, v31, v33, v32, (uint64_t)&v89);
  sub_10017F958(v30, v31, v33);
  swift_bridgeObjectRelease();
  uint64_t v35 = v89;
  uint64_t v36 = v90;
  char v37 = v91;
  uint64_t v75 = v94;
  unint64_t v76 = v96;
  uint64_t v100 = 0x4059000000000000;
  sub_1000FF33C(&qword_1015D0BE8);
  sub_100181860();
  uint64_t v38 = (uint64_t)v80;
  View.accessibilityIdentifier(_:)();
  sub_10017F958(v35, v36, v37);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v89 = v83;
  uint64_t v90 = v88;
  sub_100180324();
  uint64_t v39 = (uint64_t)v79;
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_1000FF2E0(v38, &qword_1015D0B80);
  uint64_t v40 = v84;
  sub_100101750(v39, v84, &qword_1015D0B80);
  NSString v41 = (uint64_t *)(v78 + *(int *)(v77 + 32));
  unint64_t v42 = v41[1];
  if (!v42)
  {
    uint64_t v83 = 0;
    uint64_t v81 = 0;
    uint64_t v88 = 0;
    uint64_t v58 = 0;
LABEL_10:
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    unint64_t v61 = 0;
    char v80 = 0;
    char v79 = 0;
    unint64_t v78 = 0;
    uint64_t v77 = 0;
    goto LABEL_11;
  }
  uint64_t v43 = *v41;
  uint64_t v44 = HIBYTE(v42) & 0xF;
  if ((v42 & 0x2000000000000000) == 0) {
    uint64_t v44 = v43 & 0xFFFFFFFFFFFFLL;
  }
  if (!v44)
  {
    uint64_t v83 = 0;
    uint64_t v81 = 0;
    uint64_t v88 = 0;
    uint64_t v58 = 0;
    unint64_t v42 = 0;
    goto LABEL_10;
  }
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v45._uint64_t countAndFlagsBits = 2125423;
  v45._uint64_t object = (void *)0xE300000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v45);
  v46._uint64_t countAndFlagsBits = v43;
  v46._uint64_t object = (void *)v42;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v46);
  v47._uint64_t countAndFlagsBits = 0;
  v47._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v47);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v48 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v52 = *v74;
  if (*v74)
  {
    uint64_t v53 = v48;
    uint64_t v54 = v49;
    uint64_t v55 = v51;
    char v56 = v50 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v57 = v52;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v89, v53, v54, v56, v55, (uint64_t)&v89);
    sub_10017F958(v53, v54, v56);
    swift_bridgeObjectRelease();
    uint64_t v83 = v89;
    uint64_t v81 = v90;
    uint64_t v88 = v91;
    uint64_t v58 = v92;
    unint64_t v42 = v93;
    uint64_t v59 = v94;
    uint64_t v60 = v95;
    unint64_t v61 = v96;
    char v80 = v97;
    char v79 = v98;
    uint64_t v77 = 0x4024000000000000;
    unint64_t v78 = v99;
LABEL_11:
    uint64_t v62 = v86;
    sub_1000FF27C(v85, v86, &qword_1015D0AD8);
    uint64_t v63 = v87;
    sub_1000FF27C(v40, v87, &qword_1015D0B80);
    uint64_t v64 = v82;
    sub_1000FF27C(v62, v82, &qword_1015D0AD8);
    uint64_t v65 = sub_1000FF33C(&qword_1015D0C08);
    sub_1000FF27C(v63, v64 + *(int *)(v65 + 48), &qword_1015D0B80);
    uint64_t v66 = (uint64_t *)(v64 + *(int *)(v65 + 64));
    uint64_t v67 = v83;
    uint64_t v68 = v81;
    uint64_t *v66 = v83;
    v66[1] = v68;
    uint64_t v69 = v88;
    v66[2] = v88;
    v66[3] = v58;
    uint64_t v88 = v69;
    v66[4] = v42;
    v66[5] = v59;
    unint64_t v76 = v42;
    v66[6] = v60;
    v66[7] = v61;
    char v70 = v79;
    v66[8] = (uint64_t)v80;
    v66[9] = (uint64_t)v70;
    uint64_t v71 = v77;
    v66[10] = v78;
    v66[11] = v71;
    sub_100181114(v67, v68, v69, v58);
    sub_1000FF2E0(v84, &qword_1015D0B80);
    sub_1000FF2E0(v85, &qword_1015D0AD8);
    sub_100180FE4(v67, v68, v88, v58);
    sub_1000FF2E0(v87, &qword_1015D0B80);
    return sub_1000FF2E0(v86, &qword_1015D0AD8);
  }
LABEL_12:
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100161164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v101 = a4;
  unsigned __int8 v115 = a3;
  uint64_t v106 = (char *)a2;
  uint64_t v103 = (char *)a1;
  uint64_t v112 = a6;
  uint64_t v110 = sub_1000FF33C(&qword_1015D0B70);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v98 = (char *)v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v97 = (uint64_t)v94 - v8;
  uint64_t v9 = sub_1000FF33C(&qword_1015D0B78);
  __chkstk_darwin(v9 - 8);
  uint64_t v111 = (uint64_t)v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v114 = (uint64_t)v94 - v12;
  uint64_t v13 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000FF33C(&qword_1015D0B80);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v100 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v99 = (uint64_t)v94 - v18;
  uint64_t v19 = sub_1000FF33C(&qword_1015D0B88);
  __chkstk_darwin(v19 - 8);
  uint64_t v108 = (uint64_t)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v113 = (uint64_t)v94 - v22;
  uint64_t v23 = sub_1000FF33C(&qword_1015D0B90);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015D0B98);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  NSString v29 = (char *)v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000FF33C(&qword_1015D0BA0);
  uint64_t v31 = v30 - 8;
  __chkstk_darwin(v30);
  uint64_t v107 = (uint64_t)v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)v94 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)v94 - v37;
  *(void *)uint64_t v25 = static VerticalAlignment.center.getter();
  *((void *)v25 + 1) = 0x4008000000000000;
  v25[16] = 0;
  uint64_t v39 = sub_1000FF33C(&qword_1015D0BA8);
  sub_100161DD4((uint64_t)v103, (uint64_t)v106, &qword_1015D0AD8, &qword_1015D0BF8, (uint64_t)&v25[*(int *)(v39 + 44)]);
  sub_1000FF27C((uint64_t)v25, (uint64_t)v29, &qword_1015D0B90);
  *(void *)&v29[*(int *)(v27 + 44)] = 0x4059000000000000;
  uint64_t v40 = v115;
  sub_1000FF2E0((uint64_t)v25, &qword_1015D0B90);
  sub_1000FF27C((uint64_t)v29, (uint64_t)v35, &qword_1015D0B98);
  NSString v41 = &v35[*(int *)(v31 + 44)];
  *(void *)NSString v41 = 0xD000000000000016;
  *((void *)v41 + 1) = 0x8000000100F78770;
  v41[16] = 9;
  sub_1000FF2E0((uint64_t)v29, &qword_1015D0B98);
  uint64_t v106 = v38;
  sub_100101750((uint64_t)v35, (uint64_t)v38, &qword_1015D0BA0);
  unint64_t v42 = (char *)v40 + *(int *)(_s17ThirdPartyRatingsVMa(0) + 28);
  uint64_t v43 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  if (v42[v43[9]] == 1)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v44._uint64_t countAndFlagsBits = 40;
    v44._uint64_t object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v44);
    uint64_t v95 = v43;
    uint64_t v45 = v43[7];
    unint64_t v96 = v42;
    uint64_t v116 = *(void *)&v42[v45];
    LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    v46._uint64_t countAndFlagsBits = 41;
    v46._uint64_t object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
    uint64_t v103 = v15;
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v47 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v51 = *v40;
    if (!*v40) {
      goto LABEL_13;
    }
    uint64_t v52 = v47;
    uint64_t v53 = v48;
    uint64_t v54 = v50;
    char v55 = v49 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v56 = v51;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v116, v52, v53, v55, v54, (uint64_t)&v116);
    sub_10017F958(v52, v53, v55);
    swift_bridgeObjectRelease();
    uint64_t v57 = v116;
    uint64_t v58 = v117;
    char v59 = v118;
    v94[0] = v119;
    v94[1] = v121;
    _OWORD v94[2] = v123;
    uint64_t v127 = 0x4024000000000000;
    uint64_t v128 = v101;
    uint64_t v129 = v102;
    sub_1000FF33C(&qword_1015D0BE8);
    sub_100181860();
    sub_100180324();
    uint64_t v60 = (uint64_t)v100;
    View.accessibilityLabel<A>(_:)();
    sub_10017F958(v57, v58, v59);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v61 = v99;
    sub_100101750(v60, v99, &qword_1015D0B80);
    uint64_t v62 = v113;
    sub_100101750(v61, v113, &qword_1015D0B80);
    uint64_t v63 = 0;
    uint64_t v40 = v115;
    unint64_t v42 = v96;
    uint64_t v43 = v95;
  }
  else
  {
    uint64_t v63 = 1;
    uint64_t v62 = v113;
  }
  uint64_t v64 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v62, v63, 1, v105);
  uint64_t v65 = (uint64_t *)&v42[v43[8]];
  unint64_t v66 = v65[1];
  uint64_t v67 = v114;
  if (!v66)
  {
LABEL_12:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56))(v67, v64, 1, v110);
    uint64_t v87 = (uint64_t)v106;
    uint64_t v88 = v107;
    sub_1000FF27C((uint64_t)v106, v107, &qword_1015D0BA0);
    uint64_t v89 = v108;
    sub_1000FF27C(v62, v108, &qword_1015D0B88);
    uint64_t v90 = v111;
    sub_1000FF27C(v67, v111, &qword_1015D0B78);
    uint64_t v91 = v112;
    sub_1000FF27C(v88, v112, &qword_1015D0BA0);
    uint64_t v92 = sub_1000FF33C(&qword_1015D0BB0);
    sub_1000FF27C(v89, v91 + *(int *)(v92 + 48), &qword_1015D0B88);
    sub_1000FF27C(v90, v91 + *(int *)(v92 + 64), &qword_1015D0B78);
    sub_1000FF2E0(v67, &qword_1015D0B78);
    sub_1000FF2E0(v62, &qword_1015D0B88);
    sub_1000FF2E0(v87, &qword_1015D0BA0);
    sub_1000FF2E0(v90, &qword_1015D0B78);
    sub_1000FF2E0(v89, &qword_1015D0B88);
    return sub_1000FF2E0(v88, &qword_1015D0BA0);
  }
  uint64_t v68 = *v65;
  uint64_t v69 = HIBYTE(v66) & 0xF;
  if ((v66 & 0x2000000000000000) == 0) {
    uint64_t v69 = v68 & 0xFFFFFFFFFFFFLL;
  }
  if (!v69)
  {
    uint64_t v64 = 1;
    goto LABEL_12;
  }
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v70._uint64_t countAndFlagsBits = 0;
  v70._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v70);
  v71._uint64_t countAndFlagsBits = v68;
  v71._uint64_t object = (void *)v66;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v71);
  v72._uint64_t countAndFlagsBits = 0;
  v72._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v72);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v73 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v77 = *v40;
  if (*v40)
  {
    uint64_t v78 = v73;
    uint64_t v79 = v74;
    uint64_t v80 = v76;
    char v81 = v75 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v82 = v77;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v116, v78, v79, v81, v80, (uint64_t)&v116);
    sub_10017F958(v78, v79, v81);
    swift_bridgeObjectRelease();
    uint64_t v83 = v116;
    uint64_t v84 = v117;
    LOBYTE(v82) = v118;
    uint64_t v105 = v121;
    unsigned __int8 v115 = v123;
    uint64_t v128 = v116;
    uint64_t v129 = v117;
    char v130 = v118;
    uint64_t v131 = v119;
    uint64_t v132 = v120;
    uint64_t v133 = v121;
    uint64_t v134 = v122;
    uint64_t v135 = v123;
    uint64_t v136 = v124;
    uint64_t v137 = v125;
    char v138 = v126;
    sub_1000FF33C(&qword_1015D0BB8);
    sub_100181664();
    uint64_t v85 = (uint64_t)v98;
    View.accessibilityIdentifier(_:)();
    sub_10017F958(v83, v84, (char)v82);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v86 = v97;
    sub_100101750(v85, v97, &qword_1015D0B70);
    uint64_t v67 = v114;
    sub_100101750(v86, v114, &qword_1015D0B70);
    uint64_t v64 = 0;
    uint64_t v62 = v113;
    goto LABEL_12;
  }
LABEL_13:
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100161DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000FF33C(a3);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = sub_1000FF33C(&qword_1015D0AE0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v24 - v20;
  sub_1000FF27C(a1, (uint64_t)&v24 - v20, &qword_1015D0AE0);
  sub_1000FF27C(a2, (uint64_t)v15, a3);
  sub_1000FF27C((uint64_t)v21, (uint64_t)v18, &qword_1015D0AE0);
  sub_1000FF27C((uint64_t)v15, (uint64_t)v12, a3);
  sub_1000FF27C((uint64_t)v18, a5, &qword_1015D0AE0);
  uint64_t v22 = sub_1000FF33C(a4);
  sub_1000FF27C((uint64_t)v12, a5 + *(int *)(v22 + 48), a3);
  sub_1000FF2E0((uint64_t)v15, a3);
  sub_1000FF2E0((uint64_t)v21, &qword_1015D0AE0);
  sub_1000FF2E0((uint64_t)v12, a3);
  return sub_1000FF2E0((uint64_t)v18, &qword_1015D0AE0);
}

uint64_t sub_100161F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v20 = a1;
  uint64_t v17 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v3 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D0A78);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  uint64_t v19 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s17FirstPartyRatingsVMa(0);
  sub_1000FF33C(&qword_1015D8660);
  ScaledMetric.wrappedValue.getter();
  uint64_t v10 = *(void *)&v27[0];
  uint64_t v11 = static VerticalAlignment.center.getter();
  sub_100162334(v2, (uint64_t)v23);
  *(_OWORD *)&v25[167] = v23[10];
  *(_OWORD *)&v25[183] = v23[11];
  *(_OWORD *)&v25[199] = v23[12];
  *(_OWORD *)&v25[215] = v24;
  *(_OWORD *)&v25[103] = v23[6];
  *(_OWORD *)&v25[119] = v23[7];
  *(_OWORD *)&v25[135] = v23[8];
  *(_OWORD *)&v25[151] = v23[9];
  *(_OWORD *)&v25[39] = v23[2];
  *(_OWORD *)&v25[55] = v23[3];
  *(_OWORD *)&v25[71] = v23[4];
  *(_OWORD *)&v25[87] = v23[5];
  *(_OWORD *)&v25[7] = v23[0];
  *(_OWORD *)&v25[23] = v23[1];
  *(_OWORD *)&v22[177] = *(_OWORD *)&v25[176];
  *(_OWORD *)&v22[193] = *(_OWORD *)&v25[192];
  *(_OWORD *)&v22[209] = *(_OWORD *)&v25[208];
  *(_OWORD *)&v22[113] = *(_OWORD *)&v25[112];
  *(_OWORD *)&v22[129] = *(_OWORD *)&v25[128];
  *(_OWORD *)&v22[145] = *(_OWORD *)&v25[144];
  *(_OWORD *)&v22[161] = *(_OWORD *)&v25[160];
  *(_OWORD *)&v22[49] = *(_OWORD *)&v25[48];
  *(_OWORD *)&v22[65] = *(_OWORD *)&v25[64];
  *(_OWORD *)&v22[81] = *(_OWORD *)&v25[80];
  *(_OWORD *)&v22[97] = *(_OWORD *)&v25[96];
  *(_OWORD *)&v22[1] = *(_OWORD *)v25;
  *(_OWORD *)&v22[17] = *(_OWORD *)&v25[16];
  char v26 = 0;
  *(void *)&long long v21 = v11;
  *((void *)&v21 + 1) = v10;
  v22[0] = 0;
  *(void *)&v22[224] = *((void *)&v24 + 1);
  *(_OWORD *)&v22[33] = *(_OWORD *)&v25[32];
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v12 = sub_1000FF33C(&qword_1015D0A80);
  uint64_t v13 = sub_1001010F8(&qword_1015D0A88, &qword_1015D0A80);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  v27[12] = *(_OWORD *)&v22[176];
  v27[13] = *(_OWORD *)&v22[192];
  v27[14] = *(_OWORD *)&v22[208];
  uint64_t v28 = *(void *)&v22[224];
  v27[8] = *(_OWORD *)&v22[112];
  v27[9] = *(_OWORD *)&v22[128];
  v27[10] = *(_OWORD *)&v22[144];
  v27[11] = *(_OWORD *)&v22[160];
  v27[4] = *(_OWORD *)&v22[48];
  v27[5] = *(_OWORD *)&v22[64];
  v27[6] = *(_OWORD *)&v22[80];
  v27[7] = *(_OWORD *)&v22[96];
  v27[0] = v21;
  v27[1] = *(_OWORD *)v22;
  v27[2] = *(_OWORD *)&v22[16];
  v27[3] = *(_OWORD *)&v22[32];
  sub_100180ECC((uint64_t)v27);
  *(void *)&long long v21 = v12;
  *((void *)&v21 + 1) = v13;
  swift_getOpaqueTypeConformance2();
  uint64_t v14 = v18;
  View.accessibility(identifier:)();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v14);
}

uint64_t sub_100162334@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = static VerticalAlignment.center.getter();
  sub_100162778(a1, &v57);
  uint64_t v42 = v58;
  uint64_t v43 = v57;
  uint64_t v40 = v60;
  uint64_t v41 = v59;
  uint64_t v38 = v62;
  uint64_t v39 = v61;
  uint64_t v37 = v63;
  uint64_t v47 = v66;
  uint64_t v48 = v65;
  uint64_t v46 = v67;
  uint64_t v4 = v69;
  char v76 = 0;
  char v36 = v64;
  char v75 = v64;
  char v45 = v68;
  char v74 = v68;
  uint64_t PartyRatingsVMa = _s17FirstPartyRatingsVMa(0);
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  unint64_t v17 = 0;
  if (*((unsigned char *)a1 + *(int *)(PartyRatingsVMa + 36))) {
    goto LABEL_4;
  }
  uint64_t v18 = (uint64_t *)((char *)a1 + *(int *)(PartyRatingsVMa + 24));
  uint64_t v19 = v18[1];
  uint64_t v57 = *v18;
  uint64_t v58 = v19;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v20 = Text.init<A>(_:)();
  long long v24 = *a1;
  if (*a1)
  {
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = v23;
    char v28 = v22 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v29 = v24;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v57, v25, v26, v28, v27, (uint64_t)&v57);
    sub_10017F958(v25, v26, v28);
    swift_bridgeObjectRelease();
    uint64_t v6 = v57;
    uint64_t v7 = v58;
    uint64_t v8 = v59;
    uint64_t v9 = v60;
    uint64_t v10 = v61;
    uint64_t v11 = v62;
    uint64_t v12 = v63;
    uint64_t v13 = v64;
    uint64_t v14 = v65;
    uint64_t v15 = v66;
    unint64_t v17 = 0xBFF0000000000000;
    uint64_t v16 = v67;
LABEL_4:
    *(void *)&long long v49 = v44;
    *((void *)&v49 + 1) = 0x4010000000000000;
    LOBYTE(v50) = 0;
    *(_DWORD *)((char *)&v50 + 1) = v79[0];
    DWORD1(v50) = *(_DWORD *)((char *)v79 + 3);
    *((void *)&v50 + 1) = v43;
    *(void *)&long long v51 = v42;
    *((void *)&v51 + 1) = v41;
    *(void *)&long long v52 = v40;
    *((void *)&v52 + 1) = v39;
    *(void *)&long long v53 = v38;
    *((void *)&v53 + 1) = v37;
    LOBYTE(v54) = v36;
    DWORD1(v54) = *(_DWORD *)&v78[3];
    *(_DWORD *)((char *)&v54 + 1) = *(_DWORD *)v78;
    *((void *)&v54 + 1) = v48;
    *(void *)&long long v55 = v47;
    *((void *)&v55 + 1) = v46;
    LOBYTE(v56) = v45;
    *(_DWORD *)((char *)&v56 + 1) = *(_DWORD *)v77;
    DWORD1(v56) = *(_DWORD *)&v77[3];
    *((void *)&v56 + 1) = v4;
    long long v30 = v50;
    *(_OWORD *)a2 = v49;
    *(_OWORD *)(a2 + 16) = v30;
    long long v31 = v52;
    *(_OWORD *)(a2 + 32) = v51;
    *(_OWORD *)(a2 + 48) = v31;
    long long v32 = v54;
    *(_OWORD *)(a2 + 64) = v53;
    *(_OWORD *)(a2 + 80) = v32;
    long long v33 = v56;
    *(_OWORD *)(a2 + 96) = v55;
    *(_OWORD *)(a2 + 112) = v33;
    *(void *)(a2 + 128) = v6;
    *(void *)(a2 + 136) = v7;
    *(void *)(a2 + 144) = v8;
    *(void *)(a2 + 152) = v9;
    *(void *)(a2 + 160) = v10;
    *(void *)(a2 + 168) = v11;
    *(void *)(a2 + 176) = v12;
    *(void *)(a2 + 184) = v13;
    *(void *)(a2 + 192) = v14;
    *(void *)(a2 + 200) = v15;
    *(void *)(a2 + 208) = v16;
    *(void *)(a2 + 216) = v17;
    uint64_t v34 = v6;
    sub_100181074((uint64_t)&v49);
    sub_100181114(v34, v7, v8, v9);
    sub_100180FE4(v34, v7, v8, v9);
    uint64_t v57 = v44;
    uint64_t v58 = 0x4010000000000000;
    LOBYTE(v59) = 0;
    *(_DWORD *)((char *)&v59 + 1) = v79[0];
    HIDWORD(v59) = *(_DWORD *)((char *)v79 + 3);
    uint64_t v60 = v43;
    uint64_t v61 = v42;
    uint64_t v62 = v41;
    uint64_t v63 = v40;
    uint64_t v64 = v39;
    uint64_t v65 = v38;
    uint64_t v66 = v37;
    LOBYTE(v67) = v36;
    *(_DWORD *)((char *)&v67 + 1) = *(_DWORD *)v78;
    HIDWORD(v67) = *(_DWORD *)&v78[3];
    uint64_t v68 = v48;
    uint64_t v69 = v47;
    uint64_t v70 = v46;
    char v71 = v45;
    *(_DWORD *)Swift::String v72 = *(_DWORD *)v77;
    *(_DWORD *)&v72[3] = *(_DWORD *)&v77[3];
    uint64_t v73 = v4;
    return sub_1001811A4((uint64_t)&v57);
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100162778@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  uint64_t v7 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v8 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t v10 = Image.renderingMode(_:)();
  swift_release();
  sub_1000FF2E0((uint64_t)v6, &qword_1015D0A90);
  uint64_t PartyRatingsVMa = _s17FirstPartyRatingsVMa(0);
  uint64_t v12 = PartyRatingsVMa;
  int v13 = *((unsigned __int8 *)a1 + *(int *)(PartyRatingsVMa + 36));
  if (v13 == 1)
  {
    uint64_t v14 = *a1;
    if (!*a1) {
      goto LABEL_27;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v14;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v54)
    {
      if (qword_1015CBB68 != -1) {
        swift_once();
      }
      uint64_t v16 = &qword_1016112E8;
    }
    else
    {
      if (qword_1015CBB70 != -1) {
        swift_once();
      }
      uint64_t v16 = &qword_1016112F0;
    }
  }
  else
  {
    uint64_t v16 = (uint64_t *)((char *)a1 + *(int *)(PartyRatingsVMa + 28));
  }
  uint64_t v52 = *v16;
  swift_retain();
  uint64_t KeyPath = swift_getKeyPath();
  static Font.caption.getter();
  static Font.Weight.bold.getter();
  uint64_t v50 = Font.weight(_:)();
  swift_release();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v53 = v10;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._uint64_t countAndFlagsBits = 0;
  v17._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
  uint64_t v54 = *(uint64_t *)((char *)a1 + *(int *)(v12 + 32));
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  if (v13)
  {
    uint64_t v18 = 37;
    unint64_t v19 = 0xE100000000000000;
  }
  else
  {
    uint64_t v18 = 9504;
    unint64_t v19 = 0xE200000000000000;
  }
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v18);
  v46[1] = v12;
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v20 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v22 = v21;
  char v24 = v23;
  static Font.subheadline.getter();
  if (v13) {
    static Font.Weight.regular.getter();
  }
  else {
    static Font.Weight.bold.getter();
  }
  Font.weight(_:)();
  swift_release();
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  int v47 = v28;
  swift_release();
  sub_10017F958(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_24;
  }
  id v29 = *a1;
  if (*a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v30 = v29;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v54)
    {
      if (qword_1015CBB68 == -1) {
        goto LABEL_24;
      }
    }
    else if (qword_1015CBB70 == -1)
    {
LABEL_24:
      swift_retain();
      char v31 = v47 & 1;
      uint64_t v32 = Text.foregroundColor(_:)();
      uint64_t v34 = v33;
      char v36 = v35;
      uint64_t v38 = v37;
      swift_release();
      v36 &= 1u;
      sub_10017F958(v25, v27, v31);
      swift_bridgeObjectRelease();
      uint64_t v39 = swift_getKeyPath();
      uint64_t v40 = v52;
      uint64_t v41 = v48;
      uint64_t v42 = v49;
      uint64_t v44 = v50;
      uint64_t v43 = KeyPath;
      uint64_t *v48 = v53;
      v41[1] = v43;
      v41[2] = v40;
      v41[3] = v42;
      v41[4] = v44;
      v41[5] = v32;
      v41[6] = v34;
      *((unsigned char *)v41 + 56) = v36;
      v41[8] = v38;
      v41[9] = v39;
      v41[10] = 1;
      *((unsigned char *)v41 + 88) = 0;
      v41[12] = 0x3FF0000000000000;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10017FDF0(v32, v34, v36);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_10017F958(v32, v34, v36);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_once();
    goto LABEL_24;
  }
LABEL_27:
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100162E5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = sub_1000FF33C(&qword_1015D0C10);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000FF33C(&qword_1015D0C18);
  __chkstk_darwin(v30);
  uint64_t v31 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D0C20);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1000FF33C(&qword_1015D0C28);
  __chkstk_darwin(v29);
  int v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v25 - v15;
  if (*(unsigned char *)(v1 + 48))
  {
    uint64_t v25 = a1;
    uint64_t v20 = static VerticalAlignment.center.getter();
    sub_100163460(v1, (uint64_t)v34);
    *(_OWORD *)((char *)&v36[4] + 7) = v34[4];
    *(_OWORD *)((char *)&v36[5] + 7) = v34[5];
    *(_OWORD *)((char *)&v36[6] + 7) = v35[0];
    v36[7] = *(_OWORD *)((char *)v35 + 9);
    *(_OWORD *)((char *)v36 + 7) = v34[0];
    *(_OWORD *)((char *)&v36[1] + 7) = v34[1];
    *(_OWORD *)((char *)&v36[2] + 7) = v34[2];
    *(_OWORD *)((char *)&v36[3] + 7) = v34[3];
    *(_OWORD *)&v33[81] = v36[4];
    *(_OWORD *)&v33[97] = v36[5];
    *(_OWORD *)&v33[113] = v36[6];
    *(_OWORD *)&v33[129] = *(_OWORD *)((char *)v35 + 9);
    *(_OWORD *)&v33[17] = v36[0];
    *(_OWORD *)&v33[33] = v36[1];
    *(_OWORD *)&v33[49] = v36[2];
    char v37 = 0;
    *(void *)uint64_t v33 = v20;
    *(void *)&v33[8] = 0x4010000000000000;
    v33[16] = 0;
    *(_OWORD *)&v33[65] = v36[3];
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v21 = sub_1000FF33C(&qword_1015D0C30);
    uint64_t v22 = sub_1001010F8(&qword_1015D0C38, &qword_1015D0C30);
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
    *(_OWORD *)&v39[80] = *(_OWORD *)&v33[96];
    *(_OWORD *)&v39[96] = *(_OWORD *)&v33[112];
    *(_OWORD *)&v39[112] = *(_OWORD *)&v33[128];
    v39[128] = v33[144];
    *(_OWORD *)&v39[16] = *(_OWORD *)&v33[32];
    *(_OWORD *)&v39[32] = *(_OWORD *)&v33[48];
    *(_OWORD *)&v39[48] = *(_OWORD *)&v33[64];
    *(_OWORD *)&v39[64] = *(_OWORD *)&v33[80];
    long long v38 = *(_OWORD *)v33;
    *(_OWORD *)uint64_t v39 = *(_OWORD *)&v33[16];
    sub_100181BB0((uint64_t)&v38);
    *(void *)uint64_t v33 = v21;
    *(void *)&v33[8] = v22;
    swift_getOpaqueTypeConformance2();
    uint64_t v23 = v28;
    View.accessibility(identifier:)();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v23);
    uint64_t v18 = &qword_1015D0C28;
    sub_100101750((uint64_t)v13, (uint64_t)v16, &qword_1015D0C28);
    sub_1000FF27C((uint64_t)v16, v31, &qword_1015D0C28);
    swift_storeEnumTagMultiPayload();
    sub_1001819DC(&qword_1015D0C40, &qword_1015D0C28, &qword_1015D0C30, &qword_1015D0C38);
    sub_100181AE0();
    _ConditionalContent<>.init(storage:)();
    uint64_t v19 = (uint64_t)v16;
  }
  else
  {
    uint64_t v17 = static VerticalAlignment.center.getter();
    sub_10016389C(v1, (uint64_t)v36);
    *(_OWORD *)&v33[71] = v36[4];
    *(_OWORD *)&v33[87] = v36[5];
    *(_OWORD *)&v33[103] = v36[6];
    *(_OWORD *)&v33[112] = *(_OWORD *)((char *)&v36[6] + 9);
    *(_OWORD *)&v33[7] = v36[0];
    *(_OWORD *)&v33[23] = v36[1];
    *(_OWORD *)&v33[39] = v36[2];
    *(_OWORD *)&v33[55] = v36[3];
    *(_OWORD *)&v39[65] = *(_OWORD *)&v33[64];
    *(_OWORD *)&v39[81] = *(_OWORD *)&v33[80];
    *(_OWORD *)&v39[97] = *(_OWORD *)&v33[96];
    *(_OWORD *)&v39[113] = *(_OWORD *)((char *)&v36[6] + 9);
    *(_OWORD *)&v39[1] = *(_OWORD *)v33;
    *(_OWORD *)&v39[17] = *(_OWORD *)&v33[16];
    *(_OWORD *)&v39[33] = *(_OWORD *)&v33[32];
    LOBYTE(v34[0]) = 0;
    *(void *)&long long v38 = v17;
    *((void *)&v38 + 1) = 0x4010000000000000;
    v39[0] = 0;
    *(_OWORD *)&v39[49] = *(_OWORD *)&v33[48];
    sub_1000FF33C(&qword_1015D0C30);
    sub_1001010F8(&qword_1015D0C38, &qword_1015D0C30);
    View.accessibility(identifier:)();
    sub_100181900((uint64_t)v36);
    uint64_t v18 = &qword_1015D0C10;
    sub_1000FF27C((uint64_t)v4, v31, &qword_1015D0C10);
    swift_storeEnumTagMultiPayload();
    sub_1001819DC(&qword_1015D0C40, &qword_1015D0C28, &qword_1015D0C30, &qword_1015D0C38);
    sub_100181AE0();
    _ConditionalContent<>.init(storage:)();
    uint64_t v19 = (uint64_t)v4;
  }
  return sub_1000FF2E0(v19, v18);
}

uint64_t sub_100163460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  uint64_t v7 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v8 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t v47 = Image.renderingMode(_:)();
  swift_release();
  sub_1000FF2E0((uint64_t)v6, &qword_1015D0A90);
  uint64_t v45 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  static Font.caption.getter();
  static Font.Weight.bold.getter();
  uint64_t v44 = Font.weight(_:)();
  swift_release();
  uint64_t v10 = swift_getKeyPath();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v51 = *(void *)(a1 + 16);
  uint64_t v52 = v11;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v16 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v17 = v12;
    uint64_t v18 = v13;
    uint64_t v19 = v15;
    char v20 = v14 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v21 = v16;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v51, v17, v18, v20, v19, (uint64_t)&v51);
    sub_10017F958(v17, v18, v20);
    swift_bridgeObjectRelease();
    uint64_t v22 = v51;
    uint64_t v23 = v52;
    uint64_t v38 = v51;
    char v24 = v53;
    uint64_t v25 = v54;
    uint64_t v26 = v55;
    uint64_t v39 = v54;
    uint64_t v27 = v56;
    uint64_t v28 = v57;
    uint64_t v40 = v56;
    uint64_t v41 = v57;
    uint64_t v29 = v58;
    uint64_t v30 = v59;
    uint64_t v31 = v60;
    char v32 = v61;
    char v50 = v53;
    char v48 = v61;
    *(_DWORD *)(a2 + 57) = *(_DWORD *)v49;
    *(_DWORD *)(a2 + 60) = *(_DWORD *)&v49[3];
    uint64_t v33 = KeyPath;
    *(void *)a2 = v47;
    *(void *)(a2 + 8) = v33;
    uint64_t v34 = v44;
    *(void *)(a2 + 16) = v45;
    *(void *)(a2 + 24) = v10;
    *(void *)(a2 + 32) = v34;
    *(void *)(a2 + 40) = v22;
    *(void *)(a2 + 48) = v23;
    *(unsigned char *)(a2 + 56) = v24;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v26;
    uint64_t v42 = v29;
    uint64_t v43 = v26;
    *(void *)(a2 + 80) = v27;
    *(void *)(a2 + 88) = v28;
    *(void *)(a2 + 96) = v29;
    *(void *)(a2 + 104) = v30;
    *(void *)(a2 + 112) = v31;
    *(unsigned char *)(a2 + 120) = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = v38;
    sub_10017FDF0(v38, v23, v24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v35, v23, v24);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10016389C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  uint64_t v7 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v8 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  uint64_t v48 = Image.renderingMode(_:)();
  swift_release();
  sub_1000FF2E0((uint64_t)v6, &qword_1015D0A90);
  id v10 = [self _maps_systemGrayColor];
  uint64_t v46 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = static Font.caption.getter();
  uint64_t v11 = swift_getKeyPath();
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v52 = *(void *)(a1 + 32);
  uint64_t v53 = v12;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v17 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    uint64_t v20 = v16;
    char v21 = v15 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v22 = v17;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v52, v18, v19, v21, v20, (uint64_t)&v52);
    sub_10017F958(v18, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
    uint64_t v24 = v53;
    uint64_t v39 = v52;
    char v25 = v54;
    uint64_t v26 = v55;
    uint64_t v27 = v56;
    uint64_t v40 = v55;
    uint64_t v28 = v57;
    uint64_t v29 = v58;
    uint64_t v41 = v57;
    uint64_t v42 = v58;
    uint64_t v30 = v59;
    uint64_t v31 = v60;
    uint64_t v32 = v61;
    char v33 = v62;
    char v51 = v54;
    char v49 = v62;
    *(_DWORD *)(a2 + 57) = *(_DWORD *)v50;
    *(_DWORD *)(a2 + 60) = *(_DWORD *)&v50[3];
    uint64_t v34 = KeyPath;
    *(void *)a2 = v48;
    *(void *)(a2 + 8) = v34;
    uint64_t v35 = v45;
    *(void *)(a2 + 16) = v46;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v35;
    *(void *)(a2 + 40) = v23;
    *(void *)(a2 + 48) = v24;
    *(unsigned char *)(a2 + 56) = v25;
    *(void *)(a2 + 64) = v26;
    *(void *)(a2 + 72) = v27;
    uint64_t v43 = v30;
    uint64_t v44 = v27;
    *(void *)(a2 + 80) = v28;
    *(void *)(a2 + 88) = v29;
    *(void *)(a2 + 96) = v30;
    *(void *)(a2 + 104) = v31;
    *(void *)(a2 + 112) = v32;
    *(unsigned char *)(a2 + 120) = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v36 = v39;
    sub_10017FDF0(v39, v24, v25);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v36, v24, v25);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100163CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100162E5C(a1);
}

uint64_t sub_100163D24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v118 = a1;
  uint64_t v2 = (int *)_s5LabelVMa(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_1000FF33C(&qword_1015D0C50);
  __chkstk_darwin(v111);
  uint64_t v110 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000FF33C(&qword_1015D0C58);
  __chkstk_darwin(v117);
  uint64_t v109 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v112 = (uint64_t)&v95 - v8;
  uint64_t v115 = sub_1000FF33C(&qword_1015D0C60);
  __chkstk_darwin(v115);
  uint64_t v116 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccessibilityTraits();
  uint64_t v103 = *(void *)(v10 - 8);
  uint64_t v104 = v10;
  __chkstk_darwin(v10);
  uint64_t v102 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_1000FF33C(&qword_1015D0C68);
  __chkstk_darwin(v114);
  uint64_t v100 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v101 = (char *)&v95 - v14;
  __chkstk_darwin(v15);
  uint64_t v106 = (char *)&v95 - v16;
  __chkstk_darwin(v17);
  uint64_t v105 = (char *)&v95 - v18;
  __chkstk_darwin(v19);
  uint64_t v107 = (uint64_t)&v95 - v20;
  uint64_t v21 = type metadata accessor for AttributedString();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v113 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v24 - 8);
  uint64_t v108 = (void **)v1;
  long long v143 = *(_OWORD *)(v1 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100183620((uint64_t)&v143);
  char v25 = *(void **)&v141[0];
  if (!*(void *)&v141[0]) {
    goto LABEL_7;
  }
  id v26 = [*(id *)&v141[0] name];
  if (!v26)
  {

LABEL_7:
    uint64_t v42 = v113;
    AttributedString.init(stringLiteral:)();
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t v43 = EnvironmentObject.init()();
    uint64_t v45 = v44;
    *(void *)&v4[v2[12]] = swift_getKeyPath();
    sub_1000FF33C(&qword_1015CE6F8);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v4, v42, v21);
    uint64_t v46 = &v4[v2[5]];
    *(void *)uint64_t v46 = 0;
    *((void *)v46 + 1) = 0;
    *(void *)&v4[v2[6]] = 0;
    *(void *)&v4[v2[7]] = 0;
    *(void *)&v4[v2[8]] = 0;
    *(void *)&v4[v2[9]] = 0;
    uint64_t v47 = &v4[v2[10]];
    *(void *)uint64_t v47 = 1;
    v47[8] = 0;
    uint64_t v48 = (uint64_t *)&v4[v2[11]];
    uint64_t *v48 = v43;
    v48[1] = v45;
    uint64_t v49 = static Color.clear.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v51 = v110;
    sub_100173DDC((uint64_t)v4, v110, _s5LabelVMa);
    uint64_t v52 = (uint64_t *)(v51 + *(int *)(v111 + 36));
    *uint64_t v52 = KeyPath;
    v52[1] = v49;
    sub_100174240((uint64_t)v4, _s5LabelVMa);
    sub_100181C94();
    uint64_t v53 = (uint64_t)v109;
    View.accessibilityHidden(_:)();
    sub_1000FF2E0(v51, &qword_1015D0C50);
    uint64_t v54 = v112;
    sub_100101750(v53, v112, &qword_1015D0C58);
    sub_1000FF27C(v54, v116, &qword_1015D0C58);
    swift_storeEnumTagMultiPayload();
    sub_100181D64();
    sub_100181E34();
    _ConditionalContent<>.init(storage:)();
    uint64_t v55 = v54;
    uint64_t v56 = &qword_1015D0C58;
    return sub_1000FF2E0(v55, v56);
  }
  uint64_t v27 = v26;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v31._uint64_t countAndFlagsBits = 0;
  v31._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v31);
  v99._uint64_t countAndFlagsBits = v28;
  v99._uint64_t object = v30;
  v32._uint64_t countAndFlagsBits = v28;
  v32._uint64_t object = v30;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v32);
  v33._uint64_t countAndFlagsBits = 0;
  v33._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v33);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v34 = Text.init(_:tableName:bundle:comment:)();
  LODWORD(v112) = v36;
  uint64_t v37 = v108;
  uint64_t v38 = *v108;
  if (*v108)
  {
    uint64_t v39 = v34;
    uint64_t v40 = v35;
    swift_getKeyPath();
    swift_getKeyPath();
    id v41 = v38;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v141[0]) {
      static Color.white.getter();
    }
    else {
      static Color.blue.getter();
    }
    char v57 = v112 & 1;
    uint64_t v58 = Text.foregroundColor(_:)();
    uint64_t v110 = v59;
    uint64_t v111 = v58;
    LODWORD(v109) = v60;
    uint64_t v112 = v61;
    swift_release();
    sub_10017F958(v39, v40, v57);
    swift_bridgeObjectRelease();
    if (((_BYTE)v37[11] & 1) != 0
      && *((unsigned char *)v41 + OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase) == 2)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v62 = v41;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      sub_100164AD8(v99._countAndFlagsBits, (uint64_t)v99._object, LOBYTE(v141[0]), v113);
      uint64_t v63 = Text.init(_:)();
    }
    else
    {
      LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v67._uint64_t countAndFlagsBits = 0x6E6F697461636F4CLL;
      v67._uint64_t object = (void *)0xE900000000000020;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v67);
      LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
      v68._uint64_t countAndFlagsBits = 0;
      v68._uint64_t object = (void *)0xE000000000000000;
      LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v68);
      LocalizedStringKey.init(stringInterpolation:)();
      uint64_t v63 = Text.init(_:tableName:bundle:comment:)();
    }
    uint64_t v69 = v63;
    uint64_t v70 = v64;
    uint64_t v71 = v66;
    uint64_t v95 = v63;
    uint64_t v96 = v64;
    uint64_t v97 = v66;
    char v72 = v65 & 1;
    LODWORD(v113) = v65 & 1;
    uint64_t v73 = swift_allocObject();
    long long v74 = *((_OWORD *)v37 + 3);
    *(_OWORD *)(v73 + 48) = *((_OWORD *)v37 + 2);
    *(_OWORD *)(v73 + 64) = v74;
    *(_OWORD *)(v73 + 80) = *((_OWORD *)v37 + 4);
    *(_OWORD *)(v73 + 89) = *(_OWORD *)((char *)v37 + 73);
    long long v75 = *((_OWORD *)v37 + 1);
    *(_OWORD *)(v73 + 16) = *(_OWORD *)v37;
    *(_OWORD *)(v73 + 32) = v75;
    *(void *)(v73 + 112) = v25;
    *(void *)&long long v130 = sub_100186538;
    *((void *)&v130 + 1) = v73;
    sub_100181EE4(v37);
    id v98 = v25;
    sub_10017FDF0(v69, v70, v72);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1001650B8((uint64_t)v37, v69, v70, v72, v71, (uint64_t)&v131);
    sub_10017F958(v69, v70, v72);
    swift_release();
    swift_bridgeObjectRelease();
    v141[8] = v138;
    v141[9] = v139;
    v141[4] = v134;
    v141[5] = v135;
    v141[6] = v136;
    v141[7] = v137;
    v141[0] = v130;
    v141[1] = v131;
    v141[2] = v132;
    v141[3] = v133;
    long long v127 = v138;
    long long v128 = v139;
    long long v123 = v134;
    long long v124 = v135;
    long long v125 = v136;
    long long v126 = v137;
    long long v119 = v130;
    long long v120 = v131;
    __int16 v142 = v140;
    __int16 v129 = v140;
    long long v121 = v132;
    long long v122 = v133;
    sub_1000FF33C(&qword_1015D0C88);
    sub_1001010F8(&qword_1015D0C80, &qword_1015D0C88);
    uint64_t v76 = (uint64_t)v100;
    View.accessibility(identifier:)();
    sub_100181F64((uint64_t)v141);
    uint64_t v77 = (uint64_t)v101;
    ModifiedContent<>.accessibilityAutomationType(_:)();
    sub_1000FF2E0(v76, &qword_1015D0C68);
    uint64_t v78 = v102;
    static AccessibilityTraits.isButton.getter();
    uint64_t v79 = (uint64_t)v106;
    ModifiedContent<>.accessibilityRemoveTraits(_:)();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v78, v104);
    sub_1000FF2E0(v77, &qword_1015D0C68);
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v80._uint64_t countAndFlagsBits = 0x206F74206F47;
    v80._uint64_t object = (void *)0xE600000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v80);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v99);
    swift_bridgeObjectRelease();
    v81._uint64_t countAndFlagsBits = 0;
    v81._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v81);
    LocalizedStringKey.init(stringInterpolation:)();
    id v82 = v37;
    uint64_t v83 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v85 = v84;
    char v87 = v86 & 1;
    uint64_t v88 = swift_allocObject();
    long long v89 = *((_OWORD *)v82 + 3);
    *(_OWORD *)(v88 + 48) = *((_OWORD *)v82 + 2);
    *(_OWORD *)(v88 + 64) = v89;
    *(_OWORD *)(v88 + 80) = *((_OWORD *)v82 + 4);
    *(_OWORD *)(v88 + 89) = *(_OWORD *)((char *)v82 + 73);
    long long v90 = *((_OWORD *)v82 + 1);
    *(_OWORD *)(v88 + 16) = *(_OWORD *)v82;
    *(_OWORD *)(v88 + 32) = v90;
    uint64_t v91 = v98;
    *(void *)(v88 + 112) = v98;
    sub_100181EE4(v82);
    uint64_t v108 = v91;
    uint64_t v92 = (uint64_t)v105;
    ModifiedContent<>.accessibilityAction(named:_:)();
    swift_release();
    sub_10017F958(v83, v85, v87);
    swift_bridgeObjectRelease();
    sub_1000FF2E0(v79, &qword_1015D0C68);
    uint64_t v93 = v107;
    sub_100101750(v92, v107, &qword_1015D0C68);
    sub_1000FF27C(v93, v116, &qword_1015D0C68);
    swift_storeEnumTagMultiPayload();
    sub_100181D64();
    sub_100181E34();
    _ConditionalContent<>.init(storage:)();
    sub_10017F958(v111, v110, v109 & 1);
    swift_bridgeObjectRelease();
    sub_10017F958(v95, v96, v113);

    swift_bridgeObjectRelease();
    uint64_t v55 = v93;
    uint64_t v56 = &qword_1015D0C68;
    return sub_1000FF2E0(v55, v56);
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100164AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v37 = a3;
  uint64_t v42 = a4;
  uint64_t v6 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v6 - 8);
  uint64_t v39 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for AttributedString();
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D0A38);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1000FF33C(&qword_1015D0A40);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v36 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v35 = (uint64_t)&v34 - v16;
  uint64_t v17 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v17 - 8);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v44._uint64_t countAndFlagsBits = 0xD000000000000023;
  v44._uint64_t object = (void *)0x8000000100F78840;
  v18._uint64_t object = (void *)0x8000000100F78810;
  v18._uint64_t countAndFlagsBits = 0xD000000000000022;
  v19._uint64_t countAndFlagsBits = 0x4025206E49;
  v19._uint64_t object = (void *)0xE500000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)qword_101611820, v19, v44);
  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100F5CF70;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_10011A750();
  *(void *)(v20 + 32) = a1;
  *(void *)(v20 + 40) = a2;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  uint64_t v21 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  AttributeContainer.init()();
  uint64_t v22 = v42;
  AttributedString.init(_:attributes:)();
  uint64_t v23 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v22, v41);
  v43[0] = v21;
  v43[1] = a2;
  uint64_t v24 = type metadata accessor for Locale();
  uint64_t v25 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v39, 1, 1, v24);
  sub_1001732B8(&qword_1015D0A60, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_100180324();
  swift_bridgeObjectRetain();
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_1000FF2E0(v25, &qword_1015D0A30);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v13, 1, v40) == 1)
  {
    id v26 = &qword_1015D0A38;
    uint64_t v27 = (uint64_t)v13;
  }
  else
  {
    uint64_t v28 = v35;
    sub_100101750((uint64_t)v13, v35, &qword_1015D0A40);
    uint64_t v29 = v36;
    sub_1000FF27C(v28, v36, &qword_1015D0A40);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    if (v37) {
      uint64_t v31 = static Color.white.getter();
    }
    else {
      uint64_t v31 = static Color.blue.getter();
    }
    v43[4] = v31;
    sub_1001010F8(&qword_1015D0A70, &qword_1015D0A40);
    Swift::String v32 = (void (*)(void *, void))AttributedString.subscript.modify();
    sub_100180AE8();
    AttributedSubstring.subscript.setter();
    v32(v43, 0);
    sub_1000FF2E0(v29, &qword_1015D0A40);
    uint64_t v27 = v28;
    id v26 = &qword_1015D0A40;
  }
  return sub_1000FF2E0(v27, v26);
}

uint64_t sub_1001650B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v14 = static VerticalAlignment.center.getter();
    sub_100165398((void **)a1, a2, a3, a4 & 1, a5, (uint64_t)v20);
    *(_OWORD *)&v22[71] = v20[4];
    *(_OWORD *)&v22[87] = v20[5];
    *(_OWORD *)&v22[103] = v21[0];
    *(_OWORD *)&v22[112] = *(_OWORD *)((char *)v21 + 9);
    *(_OWORD *)&v22[7] = v20[0];
    *(_OWORD *)&v22[23] = v20[1];
    *(_OWORD *)&v22[39] = v20[2];
    *(_OWORD *)&v22[55] = v20[3];
    long long v31 = *(_OWORD *)((char *)v21 + 9);
    long long v28 = *(_OWORD *)&v22[64];
    long long v29 = *(_OWORD *)&v22[80];
    *(_OWORD *)&v27[48] = *(_OWORD *)&v22[48];
    *(_OWORD *)&v27[32] = *(_OWORD *)&v22[32];
    *(_OWORD *)&v27[16] = *(_OWORD *)&v22[16];
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v22;
    char v23 = 0;
    *(void *)&long long v25 = v14;
    *((void *)&v25 + 1) = 0x4010000000000000;
    char v26 = 0;
    long long v30 = *(_OWORD *)&v22[96];
    sub_1001821FC((uint64_t)&v25);
    goto LABEL_5;
  }
  uint64_t v12 = *(void **)a1;
  if (*(void *)a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v13 = v12;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v32, a2, a3, a4 & 1, a5, (uint64_t)v22);
    long long v25 = *(_OWORD *)v22;
    char v26 = v22[16];
    *(_OWORD *)&v27[7] = *(_OWORD *)&v22[24];
    *(_OWORD *)&v27[23] = *(_OWORD *)&v22[40];
    *(_OWORD *)&v27[39] = *(_OWORD *)&v22[56];
    *(void *)&v27[55] = *(void *)&v22[72];
    v27[63] = v22[80];
    sub_1001821F0((uint64_t)&v25);
LABEL_5:
    sub_100101750((uint64_t)&v25, (uint64_t)v24, &qword_1015D0C98);
    sub_1000FF33C(&qword_1015D0CA0);
    sub_1000FF33C(&qword_1015D0BB8);
    sub_1001010F8(&qword_1015D0CA8, &qword_1015D0CA0);
    sub_100181664();
    uint64_t result = _ConditionalContent<>.init(storage:)();
    long long v16 = v39;
    *(_OWORD *)(a6 + 96) = v38;
    *(_OWORD *)(a6 + 112) = v16;
    *(_OWORD *)(a6 + 128) = v40;
    *(_WORD *)(a6 + 144) = v41;
    long long v17 = v35;
    *(_OWORD *)(a6 + 32) = v34;
    *(_OWORD *)(a6 + 48) = v17;
    long long v18 = v37;
    *(_OWORD *)(a6 + 64) = v36;
    *(_OWORD *)(a6 + 80) = v18;
    long long v19 = v33;
    *(_OWORD *)a6 = v32;
    *(_OWORD *)(a6 + 16) = v19;
    return result;
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100165398@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = Image.init(_internalSystemName:)();
  uint64_t v13 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = *a1;
  if (*a1)
  {
    uint64_t v32 = a5;
    uint64_t v33 = KeyPath;
    uint64_t v34 = v13;
    swift_getKeyPath();
    swift_getKeyPath();
    id v16 = v15;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v36[0]) {
      uint64_t v17 = static Color.white.getter();
    }
    else {
      uint64_t v17 = static Color.secondary.getter();
    }
    uint64_t v35 = v17;
    uint64_t v18 = swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    id v19 = v16;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v36[0], a2, a3, a4 & 1, v32, (uint64_t)v36);
    uint64_t v20 = v36[0];
    uint64_t v21 = v36[1];
    char v22 = v37;
    uint64_t v23 = v38;
    uint64_t v24 = v39;
    uint64_t v26 = v40;
    uint64_t v25 = v41;
    uint64_t v27 = v42;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    char v30 = v45;
    LOBYTE(v36[0]) = v37;
    char v46 = v45;
    *(void *)a6 = v12;
    *(void *)(a6 + 8) = v33;
    *(void *)(a6 + 16) = v34;
    *(void *)(a6 + 24) = v18;
    *(void *)(a6 + 32) = v35;
    *(void *)(a6 + 40) = v20;
    *(void *)(a6 + 48) = v21;
    *(unsigned char *)(a6 + 56) = v22;
    *(void *)(a6 + 64) = v23;
    *(void *)(a6 + 72) = v24;
    *(void *)(a6 + 80) = v26;
    *(void *)(a6 + 88) = v25;
    *(void *)(a6 + 96) = v27;
    *(void *)(a6 + 104) = v28;
    *(void *)(a6 + 112) = v29;
    *(unsigned char *)(a6 + 120) = v30;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017FDF0(v20, v21, v22);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v20, v21, v22);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001656C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  uint64_t v6 = (void (*)(uint64_t *))sub_10012761C(v3, v4, v5);
  sub_100127C4C();
  uint64_t v8 = a2;
  v6(&v8);

  return swift_release();
}

uint64_t sub_100165768@<X0>(uint64_t a1@<X8>)
{
  return sub_100163D24(a1);
}

uint64_t sub_1001657B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  char v5 = (void (*)(uint64_t *))sub_10012763C(v2, v3, v4);
  sub_100127C4C();
  uint64_t v6 = a1 + *(int *)(_s13TappableEntryVMa(0) + 24);
  uint64_t v8 = *(void *)(v6 + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0) + 24));
  v5(&v8);

  return swift_release();
}

uint64_t sub_100165874@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015CFD80);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - v7;
  uint64_t v56 = _s13TappableEntryVMa(0);
  __chkstk_darwin(v56);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v54 = (char *)&v52 - v15;
  id v16 = *a1;
  if (!*a1) {
    goto LABEL_10;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v16;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  char v18 = v59;
  char v57 = a1;
  sub_100173DDC((uint64_t)a1, (uint64_t)v10, _s13TappableEntryVMa);
  if ((v18 & 1) == 0)
  {
    sub_100174240((uint64_t)v10, _s13TappableEntryVMa);
    uint64_t v19 = v56;
    goto LABEL_7;
  }
  uint64_t v53 = v5;
  uint64_t v19 = v56;
  uint64_t v20 = *(int *)(v56 + 24);
  uint64_t v21 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v22 = v20 + *(int *)(v21 + 20);
  uint64_t v23 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  sub_1000FF27C((uint64_t)&v10[v22 + v23[12]], (uint64_t)v8, &qword_1015CFD80);
  sub_100174240((uint64_t)v10, _s13TappableEntryVMa);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v25 = v24(v8, 1, v11);
  sub_1000FF2E0((uint64_t)v8, &qword_1015CFD80);
  if (v25 == 1)
  {
LABEL_7:
    uint64_t v29 = v57;
    char v30 = (char *)v57 + *(int *)(v19 + 24);
    uint64_t v21 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    uint64_t v31 = *(int *)(v21 + 20);
    uint64_t v23 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    uint64_t v32 = &v30[v31 + v23[5]];
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v28 = v54;
    v33(v54, v32, v11);
    uint64_t v27 = v11;
    v33(v58, v28, v11);
    goto LABEL_8;
  }
  uint64_t v26 = (uint64_t)v53;
  sub_1000FF27C((uint64_t)v57 + *(int *)(v19 + 24) + *(int *)(v21 + 20) + (uint64_t)v23[12], (uint64_t)v53, &qword_1015CFD80);
  if (v24((char *)v26, 1, v11) != 1)
  {
    uint64_t v27 = v11;
    uint64_t v28 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v54, v26, v11);
    uint64_t v19 = v56;
    uint64_t v29 = v57;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v58, v28, v11);
LABEL_8:
    uint64_t v34 = (uint64_t)v29 + *(int *)(v19 + 24);
    type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    uint64_t v35 = v34 + *(int *)(v21 + 20);
    type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    uint64_t v36 = v23[7];
    char v37 = (char **)(v35 + v23[6]);
    uint64_t v38 = v37[1];
    uint64_t v54 = *v37;
    uint64_t v39 = *(void *)(v35 + v36);
    uint64_t v40 = *(void *)(v35 + v23[8]);
    uint64_t v41 = v35 + v23[11];
    char v57 = *(void ***)v41;
    LODWORD(v56) = *(unsigned __int8 *)(v41 + 8);
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t v42 = v27;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v53 = (char *)EnvironmentObject.init()();
    uint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v28, v42);
    uint64_t KeyPath = swift_getKeyPath();
    char v46 = (int *)_s5LabelVMa(0);
    uint64_t v47 = v55;
    *(void *)(v55 + v46[12]) = KeyPath;
    sub_1000FF33C(&qword_1015CE6F8);
    swift_storeEnumTagMultiPayload();
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v47, v58, v42);
    uint64_t v49 = (char **)(v47 + v46[5]);
    char *v49 = v54;
    v49[1] = v38;
    *(void *)(v47 + v46[6]) = v39;
    *(void *)(v47 + v46[7]) = v40;
    *(void *)(v47 + v46[8]) = 0;
    *(void *)(v47 + v46[9]) = 0;
    uint64_t v50 = v47 + v46[10];
    *(void *)uint64_t v50 = v57;
    *(unsigned char *)(v50 + 8) = v56;
    uint64_t v51 = (void *)(v47 + v46[11]);
    *uint64_t v51 = v53;
    v51[1] = v44;
    return result;
  }
  __break(1u);
LABEL_10:
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_100165E54@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_100173DDC((uint64_t)v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s13TappableEntryVMa);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_100173E44((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, _s13TappableEntryVMa);
  *a2 = sub_100182444;
  a2[1] = (uint64_t (*)())v7;
  uint64_t v8 = sub_1000FF33C(&qword_1015D0CB0);
  return sub_100165874(v2, (uint64_t)a2 + *(int *)(v8 + 36));
}

uint64_t sub_100165F84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = type metadata accessor for AttributedString();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s5LabelVMa(0);
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1000FF33C(&qword_1015D0CF0);
  __chkstk_darwin(v25);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D0CF8);
  __n128 v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v1, v2, v13);
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t v16 = EnvironmentObject.init()();
  uint64_t v18 = v17;
  *(void *)&v9[v7[14]] = swift_getKeyPath();
  sub_1000FF33C(&qword_1015CE6F8);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  uint64_t v19 = &v9[v7[7]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  *(void *)&v9[v7[8]] = 0;
  *(void *)&v9[v7[9]] = 0;
  *(void *)&v9[v7[10]] = 0;
  *(void *)&v9[v7[11]] = 0;
  uint64_t v20 = &v9[v7[12]];
  *(void *)uint64_t v20 = 1;
  v20[8] = 0;
  uint64_t v21 = (uint64_t *)&v9[v7[13]];
  *uint64_t v21 = v16;
  v21[1] = v18;
  if (*(unsigned char *)(v24[1] + *(int *)(_s5HoursVMa(0) + 20))) {
    double v22 = 10.0;
  }
  else {
    double v22 = 0.0;
  }
  sub_100173DDC((uint64_t)v9, (uint64_t)v11, _s5LabelVMa);
  *(double *)&v11[*(int *)(v25 + 36)] = v22;
  sub_100174240((uint64_t)v9, _s5LabelVMa);
  sub_1001825B8();
  View.accessibility(identifier:)();
  sub_1000FF2E0((uint64_t)v11, &qword_1015D0CF0);
  return sub_100101750((uint64_t)v15, v26, &qword_1015D0CF8);
}

uint64_t sub_100166304(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = type metadata accessor for Button();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v14[-v9];
  uint64_t v15 = v2;
  uint64_t v16 = v3;
  uint64_t v17 = v1;
  swift_retain();
  Button.init(action:label:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100254BFC(v7, v4, WitnessTable);
  uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  sub_100254BFC(v10, v4, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1001664A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s16BorderlessButtonVMa();
  sub_100254BFC(a1 + *(int *)(v9 + 36), a2, a3);
  sub_100254BFC(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_1001665A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static VerticalAlignment.center.getter();
  sub_100166714(v1, (uint64_t)v16);
  *(_OWORD *)&v17[119] = v16[7];
  *(_OWORD *)&v17[135] = v16[8];
  *(_OWORD *)&v17[151] = v16[9];
  *(_OWORD *)&v17[167] = v16[10];
  *(_OWORD *)&v17[55] = v16[3];
  *(_OWORD *)&v17[71] = v16[4];
  *(_OWORD *)&v17[87] = v16[5];
  *(_OWORD *)&v17[103] = v16[6];
  *(_OWORD *)&v17[7] = v16[0];
  *(_OWORD *)&v17[23] = v16[1];
  char v18 = 0;
  *(_OWORD *)&v17[39] = v16[2];
  char v4 = static Edge.Set.leading.getter();
  _s28RealTimeAvailableChargerViewVMa(0);
  sub_1000FF33C(&qword_1015D81F0);
  ScaledMetric.wrappedValue.getter();
  uint64_t result = EdgeInsets.init(_all:)();
  long long v6 = *(_OWORD *)&v17[144];
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v17[128];
  *(_OWORD *)(a1 + 161) = v6;
  *(_OWORD *)(a1 + 177) = *(_OWORD *)&v17[160];
  long long v7 = *(_OWORD *)&v17[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v17[64];
  *(_OWORD *)(a1 + 97) = v7;
  long long v8 = *(_OWORD *)&v17[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v17[96];
  *(_OWORD *)(a1 + 129) = v8;
  long long v9 = *(_OWORD *)&v17[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v17;
  *(_OWORD *)(a1 + 33) = v9;
  long long v10 = *(_OWORD *)&v17[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v17[32];
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v11 = *(void *)&v17[175];
  *(_OWORD *)(a1 + 65) = v10;
  *(void *)(a1 + 192) = v11;
  *(void *)(a1 + 200) = 0xD000000000000018;
  *(void *)(a1 + 208) = 0x8000000100F788B0;
  *(unsigned char *)(a1 + 216) = 13;
  *(unsigned char *)(a1 + 224) = v4;
  *(void *)(a1 + 232) = v12;
  *(void *)(a1 + 240) = v13;
  *(void *)(a1 + 248) = v14;
  *(void *)(a1 + 256) = v15;
  *(unsigned char *)(a1 + 264) = 0;
  return result;
}

uint64_t sub_100166714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  swift_bridgeObjectRetain();
  uint64_t v31 = Image.init(systemName:)();
  static Font.caption2.getter();
  static Font.Weight.bold.getter();
  uint64_t v30 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = static Color.secondary.getter();
  uint64_t v27 = swift_getKeyPath();
  uint64_t v5 = *(void *)(a1 + *(int *)(_s28RealTimeAvailableChargerViewVMa(0) + 32));
  static UnitPoint.center.getter();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0;
  v10._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v35);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0;
  v11._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v25 = v13;
  uint64_t v26 = v12;
  char v15 = v14;
  uint64_t v34 = v16;
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  uint64_t v33 = Font.weight(_:)();
  swift_release();
  uint64_t v17 = swift_getKeyPath();
  swift_retain();
  uint64_t v24 = sub_1001A4B30();
  swift_release();
  uint64_t v32 = swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (LODWORD(v35._countAndFlagsBits))
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = Image.init(systemName:)();
    static Font.subheadline.getter();
    static Font.Weight.medium.getter();
    uint64_t v22 = Font.weight(_:)();
    swift_release();
    uint64_t v18 = swift_getKeyPath();
    swift_retain();
    uint64_t v19 = sub_1001A4B30();
    swift_release();
    uint64_t v20 = swift_getKeyPath();
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v19 = 0;
  }
  *(void *)a2 = v31;
  *(void *)(a2 + 8) = KeyPath;
  *(void *)(a2 + 16) = v30;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = v28;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v26;
  *(void *)(a2 + 72) = v25;
  *(unsigned char *)(a2 + 80) = v15 & 1;
  *(void *)(a2 + 88) = v34;
  *(_WORD *)(a2 + 96) = 256;
  *(void *)(a2 + 104) = v17;
  *(void *)(a2 + 112) = v33;
  *(void *)(a2 + 120) = v32;
  *(void *)(a2 + 128) = v24;
  *(void *)(a2 + 136) = v23;
  *(void *)(a2 + 144) = v18;
  *(void *)(a2 + 152) = v22;
  *(void *)(a2 + 160) = v20;
  *(void *)(a2 + 168) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017FDF0(v26, v25, v15 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100182698(v23);
  sub_100182708(v23);
  sub_10017F958(v26, v25, v15 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100166BC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v86 = a1;
  uint64_t v74 = sub_1000FF33C(&qword_1015D0D08);
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_1000FF33C(&qword_1015D0D10);
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D0D18);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D0D20);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_1000FF33C(&qword_1015D0D28);
  __chkstk_darwin(v76);
  uint64_t v79 = (uint64_t)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_1000FF33C(&qword_1015D0D30);
  __chkstk_darwin(v77);
  Swift::String v81 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1000FF33C(&qword_1015D0D38);
  __chkstk_darwin(v78);
  uint64_t v84 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000FF33C(&qword_1015D0D40);
  __chkstk_darwin(v80);
  uint64_t v85 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_1000FF33C(&qword_1015D0D48);
  __chkstk_darwin(v82);
  uint64_t v83 = (uint64_t)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.horizontal.getter();
  char v87 = v2;
  sub_1000FF33C(&qword_1015D0D50);
  uint64_t v20 = (uint64_t)v14;
  sub_1001010F8(&qword_1015D0D58, &qword_1015D0D50);
  ScrollView.init(_:showsIndicators:content:)();
  uint64_t v21 = (_OWORD *)swift_allocObject();
  long long v22 = v2[3];
  v21[3] = v2[2];
  v21[4] = v22;
  v21[5] = v2[4];
  long long v23 = v2[1];
  v21[1] = *v2;
  _OWORD v21[2] = v23;
  sub_10018278C((uint64_t)v2);
  sub_1001010F8(&qword_1015D0D60, &qword_1015D0D08);
  uint64_t v24 = v74;
  View.onScrollPhaseChange(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v4, v24);
  uint64_t v25 = v72;
  uint64_t v26 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v10, v6, v73);
  uint64_t v27 = &v10[*(int *)(v8 + 44)];
  *(void *)uint64_t v27 = 0x6C6C6F726373;
  *((void *)v27 + 1) = 0xE600000000000000;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  sub_1000FF27C((uint64_t)v10, v20, &qword_1015D0D18);
  uint64_t v28 = v20 + *(int *)(v12 + 44);
  *(_OWORD *)uint64_t v28 = xmmword_100F5FBF0;
  *(unsigned char *)(v28 + 16) = 13;
  sub_1000FF2E0((uint64_t)v10, &qword_1015D0D18);
  uint64_t v29 = (void *)*((void *)v2 + 2);
  if (v29)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v30 = v29;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    double v31 = *(double *)&v88;
    static Alignment.center.getter();
    if (v31 < -INFINITY)
    {
      static os_log_type_t.fault.getter();
      uint64_t v32 = (void *)static Log.runtimeIssuesLog.getter();
      os_log(_:dso:log:_:_:)();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v33 = v79;
    sub_1000FF27C(v20, v79, &qword_1015D0D20);
    uint64_t v34 = (_OWORD *)(v33 + *(int *)(v76 + 36));
    long long v35 = v93;
    v34[4] = v92;
    v34[5] = v35;
    _OWORD v34[6] = v94;
    long long v36 = v89;
    *uint64_t v34 = v88;
    v34[1] = v36;
    long long v37 = v91;
    v34[2] = v90;
    v34[3] = v37;
    sub_1000FF2E0(v20, &qword_1015D0D20);
    static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v100 = v38;
    uint64_t v101 = v39;
    uint64_t v102 = v40;
    uint64_t v103 = v41;
    char v104 = 0;
    uint64_t v42 = (uint64_t)v81;
    SafeAreaPaddingModifier.init(edges:insets:)();
    sub_100101750(v33, v42, &qword_1015D0D28);
    static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v95 = v43;
    uint64_t v96 = v44;
    uint64_t v97 = v45;
    uint64_t v98 = v46;
    char v99 = 0;
    uint64_t v47 = (uint64_t)v84;
    SafeAreaPaddingModifier.init(edges:insets:)();
    sub_100101750(v42, v47, &qword_1015D0D30);
    char v48 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v57 = v85;
    sub_1000FF27C(v47, v85, &qword_1015D0D38);
    uint64_t v58 = v57 + *(int *)(v80 + 36);
    *(unsigned char *)uint64_t v58 = v48;
    *(void *)(v58 + 8) = v50;
    *(void *)(v58 + 16) = v52;
    *(void *)(v58 + 24) = v54;
    *(void *)(v58 + 32) = v56;
    *(unsigned char *)(v58 + 40) = 0;
    sub_1000FF2E0(v47, &qword_1015D0D38);
    char v59 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v68 = v83;
    sub_1000FF27C(v57, v83, &qword_1015D0D40);
    uint64_t v69 = v68 + *(int *)(v82 + 36);
    *(unsigned char *)uint64_t v69 = v59;
    *(void *)(v69 + 8) = v61;
    *(void *)(v69 + 16) = v63;
    *(void *)(v69 + 24) = v65;
    *(void *)(v69 + 32) = v67;
    *(unsigned char *)(v69 + 40) = 0;
    sub_1000FF2E0(v57, &qword_1015D0D40);
    return sub_100101750(v68, v86, &qword_1015D0D48);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001674D8()
{
  uint64_t v0 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v0);
  static VerticalAlignment.center.getter();
  sub_1001732B8(&qword_1015CFE90, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_1000FF33C(&qword_1015D0D78);
  sub_1001857A8(&qword_1015D0D80, &qword_1015D0D78, (void (*)(void))sub_10018285C);
  return LazyHStack.init(alignment:spacing:pinnedViews:content:)();
}

id sub_100167640@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D0D78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *a1;
  uint64_t v8 = *(void **)(*((void *)&v17 + 1) + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem);
  swift_retain();
  id result = [v8 _searchResultPhotoCarousel];
  if (result)
  {
    Swift::String v10 = result;
    sub_1000FF33C(&qword_1015D0DB8);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    id result = (id)sub_100183620((uint64_t)&v17);
    if (__OFSUB__(v12, 1))
    {
      __break(1u);
    }
    else if (((v12 - 1) & 0x8000000000000000) == 0)
    {
      v16[0] = 0;
      v16[1] = v12 - 1;
      swift_getKeyPath();
      uint64_t v13 = (_OWORD *)swift_allocObject();
      long long v14 = a1[3];
      v13[3] = a1[2];
      v13[4] = v14;
      v13[5] = a1[4];
      long long v15 = a1[1];
      v13[1] = *a1;
      v13[2] = v15;
      sub_10018278C((uint64_t)a1);
      sub_1000FF33C(&qword_1015D0DC0);
      sub_1000FF33C(&qword_1015D0D90);
      sub_1001829B8();
      sub_10018285C();
      ForEach<>.init(_:id:content:)();
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001678A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v22[0] = a2;
  v22[1] = a3;
  uint64_t v4 = type metadata accessor for AccessibilityTraits();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D0DB0);
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (uint64_t *)((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_1000FF33C(&qword_1015D0DA0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D0D90);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a1;
  *Swift::String v10 = static Alignment.leading.getter();
  v10[1] = v18;
  uint64_t v19 = sub_1000FF33C(&qword_1015D0DD8);
  sub_100167B24(v22[0], v17, (uint64_t)v10 + *(int *)(v19 + 44));
  sub_1000FF27C((uint64_t)v10, (uint64_t)v13, &qword_1015D0DB0);
  uint64_t v20 = &v13[*(int *)(v11 + 36)];
  *(_OWORD *)uint64_t v20 = xmmword_100F5FC00;
  v20[16] = 3;
  sub_1000FF2E0((uint64_t)v10, &qword_1015D0DB0);
  sub_100182908();
  View.accessibilityAutomationType(_:)();
  sub_1000FF2E0((uint64_t)v13, &qword_1015D0DA0);
  static AccessibilityTraits.isButton.getter();
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1000FF2E0((uint64_t)v16, &qword_1015D0D90);
}

uint64_t sub_100167B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v109 = a2;
  uint64_t v124 = a3;
  uint64_t v98 = type metadata accessor for Image.ResizingMode();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v96 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1000FF33C(&qword_1015D0DE0);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v103 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1000FF33C(&qword_1015D0DE8);
  __chkstk_darwin(v99);
  uint64_t v102 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1000FF33C(&qword_1015D0DF0);
  __chkstk_darwin(v101);
  uint64_t v108 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000FF33C(&qword_1015D0DF8);
  __chkstk_darwin(v100);
  uint64_t v107 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_1000FF33C(&qword_1015D0E00);
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v104 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D0E08);
  __chkstk_darwin(v10 - 8);
  long long v123 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v121 = (uint64_t)&v89 - v13;
  uint64_t v126 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v126);
  uint64_t v117 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v125);
  uint64_t v16 = (_OWORD *)((char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_1000FF33C(&qword_1015D0E10);
  __chkstk_darwin(v115);
  uint64_t v119 = (uint64_t)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v89 - v23;
  __chkstk_darwin(v25);
  uint64_t v127 = (uint64_t)&v89 - v26;
  id v27 = [self tertiarySystemFillColor];
  uint64_t v116 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Color.RGBColorSpace.sRGBLinear(_:), v17);
  uint64_t v113 = Color.init(_:white:opacity:)();
  uint64_t v118 = (_OWORD *)a1;
  uint64_t v28 = *(void **)(a1 + 16);
  if (v28)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v29 = v28;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    id v30 = v29;
    static Published.subscript.getter();
    id v90 = v30;

    swift_release();
    swift_release();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v112 = v136;
    char v31 = v137;
    uint64_t v32 = v138;
    int v111 = v139;
    uint64_t v33 = v141;
    uint64_t v110 = v140;
    uint64_t v34 = (char *)v16 + *(int *)(v125 + 20);
    uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v36 = type metadata accessor for RoundedCornerStyle();
    uint64_t v37 = *(void *)(v36 - 8);
    uint64_t v38 = *(void (**)(uint64_t, void, uint64_t))(v37 + 104);
    unsigned int v95 = v35;
    uint64_t v94 = v36;
    long long v93 = v38;
    uint64_t v92 = v37 + 104;
    ((void (*)(char *, uint64_t))v38)(v34, v35);
    __asm { FMOV            V0.2D, #6.0 }
    long long v91 = _Q0;
    *uint64_t v16 = _Q0;
    uint64_t v44 = v117;
    sub_100173DDC((uint64_t)v16, (uint64_t)v117, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v44[*(int *)(v126 + 36)] = 256;
    sub_1000FF27C((uint64_t)v44, (uint64_t)&v24[*(int *)(v115 + 36)], &qword_1015CFF60);
    uint64_t v45 = v116;
    *(void *)uint64_t v24 = KeyPath;
    *((void *)v24 + 1) = v45;
    *((void *)v24 + 2) = v113;
    *(_OWORD *)(v24 + 24) = xmmword_100F5FC10;
    uint64_t v46 = v112;
    *((void *)v24 + 5) = 0x4010000000000000;
    *((void *)v24 + 6) = v46;
    v24[56] = v31;
    *((void *)v24 + 8) = v32;
    v24[72] = v111;
    *((void *)v24 + 10) = v110;
    *((void *)v24 + 11) = v33;
    *((void *)v24 + 12) = 0;
    *((_WORD *)v24 + 52) = 257;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000FF2E0((uint64_t)v44, &qword_1015CFF60);
    sub_100174240((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v47 = v127;
    sub_100101750((uint64_t)v24, v127, &qword_1015D0E10);
    char v48 = v118;
    long long v147 = *v118;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100183620((uint64_t)&v147);
    uint64_t v49 = v128;
    if (!v128)
    {
      uint64_t v57 = 1;
      uint64_t v58 = v124;
      uint64_t v50 = (uint64_t)v123;
      uint64_t v84 = v122;
      uint64_t v85 = v121;
      uint64_t v51 = v120;
      goto LABEL_10;
    }
    uint64_t v50 = (uint64_t)v123;
    uint64_t v51 = v120;
    if (*(void *)(v128 + 16) && (uint64_t v52 = v16, v53 = sub_1001EA66C(v109), (v54 & 1) != 0))
    {
      uint64_t v55 = *(void **)(*(void *)(v49 + 56) + 8 * v53);
      id v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v57 = 1;
      uint64_t v58 = v124;
      if (v55)
      {
        uint64_t v117 = (char *)v56;
        Image.init(uiImage:)();
        uint64_t v59 = v97;
        uint64_t v60 = v96;
        uint64_t v61 = v98;
        (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, enum case for Image.ResizingMode.stretch(_:), v98);
        uint64_t v115 = Image.resizable(capInsets:resizingMode:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
        swift_getKeyPath();
        swift_getKeyPath();
        id v62 = v90;
        uint64_t v116 = (uint64_t)v52;
        id v63 = v62;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        id v64 = v63;
        static Published.subscript.getter();

        swift_release();
        swift_release();
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v128 = v115;
        uint64_t v129 = 0;
        __int16 v130 = 257;
        uint64_t v131 = v142;
        char v132 = v143;
        uint64_t v133 = v144;
        char v134 = v145;
        long long v135 = v146;
        uint64_t v65 = swift_allocObject();
        long long v66 = v48[3];
        *(_OWORD *)(v65 + 48) = v48[2];
        *(_OWORD *)(v65 + 64) = v66;
        *(_OWORD *)(v65 + 80) = v48[4];
        long long v67 = v48[1];
        *(_OWORD *)(v65 + 16) = *v48;
        *(_OWORD *)(v65 + 32) = v67;
        uint64_t v68 = v109;
        *(void *)(v65 + 96) = v109;
        sub_10018278C((uint64_t)v48);
        sub_1000FF33C(&qword_1015D0E20);
        sub_100182B04();
        uint64_t v69 = v103;
        View.onTapGesture(count:perform:)();
        swift_release();
        swift_release();
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = v68;
        long long v71 = *v48;
        *(_OWORD *)(v70 + 40) = v48[1];
        long long v72 = v48[3];
        *(_OWORD *)(v70 + 56) = v48[2];
        *(_OWORD *)(v70 + 72) = v72;
        *(_OWORD *)(v70 + 88) = v48[4];
        *(_OWORD *)(v70 + 24) = v71;
        uint64_t v73 = v105;
        uint64_t v74 = (uint64_t)v102;
        uint64_t v75 = v106;
        (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v102, v69, v106);
        uint64_t v76 = (id (**)())(v74 + *(int *)(v99 + 36));
        const void *v76 = sub_100182BF4;
        v76[1] = (id (*)())v70;
        void v76[2] = 0;
        v76[3] = 0;
        sub_10018278C((uint64_t)v48);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v75);
        uint64_t v77 = v108;
        sub_1000FF27C(v74, v108, &qword_1015D0DE8);
        uint64_t v78 = v77 + *(int *)(v101 + 36);
        *(void *)uint64_t v78 = 0;
        *(_WORD *)(v78 + 8) = 257;
        uint64_t v79 = v74;
        uint64_t v47 = v127;
        sub_1000FF2E0(v79, &qword_1015D0DE8);
        uint64_t v80 = (_OWORD *)v116;
        v93(v116 + *(int *)(v125 + 20), v95, v94);
        _OWORD *v80 = v91;
        uint64_t v81 = (uint64_t)v107;
        uint64_t v82 = (uint64_t)&v107[*(int *)(v100 + 36)];
        sub_100173DDC((uint64_t)v80, v82, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
        *(_WORD *)(v82 + *(int *)(v126 + 36)) = 256;
        sub_1000FF27C(v77, v81, &qword_1015D0DF0);
        sub_100174240((uint64_t)v80, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);

        sub_1000FF2E0(v77, &qword_1015D0DF0);
        uint64_t v83 = v104;
        sub_1000FF27C(v81, v104, &qword_1015D0DF8);
        uint64_t v84 = v122;
        *(unsigned char *)(v83 + *(int *)(v122 + 36)) = 1;
        sub_1000FF2E0(v81, &qword_1015D0DF8);
        uint64_t v85 = v121;
        sub_100101750(v83, v121, &qword_1015D0E00);
        uint64_t v57 = 0;
LABEL_10:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v85, v57, 1, v84);
        uint64_t v86 = v119;
        sub_1000FF27C(v47, v119, &qword_1015D0E10);
        sub_1000FF27C(v85, v50, &qword_1015D0E08);
        sub_1000FF27C(v86, v58, &qword_1015D0E10);
        uint64_t v87 = sub_1000FF33C(&qword_1015D0E18);
        sub_1000FF27C(v50, v58 + *(int *)(v87 + 48), &qword_1015D0E08);
        sub_1000FF2E0(v85, &qword_1015D0E08);
        sub_1000FF2E0(v47, &qword_1015D0E10);
        sub_1000FF2E0(v50, &qword_1015D0E08);
        return sub_1000FF2E0(v86, &qword_1015D0E10);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v57 = 1;
      uint64_t v58 = v124;
    }
    uint64_t v84 = v122;
    uint64_t v85 = v121;
    goto LABEL_10;
  }
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

id sub_100168B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  sub_10012EB20();
  uint64_t v6 = (void (*)(uint64_t *))sub_1001278A0(v3, v4, v5);
  sub_100127C4C();
  uint64_t v9 = a2;
  v6(&v9);
  swift_release();
  uint64_t v7 = self;

  return [v7 didTapPhotoCarouselPhoto:a2];
}

id sub_100168BE4(uint64_t a1, long long *a2)
{
  long long v8 = *a2;
  uint64_t v3 = *(void **)(*((void *)&v8 + 1) + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem);
  swift_retain();
  id result = [v3 _searchResultPhotoCarousel:v8];
  if (!result) {
    goto LABEL_10;
  }
  char v5 = result;
  sub_1000FF33C(&qword_1015D0DB8);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  id result = (id)sub_100183620((uint64_t)&v8);
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (v7 - 1 == a1) {
    return [self didScrollPhotoCarouselToEnd];
  }
  return result;
}

uint64_t sub_100168CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for ScrollGeometry();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = static ScrollPhase.== infix(_:_:)();
  if (result)
  {
    uint64_t result = static ScrollPhase.== infix(_:_:)();
    if ((result & 1) == 0)
    {
      long long v23 = *(_OWORD *)(a4 + 56);
      uint64_t v24 = *(void *)(a4 + 72);
      long long v19 = *(_OWORD *)(a4 + 56);
      uint64_t v20 = *(void *)(a4 + 72);
      sub_1000FF33C(&qword_1015D0D68);
      State.wrappedValue.getter();
      double v10 = v21;
      ScrollPhaseChangeContext.geometry.getter();
      ScrollGeometry.contentOffset.getter();
      double v12 = v11;
      uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
      v13(v8, v5);
      uint64_t v14 = self;
      uint64_t v15 = &selRef_didScrollPhotoCarouselToRight;
      if (v10 >= v12) {
        uint64_t v15 = &selRef_didScrollPhotoCarouselToLeft;
      }
      [v14 *v15];
      sub_100101750((uint64_t)&v24, (uint64_t)v25, &qword_1015D0D70);
      ScrollPhaseChangeContext.geometry.getter();
      ScrollGeometry.contentOffset.getter();
      uint64_t v17 = v16;
      v13(v8, v5);
      long long v19 = v23;
      uint64_t v20 = v24;
      sub_1001827FC((uint64_t)v25);
      State.wrappedValue.getter();
      long long v19 = v23;
      uint64_t v20 = v24;
      v18[0] = v17;
      v18[1] = v22;
      State.wrappedValue.setter();
      return sub_100182828((uint64_t)&v23);
    }
  }
  return result;
}

uint64_t sub_100168F14@<X0>(uint64_t a1@<X8>)
{
  return sub_100166BC4(a1);
}

uint64_t sub_100168F58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AccessibilityTraits();
  uint64_t v74 = *(void *)(v4 - 8);
  uint64_t v75 = v4;
  __chkstk_darwin(v4);
  uint64_t v73 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D0E40);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v72 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v77 = (char *)v60 - v10;
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)v60 - v12;
  uint64_t v13 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  long long v95 = *(_OWORD *)(v1 + 40);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100183620((uint64_t)&v95);
  if (v92 != 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, 1, 1, v6);
  }
  uint64_t v66 = v7;
  uint64_t v67 = v6;
  uint64_t v68 = a1;
  uint64_t v14 = *(void *)(v1 + 80);
  *(void *)&long long v92 = *(void *)(v1 + 72);
  *((void *)&v92 + 1) = v14;
  unint64_t v15 = sub_100180324();
  swift_bridgeObjectRetain();
  unint64_t v65 = v15;
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v63 = v18;
  long long v19 = *(void **)v1;
  if (*(void *)v1)
  {
    uint64_t v20 = v16;
    char v21 = v17;
    swift_getKeyPath();
    swift_getKeyPath();
    id v22 = v19;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (v92) {
      static Color.white.getter();
    }
    else {
      static Color.blue.getter();
    }
    uint64_t v24 = v63;
    uint64_t v25 = Text.foregroundColor(_:)();
    uint64_t v69 = v26;
    uint64_t v70 = v25;
    char v28 = v27;
    uint64_t v71 = v29;
    swift_release();
    int v64 = v28 & 1;
    sub_10017F958(v20, v24, v21 & 1);
    swift_bridgeObjectRelease();
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v30._uint64_t countAndFlagsBits = 0;
    v30._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v30);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v1 + 56));
    v31._uint64_t countAndFlagsBits = 32;
    v31._uint64_t object = (void *)0xE100000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v31);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    v32._uint64_t countAndFlagsBits = 0;
    v32._uint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v33 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v62 = v34;
    uint64_t v63 = v33;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    v60[1] = v36;
    char v39 = v38 & 1;
    int v61 = v38 & 1;
    uint64_t v40 = swift_allocObject();
    long long v41 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v40 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v40 + 96) = v41;
    *(void *)(v40 + 112) = *(void *)(v2 + 96);
    long long v42 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v40 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v40 + 32) = v42;
    long long v43 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v40 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v40 + 64) = v43;
    sub_100174120((id *)v2);
    sub_10017FDF0(v33, v35, v39);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v44 = static VerticalAlignment.center.getter();
    sub_100169768((void **)v2, v33, v35, v39, v37, (uint64_t)&v92);
    sub_10017F958(v33, v35, v39);
    swift_release();
    swift_bridgeObjectRelease();
    *(_OWORD *)((char *)v89 + 9) = *(_OWORD *)((char *)&v94[4] + 9);
    v88[9] = v94[3];
    v89[0] = v94[4];
    v88[4] = v92;
    v88[5] = v93;
    v88[6] = v94[0];
    v88[7] = v94[1];
    v88[8] = v94[2];
    char v91 = 0;
    *(_OWORD *)((char *)&v90[3] + 7) = v94[1];
    *(_OWORD *)((char *)&v90[2] + 7) = v94[0];
    *(_OWORD *)((char *)&v90[1] + 7) = v93;
    *(_OWORD *)((char *)v90 + 7) = v92;
    v90[7] = *(_OWORD *)((char *)v89 + 9);
    *(_OWORD *)((char *)&v90[6] + 7) = v94[4];
    *(_OWORD *)((char *)&v90[5] + 7) = v94[3];
    *(_OWORD *)((char *)&v90[4] + 7) = v94[2];
    *(void *)&long long v92 = sub_100186524;
    *((void *)&v92 + 1) = v40;
    *(void *)&long long v93 = v44;
    *((void *)&v93 + 1) = 0x4010000000000000;
    LOBYTE(v94[0]) = 0;
    *(_OWORD *)((char *)&v94[3] + 1) = v90[3];
    *(_OWORD *)((char *)&v94[2] + 1) = v90[2];
    *(_OWORD *)((char *)&v94[1] + 1) = v90[1];
    *(_OWORD *)((char *)v94 + 1) = v90[0];
    *(_OWORD *)((char *)&v94[7] + 1) = v90[7];
    *(_OWORD *)((char *)&v94[6] + 1) = v90[6];
    *(_OWORD *)((char *)&v94[5] + 1) = v90[5];
    *(_OWORD *)((char *)&v94[4] + 1) = v90[4];
    *(_OWORD *)((char *)&v94[8] + 8) = xmmword_100F5FC20;
    BYTE8(v94[9]) = 0;
    long long v87 = v94[7];
    v88[0] = v94[8];
    *(_OWORD *)((char *)v88 + 9) = *(_OWORD *)((char *)&v94[8] + 9);
    long long v86 = v94[6];
    long long v82 = v94[2];
    long long v83 = v94[3];
    long long v84 = v94[4];
    long long v85 = v94[5];
    long long v78 = v92;
    long long v79 = v93;
    long long v80 = v94[0];
    long long v81 = v94[1];
    sub_1000FF33C(&qword_1015D0E48);
    sub_100182C0C();
    uint64_t v45 = (uint64_t)v72;
    View.accessibilityAutomationType(_:)();
    sub_100182CAC((uint64_t)&v92);
    uint64_t v46 = v73;
    static AccessibilityTraits.isButton.getter();
    uint64_t v47 = (uint64_t)v77;
    uint64_t v48 = v67;
    ModifiedContent<>.accessibilityRemoveTraits(_:)();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v75);
    sub_1000FF2E0(v45, &qword_1015D0E40);
    uint64_t v49 = *(void *)(v2 + 96);
    *(void *)&long long v78 = *(void *)(v2 + 88);
    *((void *)&v78 + 1) = v49;
    swift_bridgeObjectRetain();
    uint64_t v50 = Text.init<A>(_:)();
    uint64_t v52 = v51;
    LOBYTE(v46) = v53 & 1;
    uint64_t v54 = swift_allocObject();
    long long v55 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v54 + 80) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v54 + 96) = v55;
    *(void *)(v54 + 112) = *(void *)(v2 + 96);
    long long v56 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v54 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v54 + 32) = v56;
    long long v57 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v54 + 48) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v54 + 64) = v57;
    sub_100174120((id *)v2);
    uint64_t v58 = (uint64_t)v76;
    ModifiedContent<>.accessibilityAction(named:_:)();
    swift_release();
    sub_10017F958(v50, v52, (char)v46);
    swift_bridgeObjectRelease();
    sub_10017F958(v70, v69, v64);
    swift_bridgeObjectRelease();
    sub_10017F958(v63, v62, v61);
    swift_bridgeObjectRelease();
    sub_1000FF2E0(v47, &qword_1015D0E40);
    uint64_t v59 = v68;
    sub_100101750(v58, v68, &qword_1015D0E40);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v59, 0, 1, v48);
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100169768@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = Image.init(systemName:)();
  uint64_t v13 = static Font.caption.getter();
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v15 = *a1;
  if (*a1)
  {
    char v33 = a4;
    uint64_t v34 = KeyPath;
    uint64_t v35 = v13;
    swift_getKeyPath();
    swift_getKeyPath();
    id v16 = v15;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v17 = v12;
    if (v37[0]) {
      uint64_t v18 = static Color.white.getter();
    }
    else {
      uint64_t v18 = static Color.secondary.getter();
    }
    uint64_t v36 = v18;
    uint64_t v19 = swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    id v20 = v16;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v37[0], a2, a3, v33 & 1, a5, (uint64_t)v37);
    uint64_t v21 = v37[0];
    uint64_t v22 = v37[1];
    char v23 = v38;
    uint64_t v24 = v39;
    uint64_t v25 = v40;
    uint64_t v27 = v41;
    uint64_t v26 = v42;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    uint64_t v30 = v45;
    char v31 = v46;
    LOBYTE(v37[0]) = v38;
    char v47 = v46;
    *(void *)a6 = v17;
    *(void *)(a6 + 8) = v34;
    *(void *)(a6 + 16) = v35;
    *(void *)(a6 + 24) = v19;
    *(void *)(a6 + 32) = v36;
    *(void *)(a6 + 40) = v21;
    *(void *)(a6 + 48) = v22;
    *(unsigned char *)(a6 + 56) = v23;
    *(void *)(a6 + 64) = v24;
    *(void *)(a6 + 72) = v25;
    *(void *)(a6 + 80) = v27;
    *(void *)(a6 + 88) = v26;
    *(void *)(a6 + 96) = v28;
    *(void *)(a6 + 104) = v29;
    *(void *)(a6 + 112) = v30;
    *(unsigned char *)(a6 + 120) = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017FDF0(v21, v22, v23);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10017F958(v21, v22, v23);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_100169AA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  uint64_t v5 = (void (*)(id *))sub_10012761C(v2, v3, v4);
  sub_100127C4C();
  id v7 = *(id *)(*(void *)(a1 + 48) + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_mapItem);
  id v6 = v7;
  v5(&v7);
  swift_release();
}

uint64_t sub_100169B64@<X0>(uint64_t a1@<X8>)
{
  return sub_100168F58(a1);
}

uint64_t sub_100169BB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v34 = type metadata accessor for AccessibilityTraits();
  uint64_t v33 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  Swift::String v32 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000FF33C(&qword_1015D0E58);
  __chkstk_darwin(v31);
  char v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v29 = (char *)v28 - v6;
  __chkstk_darwin(v7);
  uint64_t v30 = (char *)v28 - v8;
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v9 + 64) = v10;
  *(void *)(v9 + 80) = *(void *)(v1 + 64);
  long long v11 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v9 + 32) = v11;
  uint64_t v49 = sub_100186528;
  uint64_t v50 = v9;
  sub_100182E5C((id *)v1);
  swift_retain();
  sub_10016A04C(v1, (uint64_t)&v51);
  swift_release();
  uint64_t v12 = v51;
  uint64_t v13 = v52;
  char v14 = v53;
  v28[2] = v54;
  v28[1] = v55;
  v28[3] = v56;
  v28[4] = v58;
  uint64_t v36 = v49;
  uint64_t v37 = v50;
  uint64_t v38 = v51;
  uint64_t v39 = v52;
  char v40 = v53;
  uint64_t v41 = v54;
  uint64_t v42 = v55;
  uint64_t v43 = v56;
  uint64_t v44 = v57;
  uint64_t v45 = v58;
  uint64_t v46 = v59;
  uint64_t v47 = v60;
  char v48 = v61;
  sub_1000FF33C(&qword_1015D0E60);
  sub_1001010F8(&qword_1015D0E68, &qword_1015D0E60);
  View.accessibility(identifier:)();
  swift_release();
  sub_10017F958(v12, v13, v14);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v15 = (uint64_t)v29;
  ModifiedContent<>.accessibilityAutomationType(_:)();
  sub_1000FF2E0((uint64_t)v4, &qword_1015D0E58);
  id v16 = v32;
  static AccessibilityTraits.isButton.getter();
  uint64_t v17 = (uint64_t)v30;
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v34);
  sub_1000FF2E0(v15, &qword_1015D0E58);
  uint64_t v18 = *(void *)(v1 + 64);
  uint64_t v49 = *(void (**)())(v1 + 56);
  uint64_t v50 = v18;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = swift_allocObject();
  long long v25 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v24 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v24 + 64) = v25;
  *(void *)(v24 + 80) = *(void *)(v1 + 64);
  long long v26 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v24 + 32) = v26;
  sub_100182E5C((id *)v1);
  ModifiedContent<>.accessibilityAction(named:_:)();
  swift_release();
  sub_10017F958(v19, v21, v23);
  swift_bridgeObjectRelease();
  return sub_1000FF2E0(v17, &qword_1015D0E58);
}

uint64_t sub_10016A04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Swift::String v4 = *(Swift::String *)(*(void *)(a1 + 48) + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_userNote);
  *(void *)&long long v23 = 10256610;
  *((void *)&v23 + 1) = 0xA300000000000000;
  String.append(_:)(v4);
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 10322146;
  v5._uint64_t object = (void *)0xA300000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_100180324();
  uint64_t v6 = Text.init<A>(_:)();
  long long v10 = *(void **)a1;
  if (*(void *)a1)
  {
    uint64_t v11 = v6;
    uint64_t v12 = v7;
    uint64_t v13 = v9;
    char v14 = v8 & 1;
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v10;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    sub_10015C750(v23, v11, v12, v14, v13, (uint64_t)&v23);
    sub_10017F958(v11, v12, v14);
    uint64_t result = swift_bridgeObjectRelease();
    char v17 = v24;
    long long v18 = v26;
    long long v19 = v27;
    uint64_t v20 = v28;
    char v21 = v29;
    long long v22 = v25;
    *(_OWORD *)a2 = v23;
    *(unsigned char *)(a2 + 16) = v17;
    *(_OWORD *)(a2 + 24) = v22;
    *(_OWORD *)(a2 + 40) = v18;
    *(_OWORD *)(a2 + 56) = v19;
    *(void *)(a2 + 72) = v20;
    *(unsigned char *)(a2 + 80) = v21;
  }
  else
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    sub_1001732B8((unint64_t *)&qword_1015CFD40, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelTemplate);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_10016A238(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  sub_10012EB20();
  Swift::String v5 = (void (*)(id *))sub_10012761C(v2, v3, v4);
  sub_100127C4C();
  id v7 = *(id *)(*(void *)(a1 + 48) + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_mapItem);
  id v6 = v7;
  v5(&v7);
  swift_release();
}

uint64_t sub_10016A2FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100169BB0(a1);
}

uint64_t sub_10016A340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v269 = a2;
  uint64_t v252 = sub_1000FF33C(&qword_1015CFD90);
  __chkstk_darwin(v252);
  uint64_t v253 = (uint64_t *)((char *)&v231 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_1000FF33C(&qword_1015CFD98);
  __chkstk_darwin(v4);
  uint64_t v254 = (char *)&v231 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_1000FF33C(&qword_1015CFDA0);
  __chkstk_darwin(v251);
  uint64_t v244 = (uint64_t)&v231 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v245 = (uint64_t)&v231 - v8;
  uint64_t v235 = sub_1000FF33C(&qword_1015CFDA8);
  __chkstk_darwin(v235);
  uint64_t v236 = (_OWORD *)((char *)&v231 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000FF33C(&qword_1015CFDB0);
  __chkstk_darwin(v10);
  char v238 = (char *)&v231 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = sub_1000FF33C(&qword_1015CFDB8);
  __chkstk_darwin(v233);
  uint64_t v234 = (uint64_t)&v231 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015CFDC0);
  __chkstk_darwin(v13);
  v237 = (char *)&v231 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = sub_1000FF33C(&qword_1015CFDC8);
  __chkstk_darwin(v246);
  uint64_t v257 = (char *)&v231 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = sub_1000FF33C(&qword_1015CFDD0);
  __chkstk_darwin(v240);
  uint64_t v242 = (uint64_t)&v231 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = sub_1000FF33C(&qword_1015CFDD8);
  __chkstk_darwin(v241);
  uint64_t v232 = (char *)&v231 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1000FF33C(&qword_1015CFDE0);
  __chkstk_darwin(v18);
  uint64_t v247 = (char *)&v231 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t v243 = a1;
  uint64_t v239 = v20;
  uint64_t v22 = _s9ImageViewVMa();
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v248 = v18;
  uint64_t v24 = type metadata accessor for _ConditionalContent();
  uint64_t v250 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v249 = (char *)&v231 - v25;
  uint64_t v272 = v26;
  uint64_t v258 = v13;
  uint64_t v27 = type metadata accessor for _ConditionalContent();
  uint64_t v256 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v255 = (char *)&v231 - v28;
  uint64_t v271 = v29;
  uint64_t v259 = v10;
  uint64_t v30 = type metadata accessor for _ConditionalContent();
  uint64_t v261 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  v260 = (char *)&v231 - v31;
  uint64_t v32 = *(void *)(v21 - 8);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v231 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v273 = v22;
  uint64_t v36 = *(void *)(v22 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v231 - v38;
  uint64_t v270 = v23;
  uint64_t v262 = *(void *)(v23 - 8);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v231 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v231 - v44;
  __chkstk_darwin(v46);
  char v48 = (char *)&v231 - v47;
  uint64_t v267 = v49;
  uint64_t v268 = v4;
  uint64_t v50 = type metadata accessor for _ConditionalContent();
  uint64_t v265 = *(void *)(v50 - 8);
  uint64_t v266 = v50;
  __chkstk_darwin(v50);
  v264 = (char *)&v231 - v51;
  unint64_t v52 = *v263;
  switch(*v263 >> 61)
  {
    case 1uLL:
      char v77 = *(unsigned char *)((v52 & 0x1FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA);
      unint64_t v231 = *v263;
      if (v77)
      {
        unint64_t v78 = v52;
        sub_10012E3D8(v52);
        sub_10012E3D8(v78);
        type metadata accessor for DirectionsETAModel(0);
        sub_1001732B8(&qword_1015CFE78, (void (*)(uint64_t))type metadata accessor for DirectionsETAModel);
        swift_retain();
        *(void *)&long long KeyPath = ObservedObject.init(wrappedValue:)();
        *((void *)&KeyPath + 1) = v79;
        unint64_t v350 = v78;
        v351[0] = 0xD000000000000028;
        v351[1] = 0x8000000100F78360;
        sub_1001746A4();
        uint64_t v80 = (uint64_t)v232;
        View.accessibility(identifier:)();
        swift_release();
        sub_10012E4B0(v78);
        long long v81 = &qword_1015CFDD8;
        sub_1000FF27C(v80, v242, &qword_1015CFDD8);
        swift_storeEnumTagMultiPayload();
        sub_1001745F8();
        sub_100174428();
        uint64_t v82 = (uint64_t)v247;
        _ConditionalContent<>.init(storage:)();
        uint64_t v83 = v80;
      }
      else
      {
        unint64_t v138 = v52;
        long long KeyPath = (unint64_t)swift_getKeyPath();
        LOBYTE(v350) = 0;
        v351[0] = 0xD000000000000028;
        v351[1] = 0x8000000100F78360;
        unsigned long long v352 = 0uLL;
        unint64_t v353 = v138;
        sub_10012E3D8(v138);
        sub_1001744D4();
        swift_retain();
        uint64_t v139 = (uint64_t)v257;
        View.accessibility(identifier:)();
        swift_release();
        sub_10012E4B0(v138);
        long long v81 = &qword_1015CFDC8;
        sub_1000FF27C(v139, v242, &qword_1015CFDC8);
        swift_storeEnumTagMultiPayload();
        sub_1001745F8();
        sub_100174428();
        uint64_t v82 = (uint64_t)v247;
        _ConditionalContent<>.init(storage:)();
        uint64_t v83 = v139;
      }
      sub_1000FF2E0(v83, v81);
      uint64_t v141 = v271;
      uint64_t v140 = v272;
      uint64_t v142 = v270;
      uint64_t v143 = v267;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v145 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
      uint64_t v288 = WitnessTable;
      uint64_t v289 = v145;
      uint64_t v146 = swift_getWitnessTable();
      unint64_t v147 = sub_10017457C();
      uint64_t v148 = (uint64_t)v249;
      sub_100150C4C(v82, v142, v248);
      uint64_t v286 = v146;
      unint64_t v287 = v147;
      uint64_t v149 = swift_getWitnessTable();
      uint64_t v150 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
      uint64_t v151 = (uint64_t)v255;
      sub_100150B54(v148, v140);
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v148, v140);
      uint64_t v284 = v149;
      uint64_t v285 = v150;
      uint64_t v152 = swift_getWitnessTable();
      unint64_t v153 = sub_1001746F8();
      uint64_t v154 = v141;
      uint64_t v155 = (uint64_t)v260;
      sub_100150B54(v151, v154);
      (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v151, v154);
      uint64_t v282 = v152;
      unint64_t v283 = v153;
      swift_getWitnessTable();
      sub_1001748BC();
      uint64_t v76 = v264;
      sub_100150B54(v155, v143);
      sub_10012E4B0(v231);
      (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v155, v143);
      uint64_t v107 = &qword_1015CFDE0;
      uint64_t v106 = (uint64_t)v247;
      goto LABEL_22;
    case 2uLL:
      uint64_t v84 = qword_1015CBD78;
      unint64_t v85 = *v263;
      swift_retain();
      if (v84 != -1) {
        swift_once();
      }
      v372._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v372._uint64_t object = (void *)0x8000000100F78230;
      v86._uint64_t countAndFlagsBits = 0x706F745320646441;
      v86._uint64_t object = (void *)0xEE005D52504D5B20;
      v87._uint64_t countAndFlagsBits = 6579265;
      v87._uint64_t object = (void *)0xE300000000000000;
      unsigned long long v88 = (unsigned __int128)NSLocalizedString(_:tableName:bundle:value:comment:)(v86, (Swift::String_optional)0, (NSBundle)qword_101611820, v87, v372);
      long long KeyPath = (unint64_t)swift_getKeyPath();
      LOBYTE(v350) = 0;
      v351[0] = 0xD000000000000010;
      v351[1] = 0x8000000100F78250;
      unsigned long long v352 = v88;
      unint64_t v353 = v85;
      sub_1001744D4();
      swift_retain();
      uint64_t v89 = (uint64_t)v257;
      View.accessibility(identifier:)();
      swift_bridgeObjectRelease();
      swift_release();
      sub_10012E4B0(v85);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      char v90 = KeyPath;
      uint64_t v91 = swift_getKeyPath();
      uint64_t v92 = swift_allocObject();
      *(unsigned char *)(v92 + 16) = (v90 & 1) == 0;
      uint64_t v93 = v244;
      sub_1000FF27C(v89, v244, &qword_1015CFDC8);
      uint64_t v94 = (uint64_t *)(v93 + *(int *)(v251 + 36));
      *uint64_t v94 = v91;
      v94[1] = (uint64_t)sub_1001749B0;
      _OWORD v94[2] = v92;
      sub_1000FF2E0(v89, &qword_1015CFDC8);
      uint64_t v95 = v245;
      sub_100101750(v93, v245, &qword_1015CFDA0);
      sub_1000FF27C(v95, (uint64_t)v253, &qword_1015CFDA0);
      swift_storeEnumTagMultiPayload();
      sub_100174388();
      sub_100174528();
      uint64_t v96 = (uint64_t)v254;
      _ConditionalContent<>.init(storage:)();
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v98 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
      uint64_t v347 = v97;
      uint64_t v348 = v98;
      uint64_t v99 = swift_getWitnessTable();
      unint64_t v100 = sub_10017457C();
      uint64_t v345 = v99;
      unint64_t v346 = v100;
      uint64_t v101 = swift_getWitnessTable();
      uint64_t v102 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
      uint64_t v343 = v101;
      uint64_t v344 = v102;
      uint64_t v103 = swift_getWitnessTable();
      unint64_t v104 = sub_1001746F8();
      uint64_t v341 = v103;
      unint64_t v342 = v104;
      uint64_t v105 = v267;
      swift_getWitnessTable();
      sub_1001748BC();
      uint64_t v76 = v264;
      sub_100150C4C(v96, v105, v268);
      sub_10012E4B0(v85);
      sub_1000FF2E0(v96, &qword_1015CFD98);
      uint64_t v106 = v95;
      uint64_t v107 = &qword_1015CFDA0;
      goto LABEL_22;
    case 3uLL:
      unint64_t v108 = *v263;
      sub_10012E3D8(*v263);
      type metadata accessor for HikeRouteSnapshotViewModel(0);
      sub_1001732B8(&qword_1015CFDE8, (void (*)(uint64_t))type metadata accessor for HikeRouteSnapshotViewModel);
      swift_retain();
      uint64_t v109 = ObservedObject.init(wrappedValue:)();
      uint64_t v110 = v253;
      *uint64_t v253 = v109;
      v110[1] = v111;
      swift_storeEnumTagMultiPayload();
      sub_100174388();
      sub_100174528();
      swift_retain();
      uint64_t v112 = (uint64_t)v254;
      _ConditionalContent<>.init(storage:)();
      uint64_t v113 = swift_getWitnessTable();
      uint64_t v114 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
      uint64_t v370 = v113;
      uint64_t v371 = v114;
      uint64_t v115 = swift_getWitnessTable();
      unint64_t v116 = sub_10017457C();
      uint64_t v368 = v115;
      unint64_t v369 = v116;
      uint64_t v117 = swift_getWitnessTable();
      uint64_t v118 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
      uint64_t v366 = v117;
      uint64_t v367 = v118;
      uint64_t v119 = swift_getWitnessTable();
      unint64_t v120 = sub_1001746F8();
      uint64_t v364 = v119;
      unint64_t v365 = v120;
      uint64_t v121 = v267;
      swift_getWitnessTable();
      sub_1001748BC();
      uint64_t v76 = v264;
      sub_100150C4C(v112, v121, v268);
      sub_10012E4B0(v108);
      sub_1000FF2E0(v112, &qword_1015CFD98);
LABEL_12:
      swift_release();
      break;
    case 4uLL:
      uint64_t v123 = v271;
      uint64_t v122 = v272;
      switch(__ROR8__(v52, 3) ^ 0x1000000000000000)
      {
        case 1:
          unint64_t v156 = *v263;
          long long KeyPath = (unint64_t)swift_getKeyPath();
          LOBYTE(v350) = 0;
          v351[0] = 0x616C75636F6E6962;
          v351[1] = 0xEF6C6C69662E7372;
          unsigned long long v352 = 0uLL;
          unint64_t v353 = v156;
          sub_1001744D4();
          uint64_t v157 = (uint64_t)v257;
          View.accessibility(identifier:)();
          swift_release();
          sub_1000FF27C(v157, v234, &qword_1015CFDC8);
          swift_storeEnumTagMultiPayload();
          sub_100174428();
          uint64_t v158 = (uint64_t)v237;
          _ConditionalContent<>.init(storage:)();
          uint64_t v159 = swift_getWitnessTable();
          uint64_t v160 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v304 = v159;
          uint64_t v305 = v160;
          uint64_t v161 = swift_getWitnessTable();
          unint64_t v162 = sub_10017457C();
          uint64_t v302 = v161;
          unint64_t v303 = v162;
          uint64_t v163 = swift_getWitnessTable();
          uint64_t v164 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          uint64_t v165 = v122;
          uint64_t v166 = (uint64_t)v255;
          sub_100150C4C(v158, v165, v258);
          sub_1000FF2E0(v158, &qword_1015CFDC0);
          uint64_t v300 = v163;
          uint64_t v301 = v164;
          uint64_t v167 = swift_getWitnessTable();
          unint64_t v168 = sub_1001746F8();
          uint64_t v137 = (uint64_t)v260;
          sub_100150B54(v166, v123);
          (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v166, v123);
          uint64_t v298 = v167;
          unint64_t v299 = v168;
          goto LABEL_21;
        case 2:
          unint64_t v169 = *v263;
          long long KeyPath = (unint64_t)swift_getKeyPath();
          LOBYTE(v350) = 0;
          strcpy((char *)v351, "phone.fill");
          BYTE3(v351[1]) = 0;
          HIDWORD(v351[1]) = -369098752;
          unsigned long long v352 = 0uLL;
          unint64_t v353 = v169;
          sub_1001744D4();
          uint64_t v170 = (uint64_t)v257;
          View.accessibility(identifier:)();
          swift_release();
          sub_1000FF27C(v170, v234, &qword_1015CFDC8);
          swift_storeEnumTagMultiPayload();
          sub_100174428();
          uint64_t v171 = (uint64_t)v237;
          _ConditionalContent<>.init(storage:)();
          sub_1000FF27C(v171, (uint64_t)v236, &qword_1015CFDC0);
          swift_storeEnumTagMultiPayload();
          sub_1000FF33C(&qword_1015CFE58);
          uint64_t v172 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          sub_100174798();
          uint64_t v173 = (uint64_t)v238;
          _ConditionalContent<>.init(storage:)();
          sub_1000FF2E0(v171, &qword_1015CFDC0);
          uint64_t v174 = swift_getWitnessTable();
          uint64_t v175 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v312 = v174;
          uint64_t v313 = v175;
          uint64_t v176 = swift_getWitnessTable();
          unint64_t v177 = sub_10017457C();
          uint64_t v310 = v176;
          unint64_t v311 = v177;
          uint64_t v308 = swift_getWitnessTable();
          uint64_t v309 = v172;
          uint64_t v178 = swift_getWitnessTable();
          unint64_t v179 = sub_1001746F8();
          uint64_t v137 = (uint64_t)v260;
          sub_100150C4C(v173, v123, v259);
          sub_1000FF2E0(v173, &qword_1015CFDB0);
          uint64_t v306 = v178;
          unint64_t v307 = v179;
          goto LABEL_21;
        case 3:
          unint64_t v180 = *v263;
          long long KeyPath = (unint64_t)swift_getKeyPath();
          LOBYTE(v350) = 0;
          v351[0] = 0x697261666173;
          v351[1] = 0xE600000000000000;
          unsigned long long v352 = 0uLL;
          unint64_t v353 = v180;
          sub_1001744D4();
          uint64_t v181 = (uint64_t)v257;
          View.accessibility(identifier:)();
          swift_release();
          sub_1000FF27C(v181, v234, &qword_1015CFDC8);
          swift_storeEnumTagMultiPayload();
          sub_100174428();
          uint64_t v182 = (uint64_t)v237;
          _ConditionalContent<>.init(storage:)();
          sub_1000FF27C(v182, (uint64_t)v236, &qword_1015CFDC0);
          swift_storeEnumTagMultiPayload();
          sub_1000FF33C(&qword_1015CFE58);
          uint64_t v183 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          sub_100174798();
          uint64_t v184 = (uint64_t)v238;
          _ConditionalContent<>.init(storage:)();
          sub_1000FF2E0(v182, &qword_1015CFDC0);
          uint64_t v185 = swift_getWitnessTable();
          uint64_t v186 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v320 = v185;
          uint64_t v321 = v186;
          uint64_t v187 = swift_getWitnessTable();
          unint64_t v188 = sub_10017457C();
          uint64_t v318 = v187;
          unint64_t v319 = v188;
          uint64_t v316 = swift_getWitnessTable();
          uint64_t v317 = v183;
          uint64_t v189 = swift_getWitnessTable();
          unint64_t v190 = sub_1001746F8();
          uint64_t v137 = (uint64_t)v260;
          sub_100150C4C(v184, v123, v259);
          sub_1000FF2E0(v184, &qword_1015CFDB0);
          uint64_t v314 = v189;
          unint64_t v315 = v190;
          goto LABEL_21;
        case 4:
          uint64_t v338 = swift_getKeyPath();
          uint64_t v339 = 0;
          __int16 v340 = 0;
          sub_100174814();
          sub_100174868();
          swift_retain();
          _ConditionalContent<>.init(storage:)();
          char v205 = v350;
          char v206 = BYTE1(v350);
          long long v207 = v236;
          *uint64_t v236 = KeyPath;
          *((unsigned char *)v207 + 16) = v205;
          *((unsigned char *)v207 + 17) = v206;
          swift_storeEnumTagMultiPayload();
          sub_1000FF33C(&qword_1015CFE58);
          uint64_t v208 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          sub_100174798();
          uint64_t v209 = (uint64_t)v238;
          _ConditionalContent<>.init(storage:)();
          uint64_t v210 = swift_getWitnessTable();
          uint64_t v211 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v328 = v210;
          uint64_t v329 = v211;
          uint64_t v212 = swift_getWitnessTable();
          unint64_t v213 = sub_10017457C();
          uint64_t v326 = v212;
          unint64_t v327 = v213;
          uint64_t v324 = swift_getWitnessTable();
          uint64_t v325 = v208;
          uint64_t v214 = swift_getWitnessTable();
          unint64_t v215 = sub_1001746F8();
          uint64_t v216 = (uint64_t)v260;
          sub_100150C4C(v209, v123, v259);
          sub_1000FF2E0(v209, &qword_1015CFDB0);
          uint64_t v322 = v214;
          unint64_t v323 = v215;
          uint64_t v217 = v267;
          swift_getWitnessTable();
          sub_1001748BC();
          uint64_t v76 = v264;
          sub_100150B54(v216, v217);
          (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v216, v217);
          goto LABEL_12;
        case 5:
          uint64_t v339 = 0;
          uint64_t v338 = 0;
          __int16 v340 = 256;
          sub_100174814();
          sub_100174868();
          _ConditionalContent<>.init(storage:)();
          char v218 = v350;
          char v219 = BYTE1(v350);
          long long v220 = v236;
          *uint64_t v236 = KeyPath;
          *((unsigned char *)v220 + 16) = v218;
          *((unsigned char *)v220 + 17) = v219;
          swift_storeEnumTagMultiPayload();
          sub_1000FF33C(&qword_1015CFE58);
          uint64_t v221 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          sub_100174798();
          uint64_t v222 = (uint64_t)v238;
          _ConditionalContent<>.init(storage:)();
          uint64_t v223 = swift_getWitnessTable();
          uint64_t v224 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v336 = v223;
          uint64_t v337 = v224;
          uint64_t v225 = swift_getWitnessTable();
          unint64_t v226 = sub_10017457C();
          uint64_t v334 = v225;
          unint64_t v335 = v226;
          uint64_t v332 = swift_getWitnessTable();
          uint64_t v333 = v221;
          uint64_t v227 = swift_getWitnessTable();
          unint64_t v228 = sub_1001746F8();
          uint64_t v229 = (uint64_t)v260;
          sub_100150C4C(v222, v123, v259);
          sub_1000FF2E0(v222, &qword_1015CFDB0);
          uint64_t v330 = v227;
          unint64_t v331 = v228;
          uint64_t v230 = v267;
          swift_getWitnessTable();
          sub_1001748BC();
          uint64_t v76 = v264;
          sub_100150B54(v229, v230);
          (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v229, v230);
          goto LABEL_23;
        default:
          unint64_t v124 = *v263;
          long long KeyPath = (unint64_t)swift_getKeyPath();
          LOBYTE(v350) = 0;
          strcpy((char *)v351, "buildings.3d");
          BYTE5(v351[1]) = 0;
          HIWORD(v351[1]) = -5120;
          unsigned long long v352 = 0uLL;
          unint64_t v353 = v124;
          sub_1001744D4();
          uint64_t v125 = (uint64_t)v257;
          View.accessibility(identifier:)();
          swift_release();
          sub_1000FF27C(v125, v234, &qword_1015CFDC8);
          swift_storeEnumTagMultiPayload();
          sub_100174428();
          uint64_t v126 = (uint64_t)v237;
          _ConditionalContent<>.init(storage:)();
          uint64_t v127 = swift_getWitnessTable();
          uint64_t v128 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
          uint64_t v296 = v127;
          uint64_t v297 = v128;
          uint64_t v129 = swift_getWitnessTable();
          unint64_t v130 = sub_10017457C();
          uint64_t v294 = v129;
          unint64_t v295 = v130;
          uint64_t v131 = swift_getWitnessTable();
          uint64_t v132 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
          uint64_t v133 = v122;
          uint64_t v134 = (uint64_t)v255;
          sub_100150C4C(v126, v133, v258);
          sub_1000FF2E0(v126, &qword_1015CFDC0);
          uint64_t v292 = v131;
          uint64_t v293 = v132;
          uint64_t v135 = swift_getWitnessTable();
          unint64_t v136 = sub_1001746F8();
          uint64_t v137 = (uint64_t)v260;
          sub_100150B54(v134, v123);
          (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v134, v123);
          uint64_t v290 = v135;
          unint64_t v291 = v136;
LABEL_21:
          uint64_t v191 = v267;
          swift_getWitnessTable();
          sub_1001748BC();
          uint64_t v76 = v264;
          sub_100150B54(v137, v191);
          (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v137, v191);
          uint64_t v106 = (uint64_t)v257;
          uint64_t v107 = &qword_1015CFDC8;
          break;
      }
LABEL_22:
      sub_1000FF2E0(v106, v107);
      break;
    default:
      if (*(unsigned char *)(v52 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8)) {
        double v53 = 0.0;
      }
      else {
        double v53 = *(double *)(v52 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
      }
      uint64_t v54 = (char *)v263 + *(int *)(v243 + 36);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      unint64_t v231 = *v263;
      v55(v35, v54, v21);
      swift_retain_n();
      sub_1001526F8((uint64_t)v35, v21, (uint64_t)v39, v53);
      uint64_t v56 = v273;
      uint64_t v57 = swift_getWitnessTable();
      View.accessibility(identifier:)();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v56);
      uint64_t v58 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
      uint64_t v280 = v57;
      uint64_t v281 = v58;
      uint64_t v59 = v270;
      uint64_t v60 = swift_getWitnessTable();
      sub_100254BFC(v45, v59, v60);
      uint64_t v61 = v262 + 8;
      uint64_t v62 = *(unint64_t **)(v262 + 8);
      ((void (*)(char *, uint64_t))v62)(v45, v59);
      uint64_t v262 = v61;
      uint64_t v263 = v62;
      sub_100254BFC(v48, v59, v60);
      unint64_t v63 = sub_10017457C();
      uint64_t v64 = (uint64_t)v249;
      sub_100150B54((uint64_t)v42, v59);
      ((void (*)(char *, uint64_t))v62)(v42, v59);
      uint64_t v278 = v60;
      unint64_t v279 = v63;
      uint64_t v65 = v272;
      uint64_t v66 = swift_getWitnessTable();
      uint64_t v67 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
      uint64_t v68 = (uint64_t)v255;
      sub_100150B54(v64, v65);
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v64, v65);
      uint64_t v276 = v66;
      uint64_t v277 = v67;
      uint64_t v69 = v271;
      uint64_t v70 = swift_getWitnessTable();
      unint64_t v71 = sub_1001746F8();
      uint64_t v72 = (uint64_t)v260;
      sub_100150B54(v68, v69);
      (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v68, v69);
      uint64_t v274 = v70;
      unint64_t v275 = v71;
      uint64_t v73 = v267;
      swift_getWitnessTable();
      sub_1001748BC();
      uint64_t v74 = v264;
      sub_100150B54(v72, v73);
      sub_10012E4B0(v231);
      (*(void (**)(uint64_t, uint64_t))(v261 + 8))(v72, v73);
      uint64_t v75 = v48;
      uint64_t v76 = v74;
      ((void (*)(char *, uint64_t))v263)(v75, v59);
      break;
  }
LABEL_23:
  uint64_t v192 = swift_getWitnessTable();
  uint64_t v193 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v362 = v192;
  uint64_t v363 = v193;
  uint64_t v194 = swift_getWitnessTable();
  unint64_t v195 = sub_10017457C();
  uint64_t v360 = v194;
  unint64_t v361 = v195;
  uint64_t v196 = swift_getWitnessTable();
  uint64_t v197 = sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
  uint64_t v358 = v196;
  uint64_t v359 = v197;
  uint64_t v198 = swift_getWitnessTable();
  unint64_t v199 = sub_1001746F8();
  uint64_t v356 = v198;
  unint64_t v357 = v199;
  uint64_t v200 = swift_getWitnessTable();
  unint64_t v201 = sub_1001748BC();
  uint64_t v354 = v200;
  unint64_t v355 = v201;
  uint64_t v202 = v266;
  uint64_t v203 = swift_getWitnessTable();
  sub_100254BFC(v76, v202, v203);
  return (*(uint64_t (**)(char *, uint64_t))(v265 + 8))(v76, v202);
}

uint64_t sub_10016C960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v57 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v49 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v48 = (char *)&v47 - v9;
  sub_10010118C(&qword_1015D0F30);
  sub_10010118C(&qword_1015D0F38);
  uint64_t v47 = a1;
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v54 = v5;
  uint64_t v60 = v10;
  _s12ContactBadgeVMa();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for ZStack();
  uint64_t v52 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - v12;
  uint64_t v59 = v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v47 - v19;
  uint64_t v56 = v6;
  uint64_t v21 = type metadata accessor for _ConditionalContent();
  uint64_t v55 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v58 = (char *)&v47 - v22;
  uint64_t v23 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = v75;
  if (v75)
  {
    uint64_t v25 = static Alignment.bottomTrailing.getter();
    __chkstk_darwin(v25);
    uint64_t v26 = v54;
    uint64_t v54 = v21;
    uint64_t v27 = v60;
    *(&v47 - 4) = v26;
    *(&v47 - 3) = v27;
    *(&v47 - 2) = v24;
    *(&v47 - 1) = v23;
    ZStack.init(alignment:content:)();
    uint64_t v28 = v59;
    uint64_t v29 = swift_getWitnessTable();
    View.accessibility(identifier:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v28);
    uint64_t v30 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t v63 = v29;
    uint64_t v64 = v30;
    uint64_t v31 = swift_getWitnessTable();
    sub_100254BFC(v17, v15, v31);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v53 + 8);
    v32(v17, v15);
    sub_100254BFC(v20, v15, v31);
    uint64_t v61 = v27;
    uint64_t v62 = v30;
    uint64_t v21 = v54;
    swift_getWitnessTable();
    sub_100150B54((uint64_t)v17, v15);
    swift_release();
    v32(v17, v15);
    v32(v20, v15);
  }
  else
  {
    uint64_t v33 = (uint64_t)v49;
    uint64_t v34 = v60;
    View.accessibility(identifier:)();
    uint64_t v35 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t v73 = v34;
    uint64_t v74 = v35;
    uint64_t v36 = v56;
    uint64_t v37 = swift_getWitnessTable();
    uint64_t v38 = v48;
    sub_100254BFC(v33, v36, v37);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v39(v33, v36);
    sub_100254BFC(v38, v36, v37);
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v72 = v35;
    swift_getWitnessTable();
    sub_100150C4C(v33, v15, v36);
    v39(v33, v36);
    v39((uint64_t)v38, v36);
  }
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v69 = v40;
  uint64_t v70 = v41;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v67 = v60;
  uint64_t v68 = v41;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v65 = v42;
  uint64_t v66 = v43;
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v58;
  sub_100254BFC(v58, v21, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v45, v21);
}

uint64_t sub_10016D1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v124 = a4;
  uint64_t v122 = a1;
  uint64_t v128 = a5;
  uint64_t v105 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  unint64_t v104 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s12ContactBadgeVMa();
  uint64_t v109 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v106 = (uint64_t *)((char *)&v103 - v9);
  uint64_t v135 = v10;
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v110 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v108 = (char *)&v103 - v12;
  uint64_t v134 = v13;
  uint64_t v14 = type metadata accessor for ModifiedContent();
  uint64_t v113 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v112 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v111 = (char *)&v103 - v17;
  uint64_t v114 = sub_10010118C(&qword_1015D0F38);
  uint64_t v132 = v14;
  uint64_t v136 = type metadata accessor for _ConditionalContent();
  uint64_t v133 = type metadata accessor for Optional();
  uint64_t v126 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v127 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v131 = (char *)&v103 - v20;
  uint64_t v120 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v120);
  uint64_t v123 = (uint64_t)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v119);
  uint64_t v121 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Image.ResizingMode();
  uint64_t v115 = *(void *)(v23 - 8);
  uint64_t v116 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015D0F40);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v103 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v103 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1000FF33C(&qword_1015D0F48);
  __chkstk_darwin(v117);
  uint64_t v36 = (char *)&v103 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1000FF33C(&qword_1015D0F30);
  __chkstk_darwin(v129);
  uint64_t v125 = (uint64_t)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v118 = (uint64_t)&v103 - v39;
  __chkstk_darwin(v40);
  uint64_t v130 = (uint64_t)&v103 - v41;
  uint64_t v107 = a3;
  uint64_t v103 = _s9ImageViewVMa();
  uint64_t v124 = a2;
  sub_100173DDC(*(void *)(a2 + 8) + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v31, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v42 = swift_projectBox();
    uint64_t v43 = *(int *)(v26 + 96);
    uint64_t v44 = &v28[v43];
    uint64_t v45 = v42 + v43;
    uint64_t v46 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v47 = *(void *)(v46 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v34, v44, v46);
  }
  else
  {
    swift_retain();
    sub_100174240((uint64_t)v31, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    uint64_t v48 = enum case for Image.TemplateRenderingMode.original(_:);
    uint64_t v46 = type metadata accessor for Image.TemplateRenderingMode();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v34, v48, v46);
  }
  swift_release();
  type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v34, 0, 1, v46);
  Image.renderingMode(_:)();
  sub_1000FF2E0((uint64_t)v34, &qword_1015D0A90);
  uint64_t v50 = v115;
  uint64_t v49 = v116;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v25, enum case for Image.ResizingMode.stretch(_:), v116);
  uint64_t v122 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v49);
  id v51 = [self tertiaryLabelColor];
  uint64_t v52 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v54 = v124;
  swift_retain();
  uint64_t v55 = sub_1001A3F04();
  swift_release();
  char v56 = static Edge.Set.all.getter();
  uint64_t v57 = *(void *)(v54 + 16);
  uint64_t v58 = v121;
  uint64_t v59 = &v121[*(int *)(v119 + 20)];
  uint64_t v60 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v61 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 104))(v59, v60, v61);
  *uint64_t v58 = v57;
  v58[1] = v57;
  uint64_t v62 = v123;
  sub_100173DDC((uint64_t)v58, v123, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v62 + *(int *)(v120 + 36)) = 256;
  sub_1000FF27C(v62, (uint64_t)&v36[*(int *)(v117 + 36)], &qword_1015CFF60);
  *(void *)uint64_t v36 = v122;
  *((void *)v36 + 1) = 0;
  *((_WORD *)v36 + 8) = 257;
  *((void *)v36 + 3) = KeyPath;
  *((void *)v36 + 4) = v52;
  *((void *)v36 + 5) = v55;
  v36[48] = v56;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v63 = v54;
  sub_1000FF2E0(v62, &qword_1015CFF60);
  sub_100174240((uint64_t)v58, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v64 = v118;
  sub_1000FF27C((uint64_t)v36, v118, &qword_1015D0F48);
  *(unsigned char *)(v64 + *(int *)(v129 + 36)) = 1;
  sub_1000FF2E0((uint64_t)v36, &qword_1015D0F48);
  sub_100101750(v64, v130, &qword_1015D0F30);
  swift_retain();
  LOBYTE(v64) = sub_1001A3B0C();
  swift_release();
  if (v64)
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v143 = v164[8];
    LOBYTE(v144) = v165;
    uint64_t v145 = v166;
    char v146 = v167;
    __asm { FMOV            V1.2D, #4.0 }
    long long v147 = v168;
    long long v148 = _Q1;
    uint64_t v70 = sub_100183248(&qword_1015D0F50, &qword_1015D0F38, (void (*)(void))sub_1001832C4);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v142 = &protocol witness table for _FrameLayout;
    uint64_t v139 = swift_getWitnessTable();
    uint64_t v140 = &protocol witness table for _OffsetEffect;
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v72 = v127;
    sub_100150B54((uint64_t)&v143, v114);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v72, 0, 1, v136);
    uint64_t v137 = v70;
    uint64_t v138 = v71;
  }
  else
  {
    swift_retain();
    uint64_t v73 = sub_1001A3D04();
    swift_release();
    uint64_t v74 = v135;
    uint64_t v75 = v132;
    if (v73)
    {
      uint64_t v76 = v104;
      uint64_t v77 = v105;
      uint64_t v78 = v107;
      (*(void (**)(char *, uint64_t, uint64_t))(v105 + 16))(v104, v63 + *(int *)(v103 + 40), v107);
      uint64_t v79 = v106;
      *uint64_t v106 = v73;
      (*(void (**)(char *, char *, uint64_t))(v77 + 32))((char *)v79 + *(int *)(v74 + 36), v76, v78);
      swift_retain();
      static Alignment.center.getter();
      uint64_t v80 = swift_getWitnessTable();
      uint64_t v81 = v74;
      uint64_t v82 = v108;
      View.frame(width:height:alignment:)();
      (*(void (**)(uint64_t *, uint64_t))(v109 + 8))(v79, v81);
      uint64_t v153 = v80;
      uint64_t v154 = &protocol witness table for _FrameLayout;
      uint64_t v83 = v134;
      uint64_t v84 = swift_getWitnessTable();
      uint64_t v85 = (uint64_t)v112;
      View.offset(x:y:)();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v82, v83);
      uint64_t v151 = v84;
      uint64_t v152 = &protocol witness table for _OffsetEffect;
      uint64_t v86 = swift_getWitnessTable();
      Swift::String v87 = v111;
      sub_100254BFC(v85, v75, v86);
      unsigned long long v88 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
      v88(v85, v75);
      sub_100254BFC(v87, v75, v86);
      uint64_t v89 = sub_100183248(&qword_1015D0F50, &qword_1015D0F38, (void (*)(void))sub_1001832C4);
      uint64_t v72 = v127;
      sub_100150C4C(v85, v114, v75);
      swift_release();
      v88(v85, v75);
      v88((uint64_t)v87, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v72, 0, 1, v136);
      uint64_t v149 = v89;
      uint64_t v150 = v86;
    }
    else
    {
      uint64_t v72 = v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v127, 1, 1, v136);
      uint64_t v90 = sub_100183248(&qword_1015D0F50, &qword_1015D0F38, (void (*)(void))sub_1001832C4);
      v164[6] = swift_getWitnessTable();
      v164[7] = &protocol witness table for _FrameLayout;
      v164[4] = swift_getWitnessTable();
      v164[5] = &protocol witness table for _OffsetEffect;
      uint64_t v91 = swift_getWitnessTable();
      v164[2] = v90;
      v164[3] = v91;
    }
  }
  swift_getWitnessTable();
  uint64_t v92 = v126;
  uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v126 + 16);
  uint64_t v94 = v131;
  uint64_t v95 = v133;
  v93(v131, v72, v133);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v92 + 8);
  v96(v72, v95);
  uint64_t v97 = v130;
  uint64_t v98 = v125;
  sub_1000FF27C(v130, v125, &qword_1015D0F30);
  uint64_t v143 = v98;
  uint64_t v99 = v133;
  v93(v72, v94, v133);
  uint64_t v144 = v72;
  v164[0] = v129;
  v164[1] = v99;
  unint64_t v162 = sub_100183348();
  uint64_t v100 = sub_100183248(&qword_1015D0F50, &qword_1015D0F38, (void (*)(void))sub_1001832C4);
  uint64_t v160 = swift_getWitnessTable();
  uint64_t v161 = &protocol witness table for _FrameLayout;
  uint64_t v158 = swift_getWitnessTable();
  uint64_t v159 = &protocol witness table for _OffsetEffect;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v156 = v100;
  uint64_t v157 = v101;
  uint64_t v155 = swift_getWitnessTable();
  uint64_t v163 = swift_getWitnessTable();
  sub_100150D44((uint64_t)&v143, 2uLL, (uint64_t)v164);
  v96(v131, v99);
  sub_1000FF2E0(v97, &qword_1015D0F30);
  v96(v72, v99);
  return sub_1000FF2E0(v98, &qword_1015D0F30);
}

uint64_t sub_10016E310@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D8DB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = self;
  id v6 = [v5 _maps_systemGrayColor];
  uint64_t v7 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  id v9 = [v5 systemBackgroundColor];
  uint64_t v31 = Color.init(uiColor:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v10 = v32;
  uint64_t v11 = v34;
  uint64_t v12 = v35;
  uint64_t v13 = v36;
  uint64_t v14 = static Alignment.center.getter();
  uint64_t v29 = v15;
  uint64_t v30 = v14;
  uint64_t v16 = static Alignment.center.getter();
  uint64_t v28 = v17;
  uint64_t v18 = Image.init(systemName:)();
  uint64_t v19 = static Color.white.getter();
  uint64_t v20 = swift_getKeyPath();
  static Font.Weight.semibold.getter();
  uint64_t v21 = type metadata accessor for Font.Design();
  uint64_t v22 = v33;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  uint64_t v23 = static Font.system(size:weight:design:)();
  sub_1000FF2E0((uint64_t)v4, &qword_1015D8DB0);
  uint64_t v24 = swift_getKeyPath();
  *(_DWORD *)(a1 + 66) = v37;
  *(_WORD *)(a1 + 70) = v38;
  *(void *)a1 = KeyPath;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v31;
  *(_WORD *)(a1 + 64) = 256;
  uint64_t v25 = v29;
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v25;
  uint64_t v26 = v28;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v26;
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v20;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v24;
  *(void *)(a1 + 136) = v23;
  *(_OWORD *)(a1 + 144) = xmmword_100F5FC30;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

double sub_10016E5A0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  uint64_t v4 = v3;
  sub_10016E310((uint64_t)v11);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  long long v5 = v11[7];
  *(_OWORD *)(a1 + 112) = v11[6];
  *(_OWORD *)(a1 + 128) = v5;
  long long v6 = v11[9];
  *(_OWORD *)(a1 + 144) = v11[8];
  *(_OWORD *)(a1 + 160) = v6;
  long long v7 = v11[3];
  *(_OWORD *)(a1 + 48) = v11[2];
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = v11[5];
  *(_OWORD *)(a1 + 80) = v11[4];
  *(_OWORD *)(a1 + 96) = v8;
  double result = *(double *)v11;
  long long v10 = v11[1];
  *(_OWORD *)(a1 + 16) = v11[0];
  *(_OWORD *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_10016E610(uint64_t a1)
{
  sub_10010118C(&qword_1015D12F0);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  _s9ImageViewVMa();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for ZStack();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v15[-v10];
  static Alignment.center.getter();
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t v18 = v1;
  ZStack.init(alignment:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_100254BFC(v8, v5, WitnessTable);
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  sub_100254BFC(v11, v5, WitnessTable);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_10016E810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s9ImageViewVMa();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v37 = (char *)&v28 - v13;
  uint64_t v14 = self;
  id v15 = [v14 _maps_systemGrayColor];
  uint64_t v36 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  id v16 = [v14 systemBackgroundColor];
  uint64_t v34 = Color.init(uiColor:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v17 = v48[2];
  uint64_t v18 = v48[4];
  uint64_t v19 = v48[5];
  uint64_t v20 = v48[6];
  uint64_t v33 = static Alignment.center.getter();
  uint64_t v32 = v21;
  uint64_t v31 = static Alignment.center.getter();
  uint64_t v30 = v22;
  uint64_t v23 = _s12ContactBadgeVMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v23 + 36), a2);
  swift_retain();
  sub_1001526F8((uint64_t)v7, a2, (uint64_t)v11, 0.0);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v24 = v48[3];
  uint64_t v25 = v37;
  sub_100254BFC(v11, v8, WitnessTable);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v11, v8);
  v42[0] = KeyPath;
  v42[1] = v36;
  v42[2] = v17;
  v42[3] = v24;
  v42[4] = v18;
  v42[5] = v19;
  v42[6] = v20;
  v42[7] = v34;
  __int16 v43 = 256;
  uint64_t v44 = v33;
  uint64_t v45 = v32;
  uint64_t v46 = v31;
  uint64_t v47 = v30;
  v48[0] = v42;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v25, v8);
  v48[1] = v11;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v41[0] = sub_1000FF33C(&qword_1015D12F0);
  v41[1] = v8;
  unint64_t v39 = sub_100185F74();
  uint64_t v40 = WitnessTable;
  sub_100150D44((uint64_t)v48, 2uLL, (uint64_t)v41);
  v26(v25, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v26(v11, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_10016EC94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D1330);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = static VerticalAlignment.lastTextBaseline.getter();
  *(void *)(a1 + 8) = 0xC014000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v9[1])
  {
    sub_1000FF33C(&qword_1015D1348);
    type metadata accessor for UUID();
    sub_1000FF33C(&qword_1015D1350);
    sub_1001010F8(&qword_1015D1358, &qword_1015D1348);
    sub_10018601C(&qword_1015D1360, &qword_1015D1350, &qword_1015D1368, &qword_1015D1370);
    sub_1001732B8(&qword_1015D1378, (void (*)(uint64_t))type metadata accessor for PlaceSummaryImageViewModel);
    ForEach<>.init(_:content:)();
    uint64_t v5 = sub_1000FF33C(&qword_1015D1338);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  }
  else
  {
    uint64_t v6 = sub_1000FF33C(&qword_1015D1338);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  }
  uint64_t v7 = sub_1000FF33C(&qword_1015D1340);
  return sub_100101750((uint64_t)v4, a1 + *(int *)(v7 + 44), &qword_1015D1330);
}

double sub_10016EF20@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for PlaceSummaryImageViewModel(0);
  sub_1001732B8(&qword_1015CFE80, (void (*)(uint64_t))type metadata accessor for PlaceSummaryImageViewModel);
  swift_retain();
  uint64_t v2 = ObservedObject.init(wrappedValue:)();
  uint64_t v4 = v3;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(a1 + 56) = v10;
  return result;
}

uint64_t sub_10016F004@<X0>(uint64_t a1@<X8>)
{
  return sub_10016EC94(a1);
}

double sub_10016F00C@<D0>(uint64_t a1@<X8>)
{
  v12[0] = *(_OWORD *)v1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100183620((uint64_t)v12);
  unint64_t v3 = *(void *)(v1 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100183654((uint64_t)v12);
  swift_bridgeObjectRetain();
  sub_10012E3D8(v3);
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100183620((uint64_t)v12);
  swift_getKeyPath();
  *(unsigned char *)(swift_allocObject() + 16) = (v5 & 1) == 0;
  sub_1000FF33C(&qword_1015D0FB8);
  sub_100183690();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v5;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 64) = v9;
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  return result;
}

uint64_t sub_10016F294(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  sub_10012EB20();
  long long v5 = (void (*)(uint64_t *))sub_1001278D4(v2, v3, v4);
  sub_100127C4C();
  sub_100182F3C((void *)(a1 + 56), &v8);
  sub_100182F3C(&v8, &v7);
  v5(&v7);
  return swift_release();
}

uint64_t sub_10016F33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (_OWORD *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1000FF33C(&qword_1015D0E90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = static Alignment.center.getter();
  v10[1] = v11;
  uint64_t v12 = sub_1000FF33C(&qword_1015D0E98);
  sub_10016F508(a1, (uint64_t *)((char *)v10 + *(int *)(v12 + 44)));
  uint64_t v13 = (char *)v7 + *(int *)(v5 + 28);
  uint64_t v14 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v15 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  __asm { FMOV            V0.2D, #6.0 }
  *uint64_t v7 = _Q0;
  uint64_t v21 = a2 + *(int *)(sub_1000FF33C(&qword_1015D0E78) + 36);
  sub_100173DDC((uint64_t)v7, v21, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v21 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C((uint64_t)v10, a2, &qword_1015D0E90);
  sub_100174240((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_1000FF2E0((uint64_t)v10, &qword_1015D0E90);
}

uint64_t sub_10016F508@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D0EA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - v8;
  id v10 = [self tertiarySystemFillColor];
  uint64_t v11 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0x4014000000000000;
  v9[16] = 0;
  uint64_t v13 = sub_1000FF33C(&qword_1015D0EA8);
  sub_10016F684(a1, (uint64_t)&v9[*(int *)(v13 + 44)]);
  sub_1000FF27C((uint64_t)v9, (uint64_t)v6, &qword_1015D0EA0);
  *a2 = KeyPath;
  a2[1] = v11;
  uint64_t v14 = sub_1000FF33C(&qword_1015D0EB0);
  sub_1000FF27C((uint64_t)v6, (uint64_t)a2 + *(int *)(v14 + 48), &qword_1015D0EA0);
  swift_retain();
  swift_retain();
  sub_1000FF2E0((uint64_t)v9, &qword_1015D0EA0);
  sub_1000FF2E0((uint64_t)v6, &qword_1015D0EA0);
  swift_release();
  return swift_release();
}

uint64_t sub_10016F684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v90 = sub_1000FF33C(&qword_1015D0EB8);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  Swift::String v87 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000FF33C(&qword_1015D0EC0);
  __chkstk_darwin(v86);
  uint64_t v92 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_1000FF33C(&qword_1015D0EC8);
  __chkstk_darwin(v88);
  uint64_t v93 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_1000FF33C(&qword_1015D0ED0);
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v91 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D0ED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v101 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v80 - v10;
  uint64_t v103 = type metadata accessor for DynamicTypeSize();
  uint64_t v105 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v13 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000FF33C(&qword_1015D0EE0);
  uint64_t v14 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000FF33C(&qword_1015D0EE8);
  __chkstk_darwin(v94);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1000FF33C(&qword_1015D0EF0);
  __chkstk_darwin(v95);
  uint64_t v97 = (uint64_t)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v80 - v21;
  __chkstk_darwin(v23);
  uint64_t v104 = (uint64_t)&v80 - v24;
  swift_bridgeObjectRetain();
  uint64_t v25 = Image.init(_internalSystemName:)();
  uint64_t v26 = *(void *)(a1 + 48);
  uint64_t v81 = *(void *)(a1 + 40);
  uint64_t v99 = v11;
  if (v26) {
    static Font.headline.getter();
  }
  else {
    static Font.title3.getter();
  }
  static Font.Weight.semibold.getter();
  uint64_t v27 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = static Color.blue.getter();
  *(void *)&long long v109 = v25;
  *((void *)&v109 + 1) = KeyPath;
  *(void *)&long long v110 = v27;
  *((void *)&v110 + 1) = v29;
  uint64_t v30 = v105;
  uint64_t v31 = *(void (**)(void))(v105 + 104);
  unsigned int v84 = enum case for DynamicTypeSize.medium(_:);
  uint64_t v32 = v103;
  uint64_t v85 = v105 + 104;
  uint64_t v83 = (void (*)(char *, void, uint64_t))v31;
  v31(v13);
  sub_1000FF33C(&qword_1015D0EF8);
  sub_10018314C();
  View.dynamicTypeSize(_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v33 = v30 + 8;
  uint64_t v82 = v34;
  v34(v13, v32);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v35 = v96;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v16, v96);
  uint64_t v36 = &v18[*(int *)(v94 + 36)];
  long long v37 = v107;
  *(_OWORD *)uint64_t v36 = v106;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v108;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v35);
  sub_1000FF27C((uint64_t)v18, (uint64_t)v22, &qword_1015D0EE8);
  uint64_t v38 = &v22[*(int *)(v95 + 36)];
  *(void *)uint64_t v38 = 0;
  uint64_t v39 = 1;
  *((_WORD *)v38 + 4) = 1;
  sub_1000FF2E0((uint64_t)v18, &qword_1015D0EE8);
  sub_100101750((uint64_t)v22, v104, &qword_1015D0EF0);
  if (v26)
  {
    *(void *)&long long v109 = v81;
    *((void *)&v109 + 1) = v26;
    sub_100180324();
    swift_bridgeObjectRetain();
    uint64_t v40 = Text.init<A>(_:)();
    uint64_t v42 = v41;
    uint64_t v105 = v33;
    char v44 = v43 & 1;
    static Font.caption2.getter();
    static Font.Weight.semibold.getter();
    Font.weight(_:)();
    swift_release();
    uint64_t v45 = Text.font(_:)();
    uint64_t v47 = v46;
    char v49 = v48;
    uint64_t v51 = v50;
    swift_release();
    sub_10017F958(v40, v42, v44);
    swift_bridgeObjectRelease();
    *(void *)&long long v109 = v45;
    *((void *)&v109 + 1) = v47;
    LOBYTE(v110) = v49 & 1;
    *((void *)&v110 + 1) = v51;
    uint64_t v52 = v103;
    v83(v13, v84, v103);
    uint64_t v53 = v87;
    View.dynamicTypeSize(_:)();
    v82(v13, v52);
    sub_10017F958(v109, *((uint64_t *)&v109 + 1), v110);
    swift_bridgeObjectRelease();
    uint64_t v54 = static Color.blue.getter();
    uint64_t v55 = v89;
    uint64_t v56 = (uint64_t)v92;
    uint64_t v57 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v92, v53, v90);
    *(void *)(v56 + *(int *)(v86 + 36)) = v54;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v57);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v58 = v93;
    sub_1000FF27C(v56, v93, &qword_1015D0EC0);
    uint64_t v59 = (_OWORD *)(v58 + *(int *)(v88 + 36));
    long long v60 = v110;
    *uint64_t v59 = v109;
    v59[1] = v60;
    v59[2] = v111;
    sub_1000FF2E0(v56, &qword_1015D0EC0);
    LOBYTE(v54) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v69 = v91;
    sub_1000FF27C(v58, v91, &qword_1015D0EC8);
    uint64_t v70 = v100;
    uint64_t v71 = v69 + *(int *)(v100 + 36);
    *(unsigned char *)uint64_t v71 = v54;
    *(void *)(v71 + 8) = v62;
    *(void *)(v71 + 16) = v64;
    *(void *)(v71 + 24) = v66;
    *(void *)(v71 + 32) = v68;
    *(unsigned char *)(v71 + 40) = 0;
    sub_1000FF2E0(v58, &qword_1015D0EC8);
    uint64_t v72 = v69;
    uint64_t v73 = (uint64_t)v99;
    sub_100101750(v72, (uint64_t)v99, &qword_1015D0ED0);
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v70 = v100;
    uint64_t v73 = (uint64_t)v99;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 56))(v73, v39, 1, v70);
  uint64_t v74 = v104;
  uint64_t v75 = v97;
  sub_1000FF27C(v104, v97, &qword_1015D0EF0);
  uint64_t v76 = v101;
  sub_1000FF27C(v73, v101, &qword_1015D0ED8);
  uint64_t v77 = v102;
  sub_1000FF27C(v75, v102, &qword_1015D0EF0);
  uint64_t v78 = sub_1000FF33C(&qword_1015D0F18);
  sub_1000FF27C(v76, v77 + *(int *)(v78 + 48), &qword_1015D0ED8);
  sub_1000FF2E0(v73, &qword_1015D0ED8);
  sub_1000FF2E0(v74, &qword_1015D0EF0);
  sub_1000FF2E0(v76, &qword_1015D0ED8);
  return sub_1000FF2E0(v75, &qword_1015D0EF0);
}

uint64_t sub_1001700B0()
{
  long long v5 = *v0;
  *(_OWORD *)uint64_t v6 = v0[1];
  long long v1 = v0[3];
  *(_OWORD *)&v6[16] = v0[2];
  long long v7 = v1;
  long long v8 = v5;
  char v9 = *((unsigned char *)v0 + 16);
  long long v10 = *(_OWORD *)&v6[8];
  sub_100101750((uint64_t)&v6[24], (uint64_t)v11, &qword_1015D0E70);
  sub_100182F3C((void *)&v7 + 1, &v12);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  v2[1] = v5;
  v2[2] = *(_OWORD *)v6;
  long long v3 = v7;
  v2[3] = *(_OWORD *)&v6[16];
  v2[4] = v3;
  sub_100182FFC((uint64_t)&v8);
  sub_100183030((uint64_t)&v10);
  sub_100183030((uint64_t)v11);
  sub_10018305C(&v12);
  sub_1000FF33C(&qword_1015D0E78);
  sub_100183088();
  return Button.init(action:label:)();
}

uint64_t sub_1001701C8(uint64_t a1, uint64_t a2, char a3)
{
  char v5 = a3 & 1;
  sub_10012EB20();
  uint64_t v6 = (void (*)(unint64_t *))sub_1001278D4(a1, a2, v5);
  sub_100127C4C();
  unint64_t v8 = 0x8000000000000020;
  v6(&v8);

  return swift_release();
}

double sub_100170268@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v7 = v16[1];
  LOBYTE(v3) = v17;
  uint64_t v8 = v18;
  char v9 = v19;
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  uint64_t v12 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  char v14 = static Edge.Set.all.getter();
  char v25 = 1;
  char v22 = 1;
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 17) = *(_DWORD *)v27;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)&v27[3];
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  *(_DWORD *)(a1 + 33) = *(_DWORD *)v26;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)&v26[3];
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = KeyPath;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = v25;
  *(unsigned char *)(a1 + 81) = 0;
  *(_DWORD *)(a1 + 82) = *(_DWORD *)&v23[7];
  *(_WORD *)(a1 + 86) = v24;
  *(unsigned char *)(a1 + 88) = v14;
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v23;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v23[3];
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 128) = v22;
  return result;
}

uint64_t sub_100170494()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  char v3 = *((unsigned char *)v0 + 16);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  *(unsigned char *)(v4 + 32) = v3;
  sub_10012EB20();
  sub_1000FF33C(&qword_1015D0FC8);
  sub_100183248(&qword_1015D0FD0, &qword_1015D0FC8, (void (*)(void))sub_100183788);

  return Button.init(action:label:)();
}

uint64_t sub_100170588@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v26 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  char v3 = (char *)&KeyPath - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D1010);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v28 = (char *)&KeyPath - v9;
  id v10 = [self systemGray5Color];
  uint64_t v27 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v11 = Image.init(systemName:)();
  uint64_t v12 = static Color.blue.getter();
  uint64_t v13 = swift_getKeyPath();
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  uint64_t v14 = Font.weight(_:)();
  swift_release();
  uint64_t v15 = swift_getKeyPath();
  uint64_t v30 = v11;
  uint64_t v31 = v13;
  uint64_t v32 = v12;
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  uint64_t v16 = v26;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DynamicTypeSize.medium(_:), v26);
  sub_1000FF33C((uint64_t *)&unk_1015D0B00);
  sub_1001812E4();
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  char v17 = v28;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v28, v7, v4);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  char v19 = v29;
  uint64_t v20 = v27;
  *uint64_t v29 = KeyPath;
  v19[1] = v20;
  uint64_t v21 = v19;
  uint64_t v22 = sub_1000FF33C(&qword_1015D1018);
  v18((char *)v21 + *(int *)(v22 + 48), v7, v4);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_retain();
  swift_retain();
  v23(v17, v4);
  v23(v7, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_1001708E8@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D1008);
  return sub_100170588((uint64_t *)((char *)a1 + *(int *)(v3 + 44)));
}

uint64_t sub_100170928@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = sub_1000FF33C(&qword_1015CFF60);
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v45);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D0A90);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D0F28);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v46 = (uint64_t)&v41 - v16;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = 1;
  if (v52)
  {
    uint64_t v42 = v4;
    uint64_t v43 = v52;
    swift_getKeyPath();
    uint64_t v44 = a1;
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    int v18 = v51;
    uint64_t v19 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = (unsigned int *)&enum case for Image.TemplateRenderingMode.template(_:);
    if (!v18) {
      uint64_t v21 = (unsigned int *)&enum case for Image.TemplateRenderingMode.original(_:);
    }
    (*(void (**)(char *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v11, *v21, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
    Image.renderingMode(_:)();
    sub_1000FF2E0((uint64_t)v11, &qword_1015D0A90);
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    uint64_t v22 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = self;
    id v24 = [v23 tertiaryLabelColor];
    uint64_t v25 = Color.init(uiColor:)();
    uint64_t KeyPath = swift_getKeyPath();
    id v27 = [v23 systemGray5Color];
    uint64_t v28 = Color.init(uiColor:)();
    LOBYTE(v23) = static Edge.Set.all.getter();
    uint64_t v29 = v42;
    uint64_t v30 = (char *)v42 + *(int *)(v45 + 20);
    uint64_t v31 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v32 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
    __asm { FMOV            V0.2D, #6.0 }
    *uint64_t v29 = _Q0;
    uint64_t v38 = v48;
    sub_100173DDC((uint64_t)v29, v48, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v38 + *(int *)(v47 + 36)) = 256;
    sub_1000FF27C(v38, (uint64_t)&v14[*(int *)(v50 + 36)], &qword_1015CFF60);
    *(void *)uint64_t v14 = v22;
    *((void *)v14 + 1) = KeyPath;
    *((void *)v14 + 2) = v25;
    *((void *)v14 + 3) = v28;
    v14[32] = (char)v23;
    a1 = v44;
    *((void *)v14 + 5) = 0;
    *((_WORD *)v14 + 24) = 1;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000FF2E0(v38, &qword_1015CFF60);
    sub_100174240((uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v39 = v46;
    sub_100101750((uint64_t)v14, v46, &qword_1015D0F28);
    sub_100101750(v39, a1, &qword_1015D0F28);
    uint64_t v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(a1, v17, 1, v50);
}

uint64_t sub_100170F34@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D0F20);
  return sub_100170928((uint64_t)a1 + *(int *)(v3 + 44));
}

uint64_t sub_100170F88@<X0>(uint64_t a1@<X8>)
{
  v24[1] = a1;
  uint64_t v1 = sub_1000FF33C(&qword_1015CFF60);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (_OWORD *)((char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_1000FF33C(&qword_1015CFF68);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v12 = [self systemGray5Color];
  uint64_t v13 = Color.init(uiColor:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v16 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v17 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v8 = _Q0;
  sub_100173DDC((uint64_t)v8, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v4[*(int *)(v2 + 44)] = 256;
  sub_1000FF27C((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_1015CFF60);
  *uint64_t v11 = KeyPath;
  v11[1] = v13;
  swift_retain();
  swift_retain();
  sub_1000FF2E0((uint64_t)v4, &qword_1015CFF60);
  sub_100174240((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  swift_release();
  sub_1001750D8();
  View.accessibility(identifier:)();
  return sub_1000FF2E0((uint64_t)v11, &qword_1015CFF68);
}

uint64_t sub_100171218()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100171234()
{
  id v0 = [self systemGray5Color];
  Color.init(uiColor:)();
  swift_getKeyPath();
  sub_1000FF33C(&qword_1015CFF38);
  sub_100174FE4();
  View.accessibility(identifier:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1001712F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100171314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t result = static Edge.Set.all.getter();
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100171348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_1000FF33C(&qword_1015CFE88);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v13[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001749C8(a1);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  static HorizontalAlignment.center.getter();
  int v16 = 0;
  sub_1001732B8(&qword_1015CFE90, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_1000FF33C(&qword_1015CFE98);
  sub_100174C28();
  LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a3, v10, v7);
  uint64_t v11 = a3 + *(int *)(sub_1000FF33C(&qword_1015CFEB0) + 36);
  *(void *)uint64_t v11 = 0xD00000000000001DLL;
  *(void *)(v11 + 8) = 0x8000000100F78430;
  *(unsigned char *)(v11 + 16) = 9;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100171588()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1001716C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100173DDC(a1, (uint64_t)v6, type metadata accessor for PlaceSummaryViewModelActionButtons.Button);
  *(void *)a2 = swift_getKeyPath();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v7 = _s12ActionButtonVMa(0);
  return sub_100173E44((uint64_t)v6, a2 + *(int *)(v7 + 20), type metadata accessor for PlaceSummaryViewModelActionButtons.Button);
}

uint64_t sub_10017179C@<X0>(uint64_t a1@<X8>)
{
  return sub_100171348(*v1, v1[1], a1);
}

uint64_t sub_1001717A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v19[1] = a1;
  uint64_t v3 = _s12ActionButtonVMa(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = sub_1000FF33C(&qword_1015D1020);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D1028);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100173DDC(v2, (uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s12ActionButtonVMa);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  sub_100173E44((uint64_t)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, _s12ActionButtonVMa);
  v19[4] = v2;
  sub_1000FF33C(&qword_1015D1030);
  sub_100183AB8();
  Button.init(action:label:)();
  uint64_t v16 = sub_1001010F8(&qword_1015D1050, &qword_1015D1020);
  unint64_t v17 = sub_100183B58();
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v19[6] = v6;
  v19[7] = &_s17ActionButtonStyleVN;
  v19[8] = v16;
  v19[9] = v17;
  swift_getOpaqueTypeConformance2();
  View.accessibility(identifier:)();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100171AEC(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  sub_10012EB20();
  uint64_t v5 = (void (*)(uint64_t *, uint64_t *))sub_100127904(v2, v3, v4);
  sub_100127C4C();
  uint64_t v6 = a1 + *(int *)(_s12ActionButtonVMa(0) + 20);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  uint64_t v8 = *(void *)(v6 + *(int *)(v7 + 24));
  uint64_t v10 = *(void *)(v6 + *(int *)(v7 + 28));
  uint64_t v11 = v8;
  v5(&v11, &v10);

  return swift_release();
}

__n128 sub_100171BB4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = static VerticalAlignment.center.getter();
  uint64_t v4 = a1 + *(int *)(_s12ActionButtonVMa(0) + 20);
  uint64_t v5 = (void *)(v4 + *(int *)(type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0) + 20));
  uint64_t v6 = v5[1];
  *(void *)&v31[0] = *v5;
  *((void *)&v31[0] + 1) = v6;
  sub_100180324();
  swift_bridgeObjectRetain();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v12 = Text.font(_:)();
  uint64_t v29 = v13;
  LOBYTE(v4) = v14;
  uint64_t v16 = v15;
  swift_release();
  char v17 = v4 & 1;
  sub_10017F958(v7, v9, v11);
  swift_bridgeObjectRelease();
  LOBYTE(v4) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  char v59 = 1;
  char v57 = v17;
  char v54 = 0;
  char v52 = 0;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v58;
  *(_DWORD *)&v35[3] = *(_DWORD *)&v58[3];
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v56;
  *(_DWORD *)&v39[3] = *(_DWORD *)&v56[3];
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v55;
  *(_DWORD *)&v42[3] = *(_DWORD *)&v55[3];
  *(_DWORD *)uint64_t v48 = *(_DWORD *)v53;
  *(_DWORD *)&v48[3] = *(_DWORD *)&v53[3];
  uint64_t v32 = v30;
  uint64_t v33 = 0;
  char v34 = 1;
  uint64_t v36 = v12;
  uint64_t v37 = v29;
  char v38 = v17;
  uint64_t v40 = v16;
  char v41 = v4;
  uint64_t v43 = v18;
  uint64_t v44 = v19;
  uint64_t v45 = v20;
  uint64_t v46 = v21;
  char v47 = 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = 1;
  char v51 = 0;
  static Alignment.center.getter();
  sub_1001F0CDC(0.0, 1, 0.0, 1, INFINITY, 0, 40.0, 0, v31, 0.0, 1, 0.0, 1);
  sub_10017F958(v12, v29, v17);
  swift_release();
  swift_bridgeObjectRelease();
  long long v22 = v31[13];
  *(_OWORD *)(a2 + 192) = v31[12];
  *(_OWORD *)(a2 + 208) = v22;
  *(_OWORD *)(a2 + 224) = v31[14];
  long long v23 = v31[9];
  *(_OWORD *)(a2 + 128) = v31[8];
  *(_OWORD *)(a2 + 144) = v23;
  long long v24 = v31[11];
  *(_OWORD *)(a2 + 160) = v31[10];
  *(_OWORD *)(a2 + 176) = v24;
  long long v25 = v31[5];
  *(_OWORD *)(a2 + 64) = v31[4];
  *(_OWORD *)(a2 + 80) = v25;
  long long v26 = v31[7];
  *(_OWORD *)(a2 + 96) = v31[6];
  *(_OWORD *)(a2 + 112) = v26;
  long long v27 = v31[1];
  *(_OWORD *)a2 = v31[0];
  *(_OWORD *)(a2 + 16) = v27;
  __n128 result = (__n128)v31[3];
  *(_OWORD *)(a2 + 32) = v31[2];
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_100171E48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v43 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D1310);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D1318);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000FF33C(&qword_1015D1320) - 8;
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000FF33C(&qword_1015D1328) - 8;
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v16 = static Color.blue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v18 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *uint64_t v18 = KeyPath;
  v18[1] = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v19 = [self tertiarySystemFillColor];
  uint64_t v20 = Color.init(uiColor:)();
  LOBYTE(KeyPath) = static Edge.Set.all.getter();
  sub_1000FF27C((uint64_t)v9, (uint64_t)v13, &qword_1015D1310);
  uint64_t v21 = &v13[*(int *)(v11 + 44)];
  *(void *)uint64_t v21 = v20;
  v21[8] = KeyPath;
  sub_1000FF2E0((uint64_t)v9, &qword_1015D1310);
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v22 = 0.85;
  }
  else {
    double v22 = 1.0;
  }
  uint64_t v23 = v38;
  sub_1000FF27C((uint64_t)v13, v38, &qword_1015D1318);
  *(double *)(v23 + *(int *)(v39 + 44)) = v22;
  sub_1000FF2E0((uint64_t)v13, &qword_1015D1318);
  long long v24 = v42;
  long long v25 = &v42[*(int *)(v43 + 28)];
  uint64_t v26 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v27 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v25, v26, v27);
  __asm { FMOV            V0.2D, #10.0 }
  uint64_t v33 = (uint64_t)v24;
  *long long v24 = _Q0;
  uint64_t v34 = (uint64_t)v40;
  uint64_t v35 = (uint64_t)&v40[*(int *)(v41 + 44)];
  sub_100173DDC(v33, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_1000FF33C(&qword_1015CFF60) + 36)) = 256;
  sub_1000FF27C(v23, v34, &qword_1015D1320);
  sub_100174240(v33, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000FF2E0(v23, &qword_1015D1320);
  return sub_100101750(v34, v44, &qword_1015D1328);
}

uint64_t sub_1001722AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = static VerticalAlignment.center.getter();
  *(void *)(a5 + 8) = 0x4018000000000000;
  *(unsigned char *)(a5 + 16) = 0;
  uint64_t v10 = sub_1000FF33C(&qword_1015CFEF0);
  return sub_10017232C(a1, a2, a3 & 1, a4, a5 + *(int *)(v10 + 44));
}

uint64_t sub_10017232C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v46 = sub_1000FF33C(&qword_1015CFEF8);
  uint64_t v29 = *(void *)(v46 - 8);
  uint64_t v10 = v29;
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v44 = static Color.clear.getter();
  uint64_t KeyPath = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v42 = v47;
  int v41 = v48;
  uint64_t v40 = v49;
  int v39 = v50;
  uint64_t v38 = v51;
  uint64_t v37 = v52;
  uint64_t v53 = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  *(unsigned char *)(v15 + 32) = a3 & 1;
  *(void *)(v15 + 40) = a4;
  swift_bridgeObjectRetain_n();
  sub_10012EB20();
  sub_1000FF33C(&qword_1015CFF00);
  type metadata accessor for UUID();
  sub_1000FF33C(&qword_1015CFF08);
  sub_1001010F8(&qword_1015CFF10, &qword_1015CFF00);
  sub_100174D70();
  sub_1001732B8(&qword_1015CFF28, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
  uint64_t v36 = v14;
  ForEach<>.init(_:content:)();
  uint64_t v16 = static Color.clear.getter();
  uint64_t v17 = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v35 = v53;
  int v34 = v54;
  uint64_t v33 = v55;
  int v32 = v56;
  uint64_t v31 = v57;
  uint64_t v30 = v58;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v20 = v45;
  uint64_t v19 = v46;
  v18(v45, v14, v46);
  uint64_t v21 = v44;
  *(void *)a5 = KeyPath;
  *(void *)(a5 + 8) = v21;
  *(void *)(a5 + 16) = v42;
  *(unsigned char *)(a5 + 24) = v41;
  *(void *)(a5 + 32) = v40;
  *(unsigned char *)(a5 + 40) = v39;
  uint64_t v22 = v37;
  *(void *)(a5 + 48) = v38;
  *(void *)(a5 + 56) = v22;
  uint64_t v23 = sub_1000FF33C(&qword_1015CFF30);
  v18((char *)(a5 + *(int *)(v23 + 48)), v20, v19);
  uint64_t v24 = a5 + *(int *)(v23 + 64);
  *(void *)uint64_t v24 = v17;
  *(void *)(v24 + 8) = v16;
  *(void *)(v24 + 16) = v35;
  *(unsigned char *)(v24 + 24) = v34;
  *(void *)(v24 + 32) = v33;
  *(unsigned char *)(v24 + 40) = v32;
  uint64_t v25 = v30;
  *(void *)(v24 + 48) = v31;
  *(void *)(v24 + 56) = v25;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v29 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v26(v36, v19);
  swift_release();
  swift_release();
  v26(v20, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_10017279C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  int v34 = a4;
  v28[1] = a3;
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(0);
  uint64_t v10 = v9 - 8;
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v32 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (int *)type metadata accessor for RefinementBarButton(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(v10 + 28));
  uint64_t v20 = *v19;
  uint64_t v29 = v19[1];
  uint64_t v30 = v20;
  int v31 = *(unsigned __int8 *)(a1 + *(int *)(v10 + 36));
  sub_100173DDC(a1, (uint64_t)v12, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
  unint64_t v21 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  *(unsigned char *)(v22 + 32) = v34 & 1;
  *(void *)(v22 + 40) = v35;
  sub_100173E44((uint64_t)v12, v22 + v21, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v33);
  uint64_t v23 = &v18[v16[5]];
  uint64_t v24 = v29;
  *(void *)uint64_t v23 = v30;
  *((void *)v23 + 1) = v24;
  uint64_t v25 = &v18[v16[6]];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v18[v16[7]] = v31;
  v18[v16[8]] = 0;
  uint64_t v26 = (uint64_t (**)(uint64_t))&v18[v16[9]];
  *uint64_t v26 = sub_100174F60;
  v26[1] = (uint64_t (*)(uint64_t))v22;
  swift_bridgeObjectRetain();
  sub_10012EB20();
  sub_1001732B8(&qword_1015CFF20, (void (*)(uint64_t))type metadata accessor for RefinementBarButton);
  swift_bridgeObjectRetain();
  View.accessibility(identifier:)();
  return sub_100174240((uint64_t)v18, type metadata accessor for RefinementBarButton);
}

uint64_t sub_100172AD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  char v9 = a4 & 1;
  sub_10012EB20();
  uint64_t v10 = (void (*)(uint64_t *))sub_100127934(a2, a3, v9);
  sub_100127C4C();
  uint64_t v12 = *(void *)(a6 + *(int *)(type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(0) + 24));
  v10(&v12);

  return swift_release();
}

uint64_t sub_100172B8C()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015CFED0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *v0;
  uint64_t v6 = v0[1];
  char v7 = *((unsigned char *)v0 + 16);
  uint64_t v8 = v0[3];
  static Axis.Set.horizontal.getter();
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  char v13 = v7;
  uint64_t v14 = v8;
  sub_1000FF33C(&qword_1015CFED8);
  sub_1001010F8(&qword_1015CFEE0, &qword_1015CFED8);
  ScrollView.init(_:showsIndicators:content:)();
  sub_1001010F8(&qword_1015CFEE8, &qword_1015CFED0);
  View.accessibility(identifier:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100172D44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100172D60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100172DA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100172DC0()
{
  uint64_t v1 = *(void *)(_s4LineVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  type metadata accessor for PlaceSummaryViewModelLine(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

id *sub_100172EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100153840(a1, a2);
}

unint64_t sub_100172F20()
{
  unint64_t result = qword_1015CFB18;
  if (!qword_1015CFB18)
  {
    sub_10010118C(&qword_1015CFAF8);
    sub_100172F9C();
    sub_100173CE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB18);
  }
  return result;
}

unint64_t sub_100172F9C()
{
  unint64_t result = qword_1015CFB20;
  if (!qword_1015CFB20)
  {
    sub_10010118C(&qword_1015CFB28);
    sub_100173018();
    sub_1001736F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB20);
  }
  return result;
}

unint64_t sub_100173018()
{
  unint64_t result = qword_1015CFB30;
  if (!qword_1015CFB30)
  {
    sub_10010118C(&qword_1015CFB38);
    sub_100173094();
    sub_10017343C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB30);
  }
  return result;
}

unint64_t sub_100173094()
{
  unint64_t result = qword_1015CFB40;
  if (!qword_1015CFB40)
  {
    sub_10010118C(&qword_1015CFB48);
    sub_100173110();
    sub_100173320();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB40);
  }
  return result;
}

unint64_t sub_100173110()
{
  unint64_t result = qword_1015CFB50;
  if (!qword_1015CFB50)
  {
    sub_10010118C(&qword_1015CFB58);
    sub_1001731BC();
    sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB50);
  }
  return result;
}

unint64_t sub_1001731BC()
{
  unint64_t result = qword_1015CFB60;
  if (!qword_1015CFB60)
  {
    sub_10010118C(&qword_1015CFB68);
    sub_1001732B8(&qword_1015CFB70, (void (*)(uint64_t))_s10TitleLabelVMa);
    sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB60);
  }
  return result;
}

uint64_t _s10TitleLabelVMa(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D0660);
}

uint64_t sub_1001732B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s5LabelVMa(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D05A8);
}

unint64_t sub_100173320()
{
  unint64_t result = qword_1015CFB80;
  if (!qword_1015CFB80)
  {
    sub_10010118C(&qword_1015CFB88);
    sub_1001732B8(&qword_1015CFB90, (void (*)(uint64_t))_s26MultipleCuratedCollectionsVMa);
    sub_1001732B8(&qword_1015CFB98, (void (*)(uint64_t))_s18SingleCuratedGuideVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFB80);
  }
  return result;
}

uint64_t _s26MultipleCuratedCollectionsVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D04F8);
}

uint64_t _s18SingleCuratedGuideVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D0448);
}

unint64_t sub_10017343C()
{
  unint64_t result = qword_1015CFBA0;
  if (!qword_1015CFBA0)
  {
    sub_10010118C(&qword_1015CFBA8);
    sub_1001734B8();
    sub_1001735D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFBA0);
  }
  return result;
}

unint64_t sub_1001734B8()
{
  unint64_t result = qword_1015CFBB0;
  if (!qword_1015CFBB0)
  {
    sub_10010118C(&qword_1015CFBB8);
    sub_1001732B8(&qword_1015CFBC0, (void (*)(uint64_t))_s18UserGeneratedGuideVMa);
    sub_1001732B8(&qword_1015CFBC8, (void (*)(uint64_t))_s17FirstPartyRatingsVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFBB0);
  }
  return result;
}

uint64_t _s18UserGeneratedGuideVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D03B0);
}

uint64_t _s17FirstPartyRatingsVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D0310);
}

unint64_t sub_1001735D4()
{
  unint64_t result = qword_1015CFBD0;
  if (!qword_1015CFBD0)
  {
    sub_10010118C(&qword_1015CFBD8);
    sub_1001732B8(&qword_1015CFBE0, (void (*)(uint64_t))_s17ThirdPartyRatingsVMa);
    sub_1001736A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFBD0);
  }
  return result;
}

uint64_t _s17ThirdPartyRatingsVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D0270);
}

unint64_t sub_1001736A0()
{
  unint64_t result = qword_1015CFBE8;
  if (!qword_1015CFBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFBE8);
  }
  return result;
}

unint64_t sub_1001736F4()
{
  unint64_t result = qword_1015CFBF0;
  if (!qword_1015CFBF0)
  {
    sub_10010118C(&qword_1015CFBF8);
    sub_100173770();
    sub_100173A2C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFBF0);
  }
  return result;
}

unint64_t sub_100173770()
{
  unint64_t result = qword_1015CFC00;
  if (!qword_1015CFC00)
  {
    sub_10010118C(&qword_1015CFC08);
    sub_1001737EC();
    sub_100173910();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC00);
  }
  return result;
}

unint64_t sub_1001737EC()
{
  unint64_t result = qword_1015CFC10;
  if (!qword_1015CFC10)
  {
    sub_10010118C(&qword_1015CFC18);
    sub_100173868();
    sub_1001738BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC10);
  }
  return result;
}

unint64_t sub_100173868()
{
  unint64_t result = qword_1015CFC20;
  if (!qword_1015CFC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC20);
  }
  return result;
}

unint64_t sub_1001738BC()
{
  unint64_t result = qword_1015CFC28;
  if (!qword_1015CFC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC28);
  }
  return result;
}

unint64_t sub_100173910()
{
  unint64_t result = qword_1015CFC30;
  if (!qword_1015CFC30)
  {
    sub_10010118C(&qword_1015CFC38);
    sub_1001732B8(&qword_1015CFC40, (void (*)(uint64_t))_s13TappableEntryVMa);
    sub_1001732B8(&qword_1015CFC48, (void (*)(uint64_t))_s9DelimiterVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC30);
  }
  return result;
}

uint64_t _s13TappableEntryVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D01D8);
}

uint64_t _s9DelimiterVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D0138);
}

unint64_t sub_100173A2C()
{
  unint64_t result = qword_1015CFC50;
  if (!qword_1015CFC50)
  {
    sub_10010118C(&qword_1015CFC58);
    sub_100173AA8();
    sub_100173BC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC50);
  }
  return result;
}

unint64_t sub_100173AA8()
{
  unint64_t result = qword_1015CFC60;
  if (!qword_1015CFC60)
  {
    sub_10010118C(&qword_1015CFC68);
    sub_1001732B8(&qword_1015CFC70, (void (*)(uint64_t))_s5HoursVMa);
    sub_1001732B8(&qword_1015CFC78, (void (*)(uint64_t))_s28RealTimeAvailableChargerViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC60);
  }
  return result;
}

uint64_t _s5HoursVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D00A0);
}

uint64_t _s28RealTimeAvailableChargerViewVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015CFFF8);
}

unint64_t sub_100173BC4()
{
  unint64_t result = qword_1015CFC80;
  if (!qword_1015CFC80)
  {
    sub_10010118C(&qword_1015CFC88);
    sub_100173C40();
    sub_100173C94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC80);
  }
  return result;
}

unint64_t sub_100173C40()
{
  unint64_t result = qword_1015CFC90;
  if (!qword_1015CFC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC90);
  }
  return result;
}

unint64_t sub_100173C94()
{
  unint64_t result = qword_1015CFC98;
  if (!qword_1015CFC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFC98);
  }
  return result;
}

unint64_t sub_100173CE8()
{
  unint64_t result = qword_1015CFCA0;
  if (!qword_1015CFCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFCA0);
  }
  return result;
}

unint64_t sub_100173D3C()
{
  unint64_t result = qword_1015CFCB0;
  if (!qword_1015CFCB0)
  {
    sub_10010118C(&qword_1015CFAE8);
    sub_1001010F8(&qword_1015CFCB8, &qword_1015CFAE0);
    sub_10012F140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFCB0);
  }
  return result;
}

uint64_t sub_100173DDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100173E44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100173EBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100173EF0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100173F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(0);
  sub_1001732B8(&qword_1015CFD88, (void (*)(uint64_t))type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary);
  uint64_t v8 = ObservedObject.init(wrappedValue:)();
  uint64_t v10 = v9;
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v11.super.Class isa = (Class)qword_101611820;
  v26._uint64_t object = (void *)0x8000000100F781C0;
  v12._uint64_t countAndFlagsBits = 0x6F74206465646441;
  v12._uint64_t object = (void *)0xE800000000000000;
  v13._uint64_t countAndFlagsBits = 0;
  v13._uint64_t object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)qword_101611820, v13, v26);
  v27._uint64_t object = (void *)0x8000000100F781C0;
  v15._uint64_t countAndFlagsBits = 0x7972617262694CLL;
  v15._uint64_t object = (void *)0xE700000000000000;
  v16._uint64_t countAndFlagsBits = 0;
  v16._uint64_t object = (void *)0xE000000000000000;
  v27._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, v11, v16, v27);
  v28._uint64_t countAndFlagsBits = 0xD000000000000041;
  v28._uint64_t object = (void *)0x8000000100F781E0;
  v18._uint64_t countAndFlagsBits = 0x62694C20776F6853;
  v18._uint64_t object = (void *)0xEC00000079726172;
  v19._uint64_t countAndFlagsBits = 0;
  v19._uint64_t object = (void *)0xE000000000000000;
  Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, v11, v19, v28);
  uint64_t result = v21._countAndFlagsBits;
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  *(void *)(a6 + 40) = v8;
  *(void *)(a6 + 48) = v10;
  *(Swift::String *)(a6 + 56) = v14;
  *(Swift::String *)(a6 + 72) = v17;
  *(Swift::String *)(a6 + 88) = v21;
  return result;
}

id *sub_100174120(id *a1)
{
  id v2 = *a1;
  sub_10012EB20();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id *sub_1001741AC(id *a1)
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_100174240(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001742A0()
{
  unint64_t result = qword_1015CFD60;
  if (!qword_1015CFD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFD60);
  }
  return result;
}

unint64_t sub_1001742F4()
{
  unint64_t result = qword_1015CFD68;
  if (!qword_1015CFD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFD68);
  }
  return result;
}

uint64_t _s9ImageViewVMa()
{
  return sub_1000F5520();
}

unint64_t sub_100174388()
{
  unint64_t result = qword_1015CFDF0;
  if (!qword_1015CFDF0)
  {
    sub_10010118C(&qword_1015CFDA0);
    sub_100174428();
    sub_1001010F8(&qword_1015CFE10, &qword_1015CFE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFDF0);
  }
  return result;
}

unint64_t sub_100174428()
{
  unint64_t result = qword_1015CFDF8;
  if (!qword_1015CFDF8)
  {
    sub_10010118C(&qword_1015CFDC8);
    sub_1001744D4();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFDF8);
  }
  return result;
}

unint64_t sub_1001744D4()
{
  unint64_t result = qword_1015CFE00;
  if (!qword_1015CFE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE00);
  }
  return result;
}

unint64_t sub_100174528()
{
  unint64_t result = qword_1015CFE20;
  if (!qword_1015CFE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE20);
  }
  return result;
}

unint64_t sub_10017457C()
{
  unint64_t result = qword_1015CFE28;
  if (!qword_1015CFE28)
  {
    sub_10010118C(&qword_1015CFDE0);
    sub_1001745F8();
    sub_100174428();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE28);
  }
  return result;
}

unint64_t sub_1001745F8()
{
  unint64_t result = qword_1015CFE30;
  if (!qword_1015CFE30)
  {
    sub_10010118C(&qword_1015CFDD8);
    sub_1001746A4();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE30);
  }
  return result;
}

unint64_t sub_1001746A4()
{
  unint64_t result = qword_1015CFE38;
  if (!qword_1015CFE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE38);
  }
  return result;
}

unint64_t sub_1001746F8()
{
  unint64_t result = qword_1015CFE48;
  if (!qword_1015CFE48)
  {
    sub_10010118C(&qword_1015CFDB0);
    sub_100185C50(&qword_1015CFE40, &qword_1015CFDC0, (void (*)(void))sub_100174428);
    sub_100174798();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE48);
  }
  return result;
}

unint64_t sub_100174798()
{
  unint64_t result = qword_1015CFE50;
  if (!qword_1015CFE50)
  {
    sub_10010118C(&qword_1015CFE58);
    sub_100174814();
    sub_100174868();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE50);
  }
  return result;
}

unint64_t sub_100174814()
{
  unint64_t result = qword_1015CFE60;
  if (!qword_1015CFE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE60);
  }
  return result;
}

unint64_t sub_100174868()
{
  unint64_t result = qword_1015CFE68;
  if (!qword_1015CFE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE68);
  }
  return result;
}

unint64_t sub_1001748BC()
{
  unint64_t result = qword_1015CFE70;
  if (!qword_1015CFE70)
  {
    sub_10010118C(&qword_1015CFD98);
    sub_100174388();
    sub_100174528();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFE70);
  }
  return result;
}

uint64_t sub_100174948@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100174978()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1001749A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_1001749B0(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

void *sub_1001749C8(uint64_t a1)
{
  uint64_t v16 = type metadata accessor for GridItem.Size();
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v4 = (int64x2_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for GridItem();
  uint64_t v5 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v7 = &v13.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return _swiftEmptyArrayStorage;
  }
  unsigned int v14 = enum case for GridItem.Size.adaptive(_:);
  uint64_t v8 = *(void (**)(int64x2_t *, void, uint64_t))(v2 + 104);
  uint64_t v9 = _swiftEmptyArrayStorage;
  int64x2_t v13 = vdupq_n_s64(0x7FF0000000000000uLL);
  do
  {
    *uint64_t v4 = v13;
    v8(v4, v14, v16);
    GridItem.init(_:spacing:alignment:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = (void *)sub_1001D0370(0, v9[2] + 1, 1, (unint64_t)v9);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = (void *)sub_1001D0370(v10 > 1, v11 + 1, 1, (unint64_t)v9);
    }
    void v9[2] = v11 + 1;
    (*(void (**)(unint64_t, __int8 *, uint64_t))(v5 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11, v7, v15);
    --a1;
  }
  while (a1);
  return v9;
}

uint64_t sub_100174C20()
{
  return sub_100171588();
}

unint64_t sub_100174C28()
{
  unint64_t result = qword_1015CFEA0;
  if (!qword_1015CFEA0)
  {
    sub_10010118C(&qword_1015CFE98);
    sub_1001732B8(&qword_1015CFEA8, (void (*)(uint64_t))_s12ActionButtonVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFEA0);
  }
  return result;
}

uint64_t _s12ActionButtonVMa(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D0780);
}

uint64_t sub_100174CF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001722AC(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_100174D14()
{
  sub_100127C4C();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100174D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10017279C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), a2);
}

unint64_t sub_100174D70()
{
  unint64_t result = qword_1015CFF18;
  if (!qword_1015CFF18)
  {
    sub_10010118C(&qword_1015CFF08);
    sub_1001732B8(&qword_1015CFF20, (void (*)(uint64_t))type metadata accessor for RefinementBarButton);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF18);
  }
  return result;
}

uint64_t sub_100174E4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  sub_100127C4C();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100174F60(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100172AD8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_100174FE4()
{
  unint64_t result = qword_1015CFF40;
  if (!qword_1015CFF40)
  {
    sub_10010118C(&qword_1015CFF38);
    sub_100175084();
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF40);
  }
  return result;
}

unint64_t sub_100175084()
{
  unint64_t result = qword_1015CFF48;
  if (!qword_1015CFF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF48);
  }
  return result;
}

unint64_t sub_1001750D8()
{
  unint64_t result = qword_1015CFF70;
  if (!qword_1015CFF70)
  {
    sub_10010118C(&qword_1015CFF68);
    sub_100175178();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF70);
  }
  return result;
}

unint64_t sub_100175178()
{
  unint64_t result = qword_1015CFF78;
  if (!qword_1015CFF78)
  {
    sub_10010118C(&qword_1015CFF80);
    sub_100175218();
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF78);
  }
  return result;
}

unint64_t sub_100175218()
{
  unint64_t result = qword_1015CFF88;
  if (!qword_1015CFF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CFF88);
  }
  return result;
}

uint64_t _s12UserNoteViewVwxx(id *a1)
{
  sub_100127C4C();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s12UserNoteViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  sub_10012EB20();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12UserNoteViewVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s12UserNoteViewVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s12UserNoteViewVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_100127C4C();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12UserNoteViewVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12UserNoteViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s12UserNoteViewVMa()
{
  return &_s12UserNoteViewVN;
}

uint64_t _s15UserLibraryViewVwxx(id *a1)
{
  sub_100127C4C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s15UserLibraryViewVwcp(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  sub_10012EB20();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  uint64_t v13 = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15UserLibraryViewVwca(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for PlaceSummaryUnitString(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s15UserLibraryViewVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_100127C4C();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15UserLibraryViewVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15UserLibraryViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15UserLibraryViewVMa()
{
  return &_s15UserLibraryViewVN;
}

uint64_t _s17PhotoCarouselViewVwxx(uint64_t a1)
{
  swift_release();

  sub_100127C4C();

  return swift_release();
}

uint64_t _s17PhotoCarouselViewVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  char v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_retain();
  id v10 = v6;
  sub_10012EB20();
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  return a1;
}

uint64_t _s17PhotoCarouselViewVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_10012EB20();
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  sub_100127C4C();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s17PhotoCarouselViewVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t _s17PhotoCarouselViewVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_100127C4C();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t _s17PhotoCarouselViewVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17PhotoCarouselViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17PhotoCarouselViewVMa()
{
  return &_s17PhotoCarouselViewVN;
}

uint64_t *sub_100175BA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000FF33C(&qword_1015D81F0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
  }
  return a1;
}

uint64_t sub_100175CBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1000FF33C(&qword_1015D81F0);
  char v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100175D48(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_100175E10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

_OWORD *sub_100175F04(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_100175FA8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1000FF33C(&qword_1015D81F0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_10017606C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100176080);
}

uint64_t sub_100176080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000FF33C(&qword_1015D81F0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100176134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100176148);
}

uint64_t sub_100176148(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000FF33C(&qword_1015D81F0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1001761F4()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D8260, (void (*)(void))sub_1001742A0);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1001762C0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_10017638C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString();
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1001763F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10017646C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001764E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100176564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001765E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001765F4);
}

uint64_t sub_1001765F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017660C(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for AttributedString);
}

uint64_t sub_10017660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v9(a1, a2, v7);
  }
  else
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v11 >= 2) {
      return ((v11 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1001766E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001766F4);
}

uint64_t sub_1001766F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10017670C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for AttributedString);
}

uint64_t sub_10017670C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v11(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1001767CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001767E4(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString);
}

uint64_t sub_1001767E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10017687C(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    unsigned int v11 = v5;
    uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    a1[*(int *)(a3 + 24)] = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_10017696C(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8660);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1001769E8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  id v11 = v6;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100176A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_100176B38(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100176BD4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100176C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100176C94);
}

uint64_t sub_100176C94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_1000FF33C(&qword_1015D8660);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100176D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100176D68);
}

void *sub_100176D68(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_1000FF33C(&qword_1015D8660);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100176E14()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D86D0, (void (*)(void))sub_1001742F4);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100176ED8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for ScaledMetric();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *sub_100176F38(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    uint64_t v11 = v5;
    sub_10012EB20();
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = v9;
    a1[32] = v10;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = type metadata accessor for UUID();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    uint64_t v43 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    uint64_t v44 = v14;
    uint64_t v17 = *(int *)(v43 + 20);
    Swift::String v18 = &v13[v17];
    uint64_t v19 = v14 + v17;
    v16(&v13[v17], v19, v15);
    uint64_t v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    uint64_t v21 = v20[5];
    uint64_t v22 = &v18[v21];
    uint64_t v23 = v19 + v21;
    uint64_t v24 = type metadata accessor for AttributedString();
    uint64_t v25 = *(void *)(v24 - 8);
    int v41 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v41(v22, v23, v24);
    uint64_t v26 = v20[6];
    Swift::String v27 = &v18[v26];
    Swift::String v28 = (void *)(v19 + v26);
    uint64_t v29 = v28[1];
    *(void *)Swift::String v27 = *v28;
    *((void *)v27 + 1) = v29;
    *(void *)&v18[v20[7]] = *(void *)(v19 + v20[7]);
    *(void *)&v18[v20[8]] = *(void *)(v19 + v20[8]);
    *(void *)&v18[v20[9]] = *(void *)(v19 + v20[9]);
    *(void *)&v18[v20[10]] = *(void *)(v19 + v20[10]);
    uint64_t v30 = v20[11];
    int v31 = &v18[v30];
    uint64_t v32 = v19 + v30;
    *(void *)int v31 = *(void *)v32;
    v31[8] = *(unsigned char *)(v32 + 8);
    uint64_t v33 = v20[12];
    __dst = &v18[v33];
    int v34 = (const void *)(v19 + v33);
    uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v35(v34, 1, v24))
    {
      uint64_t v36 = sub_1000FF33C(&qword_1015CFD80);
      memcpy(__dst, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v41(__dst, (uint64_t)v34, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    uint64_t v37 = *(int *)(v43 + 24);
    uint64_t v38 = *(void **)(v44 + v37);
    *(void *)&v13[v37] = v38;
    id v39 = v38;
  }
  return a1;
}

void sub_10017723C(id *a1, uint64_t a2)
{
  sub_100127C4C();
  int v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v8 = &v4[*(int *)(v7 + 20)];
  v6(v8, v5);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  char v10 = &v8[*(int *)(v9 + 20)];
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v12 + 8);
  v13(v10, v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v14 = &v8[*(int *)(v9 + 48)];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  uint64_t v15 = *(void **)&v4[*(int *)(v7 + 24)];
}

uint64_t sub_1001773FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  id v11 = v6;
  sub_10012EB20();
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  uint64_t v43 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v44 = v14;
  uint64_t v17 = *(int *)(v43 + 20);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = v14 + v17;
  v16(v13 + v17, v19, v15);
  uint64_t v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = (void *)(v18 + v21);
  uint64_t v23 = (const void *)(v19 + v21);
  uint64_t v24 = type metadata accessor for AttributedString();
  uint64_t v25 = *(void *)(v24 - 8);
  int v41 = *(void (**)(void *, const void *, uint64_t))(v25 + 16);
  v41(v22, v23, v24);
  uint64_t v26 = v20[6];
  Swift::String v27 = (void *)(v18 + v26);
  Swift::String v28 = (void *)(v19 + v26);
  uint64_t v29 = v28[1];
  *Swift::String v27 = *v28;
  v27[1] = v29;
  *(void *)(v18 + v20[7]) = *(void *)(v19 + v20[7]);
  *(void *)(v18 + v20[8]) = *(void *)(v19 + v20[8]);
  *(void *)(v18 + v20[9]) = *(void *)(v19 + v20[9]);
  *(void *)(v18 + v20[10]) = *(void *)(v19 + v20[10]);
  uint64_t v30 = v20[11];
  uint64_t v31 = v18 + v30;
  uint64_t v32 = v19 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  uint64_t v33 = v20[12];
  __dst = (void *)(v18 + v33);
  int v34 = (const void *)(v19 + v33);
  uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v35(v34, 1, v24))
  {
    uint64_t v36 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(__dst, v34, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    v41(__dst, v34, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
  }
  uint64_t v37 = *(int *)(v43 + 24);
  uint64_t v38 = *(void **)(v44 + v37);
  *(void *)(v13 + v37) = v38;
  id v39 = v38;
  return a1;
}

uint64_t sub_1001776B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_100127C4C();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  uint64_t v45 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v46 = v14;
  uint64_t v17 = *(int *)(v45 + 20);
  uint64_t v18 = v13 + v17;
  uint64_t v19 = v14 + v17;
  v16(v13 + v17, v19, v15);
  uint64_t v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = v18 + v21;
  uint64_t v23 = v19 + v21;
  uint64_t v24 = type metadata accessor for AttributedString();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24);
  v44(v22, v23, v24);
  uint64_t v26 = v20[6];
  Swift::String v27 = (void *)(v18 + v26);
  Swift::String v28 = (void *)(v19 + v26);
  *Swift::String v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v18 + v20[7]) = *(void *)(v19 + v20[7]);
  swift_retain();
  swift_release();
  *(void *)(v18 + v20[8]) = *(void *)(v19 + v20[8]);
  swift_retain();
  swift_release();
  *(void *)(v18 + v20[9]) = *(void *)(v19 + v20[9]);
  swift_retain();
  swift_release();
  *(void *)(v18 + v20[10]) = *(void *)(v19 + v20[10]);
  swift_retain();
  swift_release();
  uint64_t v29 = v20[11];
  uint64_t v30 = v18 + v29;
  uint64_t v31 = (uint64_t *)(v19 + v29);
  uint64_t v32 = *v31;
  *(unsigned char *)(v30 + 8) = *((unsigned char *)v31 + 8);
  *(void *)uint64_t v30 = v32;
  uint64_t v33 = v20[12];
  int v34 = (void *)(v18 + v33);
  uint64_t v35 = (void *)(v19 + v33);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  LODWORD(v20) = v36(v34, 1, v24);
  int v37 = v36(v35, 1, v24);
  if (!v20)
  {
    if (!v37)
    {
      v44((uint64_t)v34, (uint64_t)v35, v24);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v34, v24);
    goto LABEL_6;
  }
  if (v37)
  {
LABEL_6:
    uint64_t v38 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 16))(v34, v35, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v34, 0, 1, v24);
LABEL_7:
  uint64_t v39 = *(int *)(v45 + 24);
  uint64_t v40 = *(void **)(v46 + v39);
  int v41 = *(void **)(v13 + v39);
  *(void *)(v13 + v39) = v40;
  id v42 = v40;

  return a1;
}

uint64_t sub_100177A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  uint64_t v28 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v29 = v7;
  uint64_t v10 = *(int *)(v28 + 20);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  v9(v6 + v10, v12, v8);
  uint64_t v13 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(v11 + v14);
  uint64_t v16 = (const void *)(v12 + v14);
  uint64_t v17 = type metadata accessor for AttributedString();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(void *, const void *, uint64_t))(v18 + 32);
  v19(v15, v16, v17);
  *(_OWORD *)(v11 + v13[6]) = *(_OWORD *)(v12 + v13[6]);
  *(void *)(v11 + v13[7]) = *(void *)(v12 + v13[7]);
  *(void *)(v11 + v13[8]) = *(void *)(v12 + v13[8]);
  *(void *)(v11 + v13[9]) = *(void *)(v12 + v13[9]);
  *(void *)(v11 + v13[10]) = *(void *)(v12 + v13[10]);
  uint64_t v20 = v13[11];
  uint64_t v21 = v11 + v20;
  uint64_t v22 = v12 + v20;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = v13[12];
  uint64_t v24 = (void *)(v11 + v23);
  uint64_t v25 = (const void *)(v12 + v23);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v25, 1, v17))
  {
    uint64_t v26 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v19(v24, v25, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
  }
  *(void *)(v6 + *(int *)(v28 + 24)) = *(void *)(v29 + *(int *)(v28 + 24));
  return a1;
}

uint64_t sub_100177C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_100127C4C();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  uint64_t v41 = v10;
  uint64_t v42 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v14 = *(int *)(v42 + 20);
  uint64_t v15 = v10 + v14;
  uint64_t v43 = v11;
  uint64_t v16 = v11 + v14;
  v13(v10 + v14, v16, v12);
  uint64_t v17 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = v15 + v18;
  uint64_t v20 = v16 + v18;
  uint64_t v21 = type metadata accessor for AttributedString();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  v23(v19, v20, v21);
  uint64_t v24 = v17[6];
  uint64_t v25 = (void *)(v15 + v24);
  uint64_t v26 = (uint64_t *)(v16 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  *(void *)(v15 + v17[7]) = *(void *)(v16 + v17[7]);
  swift_release();
  *(void *)(v15 + v17[8]) = *(void *)(v16 + v17[8]);
  swift_release();
  *(void *)(v15 + v17[9]) = *(void *)(v16 + v17[9]);
  swift_release();
  *(void *)(v15 + v17[10]) = *(void *)(v16 + v17[10]);
  swift_release();
  uint64_t v29 = v17[11];
  uint64_t v30 = v15 + v29;
  uint64_t v31 = v16 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  uint64_t v32 = v17[12];
  uint64_t v33 = (void *)(v15 + v32);
  int v34 = (void *)(v16 + v32);
  uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v17) = v35(v33, 1, v21);
  int v36 = v35(v34, 1, v21);
  if (!v17)
  {
    if (!v36)
    {
      v23((uint64_t)v33, (uint64_t)v34, v21);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v33, v21);
    goto LABEL_6;
  }
  if (v36)
  {
LABEL_6:
    uint64_t v37 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 32))(v33, v34, v21);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
LABEL_7:
  uint64_t v38 = *(int *)(v42 + 24);
  uint64_t v39 = *(void **)(v41 + v38);
  *(void *)(v41 + v38) = *(void *)(v43 + v38);

  return a1;
}

uint64_t sub_100177F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100177F88);
}

uint64_t sub_100177F88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = (char *)a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100178044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100178058);
}

void *sub_100178058(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
    char v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100178100()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s17ContainmentParentVwxx(id *a1)
{
  sub_100127C4C();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s17ContainmentParentVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  id v9 = v4;
  sub_10012EB20();
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v10;
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17ContainmentParentVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 _s17ContainmentParentVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s17ContainmentParentVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  sub_100127C4C();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t _s17ContainmentParentVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ContainmentParentVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17ContainmentParentVMa()
{
  return &_s17ContainmentParentVN;
}

uint64_t _s22UGCUserRecommendationsVwxx(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s22UGCUserRecommendationsVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22UGCUserRecommendationsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 _s22UGCUserRecommendationsVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22UGCUserRecommendationsVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s22UGCUserRecommendationsVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22UGCUserRecommendationsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s22UGCUserRecommendationsVMa()
{
  return &_s22UGCUserRecommendationsVN;
}

char *sub_10017874C(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = v5;
    uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v13];
    uint64_t v16 = (char **)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = &a1[v14];
    uint64_t v19 = (uint64_t)a2 + v14;
    uint64_t v20 = type metadata accessor for UUID();
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
    *(_DWORD *)&v18[v22[5]] = *(_DWORD *)(v19 + v22[5]);
    uint64_t v23 = v22[6];
    uint64_t v24 = *(void **)(v19 + v23);
    *(void *)&v18[v23] = v24;
    *(void *)&v18[v22[7]] = *(void *)(v19 + v22[7]);
    uint64_t v25 = v22[8];
    uint64_t v26 = &v18[v25];
    uint64_t v27 = (void *)(v19 + v25);
    uint64_t v28 = v27[1];
    *(void *)uint64_t v26 = *v27;
    *((void *)v26 + 1) = v28;
    v18[v22[9]] = *(unsigned char *)(v19 + v22[9]);
    a1[a3[8]] = *((unsigned char *)a2 + a3[8]);
    id v29 = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100178908(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  id v6 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

void *sub_100178A04(void *a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  id v11 = v6;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (char *)a1 + v14;
  uint64_t v19 = a2 + v14;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  *(_DWORD *)&v18[v22[5]] = *(_DWORD *)(v19 + v22[5]);
  uint64_t v23 = v22[6];
  uint64_t v24 = *(void **)(v19 + v23);
  *(void *)&v18[v23] = v24;
  *(void *)&v18[v22[7]] = *(void *)(v19 + v22[7]);
  uint64_t v25 = v22[8];
  uint64_t v26 = &v18[v25];
  uint64_t v27 = (void *)(v19 + v25);
  uint64_t v28 = v27[1];
  *(void *)uint64_t v26 = *v27;
  *((void *)v26 + 1) = v28;
  v18[v22[9]] = *(unsigned char *)(v19 + v22[9]);
  *((unsigned char *)a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  id v29 = v24;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100178B70(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  *(_DWORD *)(v17 + v20[5]) = *(_DWORD *)(v18 + v20[5]);
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void **)(v18 + v21);
  uint64_t v23 = *(void **)(v17 + v21);
  *(void *)(v17 + v21) = v22;
  id v24 = v22;

  *(void *)(v17 + v20[7]) = *(void *)(v18 + v20[7]);
  uint64_t v25 = v20[8];
  uint64_t v26 = (void *)(v17 + v25);
  uint64_t v27 = (void *)(v18 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[9]) = *(unsigned char *)(v18 + v20[9]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

_OWORD *sub_100178D10(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  *(_DWORD *)&v11[v14[5]] = *(_DWORD *)&v12[v14[5]];
  *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
  *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
  *(_OWORD *)&v11[v14[8]] = *(_OWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100178E40(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  *(_DWORD *)(v17 + v20[5]) = *(_DWORD *)&v18[v20[5]];
  uint64_t v21 = v20[6];
  uint64_t v22 = *(void **)(v17 + v21);
  *(void *)(v17 + v21) = *(void *)&v18[v21];

  *(void *)(v17 + v20[7]) = *(void *)&v18[v20[7]];
  uint64_t v23 = v20[8];
  id v24 = (void *)(v17 + v23);
  uint64_t v25 = &v18[v23];
  uint64_t v27 = *(void *)v25;
  uint64_t v26 = *((void *)v25 + 1);
  *id v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + v20[9]) = v18[v20[9]];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100178FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100178FC4);
}

uint64_t sub_100178FC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + a3[6] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a3[7];
    return v14(v16, a2, v15);
  }
}

uint64_t sub_1001790FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100179110);
}

uint64_t sub_100179110(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1000FF33C(&qword_1015D8660);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[6] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[7];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_100179248()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D86D0, (void (*)(void))sub_1001742F4);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_100179350(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = v4;
    uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = &v7[v13];
    uint64_t v16 = (char **)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *(void *)uint64_t v15 = *v16;
    *((void *)v15 + 1) = v17;
    *(void *)&v7[v14] = *(char **)((char *)a2 + v14);
    uint64_t v18 = a3[9];
    *(void *)&v7[a3[8]] = *(char **)((char *)a2 + a3[8]);
    v7[v18] = *((unsigned char *)a2 + v18);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10017946C(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_release();
}

void *sub_10017950C(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  id v11 = v6;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(void *)((char *)a1 + v14) = *(void *)(a2 + v14);
  uint64_t v18 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *((unsigned char *)a1 + v18) = *(unsigned char *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1001795DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

_OWORD *sub_1001796E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_100179798(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1000FF33C(&qword_1015D8660);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v16 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *((unsigned char *)a2 + v16);
  return a1;
}

uint64_t sub_10017987C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100179890);
}

uint64_t sub_100179890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D8660);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10017995C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100179970);
}

uint64_t sub_100179970(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000FF33C(&qword_1015D8660);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_100179A38()
{
  sub_100176ED8(319, (unint64_t *)&unk_1015D86D0, (void (*)(void))sub_1001742F4);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *sub_100179B24(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    uint64_t v11 = v5;
    sub_10012EB20();
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = v9;
    a1[32] = v10;
    unint64_t v12 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v12;
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (uint64_t)a2 + v13;
    uint64_t v16 = type metadata accessor for UUID();
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
    uint64_t v19 = *(int *)(v18 + 20);
    uint64_t v20 = &v14[v19];
    uint64_t v21 = (uint64_t *)(v15 + v19);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *(void *)uint64_t v20 = v23;
    *((void *)v20 + 1) = v22;
    uint64_t v24 = *(int *)(v18 + 24);
    uint64_t v25 = *(void **)(v15 + v24);
    *(void *)&v14[v24] = v25;
    swift_bridgeObjectRetain();
    id v26 = v25;
  }
  return a1;
}

void sub_100179C74(id *a1, uint64_t a2)
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  int v4 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)&v4[*(int *)(v6 + 24)];
}

uint64_t sub_100179D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  id v11 = v6;
  sub_10012EB20();
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v12 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v12;
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v20 = (void *)(v14 + v19);
  uint64_t v21 = (uint64_t *)(v15 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  uint64_t v24 = *(int *)(v18 + 24);
  uint64_t v25 = *(void **)(v15 + v24);
  *(void *)(v14 + v24) = v25;
  swift_bridgeObjectRetain();
  id v26 = v25;
  return a1;
}

uint64_t sub_100179E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = (void *)(v13 + v17);
  uint64_t v19 = (void *)(v14 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(v16 + 24);
  uint64_t v21 = *(void **)(v14 + v20);
  uint64_t v22 = *(void **)(v13 + v20);
  *(void *)(v13 + v20) = v21;
  id v23 = v21;

  return a1;
}

uint64_t sub_100179F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  *(_OWORD *)(v6 + *(int *)(v9 + 20)) = *(_OWORD *)(v7 + *(int *)(v9 + 20));
  *(void *)(v6 + *(int *)(v9 + 24)) = *(void *)(v7 + *(int *)(v9 + 24));
  return a1;
}

uint64_t sub_10017A010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_100127C4C();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)(v11 + v15);
  uint64_t v17 = (uint64_t *)(v12 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(v14 + 24);
  uint64_t v21 = *(void **)(v11 + v20);
  *(void *)(v11 + v20) = *(void *)(v12 + v20);

  return a1;
}

uint64_t sub_10017A10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017A120);
}

uint64_t sub_10017A120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017A1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017A1E4);
}

uint64_t sub_10017A1E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017A28C()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10017A338(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    uint64_t v11 = v5;
    sub_10012EB20();
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = v9;
    a1[32] = v10;
    uint64_t v12 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v12;
    uint64_t v13 = a2[8];
    uint64_t v14 = a3[8];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v13;
    uint64_t v17 = type metadata accessor for UUID();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    uint64_t v19 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
    uint64_t v20 = v19[5];
    uint64_t v21 = *(void **)(v16 + v20);
    *(void *)&v15[v20] = v21;
    uint64_t v22 = v19[6];
    id v23 = &v15[v22];
    uint64_t v24 = (void *)(v16 + v22);
    uint64_t v25 = v24[1];
    *(void *)id v23 = *v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v19[7];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = (void *)(v16 + v26);
    uint64_t v29 = v28[1];
    *(void *)uint64_t v27 = *v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = v19[8];
    uint64_t v31 = *(void **)(v16 + v30);
    *(void *)&v15[v30] = v31;
    uint64_t v32 = a3[10];
    a1[a3[9]] = *((unsigned char *)a2 + a3[9]);
    *(void *)&a1[v32] = *(char **)((char *)a2 + v32);
    id v33 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = v31;
  }
  return a1;
}

void sub_10017A4E0(id *a1, uint64_t a2)
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v4 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)&v4[*(int *)(v6 + 32)];
}

uint64_t sub_10017A5B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  id v11 = v6;
  sub_10012EB20();
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v12 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v12;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v13;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18(v15, v16, v17);
  uint64_t v19 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = *(void **)(v16 + v20);
  *(void *)(v15 + v20) = v21;
  uint64_t v22 = v19[6];
  id v23 = (void *)(v15 + v22);
  uint64_t v24 = (void *)(v16 + v22);
  uint64_t v25 = v24[1];
  *id v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = v19[7];
  uint64_t v27 = (void *)(v15 + v26);
  uint64_t v28 = (void *)(v16 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = v19[8];
  uint64_t v31 = *(void **)(v16 + v30);
  *(void *)(v15 + v30) = v31;
  uint64_t v32 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v32) = *(void *)(a2 + v32);
  id v33 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v31;
  return a1;
}

uint64_t sub_10017A710(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = *(void **)(v14 + v17);
  uint64_t v19 = *(void **)(v13 + v17);
  *(void *)(v13 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = v16[6];
  uint64_t v22 = (void *)(v13 + v21);
  id v23 = (void *)(v14 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v16[7];
  uint64_t v25 = (void *)(v13 + v24);
  uint64_t v26 = (void *)(v14 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = v16[8];
  uint64_t v28 = *(void **)(v14 + v27);
  uint64_t v29 = *(void **)(v13 + v27);
  *(void *)(v13 + v27) = v28;
  id v30 = v28;

  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10017A8D0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  char v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
  *(_OWORD *)(v8 + v11[6]) = *(_OWORD *)(v9 + v11[6]);
  *(_OWORD *)(v8 + v11[7]) = *(_OWORD *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_10017A9C0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_100127C4C();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = *(void **)(v12 + v16);
  *(void *)(v12 + v16) = *(void *)(v13 + v16);

  uint64_t v18 = v15[6];
  uint64_t v19 = (void *)(v12 + v18);
  id v20 = (uint64_t *)(v13 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v15[7];
  uint64_t v24 = (void *)(v12 + v23);
  uint64_t v25 = (uint64_t *)(v13 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v15[8];
  uint64_t v29 = *(void **)(v12 + v28);
  *(void *)(v12 + v28) = *(void *)(v13 + v28);

  uint64_t v30 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);
  return a1;
}

uint64_t sub_10017AB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017AB2C);
}

uint64_t sub_10017AB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017ABDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017ABF0);
}

uint64_t sub_10017ABF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017AC98()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10017AD5C(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    uint64_t v11 = v5;
    sub_10012EB20();
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = v9;
    a1[32] = v10;
    uint64_t v12 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v12;
    uint64_t v13 = a2[8];
    *((void *)a1 + 7) = a2[7];
    *((void *)a1 + 8) = v13;
    uint64_t v14 = a2[10];
    uint64_t v46 = a3;
    uint64_t v15 = *(int *)(a3 + 36);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = (char *)a2 + v15;
    *((void *)a1 + 9) = a2[9];
    *((void *)a1 + 10) = v14;
    uint64_t v18 = type metadata accessor for UUID();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = v19;
    v19(v16, v17, v18);
    id v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
    *(void *)&v16[v20[5]] = *(void *)&v17[v20[5]];
    *(void *)&v16[v20[6]] = *(void *)&v17[v20[6]];
    uint64_t v21 = v20[7];
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    uint64_t v24 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
    uint64_t v25 = *((void *)v24 - 1);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = sub_1000FF33C(&qword_1015D0498);
      memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      v45(v22, v23, v18);
      uint64_t v28 = v24[5];
      uint64_t v29 = *(void **)&v23[v28];
      *(void *)&v22[v28] = v29;
      uint64_t v30 = v24[6];
      uint64_t v31 = &v22[v30];
      uint64_t v32 = &v23[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      uint64_t v34 = v24[7];
      uint64_t v35 = &v22[v34];
      int v36 = &v23[v34];
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = v37;
      uint64_t v38 = v24[8];
      uint64_t v39 = *(void **)&v23[v38];
      *(void *)&v22[v38] = v39;
      uint64_t v40 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
      id v41 = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v42 = v39;
      v40(v22, 0, 1, v24);
    }
    uint64_t v43 = *(int *)(v46 + 44);
    a1[*(int *)(v46 + 40)] = *((unsigned char *)a2 + *(int *)(v46 + 40));
    *(void *)&a1[v43] = *(char **)((char *)a2 + v43);
  }
  return a1;
}

void sub_10017B01C(id *a1, uint64_t a2)
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v4 = (char *)a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for UUID();
  long long v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  swift_bridgeObjectRelease();
  uint64_t v8 = &v4[*(int *)(v7 + 28)];
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v5);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v10 = *(void **)&v8[*(int *)(v9 + 32)];
  }
}

uint64_t sub_10017B190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  id v11 = v6;
  sub_10012EB20();
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v12 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v12;
  uint64_t v13 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v13;
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v46 = a3;
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v14;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = v19;
  v19(v16, v17, v18);
  id v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  *(void *)&v16[v20[5]] = *(void *)&v17[v20[5]];
  *(void *)&v16[v20[6]] = *(void *)&v17[v20[6]];
  uint64_t v21 = v20[7];
  uint64_t v22 = &v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    uint64_t v27 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v45(v22, v23, v18);
    uint64_t v28 = v24[5];
    uint64_t v29 = *(void **)&v23[v28];
    *(void *)&v22[v28] = v29;
    uint64_t v30 = v24[6];
    uint64_t v31 = &v22[v30];
    uint64_t v32 = &v23[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = v24[7];
    uint64_t v35 = &v22[v34];
    int v36 = &v23[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = v24[8];
    uint64_t v39 = *(void **)&v23[v38];
    *(void *)&v22[v38] = v39;
    uint64_t v40 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
    id v41 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v42 = v39;
    v40(v22, 0, 1, v24);
  }
  uint64_t v43 = *(int *)(v46 + 44);
  *(unsigned char *)(a1 + *(int *)(v46 + 40)) = *(unsigned char *)(a2 + *(int *)(v46 + 40));
  *(void *)(a1 + v43) = *(void *)(a2 + v43);
  return a1;
}

uint64_t sub_10017B400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_10012EB20();
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_100127C4C();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = a3;
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 24);
  v57(v13, v14, v15);
  uint64_t v16 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  *(void *)(v13 + v16[5]) = *(void *)(v14 + v16[5]);
  *(void *)(v13 + v16[6]) = *(void *)(v14 + v16[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v16[7];
  uint64_t v18 = (char *)(v13 + v17);
  uint64_t v19 = (char *)(v14 + v17);
  id v20 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v56 = *((void *)v20 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v56 + 48);
  uint64_t v22 = v18;
  LODWORD(v18) = v21(v18, 1, v20);
  int v23 = v21(v19, 1, v20);
  if (!v18)
  {
    if (!v23)
    {
      uint64_t v40 = v22;
      v57((uint64_t)v22, (uint64_t)v19, v15);
      uint64_t v41 = v20[5];
      id v42 = *(void **)&v19[v41];
      uint64_t v43 = *(void **)&v22[v41];
      *(void *)&v40[v41] = v42;
      id v44 = v42;

      uint64_t v45 = v20[6];
      uint64_t v46 = &v40[v45];
      uint64_t v47 = &v19[v45];
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = *((void *)v47 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = v20[7];
      uint64_t v49 = &v40[v48];
      unsigned __int8 v50 = &v19[v48];
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v51 = v20[8];
      uint64_t v52 = *(void **)&v19[v51];
      uint64_t v53 = *(void **)&v40[v51];
      *(void *)&v40[v51] = v52;
      id v54 = v52;

      goto LABEL_7;
    }
    sub_100174240((uint64_t)v22, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v38 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v22, v19, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v24 = v22;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v22, v19, v15);
  uint64_t v25 = v20[5];
  uint64_t v26 = *(void **)&v19[v25];
  *(void *)&v22[v25] = v26;
  uint64_t v27 = v20[6];
  uint64_t v28 = &v22[v27];
  uint64_t v29 = &v19[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  uint64_t v30 = v20[7];
  uint64_t v31 = &v22[v30];
  uint64_t v32 = &v19[v30];
  *(void *)uint64_t v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = v20[8];
  uint64_t v34 = *(void **)&v19[v33];
  *(void *)&v24[v33] = v34;
  uint64_t v35 = *(void (**)(char *, void, uint64_t, int *))(v56 + 56);
  id v36 = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v37 = v34;
  v35(v24, 0, 1, v20);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(v58 + 40)) = *(unsigned char *)(a2 + *(int *)(v58 + 40));
  *(void *)(a1 + *(int *)(v58 + 44)) = *(void *)(a2 + *(int *)(v58 + 44));
  return a1;
}

uint64_t sub_10017B7FC(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v10 = type metadata accessor for UUID();
  char v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  *(void *)(v8 + v12[5]) = *(void *)(v9 + v12[5]);
  *(void *)(v8 + v12[6]) = *(void *)(v9 + v12[6]);
  uint64_t v13 = v12[7];
  uint64_t v14 = (char *)(v8 + v13);
  uint64_t v15 = (char *)(v9 + v13);
  uint64_t v16 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v17 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v11((uint64_t)v14, (uint64_t)v15, v10);
    *(void *)&v14[v16[5]] = *(void *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(void *)&v14[v16[8]] = *(void *)&v15[v16[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t sub_10017B9F0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_100127C4C();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v43 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v43 - 8);
  id v42 = *(void (**)(uint64_t, uint64_t))(v41 + 40);
  v42(v13, v14);
  uint64_t v15 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  *(void *)(v13 + v15[5]) = *(void *)(v14 + v15[5]);
  *(void *)(v13 + v15[6]) = *(void *)(v14 + v15[6]);
  swift_bridgeObjectRelease();
  uint64_t v16 = v15[7];
  uint64_t v17 = (char *)(v13 + v16);
  uint64_t v18 = (char *)(v14 + v16);
  uint64_t v19 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      ((void (*)(char *, char *, uint64_t))v42)(v17, v18, v43);
      uint64_t v27 = v19[5];
      uint64_t v28 = *(void **)&v17[v27];
      *(void *)&v17[v27] = *(void *)&v18[v27];

      uint64_t v29 = v19[6];
      uint64_t v30 = &v17[v29];
      uint64_t v31 = &v18[v29];
      uint64_t v33 = *(void *)v31;
      uint64_t v32 = *((void *)v31 + 1);
      *(void *)uint64_t v30 = v33;
      *((void *)v30 + 1) = v32;
      swift_bridgeObjectRelease();
      uint64_t v34 = v19[7];
      uint64_t v35 = &v17[v34];
      id v36 = &v18[v34];
      uint64_t v38 = *(void *)v36;
      uint64_t v37 = *((void *)v36 + 1);
      *(void *)uint64_t v35 = v38;
      *((void *)v35 + 1) = v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = v19[8];
      uint64_t v40 = *(void **)&v17[v39];
      *(void *)&v17[v39] = *(void *)&v18[v39];

      goto LABEL_7;
    }
    sub_100174240((uint64_t)v17, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v17, v18, v43);
  *(void *)&v17[v19[5]] = *(void *)&v18[v19[5]];
  *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
  *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
  *(void *)&v17[v19[8]] = *(void *)&v18[v19[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_7:
  uint64_t v25 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  return a1;
}

uint64_t sub_10017BD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017BD34);
}

uint64_t sub_10017BD34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017BDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017BDF8);
}

uint64_t sub_10017BDF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017BEA0()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10017BF68(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    uint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (char *)a2 + v17;
    int v22 = *(void **)v20;
    uint64_t v21 = *((void *)v20 + 1);
    int v23 = (uint64_t *)((char *)a2 + v18);
    uint64_t v24 = (uint64_t *)((char *)a1 + v18);
    *uint64_t v19 = v22;
    v19[1] = v21;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v25 = v22;
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v23, v26);
    }
    else
    {
      *uint64_t v24 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10017C15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  uint64_t v5 = a1 + *(int *)(a2 + 48);
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10017C290(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  uint64_t v19 = a2 + v16;
  uint64_t v21 = *(void **)v19;
  uint64_t v20 = *(void *)(v19 + 8);
  int v22 = (void *)(a2 + v17);
  int v23 = (void *)(a1 + v17);
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v24 = v21;
  sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v22, v25);
  }
  else
  {
    *int v23 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10017C42C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t *)(a2 + v10);
  uint64_t v13 = *v12;
  *(unsigned char *)(v11 + 8) = *((unsigned char *)v12 + 8);
  *(void *)uint64_t v11 = v13;
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void **)(a1 + v14);
  uint64_t v18 = *(void **)(a2 + v14);
  *uint64_t v15 = v18;
  id v19 = v18;

  v15[1] = *(void *)(v16 + 8);
  if (a1 != a2)
  {
    uint64_t v20 = a3[12];
    uint64_t v21 = (void *)(a1 + v20);
    int v22 = (void *)(a2 + v20);
    sub_1000FF2E0(a1 + v20, &qword_1015CE6F8);
    sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10017C62C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(unsigned char *)(v10 + 8) = *(unsigned char *)(v11 + 8);
  uint64_t v12 = a3[11];
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v16 = sub_1000FF33C(&qword_1015CE6F8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10017C790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  uint64_t v18 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);

  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  if (a1 != a2)
  {
    uint64_t v19 = a3[12];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_1000FF2E0(a1 + v19, &qword_1015CE6F8);
    uint64_t v22 = sub_1000FF33C(&qword_1015CE6F8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10017C968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017C97C);
}

uint64_t sub_10017C97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 48);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_10017CABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017CAD0);
}

uint64_t sub_10017CAD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_1000FF33C(&qword_1015D0548);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 48);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_10017CC04()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_10017D990(319, (unint64_t *)&unk_1015D05B8, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_10017CD20(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v14 = v4;
    v13(v9, v10, v11);
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = &v7[v15];
    uint64_t v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
    {
      uint64_t v18 = sub_1000FF33C(&qword_1015CFD80);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, (uint64_t)v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
  }
  return v7;
}

uint64_t sub_10017CEC8(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v4, v5);
  uint64_t v7 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v5);
  }
  return result;
}

void *sub_10017CFD0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  id v14 = v7;
  v13(v9, v10, v11);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (const void *)(a2 + v15);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11))
  {
    uint64_t v18 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v13(v16, (uint64_t)v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_10017D124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for AttributedString();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(void (**)(void *, const void *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v10) = v18((const void *)(a1 + v15), 1, v12);
  int v19 = v18(v17, 1, v12);
  if (!v10)
  {
    if (!v19)
    {
      v14(v16, v17, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v16, v17, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  return a1;
}

_OWORD *sub_10017D2E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    uint64_t v15 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_10017D438(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = (void *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v16(a1 + v13, 1, v10);
  int v17 = v16((uint64_t)v15, 1, v10);
  if (!v8)
  {
    if (!v17)
    {
      v12((uint64_t)v14, v15, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  return a1;
}

uint64_t sub_10017D5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017D60C);
}

uint64_t sub_10017D60C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for AttributedString();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1000FF33C(&qword_1015CFD80);
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      int v17 = (char *)a1 + *(int *)(a3 + 24);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_10017D748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017D75C);
}

void *sub_10017D75C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = type metadata accessor for AttributedString();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1000FF33C(&qword_1015CFD80);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10017D88C()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_10017D990(319, (unint64_t *)&unk_1015D0670, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10017D990(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *_s21HikeRouteSnapshotViewVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t _s21HikeRouteSnapshotViewVwxx()
{
  return swift_release();
}

void *_s21HikeRouteSnapshotViewVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *_s21HikeRouteSnapshotViewVMa()
{
  return &_s21HikeRouteSnapshotViewVN;
}

ValueMetadata *_s7AddViewVMa()
{
  return &_s7AddViewVN;
}

uint64_t _s16QueryAcceleratorVwxx()
{
  return sub_100127C4C();
}

uint64_t _s16QueryAcceleratorVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s16QueryAcceleratorVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100127C4C();
  return a1;
}

uint64_t _s16QueryAcceleratorVwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100127C4C();
  return a1;
}

ValueMetadata *_s16QueryAcceleratorVMa()
{
  return &_s16QueryAcceleratorVN;
}

unint64_t _s15AccessoryButtonVwxx(uint64_t a1)
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 56);

  return sub_10012E4B0(v2);
}

uint64_t _s15AccessoryButtonVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = a2[6];
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = v8;
  unint64_t v9 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10012E3D8(v9);
  *(void *)(a1 + 56) = v9;
  return a1;
}

uint64_t _s15AccessoryButtonVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100127C4C();
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = a2[5];
  *(void *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v7 = a2[7];
  sub_10012E3D8(v7);
  unint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  sub_10012E4B0(v8);
  return a1;
}

uint64_t _s15AccessoryButtonVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100127C4C();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  sub_10012E4B0(v7);
  return a1;
}

uint64_t _s15AccessoryButtonVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15AccessoryButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15AccessoryButtonVMa()
{
  return &_s15AccessoryButtonVN;
}

uint64_t _s16DirectionsButtonVwxx(uint64_t a1)
{
  swift_release();
  sub_10012E4B0(*(void *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

void *_s16DirectionsButtonVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = a2[2];
  swift_retain();
  sub_10012E3D8(v5);
  uint64_t v7 = a2[3];
  uint64_t v6 = a2[4];
  a1[2] = v5;
  a1[3] = v7;
  a1[4] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16DirectionsButtonVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v4 = a2[2];
  sub_10012E3D8(v4);
  unint64_t v5 = a1[2];
  a1[2] = v4;
  sub_10012E4B0(v5);
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s16DirectionsButtonVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *_s16DirectionsButtonVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_release();
  sub_10012E4B0(a1[2]);
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  a1[4] = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16DirectionsButtonVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16DirectionsButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s16DirectionsButtonVMa()
{
  return &_s16DirectionsButtonVN;
}

uint64_t sub_10017E078()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10017E120(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v11 = *v12;
    uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_10017E244(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_10017E2C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  swift_retain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_10017E368(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_10017E418(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_10017E4A0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_10017E540(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10017E6E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10017E950);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          int v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_10017E978(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_10012EB20();
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(unsigned char *)(a1 + 16) = v9;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    unsigned int v14 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
    uint64_t v15 = v14[5];
    unsigned int v16 = (void *)(v11 + v15);
    int v17 = (uint64_t *)(v12 + v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *unsigned int v16 = v19;
    v16[1] = v18;
    *(void *)(v11 + v14[6]) = *(void *)(v12 + v14[6]);
    *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_10017EAB0(uint64_t a1, uint64_t a2)
{
  sub_100127C4C();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_10017EB58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(v10 + v14);
  unsigned int v16 = (uint64_t *)(v11 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  *(void *)(v10 + v13[6]) = *(void *)(v11 + v13[6]);
  *(void *)(v10 + v13[7]) = *(void *)(v11 + v13[7]);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_10017EC40(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_10012EB20();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_100127C4C();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = (void *)(v10 + v14);
  unsigned int v16 = (void *)(v11 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v10 + v13[6]) = *(void *)(v11 + v13[6]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v10 + v13[7]) = *(void *)(v11 + v13[7]);
  return a1;
}

uint64_t sub_10017ED50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  char v8 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  *(_OWORD *)(v5 + v8[5]) = *(_OWORD *)(v6 + v8[5]);
  *(void *)(v5 + v8[6]) = *(void *)(v6 + v8[6]);
  *(void *)(v5 + v8[7]) = *(void *)(v6 + v8[7]);
  return a1;
}

uint64_t sub_10017EE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100127C4C();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
  swift_unknownObjectRelease();
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  return a1;
}

uint64_t sub_10017EEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017EEF8);
}

uint64_t sub_10017EEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017EFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017EFB4);
}

uint64_t sub_10017EFB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017F058()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelActionButtons.Button(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10017F0F4()
{
  unint64_t result = qword_1015D07B8;
  if (!qword_1015D07B8)
  {
    sub_10010118C(&qword_1015D07C0);
    sub_100172F20();
    sub_100173D3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D07B8);
  }
  return result;
}

uint64_t sub_10017F170()
{
  return swift_getWitnessTable();
}

unint64_t sub_10017F37C()
{
  unint64_t result = qword_1015D07C8;
  if (!qword_1015D07C8)
  {
    sub_10010118C(&qword_1015CFEB0);
    sub_1001010F8(&qword_1015D07D0, &qword_1015CFE88);
    sub_10017F41C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D07C8);
  }
  return result;
}

unint64_t sub_10017F41C()
{
  unint64_t result = qword_1015D07D8;
  if (!qword_1015D07D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D07D8);
  }
  return result;
}

unint64_t sub_10017F474()
{
  unint64_t result = qword_1015D07E0;
  if (!qword_1015D07E0)
  {
    sub_10010118C(&qword_1015D07E8);
    sub_1001010F8(&qword_1015CFEE8, &qword_1015CFED0);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D07E0);
  }
  return result;
}

unint64_t sub_10017F548()
{
  unint64_t result = qword_1015D07F0;
  if (!qword_1015D07F0)
  {
    sub_10010118C(&qword_1015D07F8);
    sub_100174FE4();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D07F0);
  }
  return result;
}

unint64_t sub_10017F5F8()
{
  unint64_t result = qword_1015D0800;
  if (!qword_1015D0800)
  {
    sub_10010118C(&qword_1015D0808);
    sub_1001750D8();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0800);
  }
  return result;
}

uint64_t sub_10017F6A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F6C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F6DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F6F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F714()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F774()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F790()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F7AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F7C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F7E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F81C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F838()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F854()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F870()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F88C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F8A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F8C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F8E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F8FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F918()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017F958(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10017F968@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_10017F99C()
{
  return EnvironmentValues.lineLimit.setter();
}

unint64_t sub_10017F9D4()
{
  unint64_t result = qword_1015D0868;
  if (!qword_1015D0868)
  {
    sub_10010118C(&qword_1015D0860);
    sub_10017FA74();
    sub_1001010F8(&qword_1015D0828, &qword_1015D0830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0868);
  }
  return result;
}

unint64_t sub_10017FA74()
{
  unint64_t result = qword_1015D0870;
  if (!qword_1015D0870)
  {
    sub_10010118C(&qword_1015D0878);
    sub_10017FB14();
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0870);
  }
  return result;
}

unint64_t sub_10017FB14()
{
  unint64_t result = qword_1015D0880;
  if (!qword_1015D0880)
  {
    sub_10010118C(&qword_1015D0888);
    sub_100183878(&qword_1015D0890, &qword_1015D0898);
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0880);
  }
  return result;
}

unint64_t sub_10017FBD4()
{
  unint64_t result = qword_1015D08B0;
  if (!qword_1015D08B0)
  {
    sub_10010118C(&qword_1015D0850);
    sub_10017FC74();
    sub_1001010F8(&qword_1015D08D0, &qword_1015D08D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D08B0);
  }
  return result;
}

unint64_t sub_10017FC74()
{
  unint64_t result = qword_1015D08B8;
  if (!qword_1015D08B8)
  {
    sub_10010118C(&qword_1015D0858);
    sub_1001010F8(&qword_1015D08C0, &qword_1015D08C8);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D08B8);
  }
  return result;
}

unint64_t sub_10017FD44()
{
  unint64_t result = qword_1015D08E0;
  if (!qword_1015D08E0)
  {
    sub_10010118C(&qword_1015D0838);
    sub_10017F9D4();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D08E0);
  }
  return result;
}

uint64_t sub_10017FDF0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10017FE00(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_retain();
  sub_10017FDF0(v2, v3, v4);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10017FEA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10017FF48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_100180010(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100180010(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  if (a10 != 255) {
    return sub_100180034(result, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1);
  }
  return result;
}

uint64_t sub_100180034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1001800A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  if (a10 != 255) {
    return sub_1001800CC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10 & 1);
  }
  return result;
}

uint64_t sub_1001800CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_100180144()
{
  unint64_t result = qword_1015D0910;
  if (!qword_1015D0910)
  {
    sub_10010118C(&qword_1015D08F0);
    sub_1001813A4((unint64_t *)&qword_1015D0918, &qword_1015D0920, (unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0910);
  }
  return result;
}

uint64_t sub_100180208()
{
  return sub_100180E60(_s26MultipleCuratedCollectionsVMa, (uint64_t (*)(unint64_t))sub_10015CA14);
}

uint64_t sub_100180234(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_100180324()
{
  unint64_t result = qword_1015D3D00;
  if (!qword_1015D3D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3D00);
  }
  return result;
}

uint64_t sub_10018037C()
{
  unint64_t v1 = (int *)(_s26MultipleCuratedCollectionsVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  swift_bridgeObjectRelease();
  uint64_t v9 = v5 + *(int *)(v8 + 28);
  uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v7(v9, v6);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

unint64_t sub_100180550()
{
  unint64_t result = qword_1015D0960;
  if (!qword_1015D0960)
  {
    sub_10010118C(&qword_1015D0940);
    sub_1001010F8(&qword_1015D0968, &qword_1015D0970);
    sub_1001010F8(&qword_1015D0978, &qword_1015D0980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0960);
  }
  return result;
}

unint64_t sub_100180614()
{
  unint64_t result = qword_1015D0988;
  if (!qword_1015D0988)
  {
    sub_10010118C(&qword_1015D0930);
    sub_1001010F8((unint64_t *)&unk_1015D0950, &qword_1015D0948);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0988);
  }
  return result;
}

uint64_t sub_1001806E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100180798()
{
  unint64_t v1 = (int *)(_s26MultipleCuratedCollectionsVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v18 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = *(void *)(v4 + 64);
  uint64_t v6 = (id *)(v0 + ((v2 + 16) & ~v2));

  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = (char *)v6 + v1[11];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  swift_bridgeObjectRelease();
  uint64_t v11 = &v7[*(int *)(v10 + 28)];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
  {
    v9(v11, v8);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v2 | v5 | 7;
  uint64_t v13 = (((v2 + 16) & ~v2) + v18 + v5) & ~v5;
  uint64_t v14 = v13 + v17;
  uint64_t v15 = v0 + v13;
  v9((char *)(v0 + v13), v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v14, v12);
}

uint64_t sub_100180A20()
{
  uint64_t v1 = *(void *)(_s26MultipleCuratedCollectionsVMa(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0) - 8);
  return sub_10015C91C(v0 + v2, v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

unint64_t sub_100180AE8()
{
  unint64_t result = qword_1015D0A68;
  if (!qword_1015D0A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0A68);
  }
  return result;
}

uint64_t sub_100180B40()
{
  return 8;
}

uint64_t sub_100180B4C()
{
  return swift_release();
}

uint64_t sub_100180B54(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100180B68(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100180B78()
{
  return sub_100180E60(_s18SingleCuratedGuideVMa, (uint64_t (*)(unint64_t))sub_10015E54C);
}

uint64_t sub_100180BA8()
{
  uint64_t v1 = (int *)(_s18SingleCuratedGuideVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[10];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100180D00()
{
  return sub_100180E60(_s18UserGeneratedGuideVMa, (uint64_t (*)(unint64_t))sub_10015F74C);
}

uint64_t sub_100180D30()
{
  uint64_t v1 = (int *)(_s18UserGeneratedGuideVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;

  sub_100127C4C();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100180E60(uint64_t (*a1)(void), uint64_t (*a2)(unint64_t))
{
  uint64_t v4 = *(void *)(a1(0) - 8);
  return a2(v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
}

uint64_t sub_100180ECC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  char v4 = *(unsigned char *)(a1 + 104);
  uint64_t v8 = *(void *)(a1 + 160);
  uint64_t v9 = *(void *)(a1 + 152);
  uint64_t v7 = *(void *)(a1 + 168);
  uint64_t v6 = *(void *)(a1 + 176);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100180FE4(v9, v8, v7, v6);
  return a1;
}

uint64_t sub_100180FE4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10017F958(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100181074(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10017FDF0(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100181114(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10017FDF0(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001811A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100181244()
{
  unint64_t result = qword_1015D0AF0;
  if (!qword_1015D0AF0)
  {
    sub_10010118C(&qword_1015D0AE8);
    sub_1001812E4();
    sub_1001010F8(&qword_1015D0B18, &qword_1015D0B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0AF0);
  }
  return result;
}

unint64_t sub_1001812E4()
{
  unint64_t result = qword_1015D0AF8;
  if (!qword_1015D0AF8)
  {
    sub_10010118C((uint64_t *)&unk_1015D0B00);
    sub_1001813A4((unint64_t *)&unk_1015D8DF0, &qword_1015D0B10, (unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0AF8);
  }
  return result;
}

uint64_t sub_1001813A4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100181440()
{
  unint64_t result = qword_1015D0B30;
  if (!qword_1015D0B30)
  {
    sub_10010118C(&qword_1015D0B28);
    sub_1001817C4(&qword_1015D0820, &qword_1015D0818, &qword_1015D0828, &qword_1015D0830);
    sub_1001010F8(&qword_1015D0B18, &qword_1015D0B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0B30);
  }
  return result;
}

unint64_t sub_100181500()
{
  unint64_t result = qword_1015D0B48;
  if (!qword_1015D0B48)
  {
    sub_10010118C(&qword_1015D0AB8);
    sub_1001010F8(&qword_1015D0B50, &qword_1015D0AB0);
    sub_1001010F8(&qword_1015D0B18, &qword_1015D0B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0B48);
  }
  return result;
}

unint64_t sub_1001815C4()
{
  unint64_t result = qword_1015D0B58;
  if (!qword_1015D0B58)
  {
    sub_10010118C(&qword_1015D0AA0);
    sub_1001010F8(&qword_1015D0B60, &qword_1015D0A98);
    sub_10012F140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0B58);
  }
  return result;
}

unint64_t sub_100181664()
{
  unint64_t result = qword_1015D0BC0;
  if (!qword_1015D0BC0)
  {
    sub_10010118C(&qword_1015D0BB8);
    sub_100181704();
    sub_1001010F8(&qword_1015D0828, &qword_1015D0830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0BC0);
  }
  return result;
}

unint64_t sub_100181704()
{
  unint64_t result = qword_1015D0BC8;
  if (!qword_1015D0BC8)
  {
    sub_10010118C(&qword_1015D0BD0);
    sub_1001817C4(&qword_1015D0BD8, &qword_1015D0BE0, (unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0BC8);
  }
  return result;
}

uint64_t sub_1001817C4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100181860()
{
  unint64_t result = qword_1015D0BF0;
  if (!qword_1015D0BF0)
  {
    sub_10010118C(&qword_1015D0BE8);
    sub_100181664();
    sub_1001010F8(&qword_1015D0B18, &qword_1015D0B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0BF0);
  }
  return result;
}

uint64_t sub_100181900(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1001819DC(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_10010118C(a3);
    sub_1001010F8(a4, a3);
    swift_getOpaqueTypeConformance2();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100181AE0()
{
  unint64_t result = qword_1015D0C48;
  if (!qword_1015D0C48)
  {
    sub_10010118C(&qword_1015D0C10);
    sub_1001010F8(&qword_1015D0C38, &qword_1015D0C30);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0C48);
  }
  return result;
}

uint64_t sub_100181BB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_100181C94()
{
  unint64_t result = qword_1015D0C70;
  if (!qword_1015D0C70)
  {
    sub_10010118C(&qword_1015D0C50);
    sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0C70);
  }
  return result;
}

unint64_t sub_100181D64()
{
  unint64_t result = qword_1015D0C78;
  if (!qword_1015D0C78)
  {
    sub_10010118C(&qword_1015D0C68);
    sub_1001010F8(&qword_1015D0C80, &qword_1015D0C88);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0C78);
  }
  return result;
}

unint64_t sub_100181E34()
{
  unint64_t result = qword_1015D0C90;
  if (!qword_1015D0C90)
  {
    sub_10010118C(&qword_1015D0C58);
    sub_100181C94();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0C90);
  }
  return result;
}

id *sub_100181EE4(id *a1)
{
  id v2 = *a1;
  sub_10012EB20();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100181F64(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  long long v15 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 112);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v12 = *(_OWORD *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  char v9 = *(unsigned char *)(a1 + 160);
  char v10 = *(unsigned char *)(a1 + 161);
  swift_release();
  sub_100182044(v18, v17, v16, v2, v3, v4, v5, v6, v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v8, v7, v9,
    v10);
  return a1;
}

uint64_t sub_100182044(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20)
{
  if (a20)
  {
    sub_10017F958(a1, a2, a3 & 1);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_10017F958(a9, a10, a11 & 1);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_10018216C()
{
  sub_100127C4C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1001821D0()
{
  return sub_1001656C8(v0 + 16, *(void *)(v0 + 112));
}

uint64_t sub_1001821F0(uint64_t result)
{
  *(unsigned char *)(result + 145) = 1;
  return result;
}

uint64_t sub_1001821FC(uint64_t result)
{
  *(unsigned char *)(result + 145) = 0;
  return result;
}

uint64_t sub_100182204()
{
  uint64_t v1 = (int *)(_s13TappableEntryVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v16 = *(void *)(*(void *)v1 + 64);
  uint64_t v17 = (v2 + 16) & ~v2;
  uint64_t v18 = v0;
  uint64_t v3 = (id *)(v0 + v17);

  sub_100127C4C();
  uint64_t v4 = (char *)v3 + v1[8];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  uint64_t v8 = &v4[*(int *)(v7 + 20)];
  v6(v8, v5);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  char v10 = &v8[*(int *)(v9 + 20)];
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(void (**)(char *, uint64_t))(v12 + 8);
  v13(v10, v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v14 = &v8[*(int *)(v9 + 48)];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }

  return _swift_deallocObject(v18, v17 + v16, v2 | 7);
}

uint64_t sub_100182444()
{
  return sub_100183A34(_s13TappableEntryVMa, sub_1001657B4);
}

unint64_t sub_100182470()
{
  unint64_t result = qword_1015D0CD0;
  if (!qword_1015D0CD0)
  {
    sub_10010118C(&qword_1015D0CC8);
    sub_1001817C4(&qword_1015D0820, &qword_1015D0818, &qword_1015D0828, &qword_1015D0830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0CD0);
  }
  return result;
}

unint64_t sub_10018250C()
{
  unint64_t result = qword_1015D0CE8;
  if (!qword_1015D0CE8)
  {
    sub_10010118C(&qword_1015D0CB8);
    sub_100182470();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0CE8);
  }
  return result;
}

unint64_t sub_1001825B8()
{
  unint64_t result = qword_1015D0D00;
  if (!qword_1015D0D00)
  {
    sub_10010118C(&qword_1015D0CF0);
    sub_1001732B8(&qword_1015CFB78, (void (*)(uint64_t))_s5LabelVMa);
    sub_1001010F8(&qword_1015D0B18, &qword_1015D0B20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0D00);
  }
  return result;
}

uint64_t sub_100182698(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100182708(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100182774()
{
  return sub_1001674D8();
}

uint64_t sub_10018277C()
{
  return sub_100182A98(96);
}

uint64_t sub_100182784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100168CF0(a1, a2, a3, v3 + 16);
}

uint64_t sub_10018278C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 16);
  swift_retain();
  sub_10012EB20();
  swift_retain();
  return a1;
}

uint64_t sub_1001827FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100182828(uint64_t a1)
{
  return a1;
}

id sub_100182854@<X0>(uint64_t a1@<X8>)
{
  return sub_100167640(*(long long **)(v1 + 16), a1);
}

unint64_t sub_10018285C()
{
  unint64_t result = qword_1015D0D88;
  if (!qword_1015D0D88)
  {
    sub_10010118C(&qword_1015D0D90);
    sub_100182908();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0D88);
  }
  return result;
}

unint64_t sub_100182908()
{
  unint64_t result = qword_1015D0D98;
  if (!qword_1015D0D98)
  {
    sub_10010118C(&qword_1015D0DA0);
    sub_1001010F8(&qword_1015D0DA8, &qword_1015D0DB0);
    sub_10012F140();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0D98);
  }
  return result;
}

uint64_t sub_1001829A8()
{
  return sub_100182A98(96);
}

uint64_t sub_1001829B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001678A4(a1, v2 + 16, a2);
}

unint64_t sub_1001829B8()
{
  unint64_t result = qword_1015D0DC8;
  if (!qword_1015D0DC8)
  {
    sub_10010118C(&qword_1015D0DC0);
    sub_100182A34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0DC8);
  }
  return result;
}

unint64_t sub_100182A34()
{
  unint64_t result = qword_1015D0DD0;
  if (!qword_1015D0DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0DD0);
  }
  return result;
}

uint64_t sub_100182A90()
{
  return sub_100182A98(104);
}

uint64_t sub_100182A98(uint64_t a1)
{
  swift_release();

  sub_100127C4C();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

id sub_100182AF8()
{
  return sub_100168B28(v0 + 16, *(void *)(v0 + 96));
}

unint64_t sub_100182B04()
{
  unint64_t result = qword_1015D0E28;
  if (!qword_1015D0E28)
  {
    sub_10010118C(&qword_1015D0E20);
    sub_100183878((unint64_t *)&qword_1015D0E30, &qword_1015D0E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0E28);
  }
  return result;
}

uint64_t sub_100182BA0()
{
  swift_release();

  sub_100127C4C();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

id sub_100182BF4()
{
  return sub_100168BE4(*(void *)(v0 + 16), (long long *)(v0 + 24));
}

unint64_t sub_100182C0C()
{
  unint64_t result = qword_1015D0E50;
  if (!qword_1015D0E50)
  {
    sub_10010118C(&qword_1015D0E48);
    sub_1001010F8((unint64_t *)&unk_1015D0950, &qword_1015D0948);
    sub_10017F41C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0E50);
  }
  return result;
}

uint64_t sub_100182CAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v8 = *(void *)(a1 + 168);
  unsigned __int8 v6 = *(unsigned char *)(a1 + 184);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10017F958(v2, v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100182DBC(v8, v7, v6);
  return a1;
}

uint64_t sub_100182DBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xDu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100182DD8()
{
  sub_100127C4C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

void sub_100182E3C()
{
  sub_100169AA0(v0 + 16);
}

id *sub_100182E5C(id *a1)
{
  id v2 = *a1;
  sub_10012EB20();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100182ECC()
{
  sub_100127C4C();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100182F20()
{
  sub_10016A238(v0 + 16);
}

void *sub_100182F3C(void *a1, void *a2)
{
  return a2;
}

uint64_t sub_100182F98()
{
  sub_100127C4C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10012E4B0(*(void *)(v0 + 72));

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100182FEC()
{
  return sub_10016F294(v0 + 16);
}

uint64_t sub_100182FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10016F33C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100182FFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183030(uint64_t a1)
{
  return a1;
}

unint64_t *sub_10018305C(unint64_t *a1)
{
  return a1;
}

unint64_t sub_100183088()
{
  unint64_t result = qword_1015D0E80;
  if (!qword_1015D0E80)
  {
    sub_10010118C(&qword_1015D0E78);
    sub_1001010F8(&qword_1015D0E88, &qword_1015D0E90);
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0E80);
  }
  return result;
}

unint64_t sub_10018314C()
{
  unint64_t result = qword_1015D0F00;
  if (!qword_1015D0F00)
  {
    sub_10010118C(&qword_1015D0EF8);
    sub_1001813A4((unint64_t *)&qword_1015D0918, &qword_1015D0920, (unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    sub_1001010F8(&qword_1015D0F08, &qword_1015D0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F00);
  }
  return result;
}

uint64_t _s12ContactBadgeVMa()
{
  return sub_1000F5520();
}

uint64_t sub_10018323C@<X0>(uint64_t a1@<X8>)
{
  return sub_10016D1B4(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_100183248(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001832C4()
{
  return sub_100183248(&qword_1015D0F58, &qword_1015D0F60, (void (*)(void))sub_1001832F4);
}

unint64_t sub_1001832F4()
{
  unint64_t result = qword_1015D0F68;
  if (!qword_1015D0F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F68);
  }
  return result;
}

unint64_t sub_100183348()
{
  unint64_t result = qword_1015D0F70;
  if (!qword_1015D0F70)
  {
    sub_10010118C(&qword_1015D0F30);
    sub_1001833C4();
    sub_1001835C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F70);
  }
  return result;
}

unint64_t sub_1001833C4()
{
  unint64_t result = qword_1015D0F78;
  if (!qword_1015D0F78)
  {
    sub_10010118C(&qword_1015D0F48);
    sub_100183464();
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F78);
  }
  return result;
}

unint64_t sub_100183464()
{
  unint64_t result = qword_1015D0F80;
  if (!qword_1015D0F80)
  {
    sub_10010118C(&qword_1015D0F88);
    sub_100183504();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F80);
  }
  return result;
}

unint64_t sub_100183504()
{
  unint64_t result = qword_1015D0F90;
  if (!qword_1015D0F90)
  {
    sub_10010118C(&qword_1015D0F98);
    sub_100183878((unint64_t *)&qword_1015D0E30, &qword_1015D0E38);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0F90);
  }
  return result;
}

unint64_t sub_1001835C4()
{
  unint64_t result = qword_1015D0FB0;
  if (!qword_1015D0FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0FB0);
  }
  return result;
}

uint64_t sub_100183620(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183654(uint64_t a1)
{
  return a1;
}

uint64_t sub_100183680()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100183690()
{
  unint64_t result = qword_1015D0FC0;
  if (!qword_1015D0FC0)
  {
    sub_10010118C(&qword_1015D0FB8);
    sub_1001744D4();
    sub_1001010F8(&qword_1015CFE10, &qword_1015CFE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0FC0);
  }
  return result;
}

uint64_t sub_100183730()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100183740()
{
  sub_100127C4C();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10018377C()
{
  return sub_1001701C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100183788()
{
  return sub_100183248(&qword_1015D0FD8, &qword_1015D0FE0, (void (*)(void))sub_1001837B8);
}

unint64_t sub_1001837B8()
{
  unint64_t result = qword_1015D0FE8;
  if (!qword_1015D0FE8)
  {
    sub_10010118C(&qword_1015D0FF0);
    sub_100183878(&qword_1015D0FF8, &qword_1015D1000);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D0FE8);
  }
  return result;
}

uint64_t sub_100183878(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001838E8()
{
  uint64_t v1 = (int *)(_s12ActionButtonVMa(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  sub_100127C4C();
  uint64_t v7 = v6 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for PlaceSummaryViewModelActionButtons.Button(0);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100183A08()
{
  return sub_100183A34(_s12ActionButtonVMa, sub_100171AEC);
}

uint64_t sub_100183A34(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

double sub_100183AB0@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_100171BB4(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100183AB8()
{
  unint64_t result = qword_1015D1038;
  if (!qword_1015D1038)
  {
    sub_10010118C(&qword_1015D1030);
    sub_1001010F8(&qword_1015D1040, &qword_1015D1048);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1038);
  }
  return result;
}

unint64_t sub_100183B58()
{
  unint64_t result = qword_1015D1058[0];
  if (!qword_1015D1058[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D1058);
  }
  return result;
}

void *_s21HikeRouteSnapshotViewVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryViewModelActionButtons(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryViewModelActionButtons(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s13StackedImagesVMa()
{
  return &_s13StackedImagesVN;
}

ValueMetadata *_s20InvisibleLoadingViewVMa()
{
  return &_s20InvisibleLoadingViewVN;
}

uint64_t sub_100183C94()
{
  return sub_10018448C();
}

void *sub_100183CA4(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (void *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    long long v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_100183DB0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_100183E24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_100183EB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_OWORD *sub_100183F44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_100183FB4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_10018403C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1001841DC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 16) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10018443CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 16] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t _s16BorderlessButtonVMa()
{
  return sub_1000F5520();
}

uint64_t sub_10018447C()
{
  return sub_10018448C();
}

uint64_t sub_10018448C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100184520(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    unsigned int v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_100184624(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_100184698(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

void *sub_100184728(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1001847B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100184828(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1001848B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100184A50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 8) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x100184CACLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 8] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

ValueMetadata *_s11SearchBadgeVMa()
{
  return &_s11SearchBadgeVN;
}

ValueMetadata *_s17ActionButtonStyleVMa()
{
  return &_s17ActionButtonStyleVN;
}

unint64_t sub_100184CF8()
{
  unint64_t result = qword_1015D1160;
  if (!qword_1015D1160)
  {
    sub_10010118C(&qword_1015D0810);
    sub_1001817C4(&qword_1015D0820, &qword_1015D0818, &qword_1015D0828, &qword_1015D0830);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1160);
  }
  return result;
}

unint64_t sub_100184DC8()
{
  unint64_t result = qword_1015D1168;
  if (!qword_1015D1168)
  {
    sub_10010118C(&qword_1015D1170);
    sub_10017FBD4();
    sub_10017FD44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1168);
  }
  return result;
}

unint64_t sub_100184E48()
{
  unint64_t result = qword_1015D1178;
  if (!qword_1015D1178)
  {
    sub_10010118C(&qword_1015D1180);
    sub_100180550();
    sub_100180614();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1178);
  }
  return result;
}

unint64_t sub_100184EC8()
{
  unint64_t result = qword_1015D1188;
  if (!qword_1015D1188)
  {
    sub_10010118C(&qword_1015D09A0);
    sub_1001010F8((unint64_t *)&unk_1015D09D0, &qword_1015D0998);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1188);
  }
  return result;
}

uint64_t sub_100184F9C()
{
  return sub_1001819DC(&qword_1015D1190, &qword_1015D1198, &qword_1015D0A80, &qword_1015D0A88);
}

unint64_t sub_100184FD8()
{
  unint64_t result = qword_1015D11A0;
  if (!qword_1015D11A0)
  {
    sub_10010118C(&qword_1015D0AC0);
    sub_100181500();
    sub_1001815C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11A0);
  }
  return result;
}

unint64_t sub_100185058()
{
  unint64_t result = qword_1015D11A8;
  if (!qword_1015D11A8)
  {
    sub_10010118C(&qword_1015D11B0);
    sub_1001819DC(&qword_1015D0C40, &qword_1015D0C28, &qword_1015D0C30, &qword_1015D0C38);
    sub_100181AE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11A8);
  }
  return result;
}

unint64_t sub_1001850F8()
{
  unint64_t result = qword_1015D11B8;
  if (!qword_1015D11B8)
  {
    sub_10010118C(&qword_1015D11C0);
    sub_100181D64();
    sub_100181E34();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11B8);
  }
  return result;
}

uint64_t sub_100185174()
{
  return sub_1001010F8(&qword_1015D11C8, &qword_1015D0CB0);
}

unint64_t sub_1001851B4()
{
  unint64_t result = qword_1015D11D0;
  if (!qword_1015D11D0)
  {
    sub_10010118C(&qword_1015D11D8);
    sub_100183878(&qword_1015D0CE0, &qword_1015D0CD8);
    sub_10018250C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11D0);
  }
  return result;
}

unint64_t sub_100185254()
{
  unint64_t result = qword_1015D11E0;
  if (!qword_1015D11E0)
  {
    sub_10010118C(&qword_1015D0CF8);
    sub_1001825B8();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11E0);
  }
  return result;
}

uint64_t sub_100185300()
{
  return sub_100183248(&qword_1015D11E8, &qword_1015D11F0, (void (*)(void))sub_100185344);
}

unint64_t sub_100185344()
{
  unint64_t result = qword_1015D11F8;
  if (!qword_1015D11F8)
  {
    sub_10010118C(&qword_1015D1200);
    sub_1001010F8(&qword_1015D1208, &qword_1015D1210);
    sub_10017F41C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D11F8);
  }
  return result;
}

uint64_t sub_1001853E4()
{
  return sub_100183248(&qword_1015D1218, &qword_1015D0D48, (void (*)(void))sub_100185428);
}

uint64_t sub_100185428()
{
  return sub_100183248(&qword_1015D1220, &qword_1015D0D40, (void (*)(void))sub_100185458);
}

unint64_t sub_100185458()
{
  unint64_t result = qword_1015D1228;
  if (!qword_1015D1228)
  {
    sub_10010118C(&qword_1015D0D38);
    sub_100185504();
    sub_1001732B8(&qword_1015D1260, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1228);
  }
  return result;
}

unint64_t sub_100185504()
{
  unint64_t result = qword_1015D1230;
  if (!qword_1015D1230)
  {
    sub_10010118C(&qword_1015D0D30);
    sub_100183248(&qword_1015D1238, &qword_1015D0D28, (void (*)(void))sub_1001855DC);
    sub_1001732B8(&qword_1015D1260, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1230);
  }
  return result;
}

unint64_t sub_1001855DC()
{
  unint64_t result = qword_1015D1240;
  if (!qword_1015D1240)
  {
    sub_10010118C(&qword_1015D0D20);
    sub_100185658();
    sub_10017F41C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1240);
  }
  return result;
}

unint64_t sub_100185658()
{
  unint64_t result = qword_1015D1248;
  if (!qword_1015D1248)
  {
    sub_10010118C(&qword_1015D0D18);
    sub_10010118C(&qword_1015D0D08);
    sub_1001010F8(&qword_1015D0D60, &qword_1015D0D08);
    swift_getOpaqueTypeConformance2();
    sub_1001010F8(&qword_1015D1250, &qword_1015D1258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1248);
  }
  return result;
}

uint64_t sub_100185758()
{
  return sub_1001857A8(&qword_1015D1268, &qword_1015D1270, (void (*)(void))sub_100185814);
}

uint64_t sub_1001857A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100185814()
{
  unint64_t result = qword_1015D1278;
  if (!qword_1015D1278)
  {
    sub_10010118C(&qword_1015D0E40);
    sub_100182C0C();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1278);
  }
  return result;
}

unint64_t sub_1001858C4()
{
  unint64_t result = qword_1015D1280;
  if (!qword_1015D1280)
  {
    sub_10010118C(&qword_1015D0E58);
    sub_1001010F8(&qword_1015D0E68, &qword_1015D0E60);
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1280);
  }
  return result;
}

uint64_t sub_100185994()
{
  return sub_1001010F8(&qword_1015D1288, &qword_1015D1290);
}

uint64_t sub_1001859D0()
{
  return sub_1001010F8(&qword_1015D1298, &qword_1015D12A0);
}

uint64_t sub_100185A0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100185C14()
{
  return sub_100185C50(&qword_1015D12A8, &qword_1015D12B0, (void (*)(void))sub_100183690);
}

uint64_t sub_100185C50(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100185CC8()
{
  return sub_1001010F8(&qword_1015D12B8, &qword_1015D12C0);
}

uint64_t sub_100185D04()
{
  return sub_1001010F8(&qword_1015D12C8, &qword_1015D12D0);
}

unint64_t sub_100185D44()
{
  unint64_t result = qword_1015D12D8;
  if (!qword_1015D12D8)
  {
    sub_10010118C((uint64_t *)&unk_1015D12E0);
    sub_10010118C(&qword_1015D1020);
    sub_1001010F8(&qword_1015D1050, &qword_1015D1020);
    sub_100183B58();
    swift_getOpaqueTypeConformance2();
    sub_1001732B8((unint64_t *)&qword_1015D8100, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D12D8);
  }
  return result;
}

uint64_t sub_100185E64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185E80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185E9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185EB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185EFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185F18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185F5C()
{
  return sub_1001664A8(v0[4], v0[2], v0[3]);
}

uint64_t sub_100185F68@<X0>(uint64_t a1@<X8>)
{
  return sub_10016E810(*(void *)(v1 + 32), *(void *)(v1 + 16), a1);
}

unint64_t sub_100185F74()
{
  unint64_t result = qword_1015D12F8;
  if (!qword_1015D12F8)
  {
    sub_10010118C(&qword_1015D12F0);
    sub_100174FE4();
    sub_1001010F8(&qword_1015D1300, &qword_1015D1308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D12F8);
  }
  return result;
}

uint64_t sub_10018601C(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001860B8()
{
  type metadata accessor for Button();

  return swift_getWitnessTable();
}

uint64_t sub_100186100()
{
  return sub_1001010F8(&qword_1015D1380, &qword_1015D1388);
}

uint64_t sub_10018613C()
{
  sub_10010118C(&qword_1015D12F0);
  _s9ImageViewVMa();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();

  return swift_getWitnessTable();
}

unint64_t sub_100186204()
{
  unint64_t result = qword_1015D1390;
  if (!qword_1015D1390)
  {
    sub_10010118C(&qword_1015D1328);
    sub_100183248(&qword_1015D1398, &qword_1015D1320, (void (*)(void))sub_1001862D0);
    sub_1001010F8((unint64_t *)&unk_1015CFF90, &qword_1015CFF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1390);
  }
  return result;
}

unint64_t sub_1001862D0()
{
  unint64_t result = qword_1015D13A0;
  if (!qword_1015D13A0)
  {
    sub_10010118C(&qword_1015D1318);
    sub_100186370();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D13A0);
  }
  return result;
}

unint64_t sub_100186370()
{
  unint64_t result = qword_1015D13A8;
  if (!qword_1015D13A8)
  {
    sub_10010118C(&qword_1015D1310);
    sub_1001732B8(&qword_1015D13B0, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_1001010F8((unint64_t *)&unk_1015CFF50, &qword_1015D8800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D13A8);
  }
  return result;
}

uint64_t sub_100186440()
{
  return sub_1001010F8(&qword_1015D13B8, &qword_1015D13C0);
}

unint64_t sub_100186480()
{
  unint64_t result = qword_1015D13C8;
  if (!qword_1015D13C8)
  {
    sub_10010118C((uint64_t *)&unk_1015D13D0);
    sub_100175084();
    sub_1001010F8((unint64_t *)&unk_1015D0FA0, &qword_1015D81A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D13C8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaceSummaryStringFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2 >= 3uLL) {
    id v5 = v4;
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

void destroy for PlaceSummaryStringFormat(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 3) {
}
  }

uint64_t assignWithCopy for PlaceSummaryStringFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 3uLL)
  {
    if ((unint64_t)v5 >= 3)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 3)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for PlaceSummaryStringFormat(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 3uLL)
  {
    if (v5 >= 3)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
  }
  *(void *)a1 = v5;
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryStringFormat(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 3;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryStringFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryStringFormat()
{
  return &type metadata for PlaceSummaryStringFormat;
}

void *initializeBufferWithCopyOfBuffer for PlaceSummaryStringFormatType(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for PlaceSummaryStringFormatType(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for PlaceSummaryStringFormatType(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for PlaceSummaryStringFormatType(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryStringFormatType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryStringFormatType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100186948(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100186960(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryStringFormatType()
{
  return &type metadata for PlaceSummaryStringFormatType;
}

uint64_t sub_1001869AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(uint64_t (**)(char *))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  char v7 = v6(v5);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7 & 1;
}

uint64_t sub_100186BF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void (**)(char *))(a1 + 32);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_100186D88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4 = (void *)(a1 + *a3);
  if (*v4)
  {
    uint64_t v5 = v4[1];
    v8[4] = *v4;
    v8[5] = v5;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1001869AC;
    v8[3] = a4;
    id v6 = _Block_copy(v8);
    swift_retain();
    swift_release();
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

unint64_t sub_100186ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v28 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v28);
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  size_t v10 = *(uint64_t (**)(uint64_t))(v3 + OBJC_IVAR____TtC4Maps34SearchHomeUserGuidesLayoutProvider_isDeletable);
  if (v10)
  {
    swift_retain();
    char v11 = v10(a1);
    sub_10006C5D8((uint64_t)v10);
    if (v11)
    {
      uint64_t v12 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v28);
      unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a2;
      *(void *)(v14 + 24) = a3;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
      uint64_t v33 = sub_100188258;
      uint64_t v34 = v14;
      aBlock = _NSConcreteStackBlock;
      uint64_t v30 = 1107296256;
      uint64_t v31 = sub_10033153C;
      uint64_t v32 = &unk_1012DB9C8;
      int v15 = _Block_copy(&aBlock);
      sub_1000F4F24(a2);
      swift_release();
      id v16 = sub_100B7E834(v15);
      _Block_release(v15);
      id v17 = v16;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v4 + OBJC_IVAR____TtC4Maps34SearchHomeUserGuidesLayoutProvider_isShareable);
  if (v18)
  {
    swift_retain();
    char v19 = v18(a1);
    sub_10006C5D8((uint64_t)v18);
    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v21 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v28);
      unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v23 + v22, (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
      uint64_t v33 = sub_100188100;
      uint64_t v34 = v23;
      aBlock = _NSConcreteStackBlock;
      uint64_t v30 = 1107296256;
      uint64_t v31 = sub_10033153C;
      uint64_t v32 = &unk_1012DB978;
      id v24 = _Block_copy(&aBlock);
      swift_release();
      id v25 = sub_100B7EA98(v24);
      _Block_release(v24);
      id v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  return v35;
}

void sub_1001872E0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a3)
  {
    if (IndexPath.row.getter() < 0)
    {
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
    else
    {
      a3();
    }
  }
}

void sub_100187378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    char v7 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC4Maps34SearchHomeUserGuidesLayoutProvider_shareHandler);
    if (v7)
    {
      swift_retain();
      v7(a4);
      sub_10006C5D8((uint64_t)v7);
    }
  }
}

id sub_100187480()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SearchHomeUserGuidesLayoutProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for SearchHomeUserGuidesLayoutProvider()
{
  return self;
}

id sub_10018766C(uint64_t a1, void *a2, uint64_t a3)
{
  id v6 = [v3 cellReuseIdentifier];
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v8 = [a2 dequeueReusableCellWithReuseIdentifier:v6 forIndexPath:isa];

  self;
  uint64_t v9 = swift_dynamicCastObjCClass();
  if (v9)
  {
    size_t v10 = (void *)v9;
    sub_1000F2354(a3, (uint64_t)v14);
    type metadata accessor for SearchHomeUserGuidesCellViewModel();
    if (swift_dynamicCast())
    {
      [v10 setCollectionInfo:*(void *)&v13[OBJC_IVAR____TtC4Maps33SearchHomeUserGuidesCellViewModel_collections]];
    }
    return v10;
  }
  else
  {

    id v12 = objc_allocWithZone((Class)UICollectionViewCell);
    return [v12 init];
  }
}

id sub_100187914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    sub_100186ECC(a1, a3, a4);
  }
  sub_100100830(0, (unint64_t *)&unk_1015DBA50);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self configurationWithActions:isa];

  return v10;
}

void *sub_100187AE8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v36 = a1;
  uint64_t v35 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v5 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = self;
  id v16 = [v15 fractionalWidthDimension:1.0];
  id v17 = [v15 estimatedDimension:a4];
  id v18 = [self sizeWithWidthDimension:v16 heightDimension:v17];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = v18;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v21 = [self boundarySupplementaryItemWithLayoutSize:v19 elementKind:v20 alignment:1];

  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v8);
  UICollectionLayoutListConfiguration.init(appearance:)();
  UICollectionLayoutListConfiguration.headerTopPadding.setter();
  id v22 = [self clearColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v24 = (void *)swift_allocObject();
  void v24[2] = v23;
  uint64_t v25 = v33;
  uint64_t v26 = v34;
  v24[3] = v33;
  v24[4] = v26;
  sub_1000F4F24(v25);
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:), v35);
  UICollectionLayoutListConfiguration.headerMode.setter();
  sub_100100830(0, (unint64_t *)&unk_1015D14E0);
  uint64_t v27 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100F5DFF0;
  *(void *)(v28 + 32) = v21;
  uint64_t v39 = v28;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&unk_1015D14F0);
  id v29 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 setBoundarySupplementaryItems:isa];

  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v38);
  return v27;
}

uint64_t sub_100187F70()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100187FA8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100187FE0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100188028(uint64_t a1)
{
  return sub_100187914(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100188034()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100188100(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100187378(a1, a2, v6, v7);
}

uint64_t sub_100188184()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v5 = v3 | 7;
  uint64_t v6 = (v3 + 32) & ~v3;
  uint64_t v7 = v6 + v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return _swift_deallocObject(v0, v7, v5);
}

void sub_100188258(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IndexPath();
  uint64_t v5 = *(void (**)(void))(v2 + 16);

  sub_1001872E0(a1, a2, v5);
}

void sub_1001882E0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(v1 + 16))(v1, isa);
}

uint64_t sub_10018833C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, Class))(v1 + 16))(v1, isa);

  return v3;
}

unint64_t sub_1001883B8()
{
  unint64_t result = qword_1015D1520;
  if (!qword_1015D1520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1520);
  }
  return result;
}

uint64_t sub_10018840C()
{
  return sub_1001010F8(&qword_1015D1528, &qword_1015D1530);
}

uint64_t sub_100188448()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_1016112F8);
  sub_1000F2248(v10, (uint64_t)qword_1016112F8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_100188724()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611310);
  sub_1000F2248(v0, (uint64_t)qword_101611310);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100188788()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611328);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611328);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_100188840()
{
  uint64_t result = swift_getKeyPath();
  qword_101611340 = result;
  return result;
}

uint64_t sub_10018886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_100188890, 0, 0);
}

uint64_t sub_100188890()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBB90 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611340;
  *(void *)(v0 + 80) = qword_101611340;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D1640, &qword_1015D1648);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1001889EC;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1001889EC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_100188B40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100188B40()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611340;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_100188C1C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188E10;
  }
  else {
    uint64_t v2 = sub_100188D70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100188D70()
{
  *(unsigned char *)(v0 + 147) = *(unsigned char *)(v0 + 144);
  sub_10018AAD4();
  static IntentResult.result<A>(value:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100188DF8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100188E10()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100188E28@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100188E64()
{
  return swift_release();
}

uint64_t (*sub_100188EAC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100188F08;
}

uint64_t sub_100188F0C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100188F48()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t (*sub_100188F80(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100188F08;
}

void sub_100188FDC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_100189028()
{
  if (qword_1015CBB90 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_100189088()
{
  unint64_t result = qword_1015D1538;
  if (!qword_1015D1538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1538);
  }
  return result;
}

unint64_t sub_1001890E0()
{
  unint64_t result = qword_1015D1540;
  if (!qword_1015D1540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1540);
  }
  return result;
}

uint64_t sub_100189134()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100189168()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001891B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBB80, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611310, a1);
}

uint64_t sub_100189200@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBB88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611328);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_10018927C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_100188890, 0, 0);
}

uint64_t sub_100189330@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10018A694();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100189358()
{
  return 0xD000000000000021;
}

unint64_t sub_100189378()
{
  unint64_t result = qword_1015D1550;
  if (!qword_1015D1550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1550);
  }
  return result;
}

unint64_t sub_1001893D0()
{
  unint64_t result = qword_1015D1558;
  if (!qword_1015D1558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1558);
  }
  return result;
}

unint64_t sub_100189428()
{
  unint64_t result = qword_1015D1560;
  if (!qword_1015D1560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1560);
  }
  return result;
}

unint64_t sub_100189480()
{
  unint64_t result = qword_1015D1568;
  if (!qword_1015D1568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1568);
  }
  return result;
}

unint64_t sub_1001894D8()
{
  unint64_t result = qword_1015D1570;
  if (!qword_1015D1570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1570);
  }
  return result;
}

unint64_t sub_100189530()
{
  unint64_t result = qword_1015D1578;
  if (!qword_1015D1578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1578);
  }
  return result;
}

void *sub_100189584()
{
  return &protocol witness table for String;
}

uint64_t sub_100189590(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001895B0, 0, 0);
}

uint64_t sub_1001895B0()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)DrivePreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidTolls];
  *uint64_t v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10018967C(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1001896A0, 0, 0);
}

uint64_t sub_1001896A0()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)DrivePreferences) initWithDefaults:v2];

  [v3 setAvoidTolls:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1001897A4()
{
  unint64_t result = qword_1015D1580;
  if (!qword_1015D1580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1580);
  }
  return result;
}

unint64_t sub_1001897FC()
{
  unint64_t result = qword_1015D1588;
  if (!qword_1015D1588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1588);
  }
  return result;
}

unint64_t sub_100189854()
{
  unint64_t result = qword_1015D1590;
  if (!qword_1015D1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1590);
  }
  return result;
}

unint64_t sub_1001898AC()
{
  unint64_t result = qword_1015D1598;
  if (!qword_1015D1598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1598);
  }
  return result;
}

void *sub_100189900()
{
  return &protocol witness table for String;
}

uint64_t sub_10018990C@<X0>(uint64_t *a1@<X8>)
{
  sub_100189BFC();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10018994C@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBB78, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1016112F8, a1);
}

uint64_t sub_100189984@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1000F2248(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100189A28()
{
  return sub_1001010F8(&qword_1015D15A0, &qword_1015D15A8);
}

uint64_t sub_100189A64(uint64_t a1)
{
  unint64_t v2 = sub_100189378();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100189AB4()
{
  unint64_t result = qword_1015D15B0;
  if (!qword_1015D15B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D15B0);
  }
  return result;
}

uint64_t sub_100189B08(uint64_t a1)
{
  unint64_t v2 = sub_100189BFC();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_100189B54(uint64_t a1)
{
  unint64_t v2 = sub_1001898AC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100189BA4()
{
  unint64_t result = qword_1015D15B8;
  if (!qword_1015D15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D15B8);
  }
  return result;
}

unint64_t sub_100189BFC()
{
  unint64_t result = qword_1015D15C0[0];
  if (!qword_1015D15C0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D15C0);
  }
  return result;
}

uint64_t sub_100189C50(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100189CE0, 0, 0);
}

uint64_t sub_100189CE0()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D1530);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D1640, &qword_1015D1648);
  *uint64_t v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100189DF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001893D0();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

uint64_t sub_100189EA8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100189FC0()
{
  unint64_t result = qword_1015D15D8;
  if (!qword_1015D15D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D15D8);
  }
  return result;
}

unint64_t sub_10018A018()
{
  unint64_t result = qword_1015D15E0[0];
  if (!qword_1015D15E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D15E0);
  }
  return result;
}

uint64_t sub_10018A070(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001893D0();
  *uint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_10018A124(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_10018A224(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001893D0();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_10018A2D8()
{
  unint64_t result = qword_1015D15F8;
  if (!qword_1015D15F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D15F8);
  }
  return result;
}

unint64_t sub_10018A330()
{
  unint64_t result = qword_1015D1600;
  if (!qword_1015D1600)
  {
    sub_10010118C(qword_1015D1608);
    sub_100189854();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1600);
  }
  return result;
}

uint64_t sub_10018A3A4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100189530();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10018A458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10005056C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

ValueMetadata *type metadata accessor for AvoidTollsQuery()
{
  return &type metadata for AvoidTollsQuery;
}

uint64_t destroy for AvoidTollsEntity.UpdateIntent_value()
{
  swift_release();

  return swift_release();
}

void *_s4Maps16AvoidTollsEntityV18UpdateIntent_valueVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AvoidTollsEntity.UpdateIntent_value(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for AvoidTollsEntity.UpdateIntent_value(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for AvoidTollsEntity.UpdateIntent_value()
{
  return &type metadata for AvoidTollsEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidTollsEntity()
{
  return &type metadata for AvoidTollsEntity;
}

uint64_t sub_10018A658()
{
  return sub_1001010F8(&qword_1015D1620, &qword_1015D1628);
}

uint64_t sub_10018A694()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D1660);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  id v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_100189378();
  id v19 = v23;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v10, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

unint64_t sub_10018AAD4()
{
  unint64_t result = qword_1015D1678;
  if (!qword_1015D1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1678);
  }
  return result;
}

uint64_t sub_10018AB28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10018AB34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D1680);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10018B000()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TransitSchedulesContext();
  return [super dealloc];
}

uint64_t type metadata accessor for TransitSchedulesContext()
{
  return self;
}

id sub_10018B0A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(void *)(v10 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10) != 1)
  {
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  }
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  Class v15 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a3, 1, v13) != 1)
  {
    Class v15 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  }
  id v16 = [v5 initWithDepartureSequence:a1 timeZone:isa scheduleWindowStartDate:v15 includeAllDirections:a4 & 1];

  swift_unknownObjectRelease();
  return v16;
}

id sub_10018B258(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C((uint64_t *)&unk_1015D9A00);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  sub_1000FF27C(a2, (uint64_t)v13, (uint64_t *)&unk_1015D9A00);
  sub_1000FF27C(a3, (uint64_t)v10, (uint64_t *)&unk_1015D9410);
  objc_allocWithZone((Class)TransitSchedulesViewController);
  uint64_t v14 = v4;
  uint64_t v15 = swift_unknownObjectRetain();
  *(void *)&v14[OBJC_IVAR____TtC4Maps23TransitSchedulesContext_viewController] = sub_10018B0A4(v15, (uint64_t)v13, (uint64_t)v10, a4);

  id v16 = (objc_class *)type metadata accessor for TransitSchedulesContext();
  v19.receiver = v14;
  v19.super_class = v16;
  id v17 = [super init];
  sub_1000FF2E0(a3, (uint64_t *)&unk_1015D9410);
  sub_1000FF2E0(a2, (uint64_t *)&unk_1015D9A00);
  return v17;
}

id sub_10018B488()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UniqueEntityHelper();
  return [super dealloc];
}

uint64_t type metadata accessor for UniqueEntityHelper()
{
  return self;
}

uint64_t *sub_10018B4E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v9 = (void *)a2[4];
    uint64_t v8 = a2[5];
    a1[4] = (uint64_t)v9;
    a1[5] = v8;
    uint64_t v10 = (void *)a2[6];
    a1[6] = (uint64_t)v10;
    uint64_t v11 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
    uint64_t v12 = v11[11];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    swift_bridgeObjectRetain();
    id v15 = v9;
    id v16 = v10;
    uint64_t v17 = sub_1000FF33C(&qword_1015D16E8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
    uint64_t v18 = v11[12];
    objc_super v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *objc_super v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v11[13];
    uint64_t v23 = (uint64_t *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v11[14];
    unsigned int v27 = *(void **)((char *)a2 + v26);
    *(uint64_t *)((char *)v4 + v26) = (uint64_t)v27;
    uint64_t v28 = v11[15];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (char *)a2 + v28;
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
    uint64_t v31 = v11[16];
    char v32 = (uint64_t *)((char *)v4 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *char v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)v4 + v11[17]) = *(uint64_t *)((char *)a2 + v11[17]);
    uint64_t v35 = v11[18];
    uint64_t v36 = *(void **)((char *)a2 + v35);
    *(uint64_t *)((char *)v4 + v35) = (uint64_t)v36;
    uint64_t v37 = v11[19];
    uint64_t v38 = *(void **)((char *)a2 + v37);
    *(uint64_t *)((char *)v4 + v37) = (uint64_t)v38;
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v39 = v27;
    swift_retain();
    swift_bridgeObjectRetain();
    id v40 = v36;
    id v41 = v38;
  }
  return v4;
}

void sub_10018B6C0(uint64_t a1)
{
  swift_bridgeObjectRelease();

  objc_super v2 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v3 = a1 + v2[11];
  uint64_t v4 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  int v5 = *(void **)(a1 + v2[19]);
}

uint64_t sub_10018B7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v7;
  uint64_t v9 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v9;
  uint64_t v10 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v11 = v10[11];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  swift_bridgeObjectRetain();
  id v14 = v8;
  id v15 = v9;
  uint64_t v16 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v12, v13, v16);
  uint64_t v17 = v10[12];
  uint64_t v18 = (void *)(a1 + v17);
  objc_super v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v10[13];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v10[14];
  uint64_t v26 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v26;
  uint64_t v27 = v10[15];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(unsigned char *)(v28 + 16) = *(unsigned char *)(v29 + 16);
  uint64_t v30 = v10[16];
  uint64_t v31 = (void *)(a1 + v30);
  char v32 = (void *)(a2 + v30);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  *(void *)(a1 + v10[17]) = *(void *)(a2 + v10[17]);
  uint64_t v34 = v10[18];
  uint64_t v35 = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = v35;
  uint64_t v36 = v10[19];
  uint64_t v37 = *(void **)(a2 + v36);
  *(void *)(a1 + v36) = v37;
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  id v39 = v35;
  id v40 = v37;
  return a1;
}

void *sub_10018B94C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  uint64_t v6 = (void *)a2[4];
  uint64_t v7 = (void *)a1[4];
  a1[4] = v6;
  id v8 = v6;

  a1[5] = a2[5];
  uint64_t v9 = (void *)a2[6];
  uint64_t v10 = (void *)a1[6];
  a1[6] = v9;
  id v11 = v9;

  uint64_t v12 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v13 = v12[11];
  id v14 = (char *)a1 + v13;
  id v15 = (char *)a2 + v13;
  uint64_t v16 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[12];
  uint64_t v18 = (void *)((char *)a1 + v17);
  objc_super v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v12[13];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v12[14];
  uint64_t v24 = *(void **)((char *)a2 + v23);
  uint64_t v25 = *(void **)((char *)a1 + v23);
  *(void *)((char *)a1 + v23) = v24;
  id v26 = v24;

  uint64_t v27 = v12[15];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  char v30 = v29[16];
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  v28[16] = v30;
  uint64_t v31 = v12[16];
  char v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *char v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + v12[17]) = *(void *)((char *)a2 + v12[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v12[18];
  uint64_t v36 = *(void **)((char *)a2 + v35);
  uint64_t v37 = *(void **)((char *)a1 + v35);
  *(void *)((char *)a1 + v35) = v36;
  id v38 = v36;

  uint64_t v39 = v12[19];
  id v40 = *(void **)((char *)a2 + v39);
  id v41 = *(void **)((char *)a1 + v39);
  *(void *)((char *)a1 + v39) = v40;
  id v42 = v40;

  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10018BB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v8 = v7[11];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(_OWORD *)(a1 + v7[12]) = *(_OWORD *)(a2 + v7[12]);
  *(_OWORD *)(a1 + v7[13]) = *(_OWORD *)(a2 + v7[13]);
  *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
  uint64_t v12 = v7[15];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(unsigned char *)(v13 + 16) = *(unsigned char *)(v14 + 16);
  *(_OWORD *)(a1 + v7[16]) = *(_OWORD *)(a2 + v7[16]);
  *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
  *(void *)(a1 + v7[18]) = *(void *)(a2 + v7[18]);
  *(void *)(a1 + v7[19]) = *(void *)(a2 + v7[19]);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10018BC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v8 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v9 = v8[11];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[12];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v8[13];
  objc_super v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *objc_super v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v8[14];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  uint64_t v25 = v8[15];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(unsigned char *)(v26 + 16) = *(unsigned char *)(v27 + 16);
  *(_OWORD *)(a1 + v8[16]) = *(_OWORD *)(a2 + v8[16]);
  swift_release();
  *(void *)(a1 + v8[17]) = *(void *)(a2 + v8[17]);
  swift_bridgeObjectRelease();
  uint64_t v28 = v8[18];
  uint64_t v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);

  uint64_t v30 = v8[19];
  uint64_t v31 = *(void **)(a1 + v30);
  *(void *)(a1 + v30) = *(void *)(a2 + v30);

  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10018BE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10018BE28);
}

uint64_t sub_10018BE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapsElevationChartViewModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10018BE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10018BEA8);
}

uint64_t sub_10018BEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapsElevationChartViewModel(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MapsElevationChart()
{
  uint64_t result = qword_1015D1748;
  if (!qword_1015D1748) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10018BF64()
{
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10018BFFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018C018@<X0>(uint64_t a1@<X8>)
{
  sub_10018C0D4(&v3);
  *(void *)a1 = v3;
  *(_OWORD *)(a1 + 8) = xmmword_100F61840;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = 0x3FF0000000000000;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  swift_retain();
  sub_10019A644(0x6F69746176656C45, 0xE90000000000006ELL, 2u);
  swift_release();

  return sub_100182DBC(0x6F69746176656C45, 0xE90000000000006ELL, 2u);
}

uint64_t sub_10018C0D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v56 = sub_1000FF33C(&qword_1015D1780);
  __chkstk_darwin(v56);
  uint64_t v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000FF33C(&qword_1015D1788);
  __chkstk_darwin(v4);
  long long v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D1790);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D1798);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D17A0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(*(void *)(v1 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 56))
                    + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle))
  {
    case 1:
    case 2:
      sub_10018E37C((uint64_t)v12);
      uint64_t v56 = sub_10010118C(&qword_1015D1858);
      uint64_t v55 = sub_10010118C(&qword_1015D17D0);
      uint64_t v16 = sub_10010118C(&qword_1015D1860);
      uint64_t v17 = sub_10010118C(&qword_1015D1868);
      uint64_t v18 = sub_10010118C(&qword_1015D1870);
      uint64_t v19 = sub_10010118C(&qword_1015D1878);
      uint64_t v20 = sub_1001010F8(&qword_1015D1880, &qword_1015D1870);
      uint64_t v21 = sub_1001010F8(&qword_1015D1888, &qword_1015D1878);
      uint64_t v58 = v18;
      unint64_t v59 = v19;
      uint64_t v60 = v20;
      unint64_t v61 = v21;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v23 = sub_1001010F8(&qword_1015D1890, &qword_1015D1868);
      uint64_t v58 = v16;
      unint64_t v59 = v17;
      uint64_t v60 = OpaqueTypeConformance2;
      unint64_t v61 = v23;
      uint64_t v24 = swift_getOpaqueTypeConformance2();
      unint64_t v25 = sub_10019A65C();
      uint64_t v58 = v56;
      unint64_t v59 = v55;
      uint64_t v60 = v24;
      unint64_t v61 = v25;
      swift_getOpaqueTypeConformance2();
      break;
    case 3:
      sub_10018CFF0((uint64_t)v9);
      uint64_t v26 = sub_10010118C(&qword_1015D1828);
      uint64_t v27 = sub_10010118C(&qword_1015D17D0);
      uint64_t v28 = sub_10010118C(&qword_1015D1830);
      uint64_t v29 = sub_10010118C(&qword_1015D1838);
      uint64_t v30 = sub_10010118C(&qword_1015D1840);
      uint64_t v31 = sub_1001010F8(&qword_1015D1848, &qword_1015D1840);
      uint64_t v32 = sub_1001010F8(&qword_1015D1850, &qword_1015D1838);
      uint64_t v58 = v30;
      unint64_t v59 = v29;
      uint64_t v60 = v31;
      unint64_t v61 = v32;
      uint64_t v33 = swift_getOpaqueTypeConformance2();
      uint64_t v58 = v28;
      unint64_t v59 = v29;
      uint64_t v60 = v33;
      unint64_t v61 = v32;
      uint64_t v34 = swift_getOpaqueTypeConformance2();
      unint64_t v35 = sub_10019A65C();
      uint64_t v58 = v26;
      unint64_t v59 = v27;
      uint64_t v60 = v34;
      unint64_t v61 = v35;
      swift_getOpaqueTypeConformance2();
      break;
    case 4:
      sub_10018D6F4((uint64_t)v6);
      uint64_t v36 = sub_10010118C(&qword_1015D1800);
      uint64_t v37 = sub_10010118C(&qword_1015D1808);
      unint64_t v38 = sub_10019A6C8();
      uint64_t v58 = v37;
      unint64_t v59 = v38;
      uint64_t v39 = swift_getOpaqueTypeConformance2();
      uint64_t v58 = v36;
      unint64_t v59 = v39;
      swift_getOpaqueTypeConformance2();
      break;
    case 5:
      sub_10018DC20((uint64_t)v3);
      uint64_t v55 = sub_10010118C(&qword_1015D17A8);
      uint64_t v40 = sub_10010118C(&qword_1015D17B0);
      uint64_t v41 = sub_10010118C(&qword_1015D17B8);
      uint64_t v42 = sub_10010118C(&qword_1015D17C0);
      uint64_t v43 = sub_10010118C(&qword_1015D17C8);
      uint64_t v44 = sub_10010118C(&qword_1015D17D0);
      uint64_t v45 = sub_10010118C(&qword_1015D17D8);
      uint64_t v46 = sub_1001010F8(&qword_1015D17E0, &qword_1015D17D8);
      unint64_t v47 = sub_10019A65C();
      uint64_t v58 = v45;
      unint64_t v59 = v44;
      uint64_t v60 = v46;
      unint64_t v61 = v47;
      uint64_t v48 = swift_getOpaqueTypeConformance2();
      uint64_t v58 = v43;
      unint64_t v59 = v44;
      uint64_t v60 = v48;
      unint64_t v61 = v47;
      uint64_t v49 = swift_getOpaqueTypeConformance2();
      uint64_t v50 = sub_1001010F8(&qword_1015D17F0, &qword_1015D17C0);
      uint64_t v58 = v41;
      unint64_t v59 = v42;
      uint64_t v60 = v49;
      unint64_t v61 = v50;
      uint64_t v51 = swift_getOpaqueTypeConformance2();
      uint64_t v52 = sub_1001010F8(&qword_1015D17F8, &qword_1015D17B0);
      uint64_t v58 = v55;
      unint64_t v59 = v40;
      uint64_t v60 = v51;
      unint64_t v61 = v52;
      swift_getOpaqueTypeConformance2();
      break;
    default:
      sub_10018C80C((uint64_t)v15);
      sub_10019A768();
      break;
  }
  uint64_t result = AnyView.init<A>(_:)();
  *uint64_t v57 = result;
  return result;
}

uint64_t sub_10018C80C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v56 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D18D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v55 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MapsElevationChart();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v44 = sub_1000FF33C(&qword_1015D1840);
  uint64_t v47 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D18C0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  uint64_t v49 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&KeyPath - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000FF33C(&qword_1015D18E0);
  uint64_t v45 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D18B8);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&KeyPath - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000FF33C(&qword_1015D18A0);
  __chkstk_darwin(v51);
  uint64_t v46 = (uint64_t)&KeyPath - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D18E8);
  uint64_t v53 = *(void *)(v20 - 8);
  uint64_t v54 = v20;
  __chkstk_darwin(v20);
  uint64_t v52 = (char *)&KeyPath - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v1;
  double v57 = *(double *)(v1 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10019CE1C(v1, (uint64_t)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  sub_10019A9F0((uint64_t)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D18F0);
  sub_1000FF33C(&qword_1015D18F8);
  sub_1001010F8(&qword_1015D1900, &qword_1015D18F0);
  *(void *)&long long v59 = type metadata accessor for BarMark();
  *((void *)&v59 + 1) = &type metadata for Color;
  *(void *)&long long v60 = &protocol witness table for BarMark;
  *((void *)&v60 + 1) = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  Chart.init<A, B, C>(_:id:content:)();
  uint64_t v24 = sub_1001010F8(&qword_1015D1848, &qword_1015D1840);
  uint64_t v25 = v44;
  View.chartXAxis(_:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v25);
  *(void *)&long long v59 = v25;
  *((void *)&v59 + 1) = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v48;
  View.chartYAxis(_:)();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v26);
  uint64_t v27 = *(void *)(*(void *)(v43 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 56))
                  + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gapWidth);
  uint64_t v28 = v45;
  uint64_t v29 = v50;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v18, v14, v50);
  uint64_t v30 = &v18[*(int *)(v16 + 44)];
  *(void *)uint64_t v30 = v27;
  *((void *)v30 + 1) = 0;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v31 = v46;
  sub_1000FF27C((uint64_t)v18, v46, &qword_1015D18B8);
  uint64_t v32 = (_OWORD *)(v31 + *(int *)(v51 + 36));
  long long v33 = v60;
  *uint64_t v32 = v59;
  v32[1] = v33;
  v32[2] = v61;
  sub_1000FF2E0((uint64_t)v18, &qword_1015D18B8);
  double v57 = sub_100201358();
  uint64_t v58 = v34;
  uint64_t v35 = type metadata accessor for ScaleType();
  uint64_t v36 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v55, 1, 1, v35);
  sub_1000FF33C(&qword_1015D17D0);
  sub_10019A860();
  sub_10019A65C();
  uint64_t v37 = v52;
  View.chartYScale<A>(domain:type:)();
  sub_1000FF2E0(v36, &qword_1015D18D8);
  sub_1000FF2E0(v31, &qword_1015D18A0);
  uint64_t v39 = v53;
  uint64_t v38 = v54;
  uint64_t v40 = v56;
  (*(void (**)(uint64_t, char *, uint64_t))(v53 + 16))(v56, v37, v54);
  *(_WORD *)(v40 + *(int *)(sub_1000FF33C(&qword_1015D17A0) + 36)) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v37, v38);
}

uint64_t sub_10018CFF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = sub_1000FF33C(&qword_1015D18D8);
  __chkstk_darwin(v3 - 8);
  uint64_t v39 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MapsElevationChart();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = sub_1000FF33C(&qword_1015D1840);
  uint64_t v43 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D1830);
  uint64_t v44 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_1000FF33C(&qword_1015D1828);
  uint64_t v37 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v42 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1000FF33C(&qword_1015D1790);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v34 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v47 = *(double *)(v2 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10019CE1C(v2, (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10019A9F0((uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D18F0);
  sub_1000FF33C(&qword_1015D18F8);
  sub_1001010F8(&qword_1015D1900, &qword_1015D18F0);
  uint64_t v49 = type metadata accessor for BarMark();
  uint64_t v50 = &type metadata for Color;
  uint64_t v51 = &protocol witness table for BarMark;
  uint64_t v52 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  Chart.init<A, B, C>(_:id:content:)();
  uint64_t v46 = v2;
  uint64_t v18 = sub_1000FF33C(&qword_1015D1838);
  uint64_t v19 = sub_1001010F8(&qword_1015D1848, &qword_1015D1840);
  uint64_t v20 = sub_1001010F8(&qword_1015D1850, &qword_1015D1838);
  View.chartXAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v10, v8);
  uint64_t v45 = v2;
  uint64_t v49 = v8;
  uint64_t v50 = (void *)v18;
  uint64_t v51 = (void *)v19;
  uint64_t v52 = (void *)v20;
  uint64_t v21 = v42;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v11);
  uint64_t v23 = sub_1002017A4();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_7;
  }
  double v25 = *(double *)(v23 + 8 * v24 + 24);
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1002017A4();
  if (*(void *)(v26 + 16))
  {
    double v27 = *(double *)(v26 + 32);
    swift_bridgeObjectRelease();
    if (v25 <= v27)
    {
      double v47 = v25;
      double v48 = v27;
      uint64_t v28 = type metadata accessor for ScaleType();
      uint64_t v29 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v39, 1, 1, v28);
      sub_1000FF33C(&qword_1015D17D0);
      uint64_t v49 = v11;
      uint64_t v50 = (void *)v18;
      uint64_t v51 = (void *)OpaqueTypeConformance2;
      uint64_t v52 = (void *)v20;
      swift_getOpaqueTypeConformance2();
      sub_10019A65C();
      uint64_t v30 = v34;
      uint64_t v31 = v38;
      View.chartYScale<A>(domain:type:)();
      sub_1000FF2E0(v29, &qword_1015D18D8);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v31);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v35 + 32))(v40, v30, v36);
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10018D6F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D1A20);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000FF33C(&qword_1015D1820);
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1000FF33C(&qword_1015D1808);
  __chkstk_darwin(v27);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1000FF33C(&qword_1015D1800);
  uint64_t v30 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D1788);
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v29 = v15;
  __chkstk_darwin(v15);
  uint64_t v26 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v1;
  sub_1000FF33C(&qword_1015D1A28);
  sub_10019BFB0(&qword_1015D1A30, &qword_1015D1A28, (void (*)(void))sub_10019C01C);
  Chart.init(content:)();
  uint64_t v17 = type metadata accessor for MapsElevationChartViewModel(0);
  sub_1000FF27C(*(void *)(v1 + *(int *)(v17 + 56)) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_blendMode, (uint64_t)v4, &qword_1015D1A20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    uint64_t v18 = v32;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v32, enum case for BlendMode.normal(_:), v5);
    sub_1000FF2E0((uint64_t)v4, &qword_1015D1A20);
  }
  else
  {
    uint64_t v18 = v32;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v32, v4, v5);
  }
  uint64_t v19 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v12[*(int *)(v27 + 36)], v18, v5);
  uint64_t v20 = v31;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v31);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  unint64_t v21 = sub_10019A6C8();
  View.chartXAxis(_:)();
  sub_1000FF2E0((uint64_t)v12, &qword_1015D1808);
  uint64_t v36 = v19;
  unint64_t v37 = v21;
  swift_getOpaqueTypeConformance2();
  unint64_t v22 = v26;
  uint64_t v23 = v33;
  View.chartYAxis(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v23);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v34, v22, v29);
}

uint64_t sub_10018DC20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v57 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D18D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D17D8);
  uint64_t v6 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v5 - 8);
  uint64_t v58 = v5;
  long long v59 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1000FF33C(&qword_1015D17C8);
  uint64_t v46 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000FF33C(&qword_1015D17B8);
  uint64_t v49 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  double v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D17A8);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1000FF33C(&qword_1015D1780);
  uint64_t v51 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v50 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v60 = v1;
  sub_1000FF33C(&qword_1015D1A78);
  sub_10019C244();
  Chart.init(content:)();
  sub_1002022CC();
  uint64_t v67 = v15;
  uint64_t v68 = v16;
  uint64_t v17 = type metadata accessor for ScaleType();
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v44(v4, 1, 1, v17);
  uint64_t v18 = sub_1000FF33C(&qword_1015D17D0);
  uint64_t v19 = sub_1001010F8(&qword_1015D17E0, &qword_1015D17D8);
  unint64_t v20 = sub_10019A65C();
  uint64_t v45 = v10;
  uint64_t v21 = v58;
  View.chartXScale<A>(domain:type:)();
  sub_1000FF2E0((uint64_t)v4, &qword_1015D18D8);
  unint64_t v22 = v8;
  uint64_t v23 = v21;
  ((void (*)(char *, uint64_t))v59[1])(v22, v21);
  uint64_t v24 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v1;
  uint64_t v25 = sub_1002017A4();
  uint64_t v26 = *(void *)(v25 + 16);
  if (!v26)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_7;
  }
  double v27 = *(double *)(v25 + 8 * v26 + 24);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1002017A4();
  if (*(void *)(v28 + 16))
  {
    double v29 = *(double *)(v28 + 32);
    swift_bridgeObjectRelease();
    if (v27 <= v29)
    {
      double v65 = v27;
      double v66 = v29;
      v44(v4, 1, 1, v17);
      uint64_t v61 = v23;
      uint64_t v62 = v18;
      uint64_t v63 = v19;
      unint64_t v64 = v20;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      uint64_t v31 = v48;
      uint64_t v32 = v47;
      uint64_t v33 = v45;
      View.chartYScale<A>(domain:type:)();
      sub_1000FF2E0((uint64_t)v4, &qword_1015D18D8);
      uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v33, v32);
      long long v59 = &v44;
      __chkstk_darwin(v34);
      *(&v44 - 2) = v24;
      uint64_t v35 = sub_1000FF33C(&qword_1015D17C0);
      uint64_t v61 = v32;
      uint64_t v62 = v18;
      uint64_t v63 = OpaqueTypeConformance2;
      unint64_t v64 = v20;
      uint64_t v36 = swift_getOpaqueTypeConformance2();
      uint64_t v37 = sub_1001010F8(&qword_1015D17F0, &qword_1015D17C0);
      uint64_t v39 = v52;
      uint64_t v38 = v53;
      View.chartXAxis<A>(content:)();
      uint64_t v40 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v31, v39);
      __chkstk_darwin(v40);
      *(&v44 - 2) = v24;
      sub_1000FF33C(&qword_1015D17B0);
      uint64_t v61 = v39;
      uint64_t v62 = v35;
      uint64_t v63 = v36;
      unint64_t v64 = v37;
      swift_getOpaqueTypeConformance2();
      sub_1001010F8(&qword_1015D17F8, &qword_1015D17B0);
      uint64_t v41 = v50;
      uint64_t v42 = v56;
      View.chartYAxis<A>(content:)();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v38, v42);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v51 + 32))(v57, v41, v54);
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10018E37C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v2 = sub_1000FF33C(&qword_1015D18D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MapsElevationChart();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D1870);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  uint64_t v60 = v9;
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D1860);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  uint64_t v62 = v12;
  __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000FF33C(&qword_1015D1858);
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v58 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000FF33C(&qword_1015D1798);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  double v48 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v65 = *(double *)(v1 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 68));
  uint64_t KeyPath = swift_getKeyPath();
  sub_10019CE1C(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10019A9F0((uint64_t)v7, v17 + v16);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10019AA70;
  *(void *)(v18 + 24) = v17;
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D1910);
  sub_1000FF33C(&qword_1015D1918);
  sub_1001010F8(&qword_1015D1920, &qword_1015D1910);
  uint64_t v19 = sub_10010118C(&qword_1015D1928);
  uint64_t v20 = sub_10010118C(&qword_1015D1930);
  uint64_t v21 = sub_1001010F8(&qword_1015D1938, &qword_1015D1930);
  unint64_t v22 = sub_100180324();
  uint64_t v67 = v20;
  uint64_t v68 = &type metadata for String;
  uint64_t v69 = v21;
  unint64_t v70 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v19;
  uint64_t v68 = &type metadata for String;
  uint64_t v69 = OpaqueTypeConformance2;
  unint64_t v70 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v56;
  Chart.init<A, B, C>(_:id:content:)();
  uint64_t v64 = v1;
  uint64_t v25 = sub_1000FF33C(&qword_1015D1878);
  uint64_t v26 = sub_1001010F8(&qword_1015D1880, &qword_1015D1870);
  uint64_t v27 = sub_1001010F8(&qword_1015D1888, &qword_1015D1878);
  uint64_t v28 = v57;
  uint64_t v29 = v59;
  View.chartXAxis<A>(content:)();
  uint64_t v30 = v24;
  uint64_t v31 = v29;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v30, v29);
  uint64_t v63 = v1;
  uint64_t v32 = sub_1000FF33C(&qword_1015D1868);
  uint64_t v67 = v31;
  uint64_t v68 = (void *)v25;
  uint64_t v69 = v26;
  unint64_t v70 = v27;
  uint64_t v33 = v58;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v61;
  uint64_t v36 = sub_1001010F8(&qword_1015D1890, &qword_1015D1868);
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v35);
  uint64_t v37 = sub_1002017A4();
  uint64_t v38 = *(void *)(v37 + 16);
  if (!v38)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_7;
  }
  double v39 = *(double *)(v37 + 8 * v38 + 24);
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_1002017A4();
  if (*(void *)(v40 + 16))
  {
    double v41 = *(double *)(v40 + 32);
    swift_bridgeObjectRelease();
    if (v39 <= v41)
    {
      double v65 = v39;
      double v66 = v41;
      uint64_t v42 = type metadata accessor for ScaleType();
      uint64_t v43 = (uint64_t)v53;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v53, 1, 1, v42);
      sub_1000FF33C(&qword_1015D17D0);
      uint64_t v67 = v35;
      uint64_t v68 = (void *)v32;
      uint64_t v69 = v34;
      unint64_t v70 = v36;
      swift_getOpaqueTypeConformance2();
      sub_10019A65C();
      uint64_t v44 = v48;
      uint64_t v45 = v52;
      View.chartYScale<A>(domain:type:)();
      sub_1000FF2E0(v43, &qword_1015D18D8);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v45);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(v54, v44, v50);
    }
    __break(1u);
    goto LABEL_6;
  }
LABEL_7:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10018EB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  v25[0] = a1;
  uint64_t v30 = a3;
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v6 - 8);
  v25[2] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v25[1] = (char *)v25 - v9;
  uint64_t v10 = type metadata accessor for BarMark();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  __chkstk_darwin(v10);
  uint64_t v26 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  id v13 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v15 = v14;
  unint64_t v16 = *(void (**)(char *, uint64_t))(v31 + 8);
  v31 += 8;
  v16(v5, v3);
  uint64_t v32 = v15;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v17 = v25[0];
  uint64_t v18 = v27;
  Measurement<>.converted(to:)();
  Measurement.value.getter();
  uint64_t v20 = v19;
  v16(v5, v3);
  uint64_t v32 = v20;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = type metadata accessor for MapsElevationChartViewModel(0);
  unint64_t v22 = v26;
  BarMark.init<A, B>(x:y:width:height:stacking:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + *(int *)(v21 + 64)))(v17, v18);
  uint64_t v32 = Color.init(_:)();
  uint64_t v23 = v28;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v22, v23);
}

uint64_t sub_10018EFB8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015D1930);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D1928);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  uint64_t v21 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  sub_1000FF33C(&qword_1015D19F0);
  sub_10019B450();
  Plot.init(content:)();
  uint64_t v25 = sub_10019B508(a1);
  uint64_t v26 = v13;
  uint64_t v14 = sub_1001010F8(&qword_1015D1938, &qword_1015D1930);
  unint64_t v15 = sub_100180324();
  ChartContent.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v29 = sub_10019B86C(a1);
  uint64_t v30 = v16;
  uint64_t v25 = v5;
  uint64_t v26 = &type metadata for String;
  uint64_t v27 = v14;
  unint64_t v28 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v17 = v20;
  ChartContent.accessibilityValue<A>(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v12, v17);
}

uint64_t sub_10018F258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapsElevationChart();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  v10[5] = a1;
  sub_10019CE1C(a2, (uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10019A9F0((uint64_t)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D18F0);
  sub_1000FF33C(&qword_1015D18F8);
  sub_1001010F8(&qword_1015D1900, &qword_1015D18F0);
  v10[1] = type metadata accessor for BarMark();
  v10[2] = &type metadata for Color;
  v10[3] = &protocol witness table for BarMark;
  v10[4] = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  sub_10019BD3C();
  return ForEach<>.init(_:content:)();
}

uint64_t sub_10018F444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v4 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v8 - 8);
  uint64_t v40 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)v34 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v34 - v13;
  uint64_t v15 = type metadata accessor for BarMark();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v45 = v15;
  __chkstk_darwin(v15);
  uint64_t v42 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_1000FF33C(&qword_1015D18F8);
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  double v39 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  v34[1] = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v35 = a1;
  id v18 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v37 = v5 + 8;
  v34[0] = v21;
  v21(v7, v4);
  uint64_t v48 = v20;
  uint64_t v36 = v14;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v22 = v47;
  uint64_t v23 = sub_1002017A4();
  uint64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    uint64_t v25 = *(void *)(v23 + 8 * v24 + 24);
    swift_bridgeObjectRelease();
    uint64_t v48 = v25;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v26 = v35;
    Measurement<>.converted(to:)();
    Measurement.value.getter();
    uint64_t v28 = v27;
    ((void (*)(char *, uint64_t))v34[0])(v7, v4);
    uint64_t v48 = v28;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for MapsElevationChartViewModel(0);
    uint64_t v30 = v42;
    BarMark.init<A, B>(x:yStart:yEnd:width:)();
    (*(void (**)(uint64_t, uint64_t))(v22 + *(int *)(v29 + 64)))(v26, v22);
    uint64_t v48 = Color.init(_:)();
    uint64_t v31 = v39;
    uint64_t v32 = v45;
    ChartContent.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v32);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v46, v31, v43);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_10018F9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100201C84();
  sub_10018FA1C(v2, 1, a1);

  return swift_bridgeObjectRelease();
}

void sub_10018FA1C(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  int v29 = a2;
  uint64_t v31 = a3;
  uint64_t v6 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v6 - 8);
  uint64_t v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for MapsElevationChart();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    uint64_t v28 = v4;
    uint64_t v32 = _swiftEmptyArrayStorage;
    sub_10025AFB8(0, v13, 0);
    uint64_t v14 = v32;
    uint64_t v15 = (uint64_t *)(a1 + 32);
    unint64_t v16 = v32[2];
    do
    {
      uint64_t v17 = *v15;
      uint64_t v32 = v14;
      unint64_t v18 = v14[3];
      if (v16 >= v18 >> 1)
      {
        sub_10025AFB8(v18 > 1, v16 + 1, 1);
        uint64_t v14 = v32;
      }
      v14[2] = v16 + 1;
      v14[v16 + 4] = v17;
      v15 += 2;
      ++v16;
      --v13;
    }
    while (v13);
    uint64_t v4 = v28;
  }
  uint64_t v19 = *(void *)(v4 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 56));
  uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_xAxisFont);
  if (v20) {
    id v21 = *(id *)(v19 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_xAxisFont);
  }
  else {
    id v21 = [self preferredFontForTextStyle:UIFontTextStyleCaption2];
  }
  sub_10019CE1C(v4, (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = v22 + v11;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = v14;
  sub_10019A9F0((uint64_t)v12, v24 + v22);
  *(unsigned char *)(v24 + v23) = v29 & 1;
  *(void *)((v23 & 0xFFFFFFFFFFFFFFF8) + v24 + 8) = v21;
  id v25 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v26 = v21;
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000FF33C(&qword_1015D19C0);
  sub_10019B2D4();
  AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_10018FD70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for MapsElevationChart();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_1002017A4();
  sub_10019CE1C(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  sub_10019A9F0((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_bridgeObjectRetain_n();
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000FF33C(&qword_1015D1940);
  sub_10019ADAC();
  AxisMarks.init<A>(preset:position:values:content:)();
  return swift_bridgeObjectRelease();
}

unint64_t sub_10018FF9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, int a4@<W4>, void (*a5)(char *, char *, uint64_t)@<X5>, char *a6@<X8>)
{
  uint64_t v171 = a5;
  int v170 = a4;
  char v165 = a6;
  uint64_t v9 = sub_1000FF33C(&qword_1015D19D8);
  __chkstk_darwin(v9);
  uint64_t v164 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D1978);
  __chkstk_darwin(v11 - 8);
  uint64_t v149 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v13 - 8);
  uint64_t v156 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v15 - 8);
  uint64_t v155 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_1000FF33C(&qword_1015D1980);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v140 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v145 = (char *)&v138 - v19;
  __chkstk_darwin(v20);
  long long v148 = (char *)&v138 - v21;
  uint64_t v154 = sub_1000FF33C(&qword_1015D1998);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v138 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v139 = (char *)&v138 - v24;
  __chkstk_darwin(v25);
  uint64_t v143 = (char *)&v138 - v26;
  __chkstk_darwin(v27);
  uint64_t v144 = (char *)&v138 - v28;
  __chkstk_darwin(v29);
  char v146 = (char *)&v138 - v30;
  __chkstk_darwin(v31);
  long long v147 = (char *)&v138 - v32;
  uint64_t v33 = sub_1000FF33C(&qword_1015D1958);
  __chkstk_darwin(v33 - 8);
  uint64_t v163 = (uint64_t)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  long long v168 = (char *)&v138 - v36;
  uint64_t v177 = type metadata accessor for AxisGridLine();
  uint64_t v169 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v38 = (char *)&v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000FF33C(&qword_1015D19D0);
  uint64_t v167 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v138 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_1000FF33C(&qword_1015D19E0);
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  unint64_t v162 = (char *)&v138 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v166 = (char *)&v138 - v44;
  __chkstk_darwin(v45);
  uint64_t v178 = (char *)&v138 - v46;
  uint64_t v176 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v47 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v49 = (char *)&v138 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v175 = (char *)&v138 - v51;
  unint64_t result = AxisValue.as<A>(_:)();
  if (BYTE8(v186)) {
    goto LABEL_29;
  }
  unint64_t result = sub_1002A9384(a2, *(double *)&v186);
  if (v53)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v142 = *(void *)(a1 + 16);
  uint64_t v160 = v39;
  uint64_t v159 = v9;
  uint64_t v161 = a1;
  uint64_t v141 = a1 + 32;
  uint64_t v54 = a1 + 32 + 16 * result;
  double v55 = *(double *)v54;
  int v172 = *(unsigned __int8 *)(v54 + 8);
  id v56 = [self meters];
  sub_10019B408();
  Measurement.init(value:unit:)();
  uint64_t v57 = v176;
  Measurement<>.converted(to:)();
  uint64_t v58 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v158 = v47 + 8;
  uint64_t v157 = v58;
  v58(v49, v57);
  uint64_t v59 = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v60 = a3;
  uint64_t v61 = *(void **)(a3 + *(int *)(v59 + 72));
  Measurement.value.getter();
  id v63 = [v61 stringFromValue:sub_10020160C() unit:v62];
  uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  double v65 = v64;

  if (v170)
  {
    sub_1000FF33C(&qword_1015D19B8);
    uint64_t v66 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v66 + 16) = xmmword_100F5CFA0;
    *(_OWORD *)(v66 + 32) = _Q1;
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    long long v72 = v182;
    uint64_t v73 = v183;
    uint64_t v74 = v184;
    uint64_t v75 = v185;
  }
  else
  {
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v75 = 0;
    long long v72 = 0uLL;
  }
  long long v186 = v72;
  uint64_t v187 = v73;
  uint64_t v188 = v74;
  uint64_t v189 = v75;
  AxisGridLine.init(centered:stroke:)();
  uint64_t v76 = v171;
  Font.init(_:)();
  uint64_t v77 = v177;
  AxisMark.font(_:)();
  swift_release();
  unint64_t result = (*(uint64_t (**)(char *, uint64_t))(v169 + 8))(v38, v77);
  uint64_t v78 = v59;
  uint64_t v79 = *(char **)(v60 + *(int *)(v59 + 56));
  uint64_t v80 = v161;
  if (v172)
  {
    uint64_t v79 = *(char **)&v79[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridHighlightColor];
    uint64_t v81 = v160;
    if (v79) {
      goto LABEL_12;
    }
    __break(1u);
  }
  uint64_t v79 = *(char **)&v79[OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor];
  uint64_t v81 = v160;
  if (!v79)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_12:
  uint64_t v82 = v79;
  uint64_t v83 = Color.init(_:)();
  unint64_t v180 = &protocol witness table for AxisGridLine;
  uint64_t v181 = v83;
  uint64_t v179 = v177;
  swift_getOpaqueTypeConformance2();
  unsigned int v84 = v166;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v167 + 8))(v41, v81);
  uint64_t v85 = v173 + 32;
  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v173 + 32);
  v86(v178, v84, v174);
  uint64_t v177 = v85;
  uint64_t v171 = v86;
  if (v172)
  {
    uint64_t v179 = v150;
    unint64_t v180 = v65;
    static UnitPoint.center.getter();
    static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
    static AxisValueLabelOrientation.automatic.getter();
    sub_100180324();
    Swift::String v87 = v148;
    unint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
    uint64_t v88 = *(void **)(*(void *)(v60 + *(int *)(v78 + 56))
                   + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridHighlightColor);
    uint64_t v89 = (uint64_t)v168;
    if (v88)
    {
      id v90 = v88;
      uint64_t v179 = Color.init(_:)();
      sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
      uint64_t v91 = v146;
      uint64_t v92 = v152;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v87, v92);
      uint64_t v93 = v153;
      uint64_t v94 = v147;
      uint64_t v95 = v154;
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v147, v91, v154);
      uint64_t v96 = (uint64_t)v149;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v149, v94, v95);
      sub_1000FF33C(&qword_1015D19B0);
      swift_storeEnumTagMultiPayload();
      uint64_t v97 = v163;
      sub_1000FF27C(v96, v163, &qword_1015D1978);
      sub_1000FF33C(&qword_1015D19A8);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v96, &qword_1015D1978);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v95);
      uint64_t v98 = sub_1000FF33C(&qword_1015D1968);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 0, 1, v98);
      uint64_t v99 = v97;
      uint64_t v100 = v97;
      uint64_t v101 = v89;
LABEL_19:
      sub_100101750(v100, v101, &qword_1015D1958);
LABEL_20:
      uint64_t v115 = v159;
      uint64_t v116 = v164;
LABEL_21:
      uint64_t v117 = v173;
      uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v173 + 16);
      uint64_t v119 = v162;
      uint64_t v120 = v174;
      v118(v162, v178, v174);
      sub_1000FF27C(v89, v99, &qword_1015D1958);
      v118(v116, v119, v120);
      sub_10019BFB0(&qword_1015D1950, &qword_1015D1958, (void (*)(void))sub_10019AEAC);
      uint64_t v121 = (uint64_t)&v116[*(int *)(v115 + 48)];
      sub_1000FF27C(v99, v121, &qword_1015D1958);
      uint64_t v122 = v165;
      v171(v165, v116, v120);
      sub_100101750(v121, (uint64_t)&v122[*(int *)(v115 + 48)], &qword_1015D1958);
      sub_1000FF2E0(v89, &qword_1015D1958);
      uint64_t v123 = *(void (**)(char *, uint64_t))(v117 + 8);
      v123(v178, v120);
      v157(v175, v176);
      sub_1000FF2E0(v99, &qword_1015D1958);
      return ((uint64_t (*)(char *, uint64_t))v123)(v119, v120);
    }
    goto LABEL_32;
  }
  uint64_t v102 = (uint64_t)v168;
  if (v55 == *(double *)(v80 + 32) && (*(unsigned char *)(v80 + 40) & 1) == 0)
  {
    uint64_t v103 = v168;
    uint64_t v179 = v150;
    unint64_t v180 = v65;
    static UnitPoint.topLeading.getter();
    static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
    static AxisValueLabelOrientation.automatic.getter();
    sub_100180324();
    uint64_t v104 = v145;
    unint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
    uint64_t v105 = *(void **)(*(void *)(v60 + *(int *)(v78 + 56)) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
    if (v105)
    {
      id v106 = v105;
      uint64_t v179 = Color.init(_:)();
      sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
      long long v107 = v143;
      uint64_t v108 = v152;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v104, v108);
      uint64_t v109 = v153;
      long long v110 = v144;
      uint64_t v111 = v154;
      (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v144, v107, v154);
      uint64_t v112 = (uint64_t)v149;
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v149, v110, v111);
      sub_1000FF33C(&qword_1015D19B0);
      swift_storeEnumTagMultiPayload();
      uint64_t v113 = v163;
      sub_1000FF27C(v112, v163, &qword_1015D1978);
      sub_1000FF33C(&qword_1015D19A8);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v112, &qword_1015D1978);
      (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
      uint64_t v114 = sub_1000FF33C(&qword_1015D1968);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v113, 0, 1, v114);
      uint64_t v99 = v113;
      uint64_t v100 = v113;
      uint64_t v89 = (uint64_t)v103;
      uint64_t v101 = (uint64_t)v103;
      goto LABEL_19;
    }
    goto LABEL_33;
  }
  uint64_t v124 = v141 + 16 * v142;
  double v126 = *(double *)(v124 - 16);
  uint64_t v125 = v124 - 16;
  if (v55 != v126 || (*(unsigned char *)(v125 + 8) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v127 = sub_1000FF33C(&qword_1015D1968);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v102, 1, 1, v127);
    uint64_t v89 = v102;
    uint64_t v115 = v159;
    uint64_t v116 = v164;
    uint64_t v99 = v163;
    goto LABEL_21;
  }
  uint64_t v179 = v150;
  unint64_t v180 = v65;
  static UnitPoint.topTrailing.getter();
  static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100180324();
  uint64_t v128 = v140;
  unint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  uint64_t v129 = *(void **)(*(void *)(v60 + *(int *)(v78 + 56)) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
  if (v129)
  {
    id v130 = v129;
    uint64_t v179 = Color.init(_:)();
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    uint64_t v131 = v138;
    uint64_t v132 = v152;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v151 + 8))(v128, v132);
    uint64_t v133 = v153;
    uint64_t v134 = v139;
    uint64_t v135 = v154;
    (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v139, v131, v154);
    uint64_t v136 = v163;
    (*(void (**)(uint64_t, char *, uint64_t))(v133 + 16))(v163, v134, v135);
    sub_1000FF33C(&qword_1015D19A8);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v133 + 8))(v134, v135);
    uint64_t v137 = sub_1000FF33C(&qword_1015D1968);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v136, 0, 1, v137);
    uint64_t v99 = v136;
    sub_100101750(v136, v102, &qword_1015D1958);
    uint64_t v89 = v102;
    goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1001913C0@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v125 = a3;
  uint64_t v136 = a4;
  uint64_t v135 = sub_1000FF33C(&qword_1015D1990);
  __chkstk_darwin(v135);
  uint64_t v134 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D1978);
  __chkstk_darwin(v7 - 8);
  uint64_t v118 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v9 - 8);
  uint64_t v124 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v11 - 8);
  uint64_t v123 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_1000FF33C(&qword_1015D1980);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v111 = (char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v114 = (char *)&v109 - v15;
  __chkstk_darwin(v16);
  uint64_t v117 = (char *)&v109 - v17;
  uint64_t v122 = sub_1000FF33C(&qword_1015D1998);
  uint64_t v126 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v109 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v110 = (char *)&v109 - v20;
  __chkstk_darwin(v21);
  uint64_t v112 = (char *)&v109 - v22;
  __chkstk_darwin(v23);
  uint64_t v113 = (char *)&v109 - v24;
  __chkstk_darwin(v25);
  uint64_t v115 = (char *)&v109 - v26;
  __chkstk_darwin(v27);
  uint64_t v116 = (char *)&v109 - v28;
  uint64_t v131 = sub_1000FF33C(&qword_1015D1968);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v121 = (uint64_t)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1000FF33C(&qword_1015D1958);
  __chkstk_darwin(v30 - 8);
  uint64_t v133 = (uint64_t)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v109 - v33;
  uint64_t v35 = type metadata accessor for AxisGridLine();
  uint64_t v36 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1000FF33C(&qword_1015D19A0);
  uint64_t v39 = *(void **)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v129 = (char *)&v109 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v109 - v42;
  __chkstk_darwin(v44);
  uint64_t v138 = (char *)&v109 - v45;
  if (a1)
  {
    sub_1000FF33C(&qword_1015D19B8);
    uint64_t v46 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v46 + 16) = xmmword_100F5CFA0;
    *(_OWORD *)(v46 + 32) = _Q1;
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    long long v52 = v141;
    uint64_t v53 = v142;
    uint64_t v54 = v143;
    uint64_t v55 = v144;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    long long v52 = 0uLL;
  }
  uint64_t v132 = v34;
  long long v145 = v52;
  uint64_t v146 = v53;
  uint64_t v147 = v54;
  uint64_t v148 = v55;
  AxisGridLine.init(centered:stroke:)();
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v57 = *(int *)(result + 56);
  uint64_t v58 = *(void **)(*(void *)(a2 + v57) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor);
  if (!v58) {
    goto LABEL_25;
  }
  uint64_t v59 = result;
  id v60 = v58;
  double v139 = COERCE_DOUBLE(Color.init(_:)());
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  uint64_t v61 = (void (*)(char *, char *, uint64_t))v39[4];
  v61(v138, v43, v137);
  uint64_t v62 = *(void *)(a2 + v57);
  _ZF = *(unsigned char *)(v62 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_contextStyle) == 2;
  uint64_t v128 = v39 + 4;
  uint64_t v127 = (void (*)(uint64_t, char *, uint64_t))v61;
  if (_ZF)
  {
    uint64_t v63 = 1;
    uint64_t v64 = (uint64_t)v132;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v64, v63, 1, v131);
    uint64_t v91 = (void (*)(char *, char *, uint64_t))v39[2];
    uint64_t v92 = v129;
    uint64_t v93 = v137;
    v91(v129, v138, v137);
    uint64_t v94 = v133;
    sub_1000FF27C(v64, v133, &qword_1015D1958);
    uint64_t v95 = v134;
    v91(v134, v92, v93);
    sub_10019BFB0(&qword_1015D1950, &qword_1015D1958, (void (*)(void))sub_10019AEAC);
    uint64_t v96 = v135;
    uint64_t v97 = (uint64_t)&v95[*(int *)(v135 + 48)];
    sub_1000FF27C(v94, v97, &qword_1015D1958);
    uint64_t v98 = v136;
    v127(v136, v95, v93);
    sub_100101750(v97, v98 + *(int *)(v96 + 48), &qword_1015D1958);
    sub_1000FF2E0(v64, &qword_1015D1958);
    uint64_t v99 = (void (*)(char *, uint64_t))v39[1];
    v99(v138, v93);
    sub_1000FF2E0(v94, &qword_1015D1958);
    return ((uint64_t (*)(char *, uint64_t))v99)(v92, v93);
  }
  uint64_t result = AxisValue.as<A>(_:)();
  if (v140) {
    goto LABEL_26;
  }
  uint64_t v65 = *(void *)(v125 + 16);
  uint64_t v66 = v126;
  if (!v65)
  {
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v139 == *(double *)(v125 + 32))
  {
    uint64_t v67 = *(void **)(a2 + *(int *)(v59 + 76));
    uint64_t result = AxisValue.as<A>(_:)();
    if ((v140 & 1) == 0)
    {
      id v68 = [v67 stringFromValue:sub_10020160C() unit:v139];
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v71 = v70;

      double v139 = *(double *)&v69;
      uint64_t v140 = v71;
      static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
      static AxisValueLabelOrientation.automatic.getter();
      sub_100180324();
      long long v72 = v117;
      uint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
      uint64_t v73 = *(void **)(v62 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
      if (v73)
      {
        id v74 = v73;
        double v139 = COERCE_DOUBLE(Color.init(_:)());
        sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
        uint64_t v75 = v115;
        uint64_t v76 = v120;
        AxisMark.foregroundStyle<A>(_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v119 + 8))(v72, v76);
        uint64_t v77 = v116;
        uint64_t v78 = v122;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v116, v75, v122);
        uint64_t v79 = (uint64_t)v118;
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v118, v77, v78);
        sub_1000FF33C(&qword_1015D19B0);
LABEL_18:
        swift_storeEnumTagMultiPayload();
        uint64_t v90 = v121;
        sub_1000FF27C(v79, v121, &qword_1015D1978);
        sub_1000FF33C(&qword_1015D19A8);
        swift_storeEnumTagMultiPayload();
        sub_1000FF2E0(v79, &qword_1015D1978);
LABEL_19:
        (*(void (**)(char *, uint64_t))(v66 + 8))(v77, v78);
        uint64_t v64 = (uint64_t)v132;
        sub_100101750(v90, (uint64_t)v132, &qword_1015D1968);
        uint64_t v63 = 0;
        goto LABEL_20;
      }
      goto LABEL_28;
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v80 = *(void **)(a2 + *(int *)(v59 + 76));
  if (v139 == *(double *)(v125 + 32 + 8 * v65 - 8))
  {
    uint64_t result = AxisValue.as<A>(_:)();
    if ((v140 & 1) == 0)
    {
      id v81 = [v80 stringFromValue:sub_10020160C() unit:v139];
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      double v139 = *(double *)&v82;
      uint64_t v140 = v84;
      static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
      static AxisValueLabelOrientation.automatic.getter();
      sub_100180324();
      uint64_t v85 = v114;
      uint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
      uint64_t v86 = *(void **)(v62 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
      if (v86)
      {
        id v87 = v86;
        double v139 = COERCE_DOUBLE(Color.init(_:)());
        sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
        uint64_t v88 = v112;
        uint64_t v89 = v120;
        AxisMark.foregroundStyle<A>(_:)();
        swift_release();
        (*(void (**)(char *, uint64_t))(v119 + 8))(v85, v89);
        uint64_t v77 = v113;
        uint64_t v78 = v122;
        (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v113, v88, v122);
        uint64_t v79 = (uint64_t)v118;
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v118, v77, v78);
        sub_1000FF33C(&qword_1015D19B0);
        goto LABEL_18;
      }
      goto LABEL_30;
    }
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t result = AxisValue.as<A>(_:)();
  if (v140)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  id v100 = [v80 stringFromValue:sub_10020160C() unit:v139];
  uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v103 = v102;

  double v139 = *(double *)&v101;
  uint64_t v140 = v103;
  static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100180324();
  uint64_t v104 = v111;
  uint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  uint64_t v105 = *(void **)(v62 + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
  if (v105)
  {
    id v106 = v105;
    double v139 = COERCE_DOUBLE(Color.init(_:)());
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    long long v107 = v109;
    uint64_t v108 = v120;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v104, v108);
    uint64_t v77 = v110;
    uint64_t v78 = v122;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v110, v107, v122);
    uint64_t v90 = v121;
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 16))(v121, v77, v78);
    sub_1000FF33C(&qword_1015D19A8);
    swift_storeEnumTagMultiPayload();
    goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1001923D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v31 = a1;
  uint64_t v41 = a3;
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v7 - 8);
  uint64_t v35 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)v29 - v10;
  __chkstk_darwin(v11);
  uint64_t v42 = (char *)v29 - v12;
  uint64_t v38 = type metadata accessor for BarMark();
  uint64_t v40 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v34 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000FF33C(&qword_1015D18F8);
  uint64_t v37 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v36 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  v29[0] = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  id v15 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v29[1] = v4 + 8;
  uint64_t v30 = v18;
  v18(v6, v3);
  uint64_t v43 = v17;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v19 = v33;
  double v20 = sub_100201358();
  if (v20 <= 0.0) {
    double v20 = 0.0;
  }
  uint64_t v43 = *(void *)&v20;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v21 = v31;
  Measurement<>.converted(to:)();
  Measurement.value.getter();
  uint64_t v23 = v22;
  v30(v6, v3);
  uint64_t v43 = v23;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v25 = v34;
  BarMark.init<A, B>(x:yStart:yEnd:width:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + *(int *)(v24 + 64)))(v21, v19);
  uint64_t v43 = Color.init(_:)();
  uint64_t v26 = v36;
  uint64_t v27 = v38;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v25, v27);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v41, v26, v39);
}

uint64_t sub_100192954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a1;
  uint64_t v84 = a3;
  uint64_t v83 = sub_1000FF33C(&qword_1015D1A18);
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v5 - 8);
  uint64_t v91 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v90 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v86 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v87 = (char *)&v74 - v11;
  uint64_t v81 = sub_1000FF33C(&qword_1015D1980);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v92 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_1000FF33C(&qword_1015D1998);
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v97 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v77 = (char *)&v74 - v15;
  __chkstk_darwin(v16);
  uint64_t v96 = (char *)&v74 - v17;
  uint64_t v18 = type metadata accessor for AxisGridLine();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000FF33C(&qword_1015D19A0);
  uint64_t v23 = *(char **)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v74 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v74 - v29;
  sub_1000FF33C(&qword_1015D19B8);
  uint64_t v31 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v31 + 16) = xmmword_100F5CFA0;
  *(_OWORD *)(v31 + 32) = _Q1;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v103 = v100;
  long long v104 = v101;
  uint64_t v105 = v102;
  AxisGridLine.init(centered:stroke:)();
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v85 = *(int *)(result + 56);
  uint64_t v38 = *(void **)(*(void *)(a2 + v85) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor);
  if (!v38)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v39 = result;
  id v40 = v38;
  uint64_t v98 = Color.init(_:)();
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v41 = (void (*)(uint64_t, char *, uint64_t))*((void *)v23 + 4);
  uint64_t v94 = v30;
  uint64_t v76 = v23 + 32;
  uint64_t v75 = v41;
  v41((uint64_t)v30, v27, v22);
  uint64_t v42 = *(void **)(a2 + *(int *)(v39 + 72));
  uint64_t result = AxisValue.as<A>(_:)();
  if (v99)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v93 = v22;
  id v43 = [self meters];
  sub_10019B408();
  uint64_t v44 = v86;
  Measurement.init(value:unit:)();
  uint64_t v45 = v87;
  uint64_t v46 = v89;
  Measurement<>.converted(to:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v88 + 8);
  v47(v44, v46);
  Measurement.value.getter();
  double v49 = v48;
  v47(v45, v46);
  id v50 = [v42 stringFromValue:sub_10020160C() unit:v49];
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  uint64_t v98 = v51;
  uint64_t v99 = v53;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100180324();
  uint64_t v54 = v92;
  uint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  uint64_t v55 = *(void **)(*(void *)(a2 + v85) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
  if (v55)
  {
    id v56 = v55;
    uint64_t v98 = Color.init(_:)();
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    uint64_t v57 = v77;
    uint64_t v58 = v81;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v54, v58);
    uint64_t v59 = v78;
    id v60 = *(char **)(v78 + 32);
    uint64_t v90 = (char *)(v78 + 32);
    uint64_t v92 = v60;
    uint64_t v61 = v96;
    uint64_t v62 = v80;
    ((void (*)(char *, char *, uint64_t))v60)(v96, v57, v80);
    uint64_t v63 = (void (*)(char *, char *, uint64_t))*((void *)v23 + 2);
    uint64_t v64 = v95;
    uint64_t v65 = v93;
    v63(v95, v94, v93);
    uint64_t v91 = v23;
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    uint64_t v67 = v97;
    v66(v97, v61, v62);
    id v68 = v82;
    v63(v82, v64, v65);
    uint64_t v69 = v83;
    uint64_t v70 = &v68[*(int *)(v83 + 48)];
    v66(v70, v67, v62);
    uint64_t v71 = v84;
    v75(v84, v68, v65);
    ((void (*)(uint64_t, char *, uint64_t))v92)(v71 + *(int *)(v69 + 48), v70, v62);
    long long v72 = *(void (**)(char *, uint64_t))(v59 + 8);
    v72(v96, v62);
    uint64_t v73 = (void (*)(char *, uint64_t))*((void *)v91 + 1);
    v73(v94, v65);
    v72(v97, v62);
    return ((uint64_t (*)(char *, uint64_t))v73)(v95, v65);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100193314(uint64_t a1, void (*a2)(__n128))
{
  uint64_t v4 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for MapsElevationChart();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __n128 v9 = __chkstk_darwin(v6 - 8);
  a2(v9);
  sub_10019CE1C(a1, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  sub_10019A9F0((uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_1000FF33C(&qword_1015D1A08);
  sub_10019BE64();
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_100193518@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v73 = a1;
  id v68 = a3;
  uint64_t v67 = sub_1000FF33C(&qword_1015D1A18);
  __chkstk_darwin(v67);
  uint64_t v66 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v5 - 8);
  uint64_t v71 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v70 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000FF33C(&qword_1015D1980);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  long long v72 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1000FF33C(&qword_1015D1998);
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v76 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v57 - v12;
  __chkstk_darwin(v13);
  uint64_t v75 = (char *)&v57 - v14;
  uint64_t v15 = type metadata accessor for AxisGridLine();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1000FF33C(&qword_1015D19A0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v74 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v57 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v57 - v26;
  uint64_t v81 = 0;
  long long v79 = 0u;
  long long v80 = 0u;
  AxisGridLine.init(centered:stroke:)();
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v69 = *(int *)(result + 56);
  uint64_t v29 = *(void **)(*(void *)(a2 + v69) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_gridColor);
  if (!v29)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v30 = result;
  id v31 = v29;
  uint64_t v77 = Color.init(_:)();
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  id v60 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v60(v27, v24, v19);
  uint64_t v32 = *(void **)(a2 + *(int *)(v30 + 76));
  uint64_t result = AxisValue.as<A>(_:)();
  if (v78)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v33 = v19;
  uint64_t v59 = v20 + 32;
  uint64_t v73 = v27;
  uint64_t v34 = v20;
  id v35 = [v32 stringFromValue:sub_10020160C() unit:*(double *)&v77];
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  uint64_t v77 = v36;
  uint64_t v78 = v38;
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100180324();
  uint64_t v39 = v72;
  uint64_t result = AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  id v40 = *(void **)(*(void *)(a2 + v69) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_labelColor);
  if (v40)
  {
    id v41 = v40;
    uint64_t v77 = Color.init(_:)();
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    uint64_t v42 = v61;
    uint64_t v43 = v64;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v43);
    uint64_t v44 = v63;
    long long v72 = *(char **)(v63 + 32);
    uint64_t v45 = v75;
    uint64_t v46 = v65;
    ((void (*)(char *, char *, uint64_t))v72)(v75, v42, v65);
    uint64_t v58 = v34;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    double v48 = v74;
    v47(v74, v73, v33);
    double v49 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    v49(v76, v45, v46);
    id v50 = v66;
    v47(v66, v48, v33);
    uint64_t v51 = v67;
    uint64_t v52 = &v50[*(int *)(v67 + 48)];
    uint64_t v53 = v76;
    v49(v52, v76, v46);
    uint64_t v54 = v68;
    v60(v68, v50, v33);
    ((void (*)(char *, char *, uint64_t))v72)(&v54[*(int *)(v51 + 48)], v52, v46);
    uint64_t v55 = *(void (**)(char *, uint64_t))(v44 + 8);
    v55(v75, v46);
    id v56 = *(void (**)(char *, uint64_t))(v58 + 8);
    v56(v73, v33);
    v55(v53, v46);
    return ((uint64_t (*)(char *, uint64_t))v56)(v74, v33);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100193CE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MapsElevationChart();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  v8[1] = *(void *)(a1 + 16);
  swift_getKeyPath();
  sub_10019CE1C(a1, (uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_10019A9F0((uint64_t)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D18F0);
  sub_1000FF33C(&qword_1015D1A40);
  sub_1001010F8(&qword_1015D1900, &qword_1015D18F0);
  sub_10019C01C();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100193E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v79 = a1;
  uint64_t v100 = a3;
  uint64_t v99 = sub_1000FF33C(&qword_1015D1A60) - 8;
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for LineMark();
  uint64_t v92 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v88 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1000FF33C(&qword_1015D1A58);
  uint64_t v95 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v89 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1000FF33C(&qword_1015D1A50);
  uint64_t v97 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v90 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_1000FF33C(&qword_1015D1A68);
  uint64_t v108 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  id v106 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v107 = (char *)&v76 - v10;
  uint64_t v11 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v109 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v14 - 8);
  long long v80 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v102 = (char *)&v76 - v17;
  __chkstk_darwin(v18);
  long long v110 = (void (*)(char *, char *, uint64_t))((char *)&v76 - v19);
  uint64_t v84 = type metadata accessor for AreaMark();
  uint64_t v85 = *(void (***)(char *, uint64_t))(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v78 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_1000FF33C(&qword_1015D1A48);
  id v87 = *(void (***)(char *, uint64_t))(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v81 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_1000FF33C(&qword_1015D1A70);
  uint64_t v113 = *(void **)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v111 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v112 = (char *)&v76 - v24;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v25 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v83 = a1 + *(int *)(v25 + 20);
  id v82 = self;
  id v26 = [v82 meters];
  long long v101 = v13;
  uint64_t v77 = v11;
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v28 = v27;
  uint64_t v29 = v109 + 8;
  long long v103 = *(void (**)(char *, uint64_t))(v109 + 8);
  v103(v13, v11);
  uint64_t v109 = v29;
  *(void *)&long long v121 = v28;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  *(void *)&long long v121 = 0;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v79 += *(int *)(v25 + 24);
  uint64_t v30 = v101;
  uint64_t v31 = v77;
  Measurement<>.converted(to:)();
  Measurement.value.getter();
  uint64_t v33 = v32;
  v103(v30, v31);
  *(void *)&long long v121 = v33;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = v78;
  AreaMark.init<A, B>(x:yStart:yEnd:)();
  long long v80 = (char *)*(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 56);
  sub_1002CFC84();
  Gradient.init(colors:)();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  long long v121 = v119[0];
  long long v122 = v119[1];
  uint64_t v123 = v120;
  id v35 = v81;
  uint64_t v36 = v84;
  ChartContent.foregroundStyle<A>(_:)();
  sub_10019C1E4((uint64_t)v119);
  v85[1](v34, v36);
  *(void *)&long long v121 = v36;
  *((void *)&v121 + 1) = &type metadata for LinearGradient;
  *(void *)&long long v122 = &protocol witness table for AreaMark;
  *((void *)&v122 + 1) = &protocol witness table for LinearGradient;
  uint64_t v85 = (void (**)(char *, uint64_t))&opaque type descriptor for <<opaque return type of ChartContent.foregroundStyle<A>(_:)>>;
  swift_getOpaqueTypeConformance2();
  uint64_t v37 = v111;
  uint64_t v38 = v86;
  ChartContent.interpolationMethod(_:)();
  v87[1](v35, v38);
  uint64_t v39 = (void (**)(char *, uint64_t))v113[4];
  uint64_t v86 = (uint64_t)(v113 + 4);
  id v87 = v39;
  ((void (*)(char *, char *, uint64_t))v39)(v112, v37, v105);
  LocalizedStringKey.init(stringLiteral:)();
  id v40 = [v82 meters];
  id v41 = v101;
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v43 = v42;
  uint64_t v44 = v103;
  v103(v41, v31);
  *(void *)&long long v121 = v43;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v45 = v104;
  Measurement<>.converted(to:)();
  Measurement.value.getter();
  uint64_t v47 = v46;
  v44(v41, v31);
  *(void *)&long long v121 = v47;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v48 = v88;
  LineMark.init<A, B>(x:y:)();
  double v49 = v80;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  id v50 = v89;
  uint64_t v51 = v91;
  ChartContent.lineStyle(_:)();
  sub_10019C210((uint64_t)&v121);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v48, v51);
  id v52 = *(id *)(*(void *)&v49[v45] + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor);
  uint64_t v118 = Color.init(_:)();
  uint64_t v114 = v51;
  uint64_t v115 = &protocol witness table for LineMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v90;
  uint64_t v55 = v93;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v55);
  uint64_t v114 = v55;
  uint64_t v115 = &type metadata for Color;
  uint64_t v116 = OpaqueTypeConformance2;
  uint64_t v117 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  id v56 = v106;
  uint64_t v57 = v96;
  ChartContent.interpolationMethod(_:)();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v54, v57);
  uint64_t v58 = v108;
  long long v110 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
  uint64_t v59 = v107;
  id v60 = v56;
  uint64_t v61 = v94;
  v110(v107, v56, v94);
  uint64_t v62 = (void (*)(char *, char *, uint64_t))v113[2];
  uint64_t v63 = v111;
  uint64_t v64 = v105;
  v62(v111, v112, v105);
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v66 = v60;
  uint64_t v67 = v61;
  v65(v66, v59, v61);
  id v68 = v98;
  v62(v98, v63, v64);
  uint64_t v69 = v99;
  uint64_t v70 = &v68[*(int *)(v99 + 56)];
  uint64_t v71 = v106;
  v65(v70, v106, v67);
  uint64_t v72 = v100;
  ((void (*)(uint64_t, char *, uint64_t))v87)(v100, v68, v64);
  v110((char *)(v72 + *(int *)(v69 + 56)), v70, v67);
  uint64_t v73 = *(void (**)(char *, uint64_t))(v108 + 8);
  v73(v107, v67);
  uint64_t v74 = (void (*)(char *, uint64_t))v113[1];
  v74(v112, v64);
  v73(v71, v67);
  return ((uint64_t (*)(char *, uint64_t))v74)(v111, v64);
}

uint64_t sub_100194DA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D1BF0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D1BE0);
  type metadata accessor for RectangleMark();
  sub_10019C39C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(void))(v8 + 16);
  ((void (*)(char *, void, uint64_t))v9)(v6, *a1, v7);
  uint64_t v20 = &v6[v4[14]];
  v9();
  uint64_t v10 = sub_1000FF33C(&qword_1015D1BD8);
  type metadata accessor for PointMark();
  sub_10019C790(&qword_1015D1AC8, &qword_1015D1AC0, &qword_1015D1AD0, &qword_1015D1AD8);
  uint64_t v19 = &v6[v4[18]];
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void))(v11 + 16);
  v12();
  sub_10019C62C();
  uint64_t v18 = &v6[v4[22]];
  sub_1000FF27C(a1[3], (uint64_t)v18, &qword_1015D1AE8);
  uint64_t v13 = &v6[v4[26]];
  ((void (*)(char *, void, uint64_t))v12)(v13, a1[4], v10);
  uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v15 = v21;
  v14(v21, v6, v7);
  v14(v15 + v4[14], v20, v7);
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v16(v15 + v4[18], v19, v10);
  sub_100101750((uint64_t)v18, v15 + v4[22], &qword_1015D1AE8);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v15 + v4[26], v13, v10);
}

uint64_t sub_100195024@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v67 = a1;
  uint64_t v70 = a4;
  uint64_t v69 = sub_1000FF33C(&qword_1015D1BF8) - 8;
  __chkstk_darwin(v69);
  id v68 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D1AA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  uint64_t v66 = v9;
  __chkstk_darwin(v8);
  uint64_t v63 = (char *)v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1000FF33C(&qword_1015D1C00);
  uint64_t v75 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v72 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v74 = (char *)v56 - v13;
  uint64_t v14 = type metadata accessor for MapsElevationChart();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1000FF33C(&qword_1015D1AA0);
  uint64_t v73 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v71 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v76 = (char *)v56 - v20;
  uint64_t v60 = v4;
  uint64_t v81 = *(void *)(v4 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = type metadata accessor for MapsElevationChart;
  sub_10019CE1C(v4, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v21 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v22 = (v16 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_10019A9F0((uint64_t)v17, v23 + v21);
  uint64_t v24 = (void *)(v23 + v22);
  *uint64_t v24 = a2;
  v24[1] = a3;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D18F0);
  sub_1000FF33C(&qword_1015D1A70);
  v56[1] = sub_1001010F8(&qword_1015D1900, &qword_1015D18F0);
  uint64_t v25 = sub_10010118C(&qword_1015D1A48);
  uint64_t v77 = type metadata accessor for AreaMark();
  uint64_t v78 = &type metadata for LinearGradient;
  uint64_t v79 = &protocol witness table for AreaMark;
  long long v80 = &protocol witness table for LinearGradient;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v77 = v25;
  uint64_t v78 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  ForEach<>.init(_:id:content:)();
  uint64_t v27 = v60;
  uint64_t v81 = *(void *)(v60 + 16);
  swift_getKeyPath();
  sub_10019CE1C(v27, (uint64_t)v17, (uint64_t (*)(void))v61);
  uint64_t v28 = swift_allocObject();
  sub_10019A9F0((uint64_t)v17, v28 + v21);
  uint64_t v29 = (void *)(v28 + v22);
  uint64_t v30 = v57;
  *uint64_t v29 = v59;
  v29[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000FF33C(&qword_1015D1C08);
  uint64_t v31 = sub_10010118C(&qword_1015D1AB8);
  uint64_t v77 = type metadata accessor for LineMark();
  uint64_t v78 = &protocol witness table for LineMark;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v77 = v31;
  uint64_t v78 = (void *)v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v33 = v63;
  ForEach<>.init(_:id:content:)();
  uint64_t v77 = (uint64_t)v67;
  sub_10019C554();
  uint64_t v34 = v72;
  uint64_t v35 = v65;
  ChartContent.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v35);
  uint64_t v36 = v74;
  uint64_t v37 = v75;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
  uint64_t v38 = v64;
  v67(v74, v34, v64);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  id v40 = v71;
  uint64_t v41 = v62;
  v39(v71, v76, v62);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v43 = v36;
  uint64_t v44 = v38;
  v42(v34, v43, v38);
  sub_10019C468();
  uint64_t v45 = v68;
  uint64_t v46 = v40;
  uint64_t v47 = v41;
  v39(v68, v46, v41);
  uint64_t v48 = v69;
  double v49 = &v45[*(int *)(v69 + 56)];
  id v50 = v72;
  v42(v49, v72, v44);
  uint64_t v51 = v73;
  uint64_t v52 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v73 + 32))(v70, v45, v47);
  v67((char *)(v52 + *(int *)(v48 + 56)), v49, v44);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v75 + 8);
  v53(v74, v44);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v76, v47);
  v53(v50, v44);
  return ((uint64_t (*)(char *, uint64_t))v54)(v71, v47);
}

uint64_t sub_1001957B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *((void *)&v46 + 1) = a4;
  *(void *)&long long v46 = a3;
  uint64_t v57 = a5;
  uint64_t v58 = a2;
  uint64_t v6 = sub_1000FF33C(&qword_1015D1C10);
  __chkstk_darwin(v6 - 8);
  double v49 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v12 - 8);
  uint64_t v45 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v44 = (char *)&v38 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v54 = type metadata accessor for AreaMark();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v48 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000FF33C(&qword_1015D1A48);
  uint64_t v55 = *(void *)(v20 - 8);
  uint64_t v56 = v20;
  __chkstk_darwin(v20);
  uint64_t v51 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1000FF33C(&qword_1015D1A70);
  uint64_t v50 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v47 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v40 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v42 = a1;
  id v23 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v25 = v24;
  id v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v41 = v9 + 8;
  uint64_t v39 = v26;
  v26(v11, v8);
  *(void *)&v62[0] = v25;
  uint64_t v43 = v18;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = sub_1002017A4();
  uint64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v29 = *(void *)(v27 + 8 * v28 + 24);
    swift_bridgeObjectRelease();
    *(void *)&v62[0] = v29;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    Measurement<>.converted(to:)();
    Measurement.value.getter();
    uint64_t v31 = v30;
    v39(v11, v8);
    *(void *)&v62[0] = v31;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LocalizedStringKey.init(stringLiteral:)();
    v62[0] = v46;
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    AreaMark.init<A, B, C>(x:yStart:yEnd:series:)();
    type metadata accessor for MapsElevationChartViewModel(0);
    sub_1002CFC84();
    Gradient.init(colors:)();
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    long long v59 = v62[0];
    long long v60 = v62[1];
    uint64_t v61 = v63;
    uint64_t v33 = v51;
    uint64_t v34 = v54;
    ChartContent.foregroundStyle<A>(_:)();
    sub_10019C1E4((uint64_t)v62);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v34);
    *(void *)&long long v59 = v34;
    *((void *)&v59 + 1) = &type metadata for LinearGradient;
    *(void *)&long long v60 = &protocol witness table for AreaMark;
    *((void *)&v60 + 1) = &protocol witness table for LinearGradient;
    swift_getOpaqueTypeConformance2();
    uint64_t v35 = v47;
    uint64_t v36 = v56;
    ChartContent.interpolationMethod(_:)();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v36);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(v57, v35, v53);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_100195F74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v34 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a1;
  uint64_t v4 = sub_1000FF33C(&qword_1015D1C10);
  __chkstk_darwin(v4 - 8);
  uint64_t v31 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v6 - 8);
  v28[1] = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v30 = type metadata accessor for LineMark();
  uint64_t v32 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000FF33C(&qword_1015D1AB8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  uint64_t v36 = v12;
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  id v18 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  Measurement<>.converted(to:)();
  Measurement.value.getter();
  uint64_t v23 = v22;
  v21(v17, v14);
  LocalizedStringKey.init(stringLiteral:)();
  v41[0] = v20;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v41[0] = v23;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  v41[0] = v33;
  v41[1] = v34;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LineMark.init<A, B, C>(x:y:series:)();
  uint64_t v25 = v29;
  uint64_t v24 = v30;
  ChartContent.interpolationMethod(_:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v24);
  type metadata accessor for MapsElevationChartViewModel(0);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v39 = v24;
  uint64_t v40 = &protocol witness table for LineMark;
  swift_getOpaqueTypeConformance2();
  uint64_t v26 = v35;
  ChartContent.lineStyle(_:)();
  sub_10019C210((uint64_t)v41);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v25, v26);
}

void sub_1001964D4()
{
  qword_101611348 = 0x4024000000000000;
}

void sub_1001964E4()
{
  qword_101611350 = 0x4024000000000000;
}

uint64_t sub_1001964F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v5 = sub_1000FF33C(&qword_1015D8DB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v40 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(&qword_1015D0A30);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000FF33C(&qword_1015D1BC0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  static Locale.current.getter();
  uint64_t v20 = type metadata accessor for Locale();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
  sub_100180324();
  uint64_t v21 = StringProtocol.uppercased(with:)();
  uint64_t v23 = v22;
  sub_1000FF2E0((uint64_t)v15, &qword_1015D0A30);
  uint64_t v42 = v21;
  uint64_t v43 = v23;
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  LOBYTE(a1) = v29 & 1;
  uint64_t v30 = v39;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for BlendMode.plusLighter(_:), v39);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v9, v12, v30);
  sub_10019CE1C((uint64_t)v9, (uint64_t)&v19[*(int *)(v17 + 44)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v19 = v24;
  *((void *)v19 + 1) = v26;
  v19[16] = a1;
  *((void *)v19 + 3) = v28;
  sub_10017FDF0(v24, v26, a1);
  swift_bridgeObjectRetain();
  sub_10019CE84((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  sub_10017F958(v24, v26, a1);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v31 = type metadata accessor for Font.Design();
  uint64_t v32 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v40, 1, 1, v31);
  uint64_t v33 = static Font.system(size:weight:design:)();
  sub_1000FF2E0(v32, &qword_1015D8DB0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = v41;
  sub_1000FF27C((uint64_t)v19, v41, &qword_1015D1BC0);
  uint64_t v36 = (uint64_t *)(v35 + *(int *)(sub_1000FF33C(&qword_1015D1BB0) + 36));
  *uint64_t v36 = KeyPath;
  v36[1] = v33;
  return sub_1000FF2E0((uint64_t)v19, &qword_1015D1BC0);
}

uint64_t sub_100196930@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  v13[1] = a1;
  uint64_t v6 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v6 - 8);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for PointMark();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = a2;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = a3;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  PointMark.init<A, B>(x:y:)();
  uint64_t v14 = v3;
  sub_1000FF33C(&qword_1015D1AF0);
  sub_10019C6F4();
  ChartContent.symbol<A>(symbol:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double sub_100196BA0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  uint64_t v8 = v3;
  uint64_t v9 = v2;
  uint64_t v4 = static Color.blue.getter();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v5 = static Color.white.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  static Color.black.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = 256;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v5;
  *(_WORD *)(a1 + 80) = 256;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(unsigned char *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v6;
  double result = 4.0;
  *(_OWORD *)(a1 + 144) = xmmword_100F61850;
  *(void *)(a1 + 160) = 0x4000000000000000;
  return result;
}

uint64_t sub_100196D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  v14[1] = a2;
  uint64_t v7 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for PointMark();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = a3;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = a4;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  PointMark.init<A, B>(x:y:)();
  v14[4] = v14[0];
  v14[5] = a1;
  sub_1000FF33C(&qword_1015D1AC0);
  sub_10019C790(&qword_1015D1AC8, &qword_1015D1AC0, &qword_1015D1AD0, &qword_1015D1AD8);
  ChartContent.symbol<A>(symbol:)();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

double sub_100196FAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  sub_100197094(a1, a2, (uint64_t)v19);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  long long v9 = v20[0];
  *(_OWORD *)(a3 + 112) = v19[6];
  *(_OWORD *)(a3 + 128) = v9;
  *(_OWORD *)(a3 + 137) = *(_OWORD *)((char *)v20 + 9);
  long long v10 = v19[3];
  *(_OWORD *)(a3 + 48) = v19[2];
  *(_OWORD *)(a3 + 64) = v10;
  long long v11 = v19[5];
  *(_OWORD *)(a3 + 80) = v19[4];
  *(_OWORD *)(a3 + 96) = v11;
  long long v12 = v19[1];
  *(_OWORD *)(a3 + 16) = v19[0];
  *(_OWORD *)(a3 + 32) = v12;
  *(void *)(a3 + 160) = v14;
  *(unsigned char *)(a3 + 168) = v15;
  *(void *)(a3 + 176) = v16;
  *(unsigned char *)(a3 + 184) = v17;
  double result = *(double *)&v18;
  *(_OWORD *)(a3 + 192) = v18;
  return result;
}

uint64_t sub_100197094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v7 = *(void **)(*(void *)(a1 + *(int *)(result + 56)) + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_dotStrokeColor);
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = Color.init(uiColor:)();
    swift_retain();
    char v10 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    id v19 = v8;
    uint64_t v20 = Color.init(uiColor:)();
    char v21 = static Edge.Set.all.getter();
    uint64_t result = EdgeInsets.init(_all:)();
    *(void *)a3 = v9;
    *(_WORD *)(a3 + 8) = 256;
    *(void *)(a3 + 16) = a2;
    *(_WORD *)(a3 + 24) = 256;
    *(unsigned char *)(a3 + 32) = v10;
    *(void *)(a3 + 40) = v12;
    *(void *)(a3 + 48) = v14;
    *(void *)(a3 + 56) = v16;
    *(void *)(a3 + 64) = v18;
    *(unsigned char *)(a3 + 72) = 0;
    *(void *)(a3 + 80) = v20;
    *(_WORD *)(a3 + 88) = 256;
    *(unsigned char *)(a3 + 96) = v21;
    *(void *)(a3 + 104) = v22;
    *(void *)(a3 + 112) = v23;
    *(void *)(a3 + 120) = v24;
    *(void *)(a3 + 128) = v25;
    *(unsigned char *)(a3 + 136) = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001971A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D1AE8);
  __chkstk_darwin(v3 - 8);
  uint64_t v122 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v136 = (uint64_t)&v116 - v6;
  uint64_t v7 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v140 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v137 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v127 = (char *)&v116 - v10;
  uint64_t v135 = sub_1000FF33C(&qword_1015D1BD8);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v120 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v132 = (char *)&v116 - v13;
  __chkstk_darwin(v14);
  uint64_t v131 = (char *)&v116 - v15;
  __chkstk_darwin(v16);
  uint64_t v123 = (uint64_t)&v116 - v17;
  __chkstk_darwin(v18);
  uint64_t v138 = (char *)&v116 - v19;
  uint64_t v125 = sub_1000FF33C(&qword_1015D1A88);
  __chkstk_darwin(v125);
  uint64_t v133 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v116 - v22;
  uint64_t v24 = sub_1000FF33C(&qword_1015D1BE0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v130 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v129 = (char *)&v116 - v28;
  __chkstk_darwin(v29);
  uint64_t v126 = (char *)&v116 - v30;
  __chkstk_darwin(v31);
  double v139 = (char *)&v116 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v116 - v34;
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v116 - v37;
  uint64_t v39 = (void (*)(char *, char *, uint64_t))static Color.blue.getter();
  sub_100195024(v39, 0x64657370616C65, 0xE700000000000000, (uint64_t)v23);
  swift_release();
  uint64_t v143 = a1;
  uint64_t v124 = type metadata accessor for RectangleMark();
  sub_10019C39C();
  ChartContent.mask<A>(content:)();
  sub_1000FF2E0((uint64_t)v23, &qword_1015D1A88);
  uint64_t v119 = v25;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v128 = v38;
  v40(v38, v35, v24);
  uint64_t v41 = type metadata accessor for MapsElevationChartViewModel(0);
  id v42 = objc_retain(*(id *)(*(void *)(a1 + *(int *)(v41 + 56))
                          + OBJC_IVAR____TtC4Maps23MapsElevationChartStyle_barColor));
  uint64_t v43 = (void (*)(char *, char *, uint64_t))Color.init(uiColor:)();
  uint64_t v44 = v133;
  sub_100195024(v43, 0x676E696D6F637075, 0xE800000000000000, v133);
  swift_release();
  uint64_t v142 = a1;
  uint64_t v45 = v126;
  ChartContent.mask<A>(content:)();
  sub_1000FF2E0(v44, &qword_1015D1A88);
  uint64_t v124 = v24;
  v40(v139, v45, v24);
  uint64_t v46 = *(int *)(v41 + 44);
  uint64_t v47 = v140;
  uint64_t v48 = v127;
  uint64_t v141 = a1;
  uint64_t v49 = a1 + v46;
  uint64_t v50 = self;
  id v51 = [v50 meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v53 = v52;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v47 + 8);
  v54(v48, v7);
  if (v53 <= 0.0)
  {
    id v56 = [self labelColor];
    uint64_t result = Color.init(uiColor:)();
  }
  else
  {
    uint64_t result = static Color.blue.getter();
  }
  uint64_t v57 = *(void *)(v141 + 16);
  if (!*(void *)(v57 + 16))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v58 = result;
  uint64_t v59 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v117 = *(void *)(v59 - 8);
  unint64_t v60 = (*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80);
  uint64_t v133 = v59;
  uint64_t v61 = v57 + *(int *)(v59 + 24);
  uint64_t v125 = v60;
  uint64_t v62 = v61 + v60;
  uint64_t v63 = *(char **)(v47 + 16);
  uint64_t v64 = v137;
  uint64_t v140 = v47 + 16;
  uint64_t v126 = v63;
  ((void (*)(uint64_t, uint64_t, uint64_t))v63)(v137, v62, v7);
  Measurement<>.converted(to:)();
  v54((char *)v64, v7);
  Measurement.value.getter();
  double v66 = v65;
  v54(v48, v7);
  uint64_t v67 = v54;
  uint64_t v68 = v49;
  uint64_t v69 = v50;
  uint64_t v70 = v123;
  sub_100196D14(v58, v123, 0.0, v66);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v138, v70, v135);
  id v71 = [v69 meters];
  uint64_t v123 = v68;
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v73 = v72;
  v67(v48, v7);
  uint64_t v118 = v67;
  if (v73 <= 0.0)
  {
    uint64_t v85 = sub_1000FF33C(&qword_1015D1BE8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v136, 1, 1, v85);
    uint64_t v84 = v69;
    uint64_t v79 = v141;
  }
  else
  {
    uint64_t v116 = v69;
    id v74 = [v69 meters];
    uint64_t v75 = v123;
    Measurement<>.converted(to:)();

    Measurement.value.getter();
    double v77 = v76;
    v67(v48, v7);
    uint64_t v78 = v137;
    uint64_t v79 = v141;
    sub_100202130(v75, v137);
    Measurement<>.converted(to:)();
    v67((char *)v78, v7);
    Measurement.value.getter();
    double v81 = v80;
    v67(v48, v7);
    uint64_t v82 = v136;
    sub_100196930(v136, v77, v81);
    uint64_t v83 = sub_1000FF33C(&qword_1015D1BE8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v82, 0, 1, v83);
    uint64_t v84 = v116;
  }
  id v86 = [self labelColor];
  uint64_t result = Color.init(uiColor:)();
  uint64_t v87 = *(void *)(v79 + 16);
  uint64_t v88 = *(void *)(v87 + 16);
  uint64_t v89 = (void (*)(uint64_t, uint64_t, uint64_t))v126;
  if (!v88) {
    goto LABEL_12;
  }
  uint64_t v123 = result;
  uint64_t v117 = *(void *)(v117 + 72);
  uint64_t v90 = v137;
  uint64_t v91 = v125;
  ((void (*)(uint64_t, uint64_t, uint64_t))v126)(v137, v87 + v125 + v117 * (v88 - 1) + *(int *)(v133 + 20), v7);
  id v92 = [v84 meters];
  Measurement<>.converted(to:)();

  uint64_t v93 = v141;
  uint64_t v94 = (uint64_t (*)(char *, uint64_t))v118;
  v118((char *)v90, v7);
  Measurement.value.getter();
  double v96 = v95;
  uint64_t result = v94(v48, v7);
  uint64_t v97 = *(void *)(v93 + 16);
  uint64_t v98 = *(void *)(v97 + 16);
  if (v98)
  {
    v89(v90, v97 + v91 + (v98 - 1) * v117 + *(int *)(v133 + 24), v7);
    Measurement<>.converted(to:)();
    v94((char *)v90, v7);
    Measurement.value.getter();
    double v100 = v99;
    v94(v48, v7);
    sub_100196D14(v123, (uint64_t)v131, v96, v100);
    swift_release();
    uint64_t v101 = v119;
    uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v119 + 16);
    long long v103 = v129;
    uint64_t v104 = v124;
    v102(v129, v128, v124);
    v144[0] = v103;
    uint64_t v105 = v130;
    v102(v130, v139, v104);
    v144[1] = v105;
    uint64_t v106 = v134;
    long long v107 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
    uint64_t v108 = v132;
    uint64_t v109 = v135;
    v107(v132, v138, v135);
    v144[2] = v108;
    uint64_t v110 = v136;
    uint64_t v111 = v122;
    sub_1000FF27C(v136, v122, &qword_1015D1AE8);
    v144[3] = v111;
    uint64_t v112 = v120;
    uint64_t v113 = (uint64_t)v131;
    v107(v120, v131, v109);
    v144[4] = v112;
    sub_100194DA4(v144, v121);
    uint64_t v114 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
    v114(v113, v109);
    sub_1000FF2E0(v110, &qword_1015D1AE8);
    v114((uint64_t)v138, v109);
    uint64_t v115 = *(void (**)(char *, uint64_t))(v101 + 8);
    v115(v139, v104);
    v115(v128, v104);
    v114((uint64_t)v112, v109);
    sub_1000FF2E0(v111, &qword_1015D1AE8);
    v114((uint64_t)v132, v109);
    v115(v130, v104);
    return ((uint64_t (*)(char *, uint64_t))v115)(v129, v104);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100197F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v14 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v13 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v6 - 8);
  __chkstk_darwin(v7);
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = -*(double *)(a1 + *(int *)(type metadata accessor for MapsElevationChart() + 20));
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for MapsElevationChartViewModel(0);
  id v8 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v10 = v9;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  double v15 = v10;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return RectangleMark.init<A>(xStart:xEnd:yStart:yEnd:)();
}

uint64_t sub_1001981E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000FF33C(&qword_1015D1908);
  __chkstk_darwin(v7 - 8);
  uint64_t v24 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for RectangleMark();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v21 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = LocalizedStringKey.init(stringLiteral:)();
  type metadata accessor for MapsElevationChartViewModel(0);
  id v12 = [self meters];
  Measurement<>.converted(to:)();

  Measurement.value.getter();
  double v14 = v13;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  double v27 = v14;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  double v15 = sub_100202038();
  uint64_t v16 = v15[2];
  if (v16)
  {
    double v17 = *(double *)&v15[v16 + 3];
    swift_bridgeObjectRelease();
    double v27 = v17 + *(double *)(a1 + *(int *)(type metadata accessor for MapsElevationChart() + 20));
    static PlottableValue.value(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v21;
    RectangleMark.init<A>(xStart:xEnd:yStart:yEnd:)();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v18, v23);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_100198558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for MapsElevationChart();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = sub_1000FF33C(&qword_1015D17C0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015D1BD0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100F5CFA0;
  *(void *)(v12 + 32) = 0;
  double v13 = sub_100202038();
  uint64_t v14 = v13[2];
  if (v14)
  {
    uint64_t v15 = v13[v14 + 3];
    swift_bridgeObjectRelease();
    *(void *)(v12 + 40) = v15;
    sub_10019CE1C(a1, (uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
    unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v17 = swift_allocObject();
    sub_10019A9F0((uint64_t)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    sub_1000FF33C(&qword_1015D1B88);
    uint64_t v18 = sub_10010118C(&qword_1015D1B50);
    uint64_t v19 = sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
    uint64_t v23 = v18;
    uint64_t v24 = v19;
    swift_getOpaqueTypeConformance2();
    AxisMarks.init<A>(preset:position:values:content:)();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22, v11, v8);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001988A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v14[1] = a1;
  uint64_t v18 = a2;
  uint64_t v2 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_1000FF33C(&qword_1015D1B50);
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v17 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000FF33C(&qword_1015D1B88);
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (AxisValue.index.getter()) {
    uint64_t v10 = static UnitPoint.topTrailing.getter();
  }
  else {
    uint64_t v10 = static UnitPoint.topLeading.getter();
  }
  v14[0] = v14;
  __chkstk_darwin(v10);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  void v13[2] = sub_1000FF33C(&qword_1015D1B98);
  v13[3] = sub_10019CC68();
  v13[0] = sub_10019D10C;
  v13[1] = v13;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  AxisValue.index.getter();
  sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
  uint64_t v11 = v17;
  AxisMark.offset(x:y:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v11);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v18, v9, v15);
}

uint64_t sub_100198BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = sub_1000FF33C(&qword_1015D1BB0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1000FF33C(&qword_1015D1B98);
  __chkstk_darwin(v26);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(a1 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 72));
  uint64_t result = AxisValue.as<A>(_:)();
  if (v28)
  {
    __break(1u);
  }
  else
  {
    id v17 = [self meters];
    sub_10019B408();
    Measurement.init(value:unit:)();
    Measurement<>.converted(to:)();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v4 + 8);
    v18(v6, v3);
    Measurement.value.getter();
    double v20 = v19;
    v18(v9, v3);
    id v21 = [v15 stringFromValue:sub_10020160C() unit:v20];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    sub_1001964F4(v22, v24, (uint64_t)v12);
    swift_bridgeObjectRelease();
    uint64_t v25 = static Color.secondary.getter();
    sub_1000FF27C((uint64_t)v12, (uint64_t)v14, &qword_1015D1BB0);
    *(void *)&v14[*(int *)(v26 + 36)] = v25;
    sub_1000FF2E0((uint64_t)v12, &qword_1015D1BB0);
    return sub_100101750((uint64_t)v14, v27, &qword_1015D1B98);
  }
  return result;
}

uint64_t sub_100198EEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for MapsElevationChart();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v6 - 8);
  static AxisMarkPreset.inset.getter();
  sub_1002017A4();
  sub_10019CE1C(a1, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MapsElevationChart);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_10019A9F0((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  static AxisMarkPosition.automatic.getter();
  sub_1000FF33C(&qword_1015D1B20);
  sub_10019C858();
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t sub_1001990EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v117 = sub_1000FF33C(&qword_1015D1B70);
  __chkstk_darwin(v117);
  uint64_t v116 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1B68);
  __chkstk_darwin(v5 - 8);
  uint64_t v118 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1000FF33C(&qword_1015D1B78);
  __chkstk_darwin(v124);
  uint64_t v123 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D1B48);
  __chkstk_darwin(v8 - 8);
  uint64_t v125 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000FF33C(&qword_1015D1B38);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for AxisGridLine();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D19A0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v115 = (char *)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v137 = (char *)&v114 - v18;
  uint64_t v130 = sub_1000FF33C(&qword_1015D1B80);
  uint64_t v136 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v129 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v135 = (char *)&v114 - v21;
  uint64_t v22 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v22 - 8);
  uint64_t v23 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v23 - 8);
  uint64_t v128 = sub_1000FF33C(&qword_1015D1B50);
  uint64_t v127 = *(void (***)(char *, uint64_t))(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v25 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1000FF33C(&qword_1015D1B88);
  uint64_t v26 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v138 = (char *)&v114 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  double v139 = (char *)&v114 - v29;
  uint64_t result = AxisValue.as<A>(_:)();
  if (BYTE8(v147))
  {
    __break(1u);
    return result;
  }
  double v31 = *(double *)&v147;
  uint64_t v32 = sub_1002017A4();
  if (*(void *)(v32 + 16))
  {
    double v33 = *(double *)(v32 + 32);
    swift_bridgeObjectRelease();
    if (v31 == v33)
    {
      uint64_t v126 = v26;
      uint64_t v119 = v12;
      uint64_t v120 = v15;
      uint64_t v121 = v14;
      uint64_t v122 = a2;
      uint64_t v118 = (char *)type metadata accessor for MapsElevationChartViewModel(0);
      id v34 = [*(id *)(a1 + *((int *)v118 + 19)) stringFromValue:sub_10020160C() unit:v31];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = static UnitPoint.trailing.getter();
      __chkstk_darwin(v35);
      static AxisValueLabelCollisionResolution.automatic.getter();
      static AxisValueLabelOrientation.automatic.getter();
      uint64_t v112 = sub_1000FF33C(&qword_1015D1B98);
      unint64_t v113 = sub_10019CC68();
      uint64_t v110 = sub_10019D3FC;
      uint64_t v111 = &v108;
      char v109 = 1;
      uint64_t v108 = 0;
      AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
      swift_bridgeObjectRelease();
      if (qword_1015CBBA0 != -1) {
        swift_once();
      }
      sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
      uint64_t v36 = v138;
      uint64_t v37 = v128;
      AxisMark.offset(x:y:)();
      v127[1](v25, v37);
      uint64_t v38 = v126;
      uint64_t v39 = *(void (***)(char *, uint64_t))(v126 + 32);
      uint64_t v128 = v126 + 32;
      uint64_t v127 = v39;
      ((void (*)(char *, char *, uint64_t))v39)(v139, v36, v134);
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
      long long v147 = v144;
      long long v148 = v145;
      uint64_t v149 = v146;
      uint64_t v40 = v131;
      AxisGridLine.init(centered:stroke:)();
      id v41 = [self tertiaryLabelColor];
      uint64_t v140 = Color.init(uiColor:)();
      id v42 = v137;
      uint64_t v43 = v133;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v40, v43);
      uint64_t v44 = v121;
      uint64_t v45 = v120;
      if (qword_1015CBB98 != -1) {
        swift_once();
      }
      uint64_t v140 = v43;
      uint64_t v141 = &type metadata for Color;
      uint64_t v142 = &protocol witness table for AxisGridLine;
      uint64_t v143 = &protocol witness table for Color;
      swift_getOpaqueTypeConformance2();
      uint64_t v46 = v129;
      AxisMark.offset(x:y:)();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
      uint64_t v47 = v136;
      uint64_t v48 = *(char **)(v136 + 32);
      uint64_t v133 = v136 + 32;
      uint64_t v137 = v48;
      uint64_t v49 = v135;
      uint64_t v50 = v46;
      uint64_t v51 = v130;
      ((void (*)(char *, char *, uint64_t))v48)(v135, v46, v130);
      double v52 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
      double v53 = v138;
      uint64_t v54 = v134;
      v52(v138, v139, v134);
      uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v55(v50, v49, v51);
      id v56 = v123;
      uint64_t v57 = v53;
      uint64_t v58 = v54;
      v52(v123, v57, v54);
      uint64_t v59 = v124;
      unint64_t v60 = &v56[*(int *)(v124 + 48)];
      uint64_t v61 = v50;
      v55(v60, v50, v51);
      uint64_t v62 = (uint64_t)v125;
      ((void (*)(char *, char *, uint64_t))v127)(v125, v56, v58);
      ((void (*)(uint64_t, char *, uint64_t))v137)(v62 + *(int *)(v59 + 48), v60, v51);
      uint64_t v63 = *(void (**)(char *, uint64_t))(v136 + 8);
      v63(v61, v51);
      uint64_t v64 = *(void (**)(char *, uint64_t))(v38 + 8);
      v64(v138, v58);
      uint64_t v65 = (uint64_t)v119;
      sub_1000FF27C(v62, (uint64_t)v119, &qword_1015D1B48);
      sub_1000FF33C(&qword_1015D1BC8);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v62, &qword_1015D1B48);
      sub_1000FF27C(v65, v122, &qword_1015D1B38);
      sub_1000FF33C(&qword_1015D1B90);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v65, &qword_1015D1B38);
      v63(v135, v51);
      return ((uint64_t (*)(char *, uint64_t))v64)(v139, v58);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = sub_1002017A4();
  uint64_t v67 = *(void *)(v66 + 16);
  if (v67)
  {
    double v68 = *(double *)(v66 + 8 * v67 + 24);
    swift_bridgeObjectRelease();
    if (v31 == v68)
    {
      uint64_t v126 = v26;
      uint64_t v119 = v12;
      uint64_t v120 = v15;
      uint64_t v121 = v14;
      uint64_t v122 = a2;
      uint64_t v136 = type metadata accessor for MapsElevationChartViewModel(0);
      id v69 = [*(id *)(a1 + *(int *)(v136 + 76)) stringFromValue:sub_10020160C() unit:v31];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v70 = static UnitPoint.trailing.getter();
      __chkstk_darwin(v70);
      static AxisValueLabelCollisionResolution.automatic.getter();
      static AxisValueLabelOrientation.automatic.getter();
      uint64_t v112 = sub_1000FF33C(&qword_1015D1B98);
      unint64_t v113 = sub_10019CC68();
      uint64_t v110 = sub_10019CC48;
      uint64_t v111 = &v108;
      char v109 = 1;
      uint64_t v108 = 0;
      AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
      swift_bridgeObjectRelease();
      if (qword_1015CBBA0 != -1) {
        swift_once();
      }
      uint64_t v71 = v120;
      uint64_t v72 = v126;
      uint64_t v73 = v133;
      uint64_t v75 = v138;
      id v74 = v139;
      if (qword_1015CBB98 != -1) {
        swift_once();
      }
      sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
      uint64_t v76 = v128;
      AxisMark.offset(x:y:)();
      v127[1](v25, v76);
      double v77 = *(char **)(v72 + 32);
      uint64_t v130 = v72 + 32;
      uint64_t v135 = v77;
      uint64_t v78 = v134;
      ((void (*)(char *, char *))v77)(v74, v75);
      StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
      long long v147 = v144;
      long long v148 = v145;
      uint64_t v149 = v146;
      uint64_t v79 = v131;
      AxisGridLine.init(centered:stroke:)();
      id v80 = [self tertiaryLabelColor];
      uint64_t v140 = Color.init(uiColor:)();
      double v81 = v115;
      AxisMark.foregroundStyle<A>(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v79, v73);
      uint64_t v82 = v71;
      uint64_t v83 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      uint64_t v133 = v71 + 32;
      uint64_t v136 = (uint64_t)v83;
      uint64_t v84 = v137;
      uint64_t v85 = v121;
      v83(v137, v81, v121);
      id v86 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
      v86(v75, v74, v78);
      uint64_t v132 = *(void *)(v82 + 16);
      ((void (*)(char *, char *, uint64_t))v132)(v81, v84, v85);
      uint64_t v87 = v116;
      v86(v116, v75, v78);
      uint64_t v88 = v117;
      uint64_t v89 = &v87[*(int *)(v117 + 48)];
      uint64_t v90 = v81;
      ((void (*)(char *, char *, uint64_t))v132)(v89, v81, v85);
      uint64_t v91 = (uint64_t)v118;
      id v92 = v87;
      uint64_t v93 = v78;
      ((void (*)(char *, char *, uint64_t))v135)(v118, v92, v78);
      ((void (*)(uint64_t, char *, uint64_t))v136)(v91 + *(int *)(v88 + 48), v89, v85);
      uint64_t v94 = *(void (**)(char *, uint64_t))(v82 + 8);
      v94(v90, v85);
      double v95 = *(void (**)(char *, uint64_t))(v126 + 8);
      double v96 = v75;
      uint64_t v97 = v93;
      v95(v96, v93);
      uint64_t v98 = (uint64_t)v119;
      sub_1000FF27C(v91, (uint64_t)v119, &qword_1015D1B68);
      sub_1000FF33C(&qword_1015D1BC8);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v91, &qword_1015D1B68);
      sub_1000FF27C(v98, v122, &qword_1015D1B38);
      sub_1000FF33C(&qword_1015D1B90);
      swift_storeEnumTagMultiPayload();
      sub_1000FF2E0(v98, &qword_1015D1B38);
      v94(v137, v85);
      return ((uint64_t (*)(char *, uint64_t))v95)(v139, v97);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  type metadata accessor for MapsElevationChartViewModel(0);
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v147 = v144;
  long long v148 = v145;
  uint64_t v149 = v146;
  double v99 = v131;
  AxisGridLine.init(centered:stroke:)();
  id v100 = [self tertiaryLabelColor];
  uint64_t v140 = Color.init(uiColor:)();
  uint64_t v101 = v137;
  uint64_t v102 = v133;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v99, v102);
  if (qword_1015CBB98 != -1) {
    swift_once();
  }
  uint64_t v140 = v102;
  uint64_t v141 = &type metadata for Color;
  uint64_t v142 = &protocol witness table for AxisGridLine;
  uint64_t v143 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  long long v103 = v129;
  AxisMark.offset(x:y:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v101, v14);
  uint64_t v104 = v136;
  uint64_t v105 = v135;
  uint64_t v106 = v103;
  uint64_t v107 = v130;
  (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v135, v106, v130);
  (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(a2, v105, v107);
  sub_1000FF33C(&qword_1015D1B90);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v105, v107);
}

uint64_t sub_10019A4CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000FF33C(&qword_1015D1BB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001964F4(a1, a2, (uint64_t)v8);
  id v9 = [self tertiaryLabelColor];
  uint64_t v10 = Color.init(uiColor:)();
  sub_1000FF27C((uint64_t)v8, a3, &qword_1015D1BB0);
  *(void *)(a3 + *(int *)(sub_1000FF33C(&qword_1015D1B98) + 36)) = v10;
  return sub_1000FF2E0((uint64_t)v8, &qword_1015D1BB0);
}

double sub_10019A5BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  sub_10018C018((uint64_t)&v10);
  uint64_t v3 = v10;
  char v4 = v12;
  double result = v13;
  uint64_t v6 = v14;
  char v7 = v15;
  uint64_t v8 = v16;
  long long v9 = v11;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 48) = v4;
  *(double *)(a1 + 56) = result;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_10019A644(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0xDu) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_10019A65C()
{
  unint64_t result = qword_1015D17E8;
  if (!qword_1015D17E8)
  {
    sub_10010118C(&qword_1015D17D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D17E8);
  }
  return result;
}

unint64_t sub_10019A6C8()
{
  unint64_t result = qword_1015D1810;
  if (!qword_1015D1810)
  {
    sub_10010118C(&qword_1015D1808);
    sub_1001010F8(&qword_1015D1818, &qword_1015D1820);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1810);
  }
  return result;
}

unint64_t sub_10019A768()
{
  unint64_t result = qword_1015D1898;
  if (!qword_1015D1898)
  {
    sub_10010118C(&qword_1015D17A0);
    sub_10010118C(&qword_1015D18A0);
    sub_10010118C(&qword_1015D17D0);
    sub_10019A860();
    sub_10019A65C();
    swift_getOpaqueTypeConformance2();
    sub_1001010F8(&qword_1015D18C8, &qword_1015D18D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1898);
  }
  return result;
}

unint64_t sub_10019A860()
{
  unint64_t result = qword_1015D18A8;
  if (!qword_1015D18A8)
  {
    sub_10010118C(&qword_1015D18A0);
    sub_10019A8DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D18A8);
  }
  return result;
}

unint64_t sub_10019A8DC()
{
  unint64_t result = qword_1015D18B0;
  if (!qword_1015D18B0)
  {
    sub_10010118C(&qword_1015D18B8);
    sub_10010118C(&qword_1015D18C0);
    sub_10010118C(&qword_1015D1840);
    sub_1001010F8(&qword_1015D1848, &qword_1015D1840);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D18B0);
  }
  return result;
}

uint64_t sub_10019A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MapsElevationChart();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019AA54(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10018EB84);
}

uint64_t sub_10019AA70@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10018EFB8(a1, v6, a2);
}

uint64_t sub_10019AAF8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10019AB30(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_10019AB60@<X0>(uint64_t a1@<X8>)
{
  return sub_10018F9C8(a1);
}

uint64_t sub_10019AB68()
{
  return sub_10018FD70(*(void *)(v0 + 16));
}

uint64_t sub_10019AB70()
{
  uint64_t v1 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 17) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();

  char v7 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v8 = v6 + v7[11];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_10019ACFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001913C0(v5, v1 + v4, v6, a1);
}

unint64_t sub_10019ADAC()
{
  unint64_t result = qword_1015D1948;
  if (!qword_1015D1948)
  {
    sub_10010118C(&qword_1015D1940);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    sub_10019BFB0(&qword_1015D1950, &qword_1015D1958, (void (*)(void))sub_10019AEAC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1948);
  }
  return result;
}

unint64_t sub_10019AEAC()
{
  unint64_t result = qword_1015D1960;
  if (!qword_1015D1960)
  {
    sub_10010118C(&qword_1015D1968);
    sub_10019AF9C();
    sub_10010118C(&qword_1015D1980);
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1960);
  }
  return result;
}

unint64_t sub_10019AF9C()
{
  unint64_t result = qword_1015D1970;
  if (!qword_1015D1970)
  {
    sub_10010118C(&qword_1015D1978);
    sub_10010118C(&qword_1015D1980);
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1970);
  }
  return result;
}

uint64_t sub_10019B084()
{
  uint64_t v1 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + v0;
  unint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v9 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v10 = v8 + v9[11];
  uint64_t v11 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7, v5);
}

unint64_t sub_10019B220@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  int v8 = *(unsigned __int8 *)(v1 + v5);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))((v5 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);

  return sub_10018FF9C(v6, v7, v1 + v4, v8, v9, a1);
}

unint64_t sub_10019B2D4()
{
  unint64_t result = qword_1015D19C8;
  if (!qword_1015D19C8)
  {
    sub_10010118C(&qword_1015D19C0);
    sub_10010118C(&qword_1015D19D0);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10019BFB0(&qword_1015D1950, &qword_1015D1958, (void (*)(void))sub_10019AEAC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D19C8);
  }
  return result;
}

unint64_t sub_10019B408()
{
  unint64_t result = qword_1015D19E8;
  if (!qword_1015D19E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D19E8);
  }
  return result;
}

uint64_t sub_10019B448()
{
  return sub_10018F258(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10019B450()
{
  unint64_t result = qword_1015D19F8;
  if (!qword_1015D19F8)
  {
    sub_10010118C(&qword_1015D19F0);
    type metadata accessor for BarMark();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D19F8);
  }
  return result;
}

uint64_t sub_10019B508(uint64_t a1)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v32._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
  v32._uint64_t object = (void *)0x8000000100F78DE0;
  v7._uint64_t object = (void *)0x8000000100F78DB0;
  v7._uint64_t countAndFlagsBits = 0xD000000000000029;
  v8._uint64_t countAndFlagsBits = 0x4025206F74204025;
  v8._uint64_t object = (void *)0xE90000000000002ELL;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)qword_101611820, v8, v32);
  uint64_t result = type metadata accessor for MapsElevationChartViewModel(0);
  if (*(void *)(a1 + 16))
  {
    v28[1] = *(void *)(a1 + 16);
    uint64_t v11 = *(void **)(v1 + *(int *)(result + 72));
    type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
    Swift::String v31 = v9;
    Measurement<>.converted(to:)();
    Measurement.value.getter();
    double v13 = v12;
    uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v6, v3);
    id v15 = [v11 stringFromValue:sub_10020160C() unit:v13];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v17;
    uint64_t v30 = v16;

    Measurement<>.converted(to:)();
    Measurement.value.getter();
    double v19 = v18;
    v14(v6, v3);
    id v20 = [v11 stringFromValue:sub_10020160C() unit:v19];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100F5CFA0;
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v25 = sub_10011A750();
    uint64_t v26 = v29;
    *(void *)(v24 + 32) = v30;
    *(void *)(v24 + 40) = v26;
    *(void *)(v24 + 96) = &type metadata for String;
    *(void *)(v24 + 104) = v25;
    *(void *)(v24 + 64) = v25;
    *(void *)(v24 + 72) = v21;
    *(void *)(v24 + 80) = v23;
    uint64_t v27 = String.init(format:_:)();
    swift_bridgeObjectRelease();
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10019B86C(uint64_t a1)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D16E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for MapsElevationChartViewModel.ElevationDatum(0);
  uint64_t v7 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  Swift::String v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v10._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v55._uint64_t countAndFlagsBits = 0xD000000000000034;
  v55._uint64_t object = (void *)0x8000000100F78D70;
  v11._uint64_t object = (void *)0x8000000100F78D10;
  v10._uint64_t object = (void *)0x8000000100F78D40;
  v11._uint64_t countAndFlagsBits = 0xD000000000000029;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v10, v55);
  uint64_t result = v13._countAndFlagsBits;
  int64_t v14 = *(void *)(a1 + 16);
  Swift::String v50 = v13;
  if (v14)
  {
    uint64_t v49 = v1;
    uint64_t v54 = (double *)_swiftEmptyArrayStorage;
    sub_10025AFB8(0, v14, 0);
    id v15 = self;
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v51 = *(void *)(v7 + 72);
    id v52 = v15;
    uint64_t v17 = (void (**)(char *, uint64_t))(v4 + 8);
    double v18 = v54;
    do
    {
      sub_10019CE1C(v16, (uint64_t)v9, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
      id v19 = [v52 meters];
      Measurement<>.converted(to:)();

      Measurement.value.getter();
      double v21 = v20;
      (*v17)(v6, v3);
      sub_10019CE84((uint64_t)v9, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10025AFB8(0, *((void *)v18 + 2) + 1, 1);
        double v18 = v54;
      }
      unint64_t v23 = *((void *)v18 + 2);
      unint64_t v22 = *((void *)v18 + 3);
      unint64_t v24 = v23 + 1;
      if (v23 >= v22 >> 1)
      {
        sub_10025AFB8(v22 > 1, v23 + 1, 1);
        double v18 = v54;
      }
      *((void *)v18 + 2) = v24;
      v18[v23 + 4] = v21;
      v16 += v51;
      --v14;
    }
    while (v14);
    uint64_t v1 = v49;
  }
  else
  {
    double v18 = (double *)_swiftEmptyArrayStorage;
    unint64_t v24 = _swiftEmptyArrayStorage[2];
    if (!v24)
    {
LABEL_25:
      __break(1u);
      return result;
    }
  }
  double v25 = v18[4];
  unint64_t v26 = v24 - 1;
  if (v24 != 1)
  {
    uint64_t v27 = v18 + 5;
    do
    {
      double v28 = *v27++;
      double v29 = v28;
      if (v28 < v25) {
        double v25 = v29;
      }
      --v26;
    }
    while (v26);
  }
  uint64_t v30 = *(void **)(v1 + *(int *)(type metadata accessor for MapsElevationChartViewModel(0) + 76));
  id v31 = [v30 stringFromValue:sub_10020160C() unit:v25];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  uint64_t v35 = *((void *)v18 + 2);
  if (!v35)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_25;
  }
  double v36 = v18[4];
  uint64_t v37 = v35 - 1;
  if (v37)
  {
    uint64_t v38 = v18 + 5;
    do
    {
      double v39 = *v38++;
      double v40 = v39;
      if (v36 < v39) {
        double v36 = v40;
      }
      --v37;
    }
    while (v37);
  }
  swift_bridgeObjectRelease();
  id v41 = [v30 stringFromValue:sub_10020160C() unit:v36];
  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v43;

  sub_1000FF33C((uint64_t *)&unk_1015D59C0);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_100F5CFA0;
  *(void *)(v45 + 56) = &type metadata for String;
  unint64_t v46 = sub_10011A750();
  *(void *)(v45 + 32) = v32;
  *(void *)(v45 + 40) = v34;
  *(void *)(v45 + 96) = &type metadata for String;
  *(void *)(v45 + 104) = v46;
  *(void *)(v45 + 64) = v46;
  *(void *)(v45 + 72) = v42;
  *(void *)(v45 + 80) = v44;
  uint64_t v47 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v47;
}

uint64_t sub_10019BD24(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10018F444);
}

unint64_t sub_10019BD3C()
{
  unint64_t result = qword_1015D1A00;
  if (!qword_1015D1A00)
  {
    type metadata accessor for MapsElevationChartViewModel.ElevationDatum(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A00);
  }
  return result;
}

uint64_t sub_10019BD98(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001923D8);
}

uint64_t sub_10019BDB0()
{
  return sub_100193314(*(void *)(v0 + 16), (void (*)(__n128))sub_100202038);
}

uint64_t sub_10019BDFC()
{
  return sub_100193314(*(void *)(v0 + 16), (void (*)(__n128))sub_1002017A4);
}

uint64_t sub_10019BE4C(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100193518);
}

unint64_t sub_10019BE64()
{
  unint64_t result = qword_1015D1A10;
  if (!qword_1015D1A10)
  {
    sub_10010118C(&qword_1015D1A08);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    sub_10010118C(&qword_1015D1980);
    sub_1001010F8(&qword_1015D1988, &qword_1015D1980);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A10);
  }
  return result;
}

uint64_t sub_10019BF90(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100192954);
}

uint64_t sub_10019BFA8()
{
  return sub_100193CE0(*(void *)(v0 + 16));
}

uint64_t sub_10019BFB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10019C01C()
{
  unint64_t result = qword_1015D1A38;
  if (!qword_1015D1A38)
  {
    sub_10010118C(&qword_1015D1A40);
    sub_10010118C(&qword_1015D1A48);
    type metadata accessor for AreaMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10010118C(&qword_1015D1A50);
    sub_10010118C(&qword_1015D1A58);
    type metadata accessor for LineMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A38);
  }
  return result;
}

void *sub_10019C1BC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10019C1CC(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100193E98);
}

uint64_t sub_10019C1E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019C210(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019C23C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001971A4(*(void *)(v1 + 16), a1);
}

unint64_t sub_10019C244()
{
  unint64_t result = qword_1015D1A80;
  if (!qword_1015D1A80)
  {
    sub_10010118C(&qword_1015D1A78);
    sub_10010118C(&qword_1015D1A88);
    type metadata accessor for RectangleMark();
    sub_10019C39C();
    swift_getOpaqueTypeConformance2();
    type metadata accessor for PointMark();
    sub_10010118C(&qword_1015D1AC0);
    sub_10019C790(&qword_1015D1AC8, &qword_1015D1AC0, &qword_1015D1AD0, &qword_1015D1AD8);
    swift_getOpaqueTypeConformance2();
    sub_10019C62C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A80);
  }
  return result;
}

unint64_t sub_10019C39C()
{
  unint64_t result = qword_1015D1A90;
  if (!qword_1015D1A90)
  {
    sub_10010118C(&qword_1015D1A88);
    sub_10019C468();
    sub_10010118C(&qword_1015D1AA8);
    sub_10019C554();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A90);
  }
  return result;
}

unint64_t sub_10019C468()
{
  unint64_t result = qword_1015D1A98;
  if (!qword_1015D1A98)
  {
    sub_10010118C(&qword_1015D1AA0);
    sub_10010118C(&qword_1015D1A48);
    type metadata accessor for AreaMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1A98);
  }
  return result;
}

unint64_t sub_10019C554()
{
  unint64_t result = qword_1015D1AB0;
  if (!qword_1015D1AB0)
  {
    sub_10010118C(&qword_1015D1AA8);
    sub_10010118C(&qword_1015D1AB8);
    type metadata accessor for LineMark();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1AB0);
  }
  return result;
}

unint64_t sub_10019C62C()
{
  unint64_t result = qword_1015D1AE0;
  if (!qword_1015D1AE0)
  {
    sub_10010118C(&qword_1015D1AE8);
    type metadata accessor for PointMark();
    sub_10010118C(&qword_1015D1AF0);
    sub_10019C6F4();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1AE0);
  }
  return result;
}

unint64_t sub_10019C6F4()
{
  unint64_t result = qword_1015D1AF8;
  if (!qword_1015D1AF8)
  {
    sub_10010118C(&qword_1015D1AF0);
    sub_10019C790(&qword_1015D1B00, &qword_1015D1B08, &qword_1015D1B10, &qword_1015D1B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1AF8);
  }
  return result;
}

uint64_t sub_10019C790(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_1001010F8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10019C82C@<X0>(uint64_t a1@<X8>)
{
  return sub_100198558(*(void *)(v1 + 16), a1);
}

uint64_t sub_10019C834()
{
  return sub_100198EEC(*(void *)(v0 + 16));
}

uint64_t sub_10019C840(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001990EC);
}

unint64_t sub_10019C858()
{
  unint64_t result = qword_1015D1B28;
  if (!qword_1015D1B28)
  {
    sub_10010118C(&qword_1015D1B20);
    sub_10019C954();
    sub_10010118C(&qword_1015D19A0);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1B28);
  }
  return result;
}

unint64_t sub_10019C954()
{
  unint64_t result = qword_1015D1B30;
  if (!qword_1015D1B30)
  {
    sub_10010118C(&qword_1015D1B38);
    sub_10019C9D0();
    sub_10019CB20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1B30);
  }
  return result;
}

unint64_t sub_10019C9D0()
{
  unint64_t result = qword_1015D1B40;
  if (!qword_1015D1B40)
  {
    sub_10010118C(&qword_1015D1B48);
    sub_10010118C(&qword_1015D1B50);
    sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
    swift_getOpaqueTypeConformance2();
    sub_10010118C(&qword_1015D19A0);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1B40);
  }
  return result;
}

unint64_t sub_10019CB20()
{
  unint64_t result = qword_1015D1B60;
  if (!qword_1015D1B60)
  {
    sub_10010118C(&qword_1015D1B68);
    sub_10010118C(&qword_1015D1B50);
    sub_1001010F8(&qword_1015D1B58, &qword_1015D1B50);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1B60);
  }
  return result;
}

uint64_t sub_10019CC48@<X0>(uint64_t a1@<X8>)
{
  return sub_10019A4CC(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

unint64_t sub_10019CC68()
{
  unint64_t result = qword_1015D1BA0;
  if (!qword_1015D1BA0)
  {
    sub_10010118C(&qword_1015D1B98);
    sub_10019CD08();
    sub_1001010F8(&qword_1015D0F08, &qword_1015D0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1BA0);
  }
  return result;
}

unint64_t sub_10019CD08()
{
  unint64_t result = qword_1015D1BA8;
  if (!qword_1015D1BA8)
  {
    sub_10010118C(&qword_1015D1BB0);
    sub_10019CDA8();
    sub_1001010F8((unint64_t *)&unk_1015D08A0, (uint64_t *)&unk_1015D87F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1BA8);
  }
  return result;
}

unint64_t sub_10019CDA8()
{
  unint64_t result = qword_1015D1BB8;
  if (!qword_1015D1BB8)
  {
    sub_10010118C(&qword_1015D1BC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1BB8);
  }
  return result;
}

uint64_t sub_10019CE1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019CE84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10019CEF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v7 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v8 = v6 + v7[11];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10019D060(uint64_t a1)
{
  return sub_10019D078(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1001988A4);
}

uint64_t sub_10019D078(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_10019D10C@<X0>(uint64_t a1@<X8>)
{
  return sub_100198BF0(*(void *)(v1 + 16), a1);
}

uint64_t sub_10019D114@<X0>(uint64_t a1@<X8>)
{
  return sub_100197F38(*(void *)(v1 + 16), a1);
}

uint64_t sub_10019D11C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001981E8(*(void *)(v1 + 16), a1);
}

double sub_10019D124@<D0>(uint64_t a1@<X8>)
{
  return sub_100196BA0(a1);
}

double sub_10019D12C@<D0>(uint64_t a1@<X8>)
{
  return sub_100196FAC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10019D138(uint64_t a1)
{
  return sub_10019D2FC(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_1001957B8);
}

uint64_t sub_10019D154()
{
  uint64_t v1 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();

  uint64_t v7 = (int *)type metadata accessor for MapsElevationChartViewModel(0);
  uint64_t v8 = v6 + v7[11];
  uint64_t v9 = sub_1000FF33C(&qword_1015D16E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_10019D2E4(uint64_t a1)
{
  return sub_10019D2FC(a1, (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100195F74);
}

uint64_t sub_10019D2FC(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for MapsElevationChart() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v2 + v6);
  uint64_t v8 = *(void *)(v2 + v6 + 8);

  return a2(a1, v2 + v5, v7, v8);
}

uint64_t sub_10019D3C0()
{
  return sub_1001010F8(&qword_1015D1C18, (uint64_t *)&unk_1015D1C20);
}

uint64_t destroy for NearbyTransitCategory()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void *initializeWithCopy for NearbyTransitCategory(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for NearbyTransitCategory(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t assignWithTake for NearbyTransitCategory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NearbyTransitCategory()
{
  return &type metadata for NearbyTransitCategory;
}

unint64_t sub_10019D580()
{
  unint64_t result = qword_1015D1C30;
  if (!qword_1015D1C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1C30);
  }
  return result;
}

uint64_t sub_10019D5D4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019D5E0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return sub_10019E5AC(v2, v3);
}

Swift::Int sub_10019D654()
{
  return Hasher._finalize()();
}

uint64_t sub_10019D6B0()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10019D708()
{
  return Hasher._finalize()();
}

uint64_t sub_10019D760(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2) {
      return 1;
    }
    uint64_t v3 = a2;
    if (a1 == a2) {
      return 1;
    }
    uint64_t v4 = 0;
    uint64_t v27 = a1;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + v4 + 48);
      uint64_t v6 = *(void *)(a1 + v4 + 56);
      uint64_t v8 = *(void *)(a1 + v4 + 64);
      uint64_t v7 = *(void *)(a1 + v4 + 72);
      uint64_t v30 = *(void *)(a1 + v4 + 80);
      uint64_t v37 = *(void *)(a1 + v4 + 88);
      uint64_t v36 = *(void *)(a1 + v4 + 96);
      uint64_t v32 = *(void **)(a1 + v4 + 104);
      uint64_t v34 = *(void *)(a1 + v4 + 112);
      uint64_t v9 = *(void *)(v3 + v4 + 48);
      uint64_t v10 = *(void *)(v3 + v4 + 56);
      uint64_t v11 = *(void *)(v3 + v4 + 64);
      uint64_t v12 = *(void *)(v3 + v4 + 72);
      uint64_t v13 = *(void *)(v3 + v4 + 88);
      uint64_t v29 = *(void *)(v3 + v4 + 80);
      uint64_t v35 = *(void *)(v3 + v4 + 96);
      uint64_t v31 = *(void *)(v3 + v4 + 104);
      uint64_t v33 = *(void *)(v3 + v4 + 112);
      if (*(void *)(a1 + v4 + 32) != *(void *)(v3 + v4 + 32)
        || *(void *)(a1 + v4 + 40) != *(void *)(v3 + v4 + 40))
      {
        uint64_t v26 = v4;
        uint64_t v14 = *(void *)(v3 + v4 + 64);
        uint64_t v15 = v8;
        uint64_t v16 = v12;
        uint64_t v17 = v13;
        uint64_t v18 = v7;
        uint64_t v19 = v2;
        uint64_t v20 = v9;
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v9 = v20;
        uint64_t v2 = v19;
        uint64_t v7 = v18;
        uint64_t v13 = v17;
        uint64_t v12 = v16;
        uint64_t v8 = v15;
        uint64_t v11 = v14;
        uint64_t v4 = v26;
        if ((v21 & 1) == 0) {
          break;
        }
      }
      if (v6)
      {
        if (!v10) {
          return 0;
        }
        if (v5 != v9 || v6 != v10)
        {
          uint64_t v22 = v7;
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v7 = v22;
          if ((v23 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      if ((v8 != v11 || v7 != v12) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        return 0;
      }
      if (v37)
      {
        if (!v13) {
          return 0;
        }
        if (v30 == v29 && v37 == v13)
        {
          uint64_t result = 0;
        }
        else
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return 0;
          }
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v25 & 1) == 0) {
            return result;
          }
        }
      }
      else
      {
        uint64_t result = 0;
        if (v13) {
          return result;
        }
      }
      if (v36 != v35 || v34 != v33) {
        return result;
      }
      if (([v32 isEqual:v31] & 1) == 0) {
        return 0;
      }
      v4 += 88;
      --v2;
      a1 = v27;
      uint64_t v3 = a2;
      if (!v2) {
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_10019D9B4(unint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 == v20) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v5) {
    return 1;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v3 < 0) {
    uint64_t v8 = v3;
  }
  else {
    uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4) {
    uint64_t v7 = v8;
  }
  uint64_t v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v9 = v10;
  }
  if (v7 == v9) {
    return 1;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_50;
  }
  unint64_t v22 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_51:
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v11 = result;
    unint64_t v12 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0) {
      goto LABEL_21;
    }
LABEL_52:
    uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_23;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v11 = *(void *)(v3 + 32);
  uint64_t result = swift_retain();
  unint64_t v12 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0) {
    goto LABEL_52;
  }
LABEL_21:
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(a2 + 32);
    swift_retain();
LABEL_23:
    if (sub_1001A31B4(v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, v13 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type))
    {
      uint64_t v21 = v6;
      unint64_t v14 = 1 - v5;
      uint64_t v15 = 5;
      do
      {
        double v16 = *(double *)(v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
        uint64_t v6 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
        double v17 = *(double *)(v13 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
        int v18 = *(unsigned __int8 *)(v13 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
        swift_release();
        swift_release();
        if (v6)
        {
          if (!v18) {
            return 0;
          }
        }
        else
        {
          if (v16 == v17) {
            char v19 = v18;
          }
          else {
            char v19 = 1;
          }
          if (v19) {
            return 0;
          }
        }
        if (v14 + v15 == 5) {
          return 1;
        }
        unint64_t v5 = v15 - 4;
        if (v22)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v12) {
            goto LABEL_25;
          }
        }
        else
        {
          if (v5 >= *(void *)(v21 + 16))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          uint64_t v11 = *(void *)(v3 + 8 * v15);
          swift_retain();
          if (v12)
          {
LABEL_25:
            uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_26;
          }
        }
        if (v5 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(a2 + 8 * v15);
        swift_retain();
LABEL_26:
        ++v15;
      }
      while ((sub_1001A31B4(v11 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, v13 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type) & 1) != 0);
    }
    swift_release();
    swift_release();
    return 0;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_10019DC78(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_13:
    char v19 = 0;
    return v19 & 1;
  }
  if (v2 && a1 != a2)
  {
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    uint64_t v5 = v2 - 1;
    uint64_t v6 = (uint64_t *)(a2 + 56);
    uint64_t v7 = (uint64_t *)(a1 + 56);
    while (1)
    {
      uint64_t v21 = v5;
      uint64_t v8 = *(v7 - 2);
      uint64_t v9 = *(v7 - 1);
      uint64_t v10 = *v7;
      unint64_t v12 = (void *)*(v6 - 3);
      uint64_t v11 = *(v6 - 2);
      uint64_t v13 = *(v6 - 1);
      uint64_t v14 = *v6;
      id v15 = (id)*(v7 - 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v12;
      uint64_t v17 = v11;
      id v18 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((static NSObject.== infix(_:_:)() & 1) == 0
        || (sub_10019DE54(v8, v17) & 1) == 0
        || (sub_10019E030(v9, v13) & 1) == 0)
      {
        break;
      }
      char v19 = sub_1001AA30C(v10, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v5 = v21 - 1;
      if (v19)
      {
        v6 += 4;
        v7 += 4;
        if (v21) {
          continue;
        }
      }
      return v19 & 1;
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_10019DE54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    while (1)
    {
      sub_1000FF3F0(v3, (uint64_t)&v19);
      sub_1000FF3F0(v4, (uint64_t)&v17);
      if ((static NSObject.== infix(_:_:)() & 1) == 0) {
        break;
      }
      sub_1000FF4D4((uint64_t)&v20, (uint64_t)v13);
      sub_1000FF33C((uint64_t *)&unk_1015D1C50);
      if (!swift_dynamicCast())
      {
        uint64_t v12 = 0;
        long long v10 = 0u;
        long long v11 = 0u;
        sub_10010A7C4((uint64_t)&v10);
        break;
      }
      v15[0] = v10;
      v15[1] = v11;
      uint64_t v16 = v12;
      sub_1000FF4D4((uint64_t)&v18, (uint64_t)&v10);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v9 = 0;
        long long v7 = 0u;
        long long v8 = 0u;
        sub_10010A7C4((uint64_t)&v7);
        sub_1000F351C((uint64_t)v15);
        break;
      }
      v13[0] = v7;
      v13[1] = v8;
      uint64_t v14 = v9;
      char v5 = static AnyHashable.== infix(_:_:)();
      sub_1000F351C((uint64_t)v13);
      sub_1000F351C((uint64_t)v15);
      if ((v5 & 1) == 0) {
        break;
      }
      sub_1000FFC8C((uint64_t)&v17);
      sub_1000FFC8C((uint64_t)&v19);
      v3 += 48;
      v4 += 48;
      if (!--v2) {
        return 1;
      }
    }
    sub_1000FFC8C((uint64_t)&v17);
    sub_1000FFC8C((uint64_t)&v19);
  }
  return 0;
}

uint64_t sub_10019E030(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    while (1)
    {
      sub_1000FFEE8(v3, (uint64_t)v20);
      sub_1000FFEE8(v4, (uint64_t)v18);
      if ((static NSObject.== infix(_:_:)() & 1) == 0) {
        break;
      }
      BOOL v5 = v20[1] == v18[1] && v20[2] == v18[2];
      if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      sub_1000FF4D4((uint64_t)&v21, (uint64_t)v14);
      sub_1000FF33C((uint64_t *)&unk_1015D1C40);
      if (!swift_dynamicCast())
      {
        uint64_t v13 = 0;
        long long v11 = 0u;
        long long v12 = 0u;
        sub_10010A7C4((uint64_t)&v11);
        break;
      }
      v16[0] = v11;
      v16[1] = v12;
      uint64_t v17 = v13;
      sub_1000FF4D4((uint64_t)&v19, (uint64_t)&v11);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v10 = 0;
        long long v8 = 0u;
        long long v9 = 0u;
        sub_10010A7C4((uint64_t)&v8);
        sub_1000F351C((uint64_t)v16);
        break;
      }
      v14[0] = v8;
      v14[1] = v9;
      uint64_t v15 = v10;
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_1000F351C((uint64_t)v14);
      sub_1000F351C((uint64_t)v16);
      if ((v6 & 1) == 0) {
        break;
      }
      sub_1001008A0((uint64_t)v18);
      sub_1001008A0((uint64_t)v20);
      v3 += 64;
      v4 += 64;
      if (!--v2) {
        return 1;
      }
    }
    sub_1001008A0((uint64_t)v18);
    sub_1001008A0((uint64_t)v20);
  }
  return 0;
}

uint64_t sub_10019E22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        long long v6 = v3[3];
        _OWORD v14[2] = v3[2];
        v15[0] = v6;
        *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v3 + 57);
        long long v7 = v3[1];
        v14[0] = *v3;
        v14[1] = v7;
        long long v8 = v4[3];
        _OWORD v16[2] = v4[2];
        v17[0] = v8;
        *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v4 + 57);
        long long v9 = v4[1];
        v16[0] = *v4;
        v16[1] = v9;
        sub_10019F20C((uint64_t)v14);
        sub_10019F20C((uint64_t)v16);
        char v10 = sub_1002BF334((uint64_t)v14, (uint64_t)v16);
        sub_10019F274((uint64_t)v16);
        sub_10019F274((uint64_t)v14);
        BOOL v12 = v5-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 5;
        v3 += 5;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_10019E30C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v10 = (char *)&v30 - v9;
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit(0) - 8;
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v14;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      char v21 = 1;
    }
    else
    {
      uint64_t v34 = v15;
      uint64_t v35 = v10;
      uint64_t v36 = v4;
      uint64_t v37 = (char *)&v30 - v14;
      unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v30 = *(void *)(v13 + 72);
      uint64_t v31 = a2;
      uint64_t v32 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v19 = v17 - 1;
      do
      {
        sub_10019F2DC(a1 + v18, (uint64_t)v16, type metadata accessor for PlaceSummaryViewModelUnit);
        uint64_t v20 = v34;
        sub_10019F2DC(a2 + v18, v34, type metadata accessor for PlaceSummaryViewModelUnit);
        sub_1001A4F6C((uint64_t)v10);
        sub_1001A4F6C((uint64_t)v7);
        char v21 = static UUID.== infix(_:_:)();
        unint64_t v22 = *v33;
        char v23 = v7;
        unint64_t v24 = v7;
        uint64_t v25 = v36;
        (*v33)(v24, v36);
        v22(v10, v25);
        uint64_t v26 = v20;
        uint64_t v16 = v37;
        sub_10019F344(v26, type metadata accessor for PlaceSummaryViewModelUnit);
        sub_10019F344((uint64_t)v16, type metadata accessor for PlaceSummaryViewModelUnit);
        BOOL v28 = v19-- != 0;
        if ((v21 & 1) == 0) {
          break;
        }
        a2 = v31;
        v18 += v30;
        a1 = v32;
        long long v7 = v23;
      }
      while (v28);
    }
  }
  else
  {
    char v21 = 0;
  }
  return v21 & 1;
}

uint64_t sub_10019E5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        long long v6 = v3[1];
        v14[0] = *v3;
        v14[1] = v6;
        long long v7 = v3[3];
        _OWORD v14[2] = v3[2];
        _OWORD v14[3] = v7;
        long long v8 = v4[1];
        v15[0] = *v4;
        v15[1] = v8;
        long long v9 = v4[3];
        _OWORD v15[2] = v4[2];
        v15[3] = v9;
        sub_10019F164((uint64_t)v14);
        sub_10019F164((uint64_t)v15);
        char v10 = sub_1002C2260((uint64_t)v14, (uint64_t)v15);
        sub_10019F1B8((uint64_t)v15);
        sub_10019F1B8((uint64_t)v14);
        BOOL v12 = v5-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v3 += 4;
        v4 += 4;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_10019E67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v9 = (char *)&v48 - v8;
  uint64_t v10 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = type metadata accessor for PlaceSummaryViewModelLine(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16))
  {
    char v47 = 0;
    return v47 & 1;
  }
  uint64_t v57 = (uint64_t)&v48 - v22;
  if (!v23 || a1 == a2)
  {
    char v47 = 1;
    return v47 & 1;
  }
  uint64_t v49 = v11;
  uint64_t v50 = v23;
  unint64_t v60 = v9;
  uint64_t v61 = v6;
  uint64_t v62 = v4;
  uint64_t v24 = 0;
  unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v52 = a2 + v25;
  uint64_t v53 = a1 + v25;
  uint64_t v51 = *(void *)(v21 + 72);
  uint64_t v59 = (void (**)(uint64_t, uint64_t))(v65 + 8);
  uint64_t v26 = v57;
  Swift::String v55 = (int *)v17;
  id v56 = v19;
  while (1)
  {
    uint64_t v54 = v24;
    uint64_t v27 = v51 * v24;
    sub_10019F2DC(v53 + v51 * v24, v26, type metadata accessor for PlaceSummaryViewModelLine);
    sub_10019F2DC(v52 + v27, (uint64_t)v19, type metadata accessor for PlaceSummaryViewModelLine);
    if ((static UUID.== infix(_:_:)() & 1) == 0
      || (uint64_t v28 = v55[5],
          uint64_t v29 = *(void *)(v57 + v28),
          uint64_t v30 = *(void *)&v56[v28],
          uint64_t v31 = *(void *)(v29 + 16),
          uint64_t v32 = *(void *)(v30 + 16),
          uint64_t v64 = v29,
          uint64_t v65 = v31,
          v31 != v32))
    {
LABEL_19:
      sub_10019F344((uint64_t)v56, type metadata accessor for PlaceSummaryViewModelLine);
      sub_10019F344(v57, type metadata accessor for PlaceSummaryViewModelLine);
      char v47 = 0;
      return v47 & 1;
    }
    if (v65 && v64 != v30) {
      break;
    }
LABEL_13:
    if (*(unsigned __int8 *)(v57 + v55[6]) != v56[v55[6]]) {
      goto LABEL_19;
    }
    uint64_t v19 = v56;
    uint64_t v26 = v57;
    char v46 = *(unsigned char *)(v57 + v55[7]) ^ v56[v55[7]];
    sub_10019F344((uint64_t)v56, type metadata accessor for PlaceSummaryViewModelLine);
    sub_10019F344(v26, type metadata accessor for PlaceSummaryViewModelLine);
    if ((v46 & 1) == 0)
    {
      uint64_t v24 = v54 + 1;
      if (v54 + 1 != v50) {
        continue;
      }
    }
    char v47 = v46 ^ 1;
    return v47 & 1;
  }
  unint64_t v33 = 0;
  unint64_t v34 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v58 = *(void *)(v49 + 72);
  uint64_t v63 = v30;
  while (1)
  {
    uint64_t result = sub_10019F2DC(v64 + v34, (uint64_t)v16, type metadata accessor for PlaceSummaryViewModelUnit);
    if (v33 >= *(void *)(v30 + 16)) {
      break;
    }
    sub_10019F2DC(v30 + v34, (uint64_t)v13, type metadata accessor for PlaceSummaryViewModelUnit);
    uint64_t v36 = v13;
    uint64_t v37 = (uint64_t)v60;
    sub_1001A4F6C((uint64_t)v60);
    uint64_t v38 = (uint64_t)v16;
    uint64_t v39 = (uint64_t)v61;
    sub_1001A4F6C((uint64_t)v61);
    char v40 = static UUID.== infix(_:_:)();
    id v41 = *v59;
    uint64_t v42 = v39;
    uint64_t v43 = v62;
    (*v59)(v42, v62);
    uint64_t v44 = v37;
    uint64_t v13 = v36;
    uint64_t v30 = v63;
    uint64_t v45 = v43;
    uint64_t v16 = (char *)v38;
    v41(v44, v45);
    sub_10019F344((uint64_t)v13, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_10019F344(v38, type metadata accessor for PlaceSummaryViewModelUnit);
    if ((v40 & 1) == 0) {
      goto LABEL_19;
    }
    ++v33;
    v34 += v58;
    if (v65 == v33) {
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

id sub_10019EB74(unint64_t a1, uint64_t a2)
{
  return sub_10019EE78(a1, a2, (uint64_t)&qword_1015D1C60);
}

id sub_10019EB88(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    uint64_t v13 = v12;
    type metadata accessor for InfoCardButtonConfiguration();
    char v14 = static NSObject.== infix(_:_:)();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        uint64_t v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        uint64_t v21 = v20;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      unint64_t v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        uint64_t v27 = *v25++;
        uint64_t v26 = v27;
        uint64_t v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = static NSObject.== infix(_:_:)();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_10019EE64(unint64_t a1, uint64_t a2)
{
  return sub_10019EE78(a1, a2, (uint64_t)&unk_1015D6420);
}

id sub_10019EE78(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == v28) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  if (v7 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v7) {
    goto LABEL_38;
  }
  uint64_t v8 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0) {
    uint64_t v8 = v5;
  }
  if (!v6) {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v11 = a2;
  }
  else {
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v11;
  }
  if (v8 == v10)
  {
LABEL_38:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v29 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v5 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v13 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    unint64_t v15 = v14;
    sub_100100830(0, (unint64_t *)a3);
    a3 = static NSObject.== infix(_:_:)();

    if ((a3 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v16 = v7 - 1;
    if (v7 == 1) {
      return (id)(v7 & 1);
    }
    if (((a2 | v5) & 0xC000000000000001) != 0)
    {
      uint64_t v17 = 0;
      unint64_t v18 = v7 - 2;
      while (v16 != v17)
      {
        unint64_t v7 = v17 + 1;
        if (v29) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(v5 + 40 + 8 * v17);
        }
        a3 = (uint64_t)v19;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v7 >= *(void *)(v9 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v17);
        }
        uint64_t v21 = v20;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if ((v7 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v9 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      a3 = v23 - 1;
      unint64_t v24 = (void **)(v5 + 40);
      uint64_t v9 = a2 + 40;
      while (v16)
      {
        if (!a3) {
          goto LABEL_53;
        }
        uint64_t v26 = *v24++;
        unint64_t v25 = v26;
        uint64_t v27 = *(void **)v9;
        v9 += 8;
        a2 = v25;
        uint64_t v5 = v27;
        unint64_t v7 = static NSObject.== infix(_:_:)();

        if (v7)
        {
          --a3;
          if (--v16) {
            continue;
          }
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v9 + 16))
  {
    id v14 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019F164(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019F1B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019F20C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019F274(uint64_t a1)
{
  return a1;
}

uint64_t sub_10019F2DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10019F344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id MapsSharedTripAnalyticsHelper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsSharedTripAnalyticsHelper();
  return [super init];
}

id MapsSharedTripAnalyticsHelper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsSharedTripAnalyticsHelper();
  return [super dealloc];
}

void _s4Maps0A25SharedTripAnalyticsHelperC19sendSuccessAnalytic3forySo09MSPSharedC7ContactC_tFZ_0(void *a1)
{
  id v2 = [self sharedService];
  if (!v2)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v3 = v2;
  id v4 = [v2 destination];

  if (!v4)
  {
LABEL_21:
    __break(1u);
    return;
  }
  id v5 = [v4 contact];

  if (!v5)
  {
LABEL_13:
    unint64_t v18 = self;
    [v18 captureUserAction:104 target:0 value:0];
    return;
  }
  id v6 = [a1 contact];
  if (!v6)
  {
    unint64_t v7 = v5;
    goto LABEL_12;
  }
  unint64_t v7 = v6;
  id v8 = [v5 identifier];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  id v12 = [v7 identifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v9 == v13 && v11 == v15)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {

LABEL_12:
      goto LABEL_13;
    }
  }
  id v19 = self;
  id v20 = String._bridgeToObjectiveC()();
  [v19 captureUserAction:104 target:0 value:v20];
}

uint64_t type metadata accessor for MapsSharedTripAnalyticsHelper()
{
  return self;
}

id sub_10019F7BC(void *a1, char a2)
{
  if (a2) {
    return (id)swift_bridgeObjectRetain();
  }
  else {
    return a1;
  }
}

void destroy for TransitShields(uint64_t a1)
{
  sub_10019F808(*(void **)a1, *(unsigned char *)(a1 + 8));
  id v2 = *(void **)(a1 + 32);
}

void sub_10019F808(void *a1, char a2)
{
  if (a2) {
    swift_bridgeObjectRelease();
  }
  else {
}
  }

uint64_t initializeWithCopy for TransitShields(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10019F7BC(*(void **)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v6 = *(void **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for TransitShields(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_10019F7BC(*(void **)a2, v5);
  id v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10019F808(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v10;
  id v11 = v10;

  uint64_t v12 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v12;
  return a1;
}

uint64_t assignWithTake for TransitShields(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  id v6 = *(void **)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10019F808(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = a2[4];

  *(void *)(a1 + 40) = a2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitShields(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitShields(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)id result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TransitShields()
{
  return &type metadata for TransitShields;
}

void *sub_10019FA58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  double v4 = *(double *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 48);
  id v6 = [objc_allocWithZone((Class)MKTransitInfoLabelView) init];
  char v7 = v6;
  if ((v2 & 1) == 0)
  {
    [v6 setShieldSize:v1];
    [v7 setIconSize:v1];
  }
  if (v3) {
    [v7 setFont:v3];
  }
  if ((v5 & 1) == 0) {
    [v7 setMaxShieldHeight:v4];
  }
  return v7;
}

id sub_10019FB1C(void *a1, uint64_t a2)
{
  return sub_10019FCCC(a1, a2, *(void **)v2, *(unsigned char *)(v2 + 8));
}

uint64_t sub_10019FB38()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

void *sub_10019FB7C()
{
  return &protocol witness table for Never;
}

uint64_t sub_10019FB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10019FC78();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10019FBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10019FC78();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10019FC50()
{
}

unint64_t sub_10019FC78()
{
  unint64_t result = qword_1015D1C98;
  if (!qword_1015D1C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D1C98);
  }
  return result;
}

id sub_10019FCCC(void *a1, uint64_t a2, void *a3, char a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    sub_10019F808(a3, 1);
    [a1 setLabelItems:isa];
  }
  else
  {
    id v6 = a3;
    id v7 = [v6 _preloadedTransitInfo];
    if (v7)
    {
      id v8 = [self attributedTextFromPreload:v7 view:a1];
      [a1 setAttributedText:v8];
      sub_10019F808(a3, 0);
      swift_unknownObjectRelease();
    }
    else
    {
      [a1 setMapItem:v6];
      sub_10019F808(a3, 0);
    }
  }
  LODWORD(v9) = 1144750080;
  [a1 setContentHuggingPriority:0 forAxis:v9];
  LODWORD(v11) = 1132068864;

  return [a1 setContentCompressionResistancePriority:0 forAxis:v11];
}

uint64_t initializeBufferWithCopyOfBuffer for TransitShields.TransitShieldsDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10019F7BC(*(void **)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for TransitShields.TransitShieldsDataSource(uint64_t a1)
{
}

uint64_t assignWithCopy for TransitShields.TransitShieldsDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10019F7BC(*(void **)a2, v4);
  char v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10019F808(v5, v6);
  return a1;
}

uint64_t assignWithTake for TransitShields.TransitShieldsDataSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10019F808(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransitShields.TransitShieldsDataSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TransitShields.TransitShieldsDataSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10019FFA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10019FFA8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TransitShields.TransitShieldsDataSource()
{
  return &type metadata for TransitShields.TransitShieldsDataSource;
}

uint64_t sub_10019FFC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A003C()
{
  return sub_1001A4384();
}

uint64_t sub_1001A0050()
{
  return sub_1001A4384();
}

uint64_t sub_1001A00E4()
{
  return sub_1001A2C8C();
}

double sub_1001A01E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_1001A035C(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, unsigned __int8 a10)
{
  int v44 = a7;
  int v45 = a8;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v43 = a4;
  unint64_t v55 = a3;
  unint64_t v56 = a2;
  unint64_t v47 = a1;
  uint64_t v54 = a9;
  uint64_t v11 = sub_1000FF33C(&qword_1015D2AE0);
  uint64_t v46 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000FF33C(&qword_1015D2AE8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = &v10[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate__leadingEntity];
  unint64_t v59 = 0xF000000000000007;
  id v19 = v10;
  uint64_t v20 = sub_1000FF33C(&qword_1015D1D10);
  Published.init(initialValue:)();
  uint64_t v48 = v15;
  uint64_t v49 = v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v21(v18, v17, v14);
  uint64_t v22 = &v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate__trailingEntity];
  unint64_t v59 = 0xF000000000000007;
  v42[1] = v20;
  Published.init(initialValue:)();
  uint64_t v50 = v22;
  unint64_t v23 = v22;
  uint64_t v24 = v11;
  uint64_t v25 = v46;
  v21(v23, v17, v14);
  unint64_t v26 = v47;
  uint64_t v27 = &v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate__containerWidth];
  unint64_t v59 = 0x4069000000000000;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v13, v24);
  uint64_t v51 = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_backgroundColor;
  *(void *)&v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_backgroundColor] = 0;
  uint64_t v28 = &v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_actionButtons];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  uint64_t v29 = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_refinementButtons;
  *(void *)&v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_refinementButtons] = 0;
  uint64_t v30 = OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics;
  *(void *)&v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_metrics] = 0;
  v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_containsPhotoCarouselLine] = 0;
  if (*(void *)(v26 + 16))
  {
    LODWORD(v46) = a10;
    swift_beginAccess();
    unint64_t v58 = v26;
    sub_1000FF33C(&qword_1015CE958);
    Published.init(initialValue:)();
    swift_endAccess();
    uint64_t v31 = v49;
    swift_beginAccess();
    unint64_t v32 = v56;
    sub_10012E3C4(v56);
    unint64_t v33 = *(void (**)(char *, uint64_t))(v48 + 8);
    v33(v31, v14);
    unint64_t v58 = v32;
    Published.init(initialValue:)();
    swift_endAccess();
    unint64_t v34 = v50;
    swift_beginAccess();
    unint64_t v35 = v55;
    sub_10012E3C4(v55);
    v33(v34, v14);
    unint64_t v58 = v35;
    Published.init(initialValue:)();
    swift_endAccess();
    uint64_t v36 = v52;
    *(void *)uint64_t v28 = v43;
    *((void *)v28 + 1) = v36;
    swift_bridgeObjectRelease();
    *(void *)&v19[v29] = v53;
    swift_bridgeObjectRelease();
    v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_useCase] = v44;
    swift_beginAccess();
    LOBYTE(v58) = v45 & 1;
    Published.init(initialValue:)();
    swift_endAccess();
    *(void *)&v19[v51] = v54;
    swift_retain();
    swift_release();
    v19[OBJC_IVAR____TtC4Maps29PlaceSummaryViewModelTemplate_searchAlongRoute] = v46 & 1;

    uint64_t v37 = (objc_class *)type metadata accessor for PlaceSummaryViewModelTemplate(0);
    v57.receiver = v19;
    v57.super_class = v37;
    id v38 = [super init];
    swift_release();
    sub_10012E49C(v35);
    sub_10012E49C(v32);
  }
  else
  {
    swift_release();
    sub_10012E49C(v55);
    sub_10012E49C(v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void (**)(char *, uint64_t))(v48 + 8);
    v39(v49, v14);
    v39(v50, v14);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v40 = *(void **)&v19[v30];

    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v38;
}

uint64_t sub_1001A08DC(uint64_t a1)
{
  sub_1000FF27C(a1, (uint64_t)v13, (uint64_t *)&unk_1015CD260);
  if (v13[3])
  {
    type metadata accessor for PlaceSummaryViewModelTemplate(0);
    if (swift_dynamicCast())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v1 = v13[0];
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      char v2 = sub_10019E67C(v1, v13[0]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v3 = v13[0];
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v4 = v13[0];
      unint64_t v5 = v13[0] & 0xF000000000000007;
      if ((~v3 & 0xF000000000000007) != 0)
      {
        if (v5 == 0xF000000000000007)
        {
          char v6 = 0;
        }
        else
        {
          sub_10012E3C4(v3);
          char v6 = sub_1001AB864(v3, v4);
          sub_10012E49C(v4);
          sub_10012E49C(v3);
        }
      }
      else
      {
        if (v5 == 0xF000000000000007)
        {
          char v6 = 1;
          goto LABEL_12;
        }
        char v6 = 0;
        unint64_t v3 = v13[0];
      }
      sub_10012E49C(v3);
LABEL_12:
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v7 = v13[0];
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      unint64_t v8 = v13[0];
      if ((~v7 & 0xF000000000000007) != 0)
      {
        if ((~v13[0] & 0xF000000000000007) != 0)
        {
          sub_10012E3C4(v7);
          char v9 = sub_1001AB864(v7, v8);

          sub_10012E49C(v8);
          sub_10012E49C(v7);
        }
        else
        {

          char v9 = 0;
        }
        unint64_t v8 = v7;
      }
      else
      {

        if ((~v8 & 0xF000000000000007) == 0)
        {
          char v9 = 1;
          if ((v2 & 1) == 0) {
            goto LABEL_15;
          }
LABEL_23:
          char v10 = v6 & v9;
          return v10 & 1;
        }
        char v9 = 0;
      }
      sub_10012E49C(v8);
      if ((v2 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else
  {
    sub_1000FF2E0((uint64_t)v13, (uint64_t *)&unk_1015CD260);
  }
LABEL_15:
  char v10 = 0;
  return v10 & 1;
}

uint64_t sub_1001A0CB8(char a1)
{
  uint64_t v19 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v18 = (uint64_t)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v6 = (char *)&v17 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  unint64_t v8 = v20;
  char v9 = _swiftEmptyArrayStorage;
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v10 = v8[2];
  if (v10)
  {
    unint64_t v11 = 0;
    uint64_t v17 = v2;
    while (v11 < v8[2])
    {
      unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v13 = *(void *)(v2 + 72);
      sub_1001AB6CC((uint64_t)v8 + v12 + v13 * v11, (uint64_t)v6, type metadata accessor for PlaceSummaryViewModelLine);
      if (v6[*(int *)(v19 + 24)] == (a1 & 1))
      {
        uint64_t v14 = v10;
        sub_1001AB794((uint64_t)v6, v18, type metadata accessor for PlaceSummaryViewModelLine);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10025AF14(0, v9[2] + 1, 1);
        }
        char v9 = v20;
        unint64_t v16 = v20[2];
        unint64_t v15 = v20[3];
        if (v16 >= v15 >> 1)
        {
          sub_10025AF14(v15 > 1, v16 + 1, 1);
          char v9 = v20;
        }
        void v9[2] = v16 + 1;
        uint64_t result = sub_1001AB794(v18, (uint64_t)v9 + v12 + v16 * v13, type metadata accessor for PlaceSummaryViewModelLine);
        uint64_t v10 = v14;
        uint64_t v2 = v17;
      }
      else
      {
        uint64_t result = sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelLine);
      }
      if (v10 == ++v11)
      {
        char v9 = v20;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return (uint64_t)v9;
  }
  return result;
}

uint64_t sub_1001A0F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D59D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v9 = *(void *)(v14 + 16);
  if (v9)
  {
    sub_1001AB6CC(v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * (v9 - 1), (uint64_t)v4, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v10(v4, 0, 1, v5);
  }
  else
  {
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v10(v4, 1, 1, v5);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000FF2E0((uint64_t)v4, (uint64_t *)&unk_1015D59D0);
LABEL_9:
    uint64_t v11 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, v11, 1, v5);
  }
  sub_1001AB794((uint64_t)v4, (uint64_t)v8, type metadata accessor for PlaceSummaryViewModelLine);
  if (!sub_1001A11E0())
  {
    sub_1001AB734((uint64_t)v8, type metadata accessor for PlaceSummaryViewModelLine);
    goto LABEL_9;
  }
  sub_1001AB794((uint64_t)v8, a1, type metadata accessor for PlaceSummaryViewModelLine);
  uint64_t v11 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(a1, v11, 1, v5);
}

BOOL sub_1001A11E0()
{
  uint64_t v1 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for PlaceSummaryViewModelLine(0) + 20));
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v11 = *(void *)(v2 + 72);
  swift_bridgeObjectRetain();
  uint64_t v12 = v9 - 1;
  do
  {
    uint64_t v13 = v12;
    sub_1001AB6CC(v10, (uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB6CC((uint64_t)v7, (uint64_t)v4, type metadata accessor for PlaceSummaryViewModelUnit);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1001AB734((uint64_t)v4, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
    BOOL v15 = EnumCaseMultiPayload == 14;
    if (EnumCaseMultiPayload == 14) {
      break;
    }
    uint64_t v12 = v13 - 1;
    v10 += v11;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v15;
}

id sub_1001A13C0()
{
  return sub_1001A1950(0, (uint64_t (*)(void))type metadata accessor for PlaceSummaryViewModelTemplate);
}

uint64_t sub_1001A159C()
{
  return type metadata accessor for PlaceSummaryViewModelTemplate(0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelTemplate(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D1CF0);
}

void sub_1001A15C4()
{
  sub_1001A492C(319, &qword_1015D1D00, &qword_1015CE958);
  if (v0 <= 0x3F)
  {
    sub_1001A492C(319, &qword_1015D1D08, &qword_1015D1D10);
    if (v1 <= 0x3F)
    {
      sub_1001A4EC8(319, (unint64_t *)&qword_1015CEC30);
      if (v2 <= 0x3F)
      {
        sub_1001A4EC8(319, (unint64_t *)&qword_1015D1D18);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_1001A1770@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryViewModelTemplate(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_1001A1840(char a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_leadingMargin] = a2;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_trailingMargin] = a3;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topMargin] = a4;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomMargin] = a5;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topLeadingCornerRadius] = a6;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_topTrailingCornerRadius] = a7;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomLeadingCornerRadius] = a8;
  *(double *)&v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_bottomTrailingCornerRadius] = a9;
  v9[OBJC_IVAR____TtC4Maps19PlaceSummaryMetrics_showsDivider] = a1;
  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for PlaceSummaryMetrics();
  return [super init];
}

id sub_1001A1938(uint64_t a1)
{
  return sub_1001A1950(a1, type metadata accessor for PlaceSummaryMetrics);
}

id sub_1001A1950(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryMetrics()
{
  return self;
}

uint64_t sub_1001A19B0()
{
  return sub_1001A4384();
}

uint64_t sub_1001A19C4()
{
  return sub_1001A1FF0(&OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_id, &OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier, &OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent__mapItem, &qword_1015D2B28);
}

uint64_t sub_1001A19E8()
{
  return type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent(0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D1DC0);
}

uint64_t sub_1001A1A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A2144(a1, a2, a3, (uint64_t)&unk_1015D1DD0, (uint64_t)&unk_1015D1DD8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001A492C);
}

uint64_t sub_1001A1A38@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryViewModelUnit.ContainmentParent(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_1001A1A78(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A2F70(a1, a2, a3, a4, &OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier);
}

uint64_t sub_1001A1A84()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit24RealTimeAvailableCharger_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A1B38()
{
  return type metadata accessor for PlaceSummaryViewModelUnit.RealTimeAvailableCharger(0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.RealTimeAvailableCharger(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D1EC8);
}

uint64_t sub_1001A1B60()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A1BF8()
{
  return sub_1001A2C8C();
}

uint64_t sub_1001A1C0C(void *a1, char a2)
{
  uint64_t v5 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v9 = v2 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary__isSavedInLibrary;
  LOBYTE(aBlock[0]) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(void *)(v2 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_mapItem) = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = a2;
  id v10 = a1;
  swift_retain();
  static Published.subscript.setter();
  id v11 = [v10 _hikeAssociatedInfo];
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 encryptedTourMuid];

    uint64_t v14 = self;
    aBlock[4] = sub_1001ABBC4;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001A1F28;
    aBlock[3] = &unk_1012DC0D8;
    BOOL v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v14 fetchSavedRoutesWithTourMuid:v13 completion:v15];

    _Block_release(v15);
  }
  else
  {
  }
  return v2;
}

unint64_t sub_1001A1E5C(unint64_t result)
{
  if (result)
  {
    if (result >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v1 < 1) {
        return result;
      }
    }
    else if (*(uint64_t *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      return result;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1001A1F28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_100100830(0, (unint64_t *)&unk_1015DA6E0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A1FCC()
{
  return sub_1001A1FF0(&OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_id, &OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_mapItem, &OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary__isSavedInLibrary, (uint64_t *)&unk_1015D5AD0);
}

uint64_t sub_1001A1FF0(void *a1, void *a2, void *a3, uint64_t *a4)
{
  uint64_t v8 = v4 + *a1;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  uint64_t v10 = v4 + *a3;
  uint64_t v11 = sub_1000FF33C(a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A20F4()
{
  return type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D1FA8);
}

uint64_t sub_1001A211C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001A2144(a1, a2, a3, (uint64_t)&qword_1015CEC30, (uint64_t)&type metadata for Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001A4EC8);
}

uint64_t sub_1001A2144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = type metadata accessor for UUID();
  if (v10 <= 0x3F)
  {
    uint64_t result = a6(319, a4, a5);
    if (v11 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001A223C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryViewModelUnit.UserLibrary(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A227C(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AB0FC(*a1, *a2);
}

uint64_t sub_1001A2288()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A234C()
{
  return type metadata accessor for PlaceSummaryViewModelUnit.UserNote(0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.UserNote(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2098);
}

uint64_t sub_1001A2374()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A241C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A2490@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryViewModelUnit.UserNote(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_1001A24D0(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AB24C(*a1, *a2);
}

uint64_t sub_1001A24DC(unint64_t *a1, unint64_t *a2)
{
  return sub_1001AB864(*a1, *a2);
}

uint64_t sub_1001A24E8()
{
  return sub_1001A2C8C();
}

uint64_t sub_1001A24FC(char a1, uint64_t a2, int a3)
{
  int v18 = a3;
  uint64_t v6 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000FF33C(&qword_1015D2AF8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = v3 + OBJC_IVAR____TtC4Maps18DirectionsETAModel__ETAString;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  sub_1000FF33C(&qword_1015D0E70);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(v14, v13, v10);
  uint64_t v15 = v3 + OBJC_IVAR____TtC4Maps18DirectionsETAModel__isDriveable;
  LOBYTE(v19) = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(v15, v9, v6);
  UUID.init()();
  *(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA) = a1;
  *(void *)(v3 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem) = a2;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_searchAlongRoute) = v18;
  return v3;
}

uint64_t sub_1001A270C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps18DirectionsETAModel__ETAString;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2AF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps18DirectionsETAModel__isDriveable;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  uint64_t v5 = v0 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_id;
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A284C()
{
  return type metadata accessor for DirectionsETAModel(0);
}

uint64_t type metadata accessor for DirectionsETAModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D2168);
}

void sub_1001A2874()
{
  sub_1001A492C(319, (unint64_t *)&unk_1015D2178, &qword_1015D0E70);
  if (v0 <= 0x3F)
  {
    sub_1001A4EC8(319, (unint64_t *)&qword_1015CEC30);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1001A29B0()
{
  return sub_1001A2C8C();
}

uint64_t sub_1001A29C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DirectionsETAModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A2A04(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AADD0(*a1, *a2);
}

uint64_t sub_1001A2A10()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel__isDriveable;
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel_id;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A2B08()
{
  return type metadata accessor for AccessoryButtonViewModel(0);
}

uint64_t type metadata accessor for AccessoryButtonViewModel(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D22B0);
}

void sub_1001A2B30()
{
  sub_1001A4EC8(319, (unint64_t *)&qword_1015CEC30);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001A2C18()
{
  return sub_1001A4384();
}

uint64_t sub_1001A2C2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AccessoryButtonViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A2C6C(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AAF54(*a1, *a2);
}

uint64_t sub_1001A2C78()
{
  return sub_1001A2C8C();
}

uint64_t sub_1001A2C8C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A2CF8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel__snapshotImage;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2B18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel__fallbackImage;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A2DF4()
{
  return type metadata accessor for HikeRouteSnapshotViewModel(0);
}

uint64_t type metadata accessor for HikeRouteSnapshotViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D23B0);
}

void sub_1001A2E1C()
{
  sub_1001A492C(319, (unint64_t *)&qword_1015D23C0, (uint64_t *)&unk_1015D23C8);
  if (v0 <= 0x3F)
  {
    sub_1001A4EC8(319, (unint64_t *)&qword_1015CEC30);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1001A2F10()
{
  return sub_1001A4384();
}

uint64_t sub_1001A2F24@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for HikeRouteSnapshotViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

id sub_1001A2F64(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001A2F70(a1, a2, a3, a4, &OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem);
}

id sub_1001A2F70(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  return [*(id *)(*a1 + *a5) isEqual:*(void *)(*a2 + *a5)];
}

uint64_t sub_1001A2FA4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps33PlaceSummaryStackedImageViewModel__images;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2B20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A3058()
{
  return type metadata accessor for PlaceSummaryStackedImageViewModel(0);
}

uint64_t type metadata accessor for PlaceSummaryStackedImageViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D24E8);
}

void sub_1001A3080()
{
  sub_1001A492C(319, (unint64_t *)&unk_1015D24F8, (uint64_t *)&unk_1015D5AB0);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001A312C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryStackedImageViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A316C(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AB394(*a1, *a2, (uint64_t)&unk_100F62510, (uint64_t)&unk_100F62538, (uint64_t (*)(uint64_t))sub_10019D9B4) & 1;
}

uint64_t sub_1001A31B4(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = (char *)a2;
  uint64_t v3 = type metadata accessor for Image.TemplateRenderingMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  uint64_t v86 = v4;
  __chkstk_darwin(v3);
  uint64_t v89 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v76 - v7;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v88 = *(void (***)(char *, void *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v11);
  id v13 = (uint64_t *)((char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  unint64_t v16 = (void **)((char *)&v76 - v15);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = sub_1000FF33C(&qword_1015D2AB0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = &v22[*(int *)(v23 + 56)];
  sub_1001AB6CC(a1, (uint64_t)v22, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  sub_1001AB6CC((uint64_t)v90, (uint64_t)v24, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v29 = v88;
    sub_1001AB6CC((uint64_t)v22, (uint64_t)v19, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    if (!swift_getEnumCaseMultiPayload())
    {
      ((void (**)(char *, char *, uint64_t))v29)[4](v10, v24, v8);
      char v28 = static URL.== infix(_:_:)();
      uint64_t v62 = (void (*)(char *, uint64_t))v29[1];
      v62(v10, v8);
      v62(v19, v8);
      goto LABEL_18;
    }
    ((void (*)(char *, uint64_t))v29[1])(v19, v8);
    goto LABEL_16;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v90 = v22;
    sub_1001AB6CC((uint64_t)v22, (uint64_t)v13, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    uint64_t v30 = *v13;
    uint64_t v31 = sub_1000FF33C(&qword_1015D0F40);
    uint64_t v32 = swift_projectBox();
    uint64_t v88 = *(void (***)(char *, void *, uint64_t))(v32 + 8);
    int v33 = *(unsigned __int8 *)(v32 + 16);
    uint64_t v34 = *(void *)(v32 + 24);
    uint64_t v35 = *(int *)(v31 + 112);
    uint64_t v36 = *(void *)(v32 + v35);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_release();
      uint64_t v22 = v90;
      goto LABEL_16;
    }
    int v78 = v33;
    uint64_t v37 = *(void **)v32;
    uint64_t v79 = v30;
    id v80 = v37;
    uint64_t v38 = *(int *)(v31 + 96);
    uint64_t v39 = v32 + v38;
    double v81 = *(void **)v24;
    uint64_t v40 = swift_projectBox();
    id v41 = *(void **)v40;
    uint64_t v42 = *(void **)(v40 + 8);
    int v77 = *(unsigned __int8 *)(v40 + 16);
    uint64_t v84 = v36;
    uint64_t v43 = *(void *)(v40 + 24);
    uint64_t v44 = v40 + v38;
    uint64_t v45 = *(void *)(v40 + v35);
    uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
    uint64_t v47 = v85;
    v46(v87, v39, v85);
    v46(v89, v44, v47);
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    uint64_t v83 = v43;
    swift_retain();
    uint64_t v82 = v45;
    swift_retain();
    id v48 = v80;
    id v49 = v41;
    uint64_t v50 = v88;
    swift_retain();
    swift_retain();
    uint64_t v51 = v42;
    id v52 = v42;
    LOBYTE(v44) = static NSObject.== infix(_:_:)();

    if ((v44 & 1) == 0)
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v63 = *(void (**)(char *, uint64_t))(v86 + 8);
      v63(v89, v47);
      v63(v87, v47);
      swift_release();
LABEL_24:
      swift_release();
      sub_1001AB734((uint64_t)v90, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
      goto LABEL_25;
    }
    if (v88)
    {
      uint64_t v53 = v87;
      uint64_t v54 = v52;
      unint64_t v55 = v50;
      if (v51)
      {
        sub_100100830(0, (unint64_t *)&qword_1015D2AB8);
        unint64_t v56 = v50;
        id v57 = v54;
        char v58 = static NSObject.== infix(_:_:)();

        if (v58)
        {
LABEL_12:
          unint64_t v59 = v89;
          if (v78 != v77)
          {

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            unint64_t v60 = *(void (**)(char *, uint64_t))(v86 + 8);
            uint64_t v61 = v59;
LABEL_22:
            uint64_t v64 = v85;
            v60(v61, v85);
            v60(v53, v64);
LABEL_23:
            swift_release();
            goto LABEL_24;
          }
          uint64_t v66 = v86;
          if (v34)
          {
            if (!v83)
            {
              swift_release();
              swift_release();
              uint64_t v73 = v85;
              goto LABEL_37;
            }
            uint64_t v67 = v34 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type;
            uint64_t v68 = v83 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type;
            swift_retain();
            swift_retain();
            if ((sub_1001A31B4(v67, v68) & 1) == 0)
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              uint64_t v73 = v85;
              unint64_t v59 = v89;
              goto LABEL_37;
            }
            double v69 = *(double *)(v34 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
            char v70 = *(unsigned char *)(v34 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
            double v71 = *(double *)(v83 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
            char v72 = *(unsigned char *)(v83 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
            swift_release();
            swift_release();
            if (v70)
            {
              uint64_t v73 = v85;
              unint64_t v59 = v89;
              if (v72) {
                goto LABEL_41;
              }
            }
            else
            {
              uint64_t v73 = v85;
              unint64_t v59 = v89;
              if ((v72 & 1) == 0 && v69 == v71) {
                goto LABEL_41;
              }
            }
          }
          else
          {
            uint64_t v73 = v85;
            if (!v83)
            {
LABEL_41:
              if (static Image.TemplateRenderingMode.== infix(_:_:)())
              {
                char v28 = static Color.== infix(_:_:)();

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                uint64_t v75 = *(void (**)(char *, uint64_t))(v66 + 8);
                v75(v59, v73);
                v75(v53, v73);
                swift_release();
                swift_release();
                sub_1001AB734((uint64_t)v90, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
                return v28 & 1;
              }

              swift_release();
              swift_release();
              swift_release();
              goto LABEL_38;
            }
          }
          swift_release();
          swift_release();
LABEL_37:

          swift_release();
LABEL_38:
          swift_release();
          id v74 = *(void (**)(char *, uint64_t))(v66 + 8);
          v74(v59, v73);
          v74(v53, v73);
          goto LABEL_23;
        }
      }
    }
    else
    {
      uint64_t v53 = v87;
      uint64_t v54 = v52;
      unint64_t v55 = v50;
      if (!v51) {
        goto LABEL_12;
      }
    }
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    unint64_t v60 = *(void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v61 = v89;
    goto LABEL_22;
  }
  sub_1001AB6CC((uint64_t)v22, (uint64_t)v16, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  unint64_t v26 = *v16;
  if (swift_getEnumCaseMultiPayload() != 1)
  {

LABEL_16:
    sub_1000FF2E0((uint64_t)v22, &qword_1015D2AB0);
LABEL_25:
    char v28 = 0;
    return v28 & 1;
  }
  uint64_t v27 = *(void **)v24;
  sub_100100830(0, (unint64_t *)&qword_1015CE490);
  char v28 = static NSObject.== infix(_:_:)();

LABEL_18:
  sub_1001AB734((uint64_t)v22, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  return v28 & 1;
}

uint64_t sub_1001A3AF4()
{
  return sub_1001A4384();
}

uint64_t sub_1001A3B0C()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D0F40);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AB6CC(v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = swift_projectBox();
    uint64_t v8 = *(int *)(v1 + 96);
    uint64_t v9 = &v3[v8];
    uint64_t v10 = *(int *)(v1 + 112);
    uint64_t v11 = v7 + v8;
    uint64_t v12 = *(void *)(v7 + 8);
    *(void *)uint64_t v3 = *(void *)v7;
    *((void *)v3 + 1) = v12;
    uint64_t v13 = *(unsigned __int8 *)(v7 + 16);
    v3[16] = v13;
    *((void *)v3 + 3) = *(void *)(v7 + 24);
    uint64_t v14 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, v11, v14);
    *(void *)&v3[v10] = *(void *)(v7 + v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v14);
    swift_release();
  }
  else
  {
    sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    return 0;
  }
  return v13;
}

uint64_t sub_1001A3D04()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D0F40);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AB6CC(v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = swift_projectBox();
    uint64_t v8 = *(int *)(v1 + 96);
    uint64_t v9 = &v3[v8];
    uint64_t v10 = *(int *)(v1 + 112);
    uint64_t v11 = v7 + v8;
    uint64_t v12 = *(void *)(v7 + 8);
    *(void *)uint64_t v3 = *(void *)v7;
    *((void *)v3 + 1) = v12;
    v3[16] = *(unsigned char *)(v7 + 16);
    uint64_t v13 = *(void *)(v7 + 24);
    *((void *)v3 + 3) = v13;
    uint64_t v14 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, v11, v14);
    *(void *)&v3[v10] = *(void *)(v7 + v10);
    unint64_t v16 = *(void (**)(char *, uint64_t))(v15 + 8);
    swift_retain();
    v16(v9, v14);
    swift_release();
  }
  else
  {
    sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    return 0;
  }
  return v13;
}

uint64_t sub_1001A3F04()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D0F40);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AB6CC(v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = swift_projectBox();
    uint64_t v8 = *(int *)(v1 + 96);
    uint64_t v9 = &v3[v8];
    uint64_t v10 = *(int *)(v1 + 112);
    uint64_t v11 = v7 + v8;
    uint64_t v12 = *(void *)(v7 + 8);
    *(void *)uint64_t v3 = *(void *)v7;
    *((void *)v3 + 1) = v12;
    v3[16] = *(unsigned char *)(v7 + 16);
    *((void *)v3 + 3) = *(void *)(v7 + 24);
    uint64_t v13 = type metadata accessor for Image.TemplateRenderingMode();
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v9, v11, v13);
    uint64_t v15 = *(void *)(v7 + v10);
    *(void *)&v3[v10] = v15;
    unint64_t v16 = *(void (**)(char *, uint64_t))(v14 + 8);
    swift_retain();
    v16(v9, v13);
    swift_release();
  }
  else
  {
    sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    return static Color.clear.getter();
  }
  return v15;
}

uint64_t sub_1001A4100()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel__image;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2B18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1001AB734(v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_id;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A420C()
{
  return type metadata accessor for PlaceSummaryImageViewModel(0);
}

uint64_t type metadata accessor for PlaceSummaryImageViewModel(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D25E0);
}

void sub_1001A4234()
{
  sub_1001A492C(319, (unint64_t *)&qword_1015D23C0, (uint64_t *)&unk_1015D23C8);
  if (v0 <= 0x3F)
  {
    type metadata accessor for PlaceSummaryImageViewModel.ImageType(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for PlaceSummaryImageViewModel.ImageType(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D29E0);
}

uint64_t sub_1001A4370()
{
  return sub_1001A4384();
}

uint64_t sub_1001A4384()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A43F0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryImageViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A4430(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if ((sub_1001A31B4(*a1 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, *a2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type) & 1) == 0)return 0; {
  uint64_t result = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8) & 1) == 0) {
    return (*(double *)(v2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius) == *(double *)(v3 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius)) & ~result;
  }
  return result;
}

uint64_t sub_1001A44A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_id;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_1001A451C(uint64_t a1, char a2)
{
  uint64_t v5 = sub_1000FF33C(&qword_1015D2AE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D2AF0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel__images;
  uint64_t v17 = 0;
  sub_1000FF33C((uint64_t *)&unk_1015D2720);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  uint64_t v14 = v2 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel__width;
  uint64_t v17 = 0x4079000000000000;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v14, v8, v5);
  *(void *)(v2 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_mapItem) = a1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel_searchAlongRoute) = a2;
  return v2;
}

uint64_t sub_1001A4708()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel__images;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2AF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps34PlaceSummaryPhotoCarouselViewModel__width;
  uint64_t v4 = sub_1000FF33C(&qword_1015D2AE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A4804()
{
  return type metadata accessor for PlaceSummaryPhotoCarouselViewModel(0);
}

uint64_t type metadata accessor for PlaceSummaryPhotoCarouselViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D2708);
}

void sub_1001A482C()
{
  sub_1001A492C(319, &qword_1015D2718, (uint64_t *)&unk_1015D2720);
  if (v0 <= 0x3F)
  {
    sub_1001A4EC8(319, (unint64_t *)&qword_1015D1D18);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001A492C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_10010118C(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1001A497C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryPhotoCarouselViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A49BC(uint64_t *a1, uint64_t *a2)
{
  return sub_1001AB394(*a1, *a2, (uint64_t)&unk_100F62558, (uint64_t)&unk_100F62580, (uint64_t (*)(uint64_t))sub_1001A9DDC) & 1;
}

uint64_t sub_1001A4A04@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryPhotoCarouselViewModel(0);
  uint64_t result = Identifiable<>.id.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A4A48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A4ABC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001A4B30()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 >= 3)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    id v0 = [self *off_1012DC190[v2]];
    return Color.init(_:)();
  }
  return result;
}

uint64_t sub_1001A4C14()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps30PlaceSummaryEVChargerViewModel__displayString;
  uint64_t v2 = sub_1000FF33C(&qword_1015D2B08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Maps30PlaceSummaryEVChargerViewModel__evChargerStatus;
  uint64_t v4 = sub_1000FF33C(&qword_1015D2B10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC4Maps30PlaceSummaryEVChargerViewModel_id;
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A4D54()
{
  return type metadata accessor for PlaceSummaryEVChargerViewModel(0);
}

uint64_t type metadata accessor for PlaceSummaryEVChargerViewModel(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D2858);
}

void sub_1001A4D7C()
{
  sub_1001A4EC8(319, &qword_1015D2868);
  if (v0 <= 0x3F)
  {
    sub_1001B0858(319, (unint64_t *)&unk_1015D2870, (uint64_t (*)(uint64_t))type metadata accessor for GEOEVChargerAvailability_RealTimeStatus, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      type metadata accessor for UUID();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1001A4EC8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1001A4F10@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PlaceSummaryEVChargerViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001A4F50()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_1001A4F6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v1 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v63 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PlaceSummaryViewModelUnit.Hours(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v62 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  __chkstk_darwin(v7 - 8);
  unint64_t v60 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0);
  __chkstk_darwin(v9 - 8);
  unint64_t v59 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
  __chkstk_darwin(PartyRatings - 8);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  __chkstk_darwin(v26 - 8);
  char v28 = (char *)&v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for PlaceSummaryViewModelUnit.Distance(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v58 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t *)((char *)&v58 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB6CC(v64, (uint64_t)v37, type metadata accessor for PlaceSummaryViewModelUnit);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v31, type metadata accessor for PlaceSummaryViewModelUnit.Distance);
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v65, v31, v40);
      return sub_1001AB734((uint64_t)v31, type metadata accessor for PlaceSummaryViewModelUnit.Distance);
    case 2u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v28, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
      uint64_t v41 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v65, v28, v41);
      return sub_1001AB734((uint64_t)v28, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
    case 3u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v25, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      uint64_t v42 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v65, v25, v42);
      return sub_1001AB734((uint64_t)v25, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    case 4u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v22, type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      uint64_t v43 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v65, v22, v43);
      uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide;
      return sub_1001AB734((uint64_t)v22, v44);
    case 5u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v19, type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings);
      uint64_t v45 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v65, v19, v45);
      return sub_1001AB734((uint64_t)v19, type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings);
    case 6u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v16, type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings);
      uint64_t v46 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v65, v16, v46);
      return sub_1001AB734((uint64_t)v16, type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings);
    case 7u:
      sub_1001AB794((uint64_t)v37, (uint64_t)v13, type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations);
      uint64_t v47 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v65, v13, v47);
    case 8u:
      uint64_t v22 = v59;
      sub_1001AB794((uint64_t)v37, (uint64_t)v59, type metadata accessor for PlaceSummaryViewModelUnit.TransitShields);
      uint64_t v48 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v65, v22, v48);
      uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields;
      return sub_1001AB734((uint64_t)v22, v44);
    case 9u:
      uint64_t v49 = *v37;
      uint64_t v50 = OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_id;
      goto LABEL_20;
    case 0xAu:
      uint64_t v22 = v60;
      sub_1001AB794((uint64_t)v37, (uint64_t)v60, type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
      uint64_t v51 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v65, v22, v51);
      uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry;
      return sub_1001AB734((uint64_t)v22, v44);
    case 0xBu:
      uint64_t v52 = v61;
      sub_1001AB794((uint64_t)v37, v61, type metadata accessor for PlaceSummaryViewModelUnit.Delimiter);
      uint64_t v53 = type metadata accessor for UUID();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v65, v52, v53);
    case 0xCu:
      uint64_t v22 = v62;
      sub_1001AB794((uint64_t)v37, (uint64_t)v62, type metadata accessor for PlaceSummaryViewModelUnit.Hours);
      uint64_t v54 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v65, v22, v54);
      uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit.Hours;
      return sub_1001AB734((uint64_t)v22, v44);
    case 0xDu:
      uint64_t v49 = *v37;
      uint64_t v50 = OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit24RealTimeAvailableCharger_id;
      goto LABEL_20;
    case 0xEu:
      uint64_t v22 = v63;
      sub_1001AB794((uint64_t)v37, (uint64_t)v63, type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel);
      uint64_t v55 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v65, v22, v55);
      uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel;
      return sub_1001AB734((uint64_t)v22, v44);
    case 0xFu:
      uint64_t v49 = *v37;
      uint64_t v50 = OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_id;
      goto LABEL_20;
    case 0x10u:
      uint64_t v49 = *v37;
      uint64_t v50 = OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_id;
LABEL_20:
      uint64_t v56 = v49 + v50;
      uint64_t v57 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v65, v56, v57);
      uint64_t result = swift_release();
      break;
    default:
      sub_1001AB794((uint64_t)v37, (uint64_t)v34, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      uint64_t v38 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v65, v34, v38);
      uint64_t result = sub_1001AB734((uint64_t)v34, type metadata accessor for PlaceSummaryViewModelUnit.Label);
      break;
  }
  return result;
}

uint64_t sub_1001A5A9C()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - v5;
  sub_1001A4F6C((uint64_t)&v10 - v5);
  sub_1001A4F6C((uint64_t)v3);
  char v7 = static UUID.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t sub_1001A5BC0()
{
  uint64_t v40 = sub_1000FF33C(&qword_1015D0F40);
  __chkstk_darwin(v40);
  uint64_t v39 = (void *)((char *)v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v1 = type metadata accessor for PlaceSummaryImageViewModel.ImageType(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (void *)((char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v4 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  __chkstk_darwin(v46);
  uint64_t v45 = (uint64_t)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  uint64_t v9 = (void *)(v8 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v10 = v47;
  if ((~v47 & 0xF000000000000007) != 0)
  {
    if (!(v47 >> 61))
    {
      sub_10012E3D8(v47);
      sub_1001A626C(v10, v8);
      sub_10012E49C(v10);
    }
    sub_10012E49C(v10);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v11 = v47;
  if ((~v47 & 0xF000000000000007) != 0)
  {
    if (!(v47 >> 61))
    {
      sub_10012E3D8(v47);
      sub_1001A626C(v11, v8);
      sub_10012E49C(v11);
    }
    sub_10012E49C(v11);
  }
  uint64_t v12 = sub_1001A639C(0);
  if (v12)
  {
    v33[1] = v8;
    uint64_t v34 = v12;
    uint64_t v13 = v12[2];
    uint64_t v14 = v45;
    if (v13)
    {
      uint64_t v15 = (uint64_t)v34 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v16 = *(void *)(v4 + 72);
      uint64_t v37 = v3;
      uint64_t v38 = v1;
      uint64_t v35 = v6;
      uint64_t v36 = v9;
      uint64_t v43 = v16;
      do
      {
        sub_1001AB6CC(v15, (uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
        if (swift_getEnumCaseMultiPayload())
        {
          uint64_t v17 = type metadata accessor for PlaceSummaryViewModelUnit;
          uint64_t v18 = (uint64_t)v6;
        }
        else
        {
          sub_1001AB794((uint64_t)v6, v14, type metadata accessor for PlaceSummaryViewModelUnit.Label);
          uint64_t v19 = *(void *)(v14 + *(int *)(v46 + 36));
          if (v19)
          {
            swift_beginAccess();
            swift_retain_n();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            sub_1001AB6CC(v19 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type, (uint64_t)v3, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              uint64_t v42 = *v3;
              uint64_t v20 = swift_projectBox();
              uint64_t v21 = v39;
              uint64_t v22 = *(int *)(v40 + 96);
              uint64_t v23 = (char *)v39 + v22;
              uint64_t v24 = *(int *)(v40 + 112);
              uint64_t v41 = v20 + v22;
              uint64_t v25 = *(void *)(v20 + 8);
              void *v39 = *(void *)v20;
              v21[1] = v25;
              *((unsigned char *)v21 + 16) = *(unsigned char *)(v20 + 16);
              uint64_t v26 = *(void *)(v20 + 24);
              v21[3] = v26;
              uint64_t v27 = type metadata accessor for Image.TemplateRenderingMode();
              uint64_t v28 = *(void *)(v27 - 8);
              (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v23, v41, v27);
              *(void *)((char *)v21 + v24) = *(void *)(v20 + v24);
              uint64_t v29 = *(void (**)(char *, uint64_t))(v28 + 8);
              swift_retain();
              v29(v23, v27);
              swift_release();
              if (v26)
              {
                uint64_t v9 = v36;
                swift_beginAccess();
                swift_retain();
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                uint64_t v6 = v35;
                if (*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                swift_endAccess();
                swift_release();
                uint64_t v3 = v37;
              }
              else
              {
                uint64_t v3 = v37;
                uint64_t v6 = v35;
                uint64_t v9 = v36;
              }
            }
            else
            {
              sub_1001AB734((uint64_t)v3, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
            }
            swift_release();
            uint64_t v14 = v45;
            sub_1001AB734(v45, type metadata accessor for PlaceSummaryViewModelUnit.Label);
            uint64_t v16 = v43;
            goto LABEL_14;
          }
          uint64_t v17 = type metadata accessor for PlaceSummaryViewModelUnit.Label;
          uint64_t v18 = v14;
        }
        sub_1001AB734(v18, v17);
LABEL_14:
        v15 += v16;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_31;
    }
LABEL_33:
    uint64_t v30 = 0;
    goto LABEL_34;
  }
  if (!*(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_31:
  uint64_t v30 = *v9;
  swift_bridgeObjectRetain();
LABEL_34:
  swift_release();
  return v30;
}

uint64_t sub_1001A626C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 16);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t result = sub_1001A3D04();
  if (result)
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void *sub_1001A639C(int a1)
{
  int v55 = a1;
  uint64_t v1 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v47 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v45 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v51 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v13 = v56;
  uint64_t v50 = *(void *)(v56 + 16);
  if (!v50)
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      return v16;
    }
    goto LABEL_49;
  }
  unint64_t v14 = 0;
  uint64_t v15 = *(int *)(v10 + 20);
  uint64_t v48 = v56 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v49 = v15;
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v45 = v56;
  uint64_t v46 = v11;
  do
  {
    if (v14 >= *(void *)(v13 + 16))
    {
      __break(1u);
      JUMPOUT(0x1001A6AF8);
    }
    uint64_t v17 = *(void *)(v11 + 72);
    unint64_t v53 = v14;
    uint64_t v18 = v51;
    sub_1001AB6CC(v48 + v17 * v14, v51, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v19 = *(void *)(v18 + v49);
    swift_bridgeObjectRetain();
    sub_1001AB734(v18, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v19 + 16);
    if (v21)
    {
      uint64_t v22 = *(unsigned __int8 *)(v47 + 80);
      uint64_t v52 = v20;
      uint64_t v54 = (v22 + 32) & ~v22;
      uint64_t v23 = v20 + v54;
      uint64_t v24 = *(void *)(v47 + 72);
      do
      {
        sub_1001AB6CC(v23, (uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit);
        sub_1001AB6CC((uint64_t)v9, (uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            int v26 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v26 == 1) {
              goto LABEL_42;
            }
            break;
          case 2u:
            int v27 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v27 == 2) {
              goto LABEL_42;
            }
            break;
          case 3u:
            int v28 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v28 == 3) {
              goto LABEL_42;
            }
            break;
          case 4u:
            int v29 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v29 == 4) {
              goto LABEL_42;
            }
            break;
          case 5u:
            int v30 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v30 == 5) {
              goto LABEL_42;
            }
            break;
          case 6u:
            int v31 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v31 == 6) {
              goto LABEL_42;
            }
            break;
          case 7u:
            int v32 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v32 == 7) {
              goto LABEL_42;
            }
            break;
          case 8u:
            int v33 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v33 == 8) {
              goto LABEL_42;
            }
            break;
          case 9u:
            int v34 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v34 == 9) {
              goto LABEL_42;
            }
            break;
          case 0xAu:
            int v35 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v35 == 10) {
              goto LABEL_42;
            }
            break;
          case 0xBu:
            int v36 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v36 == 11) {
              goto LABEL_42;
            }
            break;
          case 0xCu:
            int v37 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v37 == 12) {
              goto LABEL_42;
            }
            break;
          case 0xDu:
            int v38 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v38 == 13) {
              goto LABEL_42;
            }
            break;
          case 0xEu:
            int v39 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v39 == 14) {
              goto LABEL_42;
            }
            break;
          case 0xFu:
            int v40 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v40 == 15) {
              goto LABEL_42;
            }
            break;
          case 0x10u:
            int v41 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (v41 == 16) {
              goto LABEL_42;
            }
            break;
          default:
            int v25 = v55;
            sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit);
            if (!v25)
            {
LABEL_42:
              sub_1001AB6CC((uint64_t)v9, (uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v16 = (void *)sub_1001D00BC(0, v16[2] + 1, 1, (unint64_t)v16);
              }
              unint64_t v43 = v16[2];
              unint64_t v42 = v16[3];
              if (v43 >= v42 >> 1) {
                uint64_t v16 = (void *)sub_1001D00BC(v42 > 1, v43 + 1, 1, (unint64_t)v16);
              }
              _OWORD v16[2] = v43 + 1;
              sub_1001AB794((uint64_t)v3, (uint64_t)v16 + v54 + v43 * v24, type metadata accessor for PlaceSummaryViewModelUnit);
            }
            break;
        }
        sub_1001AB734((uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit);
        v23 += v24;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      uint64_t v13 = v45;
      uint64_t v11 = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unint64_t v14 = v53 + 1;
  }
  while (v53 + 1 != v50);
  swift_bridgeObjectRelease();
  if (!v16[2])
  {
LABEL_49:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t sub_1001A6B3C()
{
  uint64_t v0 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1001A639C(0);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7[2];
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = (uint64_t)v7 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v10 = *(void *)(v1 + 72);
  while (1)
  {
    sub_1001AB6CC(v9, (uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
    if (!swift_getEnumCaseMultiPayload()) {
      break;
    }
    sub_1001AB734((uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
LABEL_5:
    v9 += v10;
    if (!--v8) {
      goto LABEL_9;
    }
  }
  sub_1001AB794((uint64_t)v3, (uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit.Label);
  uint64_t v11 = *(void *)&v6[*(int *)(v4 + 40)];
  swift_retain();
  sub_1001AB734((uint64_t)v6, type metadata accessor for PlaceSummaryViewModelUnit.Label);
  if (!v11) {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1001A6D34()
{
  uint64_t v0 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - v11;
  sub_1001A6F9C(14, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000FF2E0((uint64_t)v5, &qword_1015D2AD8);
    return 0;
  }
  sub_1001AB794((uint64_t)v5, (uint64_t)v12, type metadata accessor for PlaceSummaryViewModelUnit);
  sub_1001AB794((uint64_t)v12, (uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit);
  if (swift_getEnumCaseMultiPayload() != 14)
  {
    sub_1001AB734((uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit);
    return 0;
  }
  sub_1001AB794((uint64_t)v9, (uint64_t)v2, type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel);
  uint64_t v13 = *(void *)&v2[*(int *)(v0 + 20) + 8];
  swift_retain();
  sub_1001AB734((uint64_t)v2, type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel);
  return v13;
}

uint64_t sub_1001A6F9C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelLine(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v33 = (uint64_t)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v14 = v34;
  uint64_t v30 = *(void *)(v34 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v23, 1, v4);
  }
  uint64_t v26 = v12;
  uint64_t v27 = a2;
  unint64_t v15 = 0;
  uint64_t v16 = *(int *)(v11 + 20);
  uint64_t v31 = v34 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v32 = v16;
  uint64_t v17 = v12;
  uint64_t v28 = v34;
  uint64_t v29 = v5;
  do
  {
    if (v15 >= *(void *)(v14 + 16))
    {
      __break(1u);
      JUMPOUT(0x1001A761CLL);
    }
    uint64_t v18 = v33;
    sub_1001AB6CC(v31 + *(void *)(v17 + 72) * v15, v33, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v19 = *(void *)(v18 + v32);
    swift_bridgeObjectRetain();
    sub_1001AB734(v18, type metadata accessor for PlaceSummaryViewModelLine);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = v19 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v22 = *(void *)(v5 + 72);
      while (2)
      {
        sub_1001AB6CC(v21, (uint64_t)v10, type metadata accessor for PlaceSummaryViewModelUnit);
        sub_1001AB6CC((uint64_t)v10, (uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 != 1) {
              goto LABEL_7;
            }
            goto LABEL_45;
          case 2u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 2) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 3u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 3) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 4u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 4) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 5u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 5) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 6u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 6) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 7u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 7) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 8u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 8) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 9u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 9) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xAu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 10) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xBu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 11) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xCu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 12) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xDu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 13) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xEu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 14) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0xFu:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 15) {
              goto LABEL_45;
            }
            goto LABEL_7;
          case 0x10u:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (a1 == 16) {
              goto LABEL_45;
            }
            goto LABEL_7;
          default:
            sub_1001AB734((uint64_t)v7, type metadata accessor for PlaceSummaryViewModelUnit);
            if (!a1)
            {
LABEL_45:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v27;
              sub_1001AB794((uint64_t)v10, v27, type metadata accessor for PlaceSummaryViewModelUnit);
              uint64_t v23 = 0;
              uint64_t v5 = v29;
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v23, 1, v4);
            }
LABEL_7:
            sub_1001AB734((uint64_t)v10, type metadata accessor for PlaceSummaryViewModelUnit);
            v21 += v22;
            if (--v20) {
              continue;
            }
            swift_bridgeObjectRelease();
            uint64_t v14 = v28;
            uint64_t v5 = v29;
            uint64_t v17 = v26;
            break;
        }
        break;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v15;
  }
  while (v15 != v30);
  swift_bridgeObjectRelease();
  uint64_t v23 = 1;
  a2 = v27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v23, 1, v4);
}

unint64_t sub_1001A7660()
{
  uint64_t v0 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001A639C(13);
  if (!v4) {
    return 0;
  }
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = v4[2];
  if (!v5)
  {
    swift_bridgeObjectRelease();
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11) {
      return v9;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(unsigned __int8 *)(v1 + 80);
  v12[1] = v4;
  uint64_t v7 = (uint64_t)v4 + ((v6 + 32) & ~v6);
  uint64_t v8 = *(void *)(v1 + 72);
  do
  {
    sub_1001AB6CC(v7, (uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
    }
    else
    {
      sub_1001AB734((uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
    }
    v7 += v8;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  unint64_t v9 = v13;
  if (v13 >> 62) {
    goto LABEL_16;
  }
LABEL_11:
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

void *sub_1001A78A8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 >> 61 == 1)
    {
      sub_10012E3D8(v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_10012E49C(v3);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 >> 61 == 1)
    {
      sub_10012E3D8(v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_10012E49C(v3);
  }
  uint64_t v0 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2) {
      return v0;
    }
    goto LABEL_15;
  }
  if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

void *sub_1001A7AD0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 >> 61 == 3)
    {
      sub_10012E3D8(v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_10012E49C(v3);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 >> 61 == 3)
    {
      sub_10012E3D8(v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_10012E49C(v3);
  }
  uint64_t v0 = _swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2) {
      return v0;
    }
    goto LABEL_15;
  }
  if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v0;
}

unint64_t sub_1001A7CF8()
{
  uint64_t v0 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1001A639C(9);
  if (!v4) {
    return 0;
  }
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = v4[2];
  if (!v5)
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_11;
    }
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    goto LABEL_12;
  }
  uint64_t v6 = (uint64_t)v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  uint64_t v7 = *(void *)(v1 + 72);
  do
  {
    sub_1001AB6CC(v6, (uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_release();
    }
    else
    {
      sub_1001AB734((uint64_t)v3, type metadata accessor for PlaceSummaryViewModelUnit);
    }
    v6 += v7;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if (v12 >> 62) {
    goto LABEL_16;
  }
LABEL_11:
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

uint64_t sub_1001A7F20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((~v2 & 0xF000000000000007) == 0) {
    return 0;
  }
  switch(v2 >> 61)
  {
    case 1uLL:
      int v1 = *(unsigned __int8 *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA);
      sub_10012E49C(v2);
      if (v1) {
        uint64_t result = 2;
      }
      else {
        uint64_t result = 9;
      }
      break;
    case 2uLL:
      sub_10012E49C(v2);
      uint64_t result = 10;
      break;
    case 3uLL:
      sub_10012E49C(v2);
      uint64_t result = 11;
      break;
    case 4uLL:
      uint64_t result = dword_100F62B30[__ROR8__(v2, 3) ^ 0x1000000000000000];
      break;
    default:
      sub_10012E49C(v2);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1001A8074()
{
  uint64_t v96 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
  __chkstk_darwin(v96);
  uint64_t v97 = (uint64_t)&v95 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1000FF33C(&qword_1015D0498);
  __chkstk_darwin(v1 - 8);
  uint64_t v99 = (uint64_t)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
  __chkstk_darwin(v100);
  uint64_t v101 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v98 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v95 = (uint64_t)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v104 = (uint64_t)&v95 - v6;
  uint64_t v106 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
  __chkstk_darwin(v106);
  unint64_t v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v9 - 8);
  uint64_t v112 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v110 = (uint64_t)&v95 - v12;
  __chkstk_darwin(v13);
  uint64_t v113 = (uint64_t)&v95 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v95 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v95 - v19;
  uint64_t v21 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v102 = (uint64_t)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v103 = (uint64_t)&v95 - v25;
  __chkstk_darwin(v26);
  uint64_t v105 = (uint64_t *)((char *)&v95 - v27);
  __chkstk_darwin(v28);
  uint64_t v111 = (char *)&v95 - v29;
  __chkstk_darwin(v30);
  uint64_t v107 = (uint64_t)&v95 - v31;
  __chkstk_darwin(v32);
  uint64_t v114 = (uint64_t)&v95 - v33;
  __chkstk_darwin(v34);
  int v36 = (char *)&v95 - v35;
  __chkstk_darwin(v37);
  uint64_t v109 = (uint64_t)&v95 - v38;
  __chkstk_darwin(v39);
  int v41 = (char *)&v95 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v95 - v43;
  sub_1001A6F9C(4, (uint64_t)v20);
  uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v45(v20, 1, v21) == 1)
  {
    sub_1000FF2E0((uint64_t)v20, &qword_1015D2AD8);
  }
  else
  {
    sub_1001AB794((uint64_t)v20, (uint64_t)v44, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB6CC((uint64_t)v44, (uint64_t)v41, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1001AB794((uint64_t)v41, (uint64_t)v8, type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      v116[0] = 0;
      v116[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v116, "In your Guide ");
      HIBYTE(v116[1]) = -18;
      uint64_t v46 = (uint64_t *)&v8[*(int *)(v106 + 20)];
      uint64_t v47 = *v46;
      uint64_t v48 = (void *)v46[1];
      swift_bridgeObjectRetain();
      v49._uint64_t countAndFlagsBits = v47;
      v49._uint64_t object = v48;
      String.append(_:)(v49);
      swift_bridgeObjectRelease();
      uint64_t v50 = v116[0];
      sub_1001AB734((uint64_t)v8, type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide);
      uint64_t v51 = (uint64_t)v44;
      goto LABEL_29;
    }
    sub_1001AB734((uint64_t)v44, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB734((uint64_t)v41, type metadata accessor for PlaceSummaryViewModelUnit);
  }
  sub_1001A6F9C(3, (uint64_t)v17);
  if (v45(v17, 1, v21) == 1)
  {
    sub_1000FF2E0((uint64_t)v17, &qword_1015D2AD8);
  }
  else
  {
    uint64_t v52 = v109;
    sub_1001AB794((uint64_t)v17, v109, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB6CC(v52, (uint64_t)v36, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v53 = v104;
      sub_1001AB794((uint64_t)v36, v104, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      uint64_t v54 = v108;
      int v55 = (void *)(v53 + *(int *)(v108 + 24));
      uint64_t v56 = v55[1];
      v116[0] = *v55;
      v116[1] = v56;
      swift_bridgeObjectRetain();
      v57._uint64_t countAndFlagsBits = 8250;
      v57._uint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v57);
      uint64_t v58 = (uint64_t *)(v53 + *(int *)(v54 + 28));
      uint64_t v59 = *v58;
      unint64_t v60 = (void *)v58[1];
      swift_bridgeObjectRetain();
      v61._uint64_t countAndFlagsBits = v59;
      v61._uint64_t object = v60;
      String.append(_:)(v61);
      swift_bridgeObjectRelease();
      uint64_t v50 = v116[0];
      sub_1001AB734(v53, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      goto LABEL_21;
    }
    sub_1001AB734(v52, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB734((uint64_t)v36, type metadata accessor for PlaceSummaryViewModelUnit);
  }
  uint64_t v62 = v113;
  sub_1001A6F9C(2, v113);
  unsigned int v63 = v45((char *)v62, 1, v21);
  uint64_t v64 = v114;
  if (v63 == 1)
  {
    sub_1000FF2E0(v62, &qword_1015D2AD8);
  }
  else
  {
    sub_1001AB794(v62, v114, type metadata accessor for PlaceSummaryViewModelUnit);
    uint64_t v65 = v107;
    sub_1001AB6CC(v64, v107, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v66 = v65;
      uint64_t v67 = v101;
      sub_1001AB794(v66, v101, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
      uint64_t v68 = v99;
      uint64_t v69 = v100;
      sub_1000FF27C(v67 + *(int *)(v100 + 28), v99, &qword_1015D0498);
      uint64_t v70 = v108;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v68, 1, v108) == 1)
      {
        sub_1000FF2E0(v68, &qword_1015D0498);
        v116[0] = 0;
        v116[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(21);
        swift_bridgeObjectRelease();
        strcpy((char *)v116, "Featured in ");
        BYTE5(v116[1]) = 0;
        HIWORD(v116[1]) = -5120;
        id v115 = *(id *)(v67 + *(int *)(v69 + 20));
        v71._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v71);
        swift_bridgeObjectRelease();
        v72._uint64_t countAndFlagsBits = 0x73656469754720;
        v72._uint64_t object = (void *)0xE700000000000000;
        String.append(_:)(v72);
        uint64_t v50 = v116[0];
      }
      else
      {
        uint64_t v82 = v95;
        sub_1001AB794(v68, v95, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
        v116[0] = 0;
        v116[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        uint64_t v83 = (uint64_t *)(v82 + *(int *)(v70 + 24));
        uint64_t v85 = *v83;
        uint64_t v84 = v83[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v116[0] = v85;
        v116[1] = v84;
        v86._uint64_t countAndFlagsBits = 8250;
        v86._uint64_t object = (void *)0xE200000000000000;
        String.append(_:)(v86);
        uint64_t v87 = (uint64_t *)(v82 + *(int *)(v70 + 28));
        uint64_t v88 = *v87;
        uint64_t v89 = (void *)v87[1];
        swift_bridgeObjectRetain();
        v90._uint64_t countAndFlagsBits = v88;
        v90._uint64_t object = v89;
        String.append(_:)(v90);
        swift_bridgeObjectRelease();
        v91._uint64_t countAndFlagsBits = 0x20646E6120;
        v91._uint64_t object = (void *)0xE500000000000000;
        String.append(_:)(v91);
        id v115 = *(id *)(v67 + *(int *)(v69 + 20));
        v92._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v92);
        swift_bridgeObjectRelease();
        v93._uint64_t countAndFlagsBits = 0x73656469754720;
        v93._uint64_t object = (void *)0xE700000000000000;
        String.append(_:)(v93);
        uint64_t v50 = v116[0];
        sub_1001AB734(v82, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
      }
      sub_1001AB734(v67, type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides);
      uint64_t v51 = v64;
      goto LABEL_29;
    }
    sub_1001AB734(v64, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB734(v65, type metadata accessor for PlaceSummaryViewModelUnit);
  }
  uint64_t v52 = (uint64_t)v111;
  uint64_t v73 = (uint64_t)v112;
  uint64_t v74 = v110;
  sub_1001A6F9C(9, v110);
  if (v45((char *)v74, 1, v21) != 1)
  {
    sub_1001AB794(v74, v52, type metadata accessor for PlaceSummaryViewModelUnit);
    uint64_t v75 = v105;
    sub_1001AB6CC(v52, (uint64_t)v105, type metadata accessor for PlaceSummaryViewModelUnit);
    if (swift_getEnumCaseMultiPayload() != 9)
    {
      sub_1001AB734(v52, type metadata accessor for PlaceSummaryViewModelUnit);
      sub_1001AB734((uint64_t)v75, type metadata accessor for PlaceSummaryViewModelUnit);
      goto LABEL_23;
    }
    uint64_t v76 = *v75;
    strcpy((char *)v116, "Location ");
    WORD1(v116[1]) = 0;
    HIDWORD(v116[1]) = -385875968;
    id v115 = [*(id *)(v76 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit17ContainmentParent_parentIdentifier) muid];
    v77._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v77);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v50 = v116[0];
LABEL_21:
    uint64_t v51 = v52;
    goto LABEL_29;
  }
  sub_1000FF2E0(v74, &qword_1015D2AD8);
LABEL_23:
  sub_1001A6F9C(10, v73);
  if (v45((char *)v73, 1, v21) == 1)
  {
    sub_1000FF2E0(v73, &qword_1015D2AD8);
    return 0;
  }
  uint64_t v78 = v73;
  uint64_t v79 = v103;
  sub_1001AB794(v78, v103, type metadata accessor for PlaceSummaryViewModelUnit);
  uint64_t v80 = v102;
  sub_1001AB6CC(v79, v102, type metadata accessor for PlaceSummaryViewModelUnit);
  if (swift_getEnumCaseMultiPayload() != 10)
  {
    sub_1001AB734(v79, type metadata accessor for PlaceSummaryViewModelUnit);
    sub_1001AB734(v80, type metadata accessor for PlaceSummaryViewModelUnit);
    return 0;
  }
  uint64_t v81 = v97;
  sub_1001AB794(v80, v97, type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
  type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  type metadata accessor for AttributedString();
  sub_1001ABBCC(&qword_1015D2B00, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
  sub_1001AB734(v81, type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry);
  uint64_t v51 = v79;
LABEL_29:
  sub_1001AB734(v51, type metadata accessor for PlaceSummaryViewModelUnit);
  return v50;
}

uint64_t sub_1001A8EBC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D2AD8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v24 - v4;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v24 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - v13;
  sub_1001A6F9C(4, (uint64_t)&v24 - v13);
  uint64_t v15 = type metadata accessor for PlaceSummaryViewModelUnit(0);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  int v17 = v16(v14, 1, v15);
  sub_1000FF2E0((uint64_t)v14, &qword_1015D2AD8);
  if (v17 != 1) {
    return 9;
  }
  uint64_t v18 = (uint64_t)v2;
  sub_1001A6F9C(3, (uint64_t)v11);
  int v19 = v16(v11, 1, v15);
  sub_1000FF2E0((uint64_t)v11, &qword_1015D2AD8);
  if (v19 != 1) {
    return 10;
  }
  sub_1001A6F9C(2, (uint64_t)v8);
  int v20 = v16(v8, 1, v15);
  sub_1000FF2E0((uint64_t)v8, &qword_1015D2AD8);
  if (v20 != 1) {
    return 10;
  }
  sub_1001A6F9C(9, (uint64_t)v5);
  int v21 = v16(v5, 1, v15);
  sub_1000FF2E0((uint64_t)v5, &qword_1015D2AD8);
  if (v21 != 1) {
    return 15;
  }
  sub_1001A6F9C(10, v18);
  int v22 = v16((char *)v18, 1, v15);
  sub_1000FF2E0(v18, &qword_1015D2AD8);
  if (v22 == 1) {
    return 0;
  }
  else {
    return 13;
  }
}

char *sub_1001A9184(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      *(void *)a1 = *a2;
      unint64_t v8 = v7;
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1001A92A8(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_release();
      break;
    case 1:
      int v5 = *a1;

      break;
    case 0:
      uint64_t v3 = type metadata accessor for URL();
      uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
  }
}

void *sub_1001A9370(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    int v5 = (void *)*a2;
    *a1 = *a2;
    id v6 = v5;
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1001A9444(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1001AB734((uint64_t)a1, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      int v5 = (void *)*a2;
      *a1 = *a2;
      id v6 = v5;
    }
    else
    {
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1001A953C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1001A95F0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001AB734((uint64_t)a1, type metadata accessor for PlaceSummaryImageViewModel.ImageType);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1001A96D4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001A96E4()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryViewModelRefinementButtons()
{
  return &type metadata for PlaceSummaryViewModelRefinementButtons;
}

ValueMetadata *type metadata accessor for PlaceSummaryViewModelActionButtons()
{
  return &type metadata for PlaceSummaryViewModelActionButtons;
}

unint64_t *initializeBufferWithCopyOfBuffer for PlaceSummaryViewModelAccessoryEntity(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_10012E3D8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for PlaceSummaryViewModelAccessoryEntity(unint64_t *a1)
{
  return sub_10012E4B0(*a1);
}

unint64_t *assignWithCopy for PlaceSummaryViewModelAccessoryEntity(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_10012E3D8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_10012E4B0(v4);
  return a1;
}

unint64_t *assignWithTake for PlaceSummaryViewModelAccessoryEntity(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_10012E4B0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryViewModelAccessoryEntity(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 4) | (8 * ((*(void *)a1 >> 57) & 8 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryViewModelAccessoryEntity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)uint64_t result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1001A98FC(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 3) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 4;
  }
}

void *sub_1001A9918(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_1001A9928(unint64_t *result, uint64_t a2)
{
  if (a2 < 4)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 4);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryViewModelAccessoryEntity()
{
  return &type metadata for PlaceSummaryViewModelAccessoryEntity;
}

void *sub_1001A9964(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001A9A48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A9ABC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001A9B50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001A9BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001A9C84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1001A9D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A9D30);
}

uint64_t sub_1001A9D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A9D48);
}

uint64_t type metadata accessor for PlaceSummaryViewModelLine(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2A70);
}

uint64_t sub_1001A9D6C()
{
  return sub_1001B2840();
}

uint64_t sub_1001A9D88()
{
  return sub_1001ABBCC((unint64_t *)&qword_1015CEDB0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

void *sub_1001A9DD0()
{
  return &protocol witness table for ObjectIdentifier;
}

void sub_1001A9DDC(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_23:
    uint64_t v15 = 8 * v11;
    uint64_t v16 = *(void **)(*(void *)(a1 + 56) + v15);
    unint64_t v17 = sub_1001EA66C(*(void *)(*(void *)(a1 + 48) + v15));
    if ((v18 & 1) == 0) {
      return;
    }
    int v19 = *(void **)(*(void *)(a2 + 56) + 8 * v17);
    if (v19)
    {
      if (!v16) {
        return;
      }
      sub_100100830(0, (unint64_t *)&qword_1015D2AB8);
      id v20 = v16;
      id v21 = v19;
      id v22 = v20;
      char v23 = static NSObject.== infix(_:_:)();

      if ((v23 & 1) == 0) {
        return;
      }
    }
    else if (v16)
    {
      return;
    }
  }
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v12 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_22;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v4);
  if (v13)
  {
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_23;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_1001A9FB8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v35 = result;
  int64_t v2 = 0;
  uint64_t v33 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v34 = (unint64_t)(v3 + 63) >> 6;
  while (1)
  {
    if (v5)
    {
      uint64_t v37 = (v5 - 1) & v5;
      int64_t v38 = v2;
      unint64_t v6 = __clz(__rbit64(v5)) | (v2 << 6);
      goto LABEL_22;
    }
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v7 >= v34) {
      return 1;
    }
    unint64_t v8 = *(void *)(v33 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v34) {
        return 1;
      }
      unint64_t v8 = *(void *)(v33 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v34) {
          return 1;
        }
        unint64_t v8 = *(void *)(v33 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v37 = (v8 - 1) & v8;
    int64_t v38 = v9;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
    uint64_t v11 = 32 * v6;
    uint64_t v12 = *(void *)(result + 48) + v11;
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(result + 56) + v11;
    uint64_t v16 = *(void **)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v19 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 24);
    char v20 = *(unsigned char *)(v12 + 24);
    id v21 = *(id *)v12;
    sub_100100818(v13, v14, v20);
    id v22 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_100101C10((uint64_t)v21, v13, v14, v20);
    char v25 = v24;

    sub_1001007A8(v13, v14, v20);
    if ((v25 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return 0;
    }
    uint64_t v26 = *(void *)(a2 + 56) + 32 * v23;
    uint64_t v27 = *(void **)v26;
    uint64_t v28 = *(void *)(v26 + 8);
    uint64_t v30 = *(void *)(v26 + 16);
    uint64_t v29 = *(void *)(v26 + 24);
    sub_100100830(0, (unint64_t *)&qword_1015CE490);
    id v31 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((static NSObject.== infix(_:_:)() & 1) == 0
      || (sub_10019DE54(v28, v17) & 1) == 0
      || (sub_10019E030(v30, v19) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return 0;
    }
    char v32 = sub_1001AA30C(v29, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t result = v35;
    unint64_t v5 = v37;
    int64_t v2 = v38;
    if ((v32 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = v2 + 4;
  if (v2 + 4 >= v34) {
    return 1;
  }
  unint64_t v8 = *(void *)(v33 + 8 * v10);
  if (v8)
  {
    int64_t v9 = v2 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v34) {
      return 1;
    }
    unint64_t v8 = *(void *)(v33 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1001AA30C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v27 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  uint64_t v29 = result;
  int64_t v30 = 0;
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  unint64_t v6 = &qword_1015D2AC0;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v30 << 6);
LABEL_8:
      uint64_t v9 = *(void *)(v29 + 48) + 32 * v8;
      uint64_t v10 = *(void **)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t v12 = *(void *)(v9 + 16);
      unsigned __int8 v13 = *(unsigned char *)(v9 + 24);
      sub_1000FF27C(*(void *)(v29 + 56) + 40 * v8, (uint64_t)v44, v6);
      *(void *)&long long v42 = v10;
      *((void *)&v42 + 1) = v11;
      *(void *)&long long v43 = v12;
      BYTE8(v43) = v13;
      id v14 = v10;
      sub_100100818(v11, v12, v13);
      goto LABEL_27;
    }
    int64_t v15 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v15 < v28)
    {
      unint64_t v16 = *(void *)(v27 + 8 * v15);
      if (v16) {
        goto LABEL_12;
      }
      int64_t v17 = v30 + 2;
      ++v30;
      if (v15 + 1 < v28)
      {
        unint64_t v16 = *(void *)(v27 + 8 * v17);
        if (v16) {
          goto LABEL_15;
        }
        int64_t v30 = v15 + 1;
        if (v15 + 2 < v28)
        {
          unint64_t v16 = *(void *)(v27 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_12;
          }
          int64_t v17 = v15 + 3;
          int64_t v30 = v15 + 2;
          if (v15 + 3 < v28) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v5 = 0;
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    long long v42 = 0u;
    long long v43 = 0u;
LABEL_27:
    sub_1001AB7FC((uint64_t)&v42, (uint64_t)&v46);
    uint64_t v18 = v46;
    if (!v46) {
      return 1;
    }
    uint64_t v19 = v6;
    uint64_t v20 = v47;
    uint64_t v21 = v48;
    long long v42 = v50;
    long long v43 = v51;
    *(void *)&v44[0] = v52;
    unsigned __int8 v22 = v49;
    unint64_t v23 = sub_100101C10((uint64_t)v46, v47, v48, v49);
    char v25 = v24;

    sub_1001007A8(v20, v21, v22);
    if ((v25 & 1) == 0) {
      goto LABEL_38;
    }
    unint64_t v6 = v19;
    sub_1000FF27C(*(void *)(a2 + 56) + 40 * v23, (uint64_t)v41, v19);
    sub_1000FF4D4((uint64_t)v41, (uint64_t)v37);
    sub_1000FF33C(&qword_1015D2AD0);
    if (!swift_dynamicCast())
    {
      uint64_t v36 = 0;
      long long v34 = 0u;
      long long v35 = 0u;
      sub_1000FF2E0((uint64_t)&v34, &qword_1015CF1E0);
LABEL_37:
      sub_1000FF2E0((uint64_t)v41, &qword_1015D2AC0);
LABEL_38:
      sub_1000FF2E0((uint64_t)&v42, &qword_1015D2AC0);
      return 0;
    }
    v39[0] = v34;
    v39[1] = v35;
    uint64_t v40 = v36;
    sub_1000FF4D4((uint64_t)&v42, (uint64_t)&v34);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
      sub_1000FF2E0((uint64_t)&v31, &qword_1015CF1E0);
      sub_1000F351C((uint64_t)v39);
      goto LABEL_37;
    }
    v37[0] = v31;
    v37[1] = v32;
    uint64_t v38 = v33;
    char v26 = static AnyHashable.== infix(_:_:)();
    sub_1000F351C((uint64_t)v37);
    sub_1000F351C((uint64_t)v39);
    sub_1000FF2E0((uint64_t)v41, v19);
    uint64_t result = sub_1000FF2E0((uint64_t)&v42, v19);
    if ((v26 & 1) == 0) {
      return 0;
    }
  }
  unint64_t v16 = *(void *)(v27 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v15 = v17;
LABEL_12:
    unint64_t v5 = (v16 - 1) & v16;
    unint64_t v8 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v30 = v15;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v28)
    {
      int64_t v30 = v28 - 1;
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_12;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1001AA6FC(unint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  unint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  unint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    int64_t v15 = *(_DWORD **)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t result = sub_1001EA6A8(*(unsigned char *)(*(void *)(v3 + 48) + v11));
    if (v16)
    {
      int64_t v17 = *(_DWORD **)(*(void *)(a2 + 56) + 8 * result);
      if (v17[4] == v15[4] && v17[5] == v15[5] && v17[6] == v15[6]) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001AA890@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AA910(uint64_t a1, void **a2)
{
  int64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1001AA988@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AA99C(unint64_t *a1, void **a2)
{
  return sub_1001AA9D8(a1, a2);
}

uint64_t sub_1001AA9B0@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AA9C4(unint64_t *a1, void **a2)
{
  return sub_1001AA9D8(a1, a2);
}

uint64_t sub_1001AA9D8(unint64_t *a1, void **a2)
{
  unint64_t v2 = *a1;
  id v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10012E3C4(v2);
  id v4 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_1001AAA4C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AAB8C(a1);
}

uint64_t sub_1001AAA60()
{
  return sub_1001AAC1C();
}

double sub_1001AAA74@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001AAAF4()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001AAB78@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AAB8C(a1);
}

uint64_t sub_1001AAB8C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AAC08()
{
  return sub_1001AAC1C();
}

uint64_t sub_1001AAC1C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001AAC8C@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AACA0()
{
  return sub_1001AAD58();
}

uint64_t sub_1001AACB4@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AACC8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AAD44()
{
  return sub_1001AAD58();
}

uint64_t sub_1001AAD58()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001AADD0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA) == *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_showETA)
    && [*(id *)(a1 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem) isEqual:*(void *)(a2 + OBJC_IVAR____TtC4Maps18DirectionsETAModel_mapItem)])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v4)
    {
      swift_bridgeObjectRelease();
      char v2 = 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v2 = 1;
    }
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1001AAF54(uint64_t a1, uint64_t a2)
{
  if [*(id *)(a1 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel_mapItem) isEqual:*(void *)(a2 + OBJC_IVAR____TtC4Maps24AccessoryButtonViewModel_mapItem)]&& (static UUID.== infix(_:_:)())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v2 = v5 ^ v4 ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1001AB06C(uint64_t a1, uint64_t a2)
{
  if ((static UUID.== infix(_:_:)() & 1) != 0
    && (char v4 = (int *)type metadata accessor for PlaceSummaryViewModelLine(0),
        (sub_10019E30C(*(void *)(a1 + v4[5]), *(void *)(a2 + v4[5])) & 1) != 0)
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6]))
  {
    char v5 = *(unsigned char *)(a1 + v4[7]) ^ *(unsigned char *)(a2 + v4[7]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1001AB0FC(uint64_t a1, uint64_t a2)
{
  if ([*(id *)(a1 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_mapItem) isEqual:*(void *)(a2 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit11UserLibrary_mapItem)])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v2 = v5 ^ v4 ^ 1;
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_1001AB1FC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AAB8C(a1);
}

uint64_t sub_1001AB224()
{
  return sub_1001AAC1C();
}

id sub_1001AB24C(uint64_t a1, uint64_t a2)
{
  if (![*(id *)(a1 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_mapItem) isEqual:*(void *)(a2 + OBJC_IVAR____TtCO4Maps25PlaceSummaryViewModelUnit8UserNote_mapItem)])return 0; {
  NSString v2 = String._bridgeToObjectiveC()();
  }
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 isEqual:v3];

  return v4;
}

uint64_t sub_1001AB2F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AAB8C(a1);
}

uint64_t sub_1001AB31C()
{
  return sub_1001AAC1C();
}

uint64_t sub_1001AB344@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AB36C()
{
  return sub_1001AAD58();
}

uint64_t sub_1001AB394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v9)
  {
    uint64_t v6 = swift_bridgeObjectRetain();
    char v7 = a5(v6);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = 1;
  }
  return v7 & 1;
}

uint64_t sub_1001AB4BC@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001AB4E4()
{
  return sub_1001AAD58();
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2B90);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.Hours(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2C20);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2CB0);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2D40);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2DD8);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2E68);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2EF8);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D2F98);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D3030);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D30C8);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(uint64_t a1)
{
  return sub_100130928(a1, (uint64_t *)&unk_1015D3168);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.Distance(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D3208);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit.Label(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D3298);
}

uint64_t type metadata accessor for PlaceSummaryViewModelUnit(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D3490);
}

uint64_t sub_1001AB6CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AB734(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001AB794(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AB7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D2AC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AB864(unint64_t a1, unint64_t a2)
{
  switch(a1 >> 61)
  {
    case 1uLL:
      if (a2 >> 61 != 1) {
        return 0;
      }
      sub_10012E3D8(a1);
      sub_10012E3D8(a2);
      char v10 = sub_1001AADD0(a1 & 0x1FFFFFFFFFFFFFFFLL, a2 & 0x1FFFFFFFFFFFFFFFLL);
      goto LABEL_16;
    case 2uLL:
      if (a2 >> 61 != 2) {
        return 0;
      }
      sub_10012E3D8(a1);
      sub_10012E3D8(a2);
      char v10 = sub_1001AAF54(a1 & 0x1FFFFFFFFFFFFFFFLL, a2 & 0x1FFFFFFFFFFFFFFFLL);
LABEL_16:
      char v12 = v10;
      sub_10012E4B0(a2);
      sub_10012E4B0(a1);
      return v12 & 1;
    case 3uLL:
      if (a2 >> 61 != 3) {
        return 0;
      }
      return (uint64_t)[*(id *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem) isEqual:*(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL)+ OBJC_IVAR____TtC4Maps26HikeRouteSnapshotViewModel_mapItem)];
    case 4uLL:
      switch(__ROR8__(a1, 3) ^ 0x1000000000000000)
      {
        case 1:
          return a2 == 0x8000000000000008;
        case 2:
          return a2 == 0x8000000000000010;
        case 3:
          return a2 == 0x8000000000000018;
        case 4:
          return a2 == 0x8000000000000020;
        case 5:
          return a2 == 0x8000000000000028;
        default:
          return a2 == 0x8000000000000000;
      }
    default:
      if (a2 >> 61) {
        return 0;
      }
      uint64_t v4 = a1 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type;
      uint64_t v5 = a2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_type;
      sub_10012E3D8(a1);
      sub_10012E3D8(a2);
      if (sub_1001A31B4(v4, v5))
      {
        double v6 = *(double *)(a1 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
        char v7 = *(unsigned char *)(a1 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
        double v8 = *(double *)(a2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius);
        char v9 = *(unsigned char *)(a2 + OBJC_IVAR____TtC4Maps26PlaceSummaryImageViewModel_cornerRadius + 8);
        sub_10012E4B0(a2);
        sub_10012E4B0(a1);
        if (v7)
        {
          if (v9) {
            return 1;
          }
        }
        else
        {
          if (v6 == v8) {
            char v13 = v9;
          }
          else {
            char v13 = 1;
          }
          if ((v13 & 1) == 0) {
            return 1;
          }
        }
      }
      else
      {
        sub_10012E4B0(a2);
        sub_10012E4B0(a1);
      }
      return 0;
  }
}

uint64_t sub_1001ABAE4@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001ABB0C(unint64_t *a1, void **a2)
{
  return sub_1001AA9D8(a1, a2);
}

uint64_t sub_1001ABB34@<X0>(void *a1@<X8>)
{
  return sub_1001AACC8(a1);
}

uint64_t sub_1001ABB5C(unint64_t *a1, void **a2)
{
  return sub_1001AA9D8(a1, a2);
}

uint64_t sub_1001ABB8C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001ABBC4(unint64_t result)
{
  return sub_1001A1E5C(result);
}

uint64_t sub_1001ABBCC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1001ABC5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *char v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1001ABD30(uint64_t a1, uint64_t a2)
{
  return sub_1001B09AC(a1, a2, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t sub_1001ABD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1001ABDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001ABE70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0BF0(a1, a2, a3, (void (*)(uint64_t))&_swift_release);
}

uint64_t sub_1001ABE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ABE9C);
}

uint64_t sub_1001ABEA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ABEB4);
}

uint64_t sub_1001ABEB8()
{
  return sub_1001B0CB4();
}

uint64_t *sub_1001ABEC4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    char v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1001ABFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1001AC074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001AC12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001AC1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001AC29C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001AC354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC368);
}

uint64_t sub_1001AC368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for AttributedString();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1001AC460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC474);
}

uint64_t sub_1001AC474(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for AttributedString();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1001AC578()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributedString();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1001AC640(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1001AC710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001AC790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001AC810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AC824);
}

uint64_t sub_1001AC824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1001AC8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AC8F4);
}

uint64_t sub_1001AC8F4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1001AC9B0()
{
  return sub_1001B0CB4();
}

void *sub_1001AC9BC(void *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = *(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v36 = a3;
    uint64_t v37 = a2;
    uint64_t v9 = *(int *)(a3 + 20);
    unsigned int v10 = (char *)a1 + v9;
    uint64_t v11 = &a2[v9];
    v8((void *)((char *)a1 + v9), v11, v7);
    uint64_t v12 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    uint64_t v13 = v12[5];
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = type metadata accessor for AttributedString();
    uint64_t v17 = *(void *)(v16 - 8);
    long long v34 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v34(v14, v15, v16);
    uint64_t v18 = v12[6];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    *(void *)&v10[v12[7]] = *(void *)&v11[v12[7]];
    *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
    *(void *)&v10[v12[9]] = *(void *)&v11[v12[9]];
    *(void *)&v10[v12[10]] = *(void *)&v11[v12[10]];
    uint64_t v22 = v12[11];
    unint64_t v23 = &v10[v22];
    char v24 = &v11[v22];
    *(void *)unint64_t v23 = *(void *)v24;
    v23[8] = v24[8];
    uint64_t v25 = v12[12];
    __dst = &v10[v25];
    char v26 = &v11[v25];
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v27(v26, 1, v16))
    {
      uint64_t v28 = sub_1000FF33C(&qword_1015CFD80);
      memcpy(__dst, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      v34(__dst, v26, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v30 = *(int *)(v36 + 24);
    long long v31 = *(void **)((char *)v37 + v30);
    *(void *)((char *)a1 + v30) = v31;
    id v32 = v31;
  }
  return a1;
}

void sub_1001ACC78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  v5(v6, v4);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v8 = v6 + *(int *)(v7 + 20);
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v6 + *(int *)(v7 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
    v11(v12, v9);
  }
  uint64_t v13 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1001ACE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v34 = a3;
  uint64_t v35 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (const void *)(v10 + v12);
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v15 - 8);
  id v32 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
  v32(v13, v14, v15);
  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (void *)(v10 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  uint64_t v21 = v11[11];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = v10 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  uint64_t v24 = v11[12];
  __dst = (void *)(v9 + v24);
  uint64_t v25 = (const void *)(v10 + v24);
  char v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v26(v25, 1, v15))
  {
    uint64_t v27 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(__dst, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v32(__dst, v25, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
  }
  uint64_t v28 = *(int *)(v34 + 24);
  uint64_t v29 = *(void **)(v35 + v28);
  *(void *)(a1 + v28) = v29;
  id v30 = v29;
  return a1;
}

uint64_t sub_1001AD080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 24);
  v17(v13, v14, v15);
  uint64_t v18 = v11[6];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (void *)(v10 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  swift_retain();
  swift_release();
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  swift_retain();
  swift_release();
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  swift_retain();
  swift_release();
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  swift_retain();
  swift_release();
  uint64_t v21 = v11[11];
  uint64_t v22 = v9 + v21;
  uint64_t v23 = (uint64_t *)(v10 + v21);
  uint64_t v24 = *v23;
  *(unsigned char *)(v22 + 8) = *((unsigned char *)v23 + 8);
  *(void *)uint64_t v22 = v24;
  uint64_t v25 = v11[12];
  char v26 = (void *)(v9 + v25);
  uint64_t v27 = (void *)(v10 + v25);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v11) = v28(v26, 1, v15);
  int v29 = v28(v27, 1, v15);
  if (!v11)
  {
    if (!v29)
    {
      v17((uint64_t)v26, (uint64_t)v27, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v26, v15);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v26, v27, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v26, 0, 1, v15);
LABEL_7:
  uint64_t v31 = *(int *)(v37 + 24);
  id v32 = *(void **)(v36 + v31);
  uint64_t v33 = *(void **)(a1 + v31);
  *(void *)(a1 + v31) = v32;
  id v34 = v32;

  return a1;
}

uint64_t sub_1001AD378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (const void *)(v10 + v12);
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 32);
  v17(v13, v14, v15);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  uint64_t v18 = v11[11];
  uint64_t v19 = v9 + v18;
  uint64_t v20 = v10 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v21 = v11[12];
  uint64_t v22 = (void *)(v9 + v21);
  uint64_t v23 = (const void *)(v10 + v21);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15))
  {
    uint64_t v24 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v17(v22, v23, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v22, 0, 1, v15);
  }
  *(void *)(a1 + *(int *)(v26 + 24)) = *(void *)(v27 + *(int *)(v26 + 24));
  return a1;
}

uint64_t sub_1001AD5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = v9 + v12;
  uint64_t v14 = v10 + v12;
  uint64_t v15 = type metadata accessor for AttributedString();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  uint64_t v18 = v11[6];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (uint64_t *)(v10 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
  swift_release();
  *(void *)(v9 + v11[8]) = *(void *)(v10 + v11[8]);
  swift_release();
  *(void *)(v9 + v11[9]) = *(void *)(v10 + v11[9]);
  swift_release();
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  swift_release();
  uint64_t v23 = v11[11];
  uint64_t v24 = v9 + v23;
  uint64_t v25 = v10 + v23;
  *(void *)uint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = v11[12];
  uint64_t v27 = (void *)(v9 + v26);
  uint64_t v28 = (void *)(v10 + v26);
  int v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v11) = v29(v27, 1, v15);
  int v30 = v29(v28, 1, v15);
  if (!v11)
  {
    if (!v30)
    {
      v17((uint64_t)v27, (uint64_t)v28, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v27, v15);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    uint64_t v31 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v27, v28, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v27, 0, 1, v15);
LABEL_7:
  uint64_t v32 = *(int *)(v35 + 24);
  uint64_t v33 = *(void **)(a1 + v32);
  *(void *)(a1 + v32) = *(void *)(v36 + v32);

  return a1;
}

uint64_t sub_1001AD868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AD87C);
}

uint64_t sub_1001AD87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1001AD990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AD9A4);
}

uint64_t sub_1001AD9A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_1001ADAB4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Label(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1001ADB88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void sub_1001ADC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_1001ADCCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1001ADD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_1001ADDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001ADE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_1001ADED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ADEE8);
}

uint64_t sub_1001ADEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ADF00);
}

uint64_t sub_1001ADF04()
{
  return sub_1001B0CB4();
}

uint64_t sub_1001ADF14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1001ADF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001ADFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001AE070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AE084);
}

uint64_t sub_1001AE084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1001AE154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AE168);
}

uint64_t sub_1001AE168(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

void *sub_1001AE224(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(_DWORD *)((char *)a1 + a3[5]) = *(_DWORD *)((char *)a2 + a3[5]);
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v9;
    uint64_t v10 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    id v14 = v9;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001AE32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001AE3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  id v13 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001AE468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001AE540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001AE5E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_DWORD *)(a1 + a3[5]) = *(_DWORD *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *id v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1001AE6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AE6B4);
}

uint64_t sub_1001AE6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AE6CC);
}

uint64_t sub_1001AE6D0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001AE798(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    id v10 = v9;
  }
  return a1;
}

void sub_1001AE870(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1001AE8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1001AE96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = *(void **)(a2 + v7);
  id v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_1001AEA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1001AEA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_1001AEB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AEB24);
}

uint64_t sub_1001AEB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001AEBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AEBFC);
}

uint64_t sub_1001AEC00(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1001AECBC()
{
  return sub_1001AF058();
}

uint64_t *sub_1001AECCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v13;
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  return a1;
}

void sub_1001AEDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_1001AEE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v12;
  swift_bridgeObjectRetain();
  id v13 = v12;
  return a1;
}

uint64_t sub_1001AEEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = *(void **)(a2 + v10);
  uint64_t v12 = *(void **)(a1 + v10);
  *(void *)(a1 + v10) = v11;
  id v13 = v11;

  return a1;
}

uint64_t sub_1001AEF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  id v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  return a1;
}

uint64_t sub_1001AF01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AF030);
}

uint64_t sub_1001AF034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AF048);
}

uint64_t sub_1001AF04C()
{
  return sub_1001AF058();
}

uint64_t sub_1001AF058()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001AF0F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)a1 + v15) = (uint64_t)v19;
    id v20 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v21 = v19;
  }
  return a1;
}

void sub_1001AF208(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t sub_1001AF2A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v18;
  id v19 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v18;
  return a1;
}

uint64_t sub_1001AF368(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = *(void **)(a2 + v17);
  id v19 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = v18;
  id v20 = v18;

  return a1;
}

uint64_t sub_1001AF460(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1001AF4F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[6];
  id v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *id v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[8];
  id v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  return a1;
}

uint64_t sub_1001AF5C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AF5DC);
}

uint64_t sub_1001AF5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001AF6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AF6B4);
}

uint64_t sub_1001AF6B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1001AF774()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1001AF81C(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = (void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    id v34 = *v8;
    (*v8)(a1, (char *)a2, v7);
    uint64_t v9 = a3[6];
    *(void *)&a1[a3[5]] = *(uint64_t *)((char *)a2 + a3[5]);
    *(void *)&a1[v9] = *(uint64_t *)((char *)a2 + v9);
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
    uint64_t v14 = *((void *)v13 - 1);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, int *))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = sub_1000FF33C(&qword_1015D0498);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v34(v11, v12, v7);
      uint64_t v18 = v13[5];
      uint64_t v19 = *(void **)&v12[v18];
      *(void *)&v11[v18] = v19;
      uint64_t v20 = v13[6];
      id v21 = &v11[v20];
      uint64_t v22 = &v12[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)id v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      uint64_t v24 = v13[7];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = &v12[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = v13[8];
      int v29 = *(void **)&v12[v28];
      *(void *)&v11[v28] = v29;
      int v30 = *(void (**)(char *, void, uint64_t, int *))(v14 + 56);
      id v31 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v32 = v29;
      v30(v11, 0, 1, v13);
    }
  }
  return a1;
}

void sub_1001AFA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v4);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void **)(v6 + *(int *)(v7 + 32));
  }
}

uint64_t sub_1001AFB80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  id v32 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v32((uint64_t)v10, (uint64_t)v11, v6);
    uint64_t v16 = v12[5];
    uint64_t v17 = *(void **)&v11[v16];
    *(void *)&v10[v16] = v17;
    uint64_t v18 = v12[6];
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v12[7];
    uint64_t v23 = &v10[v22];
    uint64_t v24 = &v11[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v12[8];
    uint64_t v27 = *(void **)&v11[v26];
    *(void *)&v10[v26] = v27;
    uint64_t v28 = *(void (**)(char *, void, uint64_t, int *))(v13 + 56);
    id v29 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v30 = v27;
    v28(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1001AFD60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 24);
  v7(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v44 = *((void *)v11 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v44 + 48);
  int v13 = v12(v9, 1, v11);
  int v14 = v12(v10, 1, v11);
  if (!v13)
  {
    if (!v14)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v30 = v11[5];
      id v31 = *(void **)&v10[v30];
      id v32 = *(void **)&v9[v30];
      *(void *)&v9[v30] = v31;
      id v33 = v31;

      uint64_t v34 = v11[6];
      uint64_t v35 = &v9[v34];
      uint64_t v36 = &v10[v34];
      *(void *)uint64_t v35 = *(void *)v36;
      *((void *)v35 + 1) = *((void *)v36 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v37 = v11[7];
      uint64_t v38 = &v9[v37];
      uint64_t v39 = &v10[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      *((void *)v38 + 1) = *((void *)v39 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v40 = v11[8];
      int v41 = *(void **)&v10[v40];
      long long v42 = *(void **)&v9[v40];
      *(void *)&v9[v40] = v41;
      id v43 = v41;

      return a1;
    }
    sub_1001AB734((uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v28 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v9, v10, *(void *)(*(void *)(v28 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v9, v10, v6);
  uint64_t v15 = v11[5];
  uint64_t v16 = *(void **)&v10[v15];
  *(void *)&v9[v15] = v16;
  uint64_t v17 = v11[6];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  uint64_t v20 = v11[7];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  uint64_t v23 = v11[8];
  uint64_t v24 = *(void **)&v10[v23];
  *(void *)&v9[v23] = v24;
  uint64_t v25 = *(void (**)(char *, void, uint64_t, int *))(v44 + 56);
  id v26 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v27 = v24;
  v25(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1001B0078(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v13 = *((void *)v12 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
    *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
    *(_OWORD *)&v10[v12[7]] = *(_OWORD *)&v11[v12[7]];
    *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1001B0210(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v6 - 8);
  id v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
  v33(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, int *))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v33((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v18 = v11[5];
      uint64_t v19 = *(void **)&v9[v18];
      *(void *)&v9[v18] = *(void *)&v10[v18];

      uint64_t v20 = v11[6];
      uint64_t v21 = &v9[v20];
      uint64_t v22 = &v10[v20];
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = v24;
      *((void *)v21 + 1) = v23;
      swift_bridgeObjectRelease();
      uint64_t v25 = v11[7];
      id v26 = &v9[v25];
      id v27 = &v10[v25];
      uint64_t v29 = *(void *)v27;
      uint64_t v28 = *((void *)v27 + 1);
      *(void *)id v26 = v29;
      *((void *)v26 + 1) = v28;
      swift_bridgeObjectRelease();
      uint64_t v30 = v11[8];
      id v31 = *(void **)&v9[v30];
      *(void *)&v9[v30] = *(void *)&v10[v30];

      return a1;
    }
    sub_1001AB734((uint64_t)v9, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_1000FF33C(&qword_1015D0498);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v9, v10, v6);
  *(void *)&v9[v11[5]] = *(void *)&v10[v11[5]];
  *(_OWORD *)&v9[v11[6]] = *(_OWORD *)&v10[v11[6]];
  *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
  *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1001B04BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B04D0);
}

uint64_t sub_1001B04D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1000FF33C(&qword_1015D0498);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1001B0600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0614);
}

uint64_t sub_1001B0614(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1000FF33C(&qword_1015D0498);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1001B0744()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1001B0858(319, (unint64_t *)&unk_1015D3178, type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001B0858(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t *sub_1001B08BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001B0994(uint64_t a1, uint64_t a2)
{
  return sub_1001B09AC(a1, a2, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B09AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  uint64_t v6 = *(void *)(a1 + *(int *)(a2 + 20) + 8);

  return a3(v6);
}

uint64_t sub_1001B0A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001B0AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001B0B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001B0BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001B0BF0(a1, a2, a3, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t sub_1001B0BF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = v10[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  a4(v14);
  return a1;
}

uint64_t sub_1001B0C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B0C98);
}

uint64_t sub_1001B0C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0CB0);
}

uint64_t sub_1001B0CB4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1001B0D44(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for AttributedString();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v28(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    int v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *int v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v18 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v19 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(void *)uint64_t v20 = *(void *)v21;
    uint64_t v22 = a3[12];
    __dst = (char *)a1 + v22;
    v20[8] = v21[8];
    uint64_t v23 = (char *)a2 + v22;
    uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v24(v23, 1, v11))
    {
      uint64_t v25 = sub_1000FF33C(&qword_1015CFD80);
      memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v28(__dst, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1001B0FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + *(int *)(a2 + 48);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v6);
  }
  return result;
}

uint64_t sub_1001B1120(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v26 = *(void (**)(void *, const void *, uint64_t))(v11 + 16);
  v26(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  int v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  uint64_t v21 = a3[12];
  __dst = (void *)(a1 + v21);
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  uint64_t v22 = (const void *)(a2 + v21);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v23(v22, 1, v10))
  {
    uint64_t v24 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v26(__dst, v22, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1001B1334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  *(unsigned char *)(v17 + 8) = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v23((const void *)(a1 + v20), 1, v10);
  int v24 = v23(v22, 1, v10);
  if (!v8)
  {
    if (!v24)
    {
      v12(v21, v22, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v21, v10);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v21, v22, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
  return a1;
}

uint64_t sub_1001B15D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[12];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v20, 1, v10))
  {
    uint64_t v21 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v12(v19, v20, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1001B17A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  uint64_t v18 = a3[11];
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = (void *)(a1 + v19);
  uint64_t v23 = (const void *)(a2 + v19);
  int v24 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v24((const void *)(a1 + v19), 1, v10);
  int v25 = v24(v23, 1, v10);
  if (!v8)
  {
    if (!v25)
    {
      v12(v22, v23, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v22, v10);
    goto LABEL_6;
  }
  if (v25)
  {
LABEL_6:
    uint64_t v26 = sub_1000FF33C(&qword_1015CFD80);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v22, v23, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
  return a1;
}

uint64_t sub_1001B1A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B1A1C);
}

uint64_t sub_1001B1A1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v16 = sub_1000FF33C(&qword_1015CFD80);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[12];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_1001B1BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B1BC4);
}

uint64_t sub_1001B1BC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6] + 8) = a2;
  }
  else
  {
    uint64_t v15 = sub_1000FF33C(&qword_1015CFD80);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[12];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_1001B1D4C()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    type metadata accessor for AttributedString();
    if (v1 <= 0x3F)
    {
      sub_1001B0858(319, (unint64_t *)&unk_1015D0670, (uint64_t (*)(uint64_t))&type metadata accessor for AttributedString, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *sub_1001B1EA4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1001B1F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1001B2040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B2104(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B2194(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B2240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B2254);
}

uint64_t sub_1001B2258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B226C);
}

uint64_t type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D3348);
}

uint64_t sub_1001B2290()
{
  return sub_1001B2840();
}

uint64_t *sub_1001B22B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_1001B23A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_1001B2448(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B250C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B259C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_unknownObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001B2648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B265C);
}

uint64_t sub_1001B2660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001B2724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B2738);
}

uint64_t sub_1001B273C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for PlaceSummaryViewModelActionButtons.Button(uint64_t a1)
{
  return sub_100130928(a1, qword_1015D33E0);
}

uint64_t sub_1001B281C()
{
  return sub_1001B2840();
}

uint64_t sub_1001B2840()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1001B28E4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (void *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v24 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Distance(0) + 20);
        uint64_t v26 = (void *)((char *)a1 + v25);
        id v27 = (void *)((char *)a2 + v25);
        uint64_t v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v29 = type metadata accessor for UUID();
        __dsta = *(void **)(*(void *)(v29 - 8) + 16);
        ((void (*)(void *, void *, uint64_t))__dsta)(a1, a2, v29);
        uint64_t v30 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
        *(void *)((char *)a1 + v30[5]) = *(void *)((char *)a2 + v30[5]);
        *(void *)((char *)a1 + v30[6]) = *(void *)((char *)a2 + v30[6]);
        uint64_t v31 = v30[7];
        uint64_t v32 = (char *)a1 + v31;
        id v33 = (char *)a2 + v31;
        uint64_t v34 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        uint64_t v35 = *((void *)v34 - 1);
        uint64_t v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
        swift_bridgeObjectRetain();
        if (v36(v33, 1, v34))
        {
          uint64_t v37 = sub_1000FF33C(&qword_1015D0498);
          memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))__dsta)(v32, v33, v29);
          uint64_t v117 = v34[5];
          uint64_t v118 = *(void **)&v33[v117];
          *(void *)&v32[v117] = v118;
          uint64_t v119 = v34[6];
          uint64_t v120 = &v32[v119];
          uint64_t v121 = &v33[v119];
          uint64_t v122 = *((void *)v121 + 1);
          *(void *)uint64_t v120 = *(void *)v121;
          *((void *)v120 + 1) = v122;
          uint64_t v123 = v34[7];
          uint64_t v124 = &v32[v123];
          uint64_t v125 = &v33[v123];
          uint64_t v126 = *((void *)v125 + 1);
          *(void *)uint64_t v124 = *(void *)v125;
          *((void *)v124 + 1) = v126;
          uint64_t v127 = v34[8];
          uint64_t v128 = *(void **)&v33[v127];
          *(void *)&v32[v127] = v128;
          uint64_t v129 = *(void (**)(char *, void, uint64_t, int *))(v35 + 56);
          id v130 = v118;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v131 = v128;
          v129(v32, 0, 1, v34);
        }
        break;
      case 3u:
        uint64_t v38 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        uint64_t v39 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        uint64_t v40 = v39[5];
        int v41 = *(void **)((char *)a2 + v40);
        *(void *)((char *)a1 + v40) = v41;
        uint64_t v42 = v39[6];
        id v43 = (void *)((char *)a1 + v42);
        uint64_t v44 = (void *)((char *)a2 + v42);
        uint64_t v45 = v44[1];
        *id v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = v39[7];
        uint64_t v47 = (void *)((char *)a1 + v46);
        uint64_t v48 = (void *)((char *)a2 + v46);
        uint64_t v49 = v48[1];
        void *v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = v39[8];
        long long v51 = *(void **)((char *)a2 + v50);
        *(void *)((char *)a1 + v50) = v51;
        id v52 = v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v53 = v51;
        break;
      case 4u:
        uint64_t v54 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
        uint64_t v55 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
        uint64_t v56 = *(int *)(v55 + 20);
        Swift::String v57 = (void *)((char *)a1 + v56);
        uint64_t v58 = (void *)((char *)a2 + v56);
        uint64_t v60 = *v58;
        uint64_t v59 = v58[1];
        *Swift::String v57 = v60;
        v57[1] = v59;
        uint64_t v61 = *(int *)(v55 + 24);
        uint64_t v62 = *(void **)((char *)a2 + v61);
        *(void *)((char *)a1 + v61) = v62;
        swift_bridgeObjectRetain();
        id v63 = v62;
        break;
      case 5u:
        uint64_t v64 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
        uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
        *(void *)((char *)a1 + *(int *)(PartyRatings + 20)) = *(void *)((char *)a2 + *(int *)(PartyRatings + 20));
        uint64_t v66 = *(int *)(PartyRatings + 24);
        uint64_t v67 = *(void **)((char *)a2 + v66);
        *(void *)((char *)a1 + v66) = v67;
        id v68 = v67;
        break;
      case 6u:
        uint64_t v69 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
        uint64_t v70 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
        *(_DWORD *)((char *)a1 + v70[5]) = *(_DWORD *)((char *)a2 + v70[5]);
        uint64_t v71 = v70[6];
        Swift::String v72 = *(void **)((char *)a2 + v71);
        *(void *)((char *)a1 + v71) = v72;
        *(void *)((char *)a1 + v70[7]) = *(void *)((char *)a2 + v70[7]);
        uint64_t v73 = v70[8];
        uint64_t v74 = (void *)((char *)a1 + v73);
        uint64_t v75 = (void *)((char *)a2 + v73);
        uint64_t v76 = v75[1];
        *uint64_t v74 = *v75;
        v74[1] = v76;
        *((unsigned char *)a1 + v70[9]) = *((unsigned char *)a2 + v70[9]);
        id v77 = v72;
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v78 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
        uint64_t v79 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
        *((unsigned char *)a1 + *(int *)(v79 + 20)) = *((unsigned char *)a2 + *(int *)(v79 + 20));
        break;
      case 8u:
        uint64_t v80 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
        uint64_t v81 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20);
        uint64_t v82 = *(void **)((char *)a2 + v81);
        *(void *)((char *)a1 + v81) = v82;
        id v83 = v82;
        break;
      case 9u:
      case 0xDu:
      case 0xFu:
      case 0x10u:
        *a1 = *a2;
        swift_retain();
        break;
      case 0xAu:
        uint64_t v84 = type metadata accessor for UUID();
        uint64_t v85 = *(void (**)(void *, void *, uint64_t))(*(void *)(v84 - 8) + 16);
        v85(a1, a2, v84);
        __dstb = (int *)type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
        uint64_t v86 = __dstb[5];
        uint64_t v87 = (char *)a1 + v86;
        uint64_t v88 = (char *)a2 + v86;
        v85((void *)((char *)a1 + v86), (void *)((char *)a2 + v86), v84);
        uint64_t v89 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v90 = v89[5];
        Swift::String v91 = &v87[v90];
        Swift::String v92 = &v88[v90];
        uint64_t v138 = type metadata accessor for AttributedString();
        uint64_t v93 = *(void *)(v138 - 8);
        uint64_t v136 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
        v136(v91, v92, v138);
        uint64_t v94 = v89[6];
        uint64_t v95 = &v87[v94];
        uint64_t v96 = &v88[v94];
        uint64_t v97 = *((void *)v96 + 1);
        *(void *)uint64_t v95 = *(void *)v96;
        *((void *)v95 + 1) = v97;
        *(void *)&v87[v89[7]] = *(void *)&v88[v89[7]];
        *(void *)&v87[v89[8]] = *(void *)&v88[v89[8]];
        *(void *)&v87[v89[9]] = *(void *)&v88[v89[9]];
        *(void *)&v87[v89[10]] = *(void *)&v88[v89[10]];
        uint64_t v98 = v89[11];
        uint64_t v99 = &v87[v98];
        uint64_t v100 = &v88[v98];
        *(void *)uint64_t v99 = *(void *)v100;
        v99[8] = v100[8];
        uint64_t v101 = v89[12];
        uint64_t v140 = &v87[v101];
        uint64_t v102 = &v88[v101];
        uint64_t v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        if (v103(v102, 1, v138))
        {
          uint64_t v104 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(v140, v102, *(void *)(*(void *)(v104 - 8) + 64));
        }
        else
        {
          v136(v140, v102, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v140, 0, 1, v138);
        }
        uint64_t v132 = __dstb[6];
        uint64_t v133 = *(void **)((char *)a2 + v132);
        *(void *)((char *)a1 + v132) = v133;
        id v134 = v133;
        break;
      case 0xBu:
        uint64_t v105 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(a1, a2, v105);
        uint64_t v106 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
        *((unsigned char *)a1 + *(int *)(v106 + 20)) = *((unsigned char *)a2 + *(int *)(v106 + 20));
        break;
      case 0xCu:
        uint64_t v107 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(a1, a2, v107);
        uint64_t v108 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
        uint64_t v109 = (char *)a1 + v108;
        uint64_t v110 = (char *)a2 + v108;
        uint64_t v111 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
        break;
      case 0xEu:
        uint64_t v112 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v112 - 8) + 16))(a1, a2, v112);
        uint64_t v113 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0) + 20);
        uint64_t v114 = (void *)((char *)a1 + v113);
        id v115 = (void *)((char *)a2 + v113);
        uint64_t v116 = v115[1];
        *uint64_t v114 = *v115;
        v114[1] = v116;
        swift_retain();
        break;
      default:
        uint64_t v6 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        unint64_t v10 = (char *)a2 + v8;
        double v139 = (void *)type metadata accessor for AttributedString();
        uint64_t v11 = *(v139 - 1);
        uint64_t v137 = *(void (**)(char *, char *, void *))(v11 + 16);
        v137(v9, v10, v139);
        uint64_t v12 = v7[6];
        uint64_t v13 = (void *)((char *)a1 + v12);
        uint64_t v14 = (void *)((char *)a2 + v12);
        uint64_t v15 = v14[1];
        *uint64_t v13 = *v14;
        v13[1] = v15;
        *(void *)((char *)a1 + v7[7]) = *(void *)((char *)a2 + v7[7]);
        *(void *)((char *)a1 + v7[8]) = *(void *)((char *)a2 + v7[8]);
        *(void *)((char *)a1 + v7[9]) = *(void *)((char *)a2 + v7[9]);
        *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
        uint64_t v16 = v7[11];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        *(void *)uint64_t v17 = *(void *)v18;
        v17[8] = v18[8];
        uint64_t v19 = v7[12];
        __dst = (char *)a1 + v19;
        uint64_t v20 = (char *)a2 + v19;
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, void *))(v11 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        if (v21(v20, 1, v139))
        {
          uint64_t v22 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v137(__dst, v20, v139);
          (*(void (**)(char *, void, uint64_t, void *))(v11 + 56))(__dst, 0, 1, v139);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1001B3514(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v3 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = type metadata accessor for AttributedString();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v35(v5, v6);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v8 = a1 + *(int *)(v4 + 48);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6))
      {
        v35(v8, v6);
      }
      return;
    case 1u:
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for PlaceSummaryViewModelUnit.Distance(0);
      goto LABEL_17;
    case 2u:
      uint64_t v10 = type metadata accessor for UUID();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(a1, v10);
      uint64_t v12 = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
      swift_bridgeObjectRelease();
      a1 += *(int *)(v12 + 28);
      uint64_t v13 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1, v13)) {
        return;
      }
      v11(a1, v10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(int *)(v13 + 32);
      goto LABEL_24;
    case 3u:
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      uint64_t v15 = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(int *)(v15 + 32);
      goto LABEL_24;
    case 4u:
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
      uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 5u:
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
      uint64_t v16 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0) + 24);
      goto LABEL_24;
    case 6u:
      uint64_t v20 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
      objc_release(*(id *)(a1
                         + *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0) + 24)));
LABEL_17:
      swift_bridgeObjectRelease();
      return;
    case 7u:
    case 0xBu:
      uint64_t v2 = type metadata accessor for UUID();
      goto LABEL_28;
    case 8u:
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
      uint64_t v16 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20);
      goto LABEL_24;
    case 9u:
    case 0xDu:
    case 0xFu:
    case 0x10u:
      goto LABEL_2;
    case 0xAu:
      uint64_t v22 = type metadata accessor for UUID();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      v23(a1, v22);
      uint64_t v18 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
      uint64_t v24 = a1 + *(int *)(v18 + 20);
      v23(v24, v22);
      uint64_t v25 = type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v26 = v24 + *(int *)(v25 + 20);
      uint64_t v27 = type metadata accessor for AttributedString();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v29(v26, v27);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v30 = v24 + *(int *)(v25 + 48);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v27)) {
        v29(v30, v27);
      }
LABEL_23:
      uint64_t v16 = *(int *)(v18 + 24);
LABEL_24:
      uint64_t v31 = *(void **)(a1 + v16);

      break;
    case 0xCu:
      uint64_t v32 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(a1, v32);
      a1 += *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
      uint64_t v2 = type metadata accessor for AttributedString();
LABEL_28:
      id v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      v33(a1, v2);
      break;
    case 0xEu:
      uint64_t v34 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
      type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
LABEL_2:
      swift_release();
      break;
    default:
      return;
  }
}

void *sub_1001B3CF8(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Distance(0) + 20);
      uint64_t v23 = (void *)((char *)a1 + v22);
      uint64_t v24 = (void *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v26 = type metadata accessor for UUID();
      __dsta = *(void **)(*(void *)(v26 - 8) + 16);
      ((void (*)(void *, void *, uint64_t))__dsta)(a1, a2, v26);
      uint64_t v27 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
      *(void *)((char *)a1 + v27[5]) = *(void *)((char *)a2 + v27[5]);
      *(void *)((char *)a1 + v27[6]) = *(void *)((char *)a2 + v27[6]);
      uint64_t v28 = v27[7];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
      uint64_t v32 = *((void *)v31 - 1);
      id v33 = *(unsigned int (**)(char *, uint64_t, int *))(v32 + 48);
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        uint64_t v34 = sub_1000FF33C(&qword_1015D0498);
        memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))__dsta)(v29, v30, v26);
        uint64_t v114 = v31[5];
        id v115 = *(void **)&v30[v114];
        *(void *)&v29[v114] = v115;
        uint64_t v116 = v31[6];
        uint64_t v117 = &v29[v116];
        uint64_t v118 = &v30[v116];
        uint64_t v119 = *((void *)v118 + 1);
        *(void *)uint64_t v117 = *(void *)v118;
        *((void *)v117 + 1) = v119;
        uint64_t v120 = v31[7];
        uint64_t v121 = &v29[v120];
        uint64_t v122 = &v30[v120];
        uint64_t v123 = *((void *)v122 + 1);
        *(void *)uint64_t v121 = *(void *)v122;
        *((void *)v121 + 1) = v123;
        uint64_t v124 = v31[8];
        uint64_t v125 = *(void **)&v30[v124];
        *(void *)&v29[v124] = v125;
        uint64_t v126 = *(void (**)(char *, void, uint64_t, int *))(v32 + 56);
        id v127 = v115;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v128 = v125;
        v126(v29, 0, 1, v31);
      }
      break;
    case 3u:
      uint64_t v35 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
      uint64_t v36 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
      uint64_t v37 = v36[5];
      uint64_t v38 = *(void **)((char *)a2 + v37);
      *(void *)((char *)a1 + v37) = v38;
      uint64_t v39 = v36[6];
      uint64_t v40 = (void *)((char *)a1 + v39);
      int v41 = (void *)((char *)a2 + v39);
      uint64_t v42 = v41[1];
      void *v40 = *v41;
      v40[1] = v42;
      uint64_t v43 = v36[7];
      uint64_t v44 = (void *)((char *)a1 + v43);
      uint64_t v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = v36[8];
      uint64_t v48 = *(void **)((char *)a2 + v47);
      *(void *)((char *)a1 + v47) = v48;
      id v49 = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v50 = v48;
      break;
    case 4u:
      uint64_t v51 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
      uint64_t v52 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
      uint64_t v53 = *(int *)(v52 + 20);
      uint64_t v54 = (void *)((char *)a1 + v53);
      uint64_t v55 = (void *)((char *)a2 + v53);
      uint64_t v57 = *v55;
      uint64_t v56 = v55[1];
      *uint64_t v54 = v57;
      v54[1] = v56;
      uint64_t v58 = *(int *)(v52 + 24);
      uint64_t v59 = *(void **)((char *)a2 + v58);
      *(void *)((char *)a1 + v58) = v59;
      swift_bridgeObjectRetain();
      id v60 = v59;
      break;
    case 5u:
      uint64_t v61 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
      uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
      *(void *)((char *)a1 + *(int *)(PartyRatings + 20)) = *(void *)((char *)a2 + *(int *)(PartyRatings + 20));
      uint64_t v63 = *(int *)(PartyRatings + 24);
      uint64_t v64 = *(void **)((char *)a2 + v63);
      *(void *)((char *)a1 + v63) = v64;
      id v65 = v64;
      break;
    case 6u:
      uint64_t v66 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
      uint64_t v67 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
      *(_DWORD *)((char *)a1 + v67[5]) = *(_DWORD *)((char *)a2 + v67[5]);
      uint64_t v68 = v67[6];
      uint64_t v69 = *(void **)((char *)a2 + v68);
      *(void *)((char *)a1 + v68) = v69;
      *(void *)((char *)a1 + v67[7]) = *(void *)((char *)a2 + v67[7]);
      uint64_t v70 = v67[8];
      uint64_t v71 = (void *)((char *)a1 + v70);
      Swift::String v72 = (void *)((char *)a2 + v70);
      uint64_t v73 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v73;
      *((unsigned char *)a1 + v67[9]) = *((unsigned char *)a2 + v67[9]);
      id v74 = v69;
      swift_bridgeObjectRetain();
      break;
    case 7u:
      uint64_t v75 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
      uint64_t v76 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
      *((unsigned char *)a1 + *(int *)(v76 + 20)) = *((unsigned char *)a2 + *(int *)(v76 + 20));
      break;
    case 8u:
      uint64_t v77 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
      uint64_t v78 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20);
      uint64_t v79 = *(void **)((char *)a2 + v78);
      *(void *)((char *)a1 + v78) = v79;
      id v80 = v79;
      break;
    case 9u:
    case 0xDu:
    case 0xFu:
    case 0x10u:
      *a1 = *a2;
      swift_retain();
      break;
    case 0xAu:
      uint64_t v81 = type metadata accessor for UUID();
      uint64_t v82 = *(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 16);
      v82(a1, a2, v81);
      __dstb = (int *)type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
      uint64_t v83 = __dstb[5];
      uint64_t v84 = (char *)a1 + v83;
      uint64_t v85 = (char *)a2 + v83;
      v82((void *)((char *)a1 + v83), (void *)((char *)a2 + v83), v81);
      uint64_t v86 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v87 = v86[5];
      uint64_t v88 = &v84[v87];
      uint64_t v89 = &v85[v87];
      uint64_t v135 = type metadata accessor for AttributedString();
      uint64_t v90 = *(void *)(v135 - 8);
      uint64_t v133 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      v133(v88, v89, v135);
      uint64_t v91 = v86[6];
      Swift::String v92 = &v84[v91];
      uint64_t v93 = &v85[v91];
      uint64_t v94 = *((void *)v93 + 1);
      *(void *)Swift::String v92 = *(void *)v93;
      *((void *)v92 + 1) = v94;
      *(void *)&v84[v86[7]] = *(void *)&v85[v86[7]];
      *(void *)&v84[v86[8]] = *(void *)&v85[v86[8]];
      *(void *)&v84[v86[9]] = *(void *)&v85[v86[9]];
      *(void *)&v84[v86[10]] = *(void *)&v85[v86[10]];
      uint64_t v95 = v86[11];
      uint64_t v96 = &v84[v95];
      uint64_t v97 = &v85[v95];
      *(void *)uint64_t v96 = *(void *)v97;
      v96[8] = v97[8];
      uint64_t v98 = v86[12];
      uint64_t v137 = &v84[v98];
      uint64_t v99 = &v85[v98];
      uint64_t v100 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v100(v99, 1, v135))
      {
        uint64_t v101 = sub_1000FF33C(&qword_1015CFD80);
        memcpy(v137, v99, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        v133(v137, v99, v135);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v137, 0, 1, v135);
      }
      uint64_t v129 = __dstb[6];
      id v130 = *(void **)((char *)a2 + v129);
      *(void *)((char *)a1 + v129) = v130;
      id v131 = v130;
      break;
    case 0xBu:
      uint64_t v102 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(a1, a2, v102);
      uint64_t v103 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
      *((unsigned char *)a1 + *(int *)(v103 + 20)) = *((unsigned char *)a2 + *(int *)(v103 + 20));
      break;
    case 0xCu:
      uint64_t v104 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
      uint64_t v105 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
      uint64_t v106 = (char *)a1 + v105;
      uint64_t v107 = (char *)a2 + v105;
      uint64_t v108 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
      break;
    case 0xEu:
      uint64_t v109 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(a1, a2, v109);
      uint64_t v110 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0) + 20);
      uint64_t v111 = (void *)((char *)a1 + v110);
      uint64_t v112 = (void *)((char *)a2 + v110);
      uint64_t v113 = v112[1];
      *uint64_t v111 = *v112;
      v111[1] = v113;
      swift_retain();
      break;
    default:
      uint64_t v4 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v136 = (void *)type metadata accessor for AttributedString();
      uint64_t v9 = *(v136 - 1);
      id v134 = *(void (**)(char *, char *, void *))(v9 + 16);
      v134(v7, v8, v136);
      uint64_t v10 = v5[6];
      uint64_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (void *)((char *)a2 + v10);
      uint64_t v13 = v12[1];
      *uint64_t v11 = *v12;
      v11[1] = v13;
      *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
      *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
      *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
      *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
      uint64_t v14 = v5[11];
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      *(void *)uint64_t v15 = *(void *)v16;
      v15[8] = v16[8];
      uint64_t v17 = v5[12];
      __dst = (char *)a1 + v17;
      uint64_t v18 = (char *)a2 + v17;
      uint64_t v19 = *(unsigned int (**)(char *, uint64_t, void *))(v9 + 48);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if (v19(v18, 1, v136))
      {
        uint64_t v20 = sub_1000FF33C(&qword_1015CFD80);
        memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v134(__dst, v18, v136);
        (*(void (**)(char *, void, uint64_t, void *))(v9 + 56))(__dst, 0, 1, v136);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1001B48D8(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1001AB734((uint64_t)a1, type metadata accessor for PlaceSummaryViewModelUnit);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Distance(0) + 20);
        uint64_t v23 = (void *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        *uint64_t v23 = *v24;
        v23[1] = v24[1];
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v25 = type metadata accessor for UUID();
        __dsta = *(void **)(*(void *)(v25 - 8) + 16);
        ((void (*)(void *, void *, uint64_t))__dsta)(a1, a2, v25);
        uint64_t v26 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
        *(void *)((char *)a1 + v26[5]) = *(void *)((char *)a2 + v26[5]);
        *(void *)((char *)a1 + v26[6]) = *(void *)((char *)a2 + v26[6]);
        uint64_t v27 = v26[7];
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        uint64_t v31 = *((void *)v30 - 1);
        uint64_t v32 = *(unsigned int (**)(char *, uint64_t, int *))(v31 + 48);
        swift_bridgeObjectRetain();
        if (v32(v29, 1, v30))
        {
          uint64_t v33 = sub_1000FF33C(&qword_1015D0498);
          memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))__dsta)(v28, v29, v25);
          uint64_t v107 = v30[5];
          uint64_t v108 = *(void **)&v29[v107];
          *(void *)&v28[v107] = v108;
          uint64_t v109 = v30[6];
          uint64_t v110 = &v28[v109];
          uint64_t v111 = &v29[v109];
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = *((void *)v111 + 1);
          uint64_t v112 = v30[7];
          uint64_t v113 = &v28[v112];
          uint64_t v114 = &v29[v112];
          *(void *)uint64_t v113 = *(void *)v114;
          *((void *)v113 + 1) = *((void *)v114 + 1);
          uint64_t v115 = v30[8];
          uint64_t v116 = *(void **)&v29[v115];
          *(void *)&v28[v115] = v116;
          uint64_t v117 = *(void (**)(char *, void, uint64_t, int *))(v31 + 56);
          id v118 = v108;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v119 = v116;
          v117(v28, 0, 1, v30);
        }
        break;
      case 3u:
        uint64_t v34 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        uint64_t v36 = v35[5];
        uint64_t v37 = *(void **)((char *)a2 + v36);
        *(void *)((char *)a1 + v36) = v37;
        uint64_t v38 = v35[6];
        uint64_t v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = (void *)((char *)a2 + v38);
        void *v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v35[7];
        uint64_t v42 = (void *)((char *)a1 + v41);
        uint64_t v43 = (void *)((char *)a2 + v41);
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v35[8];
        uint64_t v45 = *(void **)((char *)a2 + v44);
        *(void *)((char *)a1 + v44) = v45;
        id v46 = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v47 = v45;
        break;
      case 4u:
        uint64_t v48 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
        uint64_t v49 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
        uint64_t v50 = *(int *)(v49 + 20);
        uint64_t v51 = (void *)((char *)a1 + v50);
        uint64_t v52 = (void *)((char *)a2 + v50);
        *uint64_t v51 = *v52;
        v51[1] = v52[1];
        uint64_t v53 = *(int *)(v49 + 24);
        uint64_t v54 = *(void **)((char *)a2 + v53);
        *(void *)((char *)a1 + v53) = v54;
        swift_bridgeObjectRetain();
        id v55 = v54;
        break;
      case 5u:
        uint64_t v56 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
        uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
        *(void *)((char *)a1 + *(int *)(PartyRatings + 20)) = *(void *)((char *)a2 + *(int *)(PartyRatings + 20));
        uint64_t v58 = *(int *)(PartyRatings + 24);
        uint64_t v59 = *(void **)((char *)a2 + v58);
        *(void *)((char *)a1 + v58) = v59;
        id v60 = v59;
        break;
      case 6u:
        uint64_t v61 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(a1, a2, v61);
        uint64_t v62 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
        *(_DWORD *)((char *)a1 + v62[5]) = *(_DWORD *)((char *)a2 + v62[5]);
        uint64_t v63 = v62[6];
        uint64_t v64 = *(void **)((char *)a2 + v63);
        *(void *)((char *)a1 + v63) = v64;
        *(void *)((char *)a1 + v62[7]) = *(void *)((char *)a2 + v62[7]);
        uint64_t v65 = v62[8];
        uint64_t v66 = (void *)((char *)a1 + v65);
        uint64_t v67 = (void *)((char *)a2 + v65);
        void *v66 = *v67;
        v66[1] = v67[1];
        *((unsigned char *)a1 + v62[9]) = *((unsigned char *)a2 + v62[9]);
        id v68 = v64;
        swift_bridgeObjectRetain();
        break;
      case 7u:
        uint64_t v69 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
        uint64_t v70 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
        *((unsigned char *)a1 + *(int *)(v70 + 20)) = *((unsigned char *)a2 + *(int *)(v70 + 20));
        break;
      case 8u:
        uint64_t v71 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
        uint64_t v72 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0) + 20);
        uint64_t v73 = *(void **)((char *)a2 + v72);
        *(void *)((char *)a1 + v72) = v73;
        id v74 = v73;
        break;
      case 9u:
      case 0xDu:
      case 0xFu:
      case 0x10u:
        *a1 = *a2;
        swift_retain();
        break;
      case 0xAu:
        uint64_t v75 = type metadata accessor for UUID();
        uint64_t v76 = *(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16);
        v76(a1, a2, v75);
        __dstb = (int *)type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
        uint64_t v77 = __dstb[5];
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        v76((void *)((char *)a1 + v77), (void *)((char *)a2 + v77), v75);
        id v80 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v81 = v80[5];
        uint64_t v82 = &v78[v81];
        uint64_t v83 = &v79[v81];
        uint64_t v126 = type metadata accessor for AttributedString();
        uint64_t v84 = *(void *)(v126 - 8);
        uint64_t v124 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
        v124(v82, v83, v126);
        uint64_t v85 = v80[6];
        uint64_t v86 = &v78[v85];
        uint64_t v87 = &v79[v85];
        *(void *)uint64_t v86 = *(void *)v87;
        *((void *)v86 + 1) = *((void *)v87 + 1);
        *(void *)&v78[v80[7]] = *(void *)&v79[v80[7]];
        *(void *)&v78[v80[8]] = *(void *)&v79[v80[8]];
        *(void *)&v78[v80[9]] = *(void *)&v79[v80[9]];
        *(void *)&v78[v80[10]] = *(void *)&v79[v80[10]];
        uint64_t v88 = v80[11];
        uint64_t v89 = &v78[v88];
        uint64_t v90 = &v79[v88];
        char v91 = v90[8];
        *(void *)uint64_t v89 = *(void *)v90;
        v89[8] = v91;
        uint64_t v92 = v80[12];
        id v128 = &v78[v92];
        uint64_t v93 = &v79[v92];
        uint64_t v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        if (v94(v93, 1, v126))
        {
          uint64_t v95 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(v128, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          v124(v128, v93, v126);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v128, 0, 1, v126);
        }
        uint64_t v120 = __dstb[6];
        uint64_t v121 = *(void **)((char *)a2 + v120);
        *(void *)((char *)a1 + v120) = v121;
        id v122 = v121;
        break;
      case 0xBu:
        uint64_t v96 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
        uint64_t v97 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
        *((unsigned char *)a1 + *(int *)(v97 + 20)) = *((unsigned char *)a2 + *(int *)(v97 + 20));
        break;
      case 0xCu:
        uint64_t v98 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(a1, a2, v98);
        uint64_t v99 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
        uint64_t v100 = (char *)a1 + v99;
        uint64_t v101 = (char *)a2 + v99;
        uint64_t v102 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
        break;
      case 0xEu:
        uint64_t v103 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
        uint64_t v104 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0) + 20);
        uint64_t v105 = (void *)((char *)a1 + v104);
        uint64_t v106 = (void *)((char *)a2 + v104);
        *uint64_t v105 = *v106;
        v105[1] = v106[1];
        swift_retain();
        break;
      default:
        uint64_t v4 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v6 = v5[5];
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        id v127 = (void *)type metadata accessor for AttributedString();
        uint64_t v9 = *(v127 - 1);
        uint64_t v125 = *(void (**)(char *, char *, void *))(v9 + 16);
        v125(v7, v8, v127);
        uint64_t v10 = v5[6];
        uint64_t v11 = (void *)((char *)a1 + v10);
        uint64_t v12 = (void *)((char *)a2 + v10);
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        *(void *)((char *)a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
        *(void *)((char *)a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
        *(void *)((char *)a1 + v5[9]) = *(void *)((char *)a2 + v5[9]);
        *(void *)((char *)a1 + v5[10]) = *(void *)((char *)a2 + v5[10]);
        uint64_t v13 = v5[11];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        char v16 = v15[8];
        *(void *)uint64_t v14 = *(void *)v15;
        v14[8] = v16;
        uint64_t v17 = v5[12];
        __dst = (char *)a1 + v17;
        uint64_t v18 = (char *)a2 + v17;
        uint64_t v19 = *(unsigned int (**)(char *, uint64_t, void *))(v9 + 48);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        if (v19(v18, 1, v127))
        {
          uint64_t v20 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(__dst, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          v125(__dst, v18, v127);
          (*(void (**)(char *, void, uint64_t, void *))(v9 + 56))(__dst, 0, 1, v127);
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1001B552C(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for AttributedString();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
      *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
      uint64_t v14 = v7[11];
      uint64_t v15 = &a1[v14];
      char v16 = &a2[v14];
      *(void *)uint64_t v15 = *(void *)v16;
      v15[8] = v16[8];
      uint64_t v17 = v7[12];
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
      {
        uint64_t v20 = sub_1000FF33C(&qword_1015CFD80);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        v13(v18, v19, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
      }
      goto LABEL_25;
    case 1u:
      uint64_t v21 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for PlaceSummaryViewModelUnit.Distance(0);
      *(_OWORD *)&a1[*(int *)(v22 + 20)] = *(_OWORD *)&a2[*(int *)(v22 + 20)];
      goto LABEL_25;
    case 2u:
      uint64_t v23 = type metadata accessor for UUID();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
      v24(a1, a2, v23);
      uint64_t v25 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
      *(void *)&a1[v25[5]] = *(void *)&a2[v25[5]];
      *(void *)&a1[v25[6]] = *(void *)&a2[v25[6]];
      uint64_t v26 = v25[7];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
      uint64_t v30 = *((void *)v29 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = sub_1000FF33C(&qword_1015D0498);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        v24(v27, v28, v23);
        *(void *)&v27[v29[5]] = *(void *)&v28[v29[5]];
        *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
        *(_OWORD *)&v27[v29[7]] = *(_OWORD *)&v28[v29[7]];
        *(void *)&v27[v29[8]] = *(void *)&v28[v29[8]];
        (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
      }
      goto LABEL_25;
    case 3u:
      uint64_t v32 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
      uint64_t v33 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
      *(void *)&a1[v33[5]] = *(void *)&a2[v33[5]];
      *(_OWORD *)&a1[v33[6]] = *(_OWORD *)&a2[v33[6]];
      *(_OWORD *)&a1[v33[7]] = *(_OWORD *)&a2[v33[7]];
      *(void *)&a1[v33[8]] = *(void *)&a2[v33[8]];
      goto LABEL_25;
    case 4u:
      uint64_t v34 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
      uint64_t v35 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
      *(_OWORD *)&a1[*(int *)(v35 + 20)] = *(_OWORD *)&a2[*(int *)(v35 + 20)];
      *(void *)&a1[*(int *)(v35 + 24)] = *(void *)&a2[*(int *)(v35 + 24)];
      goto LABEL_25;
    case 5u:
      uint64_t v36 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
      *(void *)&a1[*(int *)(PartyRatings + 20)] = *(void *)&a2[*(int *)(PartyRatings + 20)];
      *(void *)&a1[*(int *)(PartyRatings + 24)] = *(void *)&a2[*(int *)(PartyRatings + 24)];
      goto LABEL_25;
    case 6u:
      uint64_t v38 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
      uint64_t v39 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
      *(_DWORD *)&a1[v39[5]] = *(_DWORD *)&a2[v39[5]];
      *(void *)&a1[v39[6]] = *(void *)&a2[v39[6]];
      *(void *)&a1[v39[7]] = *(void *)&a2[v39[7]];
      *(_OWORD *)&a1[v39[8]] = *(_OWORD *)&a2[v39[8]];
      a1[v39[9]] = a2[v39[9]];
      goto LABEL_25;
    case 7u:
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
      uint64_t v41 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
      a1[*(int *)(v41 + 20)] = a2[*(int *)(v41 + 20)];
      goto LABEL_25;
    case 8u:
      uint64_t v42 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
      uint64_t v43 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0);
      *(void *)&a1[*(int *)(v43 + 20)] = *(void *)&a2[*(int *)(v43 + 20)];
      goto LABEL_25;
    case 0xAu:
      uint64_t v44 = type metadata accessor for UUID();
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32);
      v45(a1, a2, v44);
      uint64_t v74 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
      uint64_t v46 = *(int *)(v74 + 20);
      id v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      v45(&a1[v46], &a2[v46], v44);
      uint64_t v49 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
      uint64_t v50 = v49[5];
      uint64_t v73 = &v47[v50];
      uint64_t v51 = &v48[v50];
      uint64_t v52 = type metadata accessor for AttributedString();
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v54 = v51;
      id v55 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      v55(v73, v54, v52);
      *(_OWORD *)&v47[v49[6]] = *(_OWORD *)&v48[v49[6]];
      *(void *)&v47[v49[7]] = *(void *)&v48[v49[7]];
      *(void *)&v47[v49[8]] = *(void *)&v48[v49[8]];
      *(void *)&v47[v49[9]] = *(void *)&v48[v49[9]];
      *(void *)&v47[v49[10]] = *(void *)&v48[v49[10]];
      uint64_t v56 = v49[11];
      uint64_t v57 = &v47[v56];
      uint64_t v58 = &v48[v56];
      *(void *)uint64_t v57 = *(void *)v58;
      v57[8] = v58[8];
      uint64_t v59 = v49[12];
      id v60 = &v47[v59];
      uint64_t v61 = &v48[v59];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v61, 1, v52))
      {
        uint64_t v62 = sub_1000FF33C(&qword_1015CFD80);
        memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        v55(v60, v61, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v60, 0, 1, v52);
      }
      *(void *)&a1[*(int *)(v74 + 24)] = *(void *)&a2[*(int *)(v74 + 24)];
      goto LABEL_25;
    case 0xBu:
      uint64_t v63 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(a1, a2, v63);
      uint64_t v64 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
      a1[*(int *)(v64 + 20)] = a2[*(int *)(v64 + 20)];
      goto LABEL_25;
    case 0xCu:
      uint64_t v65 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
      uint64_t v66 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
      uint64_t v67 = &a1[v66];
      id v68 = &a2[v66];
      uint64_t v69 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
      goto LABEL_25;
    case 0xEu:
      uint64_t v70 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(a1, a2, v70);
      uint64_t v71 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
      *(_OWORD *)&a1[*(int *)(v71 + 20)] = *(_OWORD *)&a2[*(int *)(v71 + 20)];
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1001B5F94(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001AB734((uint64_t)a1, type metadata accessor for PlaceSummaryViewModelUnit);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = type metadata accessor for AttributedString();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v13(v9, v10, v11);
        *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
        *(void *)&a1[v7[7]] = *(void *)&a2[v7[7]];
        *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
        *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
        *(void *)&a1[v7[10]] = *(void *)&a2[v7[10]];
        uint64_t v14 = v7[11];
        uint64_t v15 = &a1[v14];
        char v16 = &a2[v14];
        *(void *)uint64_t v15 = *(void *)v16;
        v15[8] = v16[8];
        uint64_t v17 = v7[12];
        uint64_t v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v19, 1, v11))
        {
          uint64_t v20 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          v13(v18, v19, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
        }
        goto LABEL_26;
      case 1u:
        uint64_t v21 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        uint64_t v22 = type metadata accessor for PlaceSummaryViewModelUnit.Distance(0);
        *(_OWORD *)&a1[*(int *)(v22 + 20)] = *(_OWORD *)&a2[*(int *)(v22 + 20)];
        goto LABEL_26;
      case 2u:
        uint64_t v23 = type metadata accessor for UUID();
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
        v24(a1, a2, v23);
        uint64_t v25 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(0);
        *(void *)&a1[v25[5]] = *(void *)&a2[v25[5]];
        *(void *)&a1[v25[6]] = *(void *)&a2[v25[6]];
        uint64_t v26 = v25[7];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        uint64_t v30 = *((void *)v29 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = sub_1000FF33C(&qword_1015D0498);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          v24(v27, v28, v23);
          *(void *)&v27[v29[5]] = *(void *)&v28[v29[5]];
          *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
          *(_OWORD *)&v27[v29[7]] = *(_OWORD *)&v28[v29[7]];
          *(void *)&v27[v29[8]] = *(void *)&v28[v29[8]];
          (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
        }
        goto LABEL_26;
      case 3u:
        uint64_t v32 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        uint64_t v33 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(0);
        *(void *)&a1[v33[5]] = *(void *)&a2[v33[5]];
        *(_OWORD *)&a1[v33[6]] = *(_OWORD *)&a2[v33[6]];
        *(_OWORD *)&a1[v33[7]] = *(_OWORD *)&a2[v33[7]];
        *(void *)&a1[v33[8]] = *(void *)&a2[v33[8]];
        goto LABEL_26;
      case 4u:
        uint64_t v34 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        uint64_t v35 = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(0);
        *(_OWORD *)&a1[*(int *)(v35 + 20)] = *(_OWORD *)&a2[*(int *)(v35 + 20)];
        *(void *)&a1[*(int *)(v35 + 24)] = *(void *)&a2[*(int *)(v35 + 24)];
        goto LABEL_26;
      case 5u:
        uint64_t v36 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
        uint64_t PartyRatings = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(0);
        *(void *)&a1[*(int *)(PartyRatings + 20)] = *(void *)&a2[*(int *)(PartyRatings + 20)];
        *(void *)&a1[*(int *)(PartyRatings + 24)] = *(void *)&a2[*(int *)(PartyRatings + 24)];
        goto LABEL_26;
      case 6u:
        uint64_t v38 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
        uint64_t v39 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(0);
        *(_DWORD *)&a1[v39[5]] = *(_DWORD *)&a2[v39[5]];
        *(void *)&a1[v39[6]] = *(void *)&a2[v39[6]];
        *(void *)&a1[v39[7]] = *(void *)&a2[v39[7]];
        *(_OWORD *)&a1[v39[8]] = *(_OWORD *)&a2[v39[8]];
        a1[v39[9]] = a2[v39[9]];
        goto LABEL_26;
      case 7u:
        uint64_t v40 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
        uint64_t v41 = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(0);
        a1[*(int *)(v41 + 20)] = a2[*(int *)(v41 + 20)];
        goto LABEL_26;
      case 8u:
        uint64_t v42 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
        uint64_t v43 = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(0);
        *(void *)&a1[*(int *)(v43 + 20)] = *(void *)&a2[*(int *)(v43 + 20)];
        goto LABEL_26;
      case 0xAu:
        uint64_t v44 = type metadata accessor for UUID();
        uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32);
        v45(a1, a2, v44);
        uint64_t v74 = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(0);
        uint64_t v46 = *(int *)(v74 + 20);
        id v47 = &a1[v46];
        uint64_t v48 = &a2[v46];
        v45(&a1[v46], &a2[v46], v44);
        uint64_t v49 = (int *)type metadata accessor for PlaceSummaryViewModelUnit.Label(0);
        uint64_t v50 = v49[5];
        uint64_t v73 = &v47[v50];
        uint64_t v51 = &v48[v50];
        uint64_t v52 = type metadata accessor for AttributedString();
        uint64_t v53 = *(void *)(v52 - 8);
        uint64_t v54 = v51;
        id v55 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
        v55(v73, v54, v52);
        *(_OWORD *)&v47[v49[6]] = *(_OWORD *)&v48[v49[6]];
        *(void *)&v47[v49[7]] = *(void *)&v48[v49[7]];
        *(void *)&v47[v49[8]] = *(void *)&v48[v49[8]];
        *(void *)&v47[v49[9]] = *(void *)&v48[v49[9]];
        *(void *)&v47[v49[10]] = *(void *)&v48[v49[10]];
        uint64_t v56 = v49[11];
        uint64_t v57 = &v47[v56];
        uint64_t v58 = &v48[v56];
        *(void *)uint64_t v57 = *(void *)v58;
        v57[8] = v58[8];
        uint64_t v59 = v49[12];
        id v60 = &v47[v59];
        uint64_t v61 = &v48[v59];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v61, 1, v52))
        {
          uint64_t v62 = sub_1000FF33C(&qword_1015CFD80);
          memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          v55(v60, v61, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v60, 0, 1, v52);
        }
        *(void *)&a1[*(int *)(v74 + 24)] = *(void *)&a2[*(int *)(v74 + 24)];
        goto LABEL_26;
      case 0xBu:
        uint64_t v63 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(a1, a2, v63);
        uint64_t v64 = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(0);
        a1[*(int *)(v64 + 20)] = a2[*(int *)(v64 + 20)];
        goto LABEL_26;
      case 0xCu:
        uint64_t v65 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
        uint64_t v66 = *(int *)(type metadata accessor for PlaceSummaryViewModelUnit.Hours(0) + 20);
        uint64_t v67 = &a1[v66];
        id v68 = &a2[v66];
        uint64_t v69 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        goto LABEL_26;
      case 0xEu:
        uint64_t v70 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(a1, a2, v70);
        uint64_t v71 = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(0);
        *(_OWORD *)&a1[*(int *)(v71 + 20)] = *(_OWORD *)&a2[*(int *)(v71 + 20)];
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1001B6A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1001B6A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1001B6A70()
{
  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Label(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Distance(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.MultipleCuratedGuides(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.SingleCuratedGuide(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.UserGeneratedGuide(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.FirstPartyRatings(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.ThirdPartyRatings(319);
              if (v7 <= 0x3F)
              {
                uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.UGCUserRecommendations(319);
                if (v8 <= 0x3F)
                {
                  uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.TransitShields(319);
                  if (v9 <= 0x3F)
                  {
                    uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.TappableEntry(319);
                    if (v10 <= 0x3F)
                    {
                      uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Delimiter(319);
                      if (v11 <= 0x3F)
                      {
                        uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.Hours(319);
                        if (v12 <= 0x3F)
                        {
                          uint64_t result = type metadata accessor for PlaceSummaryViewModelUnit.PhotoCarousel(319);
                          if (v13 <= 0x3F)
                          {
                            swift_initEnumMetadataMultiPayload();
                            return 0;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryViewModelUnit.Delimiter.DelimiterType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001B6EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryViewModelUnit.Delimiter.DelimiterType()
{
  return &type metadata for PlaceSummaryViewModelUnit.Delimiter.DelimiterType;
}

unint64_t sub_1001B6EE4()
{
  unint64_t result = qword_1015D34C8;
  if (!qword_1015D34C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D34C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitPublisherDescription()
{
  return &type metadata for PlaceSummaryUnitPublisherDescription;
}

uint64_t sub_1001B7068()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B722C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints] = _swiftEmptyArrayStorage;
  uint64_t v3 = OBJC_IVAR____TtC4Maps28NavigationWaypointController_observers;
  id v4 = objc_allocWithZone((Class)GEOObserverHashTable);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithProtocol:&OBJC_PROTOCOL____TtP4Maps36NavigationWaypointControllerObserver_ queue:0];
  *(void *)&v5[OBJC_IVAR____TtC4Maps28NavigationWaypointController_originWaypoint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC4Maps28NavigationWaypointController_service] = a1;
  id v6 = a1;
  uint64_t v7 = NSNotFound.getter();
  if (v7 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    *(void *)&v5[OBJC_IVAR____TtC4Maps28NavigationWaypointController_targetLegIndex] = v7;

    v12.receiver = v5;
    v12.super_class = (Class)type metadata accessor for NavigationWaypointController();
    unint64_t v8 = (char *)objc_msgSendSuper2(&v12, "init");
    unint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC4Maps28NavigationWaypointController_service];
    unint64_t v10 = v8;
    [v9 registerObserver:v10];
    sub_1001B8244(v6, 0, 1);

    return (uint64_t)v10;
  }
  return result;
}

void sub_1001B73F0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_1000F2248(v4, (uint64_t)qword_1015D3520);
  id v5 = a1;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 136315138;
    id v9 = [v5 shortDescription];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    sub_1000F2280(v10, v12, v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Will insert waypoint: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  unint64_t v13 = (void *)(v2 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints);
  swift_beginAccess();
  if (!(*v13 >> 62))
  {
    id v14 = v5;
LABEL_8:
    sub_100348220(0, 0, (uint64_t)v5);
    swift_endAccess();
    sub_1001B7E34(1);
    return;
  }
  id v15 = v5;
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v16 & 0x8000000000000000) == 0) {
    goto LABEL_8;
  }
  __break(1u);
}

void sub_1001B76C0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000F2248(v6, (uint64_t)qword_1015D3520);
  id v7 = a1;
  id v8 = a2;
  id v9 = v7;
  id v10 = v8;
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v32 = v3;
    id v14 = [v9 shortDescription];
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    sub_1000F2280(v15, v17, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    id v18 = [v10 shortDescription];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    sub_1000F2280(v19, v21, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v3 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Will replace waypoint: %s with: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v22 = (unint64_t *)(v3 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints);
  swift_beginAccess();
  unint64_t v23 = *v22;
  swift_bridgeObjectRetain();
  sub_1002A93E4((uint64_t)v9, v23);
  unint64_t v25 = v24;
  char v27 = v26;
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v28 = (void *)sub_1002ACFAC(v25);
    swift_endAccess();
  }
  swift_beginAccess();
  if (!(*v22 >> 62))
  {
    id v29 = v10;
LABEL_10:
    sub_100348220(0, 0, (uint64_t)v10);
    swift_endAccess();
    sub_1001B7E34(1);
    return;
  }
  id v30 = v10;
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((v31 & 0x8000000000000000) == 0) {
    goto LABEL_10;
  }
  __break(1u);
}

void sub_1001B7A9C(int64_t a1)
{
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = &v1[OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints];
    swift_beginAccess();
    if (*(void *)v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9 > a1) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
LABEL_4:
      if (qword_1015CBBA8 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_1000F2248(v4, (uint64_t)qword_1015D3520);
      id v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v5, v6))
      {
        id v7 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)id v7 = 134217984;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Will remove waypoint at index: %ld", v7, 0xCu);
        swift_slowDealloc();
      }

      swift_beginAccess();
      id v8 = (void *)sub_1002ACFAC(a1);
      swift_endAccess();

      sub_1001B7E34(1);
      return;
    }
  }
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_1000F2248(v10, (uint64_t)qword_1015D3520);
  unint64_t v11 = v1;
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2048;
    uint64_t v15 = &v11[OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints];
    swift_beginAccess();
    if (*(void *)v15 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Tried to remove at index: %ld which was out of bounds of displayedWaypoints.count: %ld", (uint8_t *)v14, 0x16u);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1001B7E34(char a1)
{
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_1000F2248(v3, (uint64_t)qword_1015D3520);
  uint64_t v4 = v1;
  id v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  unint64_t v23 = v4;
  char v22 = a1;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109378;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2080;
    swift_beginAccess();
    unint64_t v8 = swift_bridgeObjectRetain();
    sub_100258F64(v8);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = sub_100769DCC(isa);

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    uint64_t v14 = v11;
    uint64_t v4 = v23;
    sub_1000F2280(v14, v13, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "notifyObserversAndUpdateService:%{BOOL}d with currently displayed waypoints: %s", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v15 = [*(id *)&v4[OBJC_IVAR____TtC4Maps28NavigationWaypointController_observers] allObservers];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v18 = v16 + 32;
    swift_beginAccess();
    do
    {
      sub_1000F2354(v18, (uint64_t)v25);
      sub_1000FF33C((uint64_t *)&unk_1015D35B0);
      if (swift_dynamicCast())
      {
        sub_100100830(0, (unint64_t *)&qword_1015D1C60);
        swift_bridgeObjectRetain();
        Class v19 = Array._bridgeToObjectiveC()().super.isa;
        uint64_t v4 = v23;
        swift_bridgeObjectRelease();
        [v24 navigationWaypointController:v23 didUpdateDisplayedWaypoints:v19];
        swift_unknownObjectRelease();
      }
      v18 += 32;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  if (v22)
  {
    unint64_t v20 = *(void **)&v4[OBJC_IVAR____TtC4Maps28NavigationWaypointController_service];
    swift_beginAccess();
    sub_100100830(0, (unint64_t *)&qword_1015D1C60);
    swift_bridgeObjectRetain();
    Class v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 rerouteWithWaypoints:v21];
  }
}

void sub_1001B8244(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void (***)(char *, uint64_t, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char **)((char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&double v13 = __chkstk_darwin(v12).n128_u64[0];
  uint64_t v76 = (char *)&v73 - v14;
  unsigned int v15 = [a1 isInNavigatingState];
  uint64_t v78 = v11;
  if (!v15) {
    goto LABEL_27;
  }
  id v16 = [a1 route];
  if (!v16) {
    goto LABEL_27;
  }
  uint64_t v17 = v16;
  uint64_t v18 = v8;
  id v19 = [v16 steps];
  if (!v19)
  {

LABEL_27:
    id v38 = 0;
    uint64_t v37 = _swiftEmptyArrayStorage;
    uint64_t v81 = _swiftEmptyArrayStorage;
    goto LABEL_28;
  }
  unint64_t v20 = v19;
  uint64_t v75 = v4;
  sub_100100830(0, (unint64_t *)&unk_1015D3598);
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (a3)
  {
LABEL_15:
    id v31 = [a1 stepIndex];
    goto LABEL_16;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = &selRef_itemType;
    id v22 = [v17 legs];
    if (!v22)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    unint64_t v23 = v22;
    sub_100100830(0, &qword_1015D35A8);
    unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v24 >> 62))
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  swift_bridgeObjectRelease();
  if (v25 <= a2) {
    goto LABEL_15;
  }
  id v26 = [v17 v11[379]];
  if (v26)
  {
    char v27 = v26;
    uint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v28 & 0xC000000000000001) != 0) {
      goto LABEL_62;
    }
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) <= (unint64_t)a2)
    {
      __break(1u);
      goto LABEL_64;
    }
    for (id i = *(id *)(v28 + 8 * a2 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
    {
      id v30 = i;
      swift_bridgeObjectRelease();
      id v31 = [v30 startStepIndex];

LABEL_16:
      uint64_t v8 = v18;
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v32 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      BOOL v33 = (unint64_t)v31 >= v32 || v32 <= 0;
      id v34 = v33 ? 0 : v31;
      id v35 = [v17 waypointsAfterStepIndex:v34 legIndex:0];
      if (v35)
      {
        uint64_t v36 = v35;
        sub_100100830(0, (unint64_t *)&qword_1015D1C60);
        uint64_t v37 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v37 = 0;
      }
      uint64_t v4 = v75;
      uint64_t v81 = v37;
      id v38 = [v17 waypoints];
      if (!v38) {
        break;
      }
      sub_100100830(0, (unint64_t *)&qword_1015D1C60);
      unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        id v38 = (id)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v38) {
          goto LABEL_53;
        }
      }
      else
      {
        id v38 = *(id *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v38) {
          goto LABEL_53;
        }
      }
      if ((v21 & 0xC000000000000001) != 0)
      {
        id v72 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_52;
      }
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v72 = *(id *)(v21 + 32);
LABEL_52:
        id v38 = v72;
LABEL_53:
        swift_bridgeObjectRelease();

        uint64_t v4 = v75;
        goto LABEL_28;
      }
      __break(1u);
LABEL_62:
      ;
    }

LABEL_28:
    uint64_t v39 = *(void **)(v4 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_originWaypoint);
    *(void *)(v4 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_originWaypoint) = v38;
    id v77 = v38;

    uint64_t v40 = OBJC_IVAR____TtC4Maps28NavigationWaypointController_targetLegIndex;
    id v41 = *(id *)(v4 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_targetLegIndex);
    id v42 = [a1 targetLegIndex];
    *(void *)(v4 + v40) = [a1 targetLegIndex];
    uint64_t v43 = (uint64_t *)(v4 + OBJC_IVAR____TtC4Maps28NavigationWaypointController_displayedWaypoints);
    swift_beginAccess();
    if (v37)
    {
      uint64_t v44 = v4;
      uint64_t v45 = *v43;
      swift_bridgeObjectRetain();
      unint64_t v46 = swift_bridgeObjectRetain();
      unsigned __int8 v47 = sub_10019EB74(v46, v45);
      swift_bridgeObjectRelease();
      uint64_t v4 = v44;
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0 && v41 == v42)
      {
        if (qword_1015CBBA8 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_1000F2248(v8, (uint64_t)qword_1015D3520);
        uint64_t v49 = v76;
        v9[2](v76, v48, v8);
        unint64_t v50 = (unint64_t)v81;
        swift_bridgeObjectRetain();
        uint64_t v51 = Logger.logObject.getter();
        os_log_type_t v52 = static os_log_type_t.debug.getter();
        if (!os_log_type_enabled(v51, v52))
        {

          swift_bridgeObjectRelease_n();
          ((void (*)(char *, uint64_t))v9[1])(v49, v8);
          return;
        }
        uint64_t v53 = v9;
        uint64_t v74 = v8;
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        v80[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v54 = 136315138;
        if (v50)
        {
          uint64_t v78 = (char **)(v54 + 4);
          sub_100258F64(v50);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v56 = sub_100769DCC(isa);

          uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v59 = v58;

          uint64_t v79 = sub_1000F2280(v57, v59, v80);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "updateFromLatestServiceState, new upcoming waypoints are same as displayed waypoints: %s", v54, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          ((void (*)(char *, uint64_t))v53[1])(v76, v74);
          return;
        }
        goto LABEL_66;
      }
    }
    if (qword_1015CBBA8 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_1000F2248(v8, (uint64_t)qword_1015D3520);
    uint64_t v61 = v78;
    v9[2]((char *)v78, v60, v8);
    unint64_t v62 = (unint64_t)v81;
    swift_bridgeObjectRetain_n();
    uint64_t v63 = (char *)v9;
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v75 = v4;
      uint64_t v76 = v63;
      uint64_t v74 = v8;
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315138;
      if (!v62)
      {
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v73 = v66 + 4;
      sub_100258F64(v62);
      Class v67 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v68 = sub_100769DCC(v67);

      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v71 = v70;

      uint64_t v79 = sub_1000F2280(v69, v71, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "updateFromLatestServiceState, new upcoming waypoints: %s", v66, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*((void (**)(char **, uint64_t))v76 + 1))(v78, v74);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*((void (**)(char **, uint64_t))v63 + 1))(v61, v8);
    }
    swift_beginAccess();
    if (v81)
    {
      *uint64_t v43 = (uint64_t)v81;
      swift_bridgeObjectRelease();
      sub_1001B7E34(0);

      return;
    }
LABEL_64:

    __break(1u);
    goto LABEL_65;
  }
LABEL_68:
  __break(1u);
}

id sub_1001B8C24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NavigationWaypointController();
  return [super dealloc];
}

uint64_t type metadata accessor for NavigationWaypointController()
{
  return self;
}

void sub_1001B8E98(void *a1, void *a2, unint64_t a3)
{
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1000F2248(v6, (uint64_t)qword_1015D3520);
  id v7 = a2;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v19 = a1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412546;
    uint64_t v12 = (void *)(v10 + 4);
    if (a2) {
      id v13 = v7;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = a2;

    *(_WORD *)(v10 + 12) = 2080;
    if (a3 <= 0xF)
    {
      uint64_t v12 = *(&off_1012DC298 + a3);
      uint64_t v14 = *(&off_1012DC218 + a3);
    }
    id v15 = v12;
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    sub_1000F2280(v16, v18, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "navigationService:didReroute: %@ forReason: %s", (uint8_t *)v10, 0x16u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a1 = v19;
  }
  else
  {
  }
  if (!a1) {
    __break(1u);
  }
  sub_1001B8244(a1, 0, 1);
}

void sub_1001B9224(void *a1)
{
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1000F2248(v2, (uint64_t)qword_1015D3520);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v5 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "navigationService:failedRerouteWithErrorCode: %ld", v5, 0xCu);
    swift_slowDealloc();
  }

  if (a1) {
    sub_1001B8244(a1, 0, 1);
  }
  else {
    __break(1u);
  }
}

void sub_1001B93D8(void *a1)
{
  if (MNNavigationServiceStateChangedToNavigating())
  {
    if (qword_1015CBBA8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_1015D3520);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "navigationService state changed to navigating", v5, 2u);
      swift_slowDealloc();
    }

    if (a1)
    {
      sub_1001B8244(a1, 0, 1);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001B961C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1000F2248(v8, (uint64_t)qword_1015D3520);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  id v13 = a2;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v23 = a3;
    unint64_t v24 = a1;
    uint64_t v25 = v4;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v16 = 136315394;
    if (!a2) {
      goto LABEL_10;
    }
    v21[1] = v16 + 4;
    id v17 = [v13 shortDescription];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v26 = sub_1000F2280(v18, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    uint64_t v26 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "navigationService:didArriveAt:%s:endOfLegIndex:%lu", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    a1 = v24;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (a1)
  {
    sub_1001B8244(a1, 0, 1);
    return;
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t sub_1001B99A0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015D3520);
  sub_1000F2248(v0, (uint64_t)qword_1015D3520);
  type metadata accessor for NavigationWaypointController();
  sub_1000FF33C((uint64_t *)&unk_1015D3588);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

void sub_1001B9A40(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1000F2248(v6, (uint64_t)qword_1015D3520);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v14;
    *(_DWORD *)id v13 = 136315138;
    v22[1] = v14;
    switch((int)a2)
    {
      case 0:
        os_log_type_t v15 = @"AUTOMOBILE";
        goto LABEL_14;
      case 1:
        os_log_type_t v15 = @"TRANSIT";
        goto LABEL_14;
      case 2:
        os_log_type_t v15 = @"WALKING";
        goto LABEL_14;
      case 3:
        os_log_type_t v15 = @"BICYCLE";
        goto LABEL_14;
      case 4:
        os_log_type_t v15 = @"UNKNOWN_TRANSPORT_TYPE";
        goto LABEL_14;
      case 5:
        os_log_type_t v15 = @"FERRY";
        goto LABEL_14;
      case 6:
        os_log_type_t v15 = @"RIDESHARE";
LABEL_14:
        uint64_t v16 = v15;
        break;
      default:
        os_log_type_t v15 = +[NSString stringWithFormat:@"(unknown: %i)", a2];
        break;
    }
    uint64_t v23 = a1;
    uint64_t v24 = v3;
    id v17 = v15;
    if (!v17)
    {
LABEL_20:
      __break(1u);
      JUMPOUT(0x1001B9D84);
    }
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    uint64_t v25 = sub_1000F2280(v19, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "navigationService:didSwitchToNewTransportType: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a1 = v23;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_20;
  }
  sub_1001B8244(a1, 0, 1);
}

void sub_1001B9DA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a3;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1015CBBA8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1000F2248(v7, (uint64_t)qword_1015D3520);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  id v12 = a2;
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v23 = a1;
    uint64_t v24 = v4;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v15 = 136315394;
    if (!a2) {
      goto LABEL_12;
    }
    v21[1] = v15 + 4;
    id v16 = [v12 shortDescription];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v26 = sub_1000F2280(v17, v19, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v20 = v25;
    uint64_t v26 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "navigationService:didResumeNavigatingFrom:%s:endOfLegIndex:%lu", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    a1 = v23;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v20 = v25;
  }
  if (a1)
  {
    if (v20 != -1)
    {
      sub_1001B8244(a1, v20 + 1, 0);
      return;
    }
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_1001BA09C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v95 = *(void *)(v1 + 16);
  if (!v95) {
    return 0;
  }
  uint64_t v94 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  unint64_t v3 = 0;
  unint64_t v4 = 0xE000000000000000;
  uint64_t v93 = v1;
  do
  {
    if (v3 >= *(void *)(v1 + 16)) {
      goto LABEL_572;
    }
    unint64_t v97 = v4;
    uint64_t v98 = v2;
    unint64_t v10 = *(void *)(v94 + 16 * v3);
    swift_bridgeObjectRetain();
    v11._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = 2108704;
    v12._uint64_t object = (void *)0xE300000000000000;
    String.append(_:)(v12);
    unint64_t v105 = 0;
    unint64_t v106 = 0xE000000000000000;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (!v13) {
        goto LABEL_566;
      }
LABEL_8:
      unint64_t v96 = v3;
      unint64_t v14 = 0;
      unint64_t v15 = v10 & 0xC000000000000001;
      unint64_t v99 = v10 + 32;
      uint64_t v100 = v10 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        while (1)
        {
          if (v15)
          {
            uint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v21 = __OFADD__(v14++, 1);
            if (v21) {
              goto LABEL_570;
            }
          }
          else
          {
            if (v14 >= *(void *)(v100 + 16)) {
              goto LABEL_571;
            }
            uint64_t v20 = *(void **)(v99 + 8 * v14);
            swift_retain();
            BOOL v21 = __OFADD__(v14++, 1);
            if (v21)
            {
LABEL_570:
              __break(1u);
LABEL_571:
              __break(1u);
LABEL_572:
              __break(1u);
              JUMPOUT(0x1001BBD1CLL);
            }
          }
          uint64_t v22 = v105 & 0xFFFFFFFFFFFFLL;
          if ((v106 & 0x2000000000000000) != 0) {
            uint64_t v22 = HIBYTE(v106) & 0xF;
          }
          if (!v22) {
            break;
          }
          uint64_t v16 = sub_100261F88();
          uint64_t v101 = v16;
          uint64_t v102 = v23;
          uint64_t v24 = (void *)v20[16];
          if (v24)
          {
            swift_retain();
            while (2)
            {
              uint64_t v30 = v24[2];
              unint64_t v31 = v24[13];
              unint64_t v25 = 0xE800000000000000;
              uint64_t v26 = 0x45434E4154534944;
              switch(v31 >> 60)
              {
                case 1uLL:
                  goto LABEL_23;
                case 2uLL:
                  unint64_t v25 = 0xE500000000000000;
                  uint64_t v26 = 0x5352554F48;
                  goto LABEL_23;
                case 3uLL:
                  unint64_t v25 = 0xE700000000000000;
                  uint64_t v32 = 0x534552444441;
                  goto LABEL_29;
                case 4uLL:
                  unint64_t v25 = 0xE700000000000000;
                  uint64_t v32 = 0x474E49544152;
LABEL_29:
                  uint64_t v26 = v32 & 0xFFFFFFFFFFFFLL | 0x53000000000000;
                  goto LABEL_23;
                case 5uLL:
                  uint64_t v26 = 0x5F44455441525543;
                  unint64_t v25 = 0xEE00534544495547;
                  goto LABEL_23;
                case 6uLL:
                  unint64_t v25 = 0xE600000000000000;
                  uint64_t v26 = 0x474E49525453;
                  goto LABEL_23;
                case 7uLL:
                  uint64_t v26 = 0x4F5F524556524553;
                  unint64_t v25 = 0xEF45444952524556;
                  goto LABEL_23;
                case 8uLL:
                  uint64_t v26 = 0x4D4E4941544E4F43;
                  unint64_t v25 = 0xEB00000000544E45;
                  goto LABEL_23;
                case 9uLL:
                  unint64_t v25 = 0xE700000000000000;
                  uint64_t v26 = 0x44494F54434146;
                  goto LABEL_23;
                case 0xAuLL:
                  uint64_t v33 = v24[14];
                  uint64_t v34 = v24[5];
                  uint64_t v36 = v24[3];
                  uint64_t v35 = v24[4];
                  if (v31 == 0xA000000000000000)
                  {
                    v37.i64[0] = v24[9];
                    v37.i64[1] = v24[8];
                    v38.i64[0] = v24[14];
                    v38.i64[1] = v24[12];
                    v39.i64[0] = v24[7];
                    v39.i64[1] = v24[6];
                    v40.i64[0] = v24[11];
                    v40.i64[1] = v24[10];
                    int8x16_t v41 = vorrq_s8(vorrq_s8(v38, v37), vorrq_s8(v40, v39));
                    if (!(v36 | *(void *)&vorr_s8(*(int8x8_t *)v41.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v41, v41, 8uLL)) | v35 | v34 | v30))
                    {
                      unint64_t v25 = 0xE400000000000000;
                      uint64_t v26 = 1162690894;
                      goto LABEL_23;
                    }
                  }
                  uint64_t v42 = v24[11] | v24[12] | v24[10] | v24[9] | v24[8] | v24[7] | v24[6] | v34 | v35 | v36;
                  if (!v33 && v31 == 0xA000000000000000 && v30 == 1 && !v42)
                  {
                    uint64_t v26 = 0x59524F4745544143;
                    goto LABEL_23;
                  }
                  if (!v33 && v31 == 0xA000000000000000 && v30 == 2 && !v42)
                  {
                    unint64_t v25 = 0xE500000000000000;
                    uint64_t v26 = 0x4543495250;
                    goto LABEL_23;
                  }
                  if (!v33 && v31 == 0xA000000000000000 && v30 == 3)
                  {
                    uint64_t v26 = 0x5F5449534E415254;
                    unint64_t v25 = 0xEF53444C45494853;
                    if (!v42) {
                      goto LABEL_23;
                    }
                  }
                  if (!v33 && v31 == 0xA000000000000000 && v30 == 4 && !v42)
                  {
                    uint64_t v26 = 0xD000000000000015;
                    unint64_t v25 = 0x8000000100F79D20;
                    goto LABEL_23;
                  }
                  if (!v33 && v31 == 0xA000000000000000 && v30 == 5 && !v42)
                  {
                    uint64_t v43 = "ED_RECOMMENDATIONS";
LABEL_61:
                    unint64_t v25 = (unint64_t)v43 | 0x8000000000000000;
                    uint64_t v26 = 0xD000000000000012;
                    goto LABEL_23;
                  }
                  if (v33 || v31 != 0xA000000000000000 || v30 != 6 || v42)
                  {
                    if (v33 || v31 != 0xA000000000000000 || v30 != 7 || v42)
                    {
                      if (v33
                        || v31 != 0xA000000000000000
                        || v30 != 8
                        || (v26 = 0x4847494C48474948, unint64_t v25 = 0xEE004E49414D5F54, v42))
                      {
                        uint64_t v26 = 0xD000000000000010;
                        if (v33 || v31 != 0xA000000000000000 || v30 != 9 || v42)
                        {
                          if (v33 || v31 != 0xA000000000000000 || v30 != 10 || v42)
                          {
                            if (v33 || v31 != 0xA000000000000000 || v30 != 11 || v42)
                            {
                              if (v33 || v31 != 0xA000000000000000 || v30 != 12 || v42)
                              {
                                if (v33 || v31 != 0xA000000000000000 || v30 != 13 || v42)
                                {
                                  if (!v33 && v31 == 0xA000000000000000 && v30 == 14 && !v42)
                                  {
                                    uint64_t v43 = "VENUE_SHORT_ADDRESS_STRING";
                                    goto LABEL_61;
                                  }
                                  if (v33 || v31 != 0xA000000000000000 || v30 != 15 || v42)
                                  {
                                    if (v33 || v31 != 0xA000000000000000 || v30 != 16 || v42)
                                    {
                                      if (v33 || v31 != 0xA000000000000000 || v30 != 17 || v42)
                                      {
                                        if (v33 || v31 != 0xA000000000000000 || v30 != 18 || v42)
                                        {
                                          if (v33 || v31 != 0xA000000000000000 || v30 != 19 || v42)
                                          {
                                            if (v33 || v31 != 0xA000000000000000 || v30 != 20 || v42)
                                            {
                                              if (v33 || v31 != 0xA000000000000000 || v30 != 21 || v42)
                                              {
                                                if (v33 || v31 != 0xA000000000000000 || v30 != 22 || v42)
                                                {
                                                  if (v33 || v31 != 0xA000000000000000 || v30 != 23 || v42)
                                                  {
                                                    if (v33 || v31 != 0xA000000000000000 || v30 != 24 || v42)
                                                    {
                                                      if (!v33 && v31 == 0xA000000000000000 && v30 == 25 && !v42)
                                                      {
                                                        uint64_t v43 = "HIKING_DIFFICULTY";
                                                        goto LABEL_61;
                                                      }
                                                      if (v33 || v31 != 0xA000000000000000 || v30 != 26 || v42)
                                                      {
                                                        if (v33 || v31 != 0xA000000000000000 || v30 != 27 || v42)
                                                        {
                                                          if (v33 || v31 != 0xA000000000000000 || v30 != 28 || v42)
                                                          {
                                                            if (v33 || v31 != 0xA000000000000000 || v30 != 29 || v42)
                                                            {
                                                              if (v33
                                                                || v31 != 0xA000000000000000
                                                                || v30 != 30
                                                                || v42)
                                                              {
                                                                BOOL v44 = v33 == 0;
                                                                BOOL v47 = v30 == 31
                                                                   && v42 == 0
                                                                   && v31 == 0xA000000000000000;
                                                                if (v44 && v47) {
                                                                  uint64_t v26 = 0xD00000000000001FLL;
                                                                }
                                                                else {
                                                                  uint64_t v26 = 0x5F53534552444441;
                                                                }
                                                                if (v44 && v47) {
                                                                  unint64_t v25 = 0x8000000100F79B50;
                                                                }
                                                                else {
                                                                  unint64_t v25 = 0xED00004C4542414CLL;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                uint64_t v26 = 0xD00000000000001DLL;
                                                                unint64_t v25 = 0x8000000100F79B70;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              unint64_t v25 = 0x8000000100F79B90;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            uint64_t v26 = 0xD000000000000028;
                                                            unint64_t v25 = 0x8000000100F79BB0;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v26 = 0xD000000000000021;
                                                          unint64_t v25 = 0x8000000100F79BE0;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        uint64_t v26 = 0xD000000000000023;
                                                        unint64_t v25 = 0x8000000100F79C10;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t v26 = 0xD00000000000001ALL;
                                                      unint64_t v25 = 0x8000000100F79B10;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    uint64_t v26 = 0x544F4E5F52455355;
                                                    unint64_t v25 = 0xE900000000000045;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v26 = 0x5F524553555F4E49;
                                                  unint64_t v25 = 0xEF5952415242494CLL;
                                                }
                                              }
                                              else
                                              {
                                                uint64_t v26 = 0xD000000000000019;
                                                unint64_t v25 = 0x8000000100F79A90;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v26 = 0x55445F4554554F52;
                                              unint64_t v25 = 0xEE004E4F49544152;
                                            }
                                          }
                                          else
                                          {
                                            uint64_t v26 = 0x454C5F4554554F52;
                                            unint64_t v25 = 0xEC0000004854474ELL;
                                          }
                                        }
                                        else
                                        {
                                          uint64_t v26 = 0x59545F4554554F52;
                                          unint64_t v25 = 0xEA00000000004550;
                                        }
                                      }
                                      else
                                      {
                                        uint64_t v26 = 0x435F534F544F4850;
                                        unint64_t v25 = 0xEF4C4553554F5241;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v26 = 0xD000000000000013;
                                      unint64_t v25 = 0x8000000100F79AB0;
                                    }
                                  }
                                  else
                                  {
                                    uint64_t v26 = 0xD000000000000011;
                                    unint64_t v25 = 0x8000000100F79AD0;
                                  }
                                }
                                else
                                {
                                  uint64_t v26 = 0xD000000000000022;
                                  unint64_t v25 = 0x8000000100F79CF0;
                                }
                              }
                              else
                              {
                                uint64_t v26 = 0xD000000000000015;
                                unint64_t v25 = 0x8000000100F79C40;
                              }
                            }
                            else
                            {
                              uint64_t v26 = 0xD000000000000019;
                              unint64_t v25 = 0x8000000100F79C60;
                            }
                          }
                          else
                          {
                            uint64_t v26 = 0x454853494C425550;
                            unint64_t v25 = 0xEE00454D414E5F52;
                          }
                        }
                        else
                        {
                          unint64_t v25 = 0x8000000100F79C80;
                        }
                      }
                    }
                    else
                    {
                      unint64_t v25 = 0xE600000000000000;
                      uint64_t v26 = 0x544E45434552;
                    }
                  }
                  else
                  {
                    uint64_t v26 = 0xD000000000000022;
                    unint64_t v25 = 0x8000000100F79CA0;
                  }
LABEL_23:
                  unint64_t v27 = v25;
                  String.append(_:)(*(Swift::String *)&v26);
                  swift_bridgeObjectRelease();
                  v28._uint64_t countAndFlagsBits = 540945696;
                  v28._uint64_t object = (void *)0xE400000000000000;
                  String.append(_:)(v28);
                  swift_bridgeObjectRelease();
                  id v29 = (void *)v24[16];
                  swift_retain();
                  swift_release();
                  uint64_t v24 = v29;
                  if (v29) {
                    continue;
                  }
                  uint64_t v16 = v101;
                  uint64_t v17 = v102;
                  break;
                default:
                  unint64_t v25 = 0xEE00454D414E5F59;
                  uint64_t v26 = 0x5241444E4F434553;
                  goto LABEL_23;
              }
              break;
            }
          }
          else
          {
            uint64_t v17 = v23;
          }
          uint64_t v18 = v17;
          String.append(_:)(*(Swift::String *)&v16);
          swift_bridgeObjectRelease();
          v19._uint64_t countAndFlagsBits = 2108704;
          v19._uint64_t object = (void *)0xE300000000000000;
          String.append(_:)(v19);
          swift_bridgeObjectRelease();
          swift_release();
          if (v14 == v13) {
            goto LABEL_3;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v48 = v20[2];
        unint64_t v49 = v20[13];
        unint64_t v50 = 0xE800000000000000;
        unint64_t v51 = 0x45434E4154534944;
        switch(v49 >> 60)
        {
          case 1uLL:
            goto LABEL_241;
          case 2uLL:
            unint64_t v50 = 0xE500000000000000;
            unint64_t v51 = 0x5352554F48;
            goto LABEL_241;
          case 3uLL:
            unint64_t v50 = 0xE700000000000000;
            unint64_t v51 = 0x53534552444441;
            goto LABEL_241;
          case 4uLL:
            unint64_t v50 = 0xE700000000000000;
            unint64_t v51 = 0x53474E49544152;
            goto LABEL_241;
          case 5uLL:
            unint64_t v51 = 0x5F44455441525543;
            unint64_t v50 = 0xEE00534544495547;
            goto LABEL_241;
          case 6uLL:
            unint64_t v50 = 0xE600000000000000;
            unint64_t v51 = 0x474E49525453;
            goto LABEL_241;
          case 7uLL:
            unint64_t v51 = 0x4F5F524556524553;
            unint64_t v50 = 0xEF45444952524556;
            goto LABEL_241;
          case 8uLL:
            unint64_t v51 = 0x4D4E4941544E4F43;
            unint64_t v50 = 0xEB00000000544E45;
            goto LABEL_241;
          case 9uLL:
            unint64_t v50 = 0xE700000000000000;
            unint64_t v51 = 0x44494F54434146;
            goto LABEL_241;
          case 0xAuLL:
            uint64_t v52 = v20[14];
            uint64_t v53 = v20[5];
            uint64_t v55 = v20[3];
            uint64_t v54 = v20[4];
            if (v49 != 0xA000000000000000) {
              goto LABEL_215;
            }
            v56.i64[0] = v20[9];
            v56.i64[1] = v20[8];
            v57.i64[0] = v20[14];
            v57.i64[1] = v20[12];
            v58.i64[0] = v20[7];
            v58.i64[1] = v20[6];
            v59.i64[0] = v20[11];
            v59.i64[1] = v20[10];
            int8x16_t v60 = vorrq_s8(vorrq_s8(v57, v56), vorrq_s8(v59, v58));
            if (v55 | *(void *)&vorr_s8(*(int8x8_t *)v60.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v60, v60, 8uLL)) | v54 | v53 | v48)
            {
LABEL_215:
              uint64_t v61 = v20[11] | v20[12] | v20[10] | v20[9] | v20[8] | v20[7] | v20[6] | v53 | v54 | v55;
              if (v52 || v49 != 0xA000000000000000 || v48 != 1 || v61)
              {
                if (v52 || v49 != 0xA000000000000000 || v48 != 2 || v61)
                {
                  if (!v52 && v49 == 0xA000000000000000 && v48 == 3)
                  {
                    unint64_t v51 = 0x5F5449534E415254;
                    unint64_t v50 = 0xEF53444C45494853;
                    if (!v61) {
                      goto LABEL_241;
                    }
                  }
                  if (v52 || v49 != 0xA000000000000000 || v48 != 4 || v61)
                  {
                    if (!v52 && v49 == 0xA000000000000000 && v48 == 5 && !v61)
                    {
                      uint64_t v63 = "ED_RECOMMENDATIONS";
LABEL_240:
                      unint64_t v50 = (unint64_t)v63 | 0x8000000000000000;
                      unint64_t v51 = 0xD000000000000012;
                      goto LABEL_241;
                    }
                    if (v52 || v49 != 0xA000000000000000 || v48 != 6 || v61)
                    {
                      if (!v52 && v49 == 0xA000000000000000 && v48 == 7 && !v61)
                      {
                        unint64_t v50 = 0xE600000000000000;
                        unint64_t v51 = 0x544E45434552;
                        goto LABEL_241;
                      }
                      if (!v52 && v49 == 0xA000000000000000 && v48 == 8)
                      {
                        unint64_t v51 = 0x4847494C48474948;
                        unint64_t v50 = 0xEE004E49414D5F54;
                        if (!v61) {
                          goto LABEL_241;
                        }
                      }
                      unint64_t v51 = 0xD000000000000010;
                      if (v52 || v49 != 0xA000000000000000 || v48 != 9 || v61)
                      {
                        if (!v52 && v49 == 0xA000000000000000 && v48 == 10 && !v61)
                        {
                          unint64_t v51 = 0x454853494C425550;
                          unint64_t v50 = 0xEE00454D414E5F52;
                          goto LABEL_241;
                        }
                        if (v52 || v49 != 0xA000000000000000 || v48 != 11 || v61)
                        {
                          if (v52 || v49 != 0xA000000000000000 || v48 != 12 || v61)
                          {
                            if (v52 || v49 != 0xA000000000000000 || v48 != 13 || v61)
                            {
                              if (!v52 && v49 == 0xA000000000000000 && v48 == 14 && !v61)
                              {
                                uint64_t v63 = "VENUE_SHORT_ADDRESS_STRING";
                                goto LABEL_240;
                              }
                              if (v52 || v49 != 0xA000000000000000 || v48 != 15 || v61)
                              {
                                if (v52 || v49 != 0xA000000000000000 || v48 != 16 || v61)
                                {
                                  if (!v52 && v49 == 0xA000000000000000 && v48 == 17 && !v61)
                                  {
                                    unint64_t v51 = 0x435F534F544F4850;
                                    unint64_t v50 = 0xEF4C4553554F5241;
                                    goto LABEL_241;
                                  }
                                  if (!v52 && v49 == 0xA000000000000000 && v48 == 18 && !v61)
                                  {
                                    unint64_t v51 = 0x59545F4554554F52;
                                    unint64_t v50 = 0xEA00000000004550;
                                    goto LABEL_241;
                                  }
                                  if (!v52 && v49 == 0xA000000000000000 && v48 == 19 && !v61)
                                  {
                                    unint64_t v51 = 0x454C5F4554554F52;
                                    unint64_t v50 = 0xEC0000004854474ELL;
                                    goto LABEL_241;
                                  }
                                  if (!v52 && v49 == 0xA000000000000000 && v48 == 20 && !v61)
                                  {
                                    unint64_t v51 = 0x55445F4554554F52;
                                    unint64_t v50 = 0xEE004E4F49544152;
                                    goto LABEL_241;
                                  }
                                  if (v52 || v49 != 0xA000000000000000 || v48 != 21 || v61)
                                  {
                                    if (!v52 && v49 == 0xA000000000000000 && v48 == 22 && !v61)
                                    {
                                      unint64_t v51 = 0x5F524553555F4E49;
                                      unint64_t v50 = 0xEF5952415242494CLL;
                                      goto LABEL_241;
                                    }
                                    if (!v52 && v49 == 0xA000000000000000 && v48 == 23 && !v61)
                                    {
                                      unint64_t v51 = 0x544F4E5F52455355;
                                      unint64_t v50 = 0xE900000000000045;
                                      goto LABEL_241;
                                    }
                                    if (v52 || v49 != 0xA000000000000000 || v48 != 24 || v61)
                                    {
                                      if (!v52 && v49 == 0xA000000000000000 && v48 == 25 && !v61)
                                      {
                                        uint64_t v63 = "HIKING_DIFFICULTY";
                                        goto LABEL_240;
                                      }
                                      if (v52 || v49 != 0xA000000000000000 || v48 != 26 || v61)
                                      {
                                        if (v52 || v49 != 0xA000000000000000 || v48 != 27 || v61)
                                        {
                                          if (v52 || v49 != 0xA000000000000000 || v48 != 28 || v61)
                                          {
                                            if (v52 || v49 != 0xA000000000000000 || v48 != 29 || v61)
                                            {
                                              if (v52 || v49 != 0xA000000000000000 || v48 != 30 || v61)
                                              {
                                                BOOL v88 = v52 == 0;
                                                BOOL v91 = v48 == 31 && v61 == 0 && v49 == 0xA000000000000000;
                                                if (v88 && v91) {
                                                  unint64_t v51 = 0xD00000000000001FLL;
                                                }
                                                else {
                                                  unint64_t v51 = 0x5F53534552444441;
                                                }
                                                if (v88 && v91) {
                                                  unint64_t v50 = 0x8000000100F79B50;
                                                }
                                                else {
                                                  unint64_t v50 = 0xED00004C4542414CLL;
                                                }
                                                goto LABEL_241;
                                              }
                                              unint64_t v51 = 0xD00000000000001DLL;
                                              unint64_t v62 = "MAPS_SUGGESTIONS_ENTRY_SUBTITLE";
                                            }
                                            else
                                            {
                                              unint64_t v62 = "DROPPED_PIN_SOURCE_OR_ADDRESS";
                                            }
                                          }
                                          else
                                          {
                                            unint64_t v51 = 0xD000000000000028;
                                            unint64_t v62 = "DROPPED_PIN_NAME";
                                          }
                                        }
                                        else
                                        {
                                          unint64_t v51 = 0xD000000000000021;
                                          unint64_t v62 = "ACT_FROM_MESSAGES_SOURCE";
                                        }
                                      }
                                      else
                                      {
                                        unint64_t v51 = 0xD000000000000023;
                                        unint64_t v62 = "TEM_PLACE_ADDRESS";
                                      }
                                    }
                                    else
                                    {
                                      unint64_t v51 = 0xD00000000000001ALL;
                                      unint64_t v62 = "VENUE_CONTENT_ITEM";
                                    }
                                  }
                                  else
                                  {
                                    unint64_t v51 = 0xD000000000000019;
                                    unint64_t v62 = "";
                                  }
                                }
                                else
                                {
                                  unint64_t v51 = 0xD000000000000013;
                                  unint64_t v62 = "ROUTE_ELEVATION_GAIN_LOSS";
                                }
                              }
                              else
                              {
                                unint64_t v51 = 0xD000000000000011;
                                unint64_t v62 = "HIKING_TRAIL_LENGTH";
                              }
                            }
                            else
                            {
                              unint64_t v51 = 0xD000000000000022;
                              unint64_t v62 = "EV_CHARGERS_NUMBER";
                            }
                          }
                          else
                          {
                            unint64_t v51 = 0xD000000000000015;
                            unint64_t v62 = "TEM_LOCATION_STRING";
                          }
                        }
                        else
                        {
                          unint64_t v51 = 0xD000000000000019;
                          unint64_t v62 = "PUBLISHER_DESCRIPTION";
                        }
                      }
                      else
                      {
                        unint64_t v62 = "NUMER_OF_PLACES_IN_GUIDES";
                      }
                    }
                    else
                    {
                      unint64_t v51 = 0xD000000000000022;
                      unint64_t v62 = "HIGHLIGHT_EXTREA";
                    }
                  }
                  else
                  {
                    unint64_t v51 = 0xD000000000000015;
                    unint64_t v62 = "_TIME_AVAILABILITY";
                  }
                  unint64_t v50 = (unint64_t)v62 | 0x8000000000000000;
                }
                else
                {
                  unint64_t v50 = 0xE500000000000000;
                  unint64_t v51 = 0x4543495250;
                }
              }
              else
              {
                unint64_t v51 = 0x59524F4745544143;
              }
            }
            else
            {
              unint64_t v50 = 0xE400000000000000;
              unint64_t v51 = 1162690894;
            }
LABEL_241:
            unint64_t v103 = v51;
            unint64_t v104 = v50;
            uint64_t v64 = (void *)v20[16];
            if (v64)
            {
              swift_retain();
              while (2)
              {
                uint64_t v70 = v64[2];
                unint64_t v71 = v64[13];
                unint64_t v65 = 0xE800000000000000;
                uint64_t v66 = 0x45434E4154534944;
                switch(v71 >> 60)
                {
                  case 1uLL:
                    goto LABEL_244;
                  case 2uLL:
                    unint64_t v65 = 0xE500000000000000;
                    uint64_t v66 = 0x5352554F48;
                    goto LABEL_244;
                  case 3uLL:
                    unint64_t v65 = 0xE700000000000000;
                    uint64_t v72 = 0x534552444441;
                    goto LABEL_250;
                  case 4uLL:
                    unint64_t v65 = 0xE700000000000000;
                    uint64_t v72 = 0x474E49544152;
LABEL_250:
                    uint64_t v66 = v72 & 0xFFFFFFFFFFFFLL | 0x53000000000000;
                    goto LABEL_244;
                  case 5uLL:
                    uint64_t v66 = 0x5F44455441525543;
                    unint64_t v65 = 0xEE00534544495547;
                    goto LABEL_244;
                  case 6uLL:
                    unint64_t v65 = 0xE600000000000000;
                    uint64_t v66 = 0x474E49525453;
                    goto LABEL_244;
                  case 7uLL:
                    uint64_t v66 = 0x4F5F524556524553;
                    unint64_t v65 = 0xEF45444952524556;
                    goto LABEL_244;
                  case 8uLL:
                    uint64_t v66 = 0x4D4E4941544E4F43;
                    unint64_t v65 = 0xEB00000000544E45;
                    goto LABEL_244;
                  case 9uLL:
                    unint64_t v65 = 0xE700000000000000;
                    uint64_t v66 = 0x44494F54434146;
                    goto LABEL_244;
                  case 0xAuLL:
                    uint64_t v73 = v64[14];
                    uint64_t v74 = v64[5];
                    uint64_t v76 = v64[3];
                    uint64_t v75 = v64[4];
                    if (v71 == 0xA000000000000000)
                    {
                      v77.i64[0] = v64[9];
                      v77.i64[1] = v64[8];
                      v78.i64[0] = v64[14];
                      v78.i64[1] = v64[12];
                      v79.i64[0] = v64[7];
                      v79.i64[1] = v64[6];
                      v80.i64[0] = v64[11];
                      v80.i64[1] = v64[10];
                      int8x16_t v81 = vorrq_s8(vorrq_s8(v78, v77), vorrq_s8(v80, v79));
                      if (!(v76 | *(void *)&vorr_s8(*(int8x8_t *)v81.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v81, v81, 8uLL)) | v75 | v74 | v70))
                      {
                        unint64_t v65 = 0xE400000000000000;
                        uint64_t v66 = 1162690894;
                        goto LABEL_244;
                      }
                    }
                    uint64_t v82 = v64[11] | v64[12] | v64[10] | v64[9] | v64[8] | v64[7] | v64[6] | v74 | v75 | v76;
                    if (!v73 && v71 == 0xA000000000000000 && v70 == 1 && !v82)
                    {
                      uint64_t v66 = 0x59524F4745544143;
                      goto LABEL_244;
                    }
                    if (!v73 && v71 == 0xA000000000000000 && v70 == 2 && !v82)
                    {
                      unint64_t v65 = 0xE500000000000000;
                      uint64_t v66 = 0x4543495250;
                      goto LABEL_244;
                    }
                    if (!v73 && v71 == 0xA000000000000000 && v70 == 3)
                    {
                      uint64_t v66 = 0x5F5449534E415254;
                      unint64_t v65 = 0xEF53444C45494853;
                      if (!v82) {
                        goto LABEL_244;
                      }
                    }
                    if (!v73 && v71 == 0xA000000000000000 && v70 == 4 && !v82)
                    {
                      uint64_t v66 = 0xD000000000000015;
                      unint64_t v65 = 0x8000000100F79D20;
                      goto LABEL_244;
                    }
                    if (!v73 && v71 == 0xA000000000000000 && v70 == 5 && !v82)
                    {
                      uint64_t v83 = "ED_RECOMMENDATIONS";
LABEL_282:
                      unint64_t v65 = (unint64_t)v83 | 0x8000000000000000;
                      uint64_t v66 = 0xD000000000000012;
                      goto LABEL_244;
                    }
                    if (v73 || v71 != 0xA000000000000000 || v70 != 6 || v82)
                    {
                      if (v73 || v71 != 0xA000000000000000 || v70 != 7 || v82)
                      {
                        if (v73
                          || v71 != 0xA000000000000000
                          || v70 != 8
                          || (v66 = 0x4847494C48474948, unint64_t v65 = 0xEE004E49414D5F54, v82))
                        {
                          uint64_t v66 = 0xD000000000000010;
                          if (v73 || v71 != 0xA000000000000000 || v70 != 9 || v82)
                          {
                            if (v73 || v71 != 0xA000000000000000 || v70 != 10 || v82)
                            {
                              if (v73 || v71 != 0xA000000000000000 || v70 != 11 || v82)
                              {
                                if (v73 || v71 != 0xA000000000000000 || v70 != 12 || v82)
                                {
                                  if (v73 || v71 != 0xA000000000000000 || v70 != 13 || v82)
                                  {
                                    if (!v73 && v71 == 0xA000000000000000 && v70 == 14 && !v82)
                                    {
                                      uint64_t v83 = "VENUE_SHORT_ADDRESS_STRING";
                                      goto LABEL_282;
                                    }
                                    if (v73 || v71 != 0xA000000000000000 || v70 != 15 || v82)
                                    {
                                      if (v73 || v71 != 0xA000000000000000 || v70 != 16 || v82)
                                      {
                                        if (v73 || v71 != 0xA000000000000000 || v70 != 17 || v82)
                                        {
                                          if (v73 || v71 != 0xA000000000000000 || v70 != 18 || v82)
                                          {
                                            if (v73 || v71 != 0xA000000000000000 || v70 != 19 || v82)
                                            {
                                              if (v73 || v71 != 0xA000000000000000 || v70 != 20 || v82)
                                              {
                                                if (v73 || v71 != 0xA000000000000000 || v70 != 21 || v82)
                                                {
                                                  if (v73 || v71 != 0xA000000000000000 || v70 != 22 || v82)
                                                  {
                                                    if (v73 || v71 != 0xA000000000000000 || v70 != 23 || v82)
                                                    {
                                                      if (v73 || v71 != 0xA000000000000000 || v70 != 24 || v82)
                                                      {
                                                        if (!v73 && v71 == 0xA000000000000000 && v70 == 25 && !v82)
                                                        {
                                                          uint64_t v83 = "HIKING_DIFFICULTY";
                                                          goto LABEL_282;
                                                        }
                                                        if (v73 || v71 != 0xA000000000000000 || v70 != 26 || v82)
                                                        {
                                                          if (v73 || v71 != 0xA000000000000000 || v70 != 27 || v82)
                                                          {
                                                            if (v73 || v71 != 0xA000000000000000 || v70 != 28 || v82)
                                                            {
                                                              if (v73
                                                                || v71 != 0xA000000000000000
                                                                || v70 != 29
                                                                || v82)
                                                              {
                                                                if (v73
                                                                  || v71 != 0xA000000000000000
                                                                  || v70 != 30
                                                                  || v82)
                                                                {
                                                                  BOOL v84 = v73 == 0;
                                                                  BOOL v87 = v70 == 31
                                                                     && v82 == 0
                                                                     && v71 == 0xA000000000000000;
                                                                  if (v84 && v87) {
                                                                    uint64_t v66 = 0xD00000000000001FLL;
                                                                  }
                                                                  else {
                                                                    uint64_t v66 = 0x5F53534552444441;
                                                                  }
                                                                  if (v84 && v87) {
                                                                    unint64_t v65 = 0x8000000100F79B50;
                                                                  }
                                                                  else {
                                                                    unint64_t v65 = 0xED00004C4542414CLL;
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  uint64_t v66 = 0xD00000000000001DLL;
                                                                  unint64_t v65 = 0x8000000100F79B70;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                unint64_t v65 = 0x8000000100F79B90;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              uint64_t v66 = 0xD000000000000028;
                                                              unint64_t v65 = 0x8000000100F79BB0;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            uint64_t v66 = 0xD000000000000021;
                                                            unint64_t v65 = 0x8000000100F79BE0;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          uint64_t v66 = 0xD000000000000023;
                                                          unint64_t v65 = 0x8000000100F79C10;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        uint64_t v66 = 0xD00000000000001ALL;
                                                        unint64_t v65 = 0x8000000100F79B10;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      uint64_t v66 = 0x544F4E5F52455355;
                                                      unint64_t v65 = 0xE900000000000045;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    uint64_t v66 = 0x5F524553555F4E49;
                                                    unint64_t v65 = 0xEF5952415242494CLL;
                                                  }
                                                }
                                                else
                                                {
                                                  uint64_t v66 = 0xD000000000000019;
                                                  unint64_t v65 = 0x8000000100F79A90;
                                                }
                                              }
                                              else
                                              {
                                                uint64_t v66 = 0x55445F4554554F52;
                                                unint64_t v65 = 0xEE004E4F49544152;
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v66 = 0x454C5F4554554F52;
                                              unint64_t v65 = 0xEC0000004854474ELL;
                                            }
                                          }
                                          else
                                          {
                                            uint64_t v66 = 0x59545F4554554F52;
                                            unint64_t v65 = 0xEA00000000004550;
                                          }
                                        }
                                        else
                                        {
                                          uint64_t v66 = 0x435F534F544F4850;
                                          unint64_t v65 = 0xEF4C4553554F5241;
                                        }
                                      }
                                      else
                                      {
                                        uint64_t v66 = 0xD000000000000013;
                                        unint64_t v65 = 0x8000000100F79AB0;
                                      }
                                    }
                                    else
                                    {
                                      uint64_t v66 = 0xD000000000000011;
                                      unint64_t v65 = 0x8000000100F79AD0;
                                    }
                                  }
                                  else
                                  {
                                    uint64_t v66 = 0xD000000000000022;
                                    unint64_t v65 = 0x8000000100F79CF0;
                                  }
                                }
                                else
                                {
                                  uint64_t v66 = 0xD000000000000015;
                                  unint64_t v65 = 0x8000000100F79C40;
                                }
                              }
                              else
                              {
                                uint64_t v66 = 0xD000000000000019;
                                unint64_t v65 = 0x8000000100F79C60;
                              }
                            }
                            else
                            {
                              uint64_t v66 = 0x454853494C425550;
                              unint64_t v65 = 0xEE00454D414E5F52;
                            }
                          }
                          else
                          {
                            unint64_t v65 = 0x8000000100F79C80;
                          }
                        }
                      }
                      else
                      {
                        unint64_t v65 = 0xE600000000000000;
                        uint64_t v66 = 0x544E45434552;
                      }
                    }
                    else
                    {
                      uint64_t v66 = 0xD000000000000022;
                      unint64_t v65 = 0x8000000100F79CA0;
                    }
LABEL_244:
                    unint64_t v67 = v65;
                    String.append(_:)(*(Swift::String *)&v66);
                    swift_bridgeObjectRelease();
                    v68._uint64_t countAndFlagsBits = 540945696;
                    v68._uint64_t object = (void *)0xE400000000000000;
                    String.append(_:)(v68);
                    swift_bridgeObjectRelease();
                    uint64_t v69 = (void *)v64[16];
                    swift_retain();
                    swift_release();
                    uint64_t v64 = v69;
                    if (v69) {
                      continue;
                    }
                    swift_release();
                    unint64_t v51 = v103;
                    unint64_t v50 = v104;
                    break;
                  default:
                    unint64_t v65 = 0xEE00454D414E5F59;
                    uint64_t v66 = 0x5241444E4F434553;
                    goto LABEL_244;
                }
                break;
              }
            }
            else
            {
              swift_release();
            }
            unint64_t v105 = v51;
            unint64_t v106 = v50;
            if (v14 == v13)
            {
LABEL_3:
              swift_bridgeObjectRelease_n();
              unint64_t v5 = v105;
              unint64_t v6 = v106;
              uint64_t v1 = v93;
              unint64_t v3 = v96;
              goto LABEL_4;
            }
            break;
          default:
            unint64_t v50 = 0xEE00454D414E5F59;
            unint64_t v51 = 0x5241444E4F434553;
            goto LABEL_241;
        }
      }
    }
    uint64_t v13 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_8;
    }
LABEL_566:
    swift_bridgeObjectRelease_n();
    unint64_t v5 = 0;
    unint64_t v6 = 0xE000000000000000;
LABEL_4:
    ++v3;
    unint64_t v7 = v6;
    String.append(_:)(*(Swift::String *)&v5);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 93;
    v8._uint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v8);
    swift_bridgeObjectRetain();
    v9._uint64_t countAndFlagsBits = 0x656E694C5BLL;
    v9._uint64_t object = (void *)0xE500000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v98;
    unint64_t v4 = v97;
  }
  while (v3 != v95);
  swift_bridgeObjectRelease();
  return v2;
}

id sub_1001BBDD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceSummaryTemplateEntry();
  [super dealloc];
}

uint64_t type metadata accessor for PlaceSummaryTemplateEntry()
{
  return self;
}

uint64_t sub_1001BBE84()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (v4 < *(void *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_3;
      }
    }
    unint64_t v7 = v5 & 0xC000000000000001;
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      swift_retain();
    }
    char v8 = sub_1002612B8(10);
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_30;
    }
    if (v6 != 1)
    {
      if (v7)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_39;
        }
        swift_retain();
      }
      char v9 = sub_1002612B8(10);
      uint64_t result = swift_release();
      if (v9)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v13 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        return v13;
      }
      uint64_t v10 = 0;
      while (v6 - 2 != v10)
      {
        unint64_t v11 = v10 + 2;
        if (v7)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (__OFADD__(v11, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v11 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t result = swift_retain();
          if (__OFADD__(v11, 1))
          {
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        char v12 = sub_1002612B8(10);
        uint64_t result = swift_release();
        ++v10;
        if (v12) {
          goto LABEL_30;
        }
      }
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      uint64_t v13 = 0;
      goto LABEL_31;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001BC104()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (v4 < *(void *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_3;
      }
    }
    unint64_t v7 = v5 & 0xC000000000000001;
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      swift_retain();
    }
    char v8 = sub_1002612B8(9);
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_30;
    }
    if (v6 != 1)
    {
      if (v7)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_39;
        }
        swift_retain();
      }
      char v9 = sub_1002612B8(9);
      uint64_t result = swift_release();
      if (v9)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v13 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        return v13;
      }
      uint64_t v10 = 0;
      while (v6 - 2 != v10)
      {
        unint64_t v11 = v10 + 2;
        if (v7)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (__OFADD__(v11, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v11 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t result = swift_retain();
          if (__OFADD__(v11, 1))
          {
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        char v12 = sub_1002612B8(9);
        uint64_t result = swift_release();
        ++v10;
        if (v12) {
          goto LABEL_30;
        }
      }
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      uint64_t v13 = 0;
      goto LABEL_31;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001BC384()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (v4 < *(void *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_3;
      }
    }
    unint64_t v7 = v5 & 0xC000000000000001;
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      swift_retain();
    }
    char v8 = sub_1002612B8(16);
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_30;
    }
    if (v6 != 1)
    {
      if (v7)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_39;
        }
        swift_retain();
      }
      char v9 = sub_1002612B8(16);
      uint64_t result = swift_release();
      if (v9)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v13 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        return v13;
      }
      uint64_t v10 = 0;
      while (v6 - 2 != v10)
      {
        unint64_t v11 = v10 + 2;
        if (v7)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (__OFADD__(v11, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v11 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t result = swift_retain();
          if (__OFADD__(v11, 1))
          {
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        char v12 = sub_1002612B8(16);
        uint64_t result = swift_release();
        ++v10;
        if (v12) {
          goto LABEL_30;
        }
      }
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      uint64_t v13 = 0;
      goto LABEL_31;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001BC604()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (v4 < *(void *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_3;
      }
    }
    unint64_t v7 = v5 & 0xC000000000000001;
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      swift_retain();
    }
    char v8 = sub_1002612B8(8);
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_30;
    }
    if (v6 != 1)
    {
      if (v7)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_39;
        }
        swift_retain();
      }
      char v9 = sub_1002612B8(8);
      uint64_t result = swift_release();
      if (v9)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v13 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        return v13;
      }
      uint64_t v10 = 0;
      while (v6 - 2 != v10)
      {
        unint64_t v11 = v10 + 2;
        if (v7)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (__OFADD__(v11, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v11 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t result = swift_retain();
          if (__OFADD__(v11, 1))
          {
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        char v12 = sub_1002612B8(8);
        uint64_t result = swift_release();
        ++v10;
        if (v12) {
          goto LABEL_30;
        }
      }
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      uint64_t v13 = 0;
      goto LABEL_31;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001BC884()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (v4 < *(void *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v6) {
        goto LABEL_3;
      }
    }
    unint64_t v7 = v5 & 0xC000000000000001;
    if ((v5 & 0xC000000000000001) != 0)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_38;
      }
      swift_retain();
    }
    char v8 = sub_1002612B8(37);
    uint64_t result = swift_release();
    if (v8) {
      goto LABEL_30;
    }
    if (v6 != 1)
    {
      if (v7)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
          goto LABEL_39;
        }
        swift_retain();
      }
      char v9 = sub_1002612B8(37);
      uint64_t result = swift_release();
      if (v9)
      {
LABEL_30:
        swift_bridgeObjectRelease();
        uint64_t v13 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        return v13;
      }
      uint64_t v10 = 0;
      while (v6 - 2 != v10)
      {
        unint64_t v11 = v10 + 2;
        if (v7)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (__OFADD__(v11, 1)) {
            goto LABEL_35;
          }
        }
        else
        {
          if (v11 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_36;
          }
          uint64_t result = swift_retain();
          if (__OFADD__(v11, 1))
          {
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
        }
        char v12 = sub_1002612B8(37);
        uint64_t result = swift_release();
        ++v10;
        if (v12) {
          goto LABEL_30;
        }
      }
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      uint64_t v13 = 0;
      goto LABEL_31;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1001BCB04()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  while (1)
  {
    if (v4 >= *(void *)(v1 + 16)) {
      goto LABEL_23;
    }
    unint64_t v5 = *(void *)(v1 + 32 + 16 * v4);
    if (!(v5 >> 62))
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6) {
        break;
      }
      goto LABEL_3;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      break;
    }
LABEL_3:
    ++v4;
    uint64_t result = swift_bridgeObjectRelease();
    if (v4 == v2)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v7 = 4;
  while (1)
  {
    uint64_t v8 = v7 - 4;
    if ((v5 & 0xC000000000000001) == 0) {
      break;
    }
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v9 = v7 - 3;
    if (__OFADD__(v8, 1)) {
      goto LABEL_22;
    }
LABEL_13:
    sub_10026114C(v11);
    swift_release();
    sub_1001BDBE8((uint64_t)v11, (uint64_t)v12);
    if (v12[1])
    {
      uint64_t v10 = v12[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1001BDC50((uint64_t)v11);
      return v10;
    }
    ++v7;
    if (v9 == v6) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_retain();
  uint64_t v9 = v7 - 3;
  if (!__OFADD__(v8, 1)) {
    goto LABEL_13;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1001BCD28(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = OBJC_IVAR____TtC4Maps20PlaceSummaryMetadata_serverOverrides;
  uint64_t v8 = v3 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v10 = 0;
  uint64_t v29 = a2;
  uint64_t v30 = v3;
  uint64_t v27 = v4;
  Swift::String v28 = a1;
  uint64_t v25 = v3 + 32;
  uint64_t v26 = v7;
  while (v10 < *(void *)(v3 + 16))
  {
    unint64_t v11 = *(void *)(v8 + 16 * v10);
    unint64_t v31 = v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_6:
        unint64_t v13 = 0;
        unint64_t v39 = v11 & 0xC000000000000001;
        unint64_t v37 = v11 + 32;
        uint64_t v38 = v11 & 0xFFFFFFFFFFFFFF8;
        while (1)
        {
LABEL_7:
          if (v39)
          {
            uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v14 = result;
            BOOL v15 = __OFADD__(v13++, 1);
            if (v15) {
              goto LABEL_43;
            }
          }
          else
          {
            if (v13 >= *(void *)(v38 + 16)) {
              goto LABEL_44;
            }
            uint64_t v14 = *(void *)(v37 + 8 * v13);
            uint64_t result = swift_retain();
            BOOL v15 = __OFADD__(v13++, 1);
            if (v15)
            {
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
              goto LABEL_45;
            }
          }
          if (sub_1002612B8(15))
          {
            uint64_t v40 = v14;
            uint64_t v16 = *(void *)(a2 + v7);
            if (v16)
            {
              if (a1)
              {
                uint64_t v33 = *(void *)(v16 + 16);
                if (v33) {
                  break;
                }
              }
            }
          }
          uint64_t result = swift_release();
          if (v13 == v12) {
            goto LABEL_36;
          }
        }
        uint64_t v36 = v16 + 32;
        swift_bridgeObjectRetain();
        uint64_t result = a1;
        uint64_t v17 = (void *)result;
        unint64_t v18 = 0;
        uint64_t v34 = v16;
        unint64_t v35 = v11;
        uint64_t v32 = v12;
        while (v18 < *(void *)(v16 + 16))
        {
          unint64_t v19 = *(void *)(v36 + 16 * v18);
          if (v19 >> 62)
          {
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v20)
            {
LABEL_23:
              uint64_t v21 = 4;
              while (1)
              {
                uint64_t result = (v19 & 0xC000000000000001) != 0
                       ? specialized _ArrayBuffer._getElementSlowPath(_:)()
                       : (uint64_t)*(id *)(v19 + 8 * v21);
                uint64_t v22 = (void *)result;
                uint64_t v23 = v21 - 3;
                if (__OFADD__(v21 - 4, 1)) {
                  break;
                }
                unsigned __int8 v24 = [(id)result isEqualToGEOMapItemIdentifier:v17];

                if (v24)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();

                  return 1;
                }
                ++v21;
                if (v23 == v20) {
                  goto LABEL_19;
                }
              }
              __break(1u);
              goto LABEL_43;
            }
          }
          else
          {
            uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            if (v20) {
              goto LABEL_23;
            }
          }
LABEL_19:
          ++v18;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v12 = v32;
          uint64_t v16 = v34;
          unint64_t v11 = v35;
          uint64_t result = v40;
          if (v18 == v33)
          {
            swift_release();

            uint64_t result = swift_bridgeObjectRelease();
            a2 = v29;
            uint64_t v3 = v30;
            uint64_t v4 = v27;
            a1 = v28;
            uint64_t v8 = v25;
            uint64_t v7 = v26;
            if (v13 != v32) {
              goto LABEL_7;
            }
            goto LABEL_36;
          }
        }
LABEL_45:
        __break(1u);
        break;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_6;
      }
    }
LABEL_36:
    unint64_t v10 = v31 + 1;
    uint64_t result = swift_bridgeObjectRelease();
    if (v31 + 1 == v4)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryTemplateEntry.AccessoryEntity(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7)
  {
    unsigned int v2 = a2 + 9;
    if (a2 + 9 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 9;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1001BD1B8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 7;
  if (v8 <= 7) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryTemplateEntry.AccessoryEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 9;
  if (a3 + 9 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF7) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v7 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1001BD2A0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_1001BD2C8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001BD2E4(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryTemplateEntry.AccessoryEntity()
{
  return &type metadata for PlaceSummaryTemplateEntry.AccessoryEntity;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryTemplateEntry.PlatformType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlaceSummaryTemplateEntry.PlatformType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD468);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryTemplateEntry.PlatformType()
{
  return &type metadata for PlaceSummaryTemplateEntry.PlatformType;
}

unint64_t sub_1001BD4A4()
{
  unint64_t result = qword_1015D3608;
  if (!qword_1015D3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3608);
  }
  return result;
}

id sub_1001BD4F8(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = a1;
  uint64_t v9 = (objc_class *)type metadata accessor for PlaceSummaryTemplateEntry();
  unint64_t v10 = objc_allocWithZone(v9);
  if (v8 && *(void *)(a2 + 16))
  {
    v10[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_platformType] = a1;
    *(void *)&v10[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_lines] = a2;
    *(void *)&v10[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_trailingEntities] = a3;
    *(void *)&v10[OBJC_IVAR____TtC4Maps25PlaceSummaryTemplateEntry_leadingEntities] = a4;
    v12.receiver = v10;
    v12.super_class = v9;
    return [super init];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return 0;
  }
}

id sub_1001BD5DC(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v9 = (char *)&v38 - v8;
  unsigned int v10 = [a1 platformType];
  if (v10 <= 3) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = 0;
  }
  BOOL v12 = (v10 & 0xF) == 0 || v10 > 3;
  id result = [a1 lines];
  if (!result)
  {
LABEL_44:
    __break(1u);
    return result;
  }
  BOOL v43 = v12;
  unsigned int v42 = v11;
  id v14 = result;
  NSArray.makeIterator()();

  sub_10011ECA8();
  dispatch thunk of IteratorProtocol.next()();
  if (v61)
  {
    id v39 = v14;
    int8x16_t v41 = a1;
    BOOL v47 = (char *)&type metadata for Any + 8;
    uint64_t v45 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v40 = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    unint64_t v50 = _swiftEmptyArrayStorage;
    unint64_t v46 = v9;
    while (1)
    {
      sub_1000EFD84(&v60, &v59);
      sub_1000F2354((uint64_t)&v59, (uint64_t)v58);
      sub_100100830(0, &qword_1015D3610);
      swift_dynamicCast();
      id v15 = v57;
      id result = [v57 units];
      if (!result) {
        break;
      }
      unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
      id v16 = result;
      NSArray.makeIterator()();
      id v49 = v16;

      while (1)
      {
        dispatch thunk of IteratorProtocol.next()();
        if (!v55) {
          break;
        }
        sub_1000EFD84(&v54, v53);
        type metadata accessor for PlaceSummaryUnit();
        sub_1000F2354((uint64_t)v53, (uint64_t)v52);
        sub_100100830(0, &qword_1015D3618);
        swift_dynamicCast();
        id v17 = sub_100261320(v51);
        sub_1000FF22C((uint64_t)v53);
        if (v17)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      unint64_t v18 = *v45;
      (*v45)(v5, v2);
      unint64_t v48 = v56;

      unsigned __int8 v19 = [v15 isDynamicContextLine];
      unsigned __int8 v20 = [v15 shouldOmitSpacingDelimiter];

      sub_1000FF22C((uint64_t)&v59);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      BOOL v44 = v18;
      if (isUniquelyReferenced_nonNull_native) {
        uint64_t v22 = v50;
      }
      else {
        uint64_t v22 = sub_1001CF41C(0, v50[2] + 1, 1, v50);
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1) {
        uint64_t v22 = sub_1001CF41C((void *)(v23 > 1), v24 + 1, 1, v22);
      }
      void v22[2] = v24 + 1;
      unint64_t v50 = v22;
      uint64_t v25 = &v22[2 * v24];
      uint64_t v25[4] = v48;
      *((unsigned char *)v25 + 40) = v19;
      *((unsigned char *)v25 + 41) = v20;
      uint64_t v26 = v46;
      dispatch thunk of IteratorProtocol.next()();
      if (!v61)
      {
        a1 = v41;
        id v14 = v39;
        v44(v26, v2);
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  unint64_t v50 = _swiftEmptyArrayStorage;
  v27(v9, v2);
LABEL_25:

  Swift::String v28 = (char *)[a1 trailingEntityTypeOrdersCount];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = 0;
    unint64_t v31 = _swiftEmptyArrayStorage;
    do
    {
      unsigned int v32 = [a1 trailingEntityTypeOrderAtIndex:v30] - 1;
      if (v32 < 0xB && ((0x7BFu >> v32) & 1) != 0)
      {
        char v33 = byte_100F62CB2[v32];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = sub_1001CF320(0, v31[2] + 1, 1, v31);
        }
        unint64_t v35 = v31[2];
        unint64_t v34 = v31[3];
        if (v35 >= v34 >> 1) {
          unint64_t v31 = sub_1001CF320((void *)(v34 > 1), v35 + 1, 1, v31);
        }
        v31[2] = v35 + 1;
        *((unsigned char *)v31 + v35 + 32) = v33;
      }
      ++v30;
    }
    while (v29 != v30);
  }
  else
  {
    unint64_t v31 = _swiftEmptyArrayStorage;
  }
  if (v43 || (uint64_t v36 = v50, !v50[2]))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    if (!v31[2])
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = v50;
      unint64_t v31 = 0;
    }
    id v37 = sub_1001BD4F8(v42, (uint64_t)v36, (uint64_t)v31, 0);
  }
  return v37;
}

uint64_t sub_1001BDBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D3620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001BDC50(uint64_t a1)
{
  return a1;
}

void sub_1001BDCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

BOOL InfoCardButtonVisibility.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

uint64_t InfoCardButtonConfiguration.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type);
}

uint64_t InfoCardButtonConfiguration.shouldBlur.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_shouldBlur);
}

void *InfoCardButtonConfiguration.tintColor.getter()
{
  unsigned int v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_tintColor);
  id v2 = v1;
  return v1;
}

uint64_t InfoCardButtonConfiguration.visibility.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_visibility);
}

uint64_t InfoCardButtonConfiguration.isEqual(_:)(uint64_t a1)
{
  swift_getObjectType();
  sub_10011D518(a1, (uint64_t)v12);
  if (v13)
  {
    if (swift_dynamicCast())
    {
      if (*(void *)(v1 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type) == *(void *)&v11[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type]
        && *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_shouldBlur) == v11[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_shouldBlur])
      {
        uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_tintColor);
        uint64_t v6 = *(void **)&v11[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_tintColor];
        if (!v5)
        {
          id v10 = v6;

          if (!v6)
          {
            char v3 = 1;
            return v3 & 1;
          }

          goto LABEL_7;
        }
        if (v6)
        {
          sub_1001BE0B0();
          id v7 = v5;
          id v8 = v6;
          id v9 = v7;
          char v3 = static NSObject.== infix(_:_:)();

          return v3 & 1;
        }
      }
    }
  }
  else
  {
    sub_1001189D4((uint64_t)v12);
  }
LABEL_7:
  char v3 = 0;
  return v3 & 1;
}

void InfoCardButtonConfiguration.init()()
{
}

unint64_t sub_1001BE0B0()
{
  unint64_t result = qword_1015CEFF0;
  if (!qword_1015CEFF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015CEFF0);
  }
  return result;
}

unint64_t sub_1001BE0F4()
{
  unint64_t result = qword_1015D3648;
  if (!qword_1015D3648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3648);
  }
  return result;
}

ValueMetadata *type metadata accessor for InfoCardButtonVisibility()
{
  return &type metadata for InfoCardButtonVisibility;
}

uint64_t type metadata accessor for InfoCardButtonConfiguration()
{
  return self;
}

void sub_1001BE17C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(_DWORD *)(v0 + 16) & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *(_DWORD *)(v0 + 16);
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(void *)(v0 + 40));
  Hasher._combine(_:)(*(void *)(v0 + 48));
  Hasher._combine(_:)(*(void *)(v0 + 56));
  Hasher._combine(_:)(*(unsigned char *)(v0 + 64) & 1);
}

Swift::Int sub_1001BE224()
{
  return Hasher._finalize()();
}

Swift::Int sub_1001BE268()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BE2A4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  void v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1001C0B3C((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_1001BE300()
{
  v1[17] = v0;
  uint64_t v2 = type metadata accessor for Date();
  v1[18] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[19] = v3;
  v1[20] = *(void *)(v3 + 64);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return _swift_task_switch(sub_1001BE3D8, 0, 0);
}

id sub_1001BE3D8()
{
  uint64_t v1 = v0[17];
  swift_beginAccess();
  *(void *)(v1 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  Date.init()();
  id result = [self sharedManager];
  id v15 = result;
  if (result)
  {
    uint64_t v3 = v0[21];
    uint64_t v14 = v0[22];
    uint64_t v5 = v0[19];
    uint64_t v4 = v0[20];
    uint64_t v7 = v0[17];
    uint64_t v6 = v0[18];
    (*(void (**)(uint64_t))(v5 + 16))(v3);
    unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v9 = (v4 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v10 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v8, v3, v6);
    *(void *)(v10 + v9) = v7;
    v0[6] = sub_1001C0EB0;
    v0[7] = v10;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1001BEB54;
    v0[5] = &unk_1012DC5D0;
    unsigned int v11 = _Block_copy(v0 + 2);
    swift_retain();
    swift_release();
    v0[12] = sub_1001C0FA4;
    v0[13] = v7;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256;
    v0[10] = sub_10008C380;
    v0[11] = &unk_1012DC5F8;
    BOOL v12 = _Block_copy(v0 + 8);
    swift_retain();
    swift_release();
    [v15 showInflightUploadsWithVisitorBlock:v11 completion:v12];
    _Block_release(v12);
    _Block_release(v11);

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return (id)v13();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BE680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  *(void *)&double v17 = __chkstk_darwin(v16 - 8).n128_u64[0];
  unsigned __int8 v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((int)a4)
  {
    case 0:
      unsigned __int8 v20 = @"UNSPECIFIED";
      goto LABEL_22;
    case 1:
      unsigned __int8 v20 = @"COHORT";
      goto LABEL_22;
    case 2:
      unsigned __int8 v20 = @"15MO";
      goto LABEL_22;
    case 3:
      unsigned __int8 v20 = @"LONG";
      goto LABEL_22;
    case 4:
      unsigned __int8 v20 = @"LONG_APPID";
      goto LABEL_22;
    case 5:
      unsigned __int8 v20 = @"SHORT";
      goto LABEL_22;
    case 6:
      unsigned __int8 v20 = @"SHORT_NAV";
      goto LABEL_22;
    case 7:
      unsigned __int8 v20 = @"NO";
      goto LABEL_22;
    case 8:
      unsigned __int8 v20 = @"NO_WITH_TIME";
      goto LABEL_22;
    case 9:
      unsigned __int8 v20 = @"NAV_TRACE";
      goto LABEL_22;
    case 10:
      unsigned __int8 v20 = @"REALTIME_TRAFFIC";
      goto LABEL_22;
    case 11:
      unsigned __int8 v20 = @"BATCH_TRAFFIC";
      goto LABEL_22;
    case 12:
      unsigned __int8 v20 = @"WIFI_PROBE";
      goto LABEL_22;
    case 13:
      unsigned __int8 v20 = @"PRESSURE_DATA";
      goto LABEL_22;
    case 14:
      unsigned __int8 v20 = @"CURATED_COLLECTION";
      goto LABEL_22;
    case 15:
      unsigned __int8 v20 = @"LOG_DISCARD";
      goto LABEL_22;
    case 16:
      unsigned __int8 v20 = @"POI_BUSYNESS";
      goto LABEL_22;
    case 17:
      unsigned __int8 v20 = @"PREDEX_TRAINING";
      goto LABEL_22;
    case 19:
      unsigned __int8 v20 = @"STRN_HARVEST";
LABEL_22:
      uint64_t v21 = v20;
      break;
    default:
      unsigned __int8 v20 = +[NSString stringWithFormat:@"(unknown: %i)", v17, a4];
      break;
  }
  uint64_t v22 = v20;
  if (!v22)
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  unint64_t v23 = v22;
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  HIDWORD(v48) = a5;
  switch((int)a7)
  {
    case 0:
      unsigned int v27 = a8;
      Swift::String v28 = @"UNSPECIFIED";
      goto LABEL_33;
    case 1:
      unsigned int v27 = a8;
      Swift::String v28 = @"NON_DISCRETIONARY";
      goto LABEL_33;
    case 2:
      unsigned int v27 = a8;
      Swift::String v28 = @"DISCRETIONARY_EXPENSIVE_NET_AND_BATTERY";
      goto LABEL_33;
    case 3:
      unsigned int v27 = a8;
      Swift::String v28 = @"DISCRETIONARY_EXPENSIVE_NET";
      goto LABEL_33;
    case 4:
      unsigned int v27 = a8;
      Swift::String v28 = @"DISCRETIONARY_EXPENSIVE_BATTERY";
      goto LABEL_33;
    case 5:
      unsigned int v27 = a8;
      Swift::String v28 = @"DISCRETIONARY_CHEAP";
      goto LABEL_33;
    case 6:
      unsigned int v27 = a8;
      Swift::String v28 = @"NON_DISCRETIONARY_EXPENSIVE_BATTERY";
LABEL_33:
      uint64_t v29 = v28;
      break;
    default:
      unsigned int v27 = a8;
      Swift::String v28 = +[NSString stringWithFormat:@"(unknown: %i)", a7];
      break;
  }
  uint64_t v30 = v28;
  if (!v30) {
    goto LABEL_42;
  }
  unint64_t v31 = v30;
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  sub_1001C100C(a3, (uint64_t)v19);
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v19, 1, v35) == 1)
  {
LABEL_43:
    sub_1001C0FAC((uint64_t)v19);
    __break(1u);
    JUMPOUT(0x1001BEAE8);
  }
  Date.timeIntervalSince(_:)();
  double v38 = v37;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v35);
  id v39 = (void *)(a10 + 16);
  swift_beginAccess();
  uint64_t v40 = *(void **)(a10 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a10 + 16) = v40;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v40 = sub_1001D04C0(0, v40[2] + 1, 1, v40);
    void *v39 = v40;
  }
  unint64_t v43 = v40[2];
  unint64_t v42 = v40[3];
  if (v43 >= v42 >> 1)
  {
    uint64_t v40 = sub_1001D04C0((void *)(v42 > 1), v43 + 1, 1, v40);
    void *v39 = v40;
  }
  float v44 = v38;
  v40[2] = v43 + 1;
  uint64_t v45 = (float *)&v40[9 * v43];
  *((void *)v45 + 4) = v24;
  *((void *)v45 + 5) = v26;
  v45[12] = v44;
  uint64_t v46 = HIDWORD(v48);
  *((void *)v45 + 7) = v32;
  *((void *)v45 + 8) = v34;
  *((void *)v45 + 9) = v27;
  *((void *)v45 + 10) = v46;
  *((void *)v45 + 11) = a6;
  *((unsigned char *)v45 + 96) = 0;
  return swift_endAccess();
}

uint64_t sub_1001BEB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v25 = a8;
  uint64_t v15 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  __chkstk_darwin(v15 - 8);
  double v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, void))(a1 + 32);
  if (!a2)
  {
    uint64_t v19 = 0;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v22 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 1, 1, v22);
    goto LABEL_6;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  a2 = v20;
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 0, 1, v21);
LABEL_6:
  swift_retain();
  v18(v19, a2, v17, a4, a5, a6, a7, v25);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1001C0FAC((uint64_t)v17);
}

uint64_t sub_1001BECF0(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D3988);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  unint64_t v8 = &v20[-v7];
  sub_1001BF40C();
  sub_1001BF460();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1012D7B08);
  unint64_t v9 = (void **)(a1 + 16);
  swift_beginAccess();
  if (!*(void *)(*(void *)(a1 + 16) + 16))
  {
    swift_beginAccess();
    uint64_t v10 = *v9;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v9 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v10 = sub_1001D04C0(0, v10[2] + 1, 1, v10);
      *unint64_t v9 = v10;
    }
    unint64_t v13 = v10[2];
    unint64_t v12 = v10[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t v10 = sub_1001D04C0((void *)(v12 > 1), v13 + 1, 1, v10);
      *unint64_t v9 = v10;
    }
    v10[2] = v13 + 1;
    uint64_t v14 = &v10[9 * v13];
    _OWORD v14[4] = 0;
    v14[5] = 0xE000000000000000;
    *((_DWORD *)v14 + 12) = 0;
    void v14[7] = 0;
    v14[8] = 0xE000000000000000;
    v14[10] = 0;
    v14[11] = 0;
    v14[9] = 0;
    *((unsigned char *)v14 + 96) = 1;
    swift_endAccess();
  }
  v20[0] = 0;
  swift_bridgeObjectRetain();
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_snapshot;
  swift_beginAccess();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 24))(v15, v8, v2);
  uint64_t result = swift_endAccess();
  double v17 = *(void **)(a1 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_dataSource);
  if (v17)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v15, v2);
    id v18 = v17;
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    uint64_t v19 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v19(v5, v2);
    return ((uint64_t (*)(unsigned char *, uint64_t))v19)(v8, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001BEFDC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [a1 dequeueReusableCellWithIdentifier:v6];

  if (v7)
  {
    type metadata accessor for GEOAPCurrentUploadTableViewCell();
    uint64_t v8 = swift_dynamicCastClassUnconditional();
    unint64_t v9 = IndexPath.row.getter();
    swift_beginAccess();
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v10 = *(void *)(a4 + 16);
      if (v9 < *(void *)(v10 + 16))
      {
        uint64_t v11 = v10 + 72 * v9;
        uint64_t v13 = *(void *)(v11 + 32);
        uint64_t v12 = *(void *)(v11 + 40);
        int v14 = *(_DWORD *)(v11 + 48);
        uint64_t v16 = *(void *)(v11 + 56);
        uint64_t v15 = *(void *)(v11 + 64);
        long long v20 = *(_OWORD *)(v11 + 72);
        uint64_t v17 = *(void *)(v11 + 88);
        char v18 = *(unsigned char *)(v11 + 96);
        type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v13;
        *(void *)(v19 + 24) = v12;
        *(_DWORD *)(v19 + 32) = v14;
        *(void *)(v19 + 40) = v16;
        *(void *)(v19 + 48) = v15;
        *(_OWORD *)(v19 + 56) = v20;
        *(void *)(v19 + 72) = v17;
        *(unsigned char *)(v19 + 80) = v18;
        *(void *)(v8 + OBJC_IVAR____TtC4Maps31GEOAPCurrentUploadTableViewCell_cellConfig) = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1001BF140()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100105268;
  return sub_1001BE300();
}

uint64_t sub_1001BF1D0()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_snapshot;
  uint64_t v2 = sub_1000FF33C(&qword_1015D3988);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001BF294()
{
  return type metadata accessor for GEOAPCurrentUploadDataModel();
}

uint64_t type metadata accessor for GEOAPCurrentUploadDataModel()
{
  uint64_t result = qword_1015D36B0;
  if (!qword_1015D36B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001BF2E8()
{
  sub_1001BF390();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001BF390()
{
  if (!qword_1015D36C8)
  {
    sub_1001BF40C();
    sub_1001BF460();
    unint64_t v0 = type metadata accessor for NSDiffableDataSourceSnapshot();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D36C8);
    }
  }
}

unint64_t sub_1001BF40C()
{
  unint64_t result = qword_1015D36D0;
  if (!qword_1015D36D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D36D0);
  }
  return result;
}

unint64_t sub_1001BF460()
{
  unint64_t result = qword_1015D36D8;
  if (!qword_1015D36D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D36D8);
  }
  return result;
}

id sub_1001BF730()
{
  return sub_1001C069C(type metadata accessor for GEOAPCurrentUploadTableViewCell);
}

uint64_t type metadata accessor for GEOAPCurrentUploadTableViewCell()
{
  return self;
}

uint64_t sub_1001BF77C(uint64_t a1)
{
  sub_1000FF4D4(a1, (uint64_t)v6);
  sub_1000FF33C(&qword_1015D3980);
  type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration();
  if (swift_dynamicCast())
  {
    *(void *)(v1 + OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView_currentConfig) = v5;
    swift_retain();
    swift_release();
    uint64_t v3 = swift_retain();
    sub_1001BFE3C(v3);
    swift_release();
    swift_release();
  }
  return sub_1000FF22C(a1);
}

void (*sub_1001BF838(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x98uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView_currentConfig;
  v3[16] = v1;
  v3[17] = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  uint64_t v6 = type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration();
  v3[18] = v6;
  v3[3] = v6;
  v3[4] = sub_1001C0AF8(&qword_1015D3958, (void (*)(void))type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration);
  *uint64_t v3 = v5;
  swift_retain();
  return sub_1001BF8F0;
}

void sub_1001BF8F0(uint64_t *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  uint64_t v4 = *a1 + 40;
  uint64_t v5 = *a1 + 80;
  sub_1000FF4D4(*a1, v4);
  if (a2)
  {
    sub_1000FF4D4(v4, v5);
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[15];
      swift_retain();
      swift_release();
      uint64_t v6 = swift_retain();
      sub_1001BFE3C(v6);
      swift_release();
      swift_release();
    }
    sub_1000FF22C(v4);
  }
  else
  {
    sub_1000FF33C(&qword_1015D3980);
    if (swift_dynamicCast())
    {
      *(void *)(v3[16] + v3[17]) = v3[10];
      swift_retain();
      swift_release();
      uint64_t v7 = swift_retain();
      sub_1001BFE3C(v7);
      swift_release();
      swift_release();
    }
  }
  sub_1000FF22C((uint64_t)v3);

  free(v3);
}

id sub_1001BFA48()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView____lazy_storage___mainLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView____lazy_storage___mainLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView____lazy_storage___mainLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1001BFAE0()
{
  id v1 = sub_1001BFA48();
  [v0 addSubview:v1];

  uint64_t v2 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100F62DB0;
  id v4 = sub_1001BFA48();
  id v5 = [v4 leadingAnchor];

  id v6 = [v0 layoutMarginsGuide];
  id v7 = [v6 leadingAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v3 + 32) = v8;
  id v9 = sub_1001BFA48();
  id v10 = [v9 trailingAnchor];

  id v11 = [v0 layoutMarginsGuide];
  id v12 = [v11 trailingAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12];
  *(void *)(v3 + 40) = v13;
  id v14 = sub_1001BFA48();
  id v15 = [v14 topAnchor];

  id v16 = [v0 layoutMarginsGuide];
  id v17 = [v16 topAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  *(void *)(v3 + 48) = v18;
  id v19 = sub_1001BFA48();
  id v20 = [v19 bottomAnchor];

  id v21 = [v0 layoutMarginsGuide];
  id v22 = [v21 bottomAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
  *(void *)(v3 + 56) = v23;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

void sub_1001BFE3C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80))
  {
    id v1 = sub_1001BFA48();
    id v8 = String._bridgeToObjectiveC()();
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 64);
    uint64_t v2 = *(void *)(a1 + 72);
    int v4 = *(_DWORD *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v5 = *(void *)(a1 + 24);
    sub_1000FF33C((uint64_t *)&unk_1015D59C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100F5F5F0;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_10011A750();
    *(void *)(v7 + 32) = v6;
    *(void *)(v7 + 40) = v5;
    *(void *)(v7 + 96) = &type metadata for Float;
    *(void *)(v7 + 104) = &protocol witness table for Float;
    *(_DWORD *)(v7 + 72) = v4;
    *(void *)(v7 + 136) = &type metadata for Int;
    *(void *)(v7 + 144) = &protocol witness table for Int;
    *(void *)(v7 + 112) = v3;
    *(void *)(v7 + 176) = &type metadata for Int;
    *(void *)(v7 + 184) = &protocol witness table for Int;
    *(void *)(v7 + 152) = v2;
    swift_bridgeObjectRetain();
    String.init(format:_:)();
    id v1 = sub_1001BFA48();
    id v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v1 setText:v8];
}

id sub_1001BFFE0()
{
  return sub_1001C069C(type metadata accessor for GEOAPCurrentUploadTableViewCellView);
}

uint64_t type metadata accessor for GEOAPCurrentUploadTableViewCellView()
{
  return self;
}

uint64_t sub_1001C0068@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView_currentConfig);
  a1[3] = type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration();
  a1[4] = sub_1001C0AF8(&qword_1015D3958, (void (*)(void))type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration);
  *a1 = v3;

  return swift_retain();
}

void (*sub_1001C00F0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1001BF838(v2);
  return sub_1001C0148;
}

void sub_1001C0148(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1001C0194()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GEOAPCurrentUploadTableViewCellConfiguration()
{
  return self;
}

id sub_1001C0204()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (objc_class *)type metadata accessor for GEOAPCurrentUploadTableViewCellView();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView____lazy_storage___mainLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC4Maps35GEOAPCurrentUploadTableViewCellView_currentConfig] = v1;
  v6.receiver = v3;
  v6.super_class = v2;
  swift_retain();
  id v4 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001BFAE0();
  sub_1001BFE3C(v1);

  sub_1001C0AF8(&qword_1015D3960, (void (*)(void))type metadata accessor for GEOAPCurrentUploadTableViewCellView);
  return v4;
}

uint64_t sub_1001C02D4@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

id sub_1001C03F0()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (objc_class *)type metadata accessor for GEOAPCurrentUploadDebugController();
  v16.receiver = v0;
  v16.super_class = v4;
  [super viewDidLoad];
  id result = [v0 tableView];
  if (result)
  {
    objc_super v6 = result;
    type metadata accessor for GEOAPCurrentUploadTableViewCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v8];

    uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC4Maps33GEOAPCurrentUploadDebugController_dataModel];
    id result = [v0 tableView];
    if (result)
    {
      id v10 = result;
      objc_allocWithZone((Class)sub_1000FF33C(&qword_1015D3968));
      id v11 = v10;
      swift_retain();
      uint64_t v12 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
      id v13 = *(void **)(v9 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_dataSource);
      *(void *)(v9 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_dataSource) = v12;

      uint64_t v14 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
      id v15 = (void *)swift_allocObject();
      _OWORD v15[2] = 0;
      v15[3] = 0;
      _OWORD v15[4] = v9;
      swift_retain();
      sub_100042AF4((uint64_t)v3, (uint64_t)&unk_1015D3978, (uint64_t)v15);

      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1001C0684()
{
  return sub_1001C069C(type metadata accessor for GEOAPCurrentUploadDebugController);
}

id sub_1001C069C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for GEOAPCurrentUploadDebugController()
{
  return self;
}

uint64_t destroy for GEOAPInflightModelItem()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GEOAPInflightModelItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GEOAPInflightModelItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for GEOAPInflightModelItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for GEOAPInflightModelItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for GEOAPInflightModelItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GEOAPInflightModelItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GEOAPInflightModelItem()
{
  return &type metadata for GEOAPInflightModelItem;
}

unsigned char *storeEnumTagSinglePayload for GEOAPInflightModelSection(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001C0A10);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GEOAPInflightModelSection()
{
  return &type metadata for GEOAPInflightModelSection;
}

unint64_t sub_1001C0A4C()
{
  unint64_t result = qword_1015D3948;
  if (!qword_1015D3948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3948);
  }
  return result;
}

unint64_t sub_1001C0AA4()
{
  unint64_t result = qword_1015D3950;
  if (!qword_1015D3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3950);
  }
  return result;
}

uint64_t sub_1001C0AF8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C0B3C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), v6 = 0, (v5 & 1) != 0))
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16)) {
      goto LABEL_16;
    }
    BOOL v7 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
    if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0))
    {
      if (*(void *)(a1 + 40) == *(void *)(a2 + 40)
        && *(void *)(a1 + 48) == *(void *)(a2 + 48)
        && *(void *)(a1 + 56) == *(void *)(a2 + 56))
      {
        char v6 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
        return v6 & 1;
      }
LABEL_16:
      char v6 = 0;
    }
  }
  return v6 & 1;
}

void sub_1001C0C0C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1001BEFDC(a1, a2, a3, v3);
}

uint64_t sub_1001C0C14()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C0C54()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10005056C;
  unint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100105268;
  return sub_1001BE300();
}

void sub_1001C0D28()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps33GEOAPCurrentUploadDebugController_dataModel;
  type metadata accessor for GEOAPCurrentUploadDataModel();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 24) = 0;
  sub_1001BF40C();
  sub_1001BF460();
  NSDiffableDataSourceSnapshot.init()();
  *(void *)(v2 + OBJC_IVAR____TtC4Maps27GEOAPCurrentUploadDataModel_dataSource) = 0;
  *(void *)(v2 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v0[v1] = v2;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001C0E0C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001C0EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, unsigned int a8)
{
  uint64_t v17 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  return sub_1001BE680(a1, a2, a3, a4, a5, a6, a7, a8, v8 + v18, *(void *)(v8 + ((*(void *)(v17 + 64) + v18 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001C0FA4()
{
  return sub_1001BECF0(v0);
}

uint64_t sub_1001C0FAC(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001C100C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D9410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C10C0(uint64_t a1, uint64_t a2, const char *a3, uint64_t (*a4)(void))
{
  if (qword_1015CBBB0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_1000F2248(v5, (uint64_t)qword_101611448);
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, a3, v8, 2u);
    swift_slowDealloc();
  }

  return a4();
}

uint64_t type metadata accessor for TipKitController()
{
  return self;
}

uint64_t sub_1001C1224()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_101611448);
  sub_1000F2248(v0, (uint64_t)qword_101611448);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001C12A8()
{
  if (qword_1015CBBB0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1000F2248(v0, (uint64_t)qword_101611448);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Configuring Tips", v3, 2u);
    swift_slowDealloc();
  }

  return static Tips.configure(_:)();
}

unint64_t sub_1001C1900()
{
  unint64_t result = qword_1015D39B8;
  if (!qword_1015D39B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39B8);
  }
  return result;
}

uint64_t sub_1001C1954()
{
  return sub_1001010F8(&qword_1015D39C0, &qword_1015D39C8);
}

uint64_t sub_1001C1990()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  os_log_type_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611460);
  sub_1000F2248(v10, (uint64_t)qword_101611460);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1001C1C68()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611478);
  sub_1000F2248(v0, (uint64_t)qword_101611478);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001C1CCC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611490);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611490);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1001C1D84()
{
  uint64_t result = swift_getKeyPath();
  qword_1016114A8 = result;
  return result;
}

uint64_t sub_1001C1DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1001C1DD0, 0, 0);
}

uint64_t sub_1001C1DD0()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 72) = v1;
  IntentParameter.wrappedValue.getter();
  *(unsigned char *)(v0 + 145) = *(unsigned char *)(v0 + 146);
  if (qword_1015CBBD0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1016114A8;
  *(void *)(v0 + 80) = qword_1016114A8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D3AC8, &qword_1015D3AD0);
  *(void *)(v0 + 96) = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1001C1F2C;
  return AppEntity._setValue<A, B, C>(_:for:)(v0 + 145, v2, &type metadata for Bool, v4);
}

uint64_t sub_1001C1F2C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_1001C2080;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C2080()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_1016114A8;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100188C1C;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1001C215C()
{
  if (qword_1015CBBD0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1001C21BC()
{
  unint64_t result = qword_1015D39D0;
  if (!qword_1015D39D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39D0);
  }
  return result;
}

unint64_t sub_1001C2214()
{
  unint64_t result = qword_1015D39D8;
  if (!qword_1015D39D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39D8);
  }
  return result;
}

uint64_t sub_1001C2268()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001C229C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001C22EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBBC0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611478, a1);
}

uint64_t sub_1001C2324@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBBC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611490);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1001C23A0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1001C1DD0, 0, 0);
}

uint64_t sub_1001C2454@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001C32D0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001C247C()
{
  return 0xD00000000000002ALL;
}

unint64_t sub_1001C249C()
{
  unint64_t result = qword_1015D39E8;
  if (!qword_1015D39E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39E8);
  }
  return result;
}

unint64_t sub_1001C24F4()
{
  unint64_t result = qword_1015D39F0;
  if (!qword_1015D39F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39F0);
  }
  return result;
}

unint64_t sub_1001C254C()
{
  unint64_t result = qword_1015D39F8;
  if (!qword_1015D39F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D39F8);
  }
  return result;
}

unint64_t sub_1001C25A4()
{
  unint64_t result = qword_1015D3A00;
  if (!qword_1015D3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A00);
  }
  return result;
}

unint64_t sub_1001C25FC()
{
  unint64_t result = qword_1015D3A08;
  if (!qword_1015D3A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A08);
  }
  return result;
}

unint64_t sub_1001C2654()
{
  unint64_t result = qword_1015D3A10;
  if (!qword_1015D3A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A10);
  }
  return result;
}

uint64_t sub_1001C26A8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001C26C8, 0, 0);
}

uint64_t sub_1001C26C8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  LOBYTE(v2) = [v3 avoidHills];
  *uint64_t v1 = (_BYTE)v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001C2794(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1001C27B8, 0, 0);
}

uint64_t sub_1001C27B8()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  id v2 = [self standardUserDefaults];
  id v3 = [objc_allocWithZone((Class)WalkPreferences) initWithDefaults:v2];

  [v3 setAvoidHills:v1];
  [v3 synchronize];
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t sub_1001C28BC()
{
  unint64_t result = qword_1015D3A18;
  if (!qword_1015D3A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A18);
  }
  return result;
}

unint64_t sub_1001C2914()
{
  unint64_t result = qword_1015D3A20;
  if (!qword_1015D3A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A20);
  }
  return result;
}

unint64_t sub_1001C296C()
{
  unint64_t result = qword_1015D3A28;
  if (!qword_1015D3A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A28);
  }
  return result;
}

unint64_t sub_1001C29C4()
{
  unint64_t result = qword_1015D3A30;
  if (!qword_1015D3A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A30);
  }
  return result;
}

uint64_t sub_1001C2A18@<X0>(uint64_t *a1@<X8>)
{
  sub_1001C2C64();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001C2A58@<X0>(uint64_t a1@<X8>)
{
  return sub_100189984(&qword_1015CBBB8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611460, a1);
}

uint64_t sub_1001C2A90()
{
  return sub_1001010F8(&qword_1015D3A38, &qword_1015D3A40);
}

uint64_t sub_1001C2ACC(uint64_t a1)
{
  unint64_t v2 = sub_1001C249C();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001C2B1C()
{
  unint64_t result = qword_1015D3A48;
  if (!qword_1015D3A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A48);
  }
  return result;
}

uint64_t sub_1001C2B70(uint64_t a1)
{
  unint64_t v2 = sub_1001C2C64();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001C2BBC(uint64_t a1)
{
  unint64_t v2 = sub_1001C29C4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001C2C0C()
{
  unint64_t result = qword_1015D3A50;
  if (!qword_1015D3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A50);
  }
  return result;
}

unint64_t sub_1001C2C64()
{
  unint64_t result = qword_1015D3A58[0];
  if (!qword_1015D3A58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D3A58);
  }
  return result;
}

uint64_t sub_1001C2CB8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1001C2D48, 0, 0);
}

uint64_t sub_1001C2D48()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D39C8);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D3AC8, &qword_1015D3AD0);
  *uint64_t v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001C2E58(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001C24F4();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001C2F0C()
{
  unint64_t result = qword_1015D3A70;
  if (!qword_1015D3A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A70);
  }
  return result;
}

unint64_t sub_1001C2F64()
{
  unint64_t result = qword_1015D3A78[0];
  if (!qword_1015D3A78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D3A78);
  }
  return result;
}

uint64_t sub_1001C2FB8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001C24F4();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001C306C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001C24F4();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001C3120()
{
  unint64_t result = qword_1015D3A90;
  if (!qword_1015D3A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A90);
  }
  return result;
}

unint64_t sub_1001C3178()
{
  unint64_t result = qword_1015D3A98;
  if (!qword_1015D3A98)
  {
    sub_10010118C(qword_1015D3AA0);
    sub_1001C296C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3A98);
  }
  return result;
}

uint64_t sub_1001C31EC(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001C2654();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AvoidHillsInWalkingQuery()
{
  return &type metadata for AvoidHillsInWalkingQuery;
}

ValueMetadata *type metadata accessor for AvoidHillsInWalkingEntity.UpdateIntent_value()
{
  return &type metadata for AvoidHillsInWalkingEntity.UpdateIntent_value;
}

ValueMetadata *type metadata accessor for AvoidHillsInWalkingEntity()
{
  return &type metadata for AvoidHillsInWalkingEntity;
}

uint64_t sub_1001C32D0()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1650);
  __chkstk_darwin(v0 - 8);
  uint64_t v30 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for InputConnectionBehavior();
  uint64_t v2 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = v13;
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v24 = sub_1000FF33C(&qword_1015D3AD8);
  LocalizedStringResource.init(stringLiteral:)();
  Swift::String v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v28(v13, 1, 1, v14);
  uint64_t v33 = 0;
  uint64_t v16 = type metadata accessor for IntentDialog();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  id v23 = v10;
  v17(v10, 1, 1, v16);
  v17(v7, 1, 1, v16);
  unsigned int v27 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v18 = *(void (**)(void))(v2 + 104);
  uint64_t v25 = v2 + 104;
  uint64_t v26 = (void (*)(char *, void, uint64_t))v18;
  v18(v4);
  sub_1001C249C();
  id v19 = v22;
  uint64_t v24 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D1668);
  LocalizedStringResource.init(stringLiteral:)();
  v28(v19, 1, 1, v29);
  char v32 = 2;
  uint64_t v20 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v30, 1, 1, v20);
  v17(v23, 1, 1, v16);
  v26(v4, v27, v31);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v24;
}

uint64_t sub_1001C3724@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

id sub_1001C3764(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(void *)(a1 + *a3 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }

  return v3;
}

id sub_1001C3800()
{
  return sub_1001C3FF0(type metadata accessor for RAPNotificationDetailsViewModel.DescriptionInfo);
}

unint64_t sub_1001C3890@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1001C4B0C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_1001C3AB0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_rapRecord);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 rapResponse];
  NSString v3 = v2;
  if (!v2) {
    return v3;
  }
  id v4 = [v2 displayDetails];

  if (!v4) {
    return 0;
  }
  if (![v4 hasOutreachLink])
  {
LABEL_8:

    return 0;
  }
  id result = [v4 outreachLink];
  if (result)
  {
    uint64_t v6 = result;
    id v7 = [result url];

    if (v7)
    {
      NSString v3 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v3;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_1001C3BC4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

void sub_1001C3C44()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_rapRecord;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_rapRecord);
  if (v2)
  {
    id v3 = [v2 rapResponse];
    id v4 = v3;
    if (v3)
    {
      id v5 = [v3 displayDetails];

      if (v5)
      {
        if (![v5 hasOutreachLink] || (uint64_t v6 = *(void **)(v0 + v1)) == 0)
        {
LABEL_13:

          return;
        }
        id v7 = [v6 rapResponse];
        uint64_t v8 = v7;
        if (!v7)
        {

          return;
        }
        id v9 = [v7 displayDetails];

        if (v9)
        {
          id v10 = [v9 outreachLink];

          if (v10)
          {
            id v11 = [v10 text];

            if (v11)
            {
              id v12 = [v11 stringValue];

              if (v12)
              {
                static String._unconditionallyBridgeFromObjectiveC(_:)();

                return;
              }
              goto LABEL_13;
            }
LABEL_18:
            __break(1u);
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_18;
      }
    }
  }
}

id sub_1001C3DD0(void *a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, void *a10, void *a11)
{
  id v18 = objc_allocWithZone(v11);
  id v19 = sub_1001C4B1C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);

  return v19;
}

id sub_1001C3FD8()
{
  return sub_1001C3FF0(type metadata accessor for RAPNotificationDetailsViewModel);
}

id sub_1001C3FF0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for RAPNotificationDetailsViewModel()
{
  return self;
}

uint64_t type metadata accessor for RAPNotificationDetailsViewModel.DescriptionInfo()
{
  return self;
}

id sub_1001C4110(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 rapResponse:v6];
  if (!v9) {
    goto LABEL_19;
  }
  id v10 = v9;
  id v11 = [v9 displayDetails];
  if (!v11)
  {
LABEL_18:

LABEL_19:
    if (qword_1015CBBD8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1000F2248(v24, (uint64_t)qword_1015D3AE8);
    id v25 = a1;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      Swift::String v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      *(_DWORD *)Swift::String v28 = 138412290;
      *(void *)&long long v46 = v25;
      id v30 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v29 = v25;

      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to build RAPNotificationDetailsViewModel from rapRecord:%@", v28, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v12 = v11;
  id v13 = sub_1001C5218(a1);
  if (!v13)
  {
LABEL_17:

    id v10 = v12;
    goto LABEL_18;
  }
  id v14 = v13;
  uint64_t v15 = sub_1001C54F0(a1);
  if (v16)
  {

    id v10 = v12;
    id v12 = v14;
    goto LABEL_17;
  }
  uint64_t v41 = v15;
  unint64_t v42 = v14;
  id v43 = v2;
  unint64_t v48 = (unint64_t)_swiftEmptyArrayStorage;
  if ([v12 placesCount])
  {
    uint64_t v38 = v4;
    id v39 = v12;
    uint64_t v40 = v5;
    id result = [v12 places];
    if (!result) {
      goto LABEL_32;
    }
    id v18 = result;
    NSArray.makeIterator()();

    NSFastEnumerationIterator.next()();
    if (v47)
    {
      id v19 = (unint64_t *)&unk_1015D3BC8;
      do
      {
        sub_1000EFD84(&v46, &v45);
        sub_100100830(0, v19);
        if (swift_dynamicCast())
        {
          id v20 = v44;
          id v21 = objc_msgSend(self, "_itemWithGeoMapItem:", objc_msgSend(v44, "geoMapItem"));
          swift_unknownObjectRelease();
          if (v21)
          {
            id v22 = v19;
            id v23 = v21;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            id v19 = v22;
          }
          else
          {
          }
        }
        NSFastEnumerationIterator.next()();
      }
      while (v47);
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v38);
    id v12 = v39;
  }
  id v32 = [v12 mapType];
  id result = [v12 displayRegion];
  if (result)
  {
    uint64_t v33 = result;
    sub_100100830(0, &qword_1015CF128);
    v34.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v35 = [a1 reportID];
    if (!v35)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    LOBYTE(v37) = 0;
    uint64_t v36 = v42;
    id v31 = [v43 initWithDescriptionInfo:v42 displayStyle:v41 mapType:v32 mapRegion:v33 mapItems:v34.super.isa reportId:v35 updatedLabel:0 hasButton:v37 button:0 rapRecord:a1];

    return v31;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void sub_1001C46BC(void *a1)
{
  id v4 = sub_1001C560C(a1);
  id v5 = [a1 details];
  if (!v5)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  double v6 = v5;
  unsigned int v7 = [v5 displayStyle];

  if (v7 - 1 > 5) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = qword_100F636C8[v7 - 1];
  }
  id v9 = [self sharedService];
  if (!v9) {
    goto LABEL_18;
  }
  id v10 = v9;
  id v11 = [a1 details];
  if (!v11)
  {
LABEL_19:
    __break(1u);
LABEL_20:

    __break(1u);
    goto LABEL_21;
  }
  id v12 = v11;
  Class isa = (Class)[v10 mapItemsForPlacesInDetails:v11];

  if (!isa)
  {
    sub_100100830(0, &qword_1015CF128);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  id v13 = [a1 details];
  if (!v13) {
    goto LABEL_20;
  }
  id v14 = v13;
  unsigned int v15 = [v13 mapType];

  id v16 = [a1 details];
  if (!v16)
  {
LABEL_21:

    __break(1u);
    goto LABEL_22;
  }
  uint64_t v17 = v16;
  id v18 = [v16 displayRegion];

  if (!v18)
  {
LABEL_22:

    __break(1u);
    goto LABEL_23;
  }
  id v19 = [a1 problemId];
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v20 = v19;
  unsigned int v34 = v15;
  id v21 = [a1 details];
  if (!v21)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v22 = v21;
  uint64_t v33 = v8;
  id v23 = v1;
  uint64_t v24 = v4;
  id v25 = [v21 label];

  id v26 = [a1 details];
  if (!v26)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  os_log_type_t v27 = v26;
  unsigned __int8 v28 = [v26 hasButton];

  id v29 = [a1 details];
  if (v29)
  {
    id v30 = v29;
    id v31 = [v29 button];

    LOBYTE(v32) = v28;
    [v23 initWithDescriptionInfo:v24 displayStyle:v33 mapType:v34 mapRegion:v18 mapItems:isa reportId:v20 updatedLabel:v25 hasButton:v32 button:v31 rapRecord:0];

    return;
  }
LABEL_26:
  __break(1u);
}

ValueMetadata *type metadata accessor for RAPNotificationDetailsViewModel.DisplayStyle()
{
  return &type metadata for RAPNotificationDetailsViewModel.DisplayStyle;
}

unint64_t sub_1001C4A18()
{
  unint64_t result = qword_1015D3BC0;
  if (!qword_1015D3BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3BC0);
  }
  return result;
}

uint64_t sub_1001C4A6C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015D3AE8);
  sub_1000F2248(v0, (uint64_t)qword_1015D3AE8);
  type metadata accessor for RAPNotificationDetailsViewModel();
  sub_1000FF33C((uint64_t *)&unk_1015D3BD0);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

unint64_t sub_1001C4B0C(unint64_t result)
{
  if (result > 6) {
    return 0;
  }
  return result;
}

id sub_1001C4B1C(void *a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9, void *a10, void *a11)
{
  uint64_t v14 = OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_rapRecord;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_rapRecord] = 0;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_descriptionInfo] = a1;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_displayStyle] = a2;
  *(_DWORD *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_mapType] = a3;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_mapRegion] = a4;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_mapItems] = a5;
  unsigned int v15 = &v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_reportId];
  *unsigned int v15 = a6;
  v15[1] = a7;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_updatedLabel] = a8;
  v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_hasButton] = a9;
  *(void *)&v11[OBJC_IVAR____TtC4Maps31RAPNotificationDetailsViewModel_button] = a10;
  id v16 = *(void **)&v11[v14];
  *(void *)&v11[v14] = a11;
  id v17 = a1;
  id v18 = a4;
  id v19 = a8;
  id v20 = a10;
  id v21 = a11;

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for RAPNotificationDetailsViewModel();
  return [super init];
}

unint64_t sub_1001C4C14(void *a1)
{
  id v1 = [a1 rapResponse];
  if (v1)
  {
    id v2 = v1;
    switch([v1 rapStateIcon])
    {
      case 1u:
      case 4u:
      case 5u:
        unint64_t v11 = 0xD00000000000001BLL;

        break;
      case 2u:

        unint64_t v11 = 0x72616D6B63656863;
        break;
      case 3u:

        unint64_t v11 = 0xD000000000000018;
        break;
      default:
        if (qword_1015CBBD8 != -1) {
          swift_once();
        }
        uint64_t v7 = type metadata accessor for Logger();
        sub_1000F2248(v7, (uint64_t)qword_1015D3AE8);
        id v4 = v2;
        uint64_t v8 = Logger.logObject.getter();
        os_log_type_t v9 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v8, v9))
        {
          id v10 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v10 = 67109120;
          [v4 rapStateIcon];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to get SymbolImageName with rapStateIcon: %d", v10, 8u);
          swift_slowDealloc();

          return 0;
        }

        goto LABEL_16;
    }
  }
  else
  {
    if (qword_1015CBBD8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1000F2248(v3, (uint64_t)qword_1015D3AE8);
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      double v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to get SymbolImageName", v6, 2u);
      swift_slowDealloc();
    }
LABEL_16:

    return 0;
  }
  return v11;
}

id sub_1001C4EFC(void *a1)
{
  id v1 = [a1 rapResponse];
  if (v1)
  {
    id v2 = v1;
    switch([v1 rapStateIcon])
    {
      case 1u:
      case 3u:
      case 4u:
        id v3 = [self systemGrayColor];
        goto LABEL_14;
      case 2u:
        id v3 = [self systemGreenColor];
        goto LABEL_14;
      case 5u:
        id v3 = [self systemYellowColor];
LABEL_14:
        id v12 = v3;

        return v12;
      default:
        if (qword_1015CBBD8 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        sub_1000F2248(v8, (uint64_t)qword_1015D3AE8);
        os_log_type_t v5 = v2;
        os_log_type_t v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v9, v10))
        {
          unint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v11 = 67109120;
          [v5 rapStateIcon];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to get SymbolImageBackgroundColor with rapStateIcon: %d", v11, 8u);
          swift_slowDealloc();

          return 0;
        }

        break;
    }
  }
  else
  {
    if (qword_1015CBBD8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1000F2248(v4, (uint64_t)qword_1015D3AE8);
    os_log_type_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to get SymbolImageBackgroundColor", v7, 2u);
      swift_slowDealloc();
    }
  }

  return 0;
}

id sub_1001C5218(void *a1)
{
  id v2 = [a1 rapResponse];
  if (!v2) {
    goto LABEL_17;
  }
  id v3 = v2;
  id v4 = [v2 displayDetails];

  if (!v4) {
    goto LABEL_17;
  }
  if (([v4 hasTitle] & 1) == 0 && !objc_msgSend(v4, "hasBody"))
  {

LABEL_17:
    if (qword_1015CBBD8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000F2248(v26, (uint64_t)qword_1015D3AE8);
    os_log_type_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      id v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to get DescriptionInfo", v29, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  unint64_t v5 = sub_1001C4C14(a1);
  unint64_t v7 = v6;
  id v8 = sub_1001C4EFC(a1);
  if (![v4 hasTitle]) {
    goto LABEL_9;
  }
  id result = [v4 title];
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }
  os_log_type_t v10 = result;
  id v11 = [result stringValue];

  if (v11)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
  }
  else
  {
LABEL_9:
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  if (![v4 hasBody]) {
    goto LABEL_14;
  }
  id result = [v4 body];
  if (result)
  {
    unsigned int v15 = result;
    id v16 = [result stringValue];

    if (v16)
    {
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

LABEL_15:
      id v20 = (objc_class *)type metadata accessor for RAPNotificationDetailsViewModel.DescriptionInfo();
      id v21 = (char *)objc_allocWithZone(v20);
      id v22 = (unint64_t *)&v21[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_imageName];
      *id v22 = v5;
      v22[1] = v7;
      *(void *)&v21[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_imageBackgroundColor] = v8;
      objc_super v23 = (uint64_t *)&v21[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_titleText];
      *objc_super v23 = v12;
      v23[1] = v14;
      uint64_t v24 = (uint64_t *)&v21[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_descriptionText];
      *uint64_t v24 = v17;
      v24[1] = v19;
      v30.receiver = v21;
      v30.super_class = v20;
      id v25 = [super init];

      return v25;
    }
LABEL_14:
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    goto LABEL_15;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1001C54F0(void *a1)
{
  uint64_t result = (uint64_t)[a1 rapResponse];
  if (result)
  {
    id v2 = (void *)result;
    id v3 = [(id)result displayDetails];

    if (v3)
    {
      unsigned int v4 = [v3 displayStyle];

      if (v4 == 1) {
        return 1;
      }
      if (v4 == 2) {
        return 2;
      }
    }
    return 0;
  }
  return result;
}

id sub_1001C5590(void *a1)
{
  unsigned int v1 = [a1 problemState];
  id v2 = self;
  id v3 = (SEL *)&selRef_systemYellowColor;
  unsigned int v4 = &selRef_systemGreenColor;
  if (v1 != 2) {
    unsigned int v4 = &selRef_systemGrayColor;
  }
  if (v1 != 5) {
    id v3 = (SEL *)v4;
  }
  id v5 = [v2 *v3];

  return v5;
}

id sub_1001C560C(void *a1)
{
  unint64_t v2 = 0xD00000000000001BLL;
  unint64_t v3 = 0x8000000100F7A670;
  switch([a1 problemState])
  {
    case 1u:
    case 4u:
      break;
    case 2u:
      unint64_t v3 = 0xE90000000000006BLL;
      unint64_t v2 = 0x72616D6B63656863;
      break;
    case 3u:
      unint64_t v2 = 0xD000000000000018;
      unsigned int v4 = "doc.text.magnifyingglass";
      goto LABEL_6;
    case 5u:
      unsigned int v4 = "hourglass.bottomhalf.filled";
LABEL_6:
      unint64_t v3 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      unint64_t v2 = 0;
      unint64_t v3 = 0xE000000000000000;
      break;
  }
  id v5 = sub_1001C5590(a1);
  id v6 = [a1 details];
  if (!v6)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v7 = v6;
  id v8 = [v6 localizedTitle];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  id v12 = [a1 details];
  if (!v12)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x1001C5810);
  }
  uint64_t v13 = v12;
  id v14 = [v12 localizedDescription];

  if (v14)
  {
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  uint64_t v18 = (objc_class *)type metadata accessor for RAPNotificationDetailsViewModel.DescriptionInfo();
  uint64_t v19 = (char *)objc_allocWithZone(v18);
  id v20 = (unint64_t *)&v19[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_imageName];
  *id v20 = v2;
  v20[1] = v3;
  *(void *)&v19[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_imageBackgroundColor] = v5;
  id v21 = (uint64_t *)&v19[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_titleText];
  *id v21 = v9;
  v21[1] = v11;
  id v22 = (uint64_t *)&v19[OBJC_IVAR___RAPNotificationDetailsViewModelDescriptionInfo_descriptionText];
  *id v22 = v15;
  v22[1] = v17;
  v24.receiver = v19;
  v24.super_class = v18;
  return [super init];
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHighlightMain()
{
  return &type metadata for PlaceSummaryUnitHighlightMain;
}

uint64_t sub_1001C5834(uint64_t a1)
{
  return sub_1001C587C(a1, qword_1016114B0);
}

uint64_t sub_1001C5858(uint64_t a1)
{
  return sub_1001C587C(a1, qword_1016114C8);
}

uint64_t sub_1001C587C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000FF33C(&qword_1015D3CB8);
  sub_10003D64C(v3, a2);
  sub_1000F2248(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001C5924@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D3CC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_1000FF33C(&qword_1015D3CC8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001010F8(&qword_1015D3CD0, &qword_1015D3CC8);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 0;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_1000FF33C(&qword_1015D3CD8);
  a1[4] = sub_1001C83E4();
  sub_100100B1C(a1);
  sub_1001010F8(&qword_1015D3CF8, &qword_1015D3CC0);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001C5B64()
{
  return 0x62694C6F54646441;
}

uint64_t sub_1001C5B88()
{
  return sub_1001C7F44();
}

uint64_t sub_1001C5BB0()
{
  return Image.init(systemName:)();
}

uint64_t sub_1001C5BD4()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D3CA8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D3CB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  uint64_t v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  uint64_t v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

void sub_1001C5E70(void *a1@<X8>)
{
  *a1 = 0x62694C6F54646441;
  a1[1] = 0xEF70695479726172;
}

void sub_1001C5F10(unsigned char *a1, uint64_t a2, char a3, void *a4, uint64_t *a5, uint64_t a6)
{
  a1[*a4] = a3;
  uint64_t v7 = *a5;
  uint64_t v8 = a1;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1000FF33C(&qword_1015D3CB8);
  sub_1000F2248(v9, a6);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
}

uint64_t sub_1001C6118()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipObservationTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipSourceDebouncer))
  {
    swift_retain();
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release();
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_hasShownForCurrentPlacecard) = 0;
  if (qword_1015CBBE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1000FF33C(&qword_1015D3CB8);
  sub_1000F2248(v1, (uint64_t)qword_1016114C8);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_needsRefinement) = 0;
  if (qword_1015CBBE0 != -1) {
    swift_once();
  }
  sub_1000F2248(v1, (uint64_t)qword_1016114B0);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  return swift_unknownObjectWeakAssign();
}

void sub_1001C6304(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = type metadata accessor for DispatchTimeInterval();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char **)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v27 - v11;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v13);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    os_log_type_t v27 = v12;
    uint64_t v28 = v4;
    uint64_t v29 = v3;
    uint64_t v30 = v8;
    uint64_t v31 = v7;
    uint64_t v15 = OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipSourceDebouncer;
    if (*(void *)(v2 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipSourceDebouncer))
    {
      swift_retain();
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v32;
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v18;
    aBlock[4] = sub_1001C8570;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008C380;
    aBlock[3] = &unk_1012DC798;
    _Block_copy(aBlock);
    unsigned int v34 = _swiftEmptyArrayStorage;
    sub_10010B9B0();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1000FF33C((uint64_t *)&unk_1015CE580);
    sub_1001010F8((unint64_t *)&qword_1015CE1F0, (uint64_t *)&unk_1015CE580);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v19 = DispatchWorkItem.init(flags:block:)();
    swift_release();
    swift_release();
    *(void *)(v2 + v15) = v19;
    swift_retain();
    swift_release();
    sub_10010B3CC();
    id v20 = (void *)static OS_dispatch_queue.main.getter();
    id v21 = v33;
    static DispatchTime.now()();
    *uint64_t v6 = 500;
    uint64_t v23 = v28;
    uint64_t v22 = v29;
    (*(void (**)(void *, void, uint64_t))(v28 + 104))(v6, enum case for DispatchTimeInterval.milliseconds(_:), v29);
    objc_super v24 = v27;
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v23 + 8))(v6, v22);
    uint64_t v25 = v31;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v30 + 8);
    v26(v21, v31);
    OS_dispatch_queue.asyncAfter(deadline:execute:)();
    swift_release();

    v26(v24, v25);
  }
}

void sub_1001C6738(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1001C6794(a2);
  }
}

void sub_1001C6794(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v22 = Strong;
    self;
    uint64_t v8 = swift_dynamicCastObjCClassUnconditional();
    uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRetain();

    if (v9)
    {
      uint64_t v10 = swift_unknownObjectWeakLoadStrong();
      if (v10
        && (uint64_t v11 = (void *)v10,
            id v12 = (void *)TipUIPopoverViewController.popoverPresentationController.getter(),
            v11,
            v12))
      {
        [v12 setSourceItem:v8];

        swift_unknownObjectRelease();
        id v13 = v22;
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v14 = OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipObservationTask;
      if (*(void *)(v1 + OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipObservationTask))
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      type metadata accessor for MainActor();
      swift_unknownObjectRetain();
      swift_retain();
      id v17 = v22;
      uint64_t v18 = static MainActor.shared.getter();
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v18;
      v19[3] = &protocol witness table for MainActor;
      v19[4] = v16;
      v19[5] = v8;
      v19[6] = a1;
      _OWORD v19[7] = v17;
      swift_release();
      uint64_t v20 = sub_100042AF4((uint64_t)v6, (uint64_t)&unk_1015D3D78, (uint64_t)v19);

      *(void *)(v2 + v14) = v20;
      swift_release();
    }
  }
}

uint64_t sub_1001C6AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[22] = a6;
  v7[23] = a7;
  v7[20] = a4;
  v7[21] = a5;
  sub_1000FF33C(&qword_1015D3D80);
  v7[24] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Tips.Status();
  v7[25] = v8;
  v7[26] = *(void *)(v8 - 8);
  v7[27] = swift_task_alloc();
  v7[28] = swift_task_alloc();
  v7[29] = sub_1000FF33C(&qword_1015D3D88);
  v7[30] = swift_task_alloc();
  v7[31] = sub_1000FF33C(&qword_1015D3D90);
  v7[32] = swift_task_alloc();
  uint64_t v9 = sub_1000FF33C(&qword_1015D3D98);
  v7[33] = v9;
  v7[34] = *(void *)(v9 - 8);
  v7[35] = swift_task_alloc();
  uint64_t v10 = sub_1000FF33C(&qword_1015D3DA0);
  v7[36] = v10;
  v7[37] = *(void *)(v10 - 8);
  v7[38] = swift_task_alloc();
  v7[39] = swift_task_alloc();
  v7[40] = type metadata accessor for MainActor();
  v7[41] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[42] = v12;
  v7[43] = v11;
  return _swift_task_switch(sub_1001C6D5C, v12, v11);
}

uint64_t sub_1001C6D5C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[44] = Strong;
  if (Strong)
  {
    uint64_t v3 = v0[34];
    uint64_t v2 = v0[35];
    uint64_t v4 = v0[33];
    v0[45] = sub_1001C86A4();
    Tip.shouldDisplayUpdates.getter();
    AsyncMapSequence.base.getter();
    sub_1001010F8(&qword_1015D3DB0, &qword_1015D3D88);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    AsyncMapSequence.transform.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    AsyncMapSequence.Iterator.init(_:transform:)();
    v0[46] = OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipPopoverController;
    uint64_t v5 = static MainActor.shared.getter();
    v0[47] = v5;
    if (v5)
    {
      swift_getObjectType();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    v0[48] = v6;
    v0[49] = v8;
    return _swift_task_switch(sub_1001C6FB4, v6, v8);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1001C6FB4()
{
  uint64_t v1 = v0[47];
  v0[50] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_1001010F8(&qword_1015D3DB8, &qword_1015D3D90);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[51] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1001C70B0;
  uint64_t v3 = v0[24];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1001C70B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_1001C73DC;
  }
  else
  {
    (*(void (**)(void))(v2 + 400))();
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_1001C71DC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001C71DC()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1001C86F8(v3);
    swift_release();
    uint64_t v4 = v0[42];
    uint64_t v5 = v0[43];
    return _swift_task_switch(sub_1001C7BCC, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[38];
    uint64_t v6 = v0[39];
    uint64_t v8 = v0[36];
    uint64_t v9 = v0[37];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[28], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[53] = v11;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v0[54] = v12;
    v0[55] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v12(v7, v8);
    uint64_t v16 = (int *)((char *)v10 + *v10);
    id v13 = (void *)swift_task_alloc();
    v0[56] = v13;
    *id v13 = v0;
    v13[1] = sub_1001C73F4;
    uint64_t v14 = v0[28];
    return ((uint64_t (*)(void *, uint64_t))v16)(v0 + 57, v14);
  }
}

uint64_t sub_1001C73DC()
{
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t sub_1001C73F4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 224);
  uint64_t v3 = *(void *)(*v0 + 208);
  uint64_t v4 = *(void *)(*v0 + 200);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 457) = *(unsigned char *)(v1 + 456);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 392);
  uint64_t v6 = *(void *)(v1 + 384);
  return _swift_task_switch(sub_1001C75A0, v6, v5);
}

uint64_t sub_1001C75A0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  return _swift_task_switch(sub_1001C7604, v1, v2);
}

uint64_t sub_1001C7604()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void *)(v0 + 416);
  static Task<>.checkCancellation()();
  if (v1)
  {
    swift_release();
    if (qword_1015CBBF0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_1000F2248(v2, (uint64_t)qword_1016114E0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void **)(v0 + 352);
    if (v5)
    {
      id v39 = *(void **)(v0 + 352);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      swift_errorRetain();
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 152) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v9;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Task cancelled: %@", v7, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 288);
    swift_errorRelease();
    v19(v20, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  else
  {
    if (qword_1015CBBF0 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void **)(v0 + 352);
    uint64_t v11 = type metadata accessor for Logger();
    sub_1000F2248(v11, (uint64_t)qword_1016114E0);
    id v12 = v10;
    id v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = *(void **)(v0 + 352);
      uint64_t v16 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      Tip.status.getter();
      uint64_t v17 = String.init<A>(describing:)();
      *(void *)(v16 + 4) = sub_1000F2280(v17, v18, &v40);
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "add to library tip status:%s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      objc_super v24 = *(void **)(v0 + 352);
    }
    if (*(unsigned char *)(v0 + 457) == 1
      && (id v25 = [*(id *)(v0 + 168) superview], v25, v25))
    {
      uint64_t v26 = *(void *)(v0 + 360);
      os_log_type_t v27 = *(void **)(v0 + 352);
      uint64_t v28 = *(void **)(v0 + 184);
      type metadata accessor for TipUIPopoverViewController();
      *(void *)(v0 + 40) = &type metadata for AddToLibraryTip;
      *(void *)(v0 + 48) = v26;
      swift_unknownObjectRetain();
      uint64_t v29 = (void *)TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
      uint64_t v30 = static Color.gray.getter();
      *(void *)(v0 + 80) = &type metadata for Color;
      *(void *)(v0 + 88) = &protocol witness table for Color;
      *(void *)(v0 + 56) = v30;
      TipUIPopoverViewController.imageStyle.setter();
      id v31 = v27;
      TipUIPopoverViewController.presentationDelegate.setter();
      swift_unknownObjectWeakAssign();
      [v28 presentViewController:v29 animated:1 completion:0];
    }
    else
    {
      id v32 = [*(id *)(v0 + 184) presentedViewController];
      if (v32)
      {
        uint64_t v33 = v32;
        type metadata accessor for TipUIPopoverViewController();
        uint64_t v34 = swift_dynamicCastClass();

        if (v34)
        {
          [*(id *)(v0 + 184) dismissViewControllerAnimated:1 completion:0];
          swift_unknownObjectWeakAssign();
        }
      }
    }
    uint64_t v35 = static MainActor.shared.getter();
    *(void *)(v0 + 376) = v35;
    if (v35)
    {
      swift_getObjectType();
      uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v38 = v37;
    }
    else
    {
      uint64_t v36 = 0;
      uint64_t v38 = 0;
    }
    *(void *)(v0 + 384) = v36;
    *(void *)(v0 + 392) = v38;
    return _swift_task_switch(sub_1001C6FB4, v36, v38);
  }
}

uint64_t sub_1001C7BCC()
{
  uint64_t v1 = (void *)v0[44];
  (*(void (**)(void, void))(v0[37] + 8))(v0[39], v0[36]);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t type metadata accessor for InfoCardTipKitController()
{
  return self;
}

ValueMetadata *type metadata accessor for AddToLibraryTip()
{
  return &type metadata for AddToLibraryTip;
}

unint64_t sub_1001C7E6C()
{
  unint64_t result = qword_1015D3CA0;
  if (!qword_1015D3CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3CA0);
  }
  return result;
}

uint64_t sub_1001C7EC0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1016114E0);
  sub_1000F2248(v0, (uint64_t)qword_1016114E0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001C7F44()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v0._uint64_t countAndFlagsBits = 0xD000000000000014;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v3._uint64_t object = (void *)0x8000000100F7A960;
  v0._uint64_t object = (void *)0x8000000100F7A920;
  v1._uint64_t object = (void *)0x8000000100F7A940;
  v1._uint64_t countAndFlagsBits = 0xD000000000000013;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v0, (Swift::String_optional)0, (NSBundle)qword_101611820, v1, v3);
  sub_100180324();
  return Text.init<A>(_:)();
}

uint64_t sub_1001C8010()
{
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v3._uint64_t countAndFlagsBits = 0xD000000000000021;
  v0._uint64_t countAndFlagsBits = 0xD000000000000025;
  v3._uint64_t object = (void *)0x8000000100F7A8F0;
  v1._uint64_t object = (void *)0x8000000100F7A8A0;
  v0._uint64_t object = (void *)0x8000000100F7A8C0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000016;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)qword_101611820, v0, v3);
  sub_100180324();
  return Text.init<A>(_:)();
}

uint64_t sub_1001C80DC()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D3CB8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = &v14[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Tips.Rule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1015CBBE8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1000F2248(v0, (uint64_t)qword_1016114C8);
  swift_beginAccess();
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v1 + 16);
  v9(v3, v8, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if (qword_1015CBBE0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1000F2248(v0, (uint64_t)qword_1016114B0);
  swift_beginAccess();
  v9(v3, v11, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v10(v7, v4);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1001C83E4()
{
  unint64_t result = qword_1015D3CE0;
  if (!qword_1015D3CE0)
  {
    sub_10010118C(&qword_1015D3CD8);
    sub_1001010F8(&qword_1015D3CE8, &qword_1015D3CC8);
    sub_1001C8484();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3CE0);
  }
  return result;
}

unint64_t sub_1001C8484()
{
  unint64_t result = qword_1015D3CF0;
  if (!qword_1015D3CF0)
  {
    sub_10010118C(&qword_1015D3CC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3CF0);
  }
  return result;
}

uint64_t sub_1001C84F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C8530()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001C8570()
{
  sub_1001C6738(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001C8578()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001C85D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10005056C;
  return sub_1001C6AE8(a1, v4, v5, v6, v7, v9, v8);
}

unint64_t sub_1001C86A4()
{
  unint64_t result = qword_1015D3DA8;
  if (!qword_1015D3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3DA8);
  }
  return result;
}

uint64_t sub_1001C86F8(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D3D80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1001C8758()
{
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipObservationTask] = 0;
  v0[OBJC_IVAR____TtC4Maps24InfoCardTipKitController_hasShownForCurrentPlacecard] = 0;
  v0[OBJC_IVAR____TtC4Maps24InfoCardTipKitController_needsRefinement] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps24InfoCardTipKitController_tipSourceDebouncer] = 0;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  [super init];
  swift_unknownObjectWeakAssign();
  return v2;
}

uint64_t sub_1001C8818()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v5, qword_1016114F8);
  sub_1000F2248(v5, (uint64_t)qword_1016114F8);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_1001C8988()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF4F8);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v29 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v33 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FF33C(&qword_1015D3FD8);
  uint64_t v9 = (int *)(sub_1000FF33C(&qword_1015CD280) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v30 = *(void *)(*(void *)v9 + 72);
  uint64_t v31 = 2 * v30;
  uint64_t v11 = swift_allocObject();
  long long v25 = xmmword_100F5CF80;
  uint64_t v32 = v11;
  *(_OWORD *)(v11 + 16) = xmmword_100F5CF80;
  uint64_t v12 = (unsigned char *)(v11 + v10);
  *(void *)&long long v28 = &v12[v9[14]];
  *uint64_t v12 = 0;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  id v13 = v5;
  v35(v5, 1, 1, v6);
  uint64_t v38 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v14 = *(void *)(v38 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v34 = v14 + 56;
  uint64_t v15 = v2;
  v37(v2, 1, 1, v38);
  uint64_t v16 = sub_1000FF33C((uint64_t *)&unk_1015CF510);
  uint64_t v36 = v7 + 56;
  uint64_t v17 = *(void *)(v7 + 72);
  uint64_t v18 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = (v18 + 32) & ~v18;
  uint64_t v20 = 2 * v17;
  uint64_t v26 = v18 | 7;
  uint64_t v27 = v17;
  v24[1] = v16;
  *(_OWORD *)(swift_allocObject() + 16) = v25;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(void *)&long long v25 = &v12[v30 + v9[14]];
  v12[v30] = 1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v21 = v29;
  v35(v13, 1, 1, v29);
  v37(v15, 1, 1, v38);
  uint64_t v30 = v19 + v20;
  uint64_t v22 = swift_allocObject();
  long long v28 = xmmword_100F5CFA0;
  *(_OWORD *)(v22 + 16) = xmmword_100F5CFA0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  v12[v31] = 2;
  LocalizedStringResource.init(stringLiteral:)();
  v35(v13, 1, 1, v21);
  v37(v15, 1, 1, v38);
  *(_OWORD *)(swift_allocObject() + 16) = v28;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  unint64_t result = sub_100116514(v32);
  qword_101611510 = result;
  return result;
}

uint64_t sub_1001C8F48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100308C58(*a1, *a2);
}

unint64_t sub_1001C8F58()
{
  unint64_t result = qword_1015D3E20;
  if (!qword_1015D3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E20);
  }
  return result;
}

Swift::Int sub_1001C8FAC()
{
  return Hasher._finalize()();
}

uint64_t sub_1001C905C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001C90F8()
{
  return Hasher._finalize()();
}

unint64_t sub_1001C91A4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001CB804(*a1);
  *a2 = result;
  return result;
}

void sub_1001C91D4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEC0000006C616D72;
  uint64_t v3 = 0x6F4E656D756C6F76;
  if (*v1 != 1)
  {
    uint64_t v3 = 0x6F4C656D756C6F76;
    unint64_t v2 = 0xEA00000000006475;
  }
  if (*v1) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0x6F53656D756C6F76;
  }
  if (*v1) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = 0xEA00000000007466;
  }
  *a1 = v4;
  a1[1] = v5;
}

unint64_t sub_1001C9244()
{
  unint64_t result = qword_1015D3E28;
  if (!qword_1015D3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E28);
  }
  return result;
}

unint64_t sub_1001C929C()
{
  unint64_t result = qword_1015D3E30;
  if (!qword_1015D3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E30);
  }
  return result;
}

unint64_t sub_1001C92F4()
{
  unint64_t result = qword_1015D3E38;
  if (!qword_1015D3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E38);
  }
  return result;
}

unint64_t sub_1001C934C()
{
  unint64_t result = qword_1015D3E40;
  if (!qword_1015D3E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E40);
  }
  return result;
}

unint64_t sub_1001C93A4()
{
  unint64_t result = qword_1015D3E48;
  if (!qword_1015D3E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E48);
  }
  return result;
}

unint64_t sub_1001C93FC()
{
  unint64_t result = qword_1015D3E50;
  if (!qword_1015D3E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E50);
  }
  return result;
}

unint64_t sub_1001C9454()
{
  unint64_t result = qword_1015D3E58;
  if (!qword_1015D3E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E58);
  }
  return result;
}

uint64_t sub_1001C94A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CAD40(&qword_1015CBBF8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_1016114F8, a1);
}

uint64_t sub_1001C94E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CA34C(a1, a2, a3, (void (*)(void))sub_1001C950C);
}

unint64_t sub_1001C950C()
{
  unint64_t result = qword_1015D3E60;
  if (!qword_1015D3E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E60);
  }
  return result;
}

uint64_t sub_1001C9560(uint64_t a1)
{
  unint64_t v2 = sub_1001C950C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001C95B0()
{
  unint64_t result = qword_1015D3E68;
  if (!qword_1015D3E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E68);
  }
  return result;
}

unint64_t sub_1001C9608()
{
  unint64_t result = qword_1015D3E70;
  if (!qword_1015D3E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E70);
  }
  return result;
}

unint64_t sub_1001C9660()
{
  unint64_t result = qword_1015D3E78;
  if (!qword_1015D3E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E78);
  }
  return result;
}

uint64_t sub_1001C96B4()
{
  if (qword_1015CBC00 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001C9710(uint64_t a1)
{
  unint64_t v2 = sub_1001C9454();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1001C975C()
{
  return sub_1001010F8(&qword_1015D3E80, &qword_1015D3E88);
}

void sub_1001C9798(void *a1@<X8>)
{
  *a1 = &off_1012D7B98;
}

unint64_t sub_1001C97AC()
{
  unint64_t result = qword_1015D3E90;
  if (!qword_1015D3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3E90);
  }
  return result;
}

uint64_t sub_1001C9800()
{
  return sub_1001010F8(&qword_1015D3E98, &qword_1015D3EA0);
}

uint64_t sub_1001C983C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  unint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = type metadata accessor for TypeDisplayRepresentation();
  sub_10003D64C(v10, qword_101611518);
  sub_1000F2248(v10, (uint64_t)qword_101611518);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1001C9B18()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10003D64C(v0, qword_101611530);
  sub_1000F2248(v0, (uint64_t)qword_101611530);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001C9B7C()
{
  uint64_t v0 = sub_1000FF33C(&qword_1015D1680);
  sub_10003D64C(v0, qword_101611548);
  uint64_t v1 = sub_1000F2248(v0, (uint64_t)qword_101611548);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1001C9C34()
{
  uint64_t result = swift_getKeyPath();
  qword_101611560 = result;
  return result;
}

uint64_t sub_1001C9C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1001C9C80, 0, 0);
}

uint64_t sub_1001C9C80()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[2];
  v0[3] = v1;
  v0[9] = v1;
  IntentParameter.wrappedValue.getter();
  if (qword_1015CBC20 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_101611560;
  v0[10] = qword_101611560;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[11] = v3;
  uint64_t v4 = sub_1001010F8(&qword_1015D3FB0, &qword_1015D3FB8);
  v0[12] = v4;
  *uint64_t v3 = v0;
  v3[1] = sub_1001C9DD4;
  return AppEntity._setValue<A, B, C>(_:for:)((char *)v0 + 145, v2, &type metadata for VoiceVolumeLevel, v4);
}

uint64_t sub_1001C9DD4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188DF8;
  }
  else {
    uint64_t v2 = sub_1001C9F28;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C9F28()
{
  IntentParameter.wrappedValue.getter();
  uint64_t v1 = v0[5];
  v0[4] = v1;
  uint64_t v2 = qword_101611560;
  v0[14] = v1;
  v0[15] = v2;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001CA004;
  uint64_t v4 = v0[12];
  return AppEntity._value<A, B>(for:)(v0 + 18, v2, v4);
}

uint64_t sub_1001CA004()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100188E10;
  }
  else {
    uint64_t v2 = sub_1001CA158;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001CA158()
{
  *(unsigned char *)(v0 + 146) = *(unsigned char *)(v0 + 144);
  sub_1001C93FC();
  static IntentResult.result<A>(value:)();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001CA1E0()
{
  if (qword_1015CBC20 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_1001CA240()
{
  unint64_t result = qword_1015D3EA8;
  if (!qword_1015D3EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EA8);
  }
  return result;
}

unint64_t sub_1001CA298()
{
  unint64_t result = qword_1015D3EB0;
  if (!qword_1015D3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EB0);
  }
  return result;
}

uint64_t sub_1001CA2EC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001CA320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001CA34C(a1, a2, a3, (void (*)(void))sub_1001C97AC);
}

uint64_t sub_1001CA34C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001CA394@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CAD40(&qword_1015CBC10, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101611530, a1);
}

uint64_t sub_1001CA3CC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1015CBC18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1000FF33C(&qword_1015D1680);
  uint64_t v3 = sub_1000F2248(v2, (uint64_t)qword_101611548);

  return sub_10018AB34(v3, a1);
}

uint64_t sub_1001CA448(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100105268;
  *(_OWORD *)(v4 + 56) = *v1;
  *(void *)(v4 + 48) = a1;
  return _swift_task_switch(sub_1001C9C80, 0, 0);
}

uint64_t sub_1001CA4FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001CB850();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001CA524()
{
  return 0xD000000000000027;
}

unint64_t sub_1001CA544()
{
  unint64_t result = qword_1015D3EC0;
  if (!qword_1015D3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EC0);
  }
  return result;
}

unint64_t sub_1001CA59C()
{
  unint64_t result = qword_1015D3EC8;
  if (!qword_1015D3EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EC8);
  }
  return result;
}

unint64_t sub_1001CA5F4()
{
  unint64_t result = qword_1015D3ED0;
  if (!qword_1015D3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3ED0);
  }
  return result;
}

unint64_t sub_1001CA64C()
{
  unint64_t result = qword_1015D3ED8;
  if (!qword_1015D3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3ED8);
  }
  return result;
}

unint64_t sub_1001CA6A4()
{
  unint64_t result = qword_1015D3EE0;
  if (!qword_1015D3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EE0);
  }
  return result;
}

unint64_t sub_1001CA6FC()
{
  unint64_t result = qword_1015D3EE8;
  if (!qword_1015D3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EE8);
  }
  return result;
}

uint64_t sub_1001CA750(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001CA770, 0, 0);
}

uint64_t sub_1001CA770()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t Integer = GEOConfigGetInteger();
  if (Integer == 2) {
    char v3 = 2;
  }
  else {
    char v3 = 1;
  }
  if (!Integer) {
    char v3 = 0;
  }
  *uint64_t v1 = v3;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001CA7FC(uint64_t a1, unsigned char *a2)
{
  *(unsigned char *)(v2 + 16) = *a2;
  return _swift_task_switch(sub_1001CA820, 0, 0);
}

uint64_t sub_1001CA820()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  GEOGetUserTransportTypePreference();
  int v2 = GEOTransportTypeFromGEOTransportTypePreference();
  uint64_t v3 = qword_101601250[0];
  id v4 = v1;
  unint64_t v5 = &stru_1012DC960;
  if (v3 != -1) {
    dispatch_once(qword_101601250, &stru_1012DC960);
  }

  id v6 = (id)qword_101601248;
  if (v2 == 2)
  {
    if (MNHeadphonesAreInUse()) {
      uint64_t v7 = @"VoiceVolumeForWalkingWithHeadphonesContext";
    }
    else {
      uint64_t v7 = @"VoiceVolumeForWalkingWithoutHeadphonesContext";
    }
  }
  else
  {
    uint64_t v7 = @"VoiceVolumeForDrivingContext";
  }
  uint64_t v8 = v7;
  id v9 = [v4 isEqualToString:@"Off Volume"];
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = [v6 path];
    _CFPreferencesSetAppValueWithContainer();
  }
  uint64_t v11 = qword_101601250[0];
  uint64_t v12 = &stru_1012DC960;
  if (v11 == -1)
  {
    id v13 = v6;
  }
  else
  {
    id v13 = v6;
    dispatch_once(qword_101601250, &stru_1012DC960);
  }

  id v14 = (id)qword_101601248;
  +[NSNumber numberWithBool:v9];
  uint64_t v15 = [v14 path];
  _CFPreferencesSetAppValueWithContainer();

  uint64_t v16 = [v14 path];
  _CFPreferencesSynchronizeWithContainer();

  GSSendAppPreferencesChanged();
  GSSendAppPreferencesChanged();

  GEOConfigSetSyncInteger();
  GEOConfigGetBOOL();
  GEOConfigSetBOOL();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

unint64_t sub_1001CAB6C()
{
  unint64_t result = qword_1015D3EF0;
  if (!qword_1015D3EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EF0);
  }
  return result;
}

unint64_t sub_1001CABC4()
{
  unint64_t result = qword_1015D3EF8;
  if (!qword_1015D3EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3EF8);
  }
  return result;
}

unint64_t sub_1001CAC1C()
{
  unint64_t result = qword_1015D3F00;
  if (!qword_1015D3F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F00);
  }
  return result;
}

unint64_t sub_1001CAC74()
{
  unint64_t result = qword_1015D3F08;
  if (!qword_1015D3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F08);
  }
  return result;
}

uint64_t sub_1001CACC8@<X0>(uint64_t *a1@<X8>)
{
  sub_1001CAFB8();
  uint64_t result = UniqueAppEntity<>.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1001CAD08@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CAD40(&qword_1015CBC08, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101611518, a1);
}

uint64_t sub_1001CAD40@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1000F2248(v7, a3);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_1001CADE4()
{
  return sub_1001010F8(&qword_1015D3F10, &qword_1015D3F18);
}

uint64_t sub_1001CAE20(uint64_t a1)
{
  unint64_t v2 = sub_1001CA544();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1001CAE70()
{
  unint64_t result = qword_1015D3F20;
  if (!qword_1015D3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F20);
  }
  return result;
}

uint64_t sub_1001CAEC4(uint64_t a1)
{
  unint64_t v2 = sub_1001CAFB8();

  return UniqueAppEntity.displayRepresentation.getter(a1, v2);
}

uint64_t sub_1001CAF10(uint64_t a1)
{
  unint64_t v2 = sub_1001CAC74();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_1001CAF60()
{
  unint64_t result = qword_1015D3F28;
  if (!qword_1015D3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F28);
  }
  return result;
}

unint64_t sub_1001CAFB8()
{
  unint64_t result = qword_1015D3F30[0];
  if (!qword_1015D3F30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D3F30);
  }
  return result;
}

uint64_t sub_1001CB00C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for LocalizedStringResource();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1001CB09C, 0, 0);
}

uint64_t sub_1001CB09C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  sub_1000FF33C(&qword_1015D3EA0);
  LocalizedStringResource.init(stringLiteral:)();
  sub_1001010F8(&qword_1015D3FB0, &qword_1015D3FB8);
  sub_1001C950C();
  *uint64_t v1 = _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001CB1BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001CA59C();
  *uint64_t v4 = v2;
  v4[1] = sub_100189EA8;
  return UniqueAppEntityQuery.allEntities()(a2, v5);
}

unint64_t sub_1001CB270()
{
  unint64_t result = qword_1015D3F48;
  if (!qword_1015D3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F48);
  }
  return result;
}

unint64_t sub_1001CB2C8()
{
  unint64_t result = qword_1015D3F50[0];
  if (!qword_1015D3F50[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1015D3F50);
  }
  return result;
}

uint64_t sub_1001CB31C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001CA59C();
  *unint64_t v5 = v2;
  v5[1] = sub_10018A124;
  return UniqueAppEntityQuery.entities(for:)(a1, a2, v6);
}

uint64_t sub_1001CB3D0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  unint64_t v5 = sub_1001CA59C();
  *uint64_t v4 = v2;
  v4[1] = sub_10018AB9C;
  return UniqueAppEntityQuery.suggestedEntities()(a2, v5);
}

unint64_t sub_1001CB484()
{
  unint64_t result = qword_1015D3F68;
  if (!qword_1015D3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F68);
  }
  return result;
}

unint64_t sub_1001CB4DC()
{
  unint64_t result = qword_1015D3F70;
  if (!qword_1015D3F70)
  {
    sub_10010118C(qword_1015D3F78);
    sub_1001CAC1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D3F70);
  }
  return result;
}

uint64_t sub_1001CB550(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1001CA6FC();
  *unint64_t v5 = v2;
  v5[1] = sub_10005056C;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for NavigationVolumeQuery()
{
  return &type metadata for NavigationVolumeQuery;
}

ValueMetadata *type metadata accessor for NavigationVolumeEntity()
{
  return &type metadata for NavigationVolumeEntity;
}

ValueMetadata *type metadata accessor for NavigationVolumeEntity.UpdateIntent_value()
{
  return &type metadata for NavigationVolumeEntity.UpdateIntent_value;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryMetadata.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VoiceVolumeLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001CB790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceVolumeLevel()
{
  return &type metadata for VoiceVolumeLevel;
}

uint64_t sub_1001CB7C8()
{
  return sub_1001010F8(&qword_1015D3F90, &qword_1015D3F98);
}

unint64_t sub_1001CB804(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1012D7B30, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001CB850()
{
  uint64_t v28 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000FF33C(&qword_1015D1658);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  BOOL v7 = (char *)v20 - v6;
  uint64_t v8 = sub_1000FF33C(&qword_1015CF500);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v23 = sub_1000FF33C(&qword_1015D3FC0);
  LocalizedStringResource.init(stringLiteral:)();
  id v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  long long v25 = v13;
  v13(v10, 1, 1, v11);
  uint64_t v30 = 0;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v7;
  v15(v7, 1, 1, v14);
  v15(v4, 1, 1, v14);
  unsigned int v22 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v17 = *(void (**)(void))(v0 + 104);
  v20[1] = v0 + 104;
  uint64_t v21 = (void (*)(char *, void, uint64_t))v17;
  uint64_t v18 = v27;
  v17(v27);
  sub_1001CA544();
  uint64_t v23 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000FF33C(&qword_1015D3FC8);
  LocalizedStringResource.init(stringLiteral:)();
  v25(v10, 1, 1, v26);
  char v29 = 3;
  v15(v16, 1, 1, v14);
  v15(v4, 1, 1, v14);
  v21(v18, v22, v28);
  sub_1001C950C();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  return v23;
}

uint64_t sub_1001CBC3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1001CBC48()
{
  sub_1001CC320(v0 + 80, (uint64_t)&v6);
  sub_1001CC320((uint64_t)&v6, (uint64_t)&v7);
  if (!v7) {
    return 0;
  }
  uint64_t v1 = *(void *)(v7 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (unint64_t *)(v7 + 32);
  while (1)
  {
    unint64_t v4 = *v2;
    v2 += 3;
    uint64_t v3 = (void *)v4;
    if (v4 >= 3) {
      break;
    }
    if (!--v1) {
      return 0;
    }
  }
  sub_1001CC388(v3);
  return v3;
}

uint64_t sub_1001CBCC0@<X0>(id a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = [a1 value:v6];
  uint64_t v55 = a2;
  if (!result) {
    goto LABEL_48;
  }

  unsigned int v54 = [a1 hasServerOverrideIdentifier];
  if (v54) {
    uint64_t v53 = [a1 serverOverrideIdentifier];
  }
  else {
    uint64_t v53 = 0;
  }
  id v10 = [a1 formats];
  if (v10)
  {
    uint64_t v52 = v5;
    id v56 = a1;
    id v11 = v10;
    NSArray.makeIterator()();
    id v51 = v11;

    sub_10011ECA8();
    dispatch thunk of IteratorProtocol.next()();
    if (v61)
    {
      uint64_t v12 = _swiftEmptyArrayStorage;
      do
      {
        sub_1000EFD84(&v60, v59);
        sub_1000F2354((uint64_t)v59, (uint64_t)v58);
        sub_100100830(0, &qword_1015D3FE8);
        swift_dynamicCast();
        id v13 = v57;
        uint64_t v14 = 0;
        switch([v57 formatType])
        {
          case 1u:
            goto LABEL_15;
          case 2u:
            uint64_t v14 = 1;
            goto LABEL_15;
          case 3u:
            uint64_t v14 = 2;
            goto LABEL_15;
          case 4u:
            id v15 = [v13 tappableEntryIdentifier];
            if (!v15) {
              goto LABEL_8;
            }
            uint64_t v14 = (uint64_t)v15;
LABEL_15:
            unsigned int v16 = [v13 startIndex];
            unsigned int v17 = [v13 endIndex];

            sub_1000FF22C((uint64_t)v59);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v12 = sub_1001D05E8(0, v12[2] + 1, 1, v12);
            }
            unint64_t v19 = v12[2];
            unint64_t v18 = v12[3];
            if (v19 >= v18 >> 1) {
              uint64_t v12 = sub_1001D05E8((void *)(v18 > 1), v19 + 1, 1, v12);
            }
            void v12[2] = v19 + 1;
            uint64_t v20 = &v12[3 * v19];
            v20[4] = v14;
            v20[5] = v16;
            _OWORD v20[6] = v17;
            break;
          default:
LABEL_8:

            sub_1000FF22C((uint64_t)v59);
            break;
        }
        dispatch thunk of IteratorProtocol.next()();
      }
      while (v61);
    }
    else
    {
      uint64_t v12 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v4);

    a1 = v56;
  }
  else
  {
    uint64_t v12 = 0;
  }
  if ([a1 hasSupportMultiLineWrapping]) {
    uint64_t v52 = [a1 supportMultiLineWrapping];
  }
  else {
    uint64_t v52 = 0;
  }
  id v21 = [a1 styleAttributes];
  if (!v21
    || (unsigned int v22 = v21,
        *(void *)&long long v60 = 0,
        sub_100100830(0, &qword_1015D3FE0),
        static Array._conditionallyBridgeFromObjectiveC(_:result:)(),
        v22,
        (uint64_t v23 = v60) == 0))
  {
    id v56 = 0;
    goto LABEL_35;
  }
  if ((unint64_t)v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v50) {
      goto LABEL_30;
    }
LABEL_51:
    swift_bridgeObjectRelease();
    id v56 = 0;
    goto LABEL_35;
  }
  if (!*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_51;
  }
LABEL_30:
  if ((v23 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    id v24 = *(id *)(v23 + 32);
  }
  long long v25 = v24;
  swift_bridgeObjectRelease();
  id v56 = [objc_allocWithZone((Class)GEOFeatureStyleAttributes) initWithGEOStyleAttributes:v25];

LABEL_35:
  id v26 = [a1 value];
  if (!v26)
  {
LABEL_54:

    swift_bridgeObjectRelease();
    __break(1u);
    JUMPOUT(0x1001CC310);
  }
  uint64_t v27 = v26;
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  id v31 = [a1 textColor];
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  id v36 = [a1 symbolName];
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v40 = 0;
  }
  id v41 = [a1 symbolColor];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  uint64_t result = String.count.getter();
  if (result < 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_48:
    uint64_t v28 = 0;
    uint64_t v30 = 0;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v38 = 0;
    uint64_t v40 = 0;
    uint64_t v43 = 0;
    uint64_t v45 = 0;
    uint64_t v47 = 0;
    uint64_t v46 = 0;
    uint64_t v12 = 0;
    uint64_t v48 = 0;
    id v56 = 0;
    goto LABEL_49;
  }
  uint64_t v46 = v54 ^ 1;
  uint64_t v48 = v52;
  uint64_t v47 = v53;
LABEL_49:
  id v49 = v55;
  uint64_t *v55 = v28;
  v49[1] = v30;
  v49[2] = v33;
  v49[3] = v35;
  v49[4] = v38;
  v49[5] = v40;
  v49[6] = v43;
  unsigned char v49[7] = v45;
  v49[8] = v47;
  v49[9] = v46;
  v49[10] = (uint64_t)v12;
  v49[11] = v48;
  v49[12] = (uint64_t)v56;
  return result;
}

uint64_t sub_1001CC320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D3FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001CC388(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void destroy for PlaceSummaryUnitString(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 96);
}

uint64_t initializeWithCopy for PlaceSummaryUnitString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

uint64_t assignWithCopy for PlaceSummaryUnitString(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void **)(a1 + 96);
  uint64_t v6 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v6;
  id v7 = v6;

  return a1;
}

uint64_t assignWithTake for PlaceSummaryUnitString(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceSummaryUnitString(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaceSummaryUnitString(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitString()
{
  return &type metadata for PlaceSummaryUnitString;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikingTrailLength()
{
  return &type metadata for PlaceSummaryUnitHikingTrailLength;
}

uint64_t sub_1001CC734(uint64_t a1, char *a2, unint64_t a3)
{
  uint64_t v66 = a2;
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(KeyPath - 8);
  __chkstk_darwin(KeyPath);
  id v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RefinementsBarButtonViewModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v14 = (void (*)(void *, void))v70[0];
  uint64_t v15 = *(void *)(v70[0] + 16);
  if (!v15) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v65 = a3;
  uint64_t v69 = v13;
  uint64_t v16 = 0;
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = *(void *)(v11 + 72);
  unint64_t v19 = (unint64_t *)-v15;
  while ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    --v16;
    v17 += v18;
    if (v19 == (unint64_t *)v16) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v21 = -v16;
  if ((unint64_t)-v16 >= *(void *)(v70[0] + 16))
  {
    __break(1u);
LABEL_51:
    uint64_t v6 = (char *)sub_1003481BC((unint64_t)v6);
    *(void *)uint64_t v16 = v6;
LABEL_15:
    BOOL v36 = v21 >= *((void *)v6 + 2);
    unint64_t v21 = (unint64_t)v69;
    unint64_t v37 = v65;
    if (v36)
    {
      __break(1u);
LABEL_53:
      unint64_t v37 = sub_1003481BC(v37);
      *unint64_t v19 = v37;
LABEL_45:
      if (v21 >= *(void *)(v37 + 16))
      {
        __break(1u);
        JUMPOUT(0x1001CD00CLL);
      }
      unint64_t v21 = (unint64_t)v69;
      sub_1001CD340((uint64_t)v69, v37 + v17);
      v14(v70, 0);
      swift_release();
      swift_release();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong resultRefinementsBarDidUpdateViewModel:v65];
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v9, KeyPath);
        uint64_t v58 = v21;
        return sub_100130320(v58);
      }
      (*(void (**)(char *, uint64_t))(v67 + 8))(v9, KeyPath);
    }
    else
    {
      sub_1001CD340((uint64_t)v69, (uint64_t)&v6[v17]);
      ((void (*)(void *, void))v10)(v70, 0);
      swift_release();
      swift_release();
      uint64_t v38 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v38)
      {
        [v38 resultRefinementsBarDidUpdateViewModel:v37];
        swift_unknownObjectRelease();
      }
      id v39 = [v19 toggle];
      if (v39)
      {
        uint64_t v40 = v39;
        id v41 = (void *)swift_unknownObjectWeakLoadStrong();
        if (!v41)
        {
          swift_unknownObjectRelease();

          uint64_t v58 = v21;
          return sub_100130320(v58);
        }
        [v41 resultRefinementsBarDidTapOnToggle:v40 isSelected:*(unsigned __int8 *)(v21 + v68)];
        swift_unknownObjectRelease();
      }
    }
LABEL_49:
    swift_unknownObjectRelease();
    uint64_t v58 = v21;
    return sub_100130320(v58);
  }
  sub_1001302BC(v70[0] + v17, (uint64_t)v69);
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v24)
    {
      [v24 resultRefinementsBarDidTapOnSeeAllRefinements:v23];
      swift_unknownObjectRelease();
    }
    goto LABEL_39;
  }
  self;
  long long v25 = (unint64_t *)swift_dynamicCastObjCClass();
  if (v25)
  {
    unint64_t v19 = v25;
    switch((unint64_t)[v25 type])
    {
      case 1uLL:
        uint64_t v14 = (void (*)(void *, void))(v68 + OBJC_IVAR____TtC4Maps27ResultRefinementsController_delegate);
        id v26 = (void *)swift_unknownObjectWeakLoadStrong();
        uint64_t v27 = (uint64_t)v69;
        if (v26)
        {
          uint64_t v28 = v26;
          [v26 increasResultRefinementsSelectionSequenceNumber];
          id v29 = [v28 refinementsSelectionSequenceNumber];
          id v30 = [v29 integerValue];
          swift_unknownObjectRelease();

          uint64_t v31 = v27 + *(int *)(v10 + 40);
          *(void *)uint64_t v31 = v30;
          *(unsigned char *)(v31 + 8) = 0;
        }
        uint64_t v32 = *(int *)(v10 + 24);
        BOOL v33 = (*(unsigned char *)(v27 + v32) & 1) == 0;
        uint64_t v68 = v32;
        *(unsigned char *)(v27 + v32) = v33;
        uint64_t KeyPath = swift_getKeyPath();
        id v9 = (char *)swift_getKeyPath();
        uint64_t v10 = static Published.subscript.modify();
        uint64_t v16 = (uint64_t)v34;
        uint64_t v6 = *v34;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v16 = v6;
        if (isUniquelyReferenced_nonNull_native) {
          goto LABEL_15;
        }
        goto LABEL_51;
      case 2uLL:
        id v42 = [v19 multiSelect];
        if (v42)
        {
          uint64_t v43 = v42;
          uint64_t v44 = sub_10012F274();
          uint64_t v45 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v45)
          {
            [v45 resultRefinementsBarDidTapOnMultiSelect:v43 tappedAtIndex:(v44 << 63 >> 63) - v16];

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
        break;
      case 3uLL:
        sub_1001CD278((uint64_t)v66, (uint64_t)v6);
        uint64_t v46 = v67;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v6, 1, KeyPath) == 1)
        {
          sub_1001CD2E0((uint64_t)v6);
          uint64_t v47 = (uint64_t)v69;
LABEL_37:
          swift_unknownObjectRelease();
          uint64_t v58 = v47;
          return sub_100130320(v58);
        }
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v9, v6, KeyPath);
        uint64_t v47 = (uint64_t)v69;
        id v51 = &v69[*(int *)(v10 + 32)];
        uint64_t v52 = *(void *)v51;
        if (!*(void *)v51 || (uint64_t v53 = *(void *)(v52 + 16)) == 0)
        {
LABEL_36:
          (*(void (**)(char *, uint64_t))(v46 + 8))(v9, KeyPath);
          goto LABEL_37;
        }
        uint64_t v66 = v51;
        uint64_t v64 = *((void *)v51 + 3);
        uint64_t v54 = *(void *)(type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element(0) - 8);
        uint64_t v55 = v52 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
        uint64_t v56 = *(void *)(v54 + 72);
        swift_bridgeObjectRetain();
        uint64_t v57 = 0;
        while ((static UUID.== infix(_:_:)() & 1) == 0)
        {
          ++v57;
          v55 += v56;
          if (v53 == v57)
          {
            swift_bridgeObjectRelease();
            uint64_t v47 = (uint64_t)v69;
            uint64_t v46 = v67;
            goto LABEL_36;
          }
        }
        swift_bridgeObjectRelease();
        long long v59 = v66;
        *(void *)uint64_t v66 = v52;
        *((void *)v59 + 1) = v57;
        uint64_t v60 = v64;
        *((void *)v59 + 2) = 0;
        *((void *)v59 + 3) = v60;
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v14 = (void (*)(void *, void))static Published.subscript.modify();
        unint64_t v19 = v61;
        unint64_t v37 = *v61;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        *unint64_t v19 = v37;
        if (v62) {
          goto LABEL_45;
        }
        goto LABEL_53;
      case 4uLL:
        if (!MapsFeature_IsEnabled_SearchAndDiscovery()) {
          break;
        }
        id v48 = [v19 openOptions];
        unint64_t v21 = (unint64_t)v69;
        if (v48)
        {
          id v49 = v48;
          uint64_t v50 = (void *)swift_unknownObjectWeakLoadStrong();
          if (v50)
          {
            [v50 resultRefinementsBarDidTapOnOpenOptions:v49 tappedAtIndex:0];

            swift_unknownObjectRelease();
          }
          else
          {
          }
        }
        goto LABEL_49;
      default:
        break;
    }
  }
LABEL_39:
  swift_unknownObjectRelease();
  uint64_t v58 = (uint64_t)v69;
  return sub_100130320(v58);
}

id sub_1001CD208()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ResultRefinementsController();
  return [super dealloc];
}

uint64_t type metadata accessor for ResultRefinementsController()
{
  return self;
}

uint64_t sub_1001CD278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001CD2E0(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C((uint64_t *)&unk_1015D5DE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001CD340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RefinementsBarButtonViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void *assignWithCopy for PlaceSummaryDynamicContextServerOverride(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for PlaceSummaryDynamicContextServerOverride(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PlaceSummaryDynamicContextServerOverride()
{
  return &type metadata for PlaceSummaryDynamicContextServerOverride;
}

id sub_1001CD454(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v27 = *(void *)(v2 - 8);
  *(void *)&double v3 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = a1;
  id result = [a1 serverDynamicContexts:v3];
  if (result)
  {
    id v7 = result;
    NSArray.makeIterator()();
    id v26 = v7;

    unint64_t v8 = sub_10011ECA8();
    dispatch thunk of IteratorProtocol.next()();
    if (v44)
    {
      id v39 = _swiftEmptyArrayStorage;
      uint64_t v29 = v2;
      id v30 = (char *)&type metadata for Any + 8;
      unint64_t v31 = v8;
      uint64_t v32 = v5;
      do
      {
        sub_1000EFD84(&v43, v42);
        sub_1000F2354((uint64_t)v42, (uint64_t)&v41);
        sub_100100830(0, &qword_1015D4028);
        if (swift_dynamicCast())
        {
          id v9 = v40;
          sub_1001CBCC0(v40, v45);
          uint64_t v10 = v45[0];
          uint64_t v11 = v45[1];
          uint64_t v12 = v45[3];
          uint64_t v13 = v45[4];
          uint64_t v14 = v45[5];
          uint64_t v16 = v45[6];
          uint64_t v15 = v45[7];
          uint64_t v33 = v45[8];
          uint64_t v34 = v45[2];
          uint64_t v35 = v45[9];
          uint64_t v36 = v45[10];
          uint64_t v37 = v45[11];
          uint64_t v38 = v45[12];

          sub_1000FF22C((uint64_t)v42);
          sub_1001BDBE8((uint64_t)v45, (uint64_t)v46);
          if (v47)
          {
            if (swift_isUniquelyReferenced_nonNull_native()) {
              unint64_t v17 = v39;
            }
            else {
              unint64_t v17 = sub_1001D0744(0, v39[2] + 1, 1, v39);
            }
            unint64_t v19 = v17[2];
            unint64_t v18 = v17[3];
            if (v19 >= v18 >> 1) {
              unint64_t v17 = sub_1001D0744((void *)(v18 > 1), v19 + 1, 1, v17);
            }
            _OWORD v17[2] = v19 + 1;
            id v39 = v17;
            uint64_t v20 = &v17[13 * v19];
            v20[4] = v10;
            v20[5] = v11;
            _OWORD v20[6] = v34;
            v20[7] = v12;
            v20[8] = v13;
            v20[9] = v14;
            v20[10] = v16;
            v20[11] = v15;
            v20[12] = v33;
            *((unsigned char *)v20 + 104) = v35 & 1;
            v20[14] = v36;
            *((unsigned char *)v20 + 120) = v37 & 1;
            v20[16] = v38;
            uint64_t v2 = v29;
          }
          uint64_t v5 = v32;
        }
        else
        {
          sub_1000FF22C((uint64_t)v42);
        }
        dispatch thunk of IteratorProtocol.next()();
      }
      while (v44);
    }
    else
    {
      id v39 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v2);

    id v21 = v28;
    id v22 = [v28 mapItemIdentifiers];
    if (v22)
    {
      uint64_t v23 = v22;
      sub_100100830(0, (unint64_t *)&qword_1015D5D50);
      unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }

      if (v25 > 0) {
        return (id)v24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

id sub_1001CD888()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___leadingIcon;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___leadingIcon);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___leadingIcon);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setContentMode:0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1001CD9A8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___trailingIcon;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___trailingIcon);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___trailingIcon);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1001CDA6C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___chargerInfoLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___chargerInfoLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___chargerInfoLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v4 setFont:*(void *)(v0 + OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_font)];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1001CDB48()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v1 = [self systemImageNamed:v0];

  if (v1)
  {
    id v2 = [v1 CGImage];

    if (v2)
    {
      id v1 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v2 scale:2 orientation:1.0];
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

id sub_1001CDC24(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_leadingIconString];
  strcpy(&v4[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_leadingIconString], "powerplug.fill");
  v9[15] = -18;
  uint64_t v10 = &v4[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_trailingIconString];
  *(void *)uint64_t v10 = 0xD000000000000019;
  *((void *)v10 + 1) = 0x8000000100F77E00;
  uint64_t v11 = OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_horizontal;
  id v12 = objc_allocWithZone((Class)UIStackView);
  uint64_t v13 = v4;
  *(void *)&v4[v11] = [v12 init];
  uint64_t v14 = self;
  id v15 = [v14 _mapsCar_fontForTextStyle:UIFontTextStyleCaption2 weight:UIFontWeightRegular];
  if (!v15) {
    id v15 = [v14 preferredFontForTextStyle:UIFontTextStyleCaption2];
  }
  *(void *)&v13[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_font] = v15;
  *(void *)&v13[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___leadingIcon] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___trailingIcon] = 0;
  *(void *)&v13[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___chargerInfoLabel] = 0;

  v20.receiver = v13;
  v20.super_class = (Class)type metadata accessor for CarSearchResultEVChargerView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1001CDE14();
  id v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setAccessibilityIdentifier:v18];

  return v17;
}

void sub_1001CDE14()
{
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_horizontal];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setAxis:0];
  [v1 setSpacing:2.0];
  [v0 addSubview:v1];
  id v2 = sub_1001CD888();
  [v1 addArrangedSubview:v2];

  id v3 = sub_1001CDA6C();
  [v1 addArrangedSubview:v3];

  id v4 = sub_1001CD9A8();
  [v1 addArrangedSubview:v4];

  id v5 = [self configurationWithFont:*(void *)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_font]];
  id v6 = sub_1001CD9A8();
  [v6 setPreferredSymbolConfiguration:v5];

  id v7 = sub_1001CD888();
  [v7 setPreferredSymbolConfiguration:v5];

  unint64_t v8 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100F640F0;
  id v10 = [v1 leadingAnchor];
  id v11 = [v0 leadingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v9 + 32) = v12;
  id v13 = [v1 trailingAnchor];
  id v14 = [v0 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v9 + 40) = v15;
  id v16 = [v1 topAnchor];
  id v17 = [v0 topAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v9 + 48) = v18;
  id v19 = [v1 bottomAnchor];
  id v20 = [v0 bottomAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 constant:4.0];

  *(void *)(v9 + 56) = v21;
  id v22 = sub_1001CD888();
  id v23 = [v22 widthAnchor];

  id v24 = [v23 constraintEqualToConstant:8.0];
  *(void *)(v9 + 64) = v24;
  id v25 = sub_1001CD888();
  id v26 = [v25 heightAnchor];

  id v27 = [v26 constraintEqualToConstant:12.0];
  *(void *)(v9 + 72) = v27;
  specialized Array._endMutation()();
  sub_10010B37C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 activateConstraints:isa];
}

void sub_1001CE324(uint64_t a1, int a2)
{
  id v4 = sub_1001CDA6C();
  [v4 setTextColor:a1];

  id v5 = sub_1001CD9A8();
  id v6 = [v5 image];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v6 imageWithRenderingMode:2];
  }
  else
  {
    id v8 = 0;
  }
  [v5 setImage:v8];
  [v5 setTintColor:a1];

  if (a2 == 1)
  {
    id v9 = sub_1001CDA6C();
    id v10 = self;
    id v11 = [v10 systemGreenColor];
    [v9 setTextColor:v11];

    id v12 = sub_1001CD9A8();
    id v13 = [v10 systemGreenColor];
    id v14 = [v12 image];
    if (v14)
    {
      id v15 = v14;
      id v16 = [v14 imageWithRenderingMode:2];
    }
    else
    {
      id v16 = 0;
    }
    [v12 setImage:v16];
    [v12 setTintColor:v13];
  }
}

void sub_1001CE588(int a1, uint64_t a2, unint64_t a3)
{
  id v6 = sub_1001CDA6C();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setText:v7];

  id v8 = sub_1001CD9A8();
  [v8 setHidden:1];

  uint64_t v9 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    if (a1)
    {
      if (a1 != 1)
      {
LABEL_10:
        id v14 = sub_1001CD888();
        id v15 = sub_1001CDB48();
        [v14 setImage:v15];

        id v16 = sub_1001CD888();
        id v17 = [self tertiaryLabelColor];
        id v18 = [v16 image];
        if (v18)
        {
          id v19 = v18;
          id v20 = [v18 imageWithRenderingMode:2];
        }
        else
        {
          id v20 = 0;
        }
        [v16 setImage:v20];
        [v16 setTintColor:v17];

        return;
      }
      id v10 = sub_1001CD9A8();
      [v10 setHidden:0];

      id v11 = sub_1001CD9A8();
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v13 = [self systemImageNamed:v12];
    }
    else
    {
      id v11 = sub_1001CD888();
      id v13 = sub_1001CDB48();
    }
    [v11 setImage:v13];

    goto LABEL_10;
  }
}

id sub_1001CE8C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarSearchResultEVChargerView();
  [super dealloc];
}

uint64_t type metadata accessor for CarSearchResultEVChargerView()
{
  return self;
}

void sub_1001CE9C0()
{
  id v1 = &v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_leadingIconString];
  strcpy(&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_leadingIconString], "powerplug.fill");
  v1[15] = -18;
  objc_super v2 = &v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_trailingIconString];
  *(void *)objc_super v2 = 0xD000000000000019;
  *((void *)v2 + 1) = 0x8000000100F77E00;
  uint64_t v3 = OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_horizontal;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) init];
  id v4 = self;
  id v5 = [v4 _mapsCar_fontForTextStyle:UIFontTextStyleCaption2 weight:UIFontWeightRegular];
  if (!v5) {
    id v5 = [v4 preferredFontForTextStyle:UIFontTextStyleCaption2];
  }
  *(void *)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView_font] = v5;
  *(void *)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___leadingIcon] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___trailingIcon] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps28CarSearchResultEVChargerView____lazy_storage___chargerInfoLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

ValueMetadata *type metadata accessor for MapsAXContainerViewModifier()
{
  return &type metadata for MapsAXContainerViewModifier;
}

uint64_t sub_1001CEB54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001CEB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001CEBF4(a1, &qword_1015D4090, (void (*)(__n128))&static AccessibilityChildBehavior.contain.getter, &qword_1015D4098, &qword_1015D40A0, a2);
}

uint64_t sub_1001CEBA8()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_1001CEBC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001CEBF4(a1, &qword_1015D40B8, (void (*)(__n128))&static AccessibilityChildBehavior.combine.getter, &qword_1015D40C0, &qword_1015D40C8, a2);
}

uint64_t sub_1001CEBF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X3>, void (*a3)(__n128)@<X4>, uint64_t *a4@<X5>, unint64_t *a5@<X6>, uint64_t a6@<X8>)
{
  id v25 = a5;
  uint64_t v27 = a1;
  uint64_t v28 = a6;
  uint64_t v26 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v10 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  NSString v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000FF33C(a2);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v6 + 8);
  uint64_t v24 = *(void *)v6;
  char v19 = *(unsigned char *)(v6 + 16);
  a3(v15);
  uint64_t v20 = sub_1000FF33C(a4);
  uint64_t v21 = sub_1001CF05C(v25, a4);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  sub_1001FB310(v24, v18, v19);
  uint64_t v29 = v20;
  uint64_t v30 = v21;
  swift_getOpaqueTypeConformance2();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t destroy for MapsAccessibilityString(uint64_t a1)
{
  return sub_100182DBC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s4Maps23MapsAccessibilityStringOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10019A644(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MapsAccessibilityString(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10019A644(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100182DBC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MapsAccessibilityString(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100182DBC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapsAccessibilityString(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 242);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xE) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MapsAccessibilityString(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF1)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)id result = a2 - 242;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF2) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapsAXCombinedViewModifier()
{
  return &type metadata for MapsAXCombinedViewModifier;
}

uint64_t sub_1001CEFB0()
{
  return sub_1001CF0E4(&qword_1015D40A8, &qword_1015D40B0, &qword_1015D4098, &qword_1015D40A0);
}

unint64_t sub_1001CEFE8()
{
  unint64_t result = qword_1015D8100;
  if (!qword_1015D8100)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8100);
  }
  return result;
}

uint64_t sub_1001CF040()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001CF05C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001CF0AC()
{
  return sub_1001CF0E4(&qword_1015D40D0, &qword_1015D40D8, &qword_1015D40C0, &qword_1015D40C8);
}

uint64_t sub_1001CF0E4(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    sub_10010118C(a3);
    sub_1001CF05C(a4, a3);
    swift_getOpaqueTypeConformance2();
    sub_1001CEFE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitEVChargersNumber()
{
  return &type metadata for PlaceSummaryUnitEVChargersNumber;
}

void sub_1001CF1BC()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps41HomeListFeatureDiscoverySectionController____lazy_storage___featureDiscoveryDataProvider));
}

id sub_1001CF1CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListFeatureDiscoverySectionController();
  return [super dealloc];
}

void *sub_1001CF320(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4178);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      NSString v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      NSString v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1324(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CF41C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4170);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1230(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CF52C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001D100C(a1, a2, a3, a4, &qword_1015D4160);
}

void *sub_1001CF538(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001CF544(a1, a2, a3, a4, &qword_1015D41E8);
}

void *sub_1001CF544(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000FF33C(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      _OWORD v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1E28(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CF650(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D6F00, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

void *sub_1001CF684(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D41A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1900(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CF794(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D6FF0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D171C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CF8B4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D6F40);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1814(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CF9C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D41A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1628(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CFAF0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4198);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D19F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CFC00(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001CFFB0(a1, a2, a3, a4, &qword_1015D4158);
}

uint64_t sub_1001CFC0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000FF33C(&qword_1015D4200);
  uint64_t v10 = *(void *)(sub_1000FF33C(&qword_1015CF9B8) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  _OWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1000FF33C(&qword_1015CF9B8) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001D1BD4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1001CFE7C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D41F8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1D30(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001CFFA4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001CFFB0(a1, a2, a3, a4, &qword_1015D41F0);
}

void *sub_1001CFFB0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000FF33C(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 29;
      }
      _OWORD v11[2] = v9;
      v11[3] = 2 * (v13 >> 2);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= (void *)((char *)a4 + 4 * v9 + 32)) {
          memmove(v14, a4 + 4, 4 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1AE8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D00BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D4120, type metadata accessor for PlaceSummaryViewModelUnit, type metadata accessor for PlaceSummaryViewModelUnit);
}

uint64_t sub_1001D00F0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000FF33C(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1001D22C8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1001D0370(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D4210, (uint64_t (*)(void))&type metadata accessor for GridItem, (uint64_t (*)(void))&type metadata accessor for GridItem);
}

void *sub_1001D03A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D1BD0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D1814(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D04B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001CF544(a1, a2, a3, a4, &qword_1015D6FE0);
}

void *sub_1001D04C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D41E0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1F14(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D05E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4168);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1138(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D0710(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D41C0, type metadata accessor for RefinementsBarButtonViewModel, type metadata accessor for RefinementsBarButtonViewModel);
}

void *sub_1001D0744(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4188);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D200C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D0870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D4128, type metadata accessor for MapsElevationChartViewModel.ElevationDatum, type metadata accessor for MapsElevationChartViewModel.ElevationDatum);
}

uint64_t sub_1001D08A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D41C8, type metadata accessor for PlaceSummaryViewModelLine, type metadata accessor for PlaceSummaryViewModelLine);
}

uint64_t sub_1001D08D8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D41D0, type metadata accessor for PlaceSummaryViewModelActionButtons.Button, type metadata accessor for PlaceSummaryViewModelActionButtons.Button);
}

uint64_t sub_1001D090C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D41D8, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button, type metadata accessor for PlaceSummaryViewModelRefinementButtons.Button);
}

uint64_t sub_1001D0940(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, &qword_1015D41B8, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element, type metadata accessor for RefinementsBarButtonViewModel.Submenu.Element);
}

void *sub_1001D0974(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4208);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D2424(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D0A84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4190);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D2530(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D0B94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4180);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D2734(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D0CA4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4150);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D263C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D0DCC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4130);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1001D140C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D0EDC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000FF33C(&qword_1015D4140);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1518(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001D1000(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001D100C(a1, a2, a3, a4, &qword_1015D4148);
}

void *sub_1001D100C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000FF33C(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      _OWORD v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1001D1324(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D1104(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1001D00F0(a1, a2, a3, a4, (uint64_t *)&unk_1015D6FC0, (uint64_t (*)(void))type metadata accessor for PlaceEntity, (uint64_t (*)(void))type metadata accessor for PlaceEntity);
}

uint64_t sub_1001D1138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1230(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001D1324(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D140C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000FF33C(&qword_1015D4138);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1518(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_1000FF33C(&qword_1015D6F20);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1628(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D171C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001D1814(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1900(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D19F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001D1AE8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1BD4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_1000FF33C(&qword_1015CF9B8) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1D30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1001D1E28(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D1F14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D200C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D2100(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D68C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001D2160()
{
  unint64_t result = qword_1015D4118;
  if (!qword_1015D4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4118);
  }
  return result;
}

uint64_t sub_1001D21B4()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v5);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v5);
  if (!Strong)
  {
    long long v7 = 0u;
    long long v8 = 0u;
    long long v6 = 0u;
    return sub_1001D2100((uint64_t)&v6);
  }
  sub_10025DE18(&v6);
  swift_unknownObjectRelease();
  if (!(void)v6) {
    return sub_1001D2100((uint64_t)&v6);
  }
  v5[0] = v6;
  v5[1] = v7;
  void v5[2] = v8;
  sub_1001D2828((uint64_t)v5 + 8, (uint64_t)v4);
  sub_100101314((long long *)v4, (uint64_t)&v6);
  sub_1000FF33C((uint64_t *)&unk_1015D1C50);
  if (swift_dynamicCast())
  {
    id v2 = v4[0];
    [v4[0] markAsDisplayed];
  }
  return sub_1000FFC8C((uint64_t)v5);
}

uint64_t sub_1001D22C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D2424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D81E0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D2530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000FF33C((uint64_t *)&unk_1015D98B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D263C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D2734(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001D2828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C((uint64_t *)&unk_1015D6960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitHikeRouteElevationGainLoss()
{
  return &type metadata for PlaceSummaryUnitHikeRouteElevationGainLoss;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitNumPlacesInGuide()
{
  return &type metadata for PlaceSummaryUnitNumPlacesInGuide;
}

id MapsHomeQuickActionMenuPresenter.__allocating_init(collectionView:)(uint64_t a1)
{
  unsigned int v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return [super initWithView:a1];
}

id MapsHomeQuickActionMenuPresenter.init(collectionView:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView] = a1;
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MapsHomeQuickActionMenuPresenter();
  return [super initWithView:a1];
}

uint64_t MapsHomeQuickActionMenuPresenter.shouldBeginOrbGesture(atLocation:in:)(void *a1, double a2, double a3)
{
  objc_super v4 = v3;
  uint64_t v8 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  unint64_t v18 = (char *)v31 - v17;
  uint64_t v19 = OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView;
  uint64_t result = (uint64_t)[a1 isDescendantOfView:*(void *)&v4[OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView] v16];
  if (!result) {
    return result;
  }
  [*(id *)&v4[v19] convertPoint:a1 fromCoordinateSpace:a2];
  id v21 = [v4[v19] indexPathForItemAtPoint:];
  if (!v21)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_11;
  }
  unint64_t v22 = v21;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v23(v10, v14, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_11:
    sub_1001D334C((uint64_t)v10);
    return 0;
  }
  v23(v18, v10, v11);
  id v24 = *(id *)&v4[v19];
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v26 = [v24 cellForItemAtIndexPath:isa];

  if (!v26)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    return 0;
  }
  v31[1] = &OBJC_PROTOCOL____TtP4Maps31MapsHomeQuickActionMenuProvider_;
  uint64_t v27 = (void *)swift_dynamicCastObjCProtocolConditional();
  if (!v27)
  {

    goto LABEL_13;
  }
  id v28 = [v27 personalizedItemForQuickActionMenu];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);

    return 0;
  }
  [v4 setPlace:v28];
  id v29 = [v4 delegate];
  if (v29)
  {
    id v30 = [v29 uiTargetForQuickActionMenu];
    swift_unknownObjectRelease();
    [v4 setUiTarget:v30];
  }
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  return 1;
}

id MapsHomeQuickActionMenuPresenter.__allocating_init(view:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithView:a1];

  return v3;
}

void MapsHomeQuickActionMenuPresenter.init(view:)()
{
}

id MapsHomeQuickActionMenuPresenter.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MapsHomeQuickActionMenuPresenter();
  return [super dealloc];
}

id TwoLineCollectionViewListCell.personalizedItemForQuickActionMenu.getter()
{
  id v1 = [v0 viewModel];
  id v2 = v1;
  if (v1)
  {
    id v3 = (uint64_t (**)(void))[v1 personalizedItemForQuickActionMenuCreator];
    swift_unknownObjectRelease();
    if (v3)
    {
      id v2 = (id)v3[2](v3);
      _Block_release(v3);
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id _s4Maps0A28HomeQuickActionMenuPresenterC07contextE11Interaction_13configuration37highlightPreviewForItemWithIdentifierSo010UITargetedK0CSgSo09UIContexteH0C_So0qE13ConfigurationCSo9NSCopying_ptF_0()
{
  uint64_t v1 = sub_1000FF33C(&qword_1015D4B40);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView;
  id v12 = 0;
  if (!-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(*(void **)&v0[OBJC_IVAR____TtC4Maps32MapsHomeQuickActionMenuPresenter_collectionView]))
  {
    id v13 = *(id *)&v0[v11];
    [v0 location];
    id v14 = [v13 indexPathForItemAtPoint:];

    if (v14)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v15(v3, v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        v15(v10, v3, v4);
        id v16 = *(id *)&v0[v11];
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v18 = [v16 cellForItemAtIndexPath:isa];

        if (v18)
        {
          id v12 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v18];
          id v19 = [v12 parameters];
          id v20 = [self clearColor];
          [v19 setBackgroundColor:v20];

          (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
          return v12;
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    sub_1001D334C((uint64_t)v3);
    return 0;
  }
  return v12;
}

uint64_t sub_1001D334C(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D4B40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitRealTimeEVCharger()
{
  return &type metadata for PlaceSummaryUnitRealTimeEVCharger;
}

uint64_t sub_1001D3428(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v18 = (void (*)(uint64_t))swift_allocObject();
  *((void *)v18 + 2) = v17;
  *((void *)v18 + 3) = a8;
  *((void *)v18 + 4) = a9;
  type metadata accessor for RefinementsMultiSelectCellViewModel(0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000F4F24(a8);
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v20 = v19 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_labelWidth;
  *(double *)uint64_t v20 = a3;
  *(unsigned char *)(v20 + 8) = 0;
  *(double *)(v19 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_maxWidth) = a4;
  id v21 = (void *)(v19 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_allowsSelection);
  *id v21 = a6;
  v21[1] = a7;
  uint64_t v22 = (void (**)(uint64_t))(v19 + OBJC_IVAR____TtC4Maps35RefinementsMultiSelectCellViewModel_tapHandler);
  *uint64_t v22 = sub_1001D3D18;
  v22[1] = v18;
  swift_release();
  *(void *)(v9 + OBJC_IVAR____TtC4Maps36AllRefinementsMultiSelectElementCell_viewModel) = v19;
  return swift_release();
}

void sub_1001D35DC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC4Maps36AllRefinementsMultiSelectElementCell_viewModel))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      uint64_t Strong = static Published.subscript.setter();
    }
    if (a3) {
      a3(Strong);
    }
  }
}

void sub_1001D37F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D4278);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtC4Maps36AllRefinementsMultiSelectElementCell_viewModel))
  {
    type metadata accessor for RefinementMultiSelectButton(0);
    sub_1001D3E84(&qword_1015D4280, (void (*)(uint64_t))type metadata accessor for RefinementMultiSelectButton);
    swift_retain();
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    v7[3] = v2;
    _OWORD v7[4] = sub_1001D3E28();
    sub_100100B1C(v7);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    UICollectionViewCell.contentConfiguration.setter();
    swift_release();
  }
}

uint64_t sub_1001D3990@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for RefinementsMultiSelectCellViewModel(0);
  sub_1001D3E84(&qword_1015D4290, (void (*)(uint64_t))type metadata accessor for RefinementsMultiSelectCellViewModel);
  swift_retain();
  *a1 = ObservedObject.init(wrappedValue:)();
  a1[1] = v2;
  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for RefinementMultiSelectButton(0) + 20);
  uint64_t v4 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v5 = type metadata accessor for RoundedCornerStyle();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(v3, v4, v5);
}

id sub_1001D3C30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AllRefinementsMultiSelectElementCell();
  return [super dealloc];
}

uint64_t type metadata accessor for AllRefinementsMultiSelectElementCell()
{
  return self;
}

uint64_t sub_1001D3C98()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D3CD0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001D3D18(uint64_t a1)
{
  sub_1001D35DC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1001D3D24@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1001D3DA8()
{
  return static Published.subscript.setter();
}

uint64_t sub_1001D3E20@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001D3990(a1);
}

unint64_t sub_1001D3E28()
{
  unint64_t result = qword_1015D4288;
  if (!qword_1015D4288)
  {
    sub_10010118C(&qword_1015D4278);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4288);
  }
  return result;
}

uint64_t sub_1001D3E84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D3ECC()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1001D3EF0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitPrice()
{
  return &type metadata for PlaceSummaryUnitPrice;
}

uint64_t sub_1001D3F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshotLegacy;
  swift_beginAccess();
  uint64_t result = sub_1000FF27C(v3, (uint64_t)v11, &qword_1015D68C0);
  if (*(void *)&v11[0])
  {
    long long v5 = v11[1];
    *(_OWORD *)a1 = v11[0];
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v11[2];
  }
  else
  {
    sub_1000FF2E0((uint64_t)v11, &qword_1015D68C0);
    *(void *)&v11[0] = *(void *)(v1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration + 48);
    uint64_t v6 = *(void **)&v11[0];
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    sub_10010E738((uint64_t)&v10, (uint64_t)v11 + 8);
    id v7 = v6;
    id v8 = sub_10010BE34();
    *(void *)(a1 + 32) = &type metadata for HomeListFavoritesCellModelLegacy;
    *(void *)(a1 + 40) = sub_1001D4784();
    uint64_t v9 = swift_allocObject();
    *(void *)(a1 + 8) = v9;
    sub_1001D47DC((uint64_t)v11, v9 + 16);
    *(void *)a1 = v8;
    sub_1000FF3F0(a1, (uint64_t)v11);
    swift_beginAccess();
    sub_10010E570((uint64_t)v11, v3);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1001D4098()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesIdentifierPath));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___placeLibraryIdentifierPath));
  sub_1000FF2E0(v0 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshot, &qword_1015D68C0);
  return sub_1000FF2E0(v0 + OBJC_IVAR____TtC4Maps34HomeListFavoritesSectionController____lazy_storage___favoritesCellSnapshotLegacy, &qword_1015D68C0);
}

id sub_1001D4124()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HomeListFavoritesSectionController();
  return [super dealloc];
}

id sub_1001D41E8()
{
  sub_1000F1C90(v0 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v3);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_1000F1BD8((uint64_t)v3);
  if (Strong)
  {
    [Strong homeSectionHeaderButtonTapped:2];
    swift_unknownObjectRelease();
  }
  return [self captureUserAction:2045 target:8 value:0];
}

void sub_1001D429C(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  sub_1000F1C90((uint64_t)a1 + OBJC_IVAR____TtC4Maps25HomeListSectionController_configuration, (uint64_t)v10);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v8 = a3;
  id v9 = a1;
  sub_1000F1BD8((uint64_t)v10);
  if (Strong)
  {
    [Strong *a4 v8];

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1001D44E0()
{
  sub_100010A24((uint64_t)v10);
  if (!v11)
  {
    id v7 = &qword_1015DC240;
    id v8 = v10;
    return sub_1000FF2E0((uint64_t)v8, v7);
  }
  sub_1000FF27C((uint64_t)&v12, (uint64_t)v9, (uint64_t *)&unk_1015D4350);
  sub_1001D4730((uint64_t)v10);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    id v7 = (uint64_t *)&unk_1015D4350;
    id v8 = v9;
    return sub_1000FF2E0((uint64_t)v8, v7);
  }
  uint64_t v1 = Strong;
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    sub_1000FF2E0((uint64_t)v9, (uint64_t *)&unk_1015D4350);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D4610()
{
  sub_100010A24((uint64_t)v2);
  if (v2[1])
  {
    uint64_t v0 = v3;
    sub_1001D4730((uint64_t)v2);
  }
  else
  {
    sub_1000FF2E0((uint64_t)v2, &qword_1015DC240);
    return 0;
  }
  return v0;
}

uint64_t sub_1001D4670()
{
  return sub_1001D44E0();
}

id PlaceLibraryHomeAction.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

uint64_t type metadata accessor for PlaceLibraryHomeAction()
{
  return self;
}

uint64_t sub_1001D4730(uint64_t a1)
{
  return a1;
}

unint64_t sub_1001D4784()
{
  unint64_t result = qword_1015D4368;
  if (!qword_1015D4368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4368);
  }
  return result;
}

uint64_t sub_1001D47DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001D483C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for PlaceSummaryUnitSecondaryName()
{
  return &type metadata for PlaceSummaryUnitSecondaryName;
}

id sub_1001D493C()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView____lazy_storage___descriptionLabel;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView____lazy_storage___descriptionLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView____lazy_storage___descriptionLabel);
  }
  else
  {
    id v4 = sub_1001D49E4();
    long long v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001D49E4()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  id v2 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v0 setFont:v2];

  id v3 = v0;
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setAccessibilityIdentifier:v4];

  [v3 setNumberOfLines:0];
  return v3;
}

id sub_1001D4B0C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_horizontalMargin;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  [v10 horizontalContentInset];
  *(void *)&v4[v9] = v12;
  *(void *)&v11[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_verticalMargin] = 0x4020000000000000;
  *(void *)&v11[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView____lazy_storage___descriptionLabel] = 0;
  id v13 = &v11[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_tapActionHandler];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for RoutingAdvisoryInfoFooterView();
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  sub_1001D4EE8();

  return v14;
}

id sub_1001D4C1C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_horizontalMargin;
  NSString v4 = self;
  long long v5 = v1;
  [v4 horizontalContentInset];
  *(void *)&v1[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_verticalMargin] = 0x4020000000000000;
  *(void *)&v5[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView____lazy_storage___descriptionLabel] = 0;
  id v7 = &v5[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_tapActionHandler];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for RoutingAdvisoryInfoFooterView();
  [super initWithCoder:a1];

  return v8;
}

void sub_1001D4EE8()
{
  id v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setAccessibilityIdentifier:v2];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = sub_1001D493C();
  [v1 addSubview:v3];

  NSString v4 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100F62DB0;
  id v6 = sub_1001D493C();
  id v7 = [v6 leadingAnchor];

  id v8 = [v1 leadingAnchor];
  double v9 = *(double *)&v1[OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_horizontalMargin];
  id v10 = [v7 constraintEqualToAnchor:v8 constant:v9];

  *(void *)(v5 + 32) = v10;
  id v11 = sub_1001D493C();
  id v12 = [v11 topAnchor];

  id v13 = [v1 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:8.0];

  *(void *)(v5 + 40) = v14;
  id v15 = sub_1001D493C();
  id v16 = [v15 trailingAnchor];

  id v17 = [v1 trailingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 constant:-v9];

  *(void *)(v5 + 48) = v18;
  id v19 = sub_1001D493C();
  id v20 = [v19 bottomAnchor];

  id v21 = [v1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:-8.0];

  *(void *)(v5 + 56) = v22;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];

  id v24 = sub_1001D493C();
  [v24 setUserInteractionEnabled:1];

  id v25 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"advisoryInfoTapped:"];
  id v26 = sub_1001D493C();
  [v26 addGestureRecognizer:v25];
}

void sub_1001D5270(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1000FF33C(&qword_1015D6B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100F5CFA0;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v5 = self;
  uint64_t v38 = NSForegroundColorAttributeName;
  id v6 = [v5 systemGrayColor];
  uint64_t v7 = sub_100100830(0, (unint64_t *)&qword_1015CEFF0);
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSFontAttributeName;
  id v8 = self;
  uint64_t v37 = NSFontAttributeName;
  id v9 = [v8 system15];
  uint64_t v10 = sub_1000FF33C(&qword_1015D43C0);
  *(void *)(inited + 104) = v10;
  *(void *)(inited + 80) = v9;
  unint64_t v11 = sub_1001163E4(inited);
  id v12 = [a1 noticeText];
  if (v12)
  {
    id v13 = v12;
    id v14 = [objc_allocWithZone((Class)GEOComposedString) initWithGeoFormattedString:v12];

    id v15 = [objc_allocWithZone((Class)MKServerFormattedString) initWithComposedString:v14];
    sub_1001D5730(v11);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v15 multiPartAttributedStringWithAttributes:isa];

    if (v17)
    {
      id v18 = [v17 attributedString];

      if (v18)
      {
        id v19 = v18;
        uint64_t v20 = swift_initStackObject();
        *(_OWORD *)(v20 + 16) = xmmword_100F5CFA0;
        *(void *)(v20 + 32) = v38;
        id v21 = v38;
        *(void *)(v20 + 40) = [v5 systemBlueColor];
        *(void *)(v20 + 64) = v7;
        *(void *)(v20 + 72) = v37;
        id v22 = v37;
        id v23 = [v8 system15];
        *(void *)(v20 + 104) = v10;
        *(void *)(v20 + 80) = v23;
        sub_1001163E4(v20);
        if (qword_1015CBD78 != -1) {
          swift_once();
        }
        v42._uint64_t countAndFlagsBits = 0xD000000000000045;
        v42._uint64_t object = (void *)0x8000000100F7B480;
        v24._uint64_t object = (void *)0x8000000100F7B450;
        v24._uint64_t countAndFlagsBits = 0xD000000000000021;
        v25._uint64_t countAndFlagsBits = 0x6F4D206E7261654CLL;
        v25._uint64_t object = (void *)0xEA00000000006572;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)qword_101611820, v25, v42);
        id v26 = objc_allocWithZone((Class)NSAttributedString);
        NSString v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1001D5DF8();
        Class v28 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v29 = [v26 initWithString:v27 attributes:v28];

        id v30 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v19];
        id v31 = objc_allocWithZone((Class)NSAttributedString);
        NSString v32 = String._bridgeToObjectiveC()();
        id v33 = [v31 initWithString:v32];

        [v30 appendAttributedString:v33];
        [v30 appendAttributedString:v29];
        id v34 = sub_1001D493C();
        [v34 setAttributedText:v30];

        uint64_t v35 = (uint64_t *)(v39 + OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_tapActionHandler);
        uint64_t v36 = *(void *)(v39 + OBJC_IVAR____TtC4Maps29RoutingAdvisoryInfoFooterView_tapActionHandler);
        *uint64_t v35 = a2;
        v35[1] = a3;
        sub_1000F4F24(a2);
        sub_10006C5D8(v36);

        id v14 = v29;
        id v15 = v30;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001D5730(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000FF33C(&qword_1015CCF10);
    NSString v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    NSString v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  id v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    sub_1000F2354(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    uint64_t v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for Key(0);
    id v18 = v17;
    swift_dynamicCast();
    sub_1000EFD84((_OWORD *)((char *)v37 + 8), v31);
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1000EFD84(v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1000EFD84(v35, v36);
    sub_1000EFD84(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~v6[v20 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~v6[v20 >> 6])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v6[v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1000EFD84(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1000F84F4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_1001D5D50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RoutingAdvisoryInfoFooterView();
  return [super dealloc];
}

uint64_t type metadata accessor for RoutingAdvisoryInfoFooterView()
{
  return self;
}

unint64_t sub_1001D5DF8()
{
  unint64_t result = qword_1015CD440;
  if (!qword_1015CD440)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015CD440);
  }
  return result;
}

uint64_t sub_1001D5E50()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001D5F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC4Maps25CuratedGuideTableViewCell_viewModel] = 0;
  if (a3)
  {
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for CuratedGuideTableViewCell();
  [super initWithStyle:a1 reuseIdentifier:v6];

  id v8 = v7;
  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  [v7 setAccessibilityIdentifier:v9];

  id v10 = [v7 contentView];
  unint64_t v11 = self;
  id v12 = [v11 clearColor];
  [v10 setBackgroundColor:v12];

  id v13 = v7;
  id v14 = [v11 clearColor];
  [v13 setBackgroundColor:v14];

  return v13;
}

void sub_1001D63A0(void *a1)
{
  uint64_t v2 = v1;
  swift_unknownObjectWeakAssign();
  uint64_t v4 = OBJC_IVAR____TtC4Maps25CuratedGuideTableViewCell_viewModel;
  unint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC4Maps25CuratedGuideTableViewCell_viewModel);
  if (v5)
  {
    type metadata accessor for CuratedGuideViewModel();
    id v6 = a1;
    id v7 = v5;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      return;
    }
    NSString v9 = *(void **)(v2 + v4);
  }
  else
  {
    NSString v9 = 0;
  }
  *(void *)(v2 + v4) = a1;
  id v10 = a1;

  sub_1002D95D4(v10);
}

void sub_1001D64F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000FF33C(&qword_1015D4408);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v7 = (char *)v25 - v6;
  __chkstk_darwin(v8);
  id v10 = (char *)v25 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)v25 - v12;
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  int64_t v15 = (objc_class *)type metadata accessor for CuratedGuideTableViewCell();
  v28.receiver = v0;
  v28.super_class = v15;
  [super _bridgedUpdateConfigurationUsingState:isa];

  objc_super v16 = *(void **)&v0[OBJC_IVAR____TtC4Maps25CuratedGuideTableViewCell_viewModel];
  if (v16)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      v25[0] = v13;
      uint64_t v18 = Strong;
      id v19 = v16;
      unint64_t v20 = (void *)UICellConfigurationState.traitCollection.getter();
      [v20 userInterfaceStyle];

      __chkstk_darwin(v21);
      v25[-4] = v19;
      v25[-3] = v1;
      v25[1] = v18;
      v25[-2] = v18;
      LOBYTE(v25[-1]) = v22;
      sub_1000FF33C(&qword_1015D4410);
      sub_1001D7224();
      UIHostingConfiguration<>.init(content:)();
      static Edge.Set.leading.getter();
      UIHostingConfiguration.margins(_:_:)();
      unint64_t v23 = *(void (**)(char *, uint64_t))(v26 + 8);
      v23(v4, v2);
      static Edge.Set.trailing.getter();
      UIHostingConfiguration.margins(_:_:)();
      v23(v7, v2);
      static Edge.Set.top.getter();
      BOOL v24 = (char *)v25[0];
      UIHostingConfiguration.margins(_:_:)();
      v23(v10, v2);
      static Edge.Set.bottom.getter();
      v27[3] = v2;
      v27[4] = sub_1001010F8(&qword_1015D4488, &qword_1015D4408);
      sub_100100B1C(v27);
      UIHostingConfiguration.margins(_:_:)();
      v23(v24, v2);
      UITableViewCell.contentConfiguration.setter();

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1001D68A0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v35 = a4;
  uint64_t v38 = (char *)a2;
  uint64_t v40 = a5;
  uint64_t v34 = sub_1000FF33C(&qword_1015D4480);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000FF33C(&qword_1015D4458);
  __chkstk_darwin(v41);
  id v10 = (uint64_t *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  id v13 = (char *)&v34 - v12;
  uint64_t v39 = sub_1000FF33C(&qword_1015D4490);
  __chkstk_darwin(v39);
  int64_t v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v16 = a1[OBJC_IVAR____TtC4Maps21CuratedGuideViewModel_useRichLayout];
  type metadata accessor for CuratedGuideViewModel();
  sub_1001D7614();
  uint64_t v36 = EnvironmentObject.init()();
  uint64_t v37 = v17;
  uint64_t v18 = static ObservableObject.environmentStore.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (v16 == 1)
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = a3;
    uint64_t v22 = v37;
    *int64_t v15 = v36;
    v15[1] = v22;
    _OWORD v15[2] = v18;
    v15[3] = (uint64_t)a1;
    _OWORD v15[4] = KeyPath;
    v15[5] = (uint64_t)sub_1001D7798;
    v15[6] = v21;
    swift_storeEnumTagMultiPayload();
    unint64_t v23 = a1;
    swift_unknownObjectRetain();
    sub_1000FF33C(&qword_1015D4428);
    sub_1001D72A0();
    sub_1001D745C();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v20;
    *(void *)(v25 + 24) = a3;
    uint64_t v26 = a1;
    swift_unknownObjectRetain();
    uint64_t v27 = static Alignment.center.getter();
    uint64_t v38 = v13;
    uint64_t v28 = v18;
    uint64_t v30 = v29;
    sub_1001D6DA8(v35 & 1, (uint64_t)v8);
    id v31 = (uint64_t *)&v8[*(int *)(v34 + 36)];
    *id v31 = v27;
    v31[1] = v30;
    sub_1000FF27C((uint64_t)v8, (uint64_t)v10 + *(int *)(v41 + 36), &qword_1015D4480);
    uint64_t v32 = v37;
    *id v10 = v36;
    v10[1] = v32;
    v10[2] = v28;
    v10[3] = (uint64_t)a1;
    v10[4] = KeyPath;
    v10[5] = (uint64_t)sub_1001D76B0;
    void v10[6] = v25;
    sub_1000FF2E0((uint64_t)v8, &qword_1015D4480);
    uint64_t v33 = (uint64_t)v38;
    sub_100101750((uint64_t)v10, (uint64_t)v38, &qword_1015D4458);
    sub_1000FF27C(v33, (uint64_t)v15, &qword_1015D4458);
    swift_storeEnumTagMultiPayload();
    sub_1000FF33C(&qword_1015D4428);
    sub_1001D72A0();
    sub_1001D745C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000FF2E0(v33, &qword_1015D4458);
  }
}

void sub_1001D6C54(unint64_t *a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v6 = (void *)Strong;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_14:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10 != 1)
      {
LABEL_12:

        return;
      }
    }
    else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
    {
      goto LABEL_12;
    }
    [a3 didTapOnCuratedGuide:v9 withCell:v6];
    goto LABEL_12;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v4 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1001D6DA8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D44A0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UnevenRoundedRectangle();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_1000FF33C(&qword_1015D44A8);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    id v13 = [self tertiarySystemGroupedBackgroundColor];
    uint64_t v14 = Color.init(_:)();
  }
  else
  {
    uint64_t v14 = static Color.white.getter();
  }
  uint64_t v15 = v14;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = (char *)v9 + *(int *)(v7 + 20);
  uint64_t v18 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v19 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v17, v18, v19);
  RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
  *uint64_t v9 = v20;
  v9[1] = v21;
  void v9[2] = v22;
  v9[3] = v23;
  sub_1001D76D8((uint64_t)v9, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v4 + 36)] = 256;
  sub_1000FF27C((uint64_t)v6, (uint64_t)v12 + *(int *)(v10 + 36), &qword_1015D44A0);
  *uint64_t v12 = KeyPath;
  v12[1] = v15;
  swift_retain();
  swift_retain();
  sub_1000FF2E0((uint64_t)v6, &qword_1015D44A0);
  sub_1001D773C((uint64_t)v9);
  swift_release();
  swift_release();
  return sub_100101750((uint64_t)v12, a2, &qword_1015D44A8);
}

id sub_1001D7170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CuratedGuideTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for CuratedGuideTableViewCell()
{
  return self;
}

uint64_t sub_1001D7214@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D68A0(*(unsigned __int8 **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

unint64_t sub_1001D7224()
{
  unint64_t result = qword_1015D4418;
  if (!qword_1015D4418)
  {
    sub_10010118C(&qword_1015D4410);
    sub_1001D72A0();
    sub_1001D745C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4418);
  }
  return result;
}

unint64_t sub_1001D72A0()
{
  unint64_t result = qword_1015D4420;
  if (!qword_1015D4420)
  {
    sub_10010118C(&qword_1015D4428);
    sub_1001D7364((unint64_t *)&qword_1015D4430, (uint64_t *)&unk_1015D5540, (void (*)(void))sub_1001D7408);
    sub_1001010F8((unint64_t *)&unk_1015D5610, &qword_1015D4448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4420);
  }
  return result;
}

uint64_t sub_1001D7364(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10010118C(a2);
    a3();
    sub_1001010F8((unint64_t *)&unk_1015D5550, &qword_1015D4440);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001D7408()
{
  unint64_t result = qword_1015D4438;
  if (!qword_1015D4438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4438);
  }
  return result;
}

unint64_t sub_1001D745C()
{
  unint64_t result = qword_1015D4450;
  if (!qword_1015D4450)
  {
    sub_10010118C(&qword_1015D4458);
    sub_1001D74FC();
    sub_1001010F8(&qword_1015D4478, &qword_1015D4480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4450);
  }
  return result;
}

unint64_t sub_1001D74FC()
{
  unint64_t result = qword_1015D4460;
  if (!qword_1015D4460)
  {
    sub_10010118C(&qword_1015D4468);
    sub_1001D7364((unint64_t *)&qword_1015D5560, &qword_1015D4470, (void (*)(void))sub_1001D75C0);
    sub_1001010F8((unint64_t *)&unk_1015D5610, &qword_1015D4448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4460);
  }
  return result;
}

unint64_t sub_1001D75C0()
{
  unint64_t result = qword_1015D5570;
  if (!qword_1015D5570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D5570);
  }
  return result;
}

unint64_t sub_1001D7614()
{
  unint64_t result = qword_1015D4498;
  if (!qword_1015D4498)
  {
    type metadata accessor for CuratedGuideViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4498);
  }
  return result;
}

uint64_t sub_1001D7674()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001D76B0(unint64_t *a1)
{
  sub_1001D6C54(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001D76D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnevenRoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D773C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnevenRoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001D77BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v8[6] = a8;
  v8[7] = v14;
  v8[4] = a6;
  v8[5] = a7;
  void v8[2] = a4;
  v8[3] = a5;
  uint64_t v9 = type metadata accessor for Date();
  v8[8] = v9;
  v8[9] = *(void *)(v9 - 8);
  v8[10] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Location();
  v8[11] = v10;
  v8[12] = *(void *)(v10 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  sub_1000FF33C(&qword_1015D9920);
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ClientOrigin();
  v8[22] = v11;
  v8[23] = *(void *)(v11 - 8);
  v8[24] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v8[25] = swift_task_alloc();
  return _swift_task_switch(sub_1001D79FC, 0, 0);
}

uint64_t sub_1001D79FC()
{
  uint64_t v1 = v0[2];
  (*(void (**)(void, void, void))(v0[23] + 104))(v0[24], enum case for ClientOrigin.other(_:), v0[22]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  uint64_t v2 = Session.init(_:)();
  uint64_t v3 = OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_handle;
  v0[26] = v2;
  v0[27] = v3;
  uint64_t v4 = v1 + v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[28] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1001D7B1C;
  uint64_t v6 = v0[21];
  return Session._maps_location(for:reverseGeocode:maxAge:)(v6, v4, 0, 1.79769313e308);
}

uint64_t sub_1001D7B1C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1001D89C8;
  }
  else
  {
    uint64_t v1 = sub_1001D7C34;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1001D7C34()
{
  uint64_t v1 = v0[2] + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_coordinate;
  if ((*(unsigned char *)(v1 + 16) & 1) == 0)
  {
    double v3 = *(double *)v1;
    double v2 = *(double *)(v1 + 8);
    if (sub_1001DA164(*(double *)v1, v2))
    {
      if (qword_1015CBD48 != -1) {
        swift_once();
      }
      uint64_t v4 = type metadata accessor for Logger();
      sub_1000F2248(v4, (uint64_t)qword_101611790);
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Using provided coordinate to resolve find my waypoint", v7, 2u);
        swift_slowDealloc();
      }
      uint64_t v8 = v0 + 12;
      uint64_t v9 = v0[12];
      uint64_t v11 = v0[20];
      uint64_t v10 = v0[21];
      uint64_t v13 = v0 + 11;
      uint64_t v12 = v0[11];

      sub_1001DA09C(v10, v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v12) == 1)
      {
        uint64_t v14 = v0 + 10;
        sub_1001DA104(v0[20]);
        Date.init()();
        Date.timeIntervalSinceReferenceDate.getter();
        double v16 = v15;
        uint64_t v8 = v0 + 9;
        uint64_t v13 = v0 + 8;
      }
      else
      {
        uint64_t v14 = v0 + 16;
        uint64_t v41 = v0[9];
        uint64_t v40 = v0[10];
        uint64_t v42 = v0[8];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 32))(v0[16], v0[20], v0[11]);
        Location.timestamp.getter();
        Date.init(timeIntervalSince1970:)();
        Date.timeIntervalSinceReferenceDate.getter();
        double v16 = v43;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      }
      uint64_t v44 = *v14;
      uint64_t v45 = *v13;
      uint64_t v46 = *v8;
      uint64_t v47 = v0[21];
      id v48 = (void (*)(void *, uint64_t))v0[6];
      id v49 = (void *)v0[7];
      uint64_t v51 = v0[4];
      uint64_t v50 = v0[5];
      uint64_t v52 = v0[2];
      uint64_t v53 = v0[3];
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      id v54 = sub_1001D953C(v53, v51, v50, v48, v49, v3, v2, v16);
      swift_release();
      sub_1001DA104(v47);
      *(void *)(v52 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v54;
LABEL_24:
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v73 = (uint64_t (*)(void))v0[1];
      return v73();
    }
  }
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[12];
  sub_1001DA09C(v0[21], v17);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  v0[29] = (uint64_t)v20;
  v0[30] = (v19 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v20(v17, 1, v18) == 1)
  {
    sub_1001DA104(v0[19]);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 32))(v0[15], v0[19], v0[11]);
    Location.latitude.getter();
    double v22 = v21;
    Location.longitude.getter();
    if (sub_1001DA164(v22, v23))
    {
      uint64_t v25 = v0[9];
      uint64_t v24 = v0[10];
      uint64_t v26 = v0[8];
      Date.init()();
      Date.timeIntervalSince1970.getter();
      double v28 = v27;
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v29(v24, v26);
      Location.timestamp.getter();
      double v31 = v28 - v30;
      GEOConfigGetDouble();
      if (v31 <= v32)
      {
        if (qword_1015CBD48 != -1) {
          swift_once();
        }
        int8x16_t v79 = v29;
        uint64_t v55 = type metadata accessor for Logger();
        sub_1000F2248(v55, (uint64_t)qword_101611790);
        uint64_t v56 = Logger.logObject.getter();
        os_log_type_t v57 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          _os_log_impl((void *)&_mh_execute_header, v56, v57, "Using fresh cached handle location to resolve find my waypoint", v58, 2u);
          swift_slowDealloc();
        }
        uint64_t v78 = v0[21];
        uint64_t v59 = v0[15];
        uint64_t v60 = v0[12];
        uint64_t v77 = v0[11];
        uint64_t v61 = v0[10];
        uint64_t v62 = v0[8];
        uint64_t v75 = (void (*)(void *, uint64_t))v0[6];
        uint64_t v76 = (void *)v0[7];
        uint64_t v63 = v0[4];
        uint64_t v74 = v0[5];
        uint64_t v64 = v0[2];
        uint64_t v65 = v0[3];

        Location.latitude.getter();
        double v67 = v66;
        Location.longitude.getter();
        double v69 = v68;
        Location.timestamp.getter();
        Date.init(timeIntervalSince1970:)();
        Date.timeIntervalSinceReferenceDate.getter();
        double v71 = v70;
        v79(v61, v62);
        id v72 = sub_1001D953C(v65, v63, v74, v75, v76, v67, v69, v71);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v77);
        sub_1001DA104(v78);
        *(void *)(v64 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v72;
        goto LABEL_24;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v0[15], v0[11]);
  }
  uint64_t v33 = v0[27];
  uint64_t v34 = v0[2];
  GEOConfigGetDouble();
  double v36 = v35;
  uint64_t v37 = (void *)swift_task_alloc();
  v0[31] = (uint64_t)v37;
  void *v37 = v0;
  v37[1] = sub_1001D82B8;
  uint64_t v38 = v0[18];
  return Session._maps_latestLocation(for:includeAddress:timeout:)(v38, v34 + v33, 0, v36);
}

uint64_t sub_1001D82B8()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1001D9070;
  }
  else
  {
    uint64_t v1 = sub_1001D83D0;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1001D83D0()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232))(v1, 1, v2) == 1)
  {
    sub_1001DA104(v1);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 96) + 32))(*(void *)(v0 + 112), v1, v2);
    Location.latitude.getter();
    double v4 = v3;
    Location.longitude.getter();
    if (sub_1001DA164(v4, v5))
    {
      if (qword_1015CBD48 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_1000F2248(v6, (uint64_t)qword_101611790);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Using live handle location to resolve find my waypoint", v9, 2u);
        swift_slowDealloc();
      }
      uint64_t v51 = *(void *)(v0 + 168);
      uint64_t v10 = *(void *)(v0 + 112);
      goto LABEL_18;
    }
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 88));
  }
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 232);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = *(void *)(v0 + 88);
  sub_1001DA09C(*(void *)(v0 + 168), v12);
  if (v11(v12, 1, v13) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 32))(*(void *)(v0 + 104), *(void *)(v0 + 136), *(void *)(v0 + 88));
    Location.latitude.getter();
    double v15 = v14;
    Location.longitude.getter();
    if (!sub_1001DA164(v15, v16))
    {
      (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
      goto LABEL_20;
    }
    if (qword_1015CBD48 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000F2248(v17, (uint64_t)qword_101611790);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v18, "Using old cached handle location to resolve find my waypoint", v19, 2u);
      swift_slowDealloc();
    }
    uint64_t v51 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 104);
LABEL_18:
    uint64_t v20 = *(void *)(v0 + 96);
    uint64_t v50 = *(void *)(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 64);
    id v48 = *(void (**)(void *, uint64_t))(v0 + 48);
    id v49 = *(void **)(v0 + 56);
    uint64_t v24 = *(void *)(v0 + 32);
    uint64_t v47 = *(void *)(v0 + 40);
    uint64_t v25 = *(void *)(v0 + 16);
    uint64_t v26 = *(void *)(v0 + 24);

    Location.latitude.getter();
    double v28 = v27;
    Location.longitude.getter();
    double v30 = v29;
    Location.timestamp.getter();
    Date.init(timeIntervalSince1970:)();
    Date.timeIntervalSinceReferenceDate.getter();
    double v32 = v31;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    id v33 = sub_1001D953C(v26, v24, v47, v48, v49, v28, v30, v32);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v10, v50);
    sub_1001DA104(v51);
    *(void *)(v25 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v33;
    swift_unknownObjectRelease();
    goto LABEL_25;
  }
  sub_1001DA104(*(void *)(v0 + 136));
LABEL_20:
  if (qword_1015CBD48 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_1000F2248(v34, (uint64_t)qword_101611790);
  double v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Did not have a provided coordinate nor was able to fetch handle location", v37, 2u);
    swift_slowDealloc();
  }
  uint64_t v38 = *(void *)(v0 + 168);
  uint64_t v39 = *(void (**)(id))(v0 + 32);

  id v40 = objc_allocWithZone((Class)NSError);
  swift_bridgeObjectRetain();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v42 = [v40 initWithDomain:v41 code:0 userInfo:0];

  double v43 = (void *)_convertErrorToNSError(_:)();
  id v44 = [self resultWithError:v43];

  v39(v44);
  swift_release();

  sub_1001DA104(v38);
LABEL_25:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_1001D89C8()
{
  uint64_t v1 = v0 + 12;
  uint64_t v2 = v0 + 11;
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[21], 1, 1, v0[11]);
  uint64_t v3 = v0[2] + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_coordinate;
  if ((*(unsigned char *)(v3 + 16) & 1) == 0)
  {
    double v5 = *(double *)v3;
    double v4 = *(double *)(v3 + 8);
    if (sub_1001DA164(*(double *)v3, v4))
    {
      if (qword_1015CBD48 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_1000F2248(v6, (uint64_t)qword_101611790);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Using provided coordinate to resolve find my waypoint", v9, 2u);
        swift_slowDealloc();
      }
      uint64_t v11 = v0[20];
      uint64_t v10 = v0[21];
      uint64_t v12 = v0[11];
      uint64_t v13 = v0[12];

      sub_1001DA09C(v10, v11);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        double v14 = v0 + 10;
        sub_1001DA104(v0[20]);
        Date.init()();
        Date.timeIntervalSinceReferenceDate.getter();
        double v16 = v15;
        uint64_t v1 = v0 + 9;
        uint64_t v2 = v0 + 8;
      }
      else
      {
        double v14 = v0 + 16;
        uint64_t v41 = v0[9];
        uint64_t v40 = v0[10];
        uint64_t v42 = v0[8];
        (*(void (**)(void, void, void))(v0[12] + 32))(v0[16], v0[20], v0[11]);
        Location.timestamp.getter();
        Date.init(timeIntervalSince1970:)();
        Date.timeIntervalSinceReferenceDate.getter();
        double v16 = v43;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      }
      uint64_t v44 = *v14;
      uint64_t v45 = *v2;
      uint64_t v46 = *v1;
      uint64_t v47 = v0[21];
      id v48 = (void (*)(void *, uint64_t))v0[6];
      id v49 = (void *)v0[7];
      uint64_t v51 = v0[4];
      uint64_t v50 = v0[5];
      uint64_t v52 = v0[2];
      uint64_t v53 = v0[3];
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      id v54 = sub_1001D953C(v53, v51, v50, v48, v49, v5, v4, v16);
      swift_release();
      sub_1001DA104(v47);
      *(void *)(v52 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v54;
LABEL_25:
      swift_unknownObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v73 = (uint64_t (*)(void))v0[1];
      return v73();
    }
  }
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[12];
  sub_1001DA09C(v0[21], v17);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  v0[29] = v20;
  v0[30] = (v19 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v20(v17, 1, v18) == 1)
  {
    sub_1001DA104(v0[19]);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[12] + 32))(v0[15], v0[19], v0[11]);
    Location.latitude.getter();
    double v22 = v21;
    Location.longitude.getter();
    if (sub_1001DA164(v22, v23))
    {
      uint64_t v25 = v0[9];
      uint64_t v24 = v0[10];
      uint64_t v26 = v0[8];
      Date.init()();
      Date.timeIntervalSince1970.getter();
      double v28 = v27;
      double v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v29(v24, v26);
      Location.timestamp.getter();
      double v31 = v28 - v30;
      GEOConfigGetDouble();
      if (v31 <= v32)
      {
        if (qword_1015CBD48 != -1) {
          swift_once();
        }
        int8x16_t v79 = v29;
        uint64_t v55 = type metadata accessor for Logger();
        sub_1000F2248(v55, (uint64_t)qword_101611790);
        uint64_t v56 = Logger.logObject.getter();
        os_log_type_t v57 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v56, v57))
        {
          uint64_t v58 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v58 = 0;
          _os_log_impl((void *)&_mh_execute_header, v56, v57, "Using fresh cached handle location to resolve find my waypoint", v58, 2u);
          swift_slowDealloc();
        }
        uint64_t v78 = v0[21];
        uint64_t v59 = v0[15];
        uint64_t v60 = v0[12];
        uint64_t v77 = v0[11];
        uint64_t v61 = v0[10];
        uint64_t v62 = v0[8];
        uint64_t v75 = (void (*)(void *, uint64_t))v0[6];
        uint64_t v76 = (void *)v0[7];
        uint64_t v63 = v0[4];
        uint64_t v74 = v0[5];
        uint64_t v64 = v0[2];
        uint64_t v65 = v0[3];

        Location.latitude.getter();
        double v67 = v66;
        Location.longitude.getter();
        double v69 = v68;
        Location.timestamp.getter();
        Date.init(timeIntervalSince1970:)();
        Date.timeIntervalSinceReferenceDate.getter();
        double v71 = v70;
        v79(v61, v62);
        id v72 = sub_1001D953C(v65, v63, v74, v75, v76, v67, v69, v71);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v77);
        sub_1001DA104(v78);
        *(void *)(v64 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v72;
        goto LABEL_25;
      }
      (*(void (**)(void, void))(v0[12] + 8))(v0[15], v0[11]);
    }
    else
    {
      (*(void (**)(void, void))(*v1 + 8))(v0[15], *v2);
    }
  }
  uint64_t v33 = v0[27];
  uint64_t v34 = v0[2];
  GEOConfigGetDouble();
  double v36 = v35;
  uint64_t v37 = (void *)swift_task_alloc();
  v0[31] = v37;
  void *v37 = v0;
  v37[1] = sub_1001D82B8;
  uint64_t v38 = v0[18];
  return Session._maps_latestLocation(for:includeAddress:timeout:)(v38, v34 + v33, 0, v36);
}

uint64_t sub_1001D9070()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[12] + 56))(v0[18], 1, 1, v0[11]);
  sub_1001DA104(v0[18]);
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[11];
  sub_1001DA09C(v0[21], v2);
  if (v1(v2, 1, v3) == 1)
  {
    sub_1001DA104(v0[17]);
LABEL_10:
    if (qword_1015CBD48 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1000F2248(v26, (uint64_t)qword_101611790);
    double v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      double v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Did not have a provided coordinate nor was able to fetch handle location", v29, 2u);
      swift_slowDealloc();
    }
    uint64_t v30 = v0[21];
    double v31 = (void (*)(id))v0[4];

    id v32 = objc_allocWithZone((Class)NSError);
    swift_bridgeObjectRetain();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v32 initWithDomain:v33 code:0 userInfo:0];

    double v35 = (void *)_convertErrorToNSError(_:)();
    id v36 = [self resultWithError:v35];

    v31(v36);
    swift_release();

    sub_1001DA104(v30);
    goto LABEL_15;
  }
  (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[17], v0[11]);
  Location.latitude.getter();
  double v5 = v4;
  Location.longitude.getter();
  if (!sub_1001DA164(v5, v6))
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    goto LABEL_10;
  }
  if (qword_1015CBD48 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_1000F2248(v7, (uint64_t)qword_101611790);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Using old cached handle location to resolve find my waypoint", v10, 2u);
    swift_slowDealloc();
  }
  uint64_t v43 = v0[21];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[10];
  uint64_t v42 = v0[11];
  uint64_t v15 = v0[8];
  uint64_t v14 = v0[9];
  uint64_t v40 = (void (*)(void *, uint64_t))v0[6];
  uint64_t v41 = (void *)v0[7];
  uint64_t v16 = v0[4];
  uint64_t v39 = v0[5];
  uint64_t v17 = v0[2];
  uint64_t v18 = v0[3];

  Location.latitude.getter();
  double v20 = v19;
  Location.longitude.getter();
  double v22 = v21;
  Location.timestamp.getter();
  Date.init(timeIntervalSince1970:)();
  Date.timeIntervalSinceReferenceDate.getter();
  double v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  id v25 = sub_1001D953C(v18, v16, v39, v40, v41, v20, v22, v24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v42);
  sub_1001DA104(v43);
  *(void *)(v17 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket) = v25;
  swift_unknownObjectRelease();
LABEL_15:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

id sub_1001D953C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *a1, uint64_t a2), void *a5, double a6, double a7, double a8)
{
  uint64_t v16 = Handle.identifier.getter();
  uint64_t v18 = v17;
  id result = [objc_allocWithZone((Class)GEOLocation) initWithGEOCoordinate:a6, a7];
  if (result)
  {
    double v20 = result;
    [result setTimestamp:a8];
    double v21 = (void *)swift_allocObject();
    void v21[2] = v16;
    v21[3] = v18;
    v21[4] = a2;
    v21[5] = a3;
    double v29 = sub_1001DA1E8;
    uint64_t v30 = v21;
    id v25 = _NSConcreteStackBlock;
    uint64_t v26 = 1107296256;
    double v27 = sub_100033BC0;
    os_log_type_t v28 = &unk_1012DCFA0;
    double v22 = _Block_copy(&v25);
    swift_retain();
    id v23 = v20;
    swift_release();
    if (a4)
    {
      double v29 = a4;
      uint64_t v30 = a5;
      id v25 = _NSConcreteStackBlock;
      uint64_t v26 = 1107296256;
      double v27 = sub_100316A88;
      os_log_type_t v28 = &unk_1012DCFC8;
      a4 = (void (*)(void *, uint64_t))_Block_copy(&v25);
      swift_retain();
      swift_release();
    }
    id v24 = [self composedWaypointForLocation:v23 mapItem:0 traits:a1 completionHandler:v22 networkActivityHandler:a4];

    _Block_release(a4);
    _Block_release(v22);

    return v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D9750()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_isCancelled) = 1;
  uint64_t v1 = OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps28FindMyHandleMapServiceTicket_ticket);
  if (v2) {
    [v2 cancel];
  }
  *(void *)(v0 + v1) = 0;

  return swift_unknownObjectRelease();
}

void sub_1001D97FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  if (a1)
  {
    uint64_t v6 = qword_1015CBD48;
    id v7 = a1;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000F2248(v8, (uint64_t)qword_101611790);
    os_log_type_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Waypoint resolution succeeded", v11, 2u);
      swift_slowDealloc();
    }

    NSString v12 = String._bridgeToObjectiveC()();
    [v7 setFindMyHandleID:v12];

    id v13 = [v7 mapItemStorage];
    if (v13)
    {
      id v14 = [v7 findMyHandle];
      if (v14)
      {
        uint64_t v15 = v14;
        sub_10023F13C();

        NSString v16 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v7 setUserValuesName:v16];
      }
      id v17 = [v7 findMyHandle];
      if (v17)
      {
        uint64_t v18 = v17;
        sub_10023F0C8();
        uint64_t v20 = v19;

        if (v20)
        {
          NSString v21 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v7 setAddressBookContactName:v21];
        }
      }
      id v22 = [v7 findMyHandle];
      if (v22)
      {
        id v23 = v22;
        sub_10023F3F8();
        uint64_t v25 = v24;

        if (v25)
        {
          NSString v26 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v7 setAddressBookContactSpokenName:v26];
        }
      }
    }
    id v27 = [self sharedLocationStyleAttributes];
    [v7 setStyleAttributes:v27];

    [v7 recomputeGeoWaypointTyped];
    id v28 = [self resultWithValue:v7];
  }
  else if (a2)
  {
    swift_errorRetain();
    if (qword_1015CBD48 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_1000F2248(v29, (uint64_t)qword_101611790);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      NSString v33 = (void *)swift_slowAlloc();
      *(_DWORD *)id v32 = 138412290;
      swift_errorRetain();
      uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v33 = v47;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Waypoint resolution failed: %@", v32, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v43 = (void *)_convertErrorToNSError(_:)();
    id v28 = [self resultWithError:v43];
    swift_errorRelease();
  }
  else
  {
    id v34 = objc_allocWithZone((Class)NSError);
    swift_bridgeObjectRetain();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v34 initWithDomain:v35 code:1 userInfo:0];

    if (qword_1015CBD48 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_1000F2248(v37, (uint64_t)qword_101611790);
    id v38 = v36;
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 138412290;
      id v42 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v46 = v38;

      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Waypoint resolution failed: %@", v41, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v44 = v38;
    uint64_t v45 = (void *)_convertErrorToNSError(_:)();
    id v28 = [self resultWithError:v45];
  }
  a5(v28);
}

uint64_t sub_1001D9F9C()
{
  return type metadata accessor for FindMyHandleMapServiceTicket();
}

uint64_t type metadata accessor for FindMyHandleMapServiceTicket()
{
  uint64_t result = qword_1015D4500;
  if (!qword_1015D4500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001D9FF0()
{
  uint64_t result = type metadata accessor for Handle();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001DA09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000FF33C(&qword_1015D9920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001DA104(uint64_t a1)
{
  uint64_t v2 = sub_1000FF33C(&qword_1015D9920);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1001DA164(double a1, double a2)
{
  BOOL v2 = a2 >= -180.0;
  if (a2 > 180.0) {
    BOOL v2 = 0;
  }
  if (a1 < -90.0) {
    BOOL v2 = 0;
  }
  return a1 <= 90.0 && v2;
}

uint64_t sub_1001DA1A8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001DA1E8(void *a1, uint64_t a2)
{
  sub_1001D97FC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

void sub_1001DA1FC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_1001DA2B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UGCSubmissionLookupManager();
  return [super dealloc];
}

uint64_t type metadata accessor for UGCSubmissionLookupManager()
{
  return self;
}

void sub_1001DA31C(uint64_t a1, void (*a2)(void, uint64_t), uint64_t a3)
{
  v25[0] = 0;
  id v7 = [self buildICloudUserCredentialsWithError:v25];
  id v8 = v25[0];
  if (v7)
  {
    os_log_type_t v9 = v7;
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = (void *)swift_allocObject();
    _OWORD v11[2] = a2;
    _OWORD v11[3] = a3;
    v11[4] = v10;
    v11[5] = a1;
    id v12 = objc_allocWithZone((Class)UGCSubmissionLookupTicket);
    swift_retain();
    id v13 = v9;
    id v14 = v8;
    sub_1000F4F24((uint64_t)a2);
    id v15 = [v12 init];
    uint64_t v16 = OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket;
    id v17 = *(void **)(v3 + OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket);
    *(void *)(v3 + OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket) = v15;

    uint64_t v18 = *(void **)(v3 + v16);
    if (v18)
    {
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = sub_1001DC424;
      v19[3] = v11;
      uint64_t v25[4] = sub_100122E08;
      v25[5] = v19;
      v25[0] = _NSConcreteStackBlock;
      v25[1] = (id)1107296256;
      void v25[2] = sub_100033BC0;
      void v25[3] = &unk_1012DD338;
      uint64_t v20 = _Block_copy(v25);
      id v21 = v18;
      swift_retain();
      swift_release();
      [v21 fetchSubmissionForMuid:a1 userInfo:v13 completion:v20];
      _Block_release(v20);
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    id v22 = v25[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (a2)
    {
      sub_1001DB6B4();
      uint64_t v23 = swift_allocError();
      strcpy(v24, "Empty UserInfo");
      v24[15] = -18;
      a2(0, v23);
      swift_errorRelease();
    }
    swift_errorRelease();
  }
}

void sub_1001DA608(id a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    if (a3) {
      a3(0);
    }
  }
  else
  {
    if (a1)
    {
      id v10 = [a1 previousSubmission];
      unsigned __int8 v11 = [v10 hasScorecard];

      if (v11) {
        [a1 setHasRatingsWithICloud:1];
      }
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v13 = (void *)Strong;
      sub_1001DB998(a6, a1, (void (*)(void, uint64_t))a3, a4);
    }
  }
}

void sub_1001DA7B4(uint64_t a1, uint64_t a2, void (*a3)(void, uint64_t), uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  id v8 = self;
  v19[0] = 0;
  id v9 = [v8 buildICloudUserCredentialsWithError:v19];
  id v10 = v19[0];
  if (v9)
  {
    *(void *)(v7 + 16) = v9;
    sub_1001DB5FC();
    id v11 = v10;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v14 = (void *)swift_allocObject();
    _OWORD v14[2] = a3;
    _OWORD v14[3] = a4;
    _OWORD v14[4] = v13;
    v14[5] = a1;
    v14[6] = v7;
    v19[4] = sub_1001DB790;
    v19[5] = v14;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = (id)1107296256;
    v19[2] = sub_1001DA1FC;
    v19[3] = &unk_1012DD090;
    id v15 = _Block_copy(v19);
    sub_1000F4F24((uint64_t)a3);
    swift_retain();
    swift_release();
    [v8 fetchCommunityIDWithMUID:a1 identifierHistory:isa shouldIncreaseCount:0 CompletionHandler:v15];
    _Block_release(v15);
    swift_release();
  }
  else
  {
    id v16 = v19[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (a3)
    {
      sub_1001DB6B4();
      uint64_t v17 = swift_allocError();
      *uint64_t v18 = 0xD00000000000001ALL;
      v18[1] = 0x8000000100F7B7C0;
      a3(0, v17);
      swift_errorRelease();
    }
    swift_errorRelease();
    swift_deallocUninitializedObject();
  }
}

void sub_1001DAA3C(void *a1, void (*a2)(void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = (char *)Strong;
      id v14 = (void *)swift_allocObject();
      _OWORD v14[2] = a4;
      _OWORD v14[3] = a5;
      _OWORD v14[4] = a6;
      v14[5] = a2;
      v14[6] = a3;
      id v15 = objc_allocWithZone((Class)UGCSubmissionLookupTicket);
      swift_retain();
      swift_retain();
      id v16 = a1;
      sub_1000F4F24((uint64_t)a2);
      id v17 = [v15 init];
      uint64_t v18 = OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket;
      uint64_t v19 = *(void **)&v13[OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket];
      *(void *)&v13[OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket] = v17;

      uint64_t v20 = *(void **)&v13[v18];
      if (v20)
      {
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_1001DB7F0;
        *(void *)(v21 + 24) = v14;
        aBlock[4] = sub_100122E08;
        aBlock[5] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100033BC0;
        aBlock[3] = &unk_1012DD108;
        id v22 = _Block_copy(aBlock);
        id v23 = v20;
        swift_retain();
        swift_release();
        [v23 fetchSubmissionForMuid:a5 userInfo:v16 completion:v22];
        _Block_release(v22);

        swift_release();
      }
      else
      {

        swift_release();
      }
    }
  }
  else if (a2)
  {
    sub_1001DB6B4();
    uint64_t v24 = swift_allocError();
    *uint64_t v25 = 0xD000000000000017;
    v25[1] = 0x8000000100F7B7E0;
    a2(0, v24);
    swift_errorRelease();
  }
}

void sub_1001DACC4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (char *)Strong;
    swift_beginAccess();
    id v16 = *(void **)(a5 + 16);
    id v17 = (void *)swift_allocObject();
    _OWORD v17[2] = a3;
    uint64_t v17[3] = a1;
    v17[4] = a2;
    v17[5] = a6;
    v17[6] = a7;
    v17[7] = a4;
    id v18 = objc_allocWithZone((Class)UGCSubmissionLookupTicket);
    id v19 = v16;
    swift_retain();
    id v20 = a1;
    swift_errorRetain();
    sub_1000F4F24(a6);
    id v21 = [v18 init];
    uint64_t v22 = OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket;
    id v23 = *(void **)&v15[OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket];
    *(void *)&v15[OBJC_IVAR____TtC4Maps26UGCSubmissionLookupManager_ticket] = v21;

    uint64_t v24 = *(void **)&v15[v22];
    if (v24)
    {
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_1001DB864;
      *(void *)(v25 + 24) = v17;
      v28[4] = sub_100122E08;
      void v28[5] = v25;
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 1107296256;
      void v28[2] = sub_100033BC0;
      v28[3] = &unk_1012DD180;
      NSString v26 = _Block_copy(v28);
      id v27 = v24;
      swift_retain();
      swift_release();
      [v27 fetchSubmissionForMuid:a4 userInfo:v19 completion:v26];
      _Block_release(v26);

      swift_release();
    }
    else
    {

      swift_release();
    }
  }
}

uint64_t sub_1001DAEE0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v17 = (void *)result;
    id v18 = (void *)swift_allocObject();
    void v18[2] = a6;
    void v18[3] = a7;
    v18[4] = a1;
    v18[5] = a3;
    v18[6] = a8;
    sub_1000F4F24(a6);
    id v19 = a1;
    swift_retain();
    sub_1001DC054(a1, a2, a4, a5, (void (*)(id, uint64_t))sub_1001DB8C8);

    return swift_release();
  }
  return result;
}

void sub_1001DAFE0(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, id a5, uint64_t a6, uint64_t a7)
{
  if (a2)
  {
    if (a3) {
      a3(0);
    }
  }
  else
  {
    if (a5)
    {
      id v11 = [a5 previousSubmission];
      unsigned int v12 = [v11 hasScorecard];

      if (v12 && a1 != 0) {
        [a1 setHasRatingsWithICloud:1];
      }
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v15 = (void *)Strong;
      sub_1001DB998(a7, a1, (void (*)(void, uint64_t))a3, a4);
    }
  }
}

void sub_1001DB1B0(char a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  if ((a1 & 1) == 0 || !a2) {
    goto LABEL_5;
  }
  id v10 = a2;
  id v11 = [v10 numberOfPhotosAdded];
  if (v11 == [a3 numberOfPhotosAdded])
  {

LABEL_5:
    unsigned int v12 = self;
    uint64_t v13 = (void *)swift_allocObject();
    _OWORD v13[2] = a4;
    v13[3] = a5;
    uint64_t v13[4] = a6;
    uint64_t v24 = sub_1001DC388;
    uint64_t v25 = v13;
    id v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_100341218;
    id v23 = &unk_1012DD248;
    id v14 = _Block_copy(&v20);
    sub_1000F4F24(a4);
    id v15 = a6;
    swift_release();
    [v12 updateLocalCacheWithReviewedPlace:a3 completion:v14];
    _Block_release(v14);
    return;
  }
  [v10 setNumberOfPhotosAdded:[a3 numberOfPhotosAdded]];
  id v16 = self;
  id v17 = (void *)swift_allocObject();
  _OWORD v17[2] = a4;
  uint64_t v17[3] = a5;
  v17[4] = a6;
  uint64_t v24 = sub_1001DC3B4;
  uint64_t v25 = v17;
  id v20 = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  uint64_t v22 = sub_100341218;
  id v23 = &unk_1012DD298;
  id v18 = _Block_copy(&v20);
  sub_1000F4F24(a4);
  id v19 = a6;
  swift_release();
  [v16 addOrEditReviewedPlace:v10 completion:v18];
  _Block_release(v18);
}

void sub_1001DB3F4(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3, uint64_t a4, const char *a5)
{
  if (a1)
  {
    if (qword_1015CBC28 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_1000F2248(v8, (uint64_t)qword_1015D4518);
    swift_errorRetain();
    swift_errorRetain();
    id v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      unsigned int v12 = (void *)swift_slowAlloc();
      *(_DWORD *)id v11 = 138412290;
      swift_errorRetain();
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unsigned int v12 = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, a5, v11, 0xCu);
      sub_1000FF33C((uint64_t *)&unk_1015CF600);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (a2) {
    a2(a4, 0);
  }
}

unint64_t sub_1001DB5FC()
{
  unint64_t result = qword_1015D5D50;
  if (!qword_1015D5D50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1015D5D50);
  }
  return result;
}

uint64_t sub_1001DB63C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001DB674(uint64_t a1, uint64_t a2)
{
  sub_1001223FC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001DB67C()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1001DB6B4()
{
  unint64_t result = qword_1015D4560;
  if (!qword_1015D4560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D4560);
  }
  return result;
}

uint64_t sub_1001DB708()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001DB740()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1001DB790(void *a1)
{
  sub_1001DAA3C(a1, *(void (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1001DB7A0()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001DB7F0(uint64_t a1, uint64_t a2)
{
  return sub_1001DB8E0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1001DACC4);
}

uint64_t sub_1001DB80C()
{
  swift_release();

  swift_errorRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1001DB864(void *a1, uint64_t a2)
{
  return sub_1001DAEE0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1001DB878()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001DB8C8(uint64_t a1, uint64_t a2)
{
  return sub_1001DB8E0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1001DAFE0);
}

uint64_t sub_1001DB8E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1001DB8F8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_1015D4518);
  sub_1000F2248(v0, (uint64_t)qword_1015D4518);
  type metadata accessor for UGCSubmissionLookupManager();
  sub_1000FF33C(&qword_1015D4568);
  String.init<A>(describing:)();
  return Logger.init(subsystem:category:)();
}

void sub_1001DB998(uint64_t a1, void *a2, void (*a3)(void, uint64_t), uint64_t a4)
{
  if (a2)
  {
    id v8 = objc_allocWithZone((Class)UGCReviewedPlace);
    id v9 = a2;
    id v10 = [v8 initWithMUID:a1];
    id v11 = [v9 previousSubmission];
    id v12 = [v11 imagesCount];

    [v10 setNumberOfPhotosAdded:v12];
    id v13 = [v9 previousSubmission];
    LODWORD(v12) = [v13 hasScorecard];

    if (v12)
    {
      id v14 = [v9 previousSubmission];
      id v15 = [v14 scorecard];

      if (!v15)
      {
        __break(1u);
        return;
      }
      uint64_t v16 = sub_100B13750(v15);

      [v10 setRecommendState:v16];
    }
    if (qword_1015CBC28 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_1000F2248(v17, (uint64_t)qword_1015D4518);
    id v18 = v10;
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 134218240;
      v30[0] = [v18 recommendState];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2048;
      v30[0] = [v18 numberOfPhotosAdded];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Fetched submission with rating state %ld and number of photos added %lu", (uint8_t *)v21, 0x16u);
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v24 = self;
    sub_1001DB5FC();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    NSString v26 = (void *)swift_allocObject();
    v26[2] = v18;
    v26[3] = a3;
    v26[4] = a4;
    v26[5] = v9;
    v30[4] = sub_1001DC378;
    v30[5] = v26;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 1107296256;
    _OWORD v30[2] = sub_1002C6824;
    v30[3] = &unk_1012DD1F8;
    id v27 = _Block_copy(v30);
    id v28 = v9;
    id v29 = v18;
    sub_1000F4F24((uint64_t)a3);
    swift_release();
    [v24 fetchReviewedPlaceForMUID:a1 withIdentifierHistory:isa completion:v27];
    _Block_release(v27);
  }
  else if (a3)
  {
    sub_1001DB6B4();
    uint64_t v22 = swift_allocError();
    strcpy(v23, "Empty Result");
    _OWORD v23[13] = 0;
    *((_WORD *)v23 + 7) = -5120;
    a3(0, v22);
    swift_errorRelease();
  }
}

void sub_1001DBDC4(void *a1, void *a2, void (*a3)(id, void))
{
  id v6 = [a1 previousSubmission];
  unsigned __int8 v7 = [v6 hasScorecard];

  if ((v7 & 1) == 0)
  {
    id v8 = [a2 previousSubmission];
    unsigned int v9 = [v8 hasScorecard];

    if (v9)
    {
      id v10 = [a1 previousSubmission];
      id v11 = [a2 previousSubmission];
      id v12 = [v11 scorecard];

      [v10 setScorecard:v12];
    }
  }
  id v13 = [a1 previousSubmission];
  id v14 = [a2 previousSubmission];
  id v15 = [v14 images];

  [v13 setImages:v15];
  id v16 = [a1 parentSubmissionIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v17 = [a2 parentSubmissionIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v18 = [a1 previousSubmission];
  id v19 = objc_allocWithZone((Class)UGCSubmissionLookupResult);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v23 = [v19 initWithRatingsSubmissionIdentifier:v20 photosSubmissionIdentifier:v21 previousSubmission:v18];

  if (a3)
  {
    id v22 = v23;
    a3(v23, 0);
  }
}

void sub_1001DC054(id a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t))
{
  if (a2)
  {
    if (!a4 && a3)
    {
      id v8 = a3;
      id v9 = [v8 parentSubmissionIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v10 = [v8 previousSubmission];
      id v11 = objc_allocWithZone((Class)UGCSubmissionLookupResult);
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v13 = String._bridgeToObjectiveC()();
      id v14 = [v11 initWithRatingsSubmissionIdentifier:v12 photosSubmissionIdentifier:v13 previousSubmission:v10];
LABEL_8:
      id v22 = v14;

      if (a5)
      {
        id v21 = v22;
        a5(v22, 0);

        id v19 = v21;
      }
      else
      {

        id v19 = v22;
      }

      return;
    }
    goto LABEL_23;
  }
  if (a4)
  {
    if (a1)
    {
      id v8 = a1;
      id v16 = [v8 parentSubmissionIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v17 = [v8 parentSubmissionIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v10 = [v8 previousSubmission];
      id v18 = objc_allocWithZone((Class)UGCSubmissionLookupResult);
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = [v18 initWithRatingsSubmissionIdentifier:v12 photosSubmissionIdentifier:v13 previousSubmission:v10];
      goto LABEL_8;
    }
    goto LABEL_23;
  }
  if (!a1
    || ([a1 status] == (id)1 ? (BOOL v20 = a3 == 0) : (BOOL v20 = 1), v20 || objc_msgSend(a3, "status") != (id)1))
  {
LABEL_23:
    if (a5) {
      a5(0, a4);
    }
    return;
  }

  sub_1001DBDC4(a3, a1, a5);
}

uint64_t sub_1001DC328()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001DC378(char a1, void *a2)
{
  sub_1001DB1B0(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_1001DC388(uint64_t a1)
{
  sub_1001DB3F4(a1, *(void (**)(uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "We failed to update local cache with %@");
}

void sub_1001DC3B4(uint64_t a1)
{
  sub_1001DB3F4(a1, *(void (**)(uint64_t, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), "We failed to update sync cache with %@");
}

uint64_t sub_1001DC3DC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001DC424(void *a1, uint64_t a2)
{
  sub_1001DA608(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

ValueMetadata *type metadata accessor for UGCSubmissionLookupManager.LookupManagerError()
{
  return &type metadata for UGCSubmissionLookupManager.LookupManagerError;
}

id sub_1001DC528()
{
  uint64_t v1 = v0;
  id v2 = [self sharedApplication];
  id v3 = [v2 userInterfaceLayoutDirection];

  if (v3 == (id)1)
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v4.super.Class isa = (Class)qword_101611820;
    unint64_t v5 = 0xD000000000000031;
    unint64_t v6 = 0xD000000000000036;
    unint64_t v27 = 0x8000000100F7BB60;
    unint64_t v7 = 0x8000000100F7BAF0;
    id v8 = "Pin a line to the top of the screen by swiping it left";
  }
  else
  {
    if (qword_1015CBD78 != -1) {
      swift_once();
    }
    v4.super.Class isa = (Class)qword_101611820;
    unint64_t v5 = 0xD000000000000031;
    unint64_t v6 = 0xD000000000000037;
    unint64_t v27 = 0x8000000100F7BA50;
    unint64_t v7 = 0x8000000100F7B9E0;
    id v8 = "Pin a line to the top of the screen by swiping it right";
  }
  unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  unint64_t v10 = 0xD000000000000024;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)(&v7 - 1), (Swift::String_optional)0, v4, *(Swift::String *)&v6, *(Swift::String *)&v5);
  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v11._uint64_t countAndFlagsBits = 0xD000000000000021;
  v29._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v29._uint64_t object = (void *)0x8000000100F7BAC0;
  v11._uint64_t object = (void *)0x8000000100F7BA90;
  v12._uint64_t countAndFlagsBits = 0x7373696D736944;
  v12._uint64_t object = (void *)0xE700000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)qword_101611820, v12, v29);
  id v13 = objc_allocWithZone((Class)sub_1000FF33C(&qword_1015D4598));
  id v14 = (void *)UIHostingController.init(rootView:)();
  id result = [v14 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v16 = result;
  [result setPreservesSuperviewLayoutMargins:0];

  id result = [v14 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v17 = result;
  [result setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  id result = [v14 view];
  if (result)
  {
    id v18 = result;
    id v19 = [self clearColor];
    [v18 setBackgroundColor:v19];

    id v20 = objc_allocWithZone((Class)TeachableMomentConfiguration);
    id v21 = v14;
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v20 initWithTitle:v22 buttonTitle:v23 userDefaultSaveKey:v24 illustrationViewController:v21];

    v28.receiver = v1;
    v28.super_class = (Class)type metadata accessor for NearbyTeachableMomentContaineeViewController();
    id v26 = [super initWithTeachableMomentConfiguration:v25];

    return v26;
  }
LABEL_16:
  __break(1u);
  return result;
}

id sub_1001DC93C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NearbyTeachableMomentContaineeViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for NearbyTeachableMomentContaineeViewController()
{
  return self;
}

BOOL sub_1001DCAB4()
{
  uint64_t v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  if (v3) {
    return 0;
  }
  id v5 = [v0 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  uint64_t v7 = (uint64_t)[v5 integerForKey:v6];

  return v7 > 2;
}

void sub_1001DCCA8(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v3 = (void *)(v2 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_title);
  *unsigned __int8 v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease();
  NSBundle v4 = *(void **)(v2 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_titleLabel);
  if (v3[1])
  {
    swift_bridgeObjectRetain();
    id v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = 0;
  }
  [v4 setText:v5];
}

id sub_1001DCEA4()
{
  uint64_t v1 = v0;
  unint64_t v2 = swift_bridgeObjectRetain();
  unsigned __int8 v3 = sub_1001E2CE0(v2, v1);
  swift_bridgeObjectRelease();

  NSBundle v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons);
  swift_beginAccess();
  *NSBundle v4 = (uint64_t)v3;
  swift_bridgeObjectRelease();
  if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0((void *)v1)) {
    double v5 = 12.0;
  }
  else {
    double v5 = 16.0;
  }
  uint64_t v6 = *v4;
  if ((unint64_t)*v4 >> 62) {
    goto LABEL_34;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (v7)
  {
    do
    {
      if (v7 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v26 = v1;
      unint64_t v9 = 0;
      uint64_t v1 = 0;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (!v9) {
            goto LABEL_16;
          }
        }
        else
        {
          id v12 = *(id *)(v6 + 8 * v1 + 32);
          if (!v9)
          {
LABEL_16:
            double v13 = 8.0;
            goto LABEL_17;
          }
        }
        double v13 = [v9 isHidden:v26] ? 8.0 : 5.0;
LABEL_17:
        uint64_t v14 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          id v22 = v12;
          swift_bridgeObjectRetain();
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          if (!v15)
          {
LABEL_8:

            swift_bridgeObjectRelease();
            double v10 = 5.0;
            goto LABEL_9;
          }
        }
        else
        {
          uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v16 = v12;
          swift_bridgeObjectRetain();
          if (!v15) {
            goto LABEL_8;
          }
        }
        unint64_t v17 = v15 - 1;
        if (__OFSUB__(v15, 1)) {
          break;
        }
        if ((v14 & 0xC000000000000001) != 0)
        {
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          if (v17 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_33;
          }
          id v18 = *(id *)(v14 + 8 * v17 + 32);
        }
        id v19 = v18;
        swift_bridgeObjectRelease();
        sub_100100830(0, (unint64_t *)&unk_1015D4750);
        id v20 = v12;
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          double v10 = 16.0;
        }
        else {
          double v10 = 5.0;
        }
LABEL_9:
        ++v1;
        id v11 = v12;
        [v11 setDirectionalLayoutMargins:16.0, v13, v5, v10];

        unint64_t v9 = v12;
        if (v7 == v1)
        {
          uint64_t v1 = v26;
          goto LABEL_36;
        }
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      swift_bridgeObjectRetain();
      id result = (id)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v7 = (uint64_t)result;
    }
    while (result);
  }
  id v11 = 0;
LABEL_36:
  swift_bridgeObjectRelease();

  NSString v23 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide);
  unint64_t v24 = swift_bridgeObjectRetain();
  sub_1002591CC(v24);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 _maps_setArrangedSubviews:isa];

  return [(id)v1 layoutIfNeeded];
}

void sub_1001DD378()
{
  uint64_t v50 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations);
  if (v2 >> 62) {
    goto LABEL_59;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (id i = &OBJC_METACLASS____TtC4Maps27ResultRefinementsController;
        v3;
        id i = &OBJC_METACLASS____TtC4Maps27ResultRefinementsController)
  {
    id v48 = &v51[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons];
    uint64_t v5 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_hideTitleLabel;
    unint64_t v49 = v2 & 0xC000000000000001;
    swift_beginAccess();
    unint64_t v6 = 0;
    unint64_t v44 = v2 + 32;
    uint64_t v45 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v46 = &v51[v5];
    uint64_t v47 = v3;
    while (1)
    {
      if (v49)
      {
        uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v45 + 16)) {
          goto LABEL_58;
        }
        uint64_t v7 = (char *)*(id *)(v44 + 8 * v6);
      }
      id v8 = v7;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      unint64_t v10 = *(void *)&v51[v50];
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v11)
        {
LABEL_48:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v11) {
          goto LABEL_48;
        }
      }
      unint64_t v2 = v10 & 0xC000000000000001;
      if ((v10 & 0xC000000000000001) != 0)
      {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        id v12 = *(id *)(v10 + 32);
      }
      double v13 = v12;
      type metadata accessor for InfoCardButtonConfiguration();
      char v14 = static NSObject.== infix(_:_:)();

      uint64_t v15 = 0;
      if ((v14 & 1) == 0)
      {
        if (v11 == 1) {
          goto LABEL_48;
        }
        if (v2)
        {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL) {
            goto LABEL_93;
          }
          id v16 = *(id *)(v10 + 40);
        }
        unint64_t v17 = v16;
        char v18 = static NSObject.== infix(_:_:)();

        if ((v18 & 1) == 0)
        {
          uint64_t v23 = 1;
          while (1)
          {
            uint64_t v15 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              break;
            }
            if (v15 == v11) {
              goto LABEL_48;
            }
            if (v2)
            {
              id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v15 < 0) {
                goto LABEL_52;
              }
              if ((unint64_t)v15 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_53;
              }
              id v24 = *(id *)(v10 + 32 + 8 * v15);
            }
            id v25 = v24;
            char v26 = static NSObject.== infix(_:_:)();

            ++v23;
            if (v26) {
              goto LABEL_24;
            }
          }
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          break;
        }
        uint64_t v15 = 1;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      unint64_t v2 = (unint64_t)v48;
      if (*(void *)v48 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v15 >= v27)
        {
LABEL_49:

          swift_bridgeObjectRelease();
          return;
        }
      }
      else if (v15 >= *(void *)((*(void *)v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_49;
      }
      swift_beginAccess();
      uint64_t v19 = *(void *)v48;
      if ((*(void *)v48 & 0xC000000000000001) != 0)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v15 < 0) {
          goto LABEL_56;
        }
        if ((unint64_t)v15 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_57;
        }
        id v20 = *(id *)(v19 + 8 * v15 + 32);
      }
      char v21 = v20;
      swift_endAccess();
      uint64_t v22 = *(void *)&v8[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_visibility];
      uint64_t v5 = v47;
      if (v22)
      {
        if (v22 != 1) {
          goto LABEL_98;
        }
        [v21 setHidden:0 v44];
      }
      else
      {
        [v21 setHidden:((*v46 & 1) == 0) v44];
      }

      if (v6 == v47)
      {
        swift_bridgeObjectRelease();
        id i = &OBJC_METACLASS____TtC4Maps27ResultRefinementsController;
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_61:
  if (-[PlaceSummaryTableViewCell canBecomeFirstResponder]_0(v51)) {
    double v1 = 12.0;
  }
  else {
    double v1 = 16.0;
  }
  unint64_t v2 = (unint64_t)&v51[(unint64_t)i[39].vtable];
  swift_beginAccess();
  uint64_t v5 = *(void *)v2;
  if (*(void *)v2 >> 62) {
    goto LABEL_94;
  }
  uint64_t v28 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v28)
  {
LABEL_95:
    id v32 = 0;
LABEL_96:
    swift_bridgeObjectRelease();

    return;
  }
LABEL_66:
  if (v28 >= 1)
  {
    Swift::String v29 = 0;
    uint64_t v30 = 0;
    while (1)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v29) {
          goto LABEL_76;
        }
      }
      else
      {
        id v33 = *(id *)(v5 + 8 * v30 + 32);
        if (!v29)
        {
LABEL_76:
          double v34 = 8.0;
          goto LABEL_77;
        }
      }
      if (objc_msgSend(v29, "isHidden", v44)) {
        double v34 = 8.0;
      }
      else {
        double v34 = 5.0;
      }
LABEL_77:
      uint64_t v35 = *(void *)v2;
      if (*(void *)v2 >> 62)
      {
        id v43 = v33;
        swift_bridgeObjectRetain();
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
        if (!v36)
        {
LABEL_68:

          swift_bridgeObjectRelease();
          double v31 = 5.0;
          goto LABEL_69;
        }
      }
      else
      {
        uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v37 = v33;
        swift_bridgeObjectRetain();
        if (!v36) {
          goto LABEL_68;
        }
      }
      unint64_t v38 = v36 - 1;
      if (__OFSUB__(v36, 1))
      {
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        swift_bridgeObjectRetain();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        if (!v28) {
          goto LABEL_95;
        }
        goto LABEL_66;
      }
      if ((v35 & 0xC000000000000001) != 0)
      {
        id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v38 & 0x8000000000000000) != 0) {
          goto LABEL_91;
        }
        if (v38 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_92;
        }
        id v39 = *(id *)(v35 + 8 * v38 + 32);
      }
      os_log_type_t v40 = v39;
      swift_bridgeObjectRelease();
      sub_100100830(0, (unint64_t *)&unk_1015D4750);
      id v41 = v33;
      char v42 = static NSObject.== infix(_:_:)();

      if (v42) {
        double v31 = 16.0;
      }
      else {
        double v31 = 5.0;
      }
LABEL_69:
      ++v30;
      id v32 = v33;
      [v32 setDirectionalLayoutMargins:16.0 v34, v1, v31];

      Swift::String v29 = v33;
      if (v28 == v30) {
        goto LABEL_96;
      }
    }
  }
  __break(1u);
LABEL_98:
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

uint64_t sub_1001DDAE8()
{
  uint64_t result = GEOConfigGetBOOL();
  byte_1015D45A0 = result;
  return result;
}

uint64_t sub_1001DDB18(uint64_t a1)
{
  unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations);
  if (v4 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_17;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0) {
    goto LABEL_29;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v6 = (char *)*(id *)(v4 + 32);
LABEL_6:
  unint64_t v2 = v6;
  if (*(void *)&v6[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type] != a1)
  {
    uint64_t v16 = v1;

    if (v5 == 1) {
      goto LABEL_17;
    }
    uint64_t v1 = v4 & 0xFFFFFFFFFFFFFF8;
    uint64_t v8 = 5;
    while (1)
    {
      unint64_t v7 = v8 - 4;
      if ((v4 & 0xC000000000000001) != 0)
      {
        unint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v7 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_29:
          unint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_6;
        }
        unint64_t v9 = (char *)*(id *)(v4 + 8 * v8);
      }
      unint64_t v2 = v9;
      uint64_t v10 = v8 - 3;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_26;
      }
      if (*(void *)&v9[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type] == a1)
      {
        uint64_t v1 = v16;
        goto LABEL_19;
      }

      ++v8;
      if (v10 == v5) {
        goto LABEL_17;
      }
    }
  }
  unint64_t v7 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  id v12 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons);
  uint64_t result = swift_beginAccess();
  uint64_t v14 = *v12;
  if ((*v12 & 0xC000000000000001) != 0)
  {
LABEL_31:
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_23:
    id v11 = v15;
    swift_endAccess();

    return (uint64_t)v11;
  }
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(v14 + 8 * v7 + 32);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001DDDCC(char a1, uint64_t *a2, SEL *a3)
{
  uint64_t v5 = *a2;
  *(unsigned char *)(v3 + *a2) = a1;
  unint64_t v6 = (unint64_t *)(v3 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v8 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v8 >= 1)
  {
    for (uint64_t i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v7 + 8 * i + 32);
      }
      id v12 = v11;
      [v11 *a3:*(unsigned __int8 *)(v3 + v5)];
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1001DDED8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons);
  swift_beginAccess();
  id v32 = v1;
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_60;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    unint64_t v29 = v0;
    uint64_t v33 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations;
    uint64_t v30 = v2;
    unint64_t v31 = v2 & 0xC000000000000001;
    uint64_t v26 = v2 + 32;
    uint64_t v27 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v28 = v3;
    while (1)
    {
      if (v31)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v27 + 16)) {
          goto LABEL_59;
        }
        id v6 = *(id *)(v26 + 8 * v4);
      }
      unint64_t v7 = v6;
      if (__OFADD__(v4++, 1)) {
        break;
      }
      uint64_t v9 = *v32;
      if ((unint64_t)*v32 >> 62)
      {
        if (v9 < 0) {
          unint64_t v0 = *v32;
        }
        else {
          unint64_t v0 = v9 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain_n();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v10)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v10) {
          goto LABEL_50;
        }
      }
      unint64_t v11 = v9 & 0xC000000000000001;
      if ((v9 & 0xC000000000000001) != 0)
      {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        id v12 = *(id *)(v9 + 32);
      }
      double v13 = v12;
      unint64_t v0 = sub_100100830(0, (unint64_t *)&unk_1015D4750);
      char v14 = static NSObject.== infix(_:_:)();

      uint64_t v15 = 0;
      if ((v14 & 1) == 0)
      {
        if (v10 == 1) {
          goto LABEL_50;
        }
        if (v11)
        {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          {
            __break(1u);
            return;
          }
          id v16 = *(id *)(v9 + 40);
        }
        unint64_t v17 = v16;
        char v18 = static NSObject.== infix(_:_:)();

        if ((v18 & 1) == 0)
        {
          uint64_t v2 = 1;
          while (1)
          {
            uint64_t v15 = v2 + 1;
            if (__OFADD__(v2, 1)) {
              break;
            }
            if (v15 == v10) {
              goto LABEL_50;
            }
            if (v11)
            {
              id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v15 < 0) {
                goto LABEL_53;
              }
              if ((unint64_t)v15 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_54;
              }
              id v22 = *(id *)(v9 + 32 + 8 * v15);
            }
            uint64_t v23 = v22;
            char v24 = static NSObject.== infix(_:_:)();

            ++v2;
            if (v24) {
              goto LABEL_24;
            }
          }
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          break;
        }
        uint64_t v15 = 1;
      }
LABEL_24:
      swift_bridgeObjectRelease();
      unint64_t v0 = *(void *)(v29 + v33);
      if (v0 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v15 >= v25)
        {
LABEL_51:

          goto LABEL_61;
        }
      }
      else if (v15 >= *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_51;
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        unint64_t v0 = Strong;
        uint64_t v20 = *(void *)(v29 + v33);
        if ((v20 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v15 < 0) {
            goto LABEL_57;
          }
          if ((unint64_t)v15 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_58;
          }
          id v21 = *(id *)(v20 + 8 * v15 + 32);
        }
        id v5 = [v0 headerView:v29 menuForButtonConfiguration:v21];

        swift_unknownObjectRelease();
      }
      else
      {
        id v5 = 0;
      }
      [v7 setMenu:v5 v26];

      uint64_t v2 = v30;
      if (v4 == v28) {
        goto LABEL_61;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_bridgeObjectRetain();
  }
LABEL_61:
  swift_bridgeObjectRelease();
}

id sub_1001DE3F0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide];
  [v1 setAlignment:3];
  [v1 setDirectionalLayoutMargins:0.0, 8.0, 0.0, 0.0];
  [v1 setLayoutMarginsRelativeArrangement:0];
  [v1 setAxis:0];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_titleLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [[self sharedManager] largeTitleFontStatic];
  swift_unknownObjectRelease();
  [v2 setFont:v3];

  [v0 addSubview:v2];
  unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_bottomHairlineView];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setAutoUpdateTheme:0];
  [v0 addSubview:v4];
  LODWORD(v5) = 1144750080;
  [v0 setContentCompressionResistancePriority:1 forAxis:v5];
  id v6 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_tapGestureRecognizer];
  [v6 addTarget:v0 action:"handleTapWithGestureRecognizer:"];
  [v6 setDelegate:v0];

  return [v0 addGestureRecognizer:v6];
}

void sub_1001DE5F0()
{
  sub_1001DE7DC();
  uint64_t v1 = self;
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 activateConstraints:isa];

  id v3 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide];
  id v4 = [v3 trailingAnchor];
  id v5 = [v0 trailingAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  uint64_t v7 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing;
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing];
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing] = v6;

  uint64_t v9 = *(void **)&v0[v7];
  if (v9) {
    [v9 setActive:1];
  }
  id v10 = [v3 leadingAnchor];
  id v11 = [v0 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  double v13 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing];
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing] = v12;
}

uint64_t sub_1001DE7DC()
{
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100F646A0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_titleLabel];
  id v3 = [v2 leadingAnchor];
  id v4 = [v0 layoutMarginsGuide];
  id v5 = [v4 leadingAnchor];

  id v6 = [v3 constraintEqualToAnchor:v5 constant:3.0];
  *(void *)(v1 + 32) = v6;
  id v7 = [v2 topAnchor];
  id v8 = [v0 layoutMarginsGuide];
  id v9 = [v8 topAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9 constant:8.0];
  *(void *)(v1 + 40) = v10;
  id v11 = [v2 bottomAnchor];
  id v12 = [v0 layoutMarginsGuide];
  id v13 = [v12 bottomAnchor];

  id v14 = [v11 constraintLessThanOrEqualToAnchor:v13];
  *(void *)(v1 + 48) = v14;
  id v15 = [v2 trailingAnchor];
  id v16 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide];
  id v17 = [v16 leadingAnchor];
  id v18 = [v15 constraintLessThanOrEqualToAnchor:v17];

  *(void *)(v1 + 56) = v18;
  id v19 = [v16 topAnchor];
  id v20 = [v0 topAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v1 + 64) = v21;
  id v22 = [v16 bottomAnchor];
  id v23 = [v0 bottomAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v1 + 72) = v24;
  uint64_t v25 = *(void **)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_bottomHairlineView];
  id v26 = [v25 bottomAnchor];
  id v27 = [v0 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v1 + 80) = v28;
  id v29 = [v25 leadingAnchor];
  id v30 = [v0 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v1 + 88) = v31;
  id v32 = [v25 trailingAnchor];
  id v33 = [v0 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v1 + 96) = v34;
  specialized Array._endMutation()();
  return v1;
}

void sub_1001DEC10(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  id v6 = [objc_allocWithZone((Class)MUCardButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 addTarget:a2 action:"cardButtonTappedWithSender:" forControlEvents:0x2000];
  switch(*(void *)(v5 + OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type))
  {
    case 0:
      v19[0] = 0x65736F6C43;
      v19[1] = 0xE500000000000000;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v7;
      String.append<A>(contentsOf:)();
      break;
    case 1:
      v19[0] = 1937010500;
      v19[1] = 0xE400000000000000;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v8;
      String.append<A>(contentsOf:)();
      break;
    case 2:
      strcpy((char *)v19, "DotsFill");
      BYTE1(v19[1]) = 0;
      WORD1(v19[1]) = 0;
      HIDWORD(v19[1]) = -402653184;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v9;
      String.append<A>(contentsOf:)();
      break;
    case 3:
      v19[0] = 0x6572616853;
      v19[1] = 0xE500000000000000;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v10;
      String.append<A>(contentsOf:)();
      break;
    case 5:
      strcpy((char *)v19, "AddToLibrary");
      BYTE5(v19[1]) = 0;
      HIWORD(v19[1]) = -5120;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v12;
      String.append<A>(contentsOf:)();
      break;
    case 6:
      v19[0] = 0xD000000000000011;
      v19[1] = 0x8000000100F7C0C0;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v13;
      String.append<A>(contentsOf:)();
      break;
    default:
      strcpy((char *)v19, "Unknown");
      v19[1] = 0xE700000000000000;
      uint64_t v17 = String.init<A>(_:)();
      uint64_t v18 = v11;
      String.append<A>(contentsOf:)();
      break;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setSymbolName:v14, v17, v18, v19[0], v19[1]];

  [v6 setBlurBackground:*(unsigned __int8 *)(a2 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_blurButtons)];
  id v15 = v6;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setAccessibilityIdentifier:v16];

  *a3 = v15;
}

void sub_1001DF0F8(uint64_t a1)
{
  uint64_t v2 = (unint64_t *)&v1[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons];
  swift_beginAccess();
  unint64_t v3 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  id v30 = v1;
  id v31 = v2;
  id v5 = (id)sub_100100830(0, (unint64_t *)&qword_1015CE490);
  uint64_t v6 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v3 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = (char *)(v6 - 3);
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_31:
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v26 = (void *)swift_allocObject();
      v26[2] = v25;
      v26[3] = v9;
      v26[4] = v5;
      swift_retain();
      id v27 = v9;
      id v28 = v5;
      sub_1001DF608(v8, (uint64_t)sub_1001E3560, (uint64_t)v26);

      swift_release();
      swift_release();
      return;
    }
    id v10 = [v7 underlyingButton];
    char v11 = static NSObject.== infix(_:_:)();

    if (v11) {
      break;
    }

    ++v6;
    if (v9 == (char *)v4) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = *v31;
  swift_bridgeObjectRetain();
  sub_1002A93F8((uint64_t)v8, v12);
  uint64_t v14 = v13;
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_35;
  }
  uint64_t v17 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations;
  unint64_t v18 = *(void *)&v30[OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations];
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 >= v29) {
      goto LABEL_35;
    }
LABEL_14:
    id v5 = [objc_allocWithZone((Class)MUPresentationOptions) init];
    [v5 setSourceView:a1];
    uint64_t v19 = *(void *)&v30[v17];
    if ((v19 & 0xC000000000000001) == 0)
    {
      if (v14 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v14 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v9 = (char *)*(id *)(v19 + 8 * v14 + 32);
        if (v14) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
      __break(1u);
LABEL_40:
      swift_bridgeObjectRetain();
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_27:
      [v19 headerView:v30 selectedActionButton:v24 withPresentationOptions:v5];

      swift_unknownObjectRelease();
LABEL_29:

      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_22;
    }
LABEL_18:
    if (*(void *)&v9[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type] != 5) {
      goto LABEL_22;
    }
    if (qword_1015CBC30 != -1) {
      goto LABEL_43;
    }
    while (1)
    {
      if (byte_1015D45A0 == 1)
      {
        id v20 = [v30 traitCollection];
        id v21 = [v20 preferredContentSizeCategory];

        LOBYTE(v20) = UIContentSizeCategory.isAccessibilityCategory.getter();
        if ((v20 & 1) == 0) {
          goto LABEL_31;
        }
      }
LABEL_22:
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong)
      {

        goto LABEL_29;
      }
      uint64_t v19 = Strong;
      uint64_t v23 = *(void *)&v30[v17];
      if ((v23 & 0xC000000000000001) != 0) {
        goto LABEL_40;
      }
      if (v14 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v14 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v24 = *(id *)(v23 + 8 * v14 + 32);
        goto LABEL_27;
      }
      __break(1u);
LABEL_43:
      swift_once();
    }
  }
  if (v14 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_14;
  }
LABEL_35:
}

void sub_1001DF568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      [v7 headerView:v6 selectedActionButton:a2 withPresentationOptions:a3];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1001DF608(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [objc_allocWithZone((Class)type metadata accessor for AddToLibraryAnimationView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 layoutIfNeeded];
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 0;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 0;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = v12;
  v13[3] = v11;
  uint64_t v13[4] = v9;
  v13[5] = v10;
  v13[6] = v8;
  v13[7] = a1;
  v13[8] = a2;
  v13[9] = a3;
  uint64_t v14 = *(void **)&v4[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide];
  swift_retain();
  uint64_t v53 = v9;
  swift_retain();
  uint64_t v52 = v10;
  swift_retain();
  id v15 = v8;
  id v16 = a1;
  swift_retain();
  [v14 layoutIfNeeded];
  [v14 bounds];
  uint64_t v17 = &v4[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_capturedTitleToEndTrailingConstant];
  *(void *)uint64_t v17 = v18;
  v17[8] = 0;
  [v15 systemLayoutSizeFittingSize:UILayoutFittingExpandedSize.width, UILayoutFittingExpandedSize.height];
  uint64_t v20 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing;
  id v21 = *(void **)&v4[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing];
  if (v21)
  {
    double v22 = v19 + 16.0;
    id v23 = v21;
    [v4 bounds];
    if (v24 + -16.0 < v22) {
      double v22 = v24 + -16.0;
    }
    [v14 bounds];
    if (v22 > v25) {
      double v26 = v22;
    }
    else {
      double v26 = v25;
    }
    [v23 setConstant:-v26];
  }
  id v27 = *(void **)&v4[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing];
  if (v27) {
    [v27 setActive:0];
  }
  id v28 = *(void **)&v4[v20];
  if (v28) {
    [v28 setActive:1];
  }
  [v14 layoutIfNeeded];
  id v29 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v30 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v29 _maps_removeArrangedSubview:v30];

  [v14 setLayoutMarginsRelativeArrangement:1];
  id v31 = self;
  id v32 = (void *)swift_allocObject();
  v32[2] = v4;
  v32[3] = v16;
  v32[4] = v15;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1001E35FC;
  *(void *)(v33 + 24) = v32;
  uint64_t v58 = sub_10010B930;
  uint64_t v59 = (void *)v33;
  aBlock = _NSConcreteStackBlock;
  uint64_t v55 = 1107296256;
  uint64_t v56 = sub_10010B988;
  os_log_type_t v57 = &unk_1012DD558;
  id v34 = _Block_copy(&aBlock);
  id v35 = v15;
  id v36 = v16;
  id v37 = v4;
  swift_retain();
  swift_release();
  [v31 performWithoutAnimation:v34];
  _Block_release(v34);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    sub_1001E11D0();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v35;
    *(void *)(v40 + 24) = v37;
    uint64_t v58 = sub_1001E36C0;
    uint64_t v59 = (void *)v40;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_10008C380;
    os_log_type_t v57 = &unk_1012DD5A8;
    id v41 = _Block_copy(&aBlock);
    id v51 = v35;
    char v42 = v37;
    swift_release();
    id v43 = (void *)swift_allocObject();
    v43[2] = v52;
    v43[3] = sub_1001E35E4;
    v43[4] = v13;
    uint64_t v58 = sub_1001E36CC;
    uint64_t v59 = v43;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_100316A88;
    os_log_type_t v57 = &unk_1012DD5F8;
    unint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v31 animateWithDuration:0 delay:v41 usingSpringWithDamping:v44 initialSpringVelocity:0.3 options:0.0 animations:0.7 completion:0.5];
    _Block_release(v44);
    _Block_release(v41);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v42;
    uint64_t v58 = sub_1001E3710;
    uint64_t v59 = (void *)v45;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_10008C380;
    os_log_type_t v57 = &unk_1012DD648;
    uint64_t v46 = _Block_copy(&aBlock);
    uint64_t v47 = v42;
    swift_release();
    id v48 = (void *)swift_allocObject();
    v48[2] = v47;
    v48[3] = v53;
    v48[4] = sub_1001E35E4;
    v48[5] = v13;
    uint64_t v58 = sub_1001E37B4;
    uint64_t v59 = v48;
    aBlock = _NSConcreteStackBlock;
    uint64_t v55 = 1107296256;
    uint64_t v56 = sub_100316A88;
    os_log_type_t v57 = &unk_1012DD698;
    unint64_t v49 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v50 = v47;
    swift_retain();
    swift_release();
    [v31 animateWithDuration:0 delay:v46 usingSpringWithDamping:v49 initialSpringVelocity:0.4 options:0.0 animations:0.7 completion:0.5];

    swift_release();
    _Block_release(v49);
    _Block_release(v46);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_1001DFED8(uint64_t a1, double a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  id v10 = [Strong underlyingHeaderViewForHitTesting:v3];
  swift_unknownObjectRelease();
  if (!v10) {
    goto LABEL_7;
  }
  id v11 = [v4 window];
  [v4 convertPoint:v11 toView:a2];
  double v13 = v12;
  double v15 = v14;

  [v10 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  id v24 = [v4 window];
  [v10 convertRect:v24 toView:v17];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  v43.origin.x = v26;
  v43.origin.CGFloat y = v28;
  v43.size.width = v30;
  v43.size.height = v32;
  v42.x = v13;
  v42.CGFloat y = v15;
  if (!CGRectContainsPoint(v43, v42))
  {

LABEL_7:
    v41.receiver = v4;
    v41.super_class = ObjectType;
    return [super hitTest:a1 withEvent:a2];
  }
  id v33 = [v4 window];
  if (v33)
  {
    id v34 = v33;
    [v33 convertPoint:v10 toCoordinateSpace:v13];
    double v36 = v35;
    double v38 = v37;
  }
  else
  {
    double v38 = 0.0;
    double v36 = 0.0;
  }
  id v39 = [v10 hitTest:a1 withEvent:v36];

  return v39;
}

BOOL sub_1001E0188(void *a1)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 1;
  }
  id v4 = [Strong underlyingHeaderViewForHitTesting:v1];
  swift_unknownObjectRelease();
  if (!v4) {
    return 1;
  }
  id v5 = [v1 window];
  [a1 locationInView:v5];
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  [v4 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  id v18 = [v1 window];
  [v4 convertRect:v18 toView:v11];
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;
  CGFloat v26 = v25;

  v29.origin.x = v20;
  v29.origin.CGFloat y = v22;
  v29.size.width = v24;
  v29.size.height = v26;
  v28.x = v7;
  v28.CGFloat y = v9;
  LOBYTE(v18) = CGRectContainsPoint(v29, v28);

  return (v18 & 1) == 0;
}

void sub_1001E0340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v16 = (void *)Strong;
    double v17 = (unsigned char *)(a2 + 16);
    swift_beginAccess();
    if (*v17 != 1
      && (swift_beginAccess(), *(unsigned char *)(a3 + 16) == 1)
      && (swift_beginAccess(), (*(unsigned char *)(a4 + 16) & 1) != 0))
    {
      swift_beginAccess();
      *double v17 = 1;
      id v27 = self;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = a5;
      *(void *)(v18 + 24) = v16;
      CGFloat v32 = sub_1001E3880;
      id v33 = (void *)v18;
      aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      CGFloat v30 = sub_10008C380;
      double v31 = &unk_1012DD738;
      double v19 = _Block_copy(&aBlock);
      id v20 = a5;
      id v21 = v16;
      swift_release();
      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      double v23 = (void *)swift_allocObject();
      void v23[2] = v22;
      void v23[3] = v20;
      v23[4] = a6;
      v23[5] = a7;
      v23[6] = a8;
      CGFloat v32 = sub_1001E38D8;
      id v33 = v23;
      aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      CGFloat v30 = sub_100316A88;
      double v31 = &unk_1012DD788;
      CGFloat v24 = _Block_copy(&aBlock);
      id v25 = v20;
      id v26 = a6;
      swift_retain();
      swift_release();
      [v27 animateWithDuration:0 delay:v19 usingSpringWithDamping:v24 initialSpringVelocity:0.2 options:0.0 animations:0.7 completion:0.5];

      _Block_release(v24);
      _Block_release(v19);
    }
    else
    {
    }
  }
}

id sub_1001E0604(void *a1, unsigned char *a2)
{
  sub_1001E06B0();
  id v4 = *(void **)&a2[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing];
  if (v4)
  {
    double v5 = *(double *)&a2[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_capturedTitleToEndTrailingConstant];
    if (a2[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_capturedTitleToEndTrailingConstant + 8]) {
      double v5 = 0.0;
    }
    [v4 setConstant:-v5];
  }
  [a1 layoutIfNeeded];
  [*(id *)&a2[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide] layoutIfNeeded];

  return [a2 layoutIfNeeded];
}

void sub_1001E06B0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint);
  if (v1) {
    [v1 setActive:1];
  }
  id v2 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  id v3 = [v2 layer];

  CATransform3DMakeScale(&a, 0.1, 0.1, 0.1);
  long long v31 = *(_OWORD *)&a.m13;
  long long v32 = *(_OWORD *)&a.m11;
  long long v29 = *(_OWORD *)&a.m23;
  long long v30 = *(_OWORD *)&a.m21;
  long long v27 = *(_OWORD *)&a.m33;
  long long v28 = *(_OWORD *)&a.m31;
  long long v26 = *(_OWORD *)&a.m41;
  CGFloat m43 = a.m43;
  CGFloat m44 = a.m44;
  id v6 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v6 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v36.origin.x = v8;
  v36.origin.CGFloat y = v10;
  v36.size.width = v12;
  v36.size.height = v14;
  CGFloat Width = CGRectGetWidth(v36);
  CATransform3DMakeTranslation(&a, Width * -0.5, 0.0, 0.0);
  long long v16 = *(_OWORD *)&a.m11;
  long long v17 = *(_OWORD *)&a.m13;
  long long v18 = *(_OWORD *)&a.m21;
  long long v19 = *(_OWORD *)&a.m23;
  long long v20 = *(_OWORD *)&a.m31;
  long long v21 = *(_OWORD *)&a.m33;
  long long v22 = *(_OWORD *)&a.m41;
  long long v23 = *(_OWORD *)&a.m43;
  *(_OWORD *)&a.m11 = v32;
  *(_OWORD *)&a.m13 = v31;
  *(_OWORD *)&a.m21 = v30;
  *(_OWORD *)&a.m23 = v29;
  *(_OWORD *)&a.m31 = v28;
  *(_OWORD *)&a.m33 = v27;
  *(_OWORD *)&a.m41 = v26;
  a.CGFloat m43 = m43;
  a.CGFloat m44 = m44;
  *(_OWORD *)&b.m11 = v16;
  *(_OWORD *)&b.m13 = v17;
  *(_OWORD *)&b.m21 = v18;
  *(_OWORD *)&b.m23 = v19;
  *(_OWORD *)&b.m31 = v20;
  *(_OWORD *)&b.m33 = v21;
  *(_OWORD *)&b.m41 = v22;
  *(_OWORD *)&b.CGFloat m43 = v23;
  CATransform3DConcat(&v33, &a, &b);
  CATransform3D a = v33;
  [v3 setTransform:&a];

  id v24 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  [v24 setDirectionalLayoutMargins:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];

  id v25 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v25 setHidden:1];
}

uint64_t sub_1001E0908(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    double v11 = (void *)result;
    CGFloat v12 = self;
    double v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v11;
    v13[3] = a3;
    uint64_t v13[4] = a4;
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_1001E3934;
    *(void *)(v14 + 24) = v13;
    long long v32 = sub_1001E39A8;
    CATransform3D v33 = (void *)v14;
    aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    long long v30 = sub_10010B988;
    long long v31 = &unk_1012DD800;
    double v15 = _Block_copy(&aBlock);
    id v16 = v11;
    id v17 = a3;
    id v18 = a4;
    swift_retain();
    long long v19 = v12;
    swift_release();
    [v12 performWithoutAnimation:v15];
    _Block_release(v15);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v16;
      *(void *)(v21 + 24) = v17;
      long long v32 = sub_1001E3950;
      CATransform3D v33 = (void *)v21;
      aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      long long v30 = sub_10008C380;
      long long v31 = &unk_1012DD850;
      long long v22 = _Block_copy(&aBlock);
      id v23 = v16;
      id v24 = v17;
      swift_release();
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v26 = (void *)swift_allocObject();
      v26[2] = v25;
      v26[3] = a5;
      v26[4] = a6;
      long long v32 = sub_1001E399C;
      CATransform3D v33 = v26;
      aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      long long v30 = sub_100316A88;
      long long v31 = &unk_1012DD8A0;
      long long v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v19 animateWithDuration:0 delay:v22 usingSpringWithDamping:v27 initialSpringVelocity:0.2 options:0.0 animations:0.7 completion:0.5];

      _Block_release(v27);
      _Block_release(v22);
      return swift_release();
    }
  }
  return result;
}

void sub_1001E0C54(uint64_t a1, uint64_t a2, void *a3)
{
  CGFloat v8 = *(void **)(a1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide);
  [v8 setLayoutMarginsRelativeArrangement:0];
  [v8 _maps_removeArrangedSubview:a2];
  uint64_t v9 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations;
  unint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (v11) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11) {
    goto LABEL_18;
  }
LABEL_3:
  if ((v10 & 0xC000000000000001) != 0)
  {
    CGFloat v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    CGFloat v12 = (char *)*(id *)(v10 + 32);
  }
  long long v20 = v12;
  swift_bridgeObjectRelease();
  id v4 = &OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type;
  if (*(void *)&v20[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_type] == 5)
  {
    unint64_t v10 = *(void *)(a1 + v9);
    unint64_t v22 = v10;
    unint64_t v3 = v10 >> 62;
    if (!(v10 >> 62))
    {
      if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        swift_bridgeObjectRetain();
        goto LABEL_10;
      }
      goto LABEL_26;
    }
LABEL_23:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_36:
      __break(1u);
      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_10:
      if ((v10 & 0xC000000000000001) == 0)
      {
        if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_33;
        }
        id v13 = *(id *)(v10 + 32);
        if (!v3) {
          goto LABEL_13;
        }
        goto LABEL_28;
      }
LABEL_27:
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!v3)
      {
LABEL_13:
        uint64_t v14 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_29:
        if (!v14)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        sub_100348EBC(0, 1);

        double v15 = (objc_class *)type metadata accessor for InfoCardButtonConfiguration();
        id v16 = objc_allocWithZone(v15);
        *(void *)&v16[*v4] = 6;
        v16[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_shouldBlur] = 0;
        *(void *)&v16[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_tintColor] = 0;
        *(void *)&v16[OBJC_IVAR____TtC4Maps27InfoCardButtonConfiguration_visibility] = 0;
        v21.receiver = v16;
        v21.super_class = v15;
        uint64_t v11 = (uint64_t)[super init];
        if (!(v22 >> 62))
        {
LABEL_31:
          sub_10034851C(0, 0, v11);
          *(void *)(a1 + v9) = v22;
          swift_bridgeObjectRelease();
          NSString v17 = String._bridgeToObjectiveC()();
          [a3 setSymbolName:v17];

          String.init<A>(_:)();
          String.append<A>(contentsOf:)();
          NSString v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [a3 setAccessibilityIdentifier:v18];

          [a3 layoutIfNeeded];
          [v8 insertArrangedSubview:a3 atIndex:0];

          return;
        }
LABEL_33:
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if ((v19 & 0x8000000000000000) == 0) {
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_35;
      }
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
}

id sub_1001E10A0(char *a1, void *a2)
{
  id v4 = *(void **)&a1[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide];
  [v4 setSpacing:0.0];
  double v5 = *(void **)&a1[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing];
  if (v5) {
    [v5 setActive:0];
  }
  id v6 = *(void **)&a1[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing];
  if (v6) {
    [v6 setActive:1];
  }
  [v4 layoutIfNeeded];
  [a2 layoutIfNeeded];

  return [a1 layoutIfNeeded];
}

void sub_1001E115C(uint64_t a1, uint64_t a2, void (*a3)(id))
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = Strong;
    a3([Strong layoutIfNeeded]);
  }
}

void sub_1001E11D0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint);
  if (v1) {
    [v1 setActive:1];
  }
  id v2 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v3 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v2 addArrangedSubview:v3];

  id v4 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  id v5 = [v4 layer];

  CATransform3DMakeScale(&a, 0.1, 0.1, 0.1);
  long long v33 = *(_OWORD *)&a.m13;
  long long v34 = *(_OWORD *)&a.m11;
  long long v31 = *(_OWORD *)&a.m23;
  long long v32 = *(_OWORD *)&a.m21;
  long long v29 = *(_OWORD *)&a.m33;
  long long v30 = *(_OWORD *)&a.m31;
  long long v28 = *(_OWORD *)&a.m41;
  CGFloat m43 = a.m43;
  CGFloat m44 = a.m44;
  id v8 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v8 bounds];
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  CGFloat v16 = v15;

  v38.origin.x = v10;
  v38.origin.CGFloat y = v12;
  v38.size.width = v14;
  v38.size.height = v16;
  CGFloat Width = CGRectGetWidth(v38);
  CATransform3DMakeTranslation(&a, Width * -0.5, 0.0, 0.0);
  long long v18 = *(_OWORD *)&a.m11;
  long long v19 = *(_OWORD *)&a.m13;
  long long v20 = *(_OWORD *)&a.m21;
  long long v21 = *(_OWORD *)&a.m23;
  long long v22 = *(_OWORD *)&a.m31;
  long long v23 = *(_OWORD *)&a.m33;
  long long v24 = *(_OWORD *)&a.m41;
  long long v25 = *(_OWORD *)&a.m43;
  *(_OWORD *)&a.m11 = v34;
  *(_OWORD *)&a.m13 = v33;
  *(_OWORD *)&a.m21 = v32;
  *(_OWORD *)&a.m23 = v31;
  *(_OWORD *)&a.m31 = v30;
  *(_OWORD *)&a.m33 = v29;
  *(_OWORD *)&a.m41 = v28;
  a.CGFloat m43 = m43;
  a.CGFloat m44 = m44;
  *(_OWORD *)&b.m11 = v18;
  *(_OWORD *)&b.m13 = v19;
  *(_OWORD *)&b.m21 = v20;
  *(_OWORD *)&b.m23 = v21;
  *(_OWORD *)&b.m31 = v22;
  *(_OWORD *)&b.m33 = v23;
  *(_OWORD *)&b.m41 = v24;
  *(_OWORD *)&b.CGFloat m43 = v25;
  CATransform3DConcat(&v35, &a, &b);
  CATransform3D a = v35;
  [v5 setTransform:&a];

  id v26 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  [v26 setDirectionalLayoutMargins:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];

  id v27 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v27 setHidden:1];
}

id sub_1001E1474(char *a1, void *a2)
{
  id v4 = *(void **)&a1[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint];
  if (v4) {
    [v4 setActive:0];
  }
  id v5 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  id v6 = [v5 layer];

  long long v7 = *(_OWORD *)&CATransform3DIdentity.m13;
  v14[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v14[1] = v7;
  long long v8 = *(_OWORD *)&CATransform3DIdentity.m23;
  _OWORD v14[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  _OWORD v14[3] = v8;
  long long v9 = *(_OWORD *)&CATransform3DIdentity.m33;
  _OWORD v14[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v14[5] = v9;
  long long v10 = *(_OWORD *)&CATransform3DIdentity.m43;
  v14[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  void v14[7] = v10;
  [v6 setTransform:v14];

  id v11 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  if (qword_1015CBC38 != -1) {
    swift_once();
  }
  [v11 setDirectionalLayoutMargins:*(double *)&qword_1015D45A8, unk_1015D45B0, *(double *)&qword_1015D45B8, unk_1015D45C0];

  id v12 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v12 setHidden:0];

  [a1 layoutIfNeeded];
  return [a2 layoutIfNeeded];
}

uint64_t sub_1001E1614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v31 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  __chkstk_darwin(v8);
  long long v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v26 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  CGFloat v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  NSString v17 = (char *)&v24 - v16;
  sub_100100830(0, (unint64_t *)&qword_1015CE570);
  long long v18 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  long long v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v14, v11);
  long long v19 = (void *)swift_allocObject();
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  void v19[2] = a2;
  v19[3] = v20;
  v19[4] = v21;
  aBlock[4] = sub_1001E3828;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008C380;
  aBlock[3] = &unk_1012DD6E8;
  long long v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10010B9B0();
  sub_1000FF33C((uint64_t *)&unk_1015CE580);
  sub_10010B554();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v17, v26);
}

uint64_t type metadata accessor for InfoCardHeaderView()
{
  return self;
}

void sub_1001E1AA0()
{
  qword_1015D45A8 = 0;
  unk_1015D45B0 = 0;
  qword_1015D45B8 = 0;
  unk_1015D45C0 = 0x4020000000000000;
}

uint64_t sub_1001E1AB8()
{
  uint64_t result = sub_1001E1AD8();
  qword_1015D45C8 = result;
  return result;
}

uint64_t sub_1001E1AD8()
{
  id v0 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v0 setScale:1.0];
  [v0 setPreferredRange:2];
  id v1 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v0 format:0.0, 0.0, 100.0, 40.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(_OWORD *)(v2 + 32) = xmmword_100F646B0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1001E34C4;
  *(void *)(v3 + 24) = v2;
  v8[4] = sub_100118710;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100115828;
  v8[3] = &unk_1012DD440;
  id v4 = _Block_copy(v8);
  swift_retain();
  swift_release();
  id v5 = [v1 imageWithActions:v4];

  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    id v7 = [v5 CGImage];
    swift_release();

    return (uint64_t)v7;
  }
  return result;
}

void sub_1001E1CE0(void *a1, double a2, double a3, double a4, double a5)
{
  id v10 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v10 setBounds:a2, a3, a4, a5];
  sub_1000FF33C((uint64_t *)&unk_1015D4740);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100F5CFA0;
  uint64_t v12 = self;
  id v13 = [v12 whiteColor];
  id v14 = [v13 colorWithAlphaComponent:0.0];

  id v15 = [v14 CGColor];
  type metadata accessor for CGColor(0);
  uint64_t v17 = v16;
  *(void *)(v11 + 56) = v16;
  *(void *)(v11 + 32) = v15;
  id v18 = [v12 whiteColor];
  id v19 = [v18 colorWithAlphaComponent:0.7];

  id v20 = [v19 CGColor];
  *(void *)(v11 + 88) = v17;
  *(void *)(v11 + 64) = v20;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setColors:isa];

  id v22 = [a1 CGContext];
  [v10 renderInContext:v22];
}

id sub_1001E1F04()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___gradientView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___gradientView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___gradientView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [self whiteColor];
    [v4 setBackgroundColor:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_1001E1FD8()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___blurView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___blurView);
  if (v2) {
    goto LABEL_6;
  }
  if (qword_1015CBC40 != -1) {
    swift_once();
  }
  if (qword_1015D45C8)
  {
    id v3 = [objc_allocWithZone((Class)MUBlurView) initWithVariableBlurWithRadius:qword_1015D45C8 maskImage:1.0];
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    v3;

    uint64_t v2 = 0;
LABEL_6:
    id v5 = v2;
    return;
  }
  __break(1u);
}

void sub_1001E20A8()
{
  [v0 setClipsToBounds:0];
  id v1 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  id v2 = [v1 widthAnchor];

  id v3 = [v2 constraintEqualToConstant:0.0];
  id v4 = *(void **)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint];
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint] = v3;

  id v5 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  [v0 addSubview:v5];

  id v6 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v7 = sub_1001E27B0();
  [v6 addArrangedSubview:v7];

  id v8 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v9 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label, (uint64_t (*)(void))sub_1001E2928);
  [v8 addArrangedSubview:v9];

  id v10 = [v0 traitCollection];
  id v11 = [v10 userInterfaceStyle];

  id v12 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v13 = objc_allocWithZone((Class)UIColor);
  if (v11 == (id)2)
  {
    double v14 = 0.224;
    double v15 = 0.231;
    double v16 = 0.25;
    double v17 = 1.0;
  }
  else
  {
    double v15 = 0.9;
    double v14 = 0.894;
    double v17 = 1.0;
    double v16 = 0.894;
  }
  id v18 = [v13 initWithRed:v14 green:v15 blue:v16 alpha:v17];
  [v12 setBackgroundColor:v18];

  sub_1001E1FD8();
  id v20 = v19;
  id v21 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  [v0 insertSubview:v20 belowSubview:v21];

  uint64_t v63 = self;
  sub_1000FF33C(&qword_1015CD310);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100F5E870;
  id v23 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v24 = [v23 topAnchor];

  id v25 = [v0 topAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v22 + 32) = v26;
  id v27 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v28 = [v27 bottomAnchor];

  id v29 = [v0 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v22 + 40) = v30;
  id v31 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v32 = [v31 leadingAnchor];

  id v33 = [v0 leadingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 48) = v34;
  id v35 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v36 = [v35 trailingAnchor];

  id v37 = [v0 trailingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v22 + 56) = v38;
  sub_1001E1FD8();
  uint64_t v40 = v39;
  id v41 = [v39 topAnchor];

  id v42 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v43 = [v42 topAnchor];

  id v44 = [v41 constraintEqualToAnchor:v43];
  *(void *)(v22 + 64) = v44;
  sub_1001E1FD8();
  uint64_t v46 = v45;
  id v47 = [v45 bottomAnchor];

  id v48 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v49 = [v48 bottomAnchor];

  id v50 = [v47 constraintEqualToAnchor:v49 constant:8.0];
  *(void *)(v22 + 72) = v50;
  sub_1001E1FD8();
  uint64_t v52 = v51;
  id v53 = [v51 leadingAnchor];

  id v54 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v55 = [v54 leadingAnchor];

  id v56 = [v53 constraintEqualToAnchor:v55 constant:-16.0];
  *(void *)(v22 + 80) = v56;
  sub_1001E1FD8();
  uint64_t v58 = v57;
  id v59 = [v57 trailingAnchor];

  id v60 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v61 = [v60 trailingAnchor];

  id v62 = [v59 constraintEqualToAnchor:v61 constant:-16.0];
  *(void *)(v22 + 88) = v62;
  specialized Array._endMutation()();
  sub_100100830(0, (unint64_t *)&qword_1015CE5E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v63 activateConstraints:isa];
}

id sub_1001E27B0()
{
  uint64_t v1 = OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___button;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___button);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___button);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)MUCardButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setSymbolName:v5];

    [v4 setDirectionalLayoutMargins:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];
    [v4 setDrawBackground:0];
    [v4 setBlurBackground:0];
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1001E28C8(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1001E2928()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  if (qword_1015CBD78 != -1) {
    swift_once();
  }
  v6._uint64_t countAndFlagsBits = 0xD000000000000051;
  v6._uint64_t object = (void *)0x8000000100F7C060;
  v2._uint64_t object = (void *)0x8000000100F7C030;
  v2._uint64_t countAndFlagsBits = 0xD000000000000020;
  v3._uint64_t countAndFlagsBits = 0x617262694C206E49;
  v3._uint64_t object = (void *)0xEA00000000007972;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)qword_101611820, v3, v6);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v4];

  [v0 setLineBreakMode:2];
  return v0;
}

id sub_1001E2AA4()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  id v1 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  id v2 = sub_1001E28C8(&OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView, (uint64_t (*)(void))sub_1001E31D0);
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v23.origin.x = v4;
  v23.origin.CGFloat y = v6;
  v23.size.width = v8;
  v23.size.height = v10;
  [v1 _setContinuousCornerRadius:CGRectGetHeight(v23) * 0.5];

  id v11 = *(void **)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_gradient];
  id v12 = sub_1001E1F04();
  [v12 bounds];
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;

  return [v11 setFrame:v14, v16, v18, v20];
}

uint64_t type metadata accessor for AddToLibraryAnimationView()
{
  return self;
}

void *sub_1001E2CE0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v5) {
      break;
    }
    id v12 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      double v9 = v8;
      id v10 = v8;
      sub_1001DEC10((uint64_t *)&v10, a2, &v11);

      if (v2) {
        return (void *)swift_release();
      }
      ++v7;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v5 == v7) {
        return v12;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1001E2E48()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_title];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_lastButtonTrailingPadding] = 0x4030000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing] = 0;
  CGFloat v4 = &v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_capturedTitleToEndTrailingConstant];
  *(void *)CGFloat v4 = 0;
  v4[8] = 1;
  uint64_t v5 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_titleLabel;
  id v6 = objc_allocWithZone((Class)UILabel);
  uint64_t v7 = v0;
  *(void *)&v0[v5] = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons] = _swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_bottomHairlineView;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)HairlineView) init];
  *(void *)&v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_hairLineAlpha] = 0;
  *(void *)&v0[v3] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_hideTitleLabel] = 0;
  v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_hideActionButtons] = 0;
  v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_blurButtons] = 0;
  id v10 = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  *(void *)&v7[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_tapGestureRecognizer] = v10;

  v13.receiver = v7;
  v13.super_class = ObjectType;
  id v11 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001DE3F0();
  sub_1001DE5F0();

  return v11;
}

void sub_1001E3050()
{
  id v1 = &v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_title];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView__buttonConfigurations] = _swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_lastButtonTrailingPadding] = 0x4030000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsTrailingToSuperViewTrailing] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLeadingToSuperviewTrailing] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_capturedTitleToEndTrailingConstant];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  uint64_t v3 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_titleLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtons] = _swiftEmptyArrayStorage;
  uint64_t v4 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v5 = OBJC_IVAR____TtC4Maps18InfoCardHeaderView_bottomHairlineView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)HairlineView) init];
  *(void *)&v0[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1001E31D0()
{
  id v0 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAxis:0];
  [v0 setAlignment:3];
  [v0 setClipsToBounds:1];
  [v0 setSpacing:0.0];
  uint64_t v1 = qword_1015CBC38;
  id v2 = v0;
  if (v1 != -1) {
    swift_once();
  }
  [v2 setDirectionalLayoutMargins:*(double *)&qword_1015D45A8, unk_1015D45B0, *(double *)&qword_1015D45B8, unk_1015D45C0];

  [v2 setLayoutMarginsRelativeArrangement:1];
  return v2;
}

id sub_1001E32EC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___gradientView] = 0;
  uint64_t v2 = OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_gradient;
  id v3 = objc_allocWithZone((Class)CAGradientLayer);
  uint64_t v4 = v0;
  *(void *)&v0[v2] = [v3 init];
  *(void *)&v4[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___blurView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___button] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label] = 0;

  v7.receiver = v4;
  v7.super_class = ObjectType;
  id v5 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1001E20A8();

  return v5;
}

void sub_1001E33E4()
{
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_labelWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___gradientView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView_gradient;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CAGradientLayer) init];
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___blurView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___stackView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___button] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Maps25AddToLibraryAnimationView____lazy_storage___label] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001E34B4()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001E34C4(void *a1)
{
  sub_1001E1CE0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001E34D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E34E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E3518()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001E3560()
{
  sub_1001DF568(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001E356C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001E357C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1001E35E4()
{
  sub_1001E0340(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

id sub_1001E35FC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  id v3 = *(void **)(v0[2] + OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide);
  [v3 _maps_removeArrangedSubview:v1];
  [v3 insertArrangedSubview:v2 atIndex:0];

  return [v3 layoutIfNeeded];
}

uint64_t sub_1001E3670()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001E3680()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001E36C0()
{
  return sub_1001E1474(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001E36CC(uint64_t a1)
{
  return sub_1001E1614(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1001E36D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001E3710()
{
  uint64_t v1 = *(char **)(v0 + 16);
  [*(id *)&v1[OBJC_IVAR____TtC4Maps18InfoCardHeaderView_actionButtonsLayoutGuide] setSpacing:100.0];

  return [v1 layoutIfNeeded];
}

uint64_t sub_1001E376C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001E37B4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 32);
  [*(id *)(v0 + 16) layoutIfNeeded];
  uint64_t v3 = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 1;
  return v2(v3);
}

uint64_t sub_1001E3828()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 24);
  uint64_t v3 = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 1;
  return v2(v3);
}

id sub_1001E3880()
{
  return sub_1001E0604(*(void **)(v0 + 16), *(unsigned char **)(v0 + 24));
}

uint64_t sub_1001E3888()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001E38D8(uint64_t a1)
{
  return sub_1001E0908(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1001E38EC()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001E3934()
{
  sub_1001E0C54(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1001E3940()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001E3950()
{
  return sub_1001E10A0(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001E395C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001E399C(uint64_t a1)
{
  sub_1001E115C(a1, *(void *)(v1 + 16), *(void (**)(id))(v1 + 24));
}

id sub_1001E3A04(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v2) {
    return 0;
  }
  id v4 = v2;
  id v5 = [v4 isTopContext:v1];
  if (v5 && (sub_100240078(a1) & 1) == 0) {
    [a1 _maps_lineShouldZoomMapRegionOnSelection];
  }

  return v5;
}

id sub_1001E3AE8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Maps18TransitLineContext_chromeViewController);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v2 isTopContext:v0];
  if (v3) {
    [v2 popContext:v0 animated:1 completion:0];
  }

  return v3;
}

uint64_t sub_1001E3BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_1001E3BA8()
{
  sub_1001E5104();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_1001E3C98(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11 + 1;
  uint64_t v13 = *(void *)(v10 + 64) + 7;
  unsigned int v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((((((v13 + (v12 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 10 > 0x18)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v18 = a2[v8];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v20 = v8;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v18 = (v21 | (v19 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v18 = v21 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v11;
    if (v18 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v23 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v23 = 0;
    }
    *((unsigned char *)a1 + v8) = v23;
    unint64_t v24 = (unint64_t)&a2[v12] & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v22, v24, v9);
    id v25 = (void *)((v13 + v24) & 0xFFFFFFFFFFFFFFF8);
    id v26 = (void *)((v13 + (((unint64_t)a1 + v12) & v22)) & 0xFFFFFFFFFFFFFFF8);
    *id v26 = *v25;
    unint64_t v27 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = *(void *)v28;
    *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
    *(void *)unint64_t v27 = v29;
    id v30 = (void *)(((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFFFF8);
    id v31 = (void *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFFFF8);
    *id v30 = *v31;
    unint64_t v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = *(void *)v33;
    *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
    *(void *)unint64_t v32 = v34;
    *(unsigned char *)(v32 + 9) = *(unsigned char *)(v33 + 9);
  }
  return a1;
}

uint64_t sub_1001E3F70(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v12 = *(uint64_t (**)(unint64_t))(v11 + 8);
  unint64_t v13 = (unint64_t)&a1[v5 + 1 + *(unsigned __int8 *)(v11 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);

  return v12(v13);
}

void *sub_1001E40F8(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v7 + v15 + 1;
  unint64_t v17 = ((unint64_t)a1 + v16) & ~v15;
  unint64_t v18 = (unint64_t)&a2[v16] & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 48) + 7;
  uint64_t v20 = (void *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  int v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v21;
  unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v24 = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v24;
  id v25 = (void *)(((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8);
  id v26 = (void *)(((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  *id v26 = *v25;
  unint64_t v27 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v23) = *(unsigned char *)(v28 + 8);
  *(void *)unint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = v23;
  *(unsigned char *)(v27 + 9) = *(unsigned char *)(v28 + 9);
  return a1;
}

unsigned __int8 *sub_1001E4334(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 24;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20 + 1;
  unint64_t v22 = (unint64_t)&a1[v21] & ~v20;
  unint64_t v23 = (unint64_t)&a2[v21] & ~v20;
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 40) + 7;
  id v25 = (void *)((v24 + v22) & 0xFFFFFFFFFFFFFFF8);
  id v26 = (void *)((v24 + v23) & 0xFFFFFFFFFFFFFFF8);
  *id v25 = *v26;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v29 = *(unsigned char *)(v28 + 8);
  *(void *)unint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = v29;
  id v30 = (void *)(((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  id v31 = (void *)(((unint64_t)v25 + 31) & 0xFFFFFFFFFFFFFFF8);
  *id v31 = *v30;
  unint64_t v32 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v28) = *(unsigned char *)(v33 + 8);
  *(void *)unint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = v28;
  *(unsigned char *)(v32 + 9) = *(unsigned char *)(v33 + 9);
  return a1;
}

void *sub_1001E467C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v13;
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 32;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = v7 + v16 + 1;
  unint64_t v18 = ((unint64_t)a1 + v17) & ~v16;
  unint64_t v19 = (unint64_t)&a2[v17] & ~v16;
  (*(void (**)(unint64_t, unint64_t))(v14 + 32))(v18, v19);
  uint64_t v20 = *(void *)(v15 + 32) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v25 = *(unsigned char *)(v24 + 8);
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = v25;
  id v26 = (void *)(((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)(((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v27 = *v26;
  unint64_t v28 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v24) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v24;
  *(unsigned char *)(v28 + 9) = *(unsigned char *)(v29 + 9);
  return a1;
}

unsigned __int8 *sub_1001E4898(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21 + 1;
  unint64_t v23 = (unint64_t)&a1[v22] & ~v21;
  unint64_t v24 = (unint64_t)&a2[v22] & ~v21;
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))(v23, v24);
  uint64_t v25 = *(void *)(v20 + 24) + 7;
  id v26 = (void *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)((v25 + v24) & 0xFFFFFFFFFFFFFFF8);
  *id v26 = *v27;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = ((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v30 = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v30;
  id v31 = (void *)(((unint64_t)v27 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (void *)(((unint64_t)v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v32 = *v31;
  unint64_t v33 = ((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v29) = *(unsigned char *)(v34 + 8);
  *(void *)unint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = v29;
  *(unsigned char *)(v33 + 9) = *(unsigned char *)(v34 + 9);
  return a1;
}

uint64_t sub_1001E4BDC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = v7 + v10 + 1;
  if (v11 < a2)
  {
    unint64_t v13 = ((((((*(void *)(v8 + 64) + (v12 & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 10;
    if (v13 <= 3) {
      unsigned int v14 = ((a2 - v11 + 0xFFFF) >> (8 * v13)) + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v13);
        if (!*((unsigned char *)a1 + v13)) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v13);
        if (*(unsigned __int16 *)((char *)a1 + v13)) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1001E4DCCLL);
      case 4:
        int v17 = *(_DWORD *)((char *)a1 + v13);
        if (!v17) {
          break;
        }
LABEL_24:
        int v19 = (v17 - 1) << (8 * v13);
        if (v13 <= 3)
        {
          int v20 = *a1;
        }
        else
        {
          int v19 = 0;
          int v20 = *(_DWORD *)a1;
        }
        return v11 + (v20 | v19) + 1;
      default:
        break;
    }
  }
  if (v9 > 0xFE)
  {
    uint64_t v22 = *(uint64_t (**)(unint64_t))(v8 + 48);
    return v22(((unint64_t)a1 + v12) & ~v10);
  }
  else
  {
    unsigned int v21 = *((unsigned __int8 *)a1 + v7);
    if (v21 >= 2) {
      return (v21 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

void sub_1001E4DE0(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(type metadata accessor for DynamicTypeSize() - 8) + 64);
  uint64_t v9 = *(void *)(*(void *)(a4 + 16) - 8);
  if (v8 <= 8) {
    unint64_t v8 = 8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = *(void *)(v9 + 64);
  if (v11 <= 0xFE) {
    unsigned int v14 = 254;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  size_t v15 = v8 + 1;
  uint64_t v16 = v8 + 1 + v12;
  size_t v17 = ((((((v13 + (v16 & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 10;
  char v18 = 8 * v17;
  if (v14 >= a3)
  {
    int v21 = 0;
    if (v14 >= a2)
    {
LABEL_19:
      uint64_t v22 = ~v12;
      switch(v21)
      {
        case 1:
          a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v17] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_56;
        case 4:
          *(_DWORD *)&a1[v17] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v11 > 0xFE)
            {
              id v26 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
              v26((unint64_t)&a1[v16] & v22, a2);
            }
            else if (a2 > 0xFE)
            {
              if (v15 <= 3) {
                int v27 = ~(-1 << (8 * v15));
              }
              else {
                int v27 = -1;
              }
              if (v8 != -1)
              {
                int v28 = v27 & (a2 - 255);
                if (v15 <= 3) {
                  int v29 = v8 + 1;
                }
                else {
                  int v29 = 4;
                }
                bzero(a1, v15);
                switch(v29)
                {
                  case 2:
                    *(_WORD *)a1 = v28;
                    break;
                  case 3:
                    *(_WORD *)a1 = v28;
                    a1[2] = BYTE2(v28);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v28;
                    break;
                  default:
                    *a1 = v28;
                    break;
                }
              }
            }
            else
            {
              a1[v8] = -(char)a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (v17 <= 3) {
      unsigned int v19 = ((a3 - v14 + 0xFFFF) >> v18) + 1;
    }
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
    if (v14 >= a2) {
      goto LABEL_19;
    }
  }
  unsigned int v23 = ~v14 + a2;
  unsigned int v24 = v23 >> v18;
  bzero(a1, v17);
  if (v17 <= 3) {
    int v25 = v24 + 1;
  }
  else {
    int v25 = 1;
  }
  if (v17 > 3) {
    *(_DWORD *)a1 = v23;
  }
  else {
    *(_WORD *)a1 = v23;
  }
  switch(v21)
  {
    case 1:
      a1[v17] = v25;
      break;
    case 2:
      *(_WORD *)&a1[v17] = v25;
      break;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1001E50B4);
    case 4:
      *(_DWORD *)&a1[v17] = v25;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for DynamicTextAdaptiveStack()
{
  return sub_1000F5520();
}

void sub_1001E5104()
{
  if (!qword_1015D4840)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1015D4840);
    }
  }
}

uint64_t sub_1001E515C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E51A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v66 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = type metadata accessor for HStack();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v55 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v53 = (char *)&v53 - v10;
  uint64_t v60 = v6;
  uint64_t v61 = v5;
  uint64_t v11 = type metadata accessor for VStack();
  uint64_t v58 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  os_log_type_t v57 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v56 = (char *)&v53 - v14;
  uint64_t v15 = *(void *)(a1 - 8);
  __chkstk_darwin(v16);
  char v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DynamicTypeSize();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  int v25 = (char *)&v53 - v24;
  uint64_t v59 = v11;
  uint64_t v65 = v7;
  uint64_t v26 = type metadata accessor for _ConditionalContent();
  uint64_t v63 = *(void *)(v26 - 8);
  uint64_t v64 = v26;
  __chkstk_darwin(v26);
  id v62 = (char *)&v53 - v27;
  sub_100127B9C((uint64_t)v25);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v22, enum case for DynamicTypeSize.accessibility1(_:), v19);
  sub_1001E59C4();
  LOBYTE(v11) = dispatch thunk of static Comparable.< infix(_:_:)();
  int v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v22, v19);
  v28(v25, v19);
  int v29 = v3;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v3, a1);
  if ((v11 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, a1);
    uint64_t v33 = v64;
    id v35 = v62;
    uint64_t v34 = v63;
    uint64_t v36 = v59;
    goto LABEL_5;
  }
  char v30 = v55;
  int v31 = v18[*(int *)(a1 + 56)];
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, a1);
  uint64_t v33 = v64;
  uint64_t v32 = v65;
  id v35 = v62;
  uint64_t v34 = v63;
  uint64_t v36 = v59;
  if (v31 == 1)
  {
LABEL_5:
    __chkstk_darwin(*(void *)&v29[*(int *)(a1 + 40)]);
    *(&v53 - 4) = v43;
    *(&v53 - 3) = v44;
    *(&v53 - 2) = v29;
    uint64_t v45 = (uint64_t)v57;
    VStack.init(alignment:spacing:content:)();
    uint64_t WitnessTable = swift_getWitnessTable();
    id v47 = v56;
    sub_100254BFC(v45, v36, WitnessTable);
    id v48 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v48(v45, v36);
    sub_100254BFC(v47, v36, WitnessTable);
    swift_getWitnessTable();
    sub_100150B54(v45, v36);
    v48(v45, v36);
    v48((uint64_t)v47, v36);
    goto LABEL_6;
  }
  __chkstk_darwin(*(void *)&v29[*(int *)(a1 + 48)]);
  *(&v53 - 4) = v37;
  *(&v53 - 3) = v38;
  *(&v53 - 2) = v29;
  uint64_t v39 = (uint64_t)v30;
  HStack.init(alignment:spacing:content:)();
  uint64_t v40 = swift_getWitnessTable();
  id v41 = v53;
  sub_100254BFC(v30, v32, v40);
  id v42 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v42(v39, v32);
  sub_100254BFC(v41, v32, v40);
  swift_getWitnessTable();
  sub_100150C4C(v39, v36, v32);
  v42(v39, v32);
  v42((uint64_t)v41, v32);
LABEL_6:
  uint64_t v49 = swift_getWitnessTable();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v67 = v49;
  uint64_t v68 = v50;
  uint64_t v51 = swift_getWitnessTable();
  sub_100254BFC(v35, v33, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v33);
}

uint64_t sub_1001E58C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DynamicTextAdaptiveStack();
  sub_100254BFC(a1 + *(int *)(v9 + 36), a2, a3);
  sub_100254BFC(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

unint64_t sub_1001E59C4()
{
  unint64_t result = qword_1015D8CF0;
  if (!qword_1015D8CF0)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1015D8CF0);
  }
  return result;
}

uint64_t sub_1001E5A1C()
{
  return sub_1001E58C8(v0[4], v0[2], v0[3]);
}

uint64_t sub_1001E5A3C()
{
  return swift_getWitnessTable();
}

uint64_t Session._maps_location(for:reverseGeocode:maxAge:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  *(void *)(v5 + 40) = v4;
  *(double *)(v5 + 32) = a4;
  *(unsigned char *)(v5 + 80) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return _swift_task_switch(sub_1001E5B38, 0, 0);
}

uint64_t sub_1001E5B38()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1000FF33C(&qword_1015D4850);
  uint64_t v2 = type metadata accessor for Handle();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, v1, v2);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_1001E5CB8;
  uint64_t v7 = *(void *)(v0 + 32);
  char v8 = *(unsigned char *)(v0 + 80);
  *(void *)(v6 + 144) = *(void *)(v0 + 40);
  *(void *)(v6 + 136) = v7;
  *(unsigned char *)(v6 + 192) = v8;
  *(void *)(v6 + 128) = v5;
  return _swift_task_switch(sub_1001E629C, 0, 0);
}

uint64_t sub_1001E5CB8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_1001E5F44;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1001E5DD4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E5DD4()
{
  if (*(void *)(v0[8] + 16) && (unint64_t v1 = sub_1001EA9E0(v0[3]), (v2 & 1) != 0))
  {
    unint64_t v3 = v1;
    uint64_t v4 = v0[2];
    uint64_t v5 = *(void *)(v0[8] + 56);
    uint64_t v6 = type metadata accessor for Location();
    uint64_t v7 = *(void *)(v6 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(v4, v5 + *(void *)(v7 + 72) * v3, v6);
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v6 = type metadata accessor for Location();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v7 + 56))(v0[2], v8, 1, v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1001E5F44()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Session._maps_latestLocation(for:includeAddress:timeout:)(uint64_t a1, uint64_t a2, char a3, double a4)
{
  *(void *)(v5 + 40) = v4;
  *(double *)(v5 + 32) = a4;
  *(unsigned char *)(v5 + 80) = a3;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  return _swift_task_switch(sub_1001E5FD4, 0, 0);
}

uint64_t sub_1001E5FD4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1000FF33C(&qword_1015D4850);
  uint64_t v2 = type metadata accessor for Handle();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_100F5CF70;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, v1, v2);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_1001E6154;
  uint64_t v7 = *(void *)(v0 + 32);
  char v8 = *(unsigned char *)(v0 + 80);
  *(void *)(v6 + 120) = *(void *)(v0 + 40);
  *(void *)(v6 + 112) = v7;
  *(unsigned char *)(v6 + 176) = v8;
  *(void *)(v6 + 104) = v5;
  return _swift_task_switch(sub_1001E71B8, 0, 0);
}

uint64_t sub_1001E6154(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_1001EC9A0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_1001EC998;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t Session._maps_locations(for:reverseGeocode:maxAge:)(uint64_t a1, char a2, double a3)
{
  *(void *)(v4 + 144) = v3;
  *(double *)(v4 + 136) = a3;
  *(unsigned char *)(v4 + 192) = a2;
  *(void *)(v4 + 128) = a1;
  return _swift_task_switch(sub_1001E629C, 0, 0);
}

uint64_t sub_1001E629C()
{
  uint64_t v22 = v0;
  if (*(double *)(v0 + 136) <= 0.0)
  {
    if (qword_1015CBC48 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000F2248(v9, (uint64_t)qword_101611570);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 141558275;
      *(void *)(v0 + 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2081;
      type metadata accessor for Handle();
      swift_bridgeObjectRetain();
      uint64_t v13 = Array.description.getter();
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = sub_1000F2280(v13, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Trying to fetch cached locations for handles %{private,mask.hash}s with max age <= 0; ignoring max age",
        (uint8_t *)v12,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = sub_1001E6DBC;
  }
  else
  {
    if (qword_1015CBC48 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    *(void *)(v0 + 152) = sub_1000F2248(v1, (uint64_t)qword_101611570);
    swift_bridgeObjectRetain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v5 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 141558531;
      *(void *)(v0 + 104) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v5 + 12) = 2081;
      type metadata accessor for Handle();
      swift_bridgeObjectRetain();
      uint64_t v6 = Array.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 112) = sub_1000F2280(v6, v8, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v5 + 22) = 2050;
      *(void *)(v0 + 120) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetching cached locations for handles: %{private,mask.hash}s with max age: %{public}f", (uint8_t *)v5, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v16;
    *uint64_t v16 = v0;
    uint64_t v17 = sub_1001E6758;
  }
  v16[1] = v17;
  uint64_t v18 = *(unsigned __int8 *)(v0 + 192);
  uint64_t v19 = *(void *)(v0 + 128);
  return Session.locations(for:reverseGeocode:)(v19, v18);
}

uint64_t sub_1001E6758(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1001E6EBC;
  }
  else {
    uint64_t v4 = sub_1001E686C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E686C()
{
  uint64_t v27 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t type = v2;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(void *)(v0 + 80) = 1752392040;
    v26[0] = v23;
    *(_DWORD *)uint64_t v3 = 141558531;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    log = v1;
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 88) = sub_1000F2280(v4, v6, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2081;
    type metadata accessor for Location();
    sub_1001EC94C(&qword_1015D4870, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v7 = Dictionary.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 96) = sub_1000F2280(v7, v9, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v1 = log;
    _os_log_impl((void *)&_mh_execute_header, log, type, "Successfully fetched cached locations for handles: %{private,mask.hash}s : %{private}s", (uint8_t *)v3, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = sub_1001EB63C(*(void *)(v0 + 168), *(double *)(v0 + 136));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  os_log_type_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    *(void *)(v0 + 56) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v14 = Array.description.getter();
    os_log_type_t v24 = v12;
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 64) = sub_1000F2280(v14, v16, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 22) = 2081;
    type metadata accessor for Location();
    sub_1001EC94C(&qword_1015D4870, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_retain();
    uint64_t v17 = Dictionary.description.getter();
    unint64_t v19 = v18;
    swift_release();
    *(void *)(v0 + 72) = sub_1000F2280(v17, v19, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v24, "Filtered fetched cached locations for handles: %{private,mask.hash}s : %{private}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v10);
}

uint64_t sub_1001E6DBC(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1001E6EBC()
{
  uint64_t v13 = v0;
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v0[4] = 1752392040;
    *(_DWORD *)uint64_t v3 = 141558531;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[5] = sub_1000F2280(v4, v6, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "Got error fetching cached locations for handles: %{private,mask.hash}s : %{public}@", (uint8_t *)v3, 0x20u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t Session._maps_latestLocations(for:includeAddress:timeout:)(uint64_t a1, char a2, double a3)
{
  *(void *)(v4 + 120) = v3;
  *(double *)(v4 + 112) = a3;
  *(unsigned char *)(v4 + 176) = a2;
  *(void *)(v4 + 104) = a1;
  return _swift_task_switch(sub_1001E71B8, 0, 0);
}

uint64_t sub_1001E71B8()
{
  uint64_t v30 = v0;
  if (*(double *)(v0 + 112) <= 0.0)
  {
    if (qword_1015CBC48 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_1000F2248(v9, (uint64_t)qword_101611570);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 141558275;
      *(void *)(v0 + 16) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 12) = 2081;
      type metadata accessor for Handle();
      swift_bridgeObjectRetain();
      uint64_t v13 = Array.description.getter();
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = sub_1000F2280(v13, v15, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Trying to fetch latest locations for handles %{private,mask.hash}s with timeout <= 0; ignoring timeout",
        (uint8_t *)v12,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    int v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v25;
    *int v25 = v0;
    v25[1] = sub_1001E7B34;
    uint64_t v26 = *(unsigned __int8 *)(v0 + 176);
    uint64_t v27 = *(void *)(v0 + 104);
    return Session.latestLocations(for:includeAddress:)(v27, v26);
  }
  else
  {
    if (qword_1015CBC48 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    *(void *)(v0 + 128) = sub_1000F2248(v1, (uint64_t)qword_101611570);
    swift_bridgeObjectRetain_n();
    os_log_type_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v5 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 141558531;
      *(void *)(v0 + 80) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v5 + 12) = 2081;
      type metadata accessor for Handle();
      swift_bridgeObjectRetain();
      uint64_t v6 = Array.description.getter();
      unint64_t v8 = v7;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 88) = sub_1000F2280(v6, v8, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v5 + 22) = 2050;
      *(void *)(v0 + 96) = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Fetching latest locations for handles %{private,mask.hash}s with timeout %{public}f", (uint8_t *)v5, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v16 = *(void *)(v0 + 120);
    char v17 = *(unsigned char *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 104);
    uint64_t v19 = swift_allocObject();
    *(void *)(v0 + 136) = v19;
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = v18;
    *(unsigned char *)(v19 + 32) = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v20 = static Duration.seconds(_:)();
    uint64_t v22 = v21;
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1015D4888 + dword_1015D4888);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1001E7730;
    return v28(v20, v22, (uint64_t)&unk_1015D4880, v19);
  }
}

uint64_t sub_1001E7730(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1001E7C34;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1001E784C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1001E784C()
{
  char v17 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v0[7] = 1752392040;
    uint64_t v16 = v14;
    *(_DWORD *)uint64_t v3 = 141558531;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    os_log_type_t type = v2;
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[8] = sub_1000F2280(v4, v6, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2081;
    type metadata accessor for Location();
    sub_1001EC94C(&qword_1015D4870, (void (*)(uint64_t))&type metadata accessor for Handle);
    swift_bridgeObjectRetain();
    uint64_t v7 = Dictionary.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[9] = sub_1000F2280(v7, v9, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Successfully fetched latest locations for handles: %{private,mask.hash}s : %{private}s", (uint8_t *)v3, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = v0[19];
  os_log_type_t v11 = (uint64_t (*)(uint64_t))v0[1];
  return v11(v10);
}

uint64_t sub_1001E7B34(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1001E7C34()
{
  uint64_t v13 = v0;
  swift_release();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    log = v1;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v0[4] = 1752392040;
    *(_DWORD *)uint64_t v3 = 141558531;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 12) = 2081;
    type metadata accessor for Handle();
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[5] = sub_1000F2280(v4, v6, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2114;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v2, "Got error fetching latest locations for handles: %{private,mask.hash}s : %{public}@", (uint8_t *)v3, 0x20u);
    sub_1000FF33C((uint64_t *)&unk_1015CF600);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_willThrow();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1001E7F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1001E7FBC;
  return Session.latestLocations(for:includeAddress:)(a3, a4);
}

uint64_t sub_1001E7FBC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_1001E8108, 0, 0);
  }
}

uint64_t sub_1001E8108()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001E812C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10003D64C(v0, qword_101611570);
  sub_1000F2248(v0, (uint64_t)qword_101611570);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1001E81B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = type metadata accessor for ContinuousClock.Instant();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_1001E82E0, 0, 0);
}

uint64_t sub_1001E82E0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  long long v11 = *(_OWORD *)(v0 + 40);
  ContinuousClock.init()();
  ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 112) = v6;
  *(void *)(v0 + 120) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v4);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  *(_OWORD *)(v7 + 16) = v11;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  uint64_t v9 = sub_1000FF33C(&qword_1015D48E0);
  *uint64_t v8 = v0;
  v8[1] = sub_1001E8468;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000001CLL, 0x8000000100F7C100, sub_1001EBC64, v7, v9);
}

uint64_t sub_1001E8468()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1001E8648;
  }
  else
  {
    swift_task_dealloc();
    *(void *)(v2 + 152) = *(void *)(v2 + 16);
    uint64_t v3 = sub_1001E858C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1001E858C()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v5 = *(void *)(v0 + 152);
  return v4(v5);
}

uint64_t sub_1001E8648()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[7];
  swift_task_dealloc();
  v2(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1001E8710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ContinuousClock();
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return _swift_task_switch(sub_1001E8844, 0, 0);
}

uint64_t sub_1001E8844()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  long long v11 = *(_OWORD *)(v0 + 40);
  ContinuousClock.init()();
  ContinuousClock.now.getter();
  ContinuousClock.Instant.advanced(by:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(void *)(v0 + 112) = v6;
  *(void *)(v0 + 120) = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v4);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  *(_OWORD *)(v7 + 16) = v11;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1001E89C0;
  uint64_t v9 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, 0, 0, 0xD00000000000001CLL, 0x8000000100F7C100, sub_1001EB89C, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_1001E89C0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1001E8648;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001E8ADC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001E8ADC()
{
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  (*(void (**)(void, void))(v0 + 112))(*(void *)(v0 + 80), *(void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001E8B94(uint64_t a1, void (*a2)(unint64_t, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v53 = a5;
  uint64_t v51 = a4;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v41 = a1;
  uint64_t v50 = type metadata accessor for ContinuousClock();
  uint64_t v57 = *(void *)(v50 - 8);
  uint64_t v52 = *(void *)(v57 + 64);
  __chkstk_darwin(v50);
  uint64_t v58 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v56 = *(void *)(v48 - 8);
  uint64_t v49 = *(void *)(v56 + 64);
  __chkstk_darwin(v48);
  uint64_t v45 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000FF33C(&qword_1015D48E8);
  uint64_t v54 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v42 = v10;
  long long v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000FF33C(&qword_1015CD250);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimeoutActor();
  uint64_t v15 = swift_allocObject();
  uint64_t v55 = v15;
  swift_defaultActor_initialize();
  *(unsigned char *)(v15 + 112) = 0;
  uint64_t v16 = type metadata accessor for TaskPriority();
  uint64_t v17 = *(void *)(v16 - 8);
  id v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v39 = v17 + 56;
  v38(v14, 1, 1, v16);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v40(v11, a1, v8);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = v9;
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = 0;
  void v20[3] = 0;
  uint64_t v21 = v47;
  v20[4] = v46;
  v20[5] = v21;
  _OWORD v20[6] = v55;
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v19 + 32);
  uint64_t v44 = v19 + 32;
  uint64_t v46 = v22;
  id v37 = v11;
  uint64_t v23 = v54;
  v22((unint64_t)v20 + ((v18 + 56) & ~v18), v11, v54);
  swift_retain();
  swift_retain();
  id v43 = v14;
  uint64_t v47 = sub_100042AF4((uint64_t)v14, (uint64_t)&unk_1015D48F8, (uint64_t)v20);
  v38(v14, 1, 1, v16);
  uint64_t v24 = v56;
  int v25 = v45;
  uint64_t v26 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v45, v51, v48);
  uint64_t v27 = v57;
  uint64_t v28 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v53, v50);
  v40(v11, v41, v23);
  unint64_t v29 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v30 = (v49 + *(unsigned __int8 *)(v27 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v31 = (v52 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = 0;
  *(void *)(v33 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v33 + v29, v25, v26);
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v33 + v30, v58, v28);
  uint64_t v34 = v54;
  *(void *)(v33 + v31) = v55;
  *(void *)(v33 + v32) = v47;
  v46(v33 + ((v18 + v32 + 8) & ~v18), v37, v34);
  sub_100042AF4((uint64_t)v43, (uint64_t)&unk_1015D4908, v33);
  return swift_release();
}