void sub_100B8A988(id a1, BOOL a2, GEORPThirdPartyPhotoSharingPreference *a3)
{
  GEORPThirdPartyPhotoSharingPreference *v3;
  void *v4;
  void *v5;
  UGCThirdPartyPhotoSharingSplashViewController *v6;
  uint64_t vars8;

  if (a2)
  {
    v3 = a3;
    v6 = objc_alloc_init(UGCThirdPartyPhotoSharingSplashViewController);
    [(UGCThirdPartyPhotoSharingSplashViewController *)v6 setModalPresentationStyle:2];
    [(UGCThirdPartyPhotoSharingSplashViewController *)v6 setThirdPartyPhotoSharingPreference:v3];

    v4 = +[UIApplication sharedMapsDelegate];
    v5 = [v4 chromeViewController];
    [v5 _maps_topMostPresentViewController:v6 animated:1 completion:0];
  }
}

id sub_100B8AAAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) invokeCompletion];
}

void sub_100B8AB78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B8AB94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained invokeCompletion];
    id WeakRetained = v2;
  }
}

void sub_100B8ACAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B8ACC8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _presentPOIEnrichmentViewController];
    id WeakRetained = v2;
  }
}

void sub_100B8ADAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3 = *(void **)(v2 + 160);
  *(void *)(v2 + 160) = 0;

  if ([*(id *)(a1 + 32) hasPhotoPickerEmphasis]
    && [*(id *)(a1 + 32) shouldDismissPlacecard])
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100B8AE94;
    v6[3] = &unk_1012E6EA8;
    v4 = *(void **)(a1 + 32);
    id v7 = *(id *)(a1 + 40);
    [v4 _dismissPlacecardWithCompletion:v6];
  }
  else
  {
    v5 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v5();
  }
}

uint64_t sub_100B8AE94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100B8AF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B8AF9C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained invokeCompletion];
    id WeakRetained = v2;
  }
}

void sub_100B8B090(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100B8B0AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained invokeCompletion];
    id WeakRetained = v2;
  }
}

uint64_t sub_100B8B37C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v3 = *(void **)(v2 + 144);
  *(void *)(v2 + 144) = 0;

  v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v4();
}

uint64_t sub_100B8B3D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containeeDelegate];
  [v2 containeeViewControllerGoToPreviousState:*(void *)(*(void *)(a1 + 32) + 144) withSender:0];

  v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_100B8BA00(id a1)
{
  *(double *)&qword_101610928 = (double)GEOConfigGetInteger();
}

void sub_100B8BA74(id a1)
{
  *(double *)&qword_101610938 = (double)GEOConfigGetInteger();
}

id sub_100B8C620(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_100B8D07C(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id v5 = [v2 beginningOfDocument];
  v3 = [*(id *)(*(void *)(a1 + 32) + 16) endOfDocument];
  v4 = [v2 textRangeFromPosition:v5 toPosition:v3];
  [*(id *)(*(void *)(a1 + 32) + 16) setSelectedTextRange:v4];
}

void sub_100B8DAE4(uint64_t a1)
{
  [*(id *)(a1 + 32) _markAsEditing];
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 cell:*(void *)(a1 + 32) didReceiveMapItem:*(void *)(a1 + 40)];
}

id sub_100B8E894(void *a1)
{
  id v2 = a1;
  id v22 = objc_alloc_init((Class)NSMutableArray);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id obj = v2;
  id v23 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v23)
  {
    uint64_t v21 = *(void *)v29;
    do
    {
      for (i = 0; i != v23; i = (char *)i + 1)
      {
        if (*(void *)v29 != v21) {
          objc_enumerationMutation(obj);
        }
        id v4 = *(id *)(*((void *)&v28 + 1) + 8 * i);
        id v5 = objc_alloc_init((Class)NSMutableArray);
        id v6 = [v4 copy];
        [v6 clearTimeRanges];
        if ([v4 timeRangesCount])
        {
          v24 = i;
          uint64_t v25 = 0;
          uint64_t v7 = 0;
          uint64_t v8 = 0;
          unint64_t v9 = 0;
          uint64_t v26 = 0;
          int v27 = 0;
          while (1)
          {
            unint64_t v10 = (unint64_t)[v4 timeRangeAtIndex:v7];
            unint64_t v11 = v10;
            unsigned int v13 = v12;
            unint64_t v14 = HIDWORD(v10);
            if (!v10 && v14 == 86400) {
              break;
            }
            if (v10)
            {
              if (v14 == 86400)
              {
                uint64_t v25 = 86400;
                uint64_t v26 = v10;
                int v27 = 3;
              }
              else
              {
                id v15 = [v6 copy];
                unint64_t v1 = v1 & 0xFFFFFFFF00000000 | v13;
                [v15 addTimeRange:v11, v1];
                [v5 addObject:v15];
              }
            }
            else
            {
              unint64_t v9 = HIDWORD(v10);
              uint64_t v8 = 3;
            }
            if (++v7 >= (unint64_t)[v4 timeRangesCount]) {
              goto LABEL_19;
            }
          }
          [v5 addObject:v4];
LABEL_19:
          id v17 = [v6 copy];
          id v16 = v17;
          if ((~v8 & 3) == 0) {
            [v17 addTimeRange:v9 << 32, v8];
          }
          if ((~v27 & 3) == 0) {
            [v16 addTimeRange:v26 | (v25 << 32)];
          }
          i = v24;
        }
        else
        {
          id v16 = [v6 copy];
        }
        if ([v16 timeRangesCount]) {
          [v5 addObject:v16];
        }
        id v18 = [v5 copy];

        [v22 addObjectsFromArray:v18];
      }
      id v23 = [obj countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v23);
  }

  return v22;
}

void sub_100B8F228(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B8F254(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5 || v6)
  {
    uint64_t v8 = sub_10000AF10();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to get virtual garage. Error: %@", buf, 0xCu);
    }
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100B8F3A4;
  v10[3] = &unk_1012E6690;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v11 = v5;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  objc_destroyWeak(&v12);
}

void sub_100B8F3A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateVirtualGarage:*(void *)(a1 + 32)];
}

id sub_100B8F774(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _notifyDidUpdateWaypointSet];
}

id sub_100B8F77C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyResultRouteCollectionChangeForCurrentTransportType];
}

id sub_100B8F84C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _notifyDidUpdateRoutes:a2];
}

id sub_100B8F9A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _notifyDidUpdateWaypointSet];
}

id sub_100B8F9B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _notifyResultRouteCollectionChangeForCurrentTransportType];
}

void sub_100B8FCA0(uint64_t a1)
{
  if ([&off_1013AE640 containsObject:*(void *)(a1 + 32)])
  {
    id v2 = [DrivePreferences alloc];
    v3 = +[NSUserDefaults standardUserDefaults];
    id v4 = [(DrivePreferences *)v2 initWithDefaults:v3];

    id v5 = [*(id *)(a1 + 40) drivePreferences];
    unsigned __int8 v6 = [v5 isEqual:v4];

    if ((v6 & 1) == 0) {
      [*(id *)(a1 + 40) _reloadUsingNewDrivePreferences:v4];
    }
  }
  if ([&off_1013AE808 containsObject:*(void *)(a1 + 32)])
  {
    uint64_t v7 = [WalkPreferences alloc];
    uint64_t v8 = +[NSUserDefaults standardUserDefaults];
    id v9 = [(WalkPreferences *)v7 initWithDefaults:v8];

    unint64_t v10 = [*(id *)(a1 + 40) walkPreferences];
    unsigned __int8 v11 = [(WatchSyncedPreferences *)v9 isEqual:v10];

    if ((v11 & 1) == 0) {
      [*(id *)(a1 + 40) _reloadUsingNewWalkPreferences:v9];
    }
  }
  if ([&off_1013AE898 containsObject:*(void *)(a1 + 32)])
  {
    id v12 = [TransitPreferences alloc];
    unsigned int v13 = +[NSUserDefaults standardUserDefaults];
    unint64_t v14 = [(WatchSyncedPreferences *)v12 initWithDefaults:v13];

    id v15 = [*(id *)(a1 + 40) transitPreferences];
    unsigned __int8 v16 = [(WatchSyncedPreferences *)v14 isEqual:v15];

    if ((v16 & 1) == 0) {
      [*(id *)(a1 + 40) _reloadUsingNewTransitPreferences:v14];
    }
  }
  if ([&off_1013AD680 containsObject:*(void *)(a1 + 32)])
  {
    id v17 = [CyclePreferences alloc];
    uint64_t v18 = +[NSUserDefaults standardUserDefaults];
    v20 = [(CyclePreferences *)v17 initWithDefaults:v18];

    v19 = [*(id *)(a1 + 40) cyclePreferences];
    LOBYTE(v18) = [v19 isEqual:v20];

    if ((v18 & 1) == 0) {
      [*(id *)(a1 + 40) _reloadUsingNewCyclePreferences:v20];
    }
  }
}

void sub_100B90C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B90C3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [RoutePlanningError alloc];
  unint64_t v5 = (unint64_t)[*(id *)(a1 + 32) transportType];
  if (v5 > 5) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = qword_100F737A8[v5];
  }
  uint64_t v7 = [(RoutePlanningError *)v4 initWithError:v3 transportType:v6 origin:*(void *)(a1 + 40) destination:*(void *)(a1 + 48)];

  uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

BOOL sub_100B91B60(id a1, MapsSession *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100B93480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100B934B8(uint64_t a1, uint64_t a2, void *a3)
{
  id result = [a3 isServerProvidedWaypoint];
  if ((result & 1) == 0) {
    ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  return result;
}

void sub_100B93830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B93854(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (!v5 || v6)
  {
    uint64_t v8 = sub_10000AF10();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      unint64_t v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to get virtual garage. Error: %@", buf, 0xCu);
    }
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100B939A4;
  v10[3] = &unk_1012E6690;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v11 = v5;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

  objc_destroyWeak(&v12);
}

void sub_100B939A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateVirtualGarage:*(void *)(a1 + 32)];
}

id sub_100B95284(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateVirtualGarage:*(void *)(a1 + 40)];
}

uint64_t sub_100B96908(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v9 = v5++ >= 9;
      if (v9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v12 = 0;
        unsigned int v13 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 28) |= 1u;
        while (1)
        {
          unint64_t v15 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v15 == -1 || v15 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v15);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v15 + 1;
          v14 |= (unint64_t)(v16 & 0x7F) << v12;
          if ((v16 & 0x80) == 0) {
            goto LABEL_45;
          }
          v12 += 7;
          BOOL v9 = v13++ >= 9;
          if (v9)
          {
            LODWORD(v14) = 0;
            goto LABEL_47;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_45:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_47:
        uint64_t v27 = 16;
        goto LABEL_56;
      case 2u:
        char v18 = 0;
        unsigned int v19 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 28) |= 2u;
        while (2)
        {
          unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v20 == -1 || v20 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v21 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 1;
            v14 |= (unint64_t)(v21 & 0x7F) << v18;
            if (v21 < 0)
            {
              v18 += 7;
              BOOL v9 = v19++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_51:
        uint64_t v27 = 20;
        goto LABEL_56;
      case 3u:
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v14 = 0;
        *(unsigned char *)(a1 + 28) |= 4u;
        while (2)
        {
          unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          if (v24 == -1 || v24 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 1;
            v14 |= (unint64_t)(v25 & 0x7F) << v22;
            if (v25 < 0)
            {
              v22 += 7;
              BOOL v9 = v23++ >= 9;
              if (v9)
              {
                LODWORD(v14) = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v14) = 0;
        }
LABEL_55:
        uint64_t v27 = 24;
LABEL_56:
        *(_DWORD *)(a1 + v27) = v14;
        goto LABEL_57;
      case 4u:
        id v26 = objc_alloc_init((Class)GEOLatLng);
        objc_storeStrong((id *)(a1 + 8), v26);
        if PBReaderPlaceMark() && (objc_msgSend(v26, "readFrom:", a2, 0, 0))
        {
          PBReaderRecallMark();

LABEL_57:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_57;
    }
  }
}

void sub_100B976F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B97710(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)MKMapItem);
  unsigned int v5 = [v3 geoMapItem];

  id v6 = [v4 initWithGeoMapItem:v5 isPlaceHolderPlace:0];
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
  char v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_100B97974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100B9798C(uint64_t a1, void *a2)
{
  id v6 = [a2 geoMapItem];
  id v3 = [objc_alloc((Class)MKMapItem) initWithGeoMapItem:v6 isPlaceHolderPlace:0];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  unsigned int v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100B97ABC(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    id v3 = sub_1000B944C();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      unsigned int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recents: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

BOOL sub_100B98CF8(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  int v4 = &OBJC_PROTOCOL___MSPHistoryEntryTransitLineItem;
  objc_opt_class();
  id v5 = v3;
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  if (v7
    && ([v7 historyEntry],
        char v8 = objc_claimAutoreleasedReturnValue(),
        unsigned int v9 = [v8 conformsToProtocol:v4],
        v8,
        v9))
  {
    id v10 = v5;
  }
  else
  {
    id v10 = 0;
  }

  if (v10)
  {
    BOOL v11 = 0;
  }
  else
  {
    id v12 = v5;
    unsigned int v13 = &OBJC_PROTOCOL___CuratedCollectionHistoryEntry;
    objc_opt_class();
    id v14 = v12;
    if (objc_opt_isKindOfClass()) {
      unint64_t v15 = v14;
    }
    else {
      unint64_t v15 = 0;
    }
    id v16 = v15;

    if (v16
      && ([v16 historyEntry],
          id v17 = objc_claimAutoreleasedReturnValue(),
          unsigned int v18 = [v17 conformsToProtocol:v13],
          v17,
          v18))
    {
      id v19 = v14;
    }
    else
    {
      id v19 = 0;
    }

    BOOL v11 = v19 == 0;
  }

  return v11;
}

id sub_100B9BDC8()
{
  if (qword_101610950 != -1) {
    dispatch_once(&qword_101610950, &stru_10131A2F0);
  }
  v0 = (void *)qword_101610948;

  return v0;
}

void sub_100B9C1A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100B9C230(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionIndoorOutdoorAnalyticsRecorder");
  id v2 = (void *)qword_101610948;
  qword_101610948 = (uint64_t)v1;
}

uint64_t sub_100B9C3A0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      break;
    }
    switch((v6 >> 3))
    {
      case 1u:
        char v13 = 0;
        unsigned int v14 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 32) |= 4u;
        while (1)
        {
          uint64_t v16 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v17 = v16 + 1;
          if (v16 == -1 || v17 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            break;
          }
          char v18 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v16);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17;
          v15 |= (unint64_t)(v18 & 0x7F) << v13;
          if ((v18 & 0x80) == 0) {
            goto LABEL_39;
          }
          v13 += 7;
          BOOL v10 = v14++ >= 9;
          if (v10)
          {
            LODWORD(v15) = 0;
            goto LABEL_41;
          }
        }
        *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_39:
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v15) = 0;
        }
LABEL_41:
        uint64_t v29 = 20;
        goto LABEL_46;
      case 2u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v15 = 0;
        *(unsigned char *)(a1 + 32) |= 2u;
        break;
      case 3u:
        uint64_t v25 = PBReaderReadString();
        id v26 = *(void **)(a1 + 24);
        *(void *)(a1 + 24) = v25;

        continue;
      case 4u:
        *(unsigned char *)(a1 + 32) |= 1u;
        unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v28 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v28 = 0;
        }
        *(void *)(a1 + 8) = v28;
        continue;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        continue;
    }
    while (1)
    {
      uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
      v15 |= (unint64_t)(v24 & 0x7F) << v20;
      if ((v24 & 0x80) == 0) {
        goto LABEL_43;
      }
      v20 += 7;
      BOOL v10 = v21++ >= 9;
      if (v10)
      {
        LODWORD(v15) = 0;
        goto LABEL_45;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_43:
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      LODWORD(v15) = 0;
    }
LABEL_45:
    uint64_t v29 = 16;
LABEL_46:
    *(_DWORD *)(a1 + v29) = v15;
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100B9DF98(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_101610958;
  qword_101610958 = (uint64_t)v1;
}

void sub_100B9E0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100B9E0EC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3)
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100B9E1C8;
    v8[3] = &unk_10131A318;
    id v7 = *(id *)(a1 + 40);
    v8[4] = *(void *)(a1 + 32);
    id v9 = v7;
    [WeakRetained _fetchAppDataForAppIDs:v5 withCompletion:v8];
  }
}

void sub_100B9E1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    char v4 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v4();
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) partitionedApplicationSuggestionsFromSuggestions:a2];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100B9E44C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_100B9E52C;
  v10[3] = &unk_1012EF080;
  id v11 = a3;
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 32);
  id v12 = v5;
  uint64_t v13 = v7;
  id v14 = v6;
  id v8 = v5;
  id v9 = v11;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_100B9E52C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
    v2();
  }
  else
  {
    id v3 = [*(id *)(a1 + 40) bodyData];
    id v15 = 0;
    char v4 = +[NSJSONSerialization JSONObjectWithData:v3 options:0 error:&v15];
    id v5 = v15;

    if (v5)
    {
      (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
    }
    else
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass())
      {
        id v6 = [v4 valueForKeyPath:@"pageData.bubbles.results"];
        uint64_t v7 = [v6 firstObject];

        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          id v8 = v7;
          if ((unint64_t)[v8 count] >= 0xB)
          {
            uint64_t v9 = [v8 subarrayWithRange:0, 10];

            id v8 = (id)v9;
          }
          BOOL v10 = [v8 valueForKey:@"id"];
          (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
        }
        else
        {
          uint64_t v13 = *(void **)(a1 + 48);
          NSErrorUserInfoKey v16 = NSLocalizedDescriptionKey;
          CFStringRef v17 = @"Expected array as value for SSURLConnectionRequestResultsKeyJSON but didn't get one.";
          id v14 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
          id v8 = [v13 _searchErrorWithUserInfo:v14];

          (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
        }
      }
      else
      {
        id v11 = *(void **)(a1 + 48);
        NSErrorUserInfoKey v18 = NSLocalizedDescriptionKey;
        CFStringRef v19 = @"Expected dictionary as root JSON object and didn't get one.";
        id v12 = +[NSDictionary dictionaryWithObjects:&v19 forKeys:&v18 count:1];
        uint64_t v7 = [v11 _searchErrorWithUserInfo:v12];

        (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
      }
    }
  }
}

uint64_t sub_100B9E90C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100B9F0CC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      BOOL v10 = v5++ >= 9;
      if (v10)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 1u:
        uint64_t v13 = objc_alloc_init(SearchResult);
        uint64_t v14 = 48;
        goto LABEL_22;
      case 2u:
        uint64_t v13 = objc_alloc_init(SearchResult);
        uint64_t v14 = 32;
LABEL_22:
        objc_storeStrong((id *)(a1 + v14), v13);
        if (PBReaderPlaceMark() && -[SearchResult readFrom:](v13, "readFrom:", a2, 0, 0))
        {
          PBReaderRecallMark();

LABEL_51:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 3u:
        uint64_t v16 = PBReaderReadData();
        uint64_t v17 = 24;
        goto LABEL_28;
      case 4u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 40;
        goto LABEL_28;
      case 5u:
        uint64_t v16 = PBReaderReadString();
        uint64_t v17 = 56;
LABEL_28:
        NSErrorUserInfoKey v18 = *(void **)(a1 + v17);
        *(void *)(a1 + v17) = v16;

        goto LABEL_51;
      case 6u:
        *(unsigned char *)(a1 + 68) |= 1u;
        unint64_t v19 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v19);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v19 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v20 = 0;
        }
        uint64_t v28 = 8;
        goto LABEL_50;
      case 7u:
        char v21 = 0;
        unsigned int v22 = 0;
        uint64_t v23 = 0;
        *(unsigned char *)(a1 + 68) |= 4u;
        while (2)
        {
          uint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v26 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25;
            v23 |= (unint64_t)(v26 & 0x7F) << v21;
            if (v26 < 0)
            {
              v21 += 7;
              BOOL v10 = v22++ >= 9;
              if (v10)
              {
                LODWORD(v23) = 0;
                goto LABEL_45;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v23) = 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 64) = v23;
        goto LABEL_51;
      case 8u:
        *(unsigned char *)(a1 + 68) |= 2u;
        unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v20 = 0;
        }
        uint64_t v28 = 16;
LABEL_50:
        *(void *)(a1 + v28) = v20;
        goto LABEL_51;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_51;
    }
  }
}

void sub_100BA0CA0(id a1)
{
  uint64_t v1 = +[CardAnimation animationUsingDefaultSpringWithInitialVelocity:0.0 delay:0.0];
  id v2 = (void *)qword_101610978;
  qword_101610978 = v1;
}

uint64_t sub_100BA1040(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(result + 32) + 8) = a2;
  return result;
}

void sub_100BA1120(uint64_t a1, int a2)
{
  char v4 = [*(id *)(a1 + 32) mapView];
  [v4 setUserTrackingMode:0];

  id v7 = [*(id *)(a1 + 32) mapView];
  unsigned int v5 = [*(id *)(a1 + 32) mapView];
  [v5 regionThatFits:*(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64)];
  if (a2) {
    BOOL v6 = *(unsigned char *)(a1 + 72) != 0;
  }
  else {
    BOOL v6 = 0;
  }
  [v7 setRegion:v6];
}

void sub_100BA12A8(uint64_t a1, int a2)
{
  char v4 = [*(id *)(a1 + 32) mapView];
  if (a2) {
    BOOL v5 = *(unsigned char *)(a1 + 48) != 0;
  }
  else {
    BOOL v5 = 0;
  }
  id v6 = v4;
  [v4 setCamera:*(void *)(a1 + 40) animated:v5];
}

void sub_100BA13E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) chromeViewController];
  id v3 = [v2 mapView];
  [v3 _setApplicationState:0];

  char v4 = [*(id *)(a1 + 32) trackingController];
  BOOL v5 = [*(id *)(a1 + 32) chromeViewController];
  id v6 = [v5 mapView];
  [v4 setMapView:v6];

  id v7 = [*(id *)(a1 + 32) chromeViewController];
  unint64_t v8 = [v7 mapView];

  [v8 _setAlwaysShowHeadingIndicatorIfSupported:1];
  [v8 setShowsTraffic:1];
  uint64_t v15 = 0;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v12 = 0u;
  if (v8) {
    [v8 _cartographicConfiguration];
  }
  *((void *)&v12 + 1) = 2;
  *(void *)&long long v14 = 0;
  uint64_t v11 = v15;
  v10[1] = v13;
  v10[2] = v14;
  v10[0] = v12;
  [v8 _setCartographicConfiguration:v10];
  char v9 = [v8 _mapLayer];
  [v9 setDesiredMapMode:0];
}

void sub_100BA15A0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) trackingController];
  [v1 setMapView:0];
}

id sub_100BA2944(uint64_t a1, int a2)
{
  long long v18 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v19 = *(_OWORD *)&CGAffineTransformIdentity.a;
  *(_OWORD *)&v37.CATransform3D a = *(_OWORD *)&CGAffineTransformIdentity.a;
  *(_OWORD *)&v37.c = v18;
  long long v17 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  *(_OWORD *)&v37.tx = v17;
  memset(&v36, 0, sizeof(v36));
  CGAffineTransformMakeScale(&v36, *(CGFloat *)(a1 + 72), *(CGFloat *)(a1 + 72));
  if (a2)
  {
    CGFloat v4 = *(double *)(a1 + 80);
    *(_OWORD *)&v27.m11 = v19;
    *(_OWORD *)&v27.m13 = v18;
    *(_OWORD *)&v27.m21 = v17;
    CGAffineTransformRotate(&v37, (CGAffineTransform *)&v27, v4);
    CGFloat v5 = *(double *)(a1 + 88);
    *(_OWORD *)&v26.m11 = *(_OWORD *)&v36.a;
    *(_OWORD *)&v26.m13 = *(_OWORD *)&v36.c;
    *(_OWORD *)&v26.m21 = *(_OWORD *)&v36.tx;
    CGAffineTransformRotate((CGAffineTransform *)&v27, (CGAffineTransform *)&v26, v5);
    *(_OWORD *)&v36.CATransform3D a = *(_OWORD *)&v27.m11;
    *(_OWORD *)&v36.c = *(_OWORD *)&v27.m13;
    *(_OWORD *)&v36.tx = *(_OWORD *)&v27.m21;
  }
  CGAffineTransform v35 = v37;
  [*(id *)(a1 + 32) setTransform:&v35, v17, v18, v19];
  CGAffineTransformMakeScale(&v34, *(CGFloat *)(a1 + 96), 1.0);
  id v6 = *(void **)(a1 + 40);
  CGAffineTransform v33 = v34;
  [v6 setTransform:&v33];
  [*(id *)(a1 + 40) setAlpha:*(double *)(a1 + 104)];
  CGAffineTransformMakeScale(&v32, *(CGFloat *)(a1 + 72), *(CGFloat *)(a1 + 72));
  id v7 = *(void **)(a1 + 48);
  CGAffineTransform v31 = v32;
  [v7 setTransform:&v31];
  [*(id *)(a1 + 48) setAlpha:*(double *)(a1 + 112)];
  CGAffineTransform v30 = v36;
  [*(id *)(a1 + 56) setTransform:&v30];
  [*(id *)(a1 + 56) setAlpha:*(double *)(a1 + 112)];
  CGFloat v8 = *(double *)(a1 + 120);
  long long v9 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v26.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v26.m23 = v9;
  *(_OWORD *)&v26.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  CGFloat m33 = CATransform3DIdentity.m33;
  long long v11 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v26.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v26.m13 = v11;
  v26.CGFloat m33 = m33;
  v26.CGFloat m34 = -0.00025;
  long long v12 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v26.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v26.m43 = v12;
  CATransform3DRotate(&v27, &v26, v8, 1.0, 0.0, 0.0);
  *(_OWORD *)&v26.m21 = *(_OWORD *)&v27.m21;
  *(_OWORD *)&v26.m23 = *(_OWORD *)&v27.m23;
  *(_OWORD *)&v26.m31 = *(_OWORD *)&v27.m31;
  v26.CGFloat m33 = v27.m33;
  *(_OWORD *)&v26.m11 = *(_OWORD *)&v27.m11;
  *(_OWORD *)&v26.m13 = *(_OWORD *)&v27.m13;
  CGFloat m34 = v27.m34;
  long long v28 = *(_OWORD *)&v27.m41;
  long long v29 = *(_OWORD *)&v27.m43;
  long long v14 = *(void **)(a1 + 64);
  if (v14) {
    [v14 transform3D];
  }
  else {
    memset(&a, 0, sizeof(a));
  }
  *(_OWORD *)&v27.m21 = *(_OWORD *)&v26.m21;
  *(_OWORD *)&v27.m23 = *(_OWORD *)&v26.m23;
  *(_OWORD *)&v27.m31 = *(_OWORD *)&v26.m31;
  v27.CGFloat m33 = v26.m33;
  *(_OWORD *)&v27.m11 = *(_OWORD *)&v26.m11;
  *(_OWORD *)&v27.m13 = *(_OWORD *)&v26.m13;
  v27.CGFloat m34 = m34;
  *(_OWORD *)&v27.m41 = v28;
  *(_OWORD *)&v27.m43 = v29;
  id result = (id)CATransform3DEqualToTransform(&a, &v27);
  if ((result & 1) == 0)
  {
    v20[2] = *(_OWORD *)&v26.m21;
    v20[3] = *(_OWORD *)&v26.m23;
    v20[4] = *(_OWORD *)&v26.m31;
    CGFloat v21 = v26.m33;
    v20[0] = *(_OWORD *)&v26.m11;
    v20[1] = *(_OWORD *)&v26.m13;
    long long v23 = v28;
    long long v24 = v29;
    uint64_t v16 = *(void **)(a1 + 64);
    CGFloat v22 = m34;
    return [v16 setTransform3D:v20];
  }
  return result;
}

uint64_t sub_100BA2BE8(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40) == 0);
}

uint64_t sub_100BA2C08(uint64_t result)
{
  if (!*(unsigned char *)(result + 40))
  {
    id result = *(void *)(result + 32);
    if (result) {
      return (*(uint64_t (**)(void))(result + 16))();
    }
  }
  return result;
}

uint64_t sub_100BA2C28(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100BA3160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    block[7] = v3;
    block[8] = v4;
    [*(id *)(a1 + 32) setAppRequestDict:a2];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100BA31FC;
    block[3] = &unk_1012E5D08;
    block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100BA31FC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_100BA3398(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ((*(void *)(*(void *)(a1 + 32) + 112) & (unint64_t)[v5 usedInterfaces]) != 0) {
    [*(id *)(a1 + 40) setObject:v5 forKeyedSubscript:v6];
  }
}

void sub_100BA34B0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a3)
  {
    id v7 = [v5 copy];
    uint64_t v30 = a1;
    uint64_t v8 = *(void *)(a1 + 32);
    long long v9 = *(void **)(v8 + 16);
    *(void *)(v8 + 16) = v7;

    CGAffineTransform v36 = +[NSMutableDictionary dictionary];
    CGAffineTransform v35 = +[NSMutableDictionary dictionary];
    long long v41 = 0u;
    long long v42 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    CGAffineTransform v31 = v6;
    id obj = v6;
    id v34 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
    if (v34)
    {
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v10 = 0;
      uint64_t v33 = *(void *)v42;
      do
      {
        for (i = 0; i != v34; i = (char *)i + 1)
        {
          if (*(void *)v42 != v33) {
            objc_enumerationMutation(obj);
          }
          uint64_t v37 = v10;
          long long v12 = *(void **)(*((void *)&v41 + 1) + 8 * i);
          unsigned int v13 = [v12 cacheHitCount];
          unsigned int v14 = [v12 cacheMissCount];
          unsigned int v15 = [v12 cacheExpiredCount];
          uint64_t v16 = [v12 appId];
          long long v17 = [v36 objectForKeyedSubscript:v16];

          if (!v17)
          {
            long long v17 = +[NSMutableArray array];
            long long v18 = [v12 appId];
            [v36 setObject:v17 forKeyedSubscript:v18];
          }
          [v17 addObject:v12];
          long long v19 = [v12 appId];
          id v20 = [v35 objectForKeyedSubscript:v19];

          if (!v20)
          {
            v45[0] = &off_1013AA978;
            v45[1] = &off_1013AA9A8;
            v46[0] = &off_1013AA990;
            v46[1] = &off_1013AA990;
            v45[2] = &off_1013AA9C0;
            v46[2] = &off_1013AA990;
            CGFloat v21 = +[NSDictionary dictionaryWithObjects:v46 forKeys:v45 count:3];
            id v20 = [v21 mutableCopy];

            CGFloat v22 = [v12 appId];
            [v35 setObject:v20 forKeyedSubscript:v22];
          }
          v38 += v13;
          v39 += v14;
          uint64_t v10 = v37 + v15;
          long long v23 = [v20 objectForKeyedSubscript:&off_1013AA978];
          long long v24 = +[NSNumber numberWithUnsignedInteger:][v23 unsignedIntegerValue] + [v12 cacheHitCount];
          [v20 setObject:v24 forKeyedSubscript:&off_1013AA978];

          unint64_t v25 = [v20 objectForKeyedSubscript:&off_1013AA9A8];
          CATransform3D v26 = [NSNumber numberWithUnsignedInteger:((char *)[v25 unsignedIntegerValue] + [v12 cacheMissCount])];
          [v20 setObject:v26 forKeyedSubscript:&off_1013AA9A8];

          CATransform3D v27 = [v20 objectForKeyedSubscript:&off_1013AA9C0];
          long long v28 = +[NSNumber numberWithUnsignedInteger:][v27 unsignedIntegerValue] + [v12 cacheExpiredCount];
          [v20 setObject:v28 forKeyedSubscript:&off_1013AA9C0];
        }
        id v34 = [obj countByEnumeratingWithState:&v41 objects:v47 count:16];
      }
      while (v34);
    }
    else
    {
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v10 = 0;
    }

    *(void *)(*(void *)(v30 + 32) + 56) = v38;
    *(void *)(*(void *)(v30 + 32) + 64) = v39;
    *(void *)(*(void *)(v30 + 32) + 72) = v10;
    [*(id *)(v30 + 32) setPlaceCacheResultsDict:v36];
    id v29 = [v35 copy];
    [*(id *)(v30 + 32) setPlaceCachePerAppCountsDict:v29];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100BA3978;
    block[3] = &unk_1012E5D08;
    block[4] = *(void *)(v30 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    id v6 = v31;
  }
}

void sub_100BA3978(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) tableView];
  [v1 reloadData];
}

void sub_100BA3CDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100BA3E20;
  v13[3] = &unk_10131A4D0;
  v13[4] = *(void *)(a1 + 32);
  uint64_t v4 = +[NSPredicate predicateWithBlock:v13];
  uint64_t v5 = [v3 filteredArrayUsingPredicate:v4];
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BA3E60;
  block[3] = &unk_1012E5F78;
  id v8 = *(id *)(a1 + 40);
  id v11 = v3;
  id v12 = v8;
  id v9 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

BOOL sub_100BA3E20(uint64_t a1, void *a2)
{
  return (*(void *)(*(void *)(a1 + 32) + 112) & (unint64_t)[a2 usedInterfaceTypes]) != 0;
}

uint64_t sub_100BA3E60(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100BA3F78(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setRoutePreloadSessions:a2];
  id v3 = [*(id *)(a1 + 32) tableView];
  [v3 reloadData];
}

void sub_100BA5000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100BA5018(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = 0; i != 5; ++i)
  {
    id result = [*(id *)(a1 + 32) numberOfRequestsForType:a2 result:i];
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) += result;
  }
  return result;
}

id sub_100BA6F44(uint64_t a1)
{
  id v1 = 0;
  switch(a1)
  {
    case 1:
      id v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"Bus [Long transit mode]";
      goto LABEL_6;
    case 2:
      id v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"Subway & Light Rail [Long transit mode]";
      goto LABEL_6;
    case 4:
      id v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"Commuter Rail [Long transit mode]";
      goto LABEL_6;
    case 8:
      id v2 = +[NSBundle mainBundle];
      id v3 = v2;
      CFStringRef v4 = @"Ferry [Long transit mode]";
LABEL_6:
      id v1 = [v2 localizedStringForKey:v4 value:@"localized string not found" table:0];

      break;
    default:
      break;
  }

  return v1;
}

BOOL sub_100BA7280(id *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 0xAu:
        id v12 = objc_alloc_init(PersistentSearchRequestHistoryItem);
        objc_storeStrong(a1 + 3, v12);
        if PBReaderPlaceMark() && (sub_100BAABA8((uint64_t)v12, a2)) {
          goto LABEL_31;
        }
        goto LABEL_34;
      case 0xBu:
        id v12 = objc_alloc_init(PersistentSearchResultHistoryItem);
        objc_storeStrong(a1 + 4, v12);
        if (!PBReaderPlaceMark() || (sub_100BDA9B0((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 0xCu:
        id v12 = objc_alloc_init(PersistentDirectionsHistoryItem);
        objc_storeStrong(a1 + 2, v12);
        if (!PBReaderPlaceMark() || (sub_100B9F0CC((uint64_t)v12, a2) & 1) == 0) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 0xFu:
        id v12 = objc_alloc_init(PersistentAddressBookAddress);
        objc_storeStrong(a1 + 1, v12);
        if PBReaderPlaceMark() && (sub_100B9C3A0((uint64_t)v12, a2))
        {
LABEL_31:
          PBReaderRecallMark();

LABEL_32:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }
LABEL_34:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          return 0;
        }
        goto LABEL_32;
    }
  }
}

UIFont *__cdecl sub_100BA7C8C(id a1)
{
  return +[ChildItemButton buttonTitleFont];
}

void sub_100BA9208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100BA922C()
{
  if (qword_1016109A0 != -1) {
    dispatch_once(&qword_1016109A0, &stru_10131A5C0);
  }
  v0 = (void *)qword_101610998;

  return v0;
}

void sub_100BA9280(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = COERCE_DOUBLE(a3);
  unsigned int v5 = sub_100BA922C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    *(_DWORD *)buf = 134349314;
    id v28 = WeakRetained;
    __int16 v29 = 2112;
    double v30 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}p] Got device motion update with error: %@", buf, 0x16u);
  }
  unint64_t v7 = (id *)(a1 + 32);
  id v8 = objc_loadWeakRetained(v7);
  uint64_t v9 = [v8 motionManager];
  [(id)v9 stopDeviceMotionUpdates];

  id v10 = objc_loadWeakRetained(v7);
  LOBYTE(v9) = [v10 gotDeviceMotionUpdate];

  if ((v9 & 1) == 0)
  {
    id v11 = objc_loadWeakRetained(v7);
    [v11 setGotDeviceMotionUpdate:1];

    if (v4 != 0.0)
    {
      id v12 = [*(id *)&v4 domain];
      if (![v12 isEqualToString:CMErrorDomain])
      {
LABEL_15:

        goto LABEL_16;
      }
      id v13 = [*(id *)&v4 code];

      if (v13 == (id)102)
      {
        unsigned int v14 = +[NSUserDefaults standardUserDefaults];
        id v12 = [v14 objectForKey:off_1015F53F8];

        if (v12)
        {
          unsigned int v15 = +[NSDate date];
          [v15 timeIntervalSinceDate:v12];
          double v17 = v16;
        }
        else
        {
          double v17 = 978307200.0;
        }
        GEOConfigGetDouble();
        if (v17 < v18)
        {
          double v22 = v18;
          CGFloat v21 = sub_100BA922C();
          if (os_log_type_enabled(v21, OS_LOG_TYPE_INFO))
          {
            id v23 = objc_loadWeakRetained(v7);
            *(_DWORD *)buf = 134349568;
            id v28 = v23;
            __int16 v29 = 2048;
            double v30 = v17;
            __int16 v31 = 2048;
            double v32 = v22;
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "[%{public}p] Last showed error alert too soon (%f seconds ago < %f)", buf, 0x20u);
          }
        }
        else
        {
          long long v19 = +[NSUserDefaults standardUserDefaults];
          id v20 = +[NSDate date];
          [v19 setObject:v20 forKey:off_1015F53F8];

          v24[0] = _NSConcreteStackBlock;
          v24[1] = 3221225472;
          v24[2] = sub_100BA95B0;
          v24[3] = &unk_1012E7ED0;
          unint64_t v25 = *(id *)&v4;
          objc_copyWeak(&v26, v7);
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v24);
          objc_destroyWeak(&v26);
          CGFloat v21 = v25;
        }

        goto LABEL_15;
      }
    }
  }
LABEL_16:
}

void sub_100BA95B0(uint64_t a1)
{
  id v2 = objc_opt_new();
  [v2 setTitle:@"[Compass Calibration Error]"];
  id v3 = [*(id *)(a1 + 32) description];
  [v2 setDescriptionText:v3];

  double v4 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  [v2 setComponent:v4];

  [v2 setClassification:7];
  unsigned int v5 = +[MapsRadarKeyword keywordWithName:@"MAPS377" number:1281664];
  unsigned int v15 = v5;
  unint64_t v6 = +[NSArray arrayWithObjects:&v15 count:1];
  [v2 addKeywords:v6];

  unint64_t v7 = sub_100BA922C();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    int v13 = 134349056;
    id v14 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}p] Will show internal TTR alert", (uint8_t *)&v13, 0xCu);
  }
  uint64_t v9 = +[MapsRadarController sharedInstance];
  id v10 = objc_loadWeakRetained((id *)(a1 + 40));
  id v11 = [v10 platformController];
  id v12 = [v11 chromeViewController];
  [v9 launchTTRWithRadar:v2 promptTitle:@"there was an error with compass calibration" fromViewController:v12];
}

void sub_100BA9900(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "DebugCoreMotionCompassAvailabilityTask");
  id v2 = (void *)qword_101610998;
  qword_101610998 = (uint64_t)v1;
}

void sub_100BAA108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100BAA144(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_alloc_init((Class)[(id)objc_opt_class() fallbackModeControllerClass]);
  id v5 = v2;
  id v3 = +[NSArray arrayWithObjects:&v5 count:1];

  return v3;
}

uint64_t sub_100BAABA8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v8 = v7 + 1;
      if (v7 == -1 || v8 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v9 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v8;
      v6 |= (unint64_t)(v9 & 0x7F) << v4;
      if ((v9 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v11 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v11 || (v6 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v6 >> 3))
    {
      case 0xAu:
        id v13 = objc_alloc_init((Class)GEOPlaceSearchRequest);
        uint64_t v14 = 72;
        goto LABEL_36;
      case 0xBu:
        uint64_t v15 = PBReaderReadString();
        uint64_t v16 = 64;
        goto LABEL_40;
      case 0xCu:
        uint64_t v15 = PBReaderReadString();
        uint64_t v16 = 56;
        goto LABEL_40;
      case 0x14u:
        *(unsigned char *)(a1 + 96) |= 1u;
        unint64_t v18 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v18 <= 0xFFFFFFFFFFFFFFF7 && v18 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v18);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v18 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 8;
        goto LABEL_59;
      case 0x15u:
        *(unsigned char *)(a1 + 96) |= 4u;
        unint64_t v20 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v20);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v20 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 24;
        goto LABEL_59;
      case 0x16u:
        *(unsigned char *)(a1 + 96) |= 2u;
        unint64_t v21 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v21);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v21 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 16;
        goto LABEL_59;
      case 0x17u:
        *(unsigned char *)(a1 + 96) |= 8u;
        unint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v22 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 32;
        goto LABEL_59;
      case 0x18u:
        id v13 = objc_alloc_init((Class)GEOPlaceSearchResponse);
        uint64_t v14 = 80;
LABEL_36:
        objc_storeStrong((id *)(a1 + v14), v13);
        if PBReaderPlaceMark() && (objc_msgSend(v13, "readFrom:", a2, 0, 0))
        {
          PBReaderRecallMark();

LABEL_60:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      case 0x1Au:
        uint64_t v15 = PBReaderReadString();
        uint64_t v16 = 88;
LABEL_40:
        id v23 = *(void **)(a1 + v16);
        *(void *)(a1 + v16) = v15;

        goto LABEL_60;
      case 0x1Bu:
        *(unsigned char *)(a1 + 96) |= 0x10u;
        unint64_t v24 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v24);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v24 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 40;
        goto LABEL_59;
      case 0x1Cu:
        *(unsigned char *)(a1 + 96) |= 0x20u;
        unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v19 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v19 = 0;
        }
        uint64_t v26 = 48;
LABEL_59:
        *(void *)(a1 + v26) = v19;
        goto LABEL_60;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_60;
    }
  }
}

void sub_100BADBC8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = [[HomeStorageOutlineNode alloc] initWithDictionaryRepresentation:v5];

  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v6];
}

void sub_100BADD7C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = [a3 dictionaryRepresentation];
  if ([v5 count]) {
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v6];
  }
}

void sub_100BAE234(id a1)
{
  os_log_t v1 = objc_alloc_init(CarChromeNavigationCameraStyleManager);
  id v2 = (void *)qword_1016109A8;
  qword_1016109A8 = (uint64_t)v1;
}

id sub_100BAE5E0()
{
  if (qword_1016109C0 != -1) {
    dispatch_once(&qword_1016109C0, &stru_10131A650);
  }
  v0 = (void *)qword_1016109B8;

  return v0;
}

void sub_100BB0258(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarChromeNavigationCameraStyleManager");
  id v2 = (void *)qword_1016109B8;
  qword_1016109B8 = (uint64_t)v1;
}

id sub_100BB21B0(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  return [(MSPSharedTripContact *)a2 stringValue];
}

void sub_100BB21B8(void *a1, void *a2)
{
  id v3 = a2;
  char v4 = [v3 identifier];
  unsigned __int8 v5 = [v4 isEqualToString:*(void *)(a1[4] + 184)];

  if ((v5 & 1) == 0)
  {
    id v6 = [v3 phoneNumbers];
    if ([v6 count])
    {
    }
    else
    {
      uint64_t v7 = [v3 emailAddresses];
      id v8 = [v7 count];

      if (!v8) {
        goto LABEL_25;
      }
    }
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    char v9 = [v3 phoneNumbers];
    id v10 = [v9 countByEnumeratingWithState:&v35 objects:v40 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v36;
LABEL_7:
      uint64_t v13 = 0;
      while (1)
      {
        if (*(void *)v36 != v12) {
          objc_enumerationMutation(v9);
        }
        uint64_t v14 = *(void **)(*((void *)&v35 + 1) + 8 * v13);
        uint64_t v15 = (void *)a1[5];
        uint64_t v16 = [v14 value];
        double v17 = [v16 stringValue];
        LOBYTE(v15) = [v15 containsObject:v17];

        if (v15) {
          break;
        }
        unint64_t v18 = (void *)a1[6];
        uint64_t v19 = [v14 value];
        unint64_t v20 = [v19 stringValue];
        LOBYTE(v18) = [v18 containsObject:v20];

        if (v18) {
          break;
        }
        if (v11 == (id)++v13)
        {
          id v11 = [v9 countByEnumeratingWithState:&v35 objects:v40 count:16];
          if (v11) {
            goto LABEL_7;
          }
          goto LABEL_14;
        }
      }
    }
    else
    {
LABEL_14:

      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      char v9 = [v3 emailAddresses];
      id v21 = [v9 countByEnumeratingWithState:&v31 objects:v39 count:16];
      if (v21)
      {
        id v22 = v21;
        uint64_t v23 = *(void *)v32;
LABEL_16:
        uint64_t v24 = 0;
        while (1)
        {
          if (*(void *)v32 != v23) {
            objc_enumerationMutation(v9);
          }
          unint64_t v25 = *(void **)(*((void *)&v31 + 1) + 8 * v24);
          uint64_t v26 = (void *)a1[5];
          CATransform3D v27 = [v25 value];
          LOBYTE(v26) = [v26 containsObject:v27];

          if (v26) {
            break;
          }
          id v28 = (void *)a1[6];
          __int16 v29 = [v25 value];
          LOBYTE(v28) = [v28 containsObject:v29];

          if (v28) {
            break;
          }
          if (v22 == (id)++v24)
          {
            id v22 = [v9 countByEnumeratingWithState:&v31 objects:v39 count:16];
            if (v22) {
              goto LABEL_16;
            }
            goto LABEL_23;
          }
        }
      }
      else
      {
LABEL_23:

        double v30 = (void *)a1[7];
        char v9 = +[MSPSharedTripContact contactsFromCNContact:v3];
        [v30 addObjectsFromArray:v9];
      }
    }
  }
LABEL_25:
}

void sub_100BB2F8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BB2FA8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained performAutocompleteSearch];
}

id sub_100BB36BC()
{
  v0 = +[GEOPlatform sharedPlatform];
  id v1 = [v0 isInternalInstall];

  return v1;
}

RAPEntryPoint *__cdecl sub_100BB3A40(id a1, GEORoadAccessPoint *a2, unint64_t a3)
{
  id v3 = a2;
  char v4 = [[RAPEntryPoint alloc] initWithAccessPoint:v3];

  return v4;
}

id sub_100BB3EFC(uint64_t a1, void *a2)
{
  id v3 = [a2 corrected];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

id sub_100BB3F50(id a1, RAPEntryPoint *a2, unint64_t a3)
{
  return [(RAPEntryPoint *)a2 accessPoint];
}

id sub_100BB3F68(id a1, RAPEntryPoint *a2, unint64_t a3)
{
  return [(RAPEntryPoint *)a2 accessPoint];
}

void sub_100BB5438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100BB5478(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  unsigned __int8 v5 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
    id v8 = +[UIColor clearColor];
    [v7 setBackgroundColor:v8];

    [v7 setHeaderMode:0];
    char v9 = [WeakRetained offlineMapsDataSource];
    unsigned int v10 = [v9 canRestoreAnyMaps];

    [v7 setFooterMode:v10];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100BB5614;
    v13[3] = &unk_10131A7C8;
    objc_copyWeak(&v14, v5);
    [v7 setTrailingSwipeActionsConfigurationProvider:v13];
    id v11 = +[NSCollectionLayoutSection sectionWithListConfiguration:v7 layoutEnvironment:v4];
    [v11 setContentInsets:0.0, 16.0, 16.0, 16.0];
    objc_destroyWeak(&v14);
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_100BB55FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100BB5614(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained offlineMapsDataSource];
    id v7 = [v6 swipeActionsConfigurationForIndexPath:v3];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100BB5F8C(uint64_t a1)
{
  BOOL v2 = *(unsigned char *)(a1 + 40) == 0;
  [*(id *)(*(void *)(a1 + 32) + 112) setActive:];
  [*(id *)(*(void *)(a1 + 32) + 120) setActive:v2];
  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

CFStringRef sub_100BB8E24(unint64_t a1)
{
  if (a1 > 4) {
    return @"Unknown";
  }
  else {
    return off_10131A830[a1];
  }
}

void sub_100BBA514(uint64_t a1)
{
  BOOL v2 = +[MNNavigationService sharedService];
  [v2 registerObserver:*(void *)(a1 + 32)];

  id v3 = +[CarRouteGeniusService sharedService];
  [v3 registerObserver:*(void *)(a1 + 32)];

  id v4 = +[CarDisplayController sharedInstance];
  unsigned __int8 v5 = [v4 routeGeniusManager];
  id v6 = [*(id *)(a1 + 32) chromeViewController];
  [v5 activateIfPossibleForChrome:v6];

  id v7 = +[NSNotificationCenter defaultCenter];
  [v7 addObserver:*(void *)(a1 + 32) selector:"_externalDeviceUpdated:" name:@"MapsExternalAccessoryUpdatedNotification" object:0];

  id v8 = [*(id *)(a1 + 32) chromeViewController];
  char v9 = [v8 mapView];
  [v9 _setApplicationState:1];

  unsigned int v10 = [*(id *)(a1 + 32) chromeViewController];
  id v11 = [v10 searchPinsManager];
  [v11 addPOIShapeLoadingObserver:*(void *)(a1 + 32)];

  uint64_t v12 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v13 = [v12 transientMapSettings];
  [*(id *)(a1 + 32) setRouteGeniusMapSettings:v13];

  id v14 = [*(id *)(a1 + 32) routeGeniusMapSettings];
  uint64_t v15 = [*(id *)(a1 + 32) carChromeViewController];
  uint64_t v16 = [v15 defaultMapSettings];
  [v14 readFromMapSettings:v16];

  double v17 = [*(id *)(a1 + 32) routeGeniusMapSettings];
  if ([v17 hasTrackingMode])
  {
    unint64_t v18 = [*(id *)(a1 + 32) routeGeniusMapSettings];
    id v19 = [v18 trackingMode];

    if (v19 != (id)2) {
      goto LABEL_5;
    }
    double v17 = [*(id *)(a1 + 32) routeGeniusMapSettings];
    [v17 setTrackingMode:1];
  }

LABEL_5:
  unint64_t v20 = [*(id *)(a1 + 32) chromeViewController];
  id v21 = [v20 mapView];
  [v21 _setShouldSplitRouteLine:1];

  id v22 = [*(id *)(a1 + 32) wantsNavigationDisplay];
  id v24 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v23 = [v24 mapView];
  [v23 _setShouldAnimatePositionWithRouteMatch:v22];
}

void sub_100BBA79C(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) previousTopContext];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    [*(id *)(a1 + 40) _clearAnnotations];
  }
  BOOL v2 = *(void **)(a1 + 40);
  id v3 = +[CarRouteGeniusService sharedService];
  id v4 = [v3 suggestion];
  [v2 setCurrentSuggestion:v4];

  unsigned __int8 v5 = +[MapsExternalDevice sharedInstance];
  [*(id *)(a1 + 40) setNavigationAidedDrivingEnabled:[v5 isNavigationAidedDrivingEnabled]];

  [*(id *)(a1 + 40) _updateForCurrentRoute];
}

void sub_100BBA87C(uint64_t a1)
{
  GEOConfigGetDouble();
  double v3 = v2;
  id v4 = sub_100577E34();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      unsigned int v10 = @"<nil>";
      goto LABEL_10;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      char v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        unsigned int v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    unsigned int v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    id v21 = v10;
    __int16 v22 = 2048;
    double v23 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] Will throttle location-triggered reframing to max every %#.1lfs", buf, 0x16u);
  }
  objc_initWeak((id *)buf, *(id *)(a1 + 32));
  id v11 = [MapsThrottler alloc];
  uint64_t v12 = [*(id *)(a1 + 40) mapView];
  uint64_t v13 = [v12 userLocation];
  id v14 = &_dispatch_main_q;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100BBAB40;
  v18[3] = &unk_10131A810;
  v18[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v19, (id *)buf);
  uint64_t v15 = [(MapsThrottler *)v11 initWithInitialValue:v13 throttlingInterval:&_dispatch_main_q queue:v18 updateHandler:v3];
  uint64_t v16 = *(void *)(a1 + 32);
  double v17 = *(void **)(v16 + 24);
  *(void *)(v16 + 24) = v15;

  objc_destroyWeak(&v19);
  objc_destroyWeak((id *)buf);
}

void sub_100BBAB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BBAB40(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v6 = sub_100577E34();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = *(id *)(a1 + 32);
    if (!v7)
    {
      uint64_t v12 = @"<nil>";
      goto LABEL_10;
    }
    id v8 = (objc_class *)objc_opt_class();
    char v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      unsigned int v10 = [v7 performSelector:"accessibilityIdentifier"];
      id v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        uint64_t v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_8;
      }
    }
    uint64_t v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    uint64_t v15 = v12;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}@] Will check framing due to location update", buf, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained recenterCameraOnRouteAnimated:1];

  v5[2](v5);
}

void sub_100BBAD94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0;

  id v4 = +[NSNotificationCenter defaultCenter];
  [v4 removeObserver:*(void *)(a1 + 32) name:@"MapsExternalAccessoryUpdatedNotification" object:0];

  id v14 = [*(id *)(a1 + 40) nextTopContext];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    [*(id *)(a1 + 32) setRouteGeniusMapSettings:0];
    [*(id *)(a1 + 32) _clearAnnotations];
    id v5 = [*(id *)(a1 + 32) chromeViewController];
    id v6 = [v5 mapView];
    id v7 = [v6 _mapLayer];
    [v7 setExternalTrafficFeatures:0 areRouteTrafficFeaturesActive:0];

    id v8 = [*(id *)(a1 + 32) chromeViewController];
    char v9 = [v8 searchPinsManager];
    [v9 removePOIShapeLoadingObserver:*(void *)(a1 + 32)];

    unsigned int v10 = +[MNNavigationService sharedService];
    [v10 unregisterObserver:*(void *)(a1 + 32)];

    id v11 = +[CarDisplayController sharedInstance];
    uint64_t v12 = [v11 routeGeniusManager];
    [v12 deactivateForAllChromes];

    uint64_t v13 = +[CarRouteGeniusService sharedService];
    [v13 unregisterObserver:*(void *)(a1 + 32)];
  }
}

void sub_100BBBFF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BBC01C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained virtualGarageDidUpdate:v3];
}

void sub_100BBC560(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) collectionView];
  id v3 = [v2 collectionViewLayout];
  [v3 invalidateLayout];

  id v4 = [*(id *)(a1 + 32) collectionView];
  [v4 layoutIfNeeded];
}

void sub_100BBC9A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100BBC9CC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    BOOL v7 = sub_1000BBB44(WeakRetained) != 5;
    id v8 = [objc_alloc((Class)_UICollectionViewListLayoutSectionConfiguration) initWithAppearanceStyle:2 * v7 layoutEnvironment:v4];
    double v9 = _UICollectionViewListLayoutSectionAutomaticDimension;
    [v8 setEstimatedRowHeight:_UICollectionViewListLayoutSectionAutomaticDimension];
    [v8 setRowHeight:v9];
    [v8 setSeparatorStyle:v7];
    unsigned int v10 = [v8 _separatorConfiguration];
    id v11 = [v10 copy];

    uint64_t v12 = [v6 theme];
    uint64_t v13 = [v12 dynamicHairlineColor];
    [v11 _setColor:v13];

    double v14 = 0.0;
    [v11 _setInsets:0.0, 56.0, 0.0, 0.0];
    [v8 _setSeparatorConfiguration:v11];
    if (sub_1000BBB44(v6) != 5) {
      double v14 = 16.0;
    }
    id v15 = [objc_alloc((Class)_UICollectionViewListLayoutSection) initWithConfiguration:v8 layoutEnvironment:v4];
    [v15 setContentInsets:0.0 v14, 0.0, v14];
    uint64_t v16 = +[RouteStepListSectionBackgroundView decorationViewKind];
    double v17 = +[NSCollectionLayoutDecorationItem backgroundDecorationItemWithElementKind:v16];

    [v17 setContentInsets:0.0, v14, 0.0, v14];
    unint64_t v20 = v17;
    unint64_t v18 = +[NSArray arrayWithObjects:&v20 count:1];
    [v15 setDecorationItems:v18];
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

void sub_100BBD7B0(uint64_t a1, uint64_t a2)
{
  id v3 = +[NSIndexPath indexPathForItem:a2 inSection:0];
  [*(id *)(a1 + 32) addObject:v3];
}

void sub_100BBE6EC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) selectedVehicle];
  uint64_t v2 = [*(id *)(a1 + 32) dataSource];
  [v2 setVehicle:v3];
}

id sub_100BBEBB8()
{
  if (qword_1016109F0 != -1) {
    dispatch_once(&qword_1016109F0, &stru_10131A8B0);
  }
  v0 = (void *)qword_1016109E8;

  return v0;
}

id sub_100BBF008(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:1.0];
}

id sub_100BBF024(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:0.0];
}

void sub_100BBF1BC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CardView");
  uint64_t v2 = (void *)qword_1016109E8;
  qword_1016109E8 = (uint64_t)v1;
}

void sub_100BC0618(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_101610A08;
  qword_101610A08 = (uint64_t)v1;
}

id sub_100BC08C4()
{
  if (qword_101610A20 != -1) {
    dispatch_once(&qword_101610A20, &stru_10131A930);
  }
  v0 = (void *)qword_101610A18;

  return v0;
}

void sub_100BC0918(id a1, GCDTimer *a2)
{
  if (+[UIView areAnimationsEnabled])
  {
    uint64_t v2 = sub_100BC08C4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Found animations enabled, suppressing", v3, 2u);
    }

    +[UIView setAnimationsEnabled:0];
  }
}

void sub_100BC0B88(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AnimationSuppression");
  uint64_t v2 = (void *)qword_101610A18;
  qword_101610A18 = (uint64_t)v1;
}

void sub_100BC16D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BC16FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _updateSnapshotWithCollection:*(void *)(a1 + 32) resolverInfo:*(void *)(a1 + 40)];
}

id sub_100BC22B0()
{
  if (qword_101610A30 != -1) {
    dispatch_once(&qword_101610A30, &stru_10131A978);
  }
  v0 = (void *)qword_101610A28;

  return v0;
}

void sub_100BC2304(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BC237C;
  block[3] = &unk_1012E5D08;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100BC237C(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"PPTTest_CuratedCollectionView_DidDisplayCollection" object:*(void *)(a1 + 32)];

  id result = (id)+[LibraryUIUtilities isMyPlacesEnabled];
  if (result)
  {
    id v4 = *(void **)(a1 + 32);
    return [v4 _updateLibraryStatusForModels];
  }
  return result;
}

void sub_100BC3548(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) dataSource];
  id v4 = [v2 snapshot];

  [*(id *)(*(void *)(a1 + 32) + 248) applySnapshot:v4 animatingDifferences:1];
  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 dataSource:*(void *)(a1 + 32) didExpandCellAnimated:1];
}

void sub_100BC37CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = *(NSObject **)(a1 + 32);
    id v5 = v3;
    dispatch_group_enter(v4);
    id v6 = [v5 libraryOperationsCoordinator];

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100BC38B4;
    v7[3] = &unk_1012E5D08;
    id v8 = *(id *)(a1 + 32);
    [v6 determineSavedStateWithCompletion:v7];
  }
}

void sub_100BC38B4(uint64_t a1)
{
}

id sub_100BC38BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reconfigureSnapshot:*(void *)(a1 + 40) updatedModels:*(void *)(a1 + 48)];
}

void sub_100BC3B34(uint64_t a1, void *a2)
{
  id v8 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = v8;
    id v5 = [v4 collectionItem];
    id v6 = [v5 mapItem];
    BOOL v7 = [v3 firstUserGuideContainingMapItem:v6 requiresOrdering:0];
    [v4 setIsItemInUserCollection:v7 != 0];
  }
}

uint64_t sub_100BC3CB4(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 120) = 0;
  return result;
}

id sub_100BC3F7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateLibraryStatusForModels];
}

void sub_100BC42FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CuratedCollectionProvider");
  uint64_t v2 = (void *)qword_101610A28;
  qword_101610A28 = (uint64_t)v1;
}

void sub_100BC5164(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) detailButton];
  [v2 setTitle:*(void *)(a1 + 40) forState:0];

  id v3 = [*(id *)(a1 + 32) detailButton];
  [v3 setEnabled:*(unsigned __int8 *)(a1 + 48)];
}

void sub_100BC6958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BC697C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [*(id *)(a1 + 32) setRoutePlanningAdvisory:WeakRetained[2]];
    id v3 = *(void **)(a1 + 32);
    id v4 = [v5 advisoryDetailButton];
    [v3 setRoutePlanningIncidentsSourceView:v4];

    [*(id *)(a1 + 32) presentRoutePlanningViewType:5];
    id WeakRetained = v5;
  }
}

void sub_100BC7888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
}

void sub_100BC78D8(id *a1)
{
  uint64_t v2 = a1 + 5;
  id WeakRetained = (id *)objc_loadWeakRetained(a1 + 5);
  if (WeakRetained)
  {
    id v4 = +[MKMapService sharedService];
    [v4 captureUserAction:250 onTarget:504 forAdvisory:a1[4]];

    id v5 = a1[4];
    id v6 = [v5 advisoryItems];
    if ([v6 count] == (id)1)
    {
      BOOL v7 = [v5 advisoryItems];
      id v8 = [v7 firstObject];
      double v9 = [v8 cardAction];
      unsigned int v10 = [v9 type];

      if (v10 == 1)
      {
        id v11 = [a1[4] advisoryItems];
        uint64_t v12 = [v11 firstObject];
        uint64_t v13 = [v12 cardAction];
        double v14 = [v13 location];

        id v15 = objc_alloc((Class)GEOMapRegion);
        [v14 lat];
        double v17 = v16;
        [v14 lng];
        id v19 = [v15 initWithLatitude:v17 longitude:v18];
        id v20 = objc_loadWeakRetained(WeakRetained + 5);
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_100BC7B7C;
        v26[3] = &unk_10131A9A0;
        objc_copyWeak(&v27, v2);
        [v20 viewController:0 showOfflineMapRegionSelectorForRegion:v19 name:0 dismissalBlock:v26];

        objc_destroyWeak(&v27);
        goto LABEL_7;
      }
    }
    else
    {
    }
    id v21 = objc_loadWeakRetained(WeakRetained + 5);
    [v21 setRoutePlanningAdvisory:a1[4]];

    id v22 = objc_loadWeakRetained(WeakRetained + 5);
    id v23 = objc_loadWeakRetained(a1 + 6);
    id v24 = [v23 advisoryDetailButton];
    [v22 setRoutePlanningIncidentsSourceView:v24];

    id v25 = objc_loadWeakRetained(WeakRetained + 5);
    [v25 presentRoutePlanningViewType:5];
  }
LABEL_7:
}

void sub_100BC7B68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BC7B7C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (a2 && WeakRetained)
  {
    id v5 = WeakRetained;
    id v4 = objc_loadWeakRetained(WeakRetained + 5);
    [v4 viewControllerShowOfflineMaps:0];

    id WeakRetained = v5;
  }
}

id sub_100BC7DC4(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) viewModelForAdvisory:a2];
}

void sub_100BCABD8(uint64_t a1)
{
}

void sub_100BCAE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100BCAEA0(uint64_t a1)
{
}

void sub_100BCC334(id a1)
{
  id v1 = [objc_alloc((Class)NSUserDefaults) initWithSuiteName:@"com.apple.Maps.commute"];
  uint64_t v2 = (void *)qword_101610A48;
  qword_101610A48 = (uint64_t)v1;
}

void sub_100BCC570(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    BOOL v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "PlaceRefinementAction resolveMapItem: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  id v8 = [v5 firstObject];
  if (!v8)
  {
    id v9 = [objc_alloc((Class)MKPlacemark) initWithCoordinate:0 addressDictionary:*(double *)(a1 + 48), *(double *)(a1 + 56)];
    id v8 = [objc_alloc((Class)MKMapItem) initWithPlacemark:v9];
  }
  if (*(void *)(a1 + 32)) {
    [v8 setName:];
  }
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v8);
  }
}

void sub_100BCCA7C(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 48);
  if (v5)
  {
    if (v6) {
      (*(void (**)(uint64_t, void, id))(v6 + 16))(v6, 0, v5);
    }
  }
  else
  {
    if (v6) {
      (*(void (**)(uint64_t, id, void))(v6 + 16))(v6, v10, 0);
    }
    if (*(unsigned char *)(a1 + 56))
    {
      BOOL v7 = [v10 mapRegion];

      if (v7)
      {
        id v8 = *(void **)(a1 + 32);
        id v9 = [v10 mapRegion];
        [v8 _zoomToRegionForLineIfNecessary:v10 region:v9 withStartingRegion:0 startedShowingLineDate:*(void *)(a1 + 40)];
      }
    }
  }
}

void sub_100BCCB64(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7) {
      (*(void (**)(uint64_t, void, id))(v7 + 16))(v7, 0, v6);
    }
  }
  else
  {
    id v8 = MKMapItemIdentifiersToGEOMapItemIdentifier();
    long long v21 = 0u;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    id v9 = v5;
    id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v10)
    {
      id v20 = v5;
      uint64_t v11 = *(void *)v22;
      while (2)
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v22 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          double v14 = [v13 identifier];
          unsigned int v15 = [v14 isEqual:v8];

          if (v15)
          {
            id v10 = v13;
            goto LABEL_14;
          }
        }
        id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
        if (v10) {
          continue;
        }
        break;
      }
LABEL_14:
      id v5 = v20;
    }

    if (*(unsigned char *)(a1 + 72))
    {
      double v16 = [v10 mapRegion];

      if (v16)
      {
        double v17 = *(void **)(a1 + 40);
        double v18 = [v10 mapRegion];
        [v17 _zoomToRegionForLineIfNecessary:v10 region:v18 withStartingRegion:*(void *)(a1 + 48) startedShowingLineDate:*(void *)(a1 + 56)];
      }
    }
    uint64_t v19 = *(void *)(a1 + 64);
    if (v19) {
      (*(void (**)(uint64_t, id, void))(v19 + 16))(v19, v10, 0);
    }
  }
}

void sub_100BCCFE4(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  if (v5 || ![v11 count])
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6) {
      (*(void (**)(uint64_t, void, id))(v6 + 16))(v6, 0, v5);
    }
  }
  else
  {
    uint64_t v7 = [v11 firstObject];
    id v8 = [v7 mapRegion];
    uint64_t v9 = *(void *)(a1 + 56);
    if (v9)
    {
      id v10 = [v11 firstObject];
      (*(void (**)(uint64_t, void *, void))(v9 + 16))(v9, v10, 0);
    }
    if (*(unsigned char *)(a1 + 64) && v8) {
      [*(id *)(a1 + 32) _zoomToRegionForLineIfNecessary:v7 region:v8 withStartingRegion:*(void *)(a1 + 40) startedShowingLineDate:*(void *)(a1 + 48)];
    }
  }
}

void sub_100BCD798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100BCD7C8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BCD8CC;
  block[3] = &unk_10131AB18;
  uint64_t v13 = *(void *)(a1 + 40);
  id v10 = v6;
  id v7 = v6;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v11 = v5;
  id v12 = *(id *)(a1 + 32);
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
}

void sub_100BCD8CC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = +[NSBundle mainBundle];
    id v3 = [v2 localizedStringForKey:@"Line information cannot be shown at this time because of a server error." value:@"localized string not found" table:0];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    id v5 = [WeakRetained disambiguationVC];
    [v5 setStatusMessage:v3];

    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      id v7 = *(void (**)(void))(v6 + 16);
      v7();
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = objc_loadWeakRetained((id *)(a1 + 64));
    id v10 = [v9 disambiguationVC];
    [v10 setLines:v8];

    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100BCDA9C;
    v13[3] = &unk_10131AAF0;
    objc_copyWeak(&v15, (id *)(a1 + 64));
    id v14 = *(id *)(a1 + 48);
    id v11 = objc_loadWeakRetained((id *)(a1 + 64));
    id v12 = [v11 disambiguationVC:_NSConcreteStackBlock 3221225472 sub_100BCDA9C &unk_10131AAF0];
    [v12 setLineSelectionBlock:v13];

    objc_destroyWeak(&v15);
  }
}

void sub_100BCDA88(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BCDA9C(uint64_t a1, void *a2)
{
  id v9 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = [WeakRetained mapView];
  [v4 _deselectLabelMarkerAnimated:1];

  id v5 = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v6 = [v9 name];
  id v7 = MKMapItemIdentifierFromGEOTransitLine();
  [v5 _showTransitLineWithName:v6 identifier:v7 mapRegion:0];

  uint64_t v8 = *(void *)(a1 + 32);
  if (v8) {
    (*(void (**)(uint64_t, id, void))(v8 + 16))(v8, v9, 0);
  }
}

void sub_100BCEC14(id a1)
{
  id v1 = +[MNNavigationService sharedService];
  unsigned int v2 = [v1 isInNavigatingState];

  if (v2)
  {
    id v3 = +[MNNavigationService sharedService];
    [v3 stopNavigationWithReason:2];
  }
}

void sub_100BCECA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ([*(id *)(a1 + 32) count] && (unint64_t)objc_msgSend(*(id *)(a1 + 32), "count") > a4)
  {
    uint64_t v6 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a4];
    id v7 = [v6 copy];

    [v7 fire];
  }
}

CarFocusOrderItem *__cdecl sub_100BCEE2C(id a1, UIFocusItem *a2, unint64_t a3)
{
  return +[CarFocusOrderItem itemWithFocusItem:a2];
}

id sub_100BCF40C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  double v5 = *(double *)(a1 + 72);
  uint64_t v6 = *(void **)(a1 + 40);

  return [v6 setFrame:v2, v3, v4, v5];
}

id sub_100BCF454(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  [*(id *)(a1 + 40) _bringNavigationBarToFront:*(void *)(a1 + 48)];
  double v2 = *(void **)(a1 + 48);

  return [v2 completeTransition:1];
}

id sub_100BCF6CC(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  double v5 = *(double *)(a1 + 72);
  uint64_t v6 = *(void **)(a1 + 40);

  return [v6 setFrame:v2, v3, v4, v5];
}

id sub_100BCF714(uint64_t a1)
{
  [*(id *)(a1 + 32) _bringNavigationBarToFront:*(void *)(a1 + 40)];
  double v2 = *(void **)(a1 + 40);

  return [v2 completeTransition:1];
}

void sub_100BD00E0(id *a1)
{
  [a1[4] setAlpha:1.0];
  [a1[5] setAlpha:0.0];
  id v4 = [a1[6] view];
  double v2 = [v4 _cardView];
  double v3 = [v2 superview];
  [v3 layoutIfNeeded];
}

void sub_100BD0168(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a1 + 32);
  double v5 = [*(id *)(a1 + 40) incomingSign];

  if (v4 != v5) {
    [*(id *)(a1 + 32) removeFromSuperview];
  }
  uint64_t v6 = [*(id *)(a1 + 40) signAnimationQueue];
  [v6 removeObjectAtIndex:0];

  id v7 = [*(id *)(a1 + 40) incomingSign];
  uint64_t v8 = sub_100015DB4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    id v9 = @"NO";
    if (a2) {
      id v9 = @"YES";
    }
    id v10 = v9;
    int v14 = 138412546;
    id v15 = v10;
    __int16 v16 = 2112;
    double v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "etaCardVC: sign swap animation finished: %@ to sign: %@", (uint8_t *)&v14, 0x16u);
  }
  objc_storeStrong((id *)(*(void *)(a1 + 40) + 64), v7);
  id v11 = [*(id *)(a1 + 40) signAnimationQueue];
  id v12 = [v11 firstObject];
  [*(id *)(a1 + 40) setIncomingSign:v12];

  uint64_t v13 = *(void *)(a1 + 48);
  if (v13) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v13, a2);
  }
}

void sub_100BD1360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BD137C(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained startedTest];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100BD14A8;
    v6[3] = &unk_1012E6730;
    objc_copyWeak(&v7, v1);
    +[PPTNotificationCenter addOnceObserverForName:@"PPTTest_SearchHome_DidSetActive" object:0 usingBlock:v6];
    id v4 = +[NSNotificationCenter defaultCenter];
    [v4 addObserver:v3 selector:"didUpdateDataFetcher:" name:@"PPTTest_SearchHome_DidUpdateDataFetcher" object:0];

    double v5 = [v3 testCoordinator];
    [v5 pptTestEnterSearchMode];

    objc_destroyWeak(&v7);
  }
}

void sub_100BD1490(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BD14A8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v5 object];
    [WeakRetained setNumberOfDataFetchers:[v4 _ppt_numberOfDataFetchers]];
    [WeakRetained startedSubTest:@"collectData"];
  }
}

id sub_100BD1668(uint64_t a1)
{
  return _[*(id *)(a1 + 32) continueAfterCollectingDataFromDataFetchers];
}

void sub_100BD18FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BD194C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) finishedTest];
    id WeakRetained = v3;
  }
}

void sub_100BDA428(id a1)
{
  id v1 = objc_alloc_init(SearchSessionAnalyticsAggregator);
  double v2 = (void *)qword_101610A68;
  qword_101610A68 = (uint64_t)v1;
}

void sub_100BDA57C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100BDA708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100BDA9B0(uint64_t a1, uint64_t a2)
{
  while (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) < *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      break;
    }
    char v4 = 0;
    unsigned int v5 = 0;
    unint64_t v6 = 0;
    while (1)
    {
      unint64_t v7 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      if (v7 == -1 || v7 >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v8 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v7);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v7 + 1;
      v6 |= (unint64_t)(v8 & 0x7F) << v4;
      if ((v8 & 0x80) == 0) {
        goto LABEL_11;
      }
      v4 += 7;
      if (v5++ >= 9)
      {
        unint64_t v6 = 0;
        int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_13;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_11:
    int v10 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v6 = 0;
    }
LABEL_13:
    if (v10 || (v6 & 7) == 4) {
      break;
    }
    if ((v6 >> 3) == 1)
    {
      id v12 = objc_alloc_init(SearchResult);
      objc_storeStrong((id *)(a1 + 8), v12);
      if (!PBReaderPlaceMark() || !-[SearchResult readFrom:](v12, "readFrom:", a2, 0, 0))
      {

        return 0;
      }
      PBReaderRecallMark();
    }
    else
    {
      uint64_t result = PBReaderSkipValueWithTag();
      if (!result) {
        return result;
      }
    }
  }
  return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
}

void sub_100BDF994(uint64_t a1)
{
  [*(id *)(a1 + 32) endSearch];
  id v2 = [*(id *)(a1 + 32) cardPresentationController];
  [v2 updateHeightForCurrentLayout];
}

id sub_100BDFAD4()
{
  if (qword_101610A80 != -1) {
    dispatch_once(&qword_101610A80, &stru_10131ACD8);
  }
  v0 = (void *)qword_101610A78;

  return v0;
}

void sub_100BE1490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BE14DC(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  char v4 = sub_100BDFAD4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unint64_t v6 = [*(id *)(a1 + 32) host];
    unint64_t v7 = [v6 overlayContentView];
    char v8 = [v7 sceneIdentifierForLogging];
    unsigned int v9 = [v3 contentsHidden];
    int v10 = @"NO";
    if (v9) {
      int v10 = @"YES";
    }
    id v11 = v10;
    int v13 = 134349570;
    id v14 = WeakRetained;
    __int16 v15 = 2112;
    __int16 v16 = v8;
    __int16 v17 = 2112;
    double v18 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}p] [%@] Heading indicator did change visibility (contentsHidden:%@)", (uint8_t *)&v13, 0x20u);
  }
  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  [v12 reloadAnimated:1];
}

void sub_100BE1648(uint64_t a1, void *a2)
{
  id v3 = [a2 object];
  char v4 = sub_100BDFAD4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unint64_t v6 = [*(id *)(a1 + 32) host];
    unint64_t v7 = [v6 overlayContentView];
    char v8 = [v7 sceneIdentifierForLogging];
    unsigned int v9 = [v3 contentsHidden];
    int v10 = @"NO";
    if (v9) {
      int v10 = @"YES";
    }
    id v11 = v10;
    int v13 = 134349570;
    id v14 = WeakRetained;
    __int16 v15 = 2112;
    __int16 v16 = v8;
    __int16 v17 = 2112;
    double v18 = v11;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] [%@] Speed sign did change visibility (contentsHidden:%@)", (uint8_t *)&v13, 0x20u);
  }
  id v12 = objc_loadWeakRetained((id *)(a1 + 40));
  [v12 reloadAnimated:1];
}

void sub_100BE1B98(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) setAlpha:*(float *)(a1 + 40)];
  id v2 = [*(id *)(a1 + 32) host];
  [v2 setCollisionConstraintsEnabled:*(unsigned char *)(a1 + 44) == 0 forOverlay:*(void *)(a1 + 32)];
}

void sub_100BE1F18(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarPlayAccessoriesOverlay");
  id v2 = (void *)qword_101610A78;
  qword_101610A78 = (uint64_t)v1;
}

void sub_100BE2410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BE2434(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = *(void *)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100BE251C;
  v8[3] = &unk_1012E6998;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  [WeakRetained _onSuccess:a2 setLookAroundViewEntryPointWithMapItem:v7 orMuninMarker:v5 andContinue:v8];

  objc_destroyWeak(&v9);
}

void sub_100BE2508(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BE251C(uint64_t a1, uint64_t a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100BE25E0;
  v5[3] = &unk_1012E6998;
  objc_copyWeak(&v6, v3);
  [WeakRetained _onSuccess:a2 waitForLookAroundViewToBecomeAdequatelyDrawnIfNeededAndContinue:v5];

  objc_destroyWeak(&v6);
}

void sub_100BE25CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BE25E0(uint64_t a1, uint64_t a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100BE26A4;
  v5[3] = &unk_1012E6998;
  objc_copyWeak(&v6, v3);
  [WeakRetained _onSuccess:a2 synchronizeMapViewCenterToLookAroundViewCenterAndContinue:v5];

  objc_destroyWeak(&v6);
}

void sub_100BE2690(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BE26A4(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _onSuccessProceedToEnterLookArounPIP:a2];
}

void sub_100BE2A90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100BE2C0C;
    v7[3] = &unk_1012F7A50;
    id v8 = *(id *)(a1 + 32);
    id v9 = v3;
    char v11 = *(unsigned char *)(a1 + 64);
    id v10 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
  }
  else
  {
    char v4 = sub_1005764AC();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 48);
      uint64_t v6 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      uint64_t v13 = v5;
      __int16 v14 = 2048;
      uint64_t v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error: mapView returned a nil muninMarker at coordinate=(%g, %g)", buf, 0x16u);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100BE2C0C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) camera];
  id v3 = [v2 copy];

  [*(id *)(a1 + 40) coordinate];
  CLLocationCoordinate2D v6 = CLLocationCoordinate2DMake(v4, v5);
  [v3 setCenterCoordinate:];
  uint64_t v7 = sub_1005764AC();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218240;
    CLLocationDegrees latitude = v6.latitude;
    __int16 v14 = 2048;
    CLLocationDegrees longitude = v6.longitude;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Synchronizing mapView with muninMarker at coordinate=(%g, %g)", buf, 0x16u);
  }

  id v8 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 56))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100BE2DBC;
    v9[3] = &unk_1012F1600;
    id v11 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 40);
    [v8 setCamera:v3 animated:1 completionHandler:v9];
  }
  else
  {
    [*(id *)(a1 + 32) setCamera:v3 animated:1];
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t sub_100BE2DBC(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 1, *(void *)(a1 + 32));
}

void sub_100BE32B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100BE32E0(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  CLLocationDegrees v4 = [WeakRetained lookAroundViewDidBecomeAdequatelyDrawnObserver];
  [v2 removeObserver:v4];

  id v5 = objc_loadWeakRetained((id *)(a1 + 40));
  [v5 setLookAroundViewDidBecomeAdequatelyDrawnObserver:0];

  CLLocationCoordinate2D v6 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v6();
}

uint64_t sub_100BE3874(uint64_t a1)
{
  id v2 = sub_1005764AC();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Did exit LookAround PIP", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _notifyObservers:5];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100BE4AD4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _startMovingLookAroundViewToMapItem:0 orMuninMarker:a2 heading:0 shouldZoom:*(double *)(a1 + 40)];
}

id sub_100BE5128(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _startMovingLookAroundViewToMapItem:0 orMuninMarker:a2 heading:0 shouldZoom:*(double *)(a1 + 40)];
}

void sub_100BE5218(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100BE523C(uint64_t a1, int a2, void *a3)
{
  id v16 = a3;
  id v5 = objc_loadWeakRetained((id *)(a1 + 40));
  CLLocationCoordinate2D v6 = [v5 mapView];
  [v5 _handleMapViewPanStop:v6 shouldMoveLookAroundView:0];

  if (a2)
  {
    [v16 coordinate];
    double v8 = v7;
    [v16 coordinate];
    id v10 = [objc_alloc((Class)CLLocation) initWithLatitude:v8 longitude:v9];
    id v11 = [objc_alloc((Class)CLLocation) initWithLatitude:*(double *)(a1 + 48) longitude:*(double *)(a1 + 56)];
    [v10 distanceFromLocation:v11];
    if (v12 <= 10.0)
    {
      double v14 = *(double *)(*(void *)(a1 + 32) + 216);
    }
    else
    {
      GEOBearingFromCoordinateToCoordinate();
      double v14 = v13;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _startMovingLookAroundViewToMapItem:0 orMuninMarker:v16 heading:1 shouldZoom:v14];
  }
}

void sub_100BE5480(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100BE54A4(uint64_t a1, int a2, void *a3)
{
  id v11 = a3;
  id v5 = objc_loadWeakRetained((id *)(a1 + 40));
  CLLocationCoordinate2D v6 = [v5 mapView];
  [v5 _handleMapViewPanStop:v6 shouldMoveLookAroundView:0];

  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _notifyObservers:23];

    [v11 coordinate];
    [v11 coordinate];
    [*(id *)(a1 + 32) _coordinate];
    [*(id *)(a1 + 32) _coordinate];
    GEOBearingFromCoordinateToCoordinate();
    double v9 = v8;
    id v10 = objc_loadWeakRetained((id *)(a1 + 40));
    [v10 _startMovingLookAroundViewToMapItem:*(void *)(a1 + 32) orMuninMarker:v11 heading:1 shouldZoom:v9];
  }
}

id sub_100BE56D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setStateTo:2];
}

void sub_100BE58D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BE58FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100BE59EC;
  v9[3] = &unk_1012E92F0;
  objc_copyWeak(&v13, (id *)(a1 + 40));
  id v10 = v6;
  id v11 = v5;
  id v12 = *(id *)(a1 + 32);
  id v7 = v5;
  id v8 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);

  objc_destroyWeak(&v13);
}

void sub_100BE59EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!*(void *)(a1 + 32))
  {
    if ([*(id *)(a1 + 40) count])
    {
      id v3 = [*(id *)(a1 + 40) firstObject];
      [v3 closeUpViewCoordinate];
      uint64_t v6 = v5;
      uint64_t v8 = v7;
      double v9 = sub_1005764AC();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
      {
        id v10 = [v3 name];
        unsigned int v11 = [v3 _hasLookAroundStorefront];
        CFStringRef v12 = @"NO";
        *(_DWORD *)uint64_t v15 = 138413058;
        *(_WORD *)&v15[12] = 2112;
        *(void *)&v15[4] = v10;
        if (v11) {
          CFStringRef v12 = @"YES";
        }
        *(void *)&v15[14] = v12;
        __int16 v16 = 2048;
        uint64_t v17 = v6;
        __int16 v18 = 2048;
        uint64_t v19 = v8;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "Refined label marker for %@, hasLookAroundStorefront=%@, coordinate={%g, %g}", v15, 0x2Au);
      }
      id v13 = [WeakRetained labelMarkerToRefine];
      double v14 = *(void **)(a1 + 48);

      if (v13 == v14) {
        [WeakRetained _moveLookAroundViewToMapItem:v3];
      }
      [WeakRetained setLabelMarkerToRefine:0, *(_OWORD *)v15];
      [WeakRetained setRefineTicket:0];
      goto LABEL_12;
    }
    if (!*(void *)(a1 + 32)) {
      goto LABEL_13;
    }
  }
  id v3 = sub_1005764AC();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    *(_DWORD *)uint64_t v15 = 138412290;
    *(void *)&v15[4] = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error: Identifier refinement ticket failed: %@", v15, 0xCu);
  }
LABEL_12:

LABEL_13:
}

void sub_100BE6340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_100BE6394(uint64_t a1, char a2)
{
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = a2;
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(a1 + 32) + 8));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BE6488;
  block[3] = &unk_10131ADA0;
  id v5 = *(id *)(a1 + 40);
  char v7 = a2;
  objc_copyWeak(&v6, (id *)(a1 + 64));
  char v8 = *(unsigned char *)(a1 + 72);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v6);
}

void sub_100BE6488(uint64_t a1)
{
  [*(id *)(a1 + 32) setUserInteractionEnabled:*(unsigned __int8 *)(a1 + 48)];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _willEndMovingLookAroundView:*(unsigned __int8 *)(a1 + 48) shouldZoomIfFinished:*(unsigned __int8 *)(a1 + 49)];
}

id sub_100BE7074(uint64_t a1)
{
  return [*(id *)(a1 + 32) animate];
}

id sub_100BE707C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) complete:a2];
}

id sub_100BE7288(uint64_t a1)
{
  return [*(id *)(a1 + 32) animate];
}

id sub_100BE7290(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) complete:a2];
}

id sub_100BE7A64(uint64_t a1)
{
  return [*(id *)(a1 + 32) animate];
}

id sub_100BE7A6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) complete:a2];
}

id sub_100BE7A78(uint64_t a1)
{
  [*(id *)(a1 + 32) prepare];
  [*(id *)(a1 + 32) animate];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 complete:1];
}

void sub_100BE7E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100BE7E50(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  CFStringRef v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v14 = WeakRetained;
  if (WeakRetained)
  {
    id v15 = *(id *)(a1 + 40);
    if (v15 == [WeakRetained currentGuestRequestNumber])
    {
      if (v12)
      {
        [v14 setGuestRequestError:v12];
        __int16 v16 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v27 = 138412290;
          id v28 = v12;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v27, 0xCu);
        }

        uint64_t v17 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          __int16 v18 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v18;
          __int16 v29 = 2080;
          v30[0] = "requestGuest";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      else
      {
        [v14 setGuestResponse:v9];
        long long v24 = [v9 userActivity];
        [v14 setGuestUserActivity:v24];

        id v25 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v26 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v26;
          __int16 v29 = 2080;
          v30[0] = "requestGuest";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestGuest", "", (uint8_t *)&v27, 2u);
LABEL_25:

      [v14 setGuestRequestPending:0];
      goto LABEL_26;
    }
    long long v21 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v27) = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "guestRequestNumber is not the same anymore", (uint8_t *)&v27, 2u);
    }

    long long v22 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      long long v23 = [v14 uniqueName];
      int v27 = 138412546;
      id v28 = v23;
      __int16 v29 = 2080;
      v30[0] = "requestGuest";
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
    }
    id v20 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v20))
    {
      LOWORD(v27) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestGuest", "", (uint8_t *)&v27, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v20 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      int v27 = 136446722;
      id v28 = "RestaurantReservationRequester.m";
      __int16 v29 = 1026;
      LODWORD(v30[0]) = 97;
      WORD2(v30[0]) = 2082;
      *(void *)((char *)v30 + 6) = "-[RestaurantReservationRequester requestGuest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v27, 0x1Cu);
    }
  }
LABEL_26:
}

void sub_100BE87A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100BE87DC(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  CFStringRef v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v14 = WeakRetained;
  if (WeakRetained)
  {
    id v15 = *(id *)(a1 + 40);
    if (v15 == [WeakRetained currentReservationDefaultsNumber])
    {
      if (v12)
      {
        [v14 setReservationDefaultsRequestError:v12];
        __int16 v16 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v27 = 138412290;
          id v28 = v12;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v27, 0xCu);
        }

        uint64_t v17 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          __int16 v18 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v18;
          __int16 v29 = 2080;
          v30[0] = "requestReservationDefaults";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      else
      {
        [v14 setReservationDefaultsResponse:v9];
        long long v24 = [v9 userActivity];
        [v14 setReservationDefaultsUserActivity:v24];

        id v25 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v26 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v26;
          __int16 v29 = 2080;
          v30[0] = "requestReservationDefaults";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestReservationDefaults", "", (uint8_t *)&v27, 2u);
LABEL_25:

      [v14 setReservationDefaultsRequestPending:0];
      goto LABEL_26;
    }
    long long v21 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v27) = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "reservationDefaultsNumber is not the same anymore", (uint8_t *)&v27, 2u);
    }

    long long v22 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      long long v23 = [v14 uniqueName];
      int v27 = 138412546;
      id v28 = v23;
      __int16 v29 = 2080;
      v30[0] = "requestReservationDefaults";
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
    }
    id v20 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v20))
    {
      LOWORD(v27) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestReservationDefaults", "", (uint8_t *)&v27, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v20 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      int v27 = 136446722;
      id v28 = "RestaurantReservationRequester.m";
      __int16 v29 = 1026;
      LODWORD(v30[0]) = 169;
      WORD2(v30[0]) = 2082;
      *(void *)((char *)v30 + 6) = "-[RestaurantReservationRequester requestReservationDefaults]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v27, 0x1Cu);
    }
  }
LABEL_26:
}

void sub_100BE91A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100BE91E0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  CFStringRef v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v14 = WeakRetained;
  if (WeakRetained)
  {
    id v15 = *(id *)(a1 + 40);
    if (v15 == [WeakRetained currentUserBookingNumber])
    {
      if (v12)
      {
        [v14 setUserCurrentBookingRequestError:v12];
        __int16 v16 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v27 = 138412290;
          id v28 = v12;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v27, 0xCu);
        }

        uint64_t v17 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          __int16 v18 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v18;
          __int16 v29 = 2080;
          v30[0] = "requestUserCurrentBooking";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      else
      {
        [v14 setUserCurrentBookingResponse:v9];
        long long v24 = [v9 userActivity];
        [v14 setUserCurrentBookingUserActivity:v24];

        id v25 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v26 = [v14 uniqueName];
          int v27 = 138412546;
          id v28 = v26;
          __int16 v29 = 2080;
          v30[0] = "requestUserCurrentBooking";
          _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v27, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v27) = 0;
      }
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestUserCurrentBooking", "", (uint8_t *)&v27, 2u);
LABEL_25:

      [v14 setUserCurrentBookingRequestPending:0];
      goto LABEL_26;
    }
    long long v21 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v27) = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "bookingRequestNumber is not the same anymore", (uint8_t *)&v27, 2u);
    }

    long long v22 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      long long v23 = [v14 uniqueName];
      int v27 = 138412546;
      id v28 = v23;
      __int16 v29 = 2080;
      v30[0] = "requestUserCurrentBooking";
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v27, 0x16u);
    }
    id v20 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v20))
    {
      LOWORD(v27) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v20, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestUserCurrentBooking", "", (uint8_t *)&v27, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    id v20 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      int v27 = 136446722;
      id v28 = "RestaurantReservationRequester.m";
      __int16 v29 = 1026;
      LODWORD(v30[0]) = 257;
      WORD2(v30[0]) = 2082;
      *(void *)((char *)v30 + 6) = "-[RestaurantReservationRequester requestUserCurrentBookingWithRelevanceWindow:reser"
                                     "vationIdentifier:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v27, 0x1Cu);
    }
  }
LABEL_26:
}

void sub_100BE9CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100BE9CE8(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  CFStringRef v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v9 && (objc_msgSend(*(id *)(a1 + 32), "_maps_responseIsValid:", v9) & 1) == 0)
    {
      uint64_t v14 = [*(id *)(a1 + 32) _maps_sanitizedResponseForResponse:v9];

      id v9 = (id)v14;
    }
    id v15 = *(id *)(a1 + 48);
    if (v15 == [WeakRetained currentAvailableBookingNumber])
    {
      if (v12)
      {
        [WeakRetained setAvailableBookingsRequestError:v12];
        __int16 v16 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v28 = 138412290;
          __int16 v29 = v12;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v28, 0xCu);
        }

        uint64_t v17 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          __int16 v18 = [WeakRetained uniqueName];
          int v28 = 138412546;
          __int16 v29 = v18;
          __int16 v30 = 2080;
          v31[0] = "requestUserCurrentBooking";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v28, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_28;
        }
        LOWORD(v28) = 0;
        id v20 = "requestUserCurrentBooking";
      }
      else
      {
        [WeakRetained setAvailableBookingsResponse:v9];
        id v25 = [v9 userActivity];
        [WeakRetained setAvailableBookingsUserActivity:v25];

        uint64_t v26 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
        {
          int v27 = [WeakRetained uniqueName];
          int v28 = 138412546;
          __int16 v29 = v27;
          __int16 v30 = 2080;
          v31[0] = "requestAvailableBookings";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v28, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_28;
        }
        LOWORD(v28) = 0;
        id v20 = "requestAvailableBookings";
      }
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, v20, "", (uint8_t *)&v28, 2u);
LABEL_28:

      [WeakRetained setAvailableBookingsRequestPending:0];
      goto LABEL_29;
    }
    long long v22 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v28) = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "availableBookingNumber is not the same anymore", (uint8_t *)&v28, 2u);
    }

    long long v23 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
    {
      long long v24 = [WeakRetained uniqueName];
      int v28 = 138412546;
      __int16 v29 = v24;
      __int16 v30 = 2080;
      v31[0] = "requestAvailableBookings";
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v28, 0x16u);
    }
    long long v21 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v21))
    {
      LOWORD(v28) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "requestAvailableBookings", "", (uint8_t *)&v28, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    long long v21 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      int v28 = 136446722;
      __int16 v29 = "RestaurantReservationRequester.m";
      __int16 v30 = 1026;
      LODWORD(v31[0]) = 344;
      WORD2(v31[0]) = 2082;
      *(void *)((char *)v31 + 6) = "-[RestaurantReservationRequester requestAvailableBookingsForPreferredTime:partySize:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v28, 0x1Cu);
    }
  }
LABEL_29:
}

void sub_100BEA800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_100BEA838(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  CFStringRef v12 = a5;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v14 = WeakRetained;
  if (WeakRetained)
  {
    id v15 = *(id *)(a1 + 40);
    if (v15 == [WeakRetained currentBookReservationNumber])
    {
      if (v12)
      {
        [v14 setBookReservationRequestError:v12];
        __int16 v16 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        {
          int v28 = 138412290;
          __int16 v29 = v12;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error: %@", (uint8_t *)&v28, 0xCu);
        }

        uint64_t v17 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
        {
          __int16 v18 = [v14 uniqueName];
          int v28 = 138412546;
          __int16 v29 = v18;
          __int16 v30 = 2080;
          v31[0] = "requestUserCurrentBooking";
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v28, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v28) = 0;
        id v20 = "requestUserCurrentBooking";
      }
      else
      {
        [v14 setBookReservationResponse:v9];
        id v25 = [v9 userActivity];
        [v14 setBookReservationUserActivity:v25];

        uint64_t v26 = GEOFindOrCreateLog();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
        {
          int v27 = [v14 uniqueName];
          int v28 = 138412546;
          __int16 v29 = v27;
          __int16 v30 = 2080;
          v31[0] = "bookRestaurantReservation";
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s END", (uint8_t *)&v28, 0x16u);
        }
        uint64_t v19 = GEOFindOrCreateLog();
        if (!os_signpost_enabled(v19)) {
          goto LABEL_25;
        }
        LOWORD(v28) = 0;
        id v20 = "bookRestaurantReservation";
      }
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, v20, "", (uint8_t *)&v28, 2u);
LABEL_25:

      [v14 setBookReservationRequestPending:0];
      goto LABEL_26;
    }
    long long v22 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
    {
      LOWORD(v28) = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "bookReservationNumber is not the same anymore", (uint8_t *)&v28, 2u);
    }

    long long v23 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
    {
      long long v24 = [v14 uniqueName];
      int v28 = 138412546;
      __int16 v29 = v24;
      __int16 v30 = 2080;
      v31[0] = "bookRestaurantReservation";
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "{MSgDebug} OBJECT{%@} %s FAIL", (uint8_t *)&v28, 0x16u);
    }
    long long v21 = GEOFindOrCreateLog();
    if (os_signpost_enabled(v21))
    {
      LOWORD(v28) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v21, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "bookRestaurantReservation", "", (uint8_t *)&v28, 2u);
    }
  }
  else
  {
    GEOFindOrCreateLog();
    long long v21 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      int v28 = 136446722;
      __int16 v29 = "RestaurantReservationRequester.m";
      __int16 v30 = 1026;
      LODWORD(v31[0]) = 434;
      WORD2(v31[0]) = 2082;
      *(void *)((char *)v31 + 6) = "-[RestaurantReservationRequester bookRestaurantReservation:guest:selectedOffer:spec"
                                     "ialRequest:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v28, 0x1Cu);
    }
  }
LABEL_26:
}

id sub_100BEB614(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDebugLayoutGuidesView];
}

id sub_100BEB9B0(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  id v7 = [v6 indexOfObject:*(void *)(a1 + 32)];
  if (v7 == (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v8 = v6;
    goto LABEL_22;
  }
  id v9 = v7;
  id v10 = sub_1000C49B4();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
  {
    id v11 = *(id *)(a1 + 40);
    if (!v11)
    {
      __int16 v16 = @"<nil>";
LABEL_12:

      uint64_t v17 = v16;
      id v18 = *(id *)(a1 + 32);
      if (!v18)
      {
        long long v23 = @"<nil>";
        goto LABEL_20;
      }
      uint64_t v19 = (objc_class *)objc_opt_class();
      id v20 = NSStringFromClass(v19);
      if (objc_opt_respondsToSelector())
      {
        long long v21 = [v18 performSelector:"accessibilityIdentifier"];
        long long v22 = v21;
        if (v21 && ![v21 isEqualToString:v20])
        {
          long long v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

          goto LABEL_18;
        }
      }
      long long v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_18:

LABEL_20:
      *(_DWORD *)buf = 138543618;
      int v27 = v17;
      __int16 v28 = 2112;
      __int16 v29 = v23;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[%{public}@] %@ <=", buf, 0x16u);

      goto LABEL_21;
    }
    CFStringRef v12 = (objc_class *)objc_opt_class();
    id v13 = NSStringFromClass(v12);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v14 = [v11 performSelector:"accessibilityIdentifier"];
      id v15 = v14;
      if (v14 && ![v14 isEqualToString:v13])
      {
        __int16 v16 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v11, v15];

        goto LABEL_10;
      }
    }
    __int16 v16 = +[NSString stringWithFormat:@"%@<%p>", v13, v11];
LABEL_10:

    goto LABEL_12;
  }
LABEL_21:

  *a4 = *(unsigned char *)(a1 + 48);
  [v6 _maps_subarrayToIndex:v9];
  id v8 = (id)objc_claimAutoreleasedReturnValue();
LABEL_22:
  long long v24 = v8;

  return v24;
}

uint64_t sub_100BEBC7C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100BEBE20(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id v6 = a3;
  if (![v6 count] || (objc_msgSend(v6, "containsObject:", *(void *)(a1 + 32)) & 1) == 0)
  {
    id v14 = v6;
    goto LABEL_23;
  }
  id v7 = sub_1000C49B4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = *(id *)(a1 + 40);
    if (!v8)
    {
      id v13 = @"<nil>";
LABEL_13:

      id v15 = v13;
      id v16 = *(id *)(a1 + 32);
      if (!v16)
      {
        long long v21 = @"<nil>";
        goto LABEL_21;
      }
      uint64_t v17 = (objc_class *)objc_opt_class();
      id v18 = NSStringFromClass(v17);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v19 = [v16 performSelector:"accessibilityIdentifier"];
        id v20 = v19;
        if (v19 && ![v19 isEqualToString:v18])
        {
          long long v21 = +[NSString stringWithFormat:@"%@<%p, %@>", v18, v16, v20];

          goto LABEL_19;
        }
      }
      long long v21 = +[NSString stringWithFormat:@"%@<%p>", v18, v16];
LABEL_19:

LABEL_21:
      *(_DWORD *)buf = 138543618;
      uint64_t v26 = v15;
      __int16 v27 = 2112;
      __int16 v28 = v21;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}@] - %@", buf, 0x16u);

      goto LABEL_22;
    }
    id v9 = (objc_class *)objc_opt_class();
    id v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      id v11 = [v8 performSelector:"accessibilityIdentifier"];
      CFStringRef v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_10;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_10:

    goto LABEL_13;
  }
LABEL_22:

  *a4 = *(unsigned char *)(a1 + 48);
  id v14 = [v6 mutableCopy];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100BEC154;
  v23[3] = &unk_10131AF30;
  id v24 = *(id *)(a1 + 32);
  [v14 removeObjectAtIndex:[v14 indexOfObjectWithOptions:2 passingTest:v23]];

LABEL_23:

  return v14;
}

BOOL sub_100BEC154(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 == a2) {
    *a4 = 1;
  }
  return v4 == a2;
}

uint64_t sub_100BEC174(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100BEC328(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id v6 = sub_1000C49B4();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = *(id *)(a1 + 32);
    if (!v7)
    {
      CFStringRef v12 = @"<nil>";
      goto LABEL_10;
    }
    id v8 = (objc_class *)objc_opt_class();
    id v9 = NSStringFromClass(v8);
    if (objc_opt_respondsToSelector())
    {
      id v10 = [v7 performSelector:"accessibilityIdentifier"];
      id v11 = v10;
      if (v10 && ![v10 isEqualToString:v9])
      {
        CFStringRef v12 = +[NSString stringWithFormat:@"%@<%p, %@>", v9, v7, v11];

        goto LABEL_8;
      }
    }
    CFStringRef v12 = +[NSString stringWithFormat:@"%@<%p>", v9, v7];
LABEL_8:

LABEL_10:
    id v13 = v12;
    id v14 = *(id *)(a1 + 40);
    id v15 = v14;
    if (v14)
    {
      if ([v14 count])
      {
        id v16 = [v15 componentsJoinedByString:@", "];
        uint64_t v17 = +[NSString stringWithFormat:@"<%p> [%@]", v15, v16];
      }
      else
      {
        uint64_t v17 = +[NSString stringWithFormat:@"<%p> (empty)", v15];
      }
    }
    else
    {
      uint64_t v17 = @"<nil>";
    }

    *(_DWORD *)buf = 138543618;
    long long v21 = v13;
    __int16 v22 = 2112;
    long long v23 = v17;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "[%{public}@] => %@", buf, 0x16u);
  }
  *a4 = *(unsigned char *)(a1 + 48);
  id v18 = *(void **)(a1 + 40);

  return v18;
}

uint64_t sub_100BEC578(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100BEC590(uint64_t a1)
{
  uint64_t v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    int v5 = 134349056;
    id v6 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Transitioning animation complete; will queue up pending context change now",
      (uint8_t *)&v5,
      0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 48));
  [v4 _setContexts:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 56) completion:*(void *)(a1 + 40)];
}

void sub_100BEC668(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v2 = [WeakRetained acquireChromeDeactivationTokenForReason:@"top context does not show map view"];
    id v3 = (void *)v4[40];
    v4[40] = v2;

    id WeakRetained = v4;
  }
}

uint64_t sub_100BEC6D4(uint64_t a1)
{
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    return (uint64_t)[v3 setChromeViewController:0];
  }
  return result;
}

void sub_100BEC72C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = sub_1000C49B4();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    id v8 = *(id *)(a1 + 32);
    if (!v8)
    {
      id v13 = @"<nil>";
LABEL_10:

      id v14 = v13;
      id v15 = *(id *)(a1 + 40);
      if (!v15)
      {
        id v20 = @"<nil>";
        goto LABEL_18;
      }
      id v16 = (objc_class *)objc_opt_class();
      uint64_t v17 = NSStringFromClass(v16);
      if (objc_opt_respondsToSelector())
      {
        id v18 = [v15 performSelector:"accessibilityIdentifier"];
        uint64_t v19 = v18;
        if (v18 && ![v18 isEqualToString:v17])
        {
          id v20 = +[NSString stringWithFormat:@"%@<%p, %@>", v17, v15, v19];

          goto LABEL_16;
        }
      }
      id v20 = +[NSString stringWithFormat:@"%@<%p>", v17, v15];
LABEL_16:

LABEL_18:
      *(_DWORD *)buf = 138543874;
      __int16 v22 = v14;
      __int16 v23 = 2114;
      id v24 = v5;
      __int16 v25 = 2114;
      uint64_t v26 = v20;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%{public}@] Running deferred action '%{public}@' for %{public}@", buf, 0x20u);

      goto LABEL_19;
    }
    id v9 = (objc_class *)objc_opt_class();
    id v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      id v11 = [v8 performSelector:"accessibilityIdentifier"];
      CFStringRef v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_8;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_8:

    goto LABEL_10;
  }
LABEL_19:

  v6[2](v6, *(unsigned __int8 *)(a1 + 48));
}

void sub_100BECCA0(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 56);
  id v3 = sub_1000C49B4();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG);
  if (v2)
  {
    if (!v4)
    {
LABEL_20:

      +[NSLayoutConstraint activateConstraints:*(void *)(a1 + 40)];
      goto LABEL_24;
    }
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_19;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_19:
    *(_DWORD *)buf = 138543362;
    v71 = v10;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}@] Will constrain map edge insets to safe areas", buf, 0xCu);

    goto LABEL_20;
  }
  if (v4)
  {
    id v11 = *(id *)(a1 + 32);
    if (!v11)
    {
      id v16 = @"<nil>";
      goto LABEL_22;
    }
    CFStringRef v12 = (objc_class *)objc_opt_class();
    id v13 = NSStringFromClass(v12);
    if (objc_opt_respondsToSelector())
    {
      id v14 = [v11 performSelector:"accessibilityIdentifier"];
      id v15 = v14;
      if (v14 && ![v14 isEqualToString:v13])
      {
        id v16 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v11, v15];

        goto LABEL_17;
      }
    }
    id v16 = +[NSString stringWithFormat:@"%@<%p>", v13, v11];
LABEL_17:

LABEL_22:
    *(_DWORD *)buf = 138543362;
    v71 = v16;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "[%{public}@] Will not constrain map edge insets to safe areas", buf, 0xCu);
  }
  +[NSLayoutConstraint deactivateConstraints:*(void *)(a1 + 40)];
LABEL_24:
  uint64_t v17 = [*(id *)(a1 + 32) mapInsetsLayoutGuide];
  [v17 layoutFrame];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  uint64_t v26 = [*(id *)(a1 + 32) view];
  [v26 bounds];
  CGFloat v61 = v28;
  CGFloat v62 = v27;
  CGFloat v59 = v30;
  CGFloat v60 = v29;
  CGFloat left = UIEdgeInsetsZero.left;
  CGFloat right = UIEdgeInsetsZero.right;
  CGFloat bottom = UIEdgeInsetsZero.bottom;
  CGFloat y = CGRectZero.origin.y;
  CGFloat width = CGRectZero.size.width;
  CGFloat height = CGRectZero.size.height;
  CGFloat v57 = v23;
  CGFloat v58 = v19;
  v72.origin.x = v19;
  CGFloat v34 = v21;
  v72.origin.CGFloat y = v21;
  v72.size.CGFloat width = v23;
  CGFloat v35 = v25;
  v72.size.CGFloat height = v25;
  v80.origin.x = CGRectZero.origin.x;
  v80.origin.CGFloat y = y;
  v80.size.CGFloat width = width;
  v80.size.CGFloat height = height;
  if (CGRectEqualToRect(v72, v80))
  {
    double v37 = left;
    double top = UIEdgeInsetsZero.top;
    double v39 = right;
    double v38 = bottom;
  }
  else
  {
    v73.origin.CGFloat y = v61;
    v73.origin.x = v62;
    v73.size.CGFloat height = v59;
    v73.size.CGFloat width = v60;
    v81.origin.x = CGRectZero.origin.x;
    v81.origin.CGFloat y = y;
    v81.size.CGFloat width = width;
    v81.size.CGFloat height = height;
    double v37 = left;
    double top = UIEdgeInsetsZero.top;
    double v39 = right;
    double v38 = bottom;
    if (!CGRectEqualToRect(v73, v81))
    {
      v74.origin.x = v58;
      v74.origin.CGFloat y = v34;
      v74.size.CGFloat width = v57;
      v74.size.CGFloat height = v35;
      CGFloat MinY = CGRectGetMinY(v74);
      v75.origin.x = v58;
      v75.origin.CGFloat y = v34;
      v75.size.CGFloat width = v57;
      v75.size.CGFloat height = v35;
      CGFloat MinX = CGRectGetMinX(v75);
      v76.origin.x = v62;
      v76.origin.CGFloat y = v61;
      v76.size.CGFloat width = v60;
      v76.size.CGFloat height = v59;
      double v65 = CGRectGetHeight(v76);
      v77.origin.x = v58;
      v77.origin.CGFloat y = v34;
      v77.size.CGFloat width = v57;
      v77.size.CGFloat height = v35;
      double v66 = v65 - CGRectGetMaxY(v77);
      v78.origin.x = v62;
      double top = MinY;
      v78.origin.CGFloat y = v61;
      v78.size.CGFloat width = v60;
      v78.size.CGFloat height = v59;
      double v40 = CGRectGetWidth(v78);
      v79.origin.x = v58;
      v79.origin.CGFloat y = v34;
      v79.size.CGFloat width = v57;
      v79.size.CGFloat height = v35;
      double v38 = v66;
      double v37 = MinX;
      double v39 = v40 - CGRectGetMaxX(v79);
    }
  }

  long long v41 = [*(id *)(a1 + 32) mapView];
  [v41 _edgeInsets];
  if (v37 == v45 && top == v42 && v39 == v44)
  {
    double v48 = v43;

    if (v38 == v48) {
      return;
    }
  }
  else
  {
  }
  v49 = sub_1000C49B4();
  if (os_log_type_enabled(v49, OS_LOG_TYPE_DEBUG))
  {
    id v50 = *(id *)(a1 + 32);
    if (!v50)
    {
      v55 = @"<nil>";
      goto LABEL_46;
    }
    v51 = (objc_class *)objc_opt_class();
    v52 = NSStringFromClass(v51);
    if (objc_opt_respondsToSelector())
    {
      v53 = [v50 performSelector:"accessibilityIdentifier"];
      v54 = v53;
      if (v53 && ![v53 isEqualToString:v52])
      {
        v55 = +[NSString stringWithFormat:@"%@<%p, %@>", v52, v50, v54];

        goto LABEL_44;
      }
    }
    v55 = +[NSString stringWithFormat:@"%@<%p>", v52, v50];
LABEL_44:

LABEL_46:
    *(_DWORD *)buf = 138543362;
    v71 = v55;
    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEBUG, "[%{public}@] - map insets did change after updating safe area constraints, will permit updating map view", buf, 0xCu);
  }
  v56 = *(double **)(*(void *)(a1 + 48) + 8);
  v56[4] = top;
  v56[5] = v37;
  v56[6] = v38;
  v56[7] = v39;
}

id sub_100BED26C(uint64_t a1)
{
  int v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (!v2)
  {
    id v3 = [*(id *)(a1 + 32) routeAnnotationsController];
    BOOL v4 = [v3 configuration];
    id v5 = (RouteAnnotationsMutableConfiguration *)[v4 mutableCopy];
    id v6 = v5;
    if (!v5) {
      id v6 = objc_alloc_init(RouteAnnotationsMutableConfiguration);
    }
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v6);
    if (!v5) {

    }
    int v2 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }

  return v2;
}

NSArray *__cdecl sub_100BED32C(id a1, ChromeComponentUpdateInfo *a2, unint64_t a3)
{
  return [(ChromeComponentUpdateInfo *)a2 callStackSymbols];
}

void sub_100BEE238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BEE264(uint64_t a1, int a2, double a3, double a4)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v8 = sub_1000C49B4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134349825;
      CGFloat v34 = WeakRetained;
      __int16 v35 = 2049;
      double v36 = a3;
      __int16 v37 = 2049;
      double v38 = a4;
      __int16 v39 = 1025;
      int v40 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "[%{public}p] Got hiking coordinate result for coordinate:  %{private}f, %{private}f: %{private}d", buf, 0x26u);
    }

    id v9 = +[_MapsCoordinateKey coordinateKeyFromCoordinate:](_MapsCoordinateKey, "coordinateKeyFromCoordinate:", a3, a4);
    id v10 = sub_1000C49B4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = [WeakRetained[42] objectForKey:v9];
      double v12 = COERCE_DOUBLE([v11 count]);
      *(_DWORD *)buf = 134349312;
      CGFloat v34 = WeakRetained;
      __int16 v35 = 2048;
      double v36 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[%{public}p] Executing %lu completion blocks", buf, 0x16u);
    }
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    id v13 = [WeakRetained[42] objectForKey:v9];
    id v14 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = *(void *)v29;
      do
      {
        for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v29 != v16) {
            objc_enumerationMutation(v13);
          }
          (*(void (**)(double, double))(*(void *)(*((void *)&v28 + 1) + 8 * i) + 16))(a3, a4);
        }
        id v15 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
      }
      while (v15);
    }

    [WeakRetained[42] removeObjectForKey:v9];
    id v18 = [WeakRetained[42] count];
    CGFloat v19 = sub_1000C49B4();
    BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_INFO);
    if (v18)
    {
      if (v20)
      {
        *(_DWORD *)buf = 134349056;
        CGFloat v34 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "[%{public}p] There are more hiking coordinate checks queued up; kicking off the next one",
          buf,
          0xCu);
      }

      CGFloat v21 = [WeakRetained[42] keyEnumerator];
      double v22 = [v21 allObjects];
      CGFloat v23 = [v22 firstObject];
      [v23 coordinate];
      double v25 = v24;
      double v27 = v26;

      [WeakRetained _checkHikingCoordinate:v25, v27];
    }
    else
    {
      if (v20)
      {
        *(_DWORD *)buf = 134349056;
        CGFloat v34 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "[%{public}p] There are no more hiking coordinate checks queued up", buf, 0xCu);
      }
    }
  }
}

void sub_100BEF688(uint64_t a1)
{
  [*(id *)(a1 + 32) setTranslatesAutoresizingMaskIntoConstraints:1];
  [*(id *)(a1 + 32) setAutoresizingMask:18];
  int v2 = [*(id *)(a1 + 40) view];
  [v2 bounds];
  [*(id *)(a1 + 32) setFrame:];

  id v3 = *(id **)(a1 + 40);
  if (v3[61]
    && ([v3[61] superview],
        BOOL v4 = objc_claimAutoreleasedReturnValue(),
        [*(id *)(a1 + 40) view],
        id v5 = objc_claimAutoreleasedReturnValue(),
        v5,
        v4,
        id v3 = *(id **)(a1 + 40),
        v4 == v5))
  {
    id v6 = [v3 view];
    [v6 insertSubview:*(void *)(a1 + 32) aboveSubview:*(void *)(*(void *)(a1 + 40) + 488)];
  }
  else
  {
    id v6 = [v3 view];
    [v6 insertSubview:*(void *)(a1 + 32) atIndex:0];
  }
}

void sub_100BF0244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BF0270(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000C49B4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(id *)(a1 + 32);
    if (!v4)
    {
      id v9 = @"<nil>";
      goto LABEL_10;
    }
    id v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    if (objc_opt_respondsToSelector())
    {
      id v7 = [v4 performSelector:"accessibilityIdentifier"];
      id v8 = v7;
      if (v7 && ![v7 isEqualToString:v6])
      {
        id v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

        goto LABEL_8;
      }
    }
    id v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    CGFloat v58 = v9;
    __int16 v59 = 2048;
    id v60 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{public}@] did complete suppress animation: %p", buf, 0x16u);
  }
  id v10 = +[GEOOfflineService shared];
  [v10 unregisterMapView:*(void *)(*(void *)(a1 + 32) + 488)];

  [*(id *)(*(void *)(a1 + 32) + 520) stopRunningNavigationAnimated:1];
  uint64_t v11 = *(void *)(a1 + 32);
  double v12 = *(void **)(v11 + 32);
  *(void *)(v11 + 32) = 0;

  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = *(void **)(v13 + 520);
  *(void *)(v13 + 520) = 0;

  [*(id *)(*(void *)(a1 + 32) + 488) setDelegate:0];
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v16 = *(void **)(v15 + 24);
  *(void *)(v15 + 24) = 0;

  [*(id *)(*(void *)(a1 + 32) + 488) removeFromSuperview];
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = *(void **)(v17 + 488);
  *(void *)(v17 + 488) = 0;

  uint64_t v19 = *(void *)(a1 + 32);
  BOOL v20 = *(void **)(v19 + 16);
  *(void *)(v19 + 16) = 0;

  [*(id *)(*(void *)(a1 + 32) + 216) removeFromSuperview];
  uint64_t v21 = *(void *)(a1 + 32);
  double v22 = *(void **)(v21 + 216);
  *(void *)(v21 + 216) = 0;

  [*(id *)(a1 + 32) _removeWatermarkView];
  uint64_t v23 = *(void *)(a1 + 32);
  double v24 = *(void **)(v23 + 416);
  *(void *)(v23 + 416) = 0;

  uint64_t v25 = *(void *)(a1 + 32);
  double v26 = *(void **)(v25 + 456);
  *(void *)(v25 + 456) = 0;

  uint64_t v27 = *(void *)(a1 + 32);
  long long v28 = *(void **)(v27 + 424);
  *(void *)(v27 + 424) = 0;

  uint64_t v29 = *(void *)(a1 + 32);
  long long v30 = *(void **)(v29 + 432);
  *(void *)(v29 + 432) = 0;

  uint64_t v31 = *(void *)(a1 + 32);
  long long v32 = *(void **)(v31 + 232);
  *(void *)(v31 + 232) = 0;

  uint64_t v33 = *(void *)(a1 + 32);
  CGFloat v34 = *(void **)(v33 + 448);
  *(void *)(v33 + 448) = 0;

  uint64_t v35 = *(void *)(a1 + 32);
  double v36 = *(void **)(v35 + 464);
  *(void *)(v35 + 464) = 0;

  __int16 v37 = [*(id *)(a1 + 32) overlayController];
  [v37 installInView:0 containingViewController:0 contentLayoutGuide:0 mapInsetsLayoutGuide:0 viewportLayoutGuide:0];

  [*(id *)(a1 + 32) didSuppress];
  long long v54 = 0u;
  long long v55 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  id v38 = *(id *)(*(void *)(a1 + 32) + 472);
  id v39 = [v38 countByEnumeratingWithState:&v52 objects:v56 count:16];
  if (v39)
  {
    id v40 = v39;
    uint64_t v41 = *(void *)v53;
    do
    {
      for (uint64_t i = 0; i != v40; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v53 != v41) {
          objc_enumerationMutation(v38);
        }
        double v43 = *(void **)(*((void *)&v52 + 1) + 8 * i);
        if (objc_opt_respondsToSelector()) {
          [v43 chromeDidSuppress:*(void *)(a1 + 32)];
        }
      }
      id v40 = [v38 countByEnumeratingWithState:&v52 objects:v56 count:16];
    }
    while (v40);
  }

  uint64_t v44 = *(void *)(a1 + 32);
  if (*(id *)(v44 + 80) == WeakRetained)
  {
    *(void *)(v44 + 80) = 0;

    if (([*(id *)(a1 + 32) isSuppressed] & 1) == 0)
    {
      double v45 = sub_1000C49B4();
      if (!os_log_type_enabled(v45, OS_LOG_TYPE_DEFAULT))
      {
LABEL_33:

        [*(id *)(a1 + 32) _unsuppress];
        goto LABEL_34;
      }
      id v46 = *(id *)(a1 + 32);
      if (!v46)
      {
        v51 = @"<nil>";
        goto LABEL_32;
      }
      v47 = (objc_class *)objc_opt_class();
      double v48 = NSStringFromClass(v47);
      if (objc_opt_respondsToSelector())
      {
        v49 = [v46 performSelector:"accessibilityIdentifier"];
        id v50 = v49;
        if (v49 && ![v49 isEqualToString:v48])
        {
          v51 = +[NSString stringWithFormat:@"%@<%p, %@>", v48, v46, v50];

          goto LABEL_29;
        }
      }
      v51 = +[NSString stringWithFormat:@"%@<%p>", v48, v46];
LABEL_29:

LABEL_32:
      *(_DWORD *)buf = 138543362;
      CGFloat v58 = v51;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "[%{public}@] No longer suppressed at end of suppress animation, will run unsuppress now", buf, 0xCu);

      goto LABEL_33;
    }
  }
LABEL_34:
}

void sub_100BF0B8C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_100BF0BB8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) shouldAutomaticallyLoadMapView]) {
    [*(id *)(a1 + 32) loadMapViewIfNeeded];
  }
  [*(id *)(a1 + 32) _addWatermarkView];
  if ([*(id *)(a1 + 32) isInactive]) {
    [*(id *)(a1 + 32) _setInactive:*(unsigned __int8 *)(*(void *)(a1 + 32) + 409)];
  }
  uint64_t v2 = [*(id *)(a1 + 32) overlayController];
  id v3 = [*(id *)(a1 + 32) view];
  id v4 = *(void **)(a1 + 32);
  id v5 = [v4 view];
  id v6 = [v5 safeAreaLayoutGuide];
  id v7 = [*(id *)(a1 + 32) mapInsetsLayoutGuide];
  id v8 = [*(id *)(a1 + 32) viewportLayoutGuide];
  [v2 installInView:v3 containingViewController:v4 contentLayoutGuide:v6 mapInsetsLayoutGuide:v7 viewportLayoutGuide:v8];

  [*(id *)(*(void *)(a1 + 32) + 520) setSuppressed:0];
  id v9 = +[NSNotificationCenter defaultCenter];
  [v9 addObserver:*(void *)(a1 + 32) selector:"userDefaultsDidChange:" name:NSUserDefaultsDidChangeNotification object:0];
}

void sub_100BF0D28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = sub_1000C49B4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = *(id *)(a1 + 32);
    if (!v4)
    {
      id v9 = @"<nil>";
      goto LABEL_10;
    }
    id v5 = (objc_class *)objc_opt_class();
    id v6 = NSStringFromClass(v5);
    if (objc_opt_respondsToSelector())
    {
      id v7 = [v4 performSelector:"accessibilityIdentifier"];
      id v8 = v7;
      if (v7 && ![v7 isEqualToString:v6])
      {
        id v9 = +[NSString stringWithFormat:@"%@<%p, %@>", v6, v4, v8];

        goto LABEL_8;
      }
    }
    id v9 = +[NSString stringWithFormat:@"%@<%p>", v6, v4];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543618;
    long long v30 = v9;
    __int16 v31 = 2048;
    id v32 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[%{public}@] did complete unsuppress animation: %p", buf, 0x16u);
  }
  [*(id *)(a1 + 32) didUnsuppress];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v10 = *(id *)(*(void *)(a1 + 32) + 472);
  id v11 = [v10 countByEnumeratingWithState:&v24 objects:v28 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v25;
    do
    {
      for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v25 != v13) {
          objc_enumerationMutation(v10);
        }
        uint64_t v15 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        if (objc_opt_respondsToSelector()) {
          [v15 chromeDidUnsuppress:*(void *)(a1 + 32)];
        }
      }
      id v12 = [v10 countByEnumeratingWithState:&v24 objects:v28 count:16];
    }
    while (v12);
  }

  uint64_t v16 = *(void *)(a1 + 32);
  if (*(id *)(v16 + 80) == WeakRetained)
  {
    *(void *)(v16 + 80) = 0;

    if ([*(id *)(a1 + 32) isSuppressed])
    {
      uint64_t v17 = sub_1000C49B4();
      if (!os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
LABEL_33:

        [*(id *)(a1 + 32) _suppress];
        goto LABEL_34;
      }
      id v18 = *(id *)(a1 + 32);
      if (!v18)
      {
        uint64_t v23 = @"<nil>";
        goto LABEL_32;
      }
      uint64_t v19 = (objc_class *)objc_opt_class();
      BOOL v20 = NSStringFromClass(v19);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v21 = [v18 performSelector:"accessibilityIdentifier"];
        double v22 = v21;
        if (v21 && ![v21 isEqualToString:v20])
        {
          uint64_t v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

          goto LABEL_29;
        }
      }
      uint64_t v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_29:

LABEL_32:
      *(_DWORD *)buf = 138543362;
      long long v30 = v23;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%{public}@] Now suppressed at end of unsuppress animation, will run suppress now", buf, 0xCu);

      goto LABEL_33;
    }
  }
LABEL_34:
}

id sub_100BF1258(id *a1)
{
  if ([a1[4] isDisplayingNavigation]) {
    uint64_t v2 = 2;
  }
  else {
    uint64_t v2 = 6;
  }
  id v3 = [a1[4] mapView];
  unsigned int v4 = [v3 _applicationState];

  if (v4 != v2)
  {
    id v5 = sub_1000C49B4();
    if (!os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
LABEL_15:

      uint64_t v13 = [a1[4] mapView];
      [v13 _setApplicationState:v2];

      goto LABEL_16;
    }
    id v6 = a1[4];
    if (!v6)
    {
      id v11 = @"<nil>";
      goto LABEL_14;
    }
    id v7 = (objc_class *)objc_opt_class();
    id v8 = NSStringFromClass(v7);
    if (objc_opt_respondsToSelector())
    {
      id v9 = [v6 performSelector:"accessibilityIdentifier"];
      id v10 = v9;
      if (v9 && ![v9 isEqualToString:v8])
      {
        id v11 = +[NSString stringWithFormat:@"%@<%p, %@>", v8, v6, v10];

        goto LABEL_12;
      }
    }
    id v11 = +[NSString stringWithFormat:@"%@<%p>", v8, v6];
LABEL_12:

LABEL_14:
    id v12 = [a1[4] mapView];
    *(_DWORD *)buf = 138543874;
    CGRect v78 = v11;
    __int16 v79 = 1024;
    *(_DWORD *)CGRect v80 = [v12 _applicationState];
    *(_WORD *)&v80[4] = 1024;
    *(_DWORD *)&v80[6] = v2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%{public}@] Updating map app state from %d to %d", buf, 0x18u);

    goto LABEL_15;
  }
LABEL_16:
  if ([a1[5] isAnimated] && objc_msgSend(a1[4], "isViewLoaded"))
  {
    id v14 = [a1[4] view];
    uint64_t v15 = [v14 window];
    BOOL v16 = v15 != 0;
  }
  else
  {
    BOOL v16 = 0;
  }
  uint64_t v17 = sub_1000C49B4();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    id v18 = a1[4];
    if (!v18)
    {
      uint64_t v23 = @"<nil>";
LABEL_29:

      long long v24 = v23;
      id v25 = a1[6];
      if (!v25)
      {
        long long v30 = @"<nil>";
        goto LABEL_37;
      }
      long long v26 = (objc_class *)objc_opt_class();
      long long v27 = NSStringFromClass(v26);
      if (objc_opt_respondsToSelector())
      {
        long long v28 = [v25 performSelector:"accessibilityIdentifier"];
        uint64_t v29 = v28;
        if (v28 && ![v28 isEqualToString:v27])
        {
          long long v30 = +[NSString stringWithFormat:@"%@<%p, %@>", v27, v25, v29];

          goto LABEL_35;
        }
      }
      long long v30 = +[NSString stringWithFormat:@"%@<%p>", v27, v25];
LABEL_35:

LABEL_37:
      *(_DWORD *)buf = 138543618;
      CGRect v78 = v24;
      __int16 v79 = 2112;
      *(void *)CGRect v80 = v30;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "[%{public}@] Will start running navigation if needed, context %@ wants it", buf, 0x16u);

      goto LABEL_38;
    }
    uint64_t v19 = (objc_class *)objc_opt_class();
    BOOL v20 = NSStringFromClass(v19);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v21 = [v18 performSelector:"accessibilityIdentifier"];
      double v22 = v21;
      if (v21 && ![v21 isEqualToString:v20])
      {
        uint64_t v23 = +[NSString stringWithFormat:@"%@<%p, %@>", v20, v18, v22];

        goto LABEL_27;
      }
    }
    uint64_t v23 = +[NSString stringWithFormat:@"%@<%p>", v20, v18];
LABEL_27:

    goto LABEL_29;
  }
LABEL_38:

  __int16 v31 = [a1[4] navigationDisplay];

  if (!v31)
  {
    id v32 = [[ChromeNavigationDisplay alloc] initWithChromeViewController:a1[4]];
    [a1[4] setNavigationDisplay:v32];

    uint64_t v33 = [(ChromeDelegateProxy *)[ChromeNavigationDisplayDelegateProxy alloc] initWithChromeViewController:a1[4]];
    CGFloat v34 = a1[4];
    uint64_t v35 = (void *)v34[4];
    v34[4] = v33;

    double v36 = a1[4];
    uint64_t v37 = v36[4];
    id v38 = [v36 navigationDisplay];
    [v38 setDelegate:v37];

    id v39 = [a1[4] navigationDisplay];
    [v39 setSuppressed:[a1[4] isSuppressed]];

    [a1[4] setNeedsUpdateComponent:@"mapInsets" animated:1];
    [a1[4] setNeedsUpdateComponent:@"routeAnnotations" animated:1];
    [a1[4] setNeedsUpdateComponent:@"mapcontrols" animated:1];
  }
  unsigned int v40 = [a1[4] isDisplayingNavigation];
  char v41 = v40;
  if (v40) {
    uint64_t v42 = 0;
  }
  else {
    uint64_t v42 = 4;
  }
  if (objc_opt_respondsToSelector())
  {
    double v43 = sub_1000C49B4();
    if (!os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
LABEL_62:

      CGFloat v57 = [a1[4] navigationDisplay];
      v74[0] = _NSConcreteStackBlock;
      v74[1] = 3221225472;
      v74[2] = sub_100BF1C80;
      v74[3] = &unk_10131B148;
      uint64_t v76 = v42;
      id v75 = a1[6];
      [v57 configureDisplay:v74 animated:v16];

      goto LABEL_63;
    }
    id v44 = a1[4];
    if (!v44)
    {
      v49 = @"<nil>";
LABEL_53:

      id v50 = v49;
      id v51 = a1[6];
      if (!v51)
      {
        v56 = @"<nil>";
        goto LABEL_61;
      }
      long long v52 = (objc_class *)objc_opt_class();
      long long v53 = NSStringFromClass(v52);
      if (objc_opt_respondsToSelector())
      {
        long long v54 = [v51 performSelector:"accessibilityIdentifier"];
        long long v55 = v54;
        if (v54 && ![v54 isEqualToString:v53])
        {
          v56 = +[NSString stringWithFormat:@"%@<%p, %@>", v53, v51, v55];

          goto LABEL_59;
        }
      }
      v56 = +[NSString stringWithFormat:@"%@<%p>", v53, v51];
LABEL_59:

LABEL_61:
      *(_DWORD *)buf = 138543618;
      CGRect v78 = v50;
      __int16 v79 = 2112;
      *(void *)CGRect v80 = v56;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "[%{public}@] Asking %@ to configure navigation display", buf, 0x16u);

      goto LABEL_62;
    }
    double v45 = (objc_class *)objc_opt_class();
    id v46 = NSStringFromClass(v45);
    if (objc_opt_respondsToSelector())
    {
      v47 = [v44 performSelector:"accessibilityIdentifier"];
      double v48 = v47;
      if (v47 && ![v47 isEqualToString:v46])
      {
        v49 = +[NSString stringWithFormat:@"%@<%p, %@>", v46, v44, v48];

        goto LABEL_51;
      }
    }
    v49 = +[NSString stringWithFormat:@"%@<%p>", v46, v44];
LABEL_51:

    goto LABEL_53;
  }
LABEL_63:
  CGFloat v58 = [a1[4] navigationDisplay];
  if (![v58 isSuppressed])
  {
LABEL_78:

    goto LABEL_79;
  }
  unsigned __int8 v59 = [a1[4] isSuppressed];

  if ((v59 & 1) == 0)
  {
    id v60 = sub_1000C49B4();
    if (!os_log_type_enabled(v60, OS_LOG_TYPE_DEFAULT))
    {
LABEL_77:

      CGFloat v58 = [a1[4] navigationDisplay];
      [v58 setSuppressed:0 animated:v16];
      goto LABEL_78;
    }
    id v61 = a1[4];
    if (!v61)
    {
      double v66 = @"<nil>";
      goto LABEL_76;
    }
    CGFloat v62 = (objc_class *)objc_opt_class();
    v63 = NSStringFromClass(v62);
    if (objc_opt_respondsToSelector())
    {
      v64 = [v61 performSelector:"accessibilityIdentifier"];
      double v65 = v64;
      if (v64 && ![v64 isEqualToString:v63])
      {
        double v66 = +[NSString stringWithFormat:@"%@<%p, %@>", v63, v61, v65];

        goto LABEL_72;
      }
    }
    double v66 = +[NSString stringWithFormat:@"%@<%p>", v63, v61];
LABEL_72:

LABEL_76:
    *(_DWORD *)buf = 138543362;
    CGRect v78 = v66;
    _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEFAULT, "[%{public}@] Unpausing navigation display", buf, 0xCu);

    goto LABEL_77;
  }
LABEL_79:
  if ((v41 & 1) == 0)
  {
    v67 = [a1[4] navigationDisplay];
    v68 = [v67 configuration];
    id v69 = [v68 cameraStyle];

    if (v69 != (id)4)
    {
      v70 = [a1[4] navigationDisplay];
      v73[0] = _NSConcreteStackBlock;
      v73[1] = 3221225472;
      v73[2] = sub_100BF1CEC;
      v73[3] = &unk_10131B168;
      v73[4] = 4;
      [v70 configureDisplay:v73 animated:v16];
    }
  }
  v71 = [a1[4] navigationDisplay];
  [v71 startRunningNavigationAnimated:v16];

  return [a1[4] updateMapViewFrameRate];
}

void sub_100BF1C80(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(void *)(a1 + 40))
  {
    [v3 setCameraStyle:];
    id v3 = v4;
  }
  [v3 setRouteGeniusEntry:0];
  [*(id *)(a1 + 32) configureNavigationDisplay:v4];
}

id sub_100BF1CEC(uint64_t a1, void *a2)
{
  return [a2 setCameraStyle:*(void *)(a1 + 32)];
}

void sub_100BF272C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateMapViewFrameRate];
}

void sub_100BF2968(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateMapViewFrameRate];
}

void sub_100BF2FBC(uint64_t a1)
{
  uint64_t v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    id v9 = [*(id *)(a1 + 32) view];
    id v10 = [v9 sceneIdentifierForLogging];
    *(_DWORD *)buf = 138543618;
    uint64_t v13 = v8;
    __int16 v14 = 2112;
    uint64_t v15 = v10;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] [%@] Power state changed", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained updateMapViewFrameRate];
}

void sub_100BF3A28(id *a1)
{
  if (GEOConfigGetBOOL())
  {
    uint64_t v2 = [a1[4] mapView];
    id v3 = [v2 _mapLayer];

    if (!v3)
    {
LABEL_14:

      goto LABEL_15;
    }
    id v4 = sub_1000C49B4();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
LABEL_13:

      id v11 = [a1[4] view];
      id v12 = [v11 sceneIdentifierForLogging];
      uint64_t v13 = +[NSString stringWithFormat:@"VKMapViewDetailedDescription.%p.%@.txt", v3, v12];

      __int16 v14 = [v3 detailedDescription];
      id v15 = a1[5];
      BOOL v16 = +[MapsRadarTextAttachment attachmentWithFileName:v13 text:v14];
      [v15 addAttachment:v16];

      goto LABEL_14;
    }
    id v5 = a1[4];
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_12;
    }
    id v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_10;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_10:

LABEL_12:
    *(_DWORD *)buf = 138543362;
    id v32 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] Generating VKMapView detailedDescription attachment", buf, 0xCu);

    goto LABEL_13;
  }
LABEL_15:
  uint64_t v17 = [a1[4] view];
  id v18 = [v17 window];

  uint64_t v19 = dispatch_group_create();
  BOOL v20 = a1[4];
  if (v18 && !v20[408])
  {
    uint64_t v21 = [a1[4] view];
    double v22 = [v21 sceneIdentifierForLogging];
    uint64_t v23 = +[NSString stringWithFormat:@"%p.%@.png", v20, v22];

    dispatch_group_enter(v19);
    id v24 = [a1[4] desiredRadarScreenshotTypes];
    id v25 = a1[5];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_100BF3E24;
    v29[3] = &unk_1012E5D08;
    long long v30 = v19;
    +[MapsRadarScreenshotAttachmentHelper generateScreenshotAttachments:v24 fromWindow:v18 withName:v23 radarDraft:v25 completion:v29];

    BOOL v20 = a1[4];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BF3E2C;
  block[3] = &unk_1012E80F0;
  void block[4] = v20;
  id v27 = a1[5];
  id v28 = a1[6];
  dispatch_group_notify(v19, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100BF3E24(uint64_t a1)
{
}

void sub_100BF3E2C(uint64_t a1)
{
  uint64_t v2 = sub_1000C49B4();
  uint64_t v37 = a1;
  if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
    goto LABEL_11;
  }
  id v3 = *(id *)(a1 + 32);
  if (!v3)
  {
    id v8 = @"<nil>";
    goto LABEL_10;
  }
  id v4 = (objc_class *)objc_opt_class();
  id v5 = NSStringFromClass(v4);
  if (objc_opt_respondsToSelector())
  {
    id v6 = [v3 performSelector:"accessibilityIdentifier"];
    id v7 = v6;
    if (v6 && ![v6 isEqualToString:v5])
    {
      id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

      goto LABEL_8;
    }
  }
  id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
  *(_DWORD *)buf = 138543362;
  v49 = v8;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] Start querying contexts for attachments", buf, 0xCu);

  a1 = v37;
LABEL_11:

  id v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  long long v47 = 0u;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v44 = 0u;
  id v10 = [*(id *)(a1 + 32) contexts];
  id v11 = [v10 reverseObjectEnumerator];

  id v12 = [v11 countByEnumeratingWithState:&v44 objects:v52 count:16];
  if (!v12) {
    goto LABEL_51;
  }
  id v13 = v12;
  uint64_t v14 = *(void *)v45;
  id v38 = v9;
  id v39 = v11;
  do
  {
    id v15 = 0;
    do
    {
      if (*(void *)v45 != v14) {
        objc_enumerationMutation(v11);
      }
      BOOL v16 = *(void **)(*((void *)&v44 + 1) + 8 * (void)v15);
      if (objc_opt_respondsToSelector())
      {
        unsigned int v17 = (objc_opt_respondsToSelector() & 1) != 0
            ? [v16 supportsTTRWhenNotTopContext]
            : 0;
        if (([*(id *)(a1 + 32) isTopContext:v16] & 1) != 0 || v17)
        {
          dispatch_group_enter(v9);
          uint64_t v18 = *(void *)(a1 + 40);
          v42[0] = _NSConcreteStackBlock;
          v42[1] = 3221225472;
          v42[2] = sub_100BF4468;
          v42[3] = &unk_1012E5D08;
          uint64_t v19 = v9;
          double v43 = v19;
          LODWORD(v18) = [v16 provideAttachmentsForRadarDraft:v18 withCompletion:v42];
          BOOL v20 = sub_1000C49B4();
          BOOL v21 = os_log_type_enabled(v20, OS_LOG_TYPE_INFO);
          if (v18)
          {
            if (v21)
            {
              id v22 = *(id *)(a1 + 32);
              if (v22)
              {
                uint64_t v23 = (objc_class *)objc_opt_class();
                id v24 = NSStringFromClass(v23);
                if ((objc_opt_respondsToSelector() & 1) == 0) {
                  goto LABEL_29;
                }
                id v25 = [v22 performSelector:"accessibilityIdentifier"];
                long long v26 = v25;
                if (v25 && ![v25 isEqualToString:v24])
                {
                  id v27 = +[NSString stringWithFormat:@"%@<%p, %@>", v24, v22, v26];

                  a1 = v37;
                }
                else
                {

                  a1 = v37;
LABEL_29:
                  id v27 = +[NSString stringWithFormat:@"%@<%p>", v24, v22];
                }
              }
              else
              {
                id v27 = @"<nil>";
              }

              *(_DWORD *)buf = 138543618;
              v49 = v27;
              __int16 v50 = 2112;
              id v51 = v16;
              _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}@] Waiting for context %@ to provide attachments", buf, 0x16u);

              id v9 = v38;
            }

LABEL_45:
            id v11 = v39;
            goto LABEL_46;
          }
          if (v21)
          {
            id v28 = *(id *)(a1 + 32);
            if (v28)
            {
              uint64_t v29 = (objc_class *)objc_opt_class();
              long long v30 = NSStringFromClass(v29);
              if ((objc_opt_respondsToSelector() & 1) == 0) {
                goto LABEL_37;
              }
              __int16 v31 = v30;
              id v32 = [v28 performSelector:"accessibilityIdentifier"];
              uint64_t v33 = v32;
              if (v32 && ![v32 isEqualToString:v31])
              {
                double v36 = v31;
                CGFloat v34 = +[NSString stringWithFormat:@"%@<%p, %@>", v31, v28, v33];

                long long v30 = v36;
              }
              else
              {

                long long v30 = v31;
LABEL_37:
                CGFloat v34 = +[NSString stringWithFormat:@"%@<%p>", v30, v28];
              }
            }
            else
            {
              CGFloat v34 = @"<nil>";
            }

            *(_DWORD *)buf = 138543618;
            v49 = v34;
            __int16 v50 = 2112;
            id v51 = v16;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}@] Context %@ will not provide attachments", buf, 0x16u);

            a1 = v37;
            id v9 = v38;
          }

          dispatch_group_leave(v19);
          goto LABEL_45;
        }
      }
LABEL_46:
      id v15 = (char *)v15 + 1;
    }
    while (v13 != v15);
    id v35 = [v11 countByEnumeratingWithState:&v44 objects:v52 count:16];
    id v13 = v35;
  }
  while (v35);
LABEL_51:

  dispatch_group_leave(v9);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BF44F4;
  block[3] = &unk_1012E76E8;
  void block[4] = *(void *)(a1 + 32);
  id v41 = *(id *)(a1 + 48);
  dispatch_group_notify(v9, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100BF4468(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BF44EC;
  block[3] = &unk_1012E5D08;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100BF44EC(uint64_t a1)
{
}

uint64_t sub_100BF44F4(uint64_t a1)
{
  id v2 = sub_1000C49B4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      id v8 = @"<nil>";
      goto LABEL_10;
    }
    id v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        id v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    id v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    id v11 = v8;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[%{public}@] Finished generating radar attachments", buf, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

CFStringRef sub_100BF4A60(unint64_t a1)
{
  if (a1 > 2) {
    return @".Unknown";
  }
  else {
    return *(&off_10131B1C8 + a1);
  }
}

CFStringRef sub_100BF4A84(unint64_t a1)
{
  if (a1 > 2) {
    return @".Unknown";
  }
  else {
    return *(&off_10131B1E0 + a1);
  }
}

void sub_100BF56C4(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610AB8;
  qword_101610AB8 = (uint64_t)v1;

  id v3 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_101610AB8 setLocale:v3];

  id v4 = (void *)qword_101610AB8;

  [v4 setTimeStyle:1];
}

void sub_100BF5A84(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100BF5AA8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BF5B9C;
  block[3] = &unk_10131B220;
  uint64_t v7 = *(void *)(a1 + 48);
  id v11 = v6;
  uint64_t v15 = v7;
  id v12 = *(id *)(a1 + 32);
  id v13 = v5;
  id v14 = *(id *)(a1 + 40);
  id v8 = v5;
  id v9 = v6;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100BF5B9C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
    uint64_t v5 = *(void *)(v3 + 40);
    id v4 = (id *)(v3 + 40);
    if (!v5) {
      objc_storeStrong(v4, v2);
    }
  }
  [*(id *)(a1 + 40) addObjectsFromArray:*(void *)(a1 + 48)];
  id v6 = *(NSObject **)(a1 + 56);

  dispatch_group_leave(v6);
}

void sub_100BF5BF4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    uint64_t v7 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v5 count]);
    long long v14 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v15;
      do
      {
        id v12 = 0;
        do
        {
          if (*(void *)v15 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = [*(id *)(*((void *)&v14 + 1) + 8 * (void)v12) locationOfInterest:(void)v14];
          if (v13) {
            [v7 addObject:v13];
          }

          id v12 = (char *)v12 + 1;
        }
        while (v10 != v12);
        id v10 = [v8 countByEnumeratingWithState:&v14 objects:v18 count:16];
      }
      while (v10);
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100BF5D7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v2 = *(void (**)(uint64_t, void))(v1 + 16);
    uint64_t v3 = *(void *)(a1 + 40);
    v2(v3, 0);
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) allObjects];
    (*(void (**)(uint64_t, id, void))(v1 + 16))(v1, v4, 0);
  }
}

void sub_100BF6070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BF60A4(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100BF6178;
  v4[3] = &unk_1012E6690;
  objc_copyWeak(&v6, v2);
  id v5 = *(id *)(a1 + 32);
  [WeakRetained addFullyDrawnCallback:v4];

  objc_destroyWeak(&v6);
}

void sub_100BF6164(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BF6178(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained finishedSerialSubTest:*(void *)(a1 + 32)];
}

id sub_100BF6A04(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = (id *)(a1 + 32);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = WeakRetained[4];
    if (v10)
    {
      id v11 = v10;
    }
    else
    {
      id v12 = [v9 virtualGarage];
      if (v12)
      {
        id v23 = v12;
        id v13 = [v12 vehicles];
        if ([v9 _shouldDefaultToNoSelection])
        {
          long long v14 = 0;
        }
        else
        {
          long long v14 = [v9 selectedVehicle];
        }
        id v15 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", (char *)objc_msgSend(v13, "count") + 1);
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_100BF6D4C;
        v26[3] = &unk_10131B298;
        objc_copyWeak(&v29, v7);
        void v26[4] = v9;
        id v16 = v14;
        id v27 = v16;
        id v17 = v15;
        id v28 = v17;
        [v13 enumerateObjectsUsingBlock:v26];
        uint64_t v18 = [v9 _titleForDifferentCar];
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_100BF6FF8;
        v24[3] = &unk_1012E8CD0;
        objc_copyWeak(&v25, v7);
        uint64_t v19 = +[UIAction actionWithTitle:v18 image:0 identifier:0 handler:v24];

        BOOL v20 = [v9 _attributedTitleForVehicle:0];
        [v19 setAttributedTitle:v20];

        [v19 setAccessibilityIdentifier:@"RefinementButtonVehicleDifferentCar"];
        [v19 setState:v16 == 0];
        [v17 addObject:v19];
        BOOL v21 = +[UIMenu menuWithTitle:&stru_101324E70 image:0 identifier:0 options:32 children:v17];
        if (([v9 _shouldDefaultToNoSelection] & 1) == 0) {
          objc_storeStrong(v9 + 4, v21);
        }
        id v11 = v21;

        objc_destroyWeak(&v25);
        objc_destroyWeak(&v29);

        id v12 = v23;
      }
      else
      {
        id v11 = 0;
      }
    }
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

void sub_100BF6D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
}

void sub_100BF6D4C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = [v5 combinedDisplayName];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_100BF6ED4;
  v11[3] = &unk_1012E6368;
  objc_copyWeak(&v13, (id *)(a1 + 56));
  id v7 = v5;
  id v12 = v7;
  id v8 = +[UIAction actionWithTitle:v6 image:0 identifier:0 handler:v11];

  id v9 = [*(id *)(a1 + 32) _attributedTitleForVehicle:v7];
  [v8 setAttributedTitle:v9];

  id v10 = [@"RefinementButtonVehicle" stringByAppendingFormat:@"%lu" a3 + 1];
  [v8 setAccessibilityIdentifier:v10];

  [v8 setState:[v7 isEqual:*(void *)(a1 + 40)]];
  [*(id *)(a1 + 48) addObject:v8];

  objc_destroyWeak(&v13);
}

void sub_100BF6EBC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100BF6ED4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v4 = [WeakRetained _shouldDefaultToNoSelection];
    id v5 = sub_1005768D4();
    BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
    if (v4)
    {
      if (v6)
      {
        uint64_t v7 = *(void *)(a1 + 32);
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[Options] _shouldDefaultToNoSelection is YES, we will not select vehicle: %@", (uint8_t *)&v9, 0xCu);
      }
    }
    else
    {
      if (v6)
      {
        uint64_t v8 = *(void *)(a1 + 32);
        int v9 = 138412290;
        uint64_t v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[Options] Selected vehicle: %@", (uint8_t *)&v9, 0xCu);
      }

      [v3 setSelectedVehicle:*(void *)(a1 + 32)];
    }
  }
}

void sub_100BF6FF8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_1005768D4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[Options] Removed selected vehicle", v3, 2u);
    }

    [WeakRetained setSelectedVehicle:0];
  }
}

CFStringRef sub_100BF7E04(unint64_t a1)
{
  if (a1 > 7) {
    return &stru_101324E70;
  }
  else {
    return off_10131B2F0[a1];
  }
}

void sub_100BF86B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    uint64_t v3 = +[NSNotificationCenter defaultCenter];
    [v3 postNotificationName:@"PPTTest_CarSearchResultsModeController_DidDisplaySearchResults" object:*(void *)(a1 + 32)];

    id WeakRetained = v4;
  }
}

id sub_100BF8CC4(uint64_t a1, uint64_t a2, id a3)
{
  if ((unint64_t)(a2 - 2) < 2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = 88;
  }
  else
  {
    if (a2 == 1)
    {
      [*(id *)(a1 + 32) tableView:a3];
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_8;
    }
    if (a2) {
      goto LABEL_9;
    }
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = 96;
  }
  id v5 = *(id *)(v3 + v4);
LABEL_8:
  a3 = v5;
LABEL_9:

  return a3;
}

id sub_100BF8D3C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 2) < 2)
  {
    BOOL v6 = *(void **)(a1 + 32);
    v10[0] = v6[12];
    uint64_t v4 = [v6 tableView];
    v10[1] = v4;
    id v5 = v10;
LABEL_6:
    id v2 = +[NSArray arrayWithObjects:v5 count:2];

    goto LABEL_8;
  }
  if (a2 != 1)
  {
    if (a2) {
      goto LABEL_8;
    }
    uint64_t v3 = *(void **)(a1 + 32);
    v11[0] = v3[11];
    uint64_t v4 = [v3 tableView];
    v11[1] = v4;
    id v5 = v11;
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  v9[0] = *(void *)(v7 + 88);
  v9[1] = *(void *)(v7 + 96);
  id v2 = +[NSArray arrayWithObjects:v9 count:2];
LABEL_8:

  return v2;
}

id sub_100BF8E70(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 2) < 2)
  {
    id v5 = &OBJC_IVAR___CarSearchResultsCardViewController__errorLabel;
LABEL_7:
    id v6 = *(id *)(*(void *)(a1 + 32) + *v5);
    long long v30 = [v6 topAnchor];
    __int16 v31 = [*(id *)(a1 + 32) view];
    id v29 = [v31 topAnchor];
    id v28 = [v30 constraintGreaterThanOrEqualToAnchor:v29 constant:10.0];
    v33[0] = v28;
    long long v26 = [v6 bottomAnchor];
    id v27 = [*(id *)(a1 + 32) view];
    id v25 = [v27 bottomAnchor];
    id v24 = [v26 constraintLessThanOrEqualToAnchor:v25 constant:10.0];
    v33[1] = v24;
    id v22 = [v6 leadingAnchor];
    id v23 = [*(id *)(a1 + 32) view];
    BOOL v21 = [v23 leadingAnchor];
    BOOL v20 = [v22 constraintGreaterThanOrEqualToAnchor:v21 constant:10.0];
    v33[2] = v20;
    uint64_t v18 = [v6 trailingAnchor];
    uint64_t v19 = [*(id *)(a1 + 32) view];
    id v17 = [v19 trailingAnchor];
    uint64_t v7 = [v18 constraintLessThanOrEqualToAnchor:v17 constant:10.0];
    v33[3] = v7;
    uint64_t v8 = [v6 centerXAnchor];
    int v9 = [*(id *)(a1 + 32) view];
    uint64_t v10 = [v9 centerXAnchor];
    id v11 = [v8 constraintEqualToAnchor:v10];
    v33[4] = v11;
    id v12 = [v6 centerYAnchor];
    id v13 = [*(id *)(a1 + 32) view];
    long long v14 = [v13 centerYAnchor];
    id v15 = [v12 constraintEqualToAnchor:v14];
    v33[5] = v15;
    id v32 = +[NSArray arrayWithObjects:v33 count:6];

    goto LABEL_8;
  }
  if (!a2)
  {
    id v5 = &OBJC_IVAR___CarSearchResultsCardViewController__loadingStackView;
    goto LABEL_7;
  }
  if (a2 == 1)
  {
    uint64_t v3 = [*(id *)(a1 + 32) tableView];
    uint64_t v4 = [*(id *)(a1 + 32) view];
    [v3 _maps_constraintsForCenteringInView:v4];
    id v32 = (id)objc_claimAutoreleasedReturnValue();
  }
LABEL_8:

  return v32;
}

id sub_100BF91E8(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  id v2 = *(void **)(a1 + 40);

  return [v2 enumerateObjectsUsingBlock:&stru_10131B3A0];
}

void sub_100BF9230(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
}

id *sub_100BF923C(id *result)
{
  if (*((id *)result[4] + 10) == result[6])
  {
    uint64_t v1 = result;
    [result[5] enumerateObjectsUsingBlock:&stru_10131B3C0];
    uint64_t result = (id *)v1[4];
    if (result[10] == (id)1)
    {
      return (id *)[result continueQuickRouteETAs];
    }
  }
  return result;
}

void sub_100BF92B4(id a1, UIView *a2, unint64_t a3, BOOL *a4)
{
}

NSString *__cdecl sub_100BF9B64(id a1, SearchResult *a2, unint64_t a3)
{
  uint64_t v3 = [(SearchResult *)a2 mapItem];
  uint64_t v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [v3 _muid]);

  return (NSString *)v4;
}

id sub_100BF9FE0()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_101610AC8;
  uint64_t v7 = qword_101610AC8;
  if (!qword_101610AC8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100BFA578;
    v3[3] = &unk_1012E9390;
    v3[4] = &v4;
    sub_100BFA578((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100BFA0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100BFA0C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

id sub_100BFA0CC()
{
  uint64_t v4 = 0;
  id v5 = &v4;
  uint64_t v6 = 0x2050000000;
  v0 = (void *)qword_101610AD8;
  uint64_t v7 = qword_101610AD8;
  if (!qword_101610AD8)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100BFA768;
    v3[3] = &unk_1012E9390;
    v3[4] = &v4;
    sub_100BFA768((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  id v1 = v0;
  _Block_object_dispose(&v4, 8);

  return v1;
}

void sub_100BFA198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100BFA450(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) testCoordinator];
  uint64_t v3 = [v2 mapViewForPPTTest];
  uint64_t v4 = [v3 window];

  id v5 = objc_alloc((Class)sub_100BF9FE0());
  uint64_t v6 = [*(id *)(a1 + 32) testName];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100BFA570;
  v8[3] = &unk_1012E5D08;
  void v8[4] = *(void *)(a1 + 32);
  id v7 = [v5 initWithTestName:v6 window:v4 completionHandler:v8];

  [v7 setMinimumWindowSize:300.0, 300.0];
  [v7 setMaximumWindowSize:600.0, 600.0];
  [sub_100BFA0CC() runTestWithParameters:v7];
}

id sub_100BFA570(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishedTest];
}

void sub_100BFA578(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = objc_getClass("RPTResizeTestParameters");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610AC8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    sub_100BFA5E8();
  }
}

void sub_100BFA5E8()
{
  v1[0] = 0;
  if (!qword_101610AD0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_100BFA6F4;
    v1[4] = &unk_1012E63F0;
    v1[5] = v1;
    long long v2 = off_10131B448;
    uint64_t v3 = 0;
    qword_101610AD0 = _sl_dlopen();
    v0 = (void *)v1[0];
    if (qword_101610AD0)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t sub_100BFA6F4()
{
  uint64_t result = _sl_dlopen();
  qword_101610AD0 = result;
  return result;
}

GuidanceSearchResultsViewModel *sub_100BFA768(uint64_t a1)
{
  sub_100BFA5E8();
  uint64_t result = (GuidanceSearchResultsViewModel *)objc_getClass("RPTTestRunner");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610AD8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (GuidanceSearchResultsViewModel *)abort_report_np();
    return [(GuidanceSearchResultsViewModel *)v3 initWithDataProvider:v5 navActionCoordinator:v6 routeInfoProvider:v7 mapItemDisplayer:v8];
  }
  return result;
}

void sub_100BFB118(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_100BFB17C(uint64_t a1, void *a2, void *a3)
{
  SEL v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained setLoading:0];
  [WeakRetained _handleResults:v6 error:v5];
}

void sub_100BFB200(uint64_t a1, void *a2, void *a3)
{
  SEL v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained setLoading:0];
  [WeakRetained _handleResults:v6 error:v5];
}

void sub_100BFD1D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100BFD1FC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100BFD2D8;
  block[3] = &unk_1012E9340;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  id v10 = v5;
  id v11 = v6;
  id v7 = v6;
  id v8 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v12);
}

void sub_100BFD2D8(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = *(void **)(a1 + 32);
    if (!v3
      || ([v3 identifier],
          SEL v4 = objc_claimAutoreleasedReturnValue(),
          [WeakRetained[8] identifier],
          id v5 = objc_claimAutoreleasedReturnValue(),
          unsigned int v6 = [v4 isEqualToString:v5],
          v5,
          v4,
          v6))
    {
      [WeakRetained setReloading:0];
      if (*(void *)(a1 + 40) || !*(void *)(a1 + 32))
      {
        id v7 = sub_1000519B4();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)int v9 = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to get latest SoC for vehicle.", v9, 2u);
        }

        id v8 = +[MKMapService sharedService];
        [v8 captureUserAction:6094 onTarget:0 eventValue:0];
      }
      else
      {
        [WeakRetained setVehicle:];
      }
    }
  }
}

int64_t sub_100C028D0(id a1, CarClusterUpdateManeuverInfo *a2, CarClusterUpdateManeuverInfo *a3)
{
  SEL v4 = a3;
  id v5 = [(CarClusterUpdateManeuverInfo *)a2 guidanceEvent];
  unsigned int v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v5 stackRanking]);
  id v7 = [(CarClusterUpdateManeuverInfo *)v4 guidanceEvent];

  id v8 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v7 stackRanking]);
  id v9 = [v6 compare:v8];

  return (int64_t)v9;
}

void sub_100C02990(id a1, CarClusterUpdateManeuverInfo *a2, unint64_t a3, BOOL *a4)
{
  -[CarClusterUpdateManeuverInfo setIsSecondary:](a2, "setIsSecondary:", a3 != 0, a4);
}

void sub_100C03B30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained updateRemainingTime:*(double *)(a1 + 40)]) {
    [WeakRetained sendRouteGuidance];
  }
}

BOOL sub_100C03D88(id a1, GEOComposedGuidanceEvent *a2, NSDictionary *a3)
{
  return [(GEOComposedGuidanceEvent *)a2 hasSignGuidance];
}

BOOL sub_100C03E0C(id a1, GEOComposedGuidanceEvent *a2, NSDictionary *a3)
{
  uint64_t v3 = [(GEOComposedGuidanceEvent *)a2 lanes];
  BOOL v4 = [v3 count] != 0;

  return v4;
}

void sub_100C040F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
}

void sub_100C04948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C0497C(uint64_t a1, uint64_t a2)
{
  [*(id *)(*(void *)(a1 + 32) + 72) sizeForFilter:a2];
  double v4 = v3;
  double v6 = v5;
  *(double *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v3
                                                              + *(double *)(*(void *)(*(void *)(a1 + 48) + 8)
                                                                          + 24);
  id v7 = +[NSCollectionLayoutDimension absoluteDimension:v3];
  id v8 = +[NSCollectionLayoutDimension absoluteDimension:v6];
  id v14 = +[NSCollectionLayoutSize sizeWithWidthDimension:v7 heightDimension:v8];

  id v9 = +[NSCollectionLayoutItem itemWithLayoutSize:v14];
  [*(id *)(*(void *)(a1 + 32) + 72) defaultHeight];
  id v10 = +[NSCollectionLayoutDimension estimatedDimension:](NSCollectionLayoutDimension, "estimatedDimension:");
  id v11 = +[NSCollectionLayoutDimension absoluteDimension:v4];
  id v12 = +[NSCollectionLayoutSize sizeWithWidthDimension:v11 heightDimension:v10];
  id v13 = +[NSCollectionLayoutGroup horizontalGroupWithLayoutSize:v12 subitem:v9 count:1];
  [*(id *)(a1 + 40) addObject:v13];
}

double sub_100C05464(uint64_t a1, void *a2)
{
  if ([a2 row] == (id)(*(void *)(a1 + 32) - 1)) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

double sub_100C05874(uint64_t a1, void *a2)
{
  if ([a2 row] == (id)(*(void *)(a1 + 32) - 1)) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

void sub_100C05CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

BOOL sub_100C05ED0(id a1, _MXExtension *a2)
{
  uint64_t v2 = a2;
  double v3 = [(_MXExtension *)v2 extensionPointIdentifier];
  unsigned int v4 = [v3 isEqualToString:INIntentsServiceExtensionPointName];

  if (v4)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    double v5 = +[_MXExtensionManager _maps_ridesharingRequiredIntentClassesForNonUIHandling];
    id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v12;
      while (2)
      {
        for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v12 != v8) {
            objc_enumerationMutation(v5);
          }
          if (![(_MXExtension *)v2 canSupportIntentClass:*(void *)(*((void *)&v11 + 1) + 8 * i)])
          {
            LOBYTE(v4) = 0;
            goto LABEL_12;
          }
        }
        id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
        if (v7) {
          continue;
        }
        break;
      }
    }
    LOBYTE(v4) = 1;
LABEL_12:
  }
  return v4;
}

void sub_100C060A8(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    double v3 = basename("/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Ride Booking/RideBookingApplication/RideBookingApplicationFinder.m");
    id v4 = [objc_alloc((Class)NSString) initWithFormat:@"_MXExtensionManager gave error: %@", *(void *)(a1 + 32)];
    *(_DWORD *)buf = 136315394;
    id v6 = v3;
    __int16 v7 = 2112;
    id v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "{RBError}{%s}: %@", buf, 0x16u);
  }
  *(unsigned char *)(*(void *)(a1 + 40) + 8) = 0;
}

void sub_100C068C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62,uint64_t a63)
{
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose(&a62, 8);
  _Block_object_dispose(&a68, 8);
  _Block_object_dispose((const void *)(v68 - 248), 8);
  _Block_object_dispose((const void *)(v68 - 200), 8);
  _Block_object_dispose((const void *)(v68 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_100C0691C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100C0697C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100C069DC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100C06A3C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 3221225472;
  BOOL v20 = sub_100C07150;
  BOOL v21 = &unk_1012F3240;
  uint64_t v22 = 2;
  id v4 = +[NSPredicate predicateWithBlock:&v18];
  uint64_t v5 = [v3 filteredArrayUsingPredicate:v4];

  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  __int16 v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 3221225472;
  BOOL v20 = sub_100C07150;
  BOOL v21 = &unk_1012F3240;
  uint64_t v22 = 3;
  id v8 = v3;
  id v9 = +[NSPredicate predicateWithBlock:&v18];
  uint64_t v10 = [v8 filteredArrayUsingPredicate:v9];

  uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
  long long v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 40) = v10;

  uint64_t v18 = _NSConcreteStackBlock;
  uint64_t v19 = 3221225472;
  BOOL v20 = sub_100C07150;
  BOOL v21 = &unk_1012F3240;
  uint64_t v22 = 5;
  id v13 = v8;
  long long v14 = +[NSPredicate predicateWithBlock:&v18];
  uint64_t v15 = [v13 filteredArrayUsingPredicate:v14];

  uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
  id v17 = *(void **)(v16 + 40);
  *(void *)(v16 + 40) = v15;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100C06C30(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C06D40;
  v4[3] = &unk_10131B680;
  char v14 = *(unsigned char *)(a1 + 128);
  id v5 = v2;
  id v6 = *(id *)(a1 + 40);
  long long v11 = *(_OWORD *)(a1 + 80);
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  id v9 = *(id *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 112);
  long long v12 = *(_OWORD *)(a1 + 96);
  long long v13 = v3;
  id v10 = *(id *)(a1 + 72);
  [v5 getRapSnapshotImageDataWithCompletion:v4];
}

void sub_100C06D40(uint64_t a1, void *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 128);
  id v4 = a2;
  id v5 = [RAPAppState alloc];
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(*(void *)(*(void *)(a1 + 96) + 8) + 40);
  if (v3) {
    long long v13 = [(RAPAppState *)v5 initWithMapView:v6 traits:v7 searchHistory:v8 directionHistory:v9 place:v10 searchDataSource:v11 directionsDataSource:*(void *)(a1 + 64) currentlyConnectedAuxiliaryControls:v12 homeShortuts:*(void *)(*(void *)(*(void *)(a1 + 104) + 8) + 40) workShorcuts:*(void *)(*(void *)(*(void *)(a1 + 112) + 8) + 40) schoolShorcuts:*(void *)(*(void *)(*(void *)(a1 + 120) + 8) + 40)];
  }
  else {
    long long v13 = [(RAPAppState *)v5 initWithMapView:v6 traits:v7 searchHistory:v8 directionHistory:v9 place:v10 searchDataSource:v11 directionsDataSource:*(void *)(a1 + 64) currentlyConnectedAuxiliaryControls:v12];
  }
  char v14 = v13;
  [(RAPMapState *)v13 setMapSnapshotImageData:v4];

  (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
}

void sub_100C0709C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (!a2 || a3)
  {
    id v5 = *(void (**)(uint64_t, void))(v3 + 16);
    uint64_t v6 = *(void *)(a1 + 32);
    v5(v6, 0);
  }
  else
  {
    uint64_t v7 = [a2 image];
    id v4 = UIImageJPEGRepresentation(v7, 0.400000006);
    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
  }
}

id sub_100C07150(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 type] == *(id *)(a1 + 32) && (objc_msgSend(v3, "isSetupPlaceholder") & 1) == 0) {
    id v4 = [v3 isBackedPlaceholder];
  }
  else {
    id v4 = 0;
  }

  return v4;
}

uint64_t sub_100C07464(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100C07688(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=General&path=SOFTWARE_UPDATE_LINK"];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = +[UIApplication sharedApplication];
  [v2 _maps_openURL:v3];
}

uint64_t sub_100C089B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C089CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C08CD4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C08CE8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C09180(id a1, UIAlertAction *a2)
{
  +[NSURL URLWithString:@"prefs:root=General&path=STORAGE_MGMT"];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v2 = +[UIApplication sharedApplication];
  [v2 _maps_openURL:v3];
}

uint64_t sub_100C0986C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C09884(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C0989C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C09AE0(id a1, UIAlertAction *a2)
{
  id v3 = +[UIApplication sharedApplication];
  uint64_t v2 = +[NSURL URLWithString:@"bridge:tab=SETTINGS&root=GENERAL_LINK&path=USAGE_LINK"];
  [v3 _maps_openURL:v2 options:&__NSDictionary0__struct completionHandler:0];
}

void sub_100C09DD8(id a1)
{
  v3[0] = &off_1013AAB10;
  v3[1] = &off_1013AAB28;
  v4[0] = @"navigationRouteGuidanceDisplayComponentID";
  v4[1] = @"index";
  v3[2] = &off_1013AAB40;
  v3[3] = &off_1013AAB58;
  v4[2] = @"laneInfoList";
  v4[3] = @"instructionText";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
  uint64_t v2 = (void *)qword_101610AE8;
  qword_101610AE8 = v1;
}

id sub_100C0A5B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [objc_alloc((Class)_UICollectionViewListLayoutSectionConfiguration) initWithAppearanceStyle:[*(id *)(a1 + 32) collectionViewListLayoutAppearanceStyle] layoutEnvironment:v5];
  double v7 = _UICollectionViewListLayoutSectionAutomaticDimension;
  [v6 setEstimatedRowHeight:_UICollectionViewListLayoutSectionAutomaticDimension];
  double v8 = v7;
  if (!a2)
  {
    double v8 = v7;
    if ([*(id *)(a1 + 32) shouldCollapseFirstCollectionViewSectionHeader])
    {
      uint64_t v9 = [*(id *)(a1 + 32) dataSource];
      uint64_t v10 = +[NSIndexPath indexPathForItem:0 inSection:0];
      uint64_t v11 = [v9 sectionAtIndexPath:v10];

      uint64_t v12 = [v11 title];
      id v13 = [v12 length];

      if (v13) {
        double v8 = v7;
      }
      else {
        double v8 = 0.0;
      }
    }
  }
  [v6 setSectionHeaderHeight:v8];
  [v6 setSectionFooterHeight:v7];
  [v6 setSeparatorStyle:[*(id *)(a1 + 32) collectionViewConfigurationSeparatorStyle]];
  id v14 = [objc_alloc((Class)_UICollectionViewListLayoutSection) initWithConfiguration:v6 layoutEnvironment:v5];
  [*(id *)(a1 + 32) collectionViewListSectionContentInsetsForSection:a2];
  [v14 setContentInsets:];
  uint64_t v15 = [*(id *)(a1 + 32) collectionViewDecorationItems];
  if (v15)
  {
    [*(id *)(a1 + 32) collectionViewDecorationItemContentInsetsForSection:a2];
    double v17 = v16;
    double v19 = v18;
    double v21 = v20;
    double v23 = v22;
    id v24 = [v15 firstObject];
    [v24 setContentInsets:v17, v19, v21, v23];

    [v14 setDecorationItems:v15];
  }
  id v25 = [*(id *)(a1 + 32) collectionViewLayoutBoundarySupplementaryItems];

  if (v25)
  {
    long long v26 = [*(id *)(a1 + 32) collectionViewLayoutBoundarySupplementaryItems];
    [v14 setBoundarySupplementaryItems:v26];
  }

  return v14;
}

void sub_100C0C35C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) _searchResultFromWaypointRequest:a2 resolvedWaypoint:a3];
  [v3 addObject:v4];
}

void sub_100C12D18(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  if ([a2 cancels])
  {
    double v7 = [*(id *)(a1 + 32) resultBlock];
    v7[2](v7, *(void *)(a1 + 32), 1, a3);

    *a4 = 1;
  }
}

BOOL sub_100C12E2C(id a1, UIButton *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  if ([(UIButton *)v4 isEnabled]) {
    unsigned __int8 v5 = [(UIButton *)v4 _maps_isVisible];
  }
  else {
    unsigned __int8 v5 = 0;
  }

  return v5;
}

void sub_100C131B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleNotifyCallback];
}

void sub_100C131F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateChargingState];
}

uint64_t sub_100C13474(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 40);
  return result;
}

void sub_100C13ACC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100C13AEC(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 40) = 0;
  return result;
}

uint64_t sub_100C13AF8(uint64_t result)
{
  *(void *)(*(void *)(result + 32) + 40) = 0;
  return result;
}

void *sub_100C13B04(void *result)
{
  *(unsigned char *)(*(void *)(result[5] + 8) + 24) = *(void *)(result[4] + 40) != result[6];
  *(void *)(result[4] + 40) = result[6];
  return result;
}

void sub_100C14218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100C1423C()
{
  if (qword_101610B28 != -1) {
    dispatch_once(&qword_101610B28, &stru_10131B998);
  }
  v0 = (void *)qword_101610B20;

  return v0;
}

void sub_100C14290(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _scrollToFirstCell];
}

void sub_100C15698(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  if ([v11 conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsCell])
  {
    unsigned __int8 v5 = *(void **)(a1 + 32);
    id v6 = v11;
    double v7 = [v5 objectAtIndexedSubscript:a3];
    double v8 = [*(id *)(a1 + 40) _indexPathFromFlatIndexPath:v7];
    uint64_t v9 = [*(id *)(a1 + 40) dataProvider];
    uint64_t v10 = [v9 itemAtIndexPath:v8];

    [*(id *)(a1 + 40) _configureTransitDirectionsCollectionViewCell:v6 withItem:v10 atIndexPath:v7];
  }
}

id sub_100C15E2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    if ([v4 adaptiveShieldSize])
    {
      unsigned __int8 v5 = [v4 sizedArtworkForStyle:0];
      [*(id *)(a1 + 32) setObject:v4 forKey:v5];
    }
    else
    {
      unsigned __int8 v5 = 0;
    }
  }
  else
  {
    unsigned __int8 v5 = 0;
  }

  return v5;
}

void sub_100C1794C(uint64_t a1, unint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) dataProvider];
  unsigned __int8 v5 = [v4 items];
  id v6 = [v5 count];

  if ((unint64_t)v6 > a2)
  {
    double v7 = [*(id *)(a1 + 32) dataProvider];
    double v8 = [v7 items];
    id v9 = [v8 objectAtIndexedSubscript:a2];

    if ([v9 conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsListExpandableItem]) {
      [v9 setExpanded:1];
    }
  }
}

void sub_100C17BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C17BD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) _updateListForClusteredRideOptionChangeInClusteredSegment:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

id sub_100C17CA0(uint64_t a1)
{
  +[PPTNotificationCenter postNotificationIfNeededWithName:@"MapsTestingTransitRouteUpdateWillUpdateDetails" object:0 userInfo:0];
  [*(id *)(a1 + 32) _refreshItemInstructionStrings];
  [*(id *)(a1 + 32) _reloadListViewForRouteChangeIfNotAnimating];

  return +[PPTNotificationCenter postNotificationIfNeededWithName:@"MapsTestingTransitRouteUpdateDidUpdateDetails" object:0 userInfo:0];
}

double sub_100C19CF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) tableView];

  unsigned __int8 v5 = *(void **)(a1 + 32);
  if (v4)
  {
    id v6 = [v5 tableView];
    double v7 = [v6 cellForRowAtIndexPath:v3];
    [v7 frame];
    double x = v8;
  }
  else
  {
    uint64_t v10 = [v5 collectionView];

    id v11 = *(void **)(a1 + 32);
    if (v10)
    {
      uint64_t v12 = [v11 collectionView];
      id v13 = [v12 collectionViewLayout];
      id v14 = [v13 layoutAttributesForItemAtIndexPath:v3];

      [v14 frame];
      double x = v15;
    }
    else
    {
      double v16 = [v11 listView];

      if (v16)
      {
        double v17 = [*(id *)(a1 + 32) listView];
        double v18 = [v17 stepViewForIndexPath:v3];

        [v18 frame];
        double x = v19;
      }
      else
      {
        double x = CGRectZero.origin.x;
      }
    }
  }

  return x;
}

void sub_100C1AB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C1AB24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = (id *)(a1 + 32);
  id v6 = a4;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _reloadListViewForRouteChangeIfNotAnimating];

  v6[2]();
}

void sub_100C1B284(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  if ([v10 conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsCell])
  {
    unsigned __int8 v5 = *(void **)(a1 + 32);
    id v6 = v10;
    double v7 = [v5 objectAtIndexedSubscript:a3];
    double v8 = [v6 stepView];
    id v9 = [v8 transitListItem];

    [v6 setDisplayOptions:[*(id *)(a1 + 40) _stepViewDisplayOptionsForSection:[v7 section]]];
    [v6 setNavigationState:[*(id *)(a1 + 40) _cellNavStateForItem:v9 atIndexPath:v7]];
  }
}

void sub_100C1B37C(uint64_t a1, void *a2, uint64_t a3)
{
  id v10 = a2;
  if ([v10 conformsToProtocol:&OBJC_PROTOCOL___TransitDirectionsCell])
  {
    unsigned __int8 v5 = *(void **)(a1 + 32);
    id v6 = v10;
    double v7 = [v5 objectAtIndexedSubscript:a3];
    double v8 = [v6 stepView];
    id v9 = [v8 transitListItem];

    [v6 setDisplayOptions:[*(id *)(a1 + 40) _stepViewDisplayOptionsForSection:[v7 section]]];
    [v6 setNavigationState:[*(id *)(a1 + 40) _cellNavStateForItem:v9 atIndexPath:v7]];
  }
}

void sub_100C1B474(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  unsigned __int8 v5 = [v3 listView];
  id v7 = [v5 indexPathForStepView:v4];

  id v6 = [v4 transitListItem];
  [v4 setDisplayOptions:[*(id *)(a1 + 32) _stepViewDisplayOptionsForSection:[v7 section]]];
  [v4 setNavigationState:[*(id *)(a1 + 32) _cellNavStateForItem:v6 atIndexPath:v7]];
}

void sub_100C1D4DC(id *a1)
{
  uint64_t v2 = [a1[4] tableView];
  id v3 = [v2 numberOfRowsInSection:[a1[5] section]];

  [a1[6] setExpanded:[a1[6] expanded] ^ 1];
  id v4 = a1[4];
  unsigned __int8 v5 = [v4 tableView];
  id v6 = [v4 tableView:v5 numberOfRowsInSection:[a1[5] section]];

  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v7 = [a1[4] tableView];
  double v8 = [v7 indexPathsForVisibleRows];

  id v9 = [v8 countByEnumeratingWithState:&v53 objects:v63 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v54;
    do
    {
      for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v54 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v53 + 1) + 8 * i);
        id v14 = [v13 section];
        if (v14 == [a1[5] section])
        {
          double v15 = [a1[4] tableView];
          double v16 = [v15 cellForRowAtIndexPath:v13];

          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            double v17 = [v16 stepView];
            [v17 _updateForParentExpansionOrCollapse];
          }
        }
      }
      id v10 = [v8 countByEnumeratingWithState:&v53 objects:v63 count:16];
    }
    while (v10);
  }

  double v18 = [a1[7] stepView];
  [v18 updateExpandCollapseStyling];

  double v19 = [a1[6] expandedItems];
  uint64_t v20 = (uint64_t)[v19 count];

  if (v20 != (unint64_t)fabs((double)(v6 - v3)))
  {
    v49 = sub_1005762E4();
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      CGFloat v58 = "-[TransitDirectionsStepsListDataSource _transitDirectionsCell:wantsToExpandOrCollapseItem:inTableView:]_block_invoke";
      __int16 v59 = 2080;
      id v60 = "TransitDirectionsStepsListDataSource.m";
      __int16 v61 = 1024;
      *(_DWORD *)CGFloat v62 = 1770;
      *(_WORD *)&v62[4] = 2080;
      *(void *)&v62[6] = "numAffectedCells == (NSUInteger)fabs(newCount - oldCount)";
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      __int16 v50 = sub_1005762E4();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        id v51 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        CGFloat v58 = v51;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
  }
  double v21 = v6;
  double v22 = v3;
  id v23 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v20];
  id v24 = [a1[4] dataProvider];
  id v25 = [v24 indexPathForItem:a1[6]];

  long long v26 = [a1[4] _flatIndexFromIndexPath:v25];

  long long v52 = v26;
  id v27 = [v26 row];
  id v28 = [a1[6] postTertiaryItems];
  id v29 = (char *)[v28 count] + (void)v27 + 1;

  if (v20 >= 1)
  {
    long long v30 = v29;
    do
    {
      __int16 v31 = +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", v30, [a1[5] section]);
      [v23 addObject:v31];

      ++v30;
    }
    while ((uint64_t)v30 < (uint64_t)&v29[v20]);
  }
  id v32 = sub_100C1423C();
  BOOL v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG);
  if ((uint64_t)v21 >= (uint64_t)v22)
  {
    if (!v33)
    {
LABEL_38:

      long long v47 = [a1[4] tableView];
      [v47 insertRowsAtIndexPaths:v23 withRowAnimation:0];
      goto LABEL_39;
    }
    id v40 = a1[4];
    if (!v40)
    {
      long long v45 = @"<nil>";
      goto LABEL_37;
    }
    id v41 = (objc_class *)objc_opt_class();
    uint64_t v42 = NSStringFromClass(v41);
    if (objc_opt_respondsToSelector())
    {
      double v43 = [v40 performSelector:"accessibilityIdentifier"];
      long long v44 = v43;
      if (v43 && ![v43 isEqualToString:v42])
      {
        long long v45 = +[NSString stringWithFormat:@"%@<%p, %@>", v42, v40, v44];

        goto LABEL_32;
      }
    }
    long long v45 = +[NSString stringWithFormat:@"%@<%p>", v42, v40];
LABEL_32:

LABEL_37:
    double v48 = (const char *)[v23 count];
    *(_DWORD *)buf = 138544130;
    CGFloat v58 = (const char *)v45;
    __int16 v59 = 2048;
    id v60 = v48;
    __int16 v61 = 2048;
    *(void *)CGFloat v62 = v20;
    *(_WORD *)&v62[8] = 2048;
    *(void *)&v62[10] = v29;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "[%{public}@] Will insert %lu cells (expected %lu) at index %lu", buf, 0x2Au);

    goto LABEL_38;
  }
  if (v33)
  {
    id v34 = a1[4];
    if (!v34)
    {
      id v39 = @"<nil>";
      goto LABEL_34;
    }
    id v35 = (objc_class *)objc_opt_class();
    double v36 = NSStringFromClass(v35);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v37 = [v34 performSelector:"accessibilityIdentifier"];
      id v38 = v37;
      if (v37 && ![v37 isEqualToString:v36])
      {
        id v39 = +[NSString stringWithFormat:@"%@<%p, %@>", v36, v34, v38];

        goto LABEL_24;
      }
    }
    id v39 = +[NSString stringWithFormat:@"%@<%p>", v36, v34];
LABEL_24:

LABEL_34:
    long long v46 = (const char *)[v23 count];
    *(_DWORD *)buf = 138544130;
    CGFloat v58 = (const char *)v39;
    __int16 v59 = 2048;
    id v60 = v46;
    __int16 v61 = 2048;
    *(void *)CGFloat v62 = v20;
    *(_WORD *)&v62[8] = 2048;
    *(void *)&v62[10] = v29;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "[%{public}@] Will hide %lu cells (expected %lu) from index %lu", buf, 0x2Au);
  }
  long long v47 = [a1[4] tableView];
  [v47 deleteRowsAtIndexPaths:v23 withRowAnimation:0];
LABEL_39:
}

void sub_100C1DBC8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[40])
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100C1DD4C;
    block[3] = &unk_1012E5D08;
    void block[4] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  id v3 = [v2 delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    unsigned __int8 v5 = +[MKMapService sharedService];
    id v6 = *(id *)(a1 + 40);
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    unsigned int v8 = [v6 expanded];

    if (v8) {
      unsigned int v9 = 3017;
    }
    else {
      unsigned int v9 = 3016;
    }
    if (v8) {
      unsigned int v10 = 3019;
    }
    else {
      unsigned int v10 = 3018;
    }
    if (isKindOfClass) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t v12 = [*(id *)(a1 + 32) delegate];
    id v13 = [v12 currentUITargetForAnalytics];
    id v14 = [*(id *)(a1 + 32) displayedItemIndexForAnalytics];
    [v5 captureUserAction:v11 onTarget:v13 eventValue:0 transitStep:v14];
  }
}

id sub_100C1DD4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _didFinishAnimatingListView];
}

void sub_100C1E060(id *a1)
{
  uint64_t v2 = [a1[4] collectionView];
  id v3 = [v2 numberOfItemsInSection:[a1[5] section]];

  [a1[6] setExpanded:[a1[6] expanded] ^ 1];
  id v4 = a1[4];
  unsigned __int8 v5 = [v4 collectionView];
  id v6 = [v4 collectionView:v5 numberOfItemsInSection:[a1[5] section]];

  long long v55 = 0u;
  long long v56 = 0u;
  long long v53 = 0u;
  long long v54 = 0u;
  id v7 = [a1[4] collectionView];
  unsigned int v8 = [v7 indexPathsForVisibleItems];

  id v9 = [v8 countByEnumeratingWithState:&v53 objects:v63 count:16];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = *(void *)v54;
    do
    {
      for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v54 != v11) {
          objc_enumerationMutation(v8);
        }
        id v13 = *(void **)(*((void *)&v53 + 1) + 8 * i);
        id v14 = [v13 section];
        if (v14 == [a1[5] section])
        {
          double v15 = [a1[4] collectionView];
          double v16 = [v15 cellForItemAtIndexPath:v13];

          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            double v17 = [v16 stepView];
            [v17 _updateForParentExpansionOrCollapse];
          }
        }
      }
      id v10 = [v8 countByEnumeratingWithState:&v53 objects:v63 count:16];
    }
    while (v10);
  }

  double v18 = [a1[7] stepView];
  [v18 updateExpandCollapseStyling];

  double v19 = [a1[6] expandedItems];
  uint64_t v20 = (uint64_t)[v19 count];

  if (v20 != (unint64_t)fabs((double)(v6 - v3)))
  {
    v49 = sub_1005762E4();
    if (os_log_type_enabled(v49, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      CGFloat v58 = "-[TransitDirectionsStepsListDataSource _transitDirectionsCell:wantsToExpandOrCollapseItem:inCollectionView:]_block_invoke";
      __int16 v59 = 2080;
      id v60 = "TransitDirectionsStepsListDataSource.m";
      __int16 v61 = 1024;
      *(_DWORD *)CGFloat v62 = 1844;
      *(_WORD *)&v62[4] = 2080;
      *(void *)&v62[6] = "numAffectedCells == (NSUInteger)fabs(newCount - oldCount)";
      _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      __int16 v50 = sub_1005762E4();
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        id v51 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        CGFloat v58 = v51;
        _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
  }
  double v21 = v6;
  double v22 = v3;
  id v23 = [objc_alloc((Class)NSMutableArray) initWithCapacity:v20];
  id v24 = [a1[4] dataProvider];
  id v25 = [v24 indexPathForItem:a1[6]];

  long long v26 = [a1[4] _flatIndexFromIndexPath:v25];

  long long v52 = v26;
  id v27 = [v26 row];
  id v28 = [a1[6] postTertiaryItems];
  id v29 = (char *)[v28 count] + (void)v27 + 1;

  if (v20 >= 1)
  {
    long long v30 = v29;
    do
    {
      __int16 v31 = +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", v30, [a1[5] section]);
      [v23 addObject:v31];

      ++v30;
    }
    while ((uint64_t)v30 < (uint64_t)&v29[v20]);
  }
  id v32 = sub_100C1423C();
  BOOL v33 = os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG);
  if ((uint64_t)v21 >= (uint64_t)v22)
  {
    if (!v33)
    {
LABEL_38:

      long long v47 = [a1[4] collectionView];
      [v47 insertItemsAtIndexPaths:v23];
      goto LABEL_39;
    }
    id v40 = a1[4];
    if (!v40)
    {
      long long v45 = @"<nil>";
      goto LABEL_37;
    }
    id v41 = (objc_class *)objc_opt_class();
    uint64_t v42 = NSStringFromClass(v41);
    if (objc_opt_respondsToSelector())
    {
      double v43 = [v40 performSelector:"accessibilityIdentifier"];
      long long v44 = v43;
      if (v43 && ![v43 isEqualToString:v42])
      {
        long long v45 = +[NSString stringWithFormat:@"%@<%p, %@>", v42, v40, v44];

        goto LABEL_32;
      }
    }
    long long v45 = +[NSString stringWithFormat:@"%@<%p>", v42, v40];
LABEL_32:

LABEL_37:
    double v48 = (const char *)[v23 count];
    *(_DWORD *)buf = 138544130;
    CGFloat v58 = (const char *)v45;
    __int16 v59 = 2048;
    id v60 = v48;
    __int16 v61 = 2048;
    *(void *)CGFloat v62 = v20;
    *(_WORD *)&v62[8] = 2048;
    *(void *)&v62[10] = v29;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "[%{public}@] Will insert %lu cells (expected %lu) at index %lu", buf, 0x2Au);

    goto LABEL_38;
  }
  if (v33)
  {
    id v34 = a1[4];
    if (!v34)
    {
      id v39 = @"<nil>";
      goto LABEL_34;
    }
    id v35 = (objc_class *)objc_opt_class();
    double v36 = NSStringFromClass(v35);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v37 = [v34 performSelector:"accessibilityIdentifier"];
      id v38 = v37;
      if (v37 && ![v37 isEqualToString:v36])
      {
        id v39 = +[NSString stringWithFormat:@"%@<%p, %@>", v36, v34, v38];

        goto LABEL_24;
      }
    }
    id v39 = +[NSString stringWithFormat:@"%@<%p>", v36, v34];
LABEL_24:

LABEL_34:
    long long v46 = (const char *)[v23 count];
    *(_DWORD *)buf = 138544130;
    CGFloat v58 = (const char *)v39;
    __int16 v59 = 2048;
    id v60 = v46;
    __int16 v61 = 2048;
    *(void *)CGFloat v62 = v20;
    *(_WORD *)&v62[8] = 2048;
    *(void *)&v62[10] = v29;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "[%{public}@] Will hide %lu cells (expected %lu) from index %lu", buf, 0x2Au);
  }
  long long v47 = [a1[4] collectionView];
  [v47 deleteItemsAtIndexPaths:v23];
LABEL_39:
}

void sub_100C1E744(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[40])
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100C1E8C8;
    block[3] = &unk_1012E5D08;
    void block[4] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  id v3 = [v2 delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    unsigned __int8 v5 = +[MKMapService sharedService];
    id v6 = *(id *)(a1 + 40);
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    unsigned int v8 = [v6 expanded];

    if (v8) {
      unsigned int v9 = 3017;
    }
    else {
      unsigned int v9 = 3016;
    }
    if (v8) {
      unsigned int v10 = 3019;
    }
    else {
      unsigned int v10 = 3018;
    }
    if (isKindOfClass) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t v12 = [*(id *)(a1 + 32) delegate];
    id v13 = [v12 currentUITargetForAnalytics];
    id v14 = [*(id *)(a1 + 32) displayedItemIndexForAnalytics];
    [v5 captureUserAction:v11 onTarget:v13 eventValue:0 transitStep:v14];
  }
}

id sub_100C1E8C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) _didFinishAnimatingListView];
}

void sub_100C1EB68(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 0;
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[40])
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100C1ECEC;
    block[3] = &unk_1012E5D08;
    void block[4] = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  id v3 = [v2 delegate];
  char v4 = objc_opt_respondsToSelector();

  if (v4)
  {
    unsigned __int8 v5 = +[MKMapService sharedService];
    id v6 = *(id *)(a1 + 40);
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    unsigned int v8 = [v6 expanded];

    if (v8) {
      unsigned int v9 = 3017;
    }
    else {
      unsigned int v9 = 3016;
    }
    if (v8) {
      unsigned int v10 = 3019;
    }
    else {
      unsigned int v10 = 3018;
    }
    if (isKindOfClass) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = v10;
    }
    uint64_t v12 = [*(id *)(a1 + 32) delegate];
    id v13 = [v12 currentUITargetForAnalytics];
    id v14 = [*(id *)(a1 + 32) displayedItemIndexForAnalytics];
    [v5 captureUserAction:v11 onTarget:v13 eventValue:0 transitStep:v14];
  }
}

id sub_100C1ECEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _didFinishAnimatingListView];
}

void sub_100C1F4B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C1F4E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unsigned __int8 v5 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = sub_100C1423C();
    if (!os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
    {
LABEL_9:

      [WeakRetained updateForClusteredLegSelectedRideIndexChange];
      [WeakRetained _reloadListViewForRouteChangeIfNotAnimating];
      v5[2](v5);
      goto LABEL_10;
    }
    id v8 = WeakRetained;
    unsigned int v9 = (objc_class *)objc_opt_class();
    unsigned int v10 = NSStringFromClass(v9);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v11 = [v8 performSelector:"accessibilityIdentifier"];
      uint64_t v12 = v11;
      if (v11 && ![v11 isEqualToString:v10])
      {
        id v13 = +[NSString stringWithFormat:@"%@<%p, %@>", v10, v8, v12];

        goto LABEL_8;
      }
    }
    id v13 = +[NSString stringWithFormat:@"%@<%p>", v10, v8];
LABEL_8:

    *(_DWORD *)buf = 138543362;
    double v15 = v13;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "[%{public}@] Will update for latest clustered ride selections and reload list view", buf, 0xCu);

    goto LABEL_9;
  }
LABEL_10:
}

void sub_100C21BF0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "TransitStepsList");
  uint64_t v2 = (void *)qword_101610B20;
  qword_101610B20 = (uint64_t)v1;
}

void sub_100C21E60(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a2;
  id v8 = a5;
  unsigned int v9 = v8;
  if (!v7 || v8)
  {
    uint64_t v17 = *(void *)(a1 + 40);
    if (v17)
    {
      double v18 = [*(id *)(a1 + 32) thumbnailImage];
      (*(void (**)(uint64_t, void *, void *))(v17 + 16))(v17, v18, v9);
    }
  }
  else
  {
    unsigned int v10 = +[UIScreen mainScreen];
    [v10 scale];
    double v12 = v11;

    id v13 = +[UIScreen mainScreen];
    id v14 = [v13 traitCollection];
    BOOL v15 = [v14 layoutDirection] == (id)1;

    objc_initWeak(&location, *(id *)(a1 + 32));
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100C22004;
    v19[3] = &unk_10131B9C0;
    objc_copyWeak(&v21, &location);
    id v16 = *(id *)(a1 + 40);
    v19[4] = *(void *)(a1 + 32);
    id v20 = v16;
    [v7 maps_blurredImageScale:v15 isRTL:v19 completion:v12];

    objc_destroyWeak(&v21);
    objc_destroyWeak(&location);
  }
}

void sub_100C21FE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C22004(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C220D8;
  v6[3] = &unk_1012EC8B8;
  objc_copyWeak(&v10, (id *)(a1 + 48));
  id v7 = v3;
  id v4 = *(id *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  id v9 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

  objc_destroyWeak(&v10);
}

void sub_100C220D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained setCurrentImage:*(void *)(a1 + 32)];
    [v5 setHasFinishedLoading:1];
    id WeakRetained = v5;
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3)
    {
      id v4 = [*(id *)(a1 + 40) thumbnailImage];
      (*(void (**)(uint64_t, void *, void))(v3 + 16))(v3, v4, 0);

      id WeakRetained = v5;
    }
  }
}

uint64_t sub_100C22808(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_29;
  }
  id v4 = v3;
  id v5 = &OBJC_PROTOCOL___CuratedCollectionHistoryEntry;
  objc_opt_class();
  id v6 = v4;
  if (objc_opt_isKindOfClass()) {
    id v7 = v6;
  }
  else {
    id v7 = 0;
  }
  id v8 = v7;

  if (v8
    && ([v8 historyEntry],
        id v9 = objc_claimAutoreleasedReturnValue(),
        unsigned int v10 = [v9 conformsToProtocol:v5],
        v9,
        v10))
  {
    id v11 = v6;
  }
  else
  {
    id v11 = 0;
  }

  if (!v11)
  {
    id v12 = v6;
    id v13 = &OBJC_PROTOCOL___MSPHistoryEntryTransitLineItem;
    objc_opt_class();
    id v6 = v12;
    if (objc_opt_isKindOfClass()) {
      id v14 = v6;
    }
    else {
      id v14 = 0;
    }
    id v15 = v14;

    if (v15
      && ([v15 historyEntry],
          id v16 = objc_claimAutoreleasedReturnValue(),
          unsigned int v17 = [v16 conformsToProtocol:v13],
          v16,
          v17))
    {
      id v18 = v6;
    }
    else
    {
      id v18 = 0;
    }

    if (v18) {
      goto LABEL_27;
    }
    id v19 = v6;
    id v20 = &OBJC_PROTOCOL___MSPHistoryEntryRoute;
    objc_opt_class();
    id v6 = v19;
    id v21 = (objc_opt_isKindOfClass() & 1) != 0 ? v6 : 0;
    id v22 = v21;

    if (v22
      && ([v22 historyEntry],
          id v23 = objc_claimAutoreleasedReturnValue(),
          unsigned int v24 = [v23 conformsToProtocol:v20],
          v23,
          v24))
    {
      id v25 = v6;
    }
    else
    {
      id v25 = 0;
    }

    long long v26 = [v25 historyEntry];
    id v27 = [v26 endWaypoint];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if (isKindOfClass) {
      goto LABEL_27;
    }

LABEL_29:
    id v6 = [*(id *)(a1 + 32) delegate];
    uint64_t v29 = [v6 routeSearchController:*(void *)(a1 + 32) waypointsIncludeObject:v3] ^ 1;
    goto LABEL_30;
  }

LABEL_27:
  uint64_t v29 = 0;
LABEL_30:

  return v29;
}

void sub_100C239F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C23A2C(uint64_t a1)
{
  uint64_t v2 = +[SearchFieldItem searchFieldItemWithObject:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100C23A80(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v3 = +[MKLocationManager sharedLocationManager];
    unsigned int v4 = [v3 isAuthorizedForPreciseLocation];

    if (v4)
    {
      id v5 = [*(id *)(a1 + 32) delegate];
      [v5 routeSearchController:*(void *)(a1 + 32) didSelectItem:*(void *)(a1 + 40)];
    }
  }
}

void sub_100C23CE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100C23CFC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

id sub_100C23FB4()
{
  if (qword_101610B38 != -1) {
    dispatch_once(&qword_101610B38, &stru_10131BAA0);
  }
  v0 = (void *)qword_101610B30;

  return v0;
}

void sub_100C241B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = sub_100C23FB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    LOWORD(v6) = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Update all submission status completed", (uint8_t *)&v6, 2u);
  }

  if (v3)
  {
    id v5 = sub_100C23FB4();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Failed to update all submission statuses with error %@", (uint8_t *)&v6, 0xCu);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C24464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C24488(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (v5 || ![v7 count]) {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
    else {
      [WeakRetained _updateAllSubmissionStatusWithOffset:(char *)[v7 count] + *(void *)(a1 + 48) batchSize:*(void *)(a1 + 56) completion:*(void *)(a1 + 32)];
    }
  }
}

void sub_100C2465C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C24678(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v8 = sub_100C23FB4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Finished making the sync call", buf, 2u);
    }

    if (v6)
    {
      id v9 = sub_100C23FB4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v16 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed sync call with error %@", buf, 0xCu);
      }
LABEL_7:

      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      goto LABEL_12;
    }
    id v10 = [v5 count];
    id v9 = sub_100C23FB4();
    BOOL v11 = os_log_type_enabled(v9, OS_LOG_TYPE_INFO);
    if (!v10)
    {
      if (v11)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "get empty result, finish fetching", buf, 2u);
      }
      goto LABEL_7;
    }
    if (v11)
    {
      *(_DWORD *)buf = 138412290;
      id v16 = v5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Calling Sundew for RAP submission identifiers %@", buf, 0xCu);
    }

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100C248E0;
    v12[3] = &unk_1012E5F78;
    id v14 = *(id *)(a1 + 32);
    id v13 = v5;
    [WeakRetained _updateSubmissionStatusWithIdentifier:v13 completion:v12];
  }
LABEL_12:
}

uint64_t sub_100C248E0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_100C249E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C24A00(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v8 = sub_100C23FB4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Finished making Sundew call", buf, 2u);
    }

    if (v6)
    {
      id v9 = sub_100C23FB4();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v27 = v6;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed Sundew call with error %@", buf, 0xCu);
      }

      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
    else
    {
      id v10 = objc_loadWeakRetained((id *)(a1 + 40));
      if (v10)
      {
        if (MapsFeature_IsEnabled_RAPCommunityID())
        {
          BOOL v11 = (void *)v10[2];
          id v12 = [v5 rapInfos];
          v21[0] = _NSConcreteStackBlock;
          v21[1] = 3221225472;
          v21[2] = sub_100C24D08;
          v21[3] = &unk_10131BA38;
          id v22 = 0;
          id v23 = v10;
          id v24 = v5;
          id v25 = *(id *)(a1 + 32);
          [v11 updateRAPsStatusWithRapInfos:v12 completion:v21];

          id v13 = v22;
        }
        else
        {
          id v14 = sub_100C23FB4();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
          {
            id v15 = [v5 reviewedSubmissionIdentifiers];
            *(_DWORD *)buf = 138412290;
            id v27 = v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Array of RAP submissions that have been Reviewed: %@", buf, 0xCu);
          }
          id v16 = (void *)v10[2];
          unsigned int v17 = [v5 reviewedSubmissionIdentifiers];
          v18[0] = _NSConcreteStackBlock;
          v18[1] = 3221225472;
          v18[2] = sub_100C24DEC;
          v18[3] = &unk_1012F0BB0;
          id v19 = 0;
          id v20 = *(id *)(a1 + 32);
          [v16 setIdentifiersAsReviewed:v17 completion:v18];

          id v13 = v19;
        }
      }
      else
      {
        (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      }
    }
  }
}

uint64_t sub_100C24D08(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_100C23FB4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v8 = 138412290;
      uint64_t v9 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to persist identifiers with error %@", (uint8_t *)&v8, 0xCu);
    }
  }
  id v5 = *(void **)(a1 + 40);
  id v6 = [*(id *)(a1 + 48) rapInfos];
  [v5 _checkForStatusChangeNotificationsNeededForRapInfos:v6];

  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
}

uint64_t sub_100C24DEC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = sub_100C23FB4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v6 = 138412290;
      uint64_t v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to persist identifiers with error %@", (uint8_t *)&v6, 0xCu);
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C25164(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    id v3 = sub_100C23FB4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to send RAP notificaiton was shown log event with error %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100C25260(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPSubmissionStatusDownloader");
  uint64_t v2 = (void *)qword_101610B30;
  qword_101610B30 = (uint64_t)v1;
}

void sub_100C25528(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  uint64_t v2 = [*(id *)(a1 + 32) trayContaineeViewController];
  [WeakRetained presentController:v2 animated:0];
}

void sub_100C25E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C25EC4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained actionDelegate];
    [v2 parkedCarHeaderButtonsSectionControllerRequestsEditLocation:v3];

    id WeakRetained = v3;
  }
}

void sub_100C278F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C27918(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained setSelectedTrip:v3];

  int v4 = [WeakRetained chromeViewController];
  id v5 = [WeakRetained _transportTypeStringForAnalytics];
  [v4 captureUserAction:21 eventValue:v5];
}

id sub_100C27B3C()
{
  if (qword_101610B58 != -1) {
    dispatch_once(&qword_101610B58, &stru_10131BB48);
  }
  v0 = (void *)qword_101610B50;

  return v0;
}

void sub_100C27B90(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  v13.receiver = *(id *)(a1 + 32);
  v13.super_class = (Class)CarSharedTripsContext;
  [super becomeCurrent:v2];
  id v3 = [*(id *)(a1 + 32) sharedTripsAnnotationsController];
  [v3 setChromeViewController:*(void *)(a1 + 40)];

  uint64_t v4 = [*(id *)(a1 + 32) selectedTrip];
  if (v4)
  {
    id v5 = (void *)v4;
    int v6 = [*(id *)(*(void *)(a1 + 32) + 88) sharedTrip];
    uint64_t v7 = [*(id *)(a1 + 32) selectedTrip];

    if (v6 != v7)
    {
      int v8 = [CarSharedTripDetailCardViewController alloc];
      uint64_t v9 = [*(id *)(a1 + 32) selectedTrip];
      id v10 = [(CarSharedTripDetailCardViewController *)v8 initWithSharedTrip:v9 delegate:*(void *)(a1 + 32)];
      uint64_t v11 = *(void *)(a1 + 32);
      id v12 = *(void **)(v11 + 88);
      *(void *)(v11 + 88) = v10;
    }
  }
}

void sub_100C27DB8(uint64_t a1)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 40);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)CarSharedTripsContext;
  [super resignCurrent:v2];
  id v3 = [*(id *)(a1 + 32) sharedTripsAnnotationsController];
  [v3 setChromeViewController:0];
}

uint64_t sub_100C28A44(uint64_t a1)
{
  uint64_t v2 = +[MapsRadarComponent mapsShareETACarPlayComponent];
  [*(id *)(a1 + 32) setComponent:v2];

  [*(id *)(a1 + 32) setCollectFullLogArchive:1];
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v3 = *(id *)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        int v8 = *(void **)(a1 + 32);
        uint64_t v9 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v7) senderInfo:v12];
        id v10 = [v9 fromIdentifier];
        [v8 addCollaborationContactHandle:v10];

        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v5);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

NSString *__cdecl sub_100C28DF8(id a1, GEOSharedNavState *a2, unint64_t a3)
{
  return (NSString *)[(GEOSharedNavState *)a2 _transportTypeStringForAnalytics];
}

void sub_100C29284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100C292A8(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v11 = +[CarShareTripContactCell reuseIdentifier];
    long long v12 = [v7 dequeueReusableCellWithIdentifier:v11 forIndexPath:v8];

    [v12 configureWithSharedTrip:v9];
  }
  else
  {
    long long v12 = 0;
  }

  return v12;
}

void sub_100C29678(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarSharedTripsContext");
  uint64_t v2 = (void *)qword_101610B50;
  qword_101610B50 = (uint64_t)v1;
}

void sub_100C29D98(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapsAppDelegateMenuBuilding");
  uint64_t v2 = (void *)qword_101610B60;
  qword_101610B60 = (uint64_t)v1;
}

id sub_100C2A0C8(uint64_t a1, void *a2)
{
  return [a2 updateArrivalState:*(void *)(a1 + 32)];
}

void sub_100C2A2F0(id a1)
{
  v3[0] = @"primaryOrProceedToRouteManeuver";
  v3[1] = @"secondaryManeuver";
  v3[2] = @"recalculating";
  v3[3] = @"announcementStage";
  void v3[4] = @"remainingManeuverTimeAndDistance";
  void v3[5] = @"remainingTotalTimeAndDistance";
  v3[6] = @"destinationDisplayName";
  v3[7] = @"showLaneGuidanceInfo";
  v3[8] = @"hideLaneGuidanceInfo";
  v3[9] = @"showJunctionViewInfo";
  v3[10] = @"hideJunctionViewInfo";
  v3[11] = @"usePersistentDisplay";
  v3[12] = @"ARSignInfos";
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:13];
  uint64_t v2 = (void *)qword_101610B70;
  qword_101610B70 = v1;
}

MKServerFormattedString *__cdecl sub_100C2B900(id a1, GEOComposedString *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

MKServerFormattedString *__cdecl sub_100C2B958(id a1, GEOComposedString *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

id sub_100C2B9B0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

id sub_100C2BA18(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

void sub_100C2BA80(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = a2;
  [v4 showManeuverSign:v2 maneuverStepIndex:[v3 stepIndex]];
}

MKServerFormattedString *__cdecl sub_100C2BADC(id a1, GEOComposedString *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

MKServerFormattedString *__cdecl sub_100C2BB34(id a1, GEOComposedString *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

id sub_100C2BB8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

id sub_100C2BBF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

id sub_100C2BC5C(uint64_t a1, void *a2)
{
  return _[a2 showSecondaryManeuverSign:*(void *)(a1 + 32)];
}

void sub_100C2BC68(id a1, GuidanceDisplay *a2)
{
}

void sub_100C2BD1C(uint64_t a1, void *a2)
{
  id v9 = a2;
  char v3 = objc_opt_respondsToSelector();
  id v4 = v9;
  if (v3)
  {
    id v5 = [v9 currentLaneGuidanceId];
    uint64_t v6 = [*(id *)(a1 + 32) uniqueID];
    unsigned int v7 = [v6 isEqual:v5];

    if (v7)
    {
      id v8 = [[NavSignLaneGuidanceInfo alloc] initWithGuidanceLaneInfo:*(void *)(a1 + 32)];
      if (objc_opt_respondsToSelector()) {
        [v9 updateLaneGuidance:v8];
      }
    }
    else
    {
      if ((objc_opt_respondsToSelector() & 1) == 0)
      {
LABEL_8:

        id v4 = v9;
        goto LABEL_9;
      }
      id v8 = [[NavSignLaneGuidanceInfo alloc] initWithGuidanceLaneInfo:*(void *)(a1 + 32)];
      [v9 showLaneGuidance:v8];
    }

    goto LABEL_8;
  }
LABEL_9:
}

void sub_100C2BE7C(id a1, GuidanceDisplay *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(GuidanceDisplay *)v2 hideLaneGuidance];
  }
}

void sub_100C2BF78(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (objc_opt_respondsToSelector())
  {
    char v3 = [[NavJunctionViewInfo alloc] initWithGuidanceJunctionViewInfo:*(void *)(a1 + 32)];
    [v4 showJunctionView:v3];
  }
}

void sub_100C2C044(id a1, GuidanceDisplay *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(GuidanceDisplay *)v2 hideJunctionView];
  }
}

void sub_100C2C140(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C2C15C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && (objc_opt_respondsToSelector() & 1) != 0) {
    [v4 usePersistentDisplay:WeakRetained[75]];
  }
}

void sub_100C2C270(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 updateARSigns:*(void *)(a1 + 32)];
  }
}

void sub_100C2C4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C2C4DC(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [v5 setDestinationDisplayName:*((void *)WeakRetained + 3)];
  }
}

id sub_100C2C750(uint64_t a1, void *a2)
{
  return [a2 setETA:*(void *)(a1 + 32)];
}

void sub_100C2C844(id a1, GuidanceDisplay *a2)
{
}

void sub_100C2C8B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 setGuidanceEnabled:*(unsigned __int8 *)(a1 + 32) animated:1];
  }
}

void sub_100C2C98C(id a1, GuidanceDisplay *a2)
{
}

void sub_100C2CA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C2CAA0(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if (objc_opt_respondsToSelector()) {
      [v4 didReroute];
    }
    if (objc_opt_respondsToSelector())
    {
      [v4 hideJunctionView];
      [WeakRetained _removeRepeatableUpdateForKey:@"showJunctionViewInfo"];
    }
  }
}

void sub_100C2CB98(id a1, GuidanceDisplay *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(GuidanceDisplay *)v2 showRecalculationFailed];
  }
}

void sub_100C2CC40(id a1, GuidanceDisplay *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(GuidanceDisplay *)v2 hideRecalculating];
  }
}

id sub_100C2CE14(id a1, MNGuidanceARInfo *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [(MNGuidanceARInfo *)v3 mapsLongDescription];
  id v5 = [(MNGuidanceARInfo *)v3 variableOverrides];

  uint64_t v6 = [v4 stringByAppendingFormat:@"<variable overrides: %@>", v5];

  return v6;
}

id sub_100C2D2D4(uint64_t a1, void *a2)
{
  return _[a2 showProceedingToRouteDistance:*(void *)(a1 + 32) displayString:*(void *)(a1 + 40) forStep:*(double *)(a1 + 48)];
}

id sub_100C2D46C(uint64_t a1, void *a2)
{
  return _[a2 setTimeToManeuver:*(void *)(a1 + 32) distanceToManeuver:*(void *)(a1 + 40) distanceText:*(void *)(a1 + 64) forStep:*(double *)(a1 + 48) atStepIndex:*(double *)(a1 + 56)];
}

MKServerFormattedString *__cdecl sub_100C2D7C0(id a1, NSString *a2, unint64_t a3)
{
  return (MKServerFormattedString *)[(NSString *)a2 mkServerFormattedString];
}

id sub_100C2D7C8(uint64_t a1, void *a2)
{
  return [a2 showManeuverSign:*(void *)(a1 + 32) maneuverStepIndex:*(void *)(a1 + 40)];
}

id sub_100C2D848(uint64_t a1, void *a2)
{
  return _[a2 showManeuverAlertForAnnouncementStage:*(void *)(a1 + 32)];
}

MKServerFormattedString *__cdecl sub_100C2DB80(id a1, NSString *a2, unint64_t a3)
{
  return (MKServerFormattedString *)[(NSString *)a2 mkServerFormattedString];
}

id sub_100C2DB88(uint64_t a1, void *a2)
{
  return _[a2 showSecondaryManeuverSign:*(void *)(a1 + 32)];
}

void sub_100C2DBDC(id a1, GuidanceDisplay *a2)
{
}

void sub_100C2E9E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  uint64_t v6 = a3;
  if (v6)
  {
    unsigned int v7 = sub_10000AF10();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v28 = 138412290;
      uint64_t v29 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error: Identifier refinement ticket failed: %@", (uint8_t *)&v28, 0xCu);
    }
  }
  if (![v5 count])
  {
    id v8 = [objc_alloc((Class)MKMapItem) _initWithLabelMarker:*(void *)(a1 + 32)];
    uint64_t v11 = [PlaceCardItem alloc];
    goto LABEL_9;
  }
  id v8 = [v5 firstObject];
  id v9 = [*(id *)(a1 + 32) waypointInfo];
  unsigned int v10 = [v9 type];

  uint64_t v11 = [PlaceCardItem alloc];
  long long v12 = v11;
  if (v10 != 2)
  {
LABEL_9:
    long long v14 = [(PlaceCardItem *)v11 initWithMapItem:v8];
    goto LABEL_10;
  }
  long long v13 = [*(id *)(a1 + 32) waypointInfo];
  long long v14 = [(PlaceCardItem *)v12 initWithMapItem:v8 chargeStationWaypointInfo:v13];

LABEL_10:
  long long v15 = [*(id *)(a1 + 40) containerViewController];
  id v16 = [v15 currentViewController];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if ((isKindOfClass & 1) == 0) {
    goto LABEL_12;
  }
  id v18 = [*(id *)(a1 + 40) containerViewController];
  id v19 = [v18 currentViewController];

  id v20 = [v19 placeCardItem];
  unsigned __int8 v21 = [(PlaceCardItem *)v14 isEqual:v20];

  if ((v21 & 1) == 0)
  {
LABEL_12:
    id v22 = sub_10000AF10();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      id v23 = [v8 name];
      int v28 = 138412546;
      uint64_t v29 = v14;
      __int16 v30 = 2112;
      __int16 v31 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Pushing place card for %@ (name: %@)", (uint8_t *)&v28, 0x16u);
    }
    id v24 = [*(id *)(a1 + 40) placecardViewController];
    [v24 resetState];
    id v25 = [*(id *)(a1 + 40) navigationTransportType];
    uint64_t v26 = 0;
    switch((unint64_t)v25)
    {
      case 0uLL:
        if ((MapsFeature_IsEnabled_DrivingMultiWaypointRoutes() & 1) == 0 && (MapsFeature_IsEnabled_Maps420() & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v26 = 1;
        break;
      case 1uLL:
        uint64_t IsEnabled_DrivingMultiWaypointRoutes = MapsFeature_IsEnabled_DrivingMultiWaypointRoutes();
        goto LABEL_21;
      case 2uLL:
LABEL_18:
        uint64_t IsEnabled_DrivingMultiWaypointRoutes = MapsFeature_IsEnabled_Maps182();
        goto LABEL_21;
      case 5uLL:
        uint64_t IsEnabled_DrivingMultiWaypointRoutes = MapsFeature_IsEnabled_Maps420();
LABEL_21:
        uint64_t v26 = IsEnabled_DrivingMultiWaypointRoutes;
        break;
      default:
        break;
    }
    [v24 setIsAdditionalStop:v26];
    [v24 setExcludedContent:[*(id *)(a1 + 40) excludedContentForMapItem:v8]];
    [v24 setPlaceCardItem:v14 withHistory:0];
    [*(id *)(a1 + 40) presentPlacecardViewController];
  }
}

void sub_100C2FBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

id sub_100C2FC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + 32);
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v8 = *(unsigned int *)(a1 + 48);

  return _[v6 trackNavigationStarted:isKindOfClass & 1 purpose:v8 originResolvedType:a2 destinationResolvedType:a3];
}

void sub_100C2FF44(void *a1, unsigned int a2)
{
  GEOFindOrCreateLog();
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    if (a2 >= 5)
    {
      uint64_t v6 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      {
        int v9 = 136446978;
        unsigned int v10 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/AuxiliaryTasks/NavigationTrackingTask.m";
        __int16 v11 = 1024;
        *(_DWORD *)long long v12 = 94;
        *(_WORD *)&void v12[4] = 2082;
        *(void *)&v12[6] = "NSString *_stringForType(GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation)";
        *(_WORD *)&v12[14] = 2082;
        *(void *)&v12[16] = "YES";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. An unhandled GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation?", (uint8_t *)&v9, 0x26u);
      }

      CFStringRef v5 = @"?";
    }
    else
    {
      CFStringRef v5 = off_10131BFF0[a2];
    }
    uint64_t v7 = a1[5];
    uint64_t v8 = a1[6];
    int v9 = 138412802;
    unsigned int v10 = (const char *)v5;
    __int16 v11 = 2048;
    *(void *)long long v12 = v7;
    *(_WORD *)&v12[8] = 2048;
    *(void *)&v12[10] = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Determined %@ for origin <%+.6f,%+.6f>", (uint8_t *)&v9, 0x20u);
  }

  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = a2;
}

void sub_100C300F0(void *a1, unsigned int a2)
{
  GEOFindOrCreateLog();
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    if (a2 >= 5)
    {
      uint64_t v6 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      {
        int v9 = 136446978;
        unsigned int v10 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/AuxiliaryTasks/NavigationTrackingTask.m";
        __int16 v11 = 1024;
        *(_DWORD *)long long v12 = 94;
        *(_WORD *)&void v12[4] = 2082;
        *(void *)&v12[6] = "NSString *_stringForType(GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation)";
        *(_WORD *)&v12[14] = 2082;
        *(void *)&v12[16] = "YES";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. An unhandled GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation?", (uint8_t *)&v9, 0x26u);
      }

      CFStringRef v5 = @"?";
    }
    else
    {
      CFStringRef v5 = off_10131BFF0[a2];
    }
    uint64_t v7 = a1[5];
    uint64_t v8 = a1[6];
    int v9 = 138412802;
    unsigned int v10 = (const char *)v5;
    __int16 v11 = 2048;
    *(void *)long long v12 = v7;
    *(_WORD *)&v12[8] = 2048;
    *(void *)&v12[10] = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Determined %@ for destination <%+.6f,%+.6f>", (uint8_t *)&v9, 0x20u);
  }

  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = a2;
}

uint64_t sub_100C3029C(void *a1)
{
  GEOFindOrCreateLog();
  uint64_t v2 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(int *)(*(void *)(a1[5] + 8) + 24);
    if (v3 >= 5)
    {
      CFStringRef v5 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
      {
        int v10 = 136446978;
        __int16 v11 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/AuxiliaryTasks/NavigationTrackingTask.m";
        __int16 v12 = 1024;
        *(_DWORD *)long long v13 = 94;
        *(_WORD *)&void v13[4] = 2082;
        *(void *)&v13[6] = "NSString *_stringForType(GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation)";
        __int16 v14 = 2082;
        long long v15 = "YES";
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. An unhandled GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation?", (uint8_t *)&v10, 0x26u);
      }

      CFStringRef v4 = @"?";
    }
    else
    {
      CFStringRef v4 = off_10131BFF0[v3];
    }
    uint64_t v6 = *(int *)(*(void *)(a1[6] + 8) + 24);
    if (v6 >= 5)
    {
      uint64_t v8 = GEOFindOrCreateLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      {
        int v10 = 136446978;
        __int16 v11 = "/Library/Caches/com.apple.xbs/Sources/Maps/iOS/Shared/AuxiliaryTasks/NavigationTrackingTask.m";
        __int16 v12 = 1024;
        *(_DWORD *)long long v13 = 94;
        *(_WORD *)&void v13[4] = 2082;
        *(void *)&v13[6] = "NSString *_stringForType(GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation)";
        __int16 v14 = 2082;
        long long v15 = "YES";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "At %{public}s:%d, %{public}s forbids: %{public}s. An unhandled GEOLogMsgEventDirectionsRequestDetails_DirectionsRequestLocation?", (uint8_t *)&v10, 0x26u);
      }

      CFStringRef v7 = @"?";
    }
    else
    {
      CFStringRef v7 = off_10131BFF0[v6];
    }
    int v10 = 138412546;
    __int16 v11 = (const char *)v4;
    __int16 v12 = 2112;
    *(void *)long long v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Calling back with [%@, %@]", (uint8_t *)&v10, 0x16u);
  }

  return (*(uint64_t (**)(void))(a1[4] + 16))();
}

void sub_100C30520(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  CFStringRef v7 = v6;
  if (!v5 || v6)
  {
    long long v13 = GEOFindOrCreateLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      int v18 = 138412290;
      id v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Error checking coordinate: %@", (uint8_t *)&v18, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = v5;
    int v10 = [v9 shortcutsForHome];
    id v11 = [v10 count];

    if (v11)
    {
      uint64_t v12 = 1;
    }
    else
    {
      __int16 v14 = [v9 shortcutsForWork];
      id v15 = [v14 count];

      if (v15)
      {
        uint64_t v12 = 2;
      }
      else
      {
        id v16 = [v9 shortcutsForAll];
        id v17 = [v16 count];

        if (v17) {
          uint64_t v12 = 3;
        }
        else {
          uint64_t v12 = 4;
        }
      }
    }

    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v8, v12);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100C312FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C31318(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100C313CC;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100C313CC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = WeakRetained;
    [WeakRetained[16] setButtonEnabled:1];
    id WeakRetained = v2;
  }
}

void sub_100C314F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C31510(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 1000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100C315C4;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v4);
}

void sub_100C315C4(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    dispatch_time_t v2 = WeakRetained;
    [WeakRetained[16] setButtonEnabled:1];
    id WeakRetained = v2;
  }
}

void sub_100C31724(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C31740(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    [WeakRetained[16] updateButtons];
    id WeakRetained = v2;
  }
}

void sub_100C32E18(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_100C32E58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = +[MapsFavoritesManager sharedManager];
  uint64_t v2 = [v1 shortcutsForLibrary];
  [WeakRetained _updateContent:v2];
}

void sub_100C32ED0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100C32F90;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100C32F90(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateSuggestions:*(void *)(a1 + 32)];
}

void sub_100C32FE0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100C330A0;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100C330A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateContent:*(void *)(a1 + 32)];
}

void sub_100C330F0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100C331B0;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
}

void sub_100C331B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _updateSuggestions:*(void *)(a1 + 32)];
}

void sub_100C33364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100C334A0(uint64_t a1)
{
  if (*(uint64_t *)(a1 + 40) >= 2)
  {
    int v1 = *(unsigned __int8 *)(a1 + 48);
    id v3 = [*(id *)(a1 + 32) tableView];
    uint64_t v2 = +[NSIndexSet indexSetWithIndex:1];
    if (v1) {
      [v3 deleteSections:v2 withRowAnimation:0];
    }
    else {
      [v3 insertSections:v2 withRowAnimation:0];
    }
  }
}

void sub_100C33D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C33D34(uint64_t a1, int a2)
{
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100C33DE0;
    block[3] = &unk_1012E6708;
    objc_copyWeak(&v5, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(&v5);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _touchMapsSuggestionsEngine];
}

void sub_100C33DE0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _loadContentAndSuggestions];
}

void sub_100C34A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C34AB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C34B70;
  v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100C34B70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (*(void *)(a1 + 32)) {
    BOOL v3 = 1;
  }
  else {
    BOOL v3 = WeakRetained == 0;
  }
  if (!v3)
  {
    id v4 = WeakRetained;
    [WeakRetained reloadDataIfPossible];
    id WeakRetained = v4;
  }
}

void sub_100C34BCC(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C34C64;
  v3[3] = &unk_1012E6830;
  objc_copyWeak(&v4, (id *)(a1 + 32));
  char v5 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
  objc_destroyWeak(&v4);
}

void sub_100C34C64(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (*(unsigned char *)(a1 + 40)) {
    BOOL v4 = 1;
  }
  else {
    BOOL v4 = WeakRetained == 0;
  }
  if (!v4) {
    [WeakRetained reloadDataIfPossible];
  }
  id v5 = objc_loadWeakRetained(v2);
  [v5 _touchMapsSuggestionsEngine];
}

void sub_100C35484(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100C354A0(uint64_t a1, void *a2)
{
  BOOL v3 = (id *)(a1 + 40);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained removeIndexPath:*(void *)(a1 + 32)];

  v5[2](v5, 1);
}

void sub_100C355F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100C35614(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a2, 1);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained shareRowAtIndexPath:*(void *)(a1 + 32) completion:&stru_10131C060];
}

void sub_100C35750(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _loadContentAndSuggestions];
    id WeakRetained = v2;
  }
}

void sub_100C35838(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _loadContentAndSuggestions];
    id WeakRetained = v2;
  }
}

id sub_100C367F0()
{
  if (qword_101610BA8 != -1) {
    dispatch_once(&qword_101610BA8, &stru_10131C0A0);
  }
  v0 = (void *)qword_101610BA0;

  return v0;
}

void sub_100C37B14(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionUsageTracker");
  id v2 = (void *)qword_101610BA0;
  qword_101610BA0 = (uint64_t)v1;
}

void sub_100C3A378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100C3A390(uint64_t result)
{
  return result;
}

void sub_100C3A4B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C3A4D0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  *(CGFloat *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = CGRectGetMaxX(*(CGRect *)&a2);
}

BOOL sub_100C3A73C(uint64_t a1, void *a2)
{
  BOOL v3 = [a2 view];
  BOOL v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

void sub_100C3A868(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v13 = a2;
  if (MKApplicationLayoutDirectionIsRightToLeft())
  {
    [*(id *)(a1 + 32) bounds];
    double MaxX = CGRectGetMaxX(v15);
    v16.origin.double x = a3;
    v16.origin.CGFloat y = a4;
    v16.size.CGFloat width = a5;
    v16.size.CGFloat height = a6;
    a3 = MaxX - CGRectGetMaxX(v16);
  }
  uint64_t v12 = [v13 view];
  [v12 setFrame:a3, a4, a5, a6];
}

void sub_100C3AA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C3AA74(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v10 = *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 32);
  if (v10 <= CGRectGetMaxX(*(CGRect *)&a2))
  {
    v16.origin.double x = a2;
    v16.origin.CGFloat y = a3;
    v16.size.CGFloat width = a4;
    v16.size.CGFloat height = a5;
    double MaxX = CGRectGetMaxX(v16);
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
  }
  else
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
    double MaxX = *(double *)(v11 + 32);
  }
  *(double *)(v11 + 32) = MaxX;
  double v13 = *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  v17.origin.double x = a2;
  v17.origin.CGFloat y = a3;
  v17.size.CGFloat width = a4;
  v17.size.CGFloat height = a5;
  if (v13 <= CGRectGetMaxY(v17))
  {
    v18.origin.double x = a2;
    v18.origin.CGFloat y = a3;
    v18.size.CGFloat width = a4;
    v18.size.CGFloat height = a5;
    double MaxY = CGRectGetMaxY(v18);
    uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8);
  }
  else
  {
    uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8);
    double MaxY = *(double *)(v14 + 40);
  }
  *(double *)(v14 + 40) = MaxY;
}

void sub_100C3AC78(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11 = a2;
  v33.origin.double x = a3;
  v33.origin.CGFloat y = a4;
  v33.size.CGFloat width = a5;
  v33.size.CGFloat height = a6;
  double MinX = CGRectGetMinX(v33);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v13 = v11;
  id v14 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v29;
    do
    {
      for (uint64_t i = 0; i != v15; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v29 != v16) {
          objc_enumerationMutation(v13);
        }
        CGRect v18 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        id v19 = [v18 view:v28];
        [v19 _mapkit_fittingSize];
        double v21 = v20;
        double v23 = v22;

        id v24 = [v13 firstObject];

        if (v18 != v24)
        {
          [*(id *)(a1 + 32) _paddingForItem:v18];
          double MinX = MinX + v25;
        }
        v34.origin.double x = a3;
        v34.origin.CGFloat y = a4;
        v34.size.CGFloat width = a5;
        v34.size.CGFloat height = a6;
        double MinY = CGRectGetMinY(v34);
        v35.origin.double x = a3;
        v35.origin.CGFloat y = a4;
        v35.size.CGFloat width = a5;
        v35.size.CGFloat height = a6;
        CGRectGetHeight(v35);
        UIRoundToViewScale();
        (*(void (**)(double, double, double, double))(*(void *)(a1 + 40) + 16))(MinX, MinY + v27, v21, v23);
        double MinX = v21 + MinX;
      }
      id v15 = [v13 countByEnumeratingWithState:&v28 objects:v32 count:16];
    }
    while (v15);
  }
}

double sub_100C3B1A8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  [*(id *)(a1 + 32) maxLineHeight];
  if (v8 > 0.0)
  {
    [*(id *)(a1 + 32) maxLineHeight];
    if (a5 >= v9) {
      [*(id *)(a1 + 32) maxLineHeight];
    }
  }
  return a2;
}

id sub_100C3D78C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_100C3D91C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_100C3D924(uint64_t a1, int a2)
{
  if (a2 && !*(unsigned char *)(a1 + 40))
  {
    id v2 = [*(id *)(a1 + 32) loadingIndicator];
    [v2 stopAnimating];
  }
}

id sub_100C3DCA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_100C3EA38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id sub_100C3EA78(uint64_t a1, double a2)
{
  *(float *)&a2 = fminf(*(float *)&a2, 1.0);
  return [*(id *)(a1 + 32) setScale:a2];
}

void sub_100C3EA88(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  BOOL v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = (void *)*((void *)WeakRetained + 3);
    *((void *)WeakRetained + 3) = 0;

    id v6 = [v4 _vkNavigationPuckMarker];
    LODWORD(v7) = 1.0;
    [v6 setScale:v7];
  }
  double v8 = sub_100053B74();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    double v9 = @"NO";
    if (a2) {
      double v9 = @"YES";
    }
    double v10 = v9;
    int v11 = 138412290;
    uint64_t v12 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Transition to navigation puck completed: %@", (uint8_t *)&v11, 0xCu);
  }
}

id sub_100C3EB9C(uint64_t a1)
{
  CGAffineTransformMakeScale(&v5, 0.0, 0.0);
  uint64_t v2 = *(void **)(a1 + 32);
  CGAffineTransform v4 = v5;
  [v2 setTransform:&v4];
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100C3EBFC(uint64_t a1, double a2)
{
  *(float *)&a2 = 1.0 - *(float *)&a2;
  return [*(id *)(a1 + 32) setScale:a2];
}

void sub_100C3EC0C(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  CGAffineTransform v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = (void *)*((void *)WeakRetained + 3);
    *((void *)WeakRetained + 3) = 0;
  }
  [*(id *)(a1 + 32) setEnabled:0];
  [*(id *)(a1 + 32) setScale:0.0];
  double v7 = sub_100053B74();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    double v8 = @"NO";
    if (a2) {
      double v8 = @"YES";
    }
    double v9 = v8;
    int v10 = 138412290;
    int v11 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Transition to normal puck completed: %@", (uint8_t *)&v10, 0xCu);
  }
}

id sub_100C3ED20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v2 setTransform:v5];
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_100C3FC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C3FCC4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  double v8 = WeakRetained;
  if (WeakRetained)
  {
    if (*((unsigned char *)WeakRetained + 32))
    {
      double v9 = sub_100576A9C();
      int v10 = v9;
      if (v5)
      {
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
        {
LABEL_11:

          id v18 = v5;
          int v10 = v8[3];
          v8[3] = v18;
LABEL_27:

          goto LABEL_28;
        }
        int v11 = v8;
        uint64_t v12 = (objc_class *)objc_opt_class();
        id v13 = NSStringFromClass(v12);
        if (objc_opt_respondsToSelector())
        {
          id v14 = [v11 performSelector:"accessibilityIdentifier"];
          id v15 = v14;
          if (v14 && ![v14 isEqualToString:v13])
          {
            uint64_t v16 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v11, v15];

            goto LABEL_10;
          }
        }
        uint64_t v16 = +[NSString stringWithFormat:@"%@<%p>", v13, v11];
LABEL_10:

        uint64_t v17 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138543618;
        uint64_t v37 = v16;
        __int16 v38 = 2114;
        uint64_t v39 = v17;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "[%{public}@] Acquired token for trip %{public}@", buf, 0x16u);

        goto LABEL_11;
      }
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_27;
      }
      long long v30 = v8;
      long long v31 = (objc_class *)objc_opt_class();
      id v32 = NSStringFromClass(v31);
      if (objc_opt_respondsToSelector())
      {
        CGRect v33 = [v30 performSelector:"accessibilityIdentifier"];
        CGRect v34 = v33;
        if (v33 && ![v33 isEqualToString:v32])
        {
          id v24 = +[NSString stringWithFormat:@"%@<%p, %@>", v32, v30, v34];

          goto LABEL_25;
        }
      }
      id v24 = +[NSString stringWithFormat:@"%@<%p>", v32, v30];
LABEL_25:

      uint64_t v35 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138543874;
      uint64_t v37 = v24;
      __int16 v38 = 2114;
      uint64_t v39 = v35;
      __int16 v40 = 2114;
      id v41 = v6;
      uint64_t v26 = "[%{public}@] Failed to acquire token for trip %{public}@: %{public}@";
      double v27 = v10;
      os_log_type_t v28 = OS_LOG_TYPE_ERROR;
      uint32_t v29 = 32;
      goto LABEL_26;
    }
    int v10 = sub_100576A9C();
    if (!os_log_type_enabled(v10, OS_LOG_TYPE_INFO)) {
      goto LABEL_27;
    }
    id v19 = v8;
    double v20 = (objc_class *)objc_opt_class();
    double v21 = NSStringFromClass(v20);
    if (objc_opt_respondsToSelector())
    {
      double v22 = [v19 performSelector:"accessibilityIdentifier"];
      double v23 = v22;
      if (v22 && ![v22 isEqualToString:v21])
      {
        id v24 = +[NSString stringWithFormat:@"%@<%p, %@>", v21, v19, v23];

        goto LABEL_18;
      }
    }
    id v24 = +[NSString stringWithFormat:@"%@<%p>", v21, v19];
LABEL_18:

    uint64_t v25 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543618;
    uint64_t v37 = v24;
    __int16 v38 = 2114;
    uint64_t v39 = v25;
    uint64_t v26 = "[%{public}@] No longer active after token acquisition callback for trip %{public}@";
    double v27 = v10;
    os_log_type_t v28 = OS_LOG_TYPE_INFO;
    uint32_t v29 = 22;
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v27, v28, v26, buf, v29);

    goto LABEL_27;
  }
LABEL_28:
}

void sub_100C42C28(uint64_t a1, double a2, double a3, double a4, double a5)
{
  int v10 = *(unsigned char **)(a1 + 32);
  if (v10[425])
  {
    int v11 = [v10 mapView];
    id v12 = [v11 userTrackingMode];

    if (v12) {
      return;
    }
    int v10 = *(unsigned char **)(a1 + 32);
  }
  id v13 = [v10 mapView];
  [v13 animateToVisibleMapRect:0 usingDefaultAnimationDuration:&stru_10131C1F8 completion:a2, a3, a4, a5];
}

id sub_100C42E40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) stepActionCoordinator];
  unsigned int v3 = [v2 isAuthorizedForPreciseLocation];

  id result = [*(id *)(a1 + 32) isUserTrackingViewVisible];
  if (v3 != result)
  {
    uint64_t v5 = v3 & (result ^ 1);
    id v6 = *(void **)(a1 + 32);
    return _[v6 setUserTrackingViewVisible:v5 animated:1];
  }
  return result;
}

id sub_100C43048(uint64_t a1)
{
  double v2 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  [*(id *)(a1 + 32) setAlpha:v2];
  unsigned int v3 = *(void **)(a1 + 32);

  return [v3 setHidden:0];
}

id sub_100C4309C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setHidden:*(unsigned char *)(a1 + 40) == 0];
}

void sub_100C43348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C43364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _locationExpirationTimerFired];
}

void sub_100C443E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C44404(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _backgroundArrivalTimerFired];
}

void sub_100C4452C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C44548(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _arrivalEndTimerFired];
}

void sub_100C44C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C44C3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _delayTimerFired];
}

id sub_100C4645C(void *a1, int a2)
{
  id v3 = a1;
  CGAffineTransform v4 = [v3 postTertiaryItems];
  uint64_t v5 = +[NSMutableArray arrayWithArray:v4];

  if (a2)
  {
    id v6 = [v3 expandedItems];
    [v5 addObjectsFromArray:v6];
  }
  double v7 = [v3 footerItems];
  [v5 addObjectsFromArray:v7];

  id v8 = [v5 copy];

  return v8;
}

void sub_100C46A70(id a1, GEOComposedStringArgument *a2)
{
  id v2 = [(GEOComposedStringArgument *)a2 distanceFormat];
  [v2 setFormatOptions:1];
}

void sub_100C47A64(uint64_t a1, void *a2, unint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  if ((unint64_t)[v5 count] <= a3)
  {
    int v11 = [[RoutePlanningRefinementBarButton alloc] initWithRefinement:v6];
    [(RoutePlanningRefinementBarButton *)v11 setTranslatesAutoresizingMaskIntoConstraints:0];
    [(RoutePlanningRefinementBarButton *)v11 addTarget:*(void *)(a1 + 40) action:"_buttonMenuTriggered:" forControlEvents:0x4000];
    [(RoutePlanningRefinementBarButton *)v11 addTarget:*(void *)(a1 + 40) action:"_touchUpInsideButton:" forControlEvents:64];
    [*(id *)(a1 + 32) addObject:v11];
    double v7 = [*(id *)(a1 + 40) containerView];
    [v7 addSubview:v11];
  }
  else
  {
    int v11 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a3];
    [(RoutePlanningRefinementBarButton *)v11 setRefinement:v6];
  }
  id v8 = (objc_class *)objc_opt_class();

  double v9 = NSStringFromClass(v8);
  int v10 = [v9 stringByReplacingOccurrencesOfString:@"Model" withString:@"Button"];
  [(RoutePlanningRefinementBarButton *)v11 setAccessibilityIdentifier:v10];
}

void sub_100C47BB0(id a1, RoutePlanningRefinementBarButton *a2, unint64_t a3, BOOL *a4)
{
}

id sub_100C47BB8(uint64_t a1)
{
  +[NSLayoutConstraint activateConstraints:*(void *)(*(void *)(a1 + 32) + 16)];
  id v2 = *(void **)(a1 + 32);

  return [v2 layoutBelowIfNeeded];
}

id sub_100C488AC()
{
  if (qword_101610BD8 != -1) {
    dispatch_once(&qword_101610BD8, &stru_10131C390);
  }
  v0 = (void *)qword_101610BD0;

  return v0;
}

id sub_100C49098(uint64_t a1)
{
  GEOMapRectForGEOTileKey();
  id v2 = *(void **)(*(void *)(a1 + 32) + 40);

  return [v2 setNeedsDisplayInMapRect:];
}

id sub_100C491A4(uint64_t a1)
{
  GEOMapRectForGEOTileKey();
  id v2 = *(void **)(*(void *)(a1 + 32) + 40);

  return [v2 setNeedsDisplayInMapRect:];
}

void sub_100C49340(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RouteTilePreloading");
  id v2 = (void *)qword_101610BD0;
  qword_101610BD0 = (uint64_t)v1;
}

id sub_100C493E4(id a1)
{
  return &off_1013AF5D8;
}

id sub_100C493F0(id a1)
{
  return &off_1013AABB8;
}

id sub_100C493FC(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100C49408(id a1)
{
  return &__kCFBooleanTrue;
}

id sub_100C497FC(id a1, GEORPEnrichmentImage *a2, unint64_t a3)
{
  id v3 = a2;
  CGAffineTransform v4 = [[UGCDownloadablePhoto alloc] initWithGEORPEnrichmentImage:v3];

  id v5 = [objc_alloc((Class)MKMapItemPhoto) initWithGeoMapItemPhoto:v4];

  return v5;
}

void sub_100C499B0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_100C499C8(uint64_t a1, void *a2)
{
}

void sub_100C499D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = &__NSArray0__struct;
}

void sub_100C4A004(id a1)
{
  if (!qword_101610BE8)
  {
    id v1 = objc_alloc_init((Class)NSLock);
    id v2 = (void *)qword_101610BE8;
    qword_101610BE8 = (uint64_t)v1;
  }
}

void sub_100C4A0DC(id a1)
{
  if (!qword_101610BE8)
  {
    id v1 = objc_alloc_init((Class)NSLock);
    id v2 = (void *)qword_101610BE8;
    qword_101610BE8 = (uint64_t)v1;
  }
}

id sub_100C4B29C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) rideBookingRideOption];
  +[RouteOverviewCellComposer configureCell:v2 forRideBookingRideOption:v3];

  CGAffineTransform v4 = [*(id *)(a1 + 40) rideBookingRideOptions];
  id v5 = [v4 count];

  if (v5 == (id)1)
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = 1;
  }
  else if ([*(id *)(a1 + 40) rideBookingRideOptionIndex])
  {
    id v8 = (char *)[*(id *)(a1 + 40) rideBookingRideOptionIndex];
    double v9 = [*(id *)(a1 + 40) rideBookingRideOptions];
    int v10 = (char *)[v9 count] - 1;

    id v6 = *(void **)(a1 + 32);
    if (v8 == v10) {
      uint64_t v7 = 4;
    }
    else {
      uint64_t v7 = 3;
    }
  }
  else
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = 2;
  }

  return [v6 setOverrideCellGrouping:v7];
}

id sub_100C4B388(uint64_t a1)
{
  return _[*(id *)(a1 + 32) configureWithRideBookingRideOptionStatus:*(void *)(*(void *)(a1 + 40) + 80) titleType:*(void *)(a1 + 48)];
}

void sub_100C4B530(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) rideBookingRideOption];
  +[RouteOverviewCellComposer configureCell:v1 forRideBookingRideOption:v2];
}

double sub_100C4B67C(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) traitCollection];
  id v2 = [v1 userInterfaceIdiom];

  if (v2 == (id)5) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  double top = NSDirectionalEdgeInsetsZero.top;
  +[RouteOverviewCell horizontalContentInset];
  +[RouteOverviewCell horizontalBackgroundInset];
  return top;
}

CFStringRef sub_100C4CC40(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2) {
    return @"Unspecified";
  }
  else {
    return *(&off_10131C5D0 + a1 - 1);
  }
}

void sub_100C4D57C(id a1)
{
  uint64_t v1 = objc_alloc_init(GuidanceModernBannerSignStyle);
  id v2 = (void *)qword_101610C00;
  qword_101610C00 = (uint64_t)v1;
}

id sub_100C4D8EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) resumeUpdates];
}

id sub_100C4D8F4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) _notifyDelegate];
  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
  return result;
}

id sub_100C4DFA4()
{
  if (qword_101610C18 != -1) {
    dispatch_once(&qword_101610C18, &stru_10131C670);
  }
  v0 = (void *)qword_101610C10;

  return v0;
}

void sub_100C4EB0C(uint64_t a1, void *a2)
{
  id v5 = a2;
  [*(id *)(a1 + 32) resumeUpdates];
  id v3 = v5;
  if (v5)
  {
    [*(id *)(a1 + 32) _selectCustomPOIAnnotation:v5 camera:*(void *)(a1 + 40) restoreRegion:*(unsigned __int8 *)(a1 + 56) updateIfNeeded:*(unsigned __int8 *)(a1 + 57) completion:*(void *)(a1 + 48)];
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (!v4) {
      goto LABEL_6;
    }
    (*(void (**)(uint64_t, void))(v4 + 16))(v4, 0);
  }
  id v3 = v5;
LABEL_6:
}

uint64_t sub_100C4ED08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    [*(id *)(a1 + 40) selectLabelMarker:v2 animated:1 updateIfNeeded:*(unsigned __int8 *)(a1 + 56)];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

id sub_100C4F560(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _applyMapSelectionDidChange];
}

void sub_100C4F90C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 11))
  {
    *(unsigned char *)(v1 + 11) = 0;
    id v12 = [[MapsAnalyticsHelper alloc] initWithLabelMarker:*(void *)(a1 + 40)];
    id v3 = (id)[(MapsAnalyticsHelper *)v12 tapAction];
    id v4 = [*(id *)(a1 + 32) currentMapViewTargetForAnalytics];
    id v5 = [(MapsAnalyticsHelper *)v12 actionDetails];
    id v6 = [(MapsAnalyticsHelper *)v12 eventValue];
    if (v3)
    {
      uint64_t v7 = [(MapsAnalyticsHelper *)v12 populateTapEvent];

      if (v7)
      {
        id v8 = [(MapsAnalyticsHelper *)v12 populateTapEvent];
        v8[2]();
      }
      double v9 = +[MKMapService sharedService];
      [v9 captureUserAction:v3 onTarget:v4 eventValue:v6 placeActionDetails:v5];

      int v10 = objc_alloc_init(SearchSessionAnalytics);
      [(SearchSessionAnalytics *)v10 setAction:v3];
      [(SearchSessionAnalytics *)v10 setTarget:v4];
      int v11 = +[SearchSessionAnalyticsAggregator sharedAggregator];
      [v11 collectSearchSessionAnalytics:v10];
    }
  }
}

void sub_100C4FB24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 11))
  {
    *(unsigned char *)(v1 + 11) = 0;
    [*(id *)(a1 + 32) currentMapViewTargetForAnalytics];
    id v12 = [*(id *)(a1 + 40) annotation];
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      uint64_t v3 = [v12 annotation];

      id v12 = (id)v3;
    }
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    id v5 = v12;
    if (isKindOfClass)
    {
      id v6 = v12;
      uint64_t v7 = [v6 mapItem];
      id v8 = [v7 _geoMapItem];
      double v9 = +[GEOPlaceActionDetails actionDetailsWithMapItem:v8 timestamp:0xFFFFFFFFLL resultIndex:0.0];

      unsigned int v10 = [v6 type];
      if (v10 <= 0xC && ((0x1239u >> v10) & 1) != 0)
      {
        uint64_t v11 = dword_100F73A20[v10];

        id v6 = +[MKMapService sharedService];
        [v6 captureUserAction:v11 onTarget:503 eventValue:0 placeActionDetails:v9];
      }

      id v5 = v12;
    }
  }
}

id sub_100C50340(id a1, VKTrafficFeature *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = [(VKTrafficFeature *)v4 infoCard];

    if (v5) {
      id v5 = v4;
    }
  }
  else
  {
    id v5 = 0;
  }

  return v5;
}

void sub_100C503D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "MapSelectionManager");
  uint64_t v2 = (void *)qword_101610C10;
  qword_101610C10 = (uint64_t)v1;
}

id sub_100C506E8()
{
  if (qword_101610C28 != -1) {
    dispatch_once(&qword_101610C28, &stru_10131C690);
  }
  v0 = (void *)qword_101610C20;

  return v0;
}

void sub_100C50A4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v6 = WeakRetained;
    uint64_t v3 = *(void *)(a1 + 40);
    id v4 = +[VLFLocationManager sharedLocationManager];
    id v5 = v4;
    if (v3 == 1) {
      [v4 addObserver:v6];
    }
    else {
      [v4 removeObserver:v6];
    }

    id WeakRetained = v6;
  }
}

void sub_100C50DCC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFVIOSessionFusedLocationMonitor");
  uint64_t v2 = (void *)qword_101610C20;
  qword_101610C20 = (uint64_t)v1;
}

void sub_100C50E9C(id a1, MapsDebugTableSection *a2)
{
  double v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Force Recommended Dishes Text UI" get:&stru_10131C6D0 set:&stru_10131C6F0];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Force fullscreen photo gallery" get:&stru_10131C710 set:&stru_10131C730];
  if (MapsFeature_IsEnabled_LagunaBeach())
  {
    id v4 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Force show native photo carousel add buttons" get:&stru_10131C750 set:&stru_10131C770];
    id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Force show native photo gallery" get:&stru_10131C790 set:&stru_10131C7B0];
  }
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Override photos attribution with Yelp adamID" get:&stru_10131C7D0 set:&stru_10131C7F0];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Should override photo slideshow count", MapKitConfig_Debug_AllowOverridingPhotoSlideshowCounts[0], MapKitConfig_Debug_AllowOverridingPhotoSlideshowCounts[1] geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Photo slideshow count override", @"12", 1, MapKitConfig_Debug_PhotoSlideshowOverrideCount[0], MapKitConfig_Debug_PhotoSlideshowOverrideCount[1] placeholderText inputType geoConfigKeyUInteger];
}

BOOL sub_100C50FF4(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C51004(id a1, BOOL a2)
{
}

BOOL sub_100C51018(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MKPlacecardForceFullScreenGallery"];

  return v2;
}

void sub_100C51060(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MKPlacecardForceFullScreenGallery"];
}

BOOL sub_100C510C0(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MKPlacecardForceNativePhotoCarousel"];

  return v2;
}

void sub_100C51108(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MKPlacecardForceNativePhotoCarousel"];
}

BOOL sub_100C51168(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MKPlacecardForceNativePhotoGallery"];

  return v2;
}

void sub_100C511B0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MKPlacecardForceNativePhotoGallery"];
}

BOOL sub_100C51210(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  unsigned __int8 v2 = [v1 BOOLForKey:@"MKPlacecardOverridePhotosAttributionYelpAdamID"];

  return v2;
}

void sub_100C51258(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setBool:v2 forKey:@"MKPlacecardOverridePhotosAttributionYelpAdamID"];
}

void sub_100C512B8(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Initial height", @"250", 2, MapKitConfig_HTMLRenderedWebModulesDefaultHeight[0], MapKitConfig_HTMLRenderedWebModulesDefaultHeight[1] placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Shows loading indicator", MapKitConfig_HTMLRenderedWebModuleShowsLoadingIndicator[0], MapKitConfig_HTMLRenderedWebModuleShowsLoadingIndicator[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Shows context menu overlay", MapKitConfig_HTMLRenderedWebModulesShowCTAOverlay[0], MapKitConfig_HTMLRenderedWebModulesShowCTAOverlay[1] geoConfigKey];
}

void sub_100C51364(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"MUID" placeholderText:@"enter muid" inputType:1 get:&stru_10131C850 set:&stru_10131C870];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"ResultProviderID" placeholderText:@"enter lsp" inputType:1 get:&stru_10131C890 set:&stru_10131C8B0];
}

NSString *__cdecl sub_100C51400(id a1)
{
  os_log_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 objectForKey:@"__internal__PlaceCardHardCodedMUID"];

  if (v2)
  {
    id v2 = [v1 stringForKey:@"__internal__PlaceCardHardCodedMUID"];
  }

  return (NSString *)v2;
}

void sub_100C5147C(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = +[NSUserDefaults standardUserDefaults];
  if (v4 && [(NSString *)v4 length]) {
    [v2 setObject:v4 forKey:@"__internal__PlaceCardHardCodedMUID"];
  }
  else {
    [v2 removeObjectForKey:@"__internal__PlaceCardHardCodedMUID"];
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 synchronize];
}

NSString *__cdecl sub_100C5152C(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();
  if (Integer)
  {
    id v2 = +[NSNumber numberWithInteger:Integer];
    id v3 = +[NSString stringWithFormat:@"%@", v2];
  }
  else
  {
    id v3 = 0;
  }

  return (NSString *)v3;
}

void sub_100C515C0(id a1, NSString *a2)
{
  id v2 = a2;
  if ([(NSString *)v2 length])
  {
    [(NSString *)v2 integerValue];
    GEOConfigSetInteger();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100C516D0()
{
  uint64_t v0 = objc_opt_new();
  os_log_t v1 = (void *)qword_101610C30;
  qword_101610C30 = v0;
}

id sub_100C519FC()
{
  if (qword_101610C48 != -1) {
    dispatch_once(&qword_101610C48, &stru_10131C8D0);
  }
  uint64_t v0 = (void *)qword_101610C40;

  return v0;
}

void sub_100C51AB0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CoreLocationAltitudeProvider");
  id v2 = (void *)qword_101610C40;
  qword_101610C40 = (uint64_t)v1;
}

id sub_100C521EC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  id v3 = [a2 row];

  return [v2 objectAtIndexedSubscript:v3];
}

void sub_100C5325C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100C53284(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    BOOL v7 = sub_1000BBB44(WeakRetained) != 5;
    id v8 = [objc_alloc((Class)_UICollectionViewListLayoutSectionConfiguration) initWithAppearanceStyle:2 * v7 layoutEnvironment:v4];
    double v9 = _UICollectionViewListLayoutSectionAutomaticDimension;
    [v8 setEstimatedRowHeight:_UICollectionViewListLayoutSectionAutomaticDimension];
    [v8 setRowHeight:v9];
    [v8 setSeparatorStyle:v7];
    unsigned int v10 = [v8 _separatorConfiguration];
    id v11 = [v10 copy];

    id v12 = [v6 theme];
    id v13 = [v12 dynamicHairlineColor];
    [v11 _setColor:v13];

    double v14 = 0.0;
    [v11 _setInsets:0.0, 56.0, 0.0, 0.0];
    [v8 _setSeparatorConfiguration:v11];
    uint64_t v15 = sub_1000BBB44(v6);
    if (v15 == 5) {
      double v16 = 0.0;
    }
    else {
      double v16 = 12.0;
    }
    if (v15 != 5) {
      double v14 = 16.0;
    }
    id v17 = [objc_alloc((Class)_UICollectionViewListLayoutSection) initWithConfiguration:v8 layoutEnvironment:v4];
    [v17 setContentInsets:0.0, v14, v16, v14];
  }
  else
  {
    id v17 = 0;
  }

  return v17;
}

uint64_t sub_100C58A2C()
{
  if (qword_101610C58 != -1) {
    dispatch_once(&qword_101610C58, &stru_10131C968);
  }
  return byte_101610C50;
}

void sub_100C58A70(id a1)
{
  uint64_t v1 = MGGetProductType();
  BOOL v3 = v1 == 2336512887 || v1 == 952317141;
  byte_101610C50 = v3;
}

void sub_100C58B00(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610C60;
  qword_101610C60 = v1;

  *(_OWORD *)(qword_101610C60 + 16) = xmmword_100F73AF0;
  uint64_t v3 = +[UIColor labelColor];
  id v4 = *(void **)(qword_101610C60 + 32);
  *(void *)(qword_101610C60 + 32) = v3;

  uint64_t v5 = +[UIColor labelColor];
  id v6 = *(void **)(qword_101610C60 + 40);
  *(void *)(qword_101610C60 + 40) = v5;

  objc_storeStrong((id *)(qword_101610C60 + 48), UIFontTextStyleSubheadline);
  uint64_t v7 = qword_101610C60;
  *(UIFontWeight *)(qword_101610C60 + 64) = UIFontWeightBold;
  *(void *)(v7 + 72) = 0x4000000000000000;
  uint64_t v8 = +[UIColor secondaryLabelColor];
  double v9 = *(void **)(qword_101610C60 + 80);
  *(void *)(qword_101610C60 + 80) = v8;

  uint64_t v10 = +[UIColor secondaryLabelColor];
  id v11 = *(void **)(qword_101610C60 + 88);
  *(void *)(qword_101610C60 + 88) = v10;

  objc_storeStrong((id *)(qword_101610C60 + 96), UIFontTextStyleSubheadline);
  uint64_t v12 = qword_101610C60;
  *(UIFontWeight *)(qword_101610C60 + 112) = UIFontWeightRegular;
  *(void *)(v12 + 120) = 0x4000000000000000;
  uint64_t v13 = +[UIColor secondaryLabelColor];
  double v14 = *(void **)(qword_101610C60 + 128);
  *(void *)(qword_101610C60 + 128) = v13;

  uint64_t v15 = +[UIColor secondaryLabelColor];
  double v16 = *(void **)(qword_101610C60 + 136);
  *(void *)(qword_101610C60 + 136) = v15;

  objc_storeStrong((id *)(qword_101610C60 + 144), UIFontTextStyleSubheadline);
  uint64_t v17 = qword_101610C60;
  *(UIFontWeight *)(qword_101610C60 + 160) = UIFontWeightRegular;
  id v18 = *(void **)(v17 + 192);
  *(void *)(v17 + 192) = 0;

  uint64_t v19 = qword_101610C60;
  __asm { FMOV            V0.2D, #15.0 }
  *(_OWORD *)(qword_101610C60 + 200) = _Q0;
  *(_OWORD *)(v19 + 216) = xmmword_100F73B00;
  *(_OWORD *)(v19 + 232) = xmmword_100F73B10;
  __asm { FMOV            V0.2D, #30.0 }
  *(_OWORD *)(v19 + 248) = _Q0;
  *(void *)(v19 + 264) = 0x403E000000000000;
  *(_OWORD *)(v19 + 272) = xmmword_100F73B20;
  uint64_t v26 = (void *)(v19 + 328);
  MKDefaultGuidanceManeuverMetrics();
  memcpy(v26, v31, 0x1F0uLL);
  double v27 = (void *)(qword_101610C60 + 824);
  MKDefaultJunctionManeuverMetrics();
  memcpy(v27, v31, 0x1F0uLL);
  *(unsigned char *)(qword_101610C60 + 11) = 1;
  os_log_type_t v28 = +[UIColor labelColor];
  uint64_t v29 = [v28 colorWithAlphaComponent:0.150000006];
  long long v30 = *(void **)(qword_101610C60 + 320);
  *(void *)(qword_101610C60 + 320) = v29;
}

void sub_100C58DA8(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610C70;
  qword_101610C70 = v1;

  *(void *)(qword_101610C70 + 16) = 0x4040000000000000;
  uint64_t v3 = +[UIColor labelColor];
  id v4 = *(void **)(qword_101610C70 + 32);
  *(void *)(qword_101610C70 + 32) = v3;

  uint64_t v5 = +[UIColor labelColor];
  uint64_t v6 = [v5 colorWithAlphaComponent:0.150000006];
  uint64_t v7 = *(void **)(qword_101610C70 + 40);
  *(void *)(qword_101610C70 + 40) = v6;

  objc_storeStrong((id *)(qword_101610C70 + 48), UIFontTextStyleTitle2);
  uint64_t v8 = qword_101610C70;
  *(UIFontWeight *)(qword_101610C70 + 64) = UIFontWeightBold;
  *(void *)(v8 + 72) = 0x4000000000000000;
  uint64_t v9 = +[UIColor secondaryLabelColor];
  uint64_t v10 = *(void **)(qword_101610C70 + 80);
  *(void *)(qword_101610C70 + 80) = v9;

  id v11 = +[UIColor secondaryLabelColor];
  uint64_t v12 = [v11 colorWithAlphaComponent:0.150000006];
  uint64_t v13 = *(void **)(qword_101610C70 + 88);
  *(void *)(qword_101610C70 + 88) = v12;

  objc_storeStrong((id *)(qword_101610C70 + 96), UIFontTextStyleTitle3);
  uint64_t v14 = qword_101610C70;
  *(UIFontWeight *)(qword_101610C70 + 112) = UIFontWeightRegular;
  *(void *)(v14 + 120) = 0x4018000000000000;
  uint64_t v15 = +[UIColor secondaryLabelColor];
  double v16 = *(void **)(qword_101610C70 + 128);
  *(void *)(qword_101610C70 + 128) = v15;

  uint64_t v17 = +[UIColor secondaryLabelColor];
  uint64_t v18 = [v17 colorWithAlphaComponent:0.150000006];
  uint64_t v19 = *(void **)(qword_101610C70 + 136);
  *(void *)(qword_101610C70 + 136) = v18;

  objc_storeStrong((id *)(qword_101610C70 + 144), UIFontTextStyleTitle3);
  *(UIFontWeight *)(qword_101610C70 + 160) = UIFontWeightRegular;
  uint64_t v20 = +[UIColor colorNamed:@"DirectionsTableViewCellBackgroundView"];
  double v21 = *(void **)(qword_101610C70 + 192);
  *(void *)(qword_101610C70 + 192) = v20;

  uint64_t v22 = qword_101610C70;
  *(_OWORD *)(qword_101610C70 + 200) = xmmword_100F73B30;
  *(_OWORD *)(v22 + 216) = xmmword_100F73B40;
  *(_OWORD *)(v22 + 232) = xmmword_100F73B50;
  *(_OWORD *)(v22 + 248) = xmmword_100F73B60;
  *(void *)(v22 + 264) = 0x4055800000000000;
  *(_OWORD *)(v22 + 272) = xmmword_100F73B70;
  double v23 = (void *)(v22 + 328);
  MKDefaultGuidanceManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v23, __src, 0x1F0uLL);
  id v24 = (void *)(qword_101610C70 + 824);
  MKDefaultJunctionManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v24, __src, 0x1F0uLL);
  uint64_t v25 = +[UIColor labelColor];
  uint64_t v26 = [v25 colorWithAlphaComponent:0.150000006];
  double v27 = *(void **)(qword_101610C70 + 320);
  *(void *)(qword_101610C70 + 320) = v26;
}

void sub_100C590E0(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610C80;
  qword_101610C80 = v1;

  *(void *)(qword_101610C80 + 16) = 0x4034000000000000;
  uint64_t v3 = +[UIColor whiteColor];
  id v4 = *(void **)(qword_101610C80 + 32);
  *(void *)(qword_101610C80 + 32) = v3;

  uint64_t v5 = +[UIColor whiteColor];
  uint64_t v6 = *(void **)(qword_101610C80 + 40);
  *(void *)(qword_101610C80 + 40) = v5;

  *(unsigned char *)(qword_101610C80 + 8) = 1;
  if (qword_101610C58 != -1) {
    dispatch_once(&qword_101610C58, &stru_10131C968);
  }
  double v7 = 24.0;
  if (!byte_101610C50) {
    double v7 = 30.0;
  }
  uint64_t v8 = qword_101610C80;
  *(double *)(qword_101610C80 + 56) = v7;
  *(UIFontWeight *)(v8 + 64) = UIFontWeightHeavy;
  *(void *)(v8 + 72) = 0x4000000000000000;
  uint64_t v9 = +[UIColor colorWithRed:0.921568632 green:0.921568632 blue:0.960784316 alpha:0.699999988];
  uint64_t v10 = *(void **)(qword_101610C80 + 80);
  *(void *)(qword_101610C80 + 80) = v9;

  objc_storeStrong((id *)(qword_101610C80 + 88), *(id *)(qword_101610C80 + 80));
  *(unsigned char *)(qword_101610C80 + 9) = 1;
  if (qword_101610C58 != -1) {
    dispatch_once(&qword_101610C58, &stru_10131C968);
  }
  double v11 = 24.0;
  if (!byte_101610C50) {
    double v11 = 30.0;
  }
  uint64_t v12 = qword_101610C80;
  *(double *)(qword_101610C80 + 104) = v11;
  *(UIFontWeight *)(v12 + 112) = UIFontWeightMedium;
  *(void *)(v12 + 120) = 0x4000000000000000;
  objc_storeStrong((id *)(v12 + 128), *(id *)(v12 + 80));
  objc_storeStrong((id *)(qword_101610C80 + 136), *(id *)(qword_101610C80 + 80));
  *(unsigned char *)(qword_101610C80 + 10) = 1;
  if (qword_101610C58 != -1) {
    dispatch_once(&qword_101610C58, &stru_10131C968);
  }
  double v13 = 24.0;
  if (!byte_101610C50) {
    double v13 = 30.0;
  }
  uint64_t v14 = qword_101610C80;
  *(double *)(qword_101610C80 + 152) = v13;
  *(UIFontWeight *)(v14 + 160) = UIFontWeightMedium;
  uint64_t v15 = +[UIColor whiteColor];
  uint64_t v16 = [v15 colorWithAlphaComponent:0.800000012];
  uint64_t v17 = *(void **)(qword_101610C80 + 168);
  *(void *)(qword_101610C80 + 168) = v16;

  uint64_t v18 = qword_101610C80;
  *(void *)(qword_101610C80 + 176) = 0x4034000000000000;
  *(UIFontWeight *)(v18 + 184) = UIFontWeightRegular;
  uint64_t v19 = *(void **)(v18 + 192);
  *(void *)(v18 + 192) = 0;

  uint64_t v20 = qword_101610C80;
  __asm { FMOV            V0.2D, #20.0 }
  *(_OWORD *)(qword_101610C80 + 200) = _Q0;
  *(_OWORD *)(v20 + 216) = xmmword_100F73B80;
  *(void *)(v20 + 232) = 0x4034000000000000;
  if (qword_101610C58 != -1) {
    dispatch_once(&qword_101610C58, &stru_10131C968);
  }
  double v26 = 40.0;
  if (byte_101610C50) {
    double v27 = 40.0;
  }
  else {
    double v27 = 50.0;
  }
  *(double *)(qword_101610C80 + 256) = v27;
  if (!byte_101610C50) {
    double v26 = 50.0;
  }
  uint64_t v28 = qword_101610C80;
  *(double *)(qword_101610C80 + 264) = v26;
  *(_OWORD *)(v28 + 272) = xmmword_100F73B90;
  uint64_t v29 = (void *)(v28 + 328);
  MKDefaultGuidanceManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v29, __src, 0x1F0uLL);
  long long v30 = (void *)(qword_101610C80 + 824);
  MKDefaultJunctionManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v30, __src, 0x1F0uLL);
  long long v31 = (void *)(qword_101610C80 + 1320);
  MKDefaultGuidanceManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v31, __src, 0x1F0uLL);
  id v32 = (void *)(qword_101610C80 + 1816);
  MKDefaultJunctionManeuverMetrics();
  MKGuidanceManeuverArrowMetricsApplyScaleForContent();
  memcpy(v32, __src, 0x1F0uLL);
  uint64_t v33 = +[UIColor whiteColor];
  CGRect v34 = *(void **)(qword_101610C80 + 288);
  *(void *)(qword_101610C80 + 288) = v33;

  uint64_t v35 = +[UIColor iOSJunctionColor];
  double v36 = *(void **)(qword_101610C80 + 296);
  *(void *)(qword_101610C80 + 296) = v35;

  uint64_t v37 = +[UIColor whiteColor];
  uint64_t v38 = [v37 colorWithAlphaComponent:0.150000006];
  uint64_t v39 = *(void **)(qword_101610C80 + 320);
  *(void *)(qword_101610C80 + 320) = v38;

  uint64_t v40 = qword_101610C80;
  *(void *)(qword_101610C80 + 304) = 0x4030000000000000;
  *(void *)(v40 + 312) = 5;
}

void sub_100C59574(id a1)
{
  id v3 = +[RouteStepListMetrics routePlanningMetrics];
  id v1 = [v3 copy];
  id v2 = (void *)qword_101610C90;
  qword_101610C90 = (uint64_t)v1;

  *(unsigned char *)(qword_101610C90 + 12) = 1;
}

void sub_100C5BA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C5BA88(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = WeakRetained[1];
  id v2 = v1;
  if (v1 && ([v1 hasMarkedText] & 1) == 0)
  {
    id v3 = WeakRetained[20];
    id v4 = [v2 text];
    [v3 updateTitle:v4];
  }
}

void sub_100C5E7A4(id a1, $464B15F94E0D705FD6D497CD7841E26A a2)
{
  id v2 = [AudioPreferences alloc];
  id v3 = +[NSUserDefaults standardUserDefaults];
  uint64_t v8 = [(AudioPreferences *)v2 initWithDefaults:v3];

  id v4 = +[MNNavigationService sharedService];
  id v5 = [v4 navigationTransportType];

  if ((id)[(AudioPreferences *)v8 guidanceLevelForTransportType:v5] == (id)2)
  {
    uint64_t v6 = +[MNNavigationService sharedService];
    [v6 stopCurrentGuidancePrompt];

    double v7 = +[MNNavigationService sharedService];
    [v7 repeatCurrentGuidance:&stru_10131CB18];
  }
  else
  {
    [(AudioPreferences *)v8 setGuidanceLevel:2 forTransportType:v5];
    [(AudioPreferences *)v8 synchronize];
  }
}

void sub_100C5E8A4(id a1, BOOL a2)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "repeatCurrentGuidance", v3, 2u);
  }
}

void sub_100C5F734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C5F750(uint64_t a1)
{
  id v2 = sub_10000AF10();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Automatically dismissing VoiceVolumeControl", v5, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = [WeakRetained voiceVolumeControlDelegate];
  [v4 dismissVoiceVolumeControlViewController:WeakRetained];
}

void sub_100C6079C(id a1)
{
  id v4 = +[GEOPlatform sharedPlatform];
  [v4 deviceScreenWidthInPixels];
  [v4 deviceScreenScale];
  id v1 = +[UIDevice currentDevice];
  if ([v1 userInterfaceIdiom] == (id)1)
  {

LABEL_4:
    MGGetSInt32Answer();
    goto LABEL_5;
  }
  id v2 = +[UIDevice currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 == (id)5) {
    goto LABEL_4;
  }
LABEL_5:
  dword_101610CA0 = GEOConfigGetUInteger();
}

void sub_100C616CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C616E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained _maps_carSceneDelegate];
  [v1 rebuildContextsForCurrentAppState];
}

uint64_t sub_100C62DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((a2 & 0xFFFFFFFFFFFFFFFBLL) != 0 && (unint64_t)(a2 - 2) <= 3) {
    uint64_t v3 = qword_100F73C10[a2 - 2];
  }
  else {
    uint64_t v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v2, v3);
}

void sub_100C63274(uint64_t a1, int a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100C632FC;
  v2[3] = &unk_10131CBA0;
  int v4 = a2;
  id v3 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

uint64_t sub_100C632FC(uint64_t a1)
{
  GEOFindOrCreateLog();
  uint64_t v2 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v3 = *(int *)(a1 + 40);
    if (v3 >= 7)
    {
      int v4 = +[NSString stringWithFormat:@"(unknown: %i)", *(int *)(a1 + 40)];
    }
    else
    {
      int v4 = off_10131CC48[v3];
    }
    *(_DWORD *)buf = 138543362;
    double v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "\tDelivering resolved transport type %{public}@", buf, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C63438(uint64_t a1)
{
  uint64_t v2 = MapsSuggestionsTransportModeForOriginAndDestination();
  uint64_t v3 = NSStringFromClass(*(Class *)(a1 + 72));
  MapsSuggestionsLogPredictedTransportMode();

  if (MapsSuggestionsGetTransportationModeDebugPanelSetting() && v2 != 4)
  {
    GEOFindOrCreateLog();
    int v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
    {
      if v2 < 7 && ((0x6Fu >> v2))
      {
        id v5 = off_10131CC10[(int)v2];
      }
      else
      {
        id v5 = +[NSString stringWithFormat:@"(unknown: %i)", v2];
      }
      *(_DWORD *)buf = 138543362;
      uint64_t v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "\tUsing MSg PTM %{public}@", buf, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  GEOFindOrCreateLog();
  uint64_t v6 = (id)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    if (v2 >= 7)
    {
      double v7 = +[NSString stringWithFormat:@"(unknown: %i)", v2];
    }
    else
    {
      double v7 = off_10131CC48[(int)v2];
    }
    *(_DWORD *)buf = 138543362;
    uint64_t v10 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "\tNot using MSg PTM %{public}@", buf, 0xCu);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C63730(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C63EE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

id sub_100C63F18()
{
  if (qword_101610CB8 != -1) {
    dispatch_once(&qword_101610CB8, &stru_10131CD50);
  }
  uint64_t v0 = (void *)qword_101610CB0;

  return v0;
}

void sub_100C63F6C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    double v7 = sub_100576A04();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = *(unsigned __int8 *)(*(void *)(a1 + 40) + 33);
      int v14 = 138412546;
      id v15 = v6;
      __int16 v16 = 1024;
      int v17 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Error while fetching the browse categories %@. The maps offline status: %d", (uint8_t *)&v14, 0x12u);
    }
  }
  else
  {
    uint64_t v9 = sub_100C63F18();
    uint64_t v10 = v9;
    os_signpost_id_t v11 = *(void *)(a1 + 56);
    if (v11 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
    {
      LOWORD(v14) = 0;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_INTERVAL_END, v11, "FetchingSearchHome", "", (uint8_t *)&v14, 2u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    double v13 = [WeakRetained cache];
    [v13 replaceCachedObject:v5 withKey:*(void *)(a1 + 32)];

    double v7 = objc_loadWeakRetained((id *)(a1 + 48));
    [v7 parseResponse:v5];
  }
}

void sub_100C64DE4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchHomeDataDownloader");
  uint64_t v2 = (void *)qword_101610CB0;
  qword_101610CB0 = (uint64_t)v1;
}

id sub_100C64E28(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E34(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E40(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E4C(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E58(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E64(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E70(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E7C(id a1)
{
  return &off_1013AAD50;
}

id sub_100C64E88(id a1)
{
  return &__kCFBooleanFalse;
}

id sub_100C65028()
{
  if (qword_101610CC8 != -1) {
    dispatch_once(&qword_101610CC8, &stru_10131D088);
  }
  uint64_t v0 = (void *)qword_101610CC0;

  return v0;
}

id sub_100C6602C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(*(void *)(a1 + 32) + 176) sectionForIndex:a2];
  uint64_t v7 = sub_1000BBB44(*(void **)(a1 + 32));
  if (v7 == 5) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = 2;
  }
  id v9 = [objc_alloc((Class)_UICollectionViewListLayoutSectionConfiguration) initWithAppearanceStyle:v8 layoutEnvironment:v5];
  double v10 = _UICollectionViewListLayoutSectionAutomaticDimension;
  [v9 setEstimatedRowHeight:_UICollectionViewListLayoutSectionAutomaticDimension];
  [v9 setRowHeight:v10];
  [v9 setSeparatorStyle:v7 != 5];
  [*(id *)(*(void *)(a1 + 32) + 176) footerHeightForSection:v6 collectionView:*(void *)(*(void *)(a1 + 32) + 128)];
  double v12 = v11;
  [*(id *)(*(void *)(a1 + 32) + 176) headerHeightForSection:v6 collectionView:*(void *)(*(void *)(a1 + 32) + 128)];
  [v9 setSectionHeaderHeight:];
  [v9 setSectionFooterHeight:v12];
  double v13 = [v9 _separatorConfiguration];
  id v14 = [v13 copy];

  id v15 = [*(id *)(a1 + 32) theme];
  __int16 v16 = [v15 dynamicHairlineColor];
  [v14 _setColor:v16];

  if (!a2) {
    [v14 _setInsets:0.0, 56.0, 0.0, 0.0];
  }
  [v9 _setSeparatorConfiguration:v14];
  id v17 = [objc_alloc((Class)_UICollectionViewListLayoutSection) initWithConfiguration:v9 layoutEnvironment:v5];
  uint64_t v18 = v17;
  if (v7 == 5) {
    double v19 = 0.0;
  }
  else {
    double v19 = 8.0;
  }
  double v20 = 16.0;
  if (v7 == 5) {
    double v20 = 0.0;
  }
  [v17 setContentInsets:0.0, v20, v19, v20];

  return v18;
}

void sub_100C66F3C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RAPHomeViewController");
  uint64_t v2 = (void *)qword_101610CC0;
  qword_101610CC0 = (uint64_t)v1;
}

void sub_100C672D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C672F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _addMapsSuggestionsSettingsToDebugVC:v3];
  }
  else
  {
    GEOFindOrCreateLog();
    id v6 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v7 = 136446722;
      uint64_t v8 = "MapsSuggestionsDebugController.m";
      __int16 v9 = 1026;
      int v10 = 51;
      __int16 v11 = 2082;
      double v12 = "-[MapsSuggestionsDebugController _setupDebugValuesController]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

void sub_100C67758(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Verbose logging" get:&stru_10131D178 set:&stru_10131D198];
  [v2 setSubtitle:@"Adds serialized suggestion entries to logs."];
}

void sub_100C677C0(id a1, BOOL a2)
{
}

void sub_100C677C8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"MSg Transportation Mode Prediction" get:&stru_10131D1D8 set:&stru_10131D1F8];
  [v2 setSubtitle:@"Toggle MSg-based transportation mode prediction"];
}

void sub_100C67830(id a1, BOOL a2)
{
}

void sub_100C67838(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C678EC;
  v3[3] = &unk_1012E7D28;
  void v3[4] = *(void *)(a1 + 32);
  id v2 = [a2 addSwitchRowWithTitle:@"Enable Visualizer" get:&stru_10131D218 set:v3];
  [v2 setSubtitle:@"Toggle displaying a real time view of the Destination Graph"];
}

BOOL sub_100C678DC(id a1)
{
  return GEOConfigGetBOOL();
}

uint64_t sub_100C678EC(uint64_t a1, int a2)
{
  id v3 = [*(id *)(*(void *)(a1 + 32) + 16) view];
  [v3 setHidden:a2 ^ 1u];

  return GEOConfigSetBOOL();
}

void sub_100C68540(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C685E4;
  v6[3] = &unk_10131D240;
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v4;
  id v5 = v4;
  +[RAPPrivacy showPrivacyScreenWithAppearance:1 completion:v6];
}

void sub_100C685E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
  }
  [*(id *)(a1 + 32) rapCompleted:a2 privacyShown:a3 analyticsEvent:v8];
}

uint64_t sub_100C68664(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100C6867C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_100C68A54(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100C68ACC(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100C68B38(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100C6941C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock(v1);
  _Unwind_Resume(a1);
}

void sub_100C69464(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned char *)a2 & 0x7F) == GEOVoltaireTileProvider)
  {
    unint64_t v5 = *(void *)(a1 + 40);
    int BOOL = GEOConfigGetBOOL();
    unint64_t v7 = *(void *)(a2 + 1);
    if (BOOL)
    {
      if (((v7 >> 40) & 0x3F) > v5) {
        return;
      }
      id v8 = *(void **)(v2 + 8);
      __int16 v9 = +[NSNumber numberWithUnsignedInt:((*(unsigned int *)(a2 + 9) | ((unint64_t)(*(unsigned __int16 *)(a2 + 13) | (*(unsigned __int8 *)(a2 + 15) << 16)) << 32)) >> 34) & 0x3FFF];
      int v10 = [v8 objectForKeyedSubscript:v9];

      long long v29 = 0u;
      long long v30 = 0u;
      long long v27 = 0u;
      long long v28 = 0u;
      id v11 = v10;
      id v12 = [v11 countByEnumeratingWithState:&v27 objects:v31 count:16];
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = *(void *)v28;
        while (2)
        {
          for (uint64_t i = 0; i != v13; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v28 != v14) {
              objc_enumerationMutation(v11);
            }
            id v16 = [*(id *)(*((void *)&v27 + 1) + 8 * i) unsignedIntegerValue:v27];
            if ((unint64_t)v16 <= v5 && (unint64_t)v16 > ((*(void *)(a2 + 1) >> 40) & 0x3FuLL))
            {

              return;
            }
          }
          id v13 = [v11 countByEnumeratingWithState:&v27 objects:v31 count:16];
          if (v13) {
            continue;
          }
          break;
        }
      }
    }
    else if ((v7 & 0x3F0000000000) != 0xF0000000000)
    {
      return;
    }
    GEOMapRectForGEOTileKey();
    double x = v33.origin.x;
    double y = v33.origin.y;
    double width = v33.size.width;
    double height = v33.size.height;
    if (MKMapRectIntersectsRect(v33, *(MKMapRect *)(a1 + 48)))
    {
      v34.origin.double x = x;
      v34.origin.double y = y;
      v34.size.double width = width;
      v34.size.double height = height;
      CGContextFillRect(*(CGContextRef *)(a1 + 80), v34);
      uint64_t v22 = *(CGContext **)(a1 + 80);
      double v23 = x;
      double v24 = y;
      double v25 = width;
      double v26 = height;
      CGContextStrokeRect(v22, *(CGRect *)&v23);
    }
  }
}

void sub_100C697E0(uint64_t a1, int a2, double a3, double a4)
{
  unint64_t v7 = *(void **)(a1 + 32);
  double v8 = *(double *)(a1 + 80);
  __int16 v9 = *(CGContext **)(a1 + 88);
  id v10 = *(id *)(a1 + 40);
  if (a4 > 0.0 && v7 != 0)
  {
    id v34 = v10;
    if (a2 == 2)
    {
      uint64_t v12 = +[UIColor systemRedColor];
    }
    else if (a2 == 1)
    {
      uint64_t v12 = +[UIColor systemGreenColor];
    }
    else
    {
      if (a2) {
        goto LABEL_19;
      }
      uint64_t v12 = +[UIColor systemGrayColor];
    }
    id v13 = (void *)v12;
    id v10 = v34;
    if (v13)
    {
      double v33 = v8;
      Mutable = CGPathCreateMutable();
      id v15 = [v7 overlay];
      [v15 boundingMapRect];
      double v17 = v16;
      double v19 = v18;

      id v20 = [v34 coordinateAtOffset:a3];
      LODWORD(v15) = v20;
      [v34 pointAtRouteCoordinate:v20];
      MKMapPoint v21 = MKMapPointForCoordinate(v36);
      CGPathMoveToPoint(Mutable, 0, v21.x - v17, v21.y - v19);
      unint64_t v22 = (v15 + 1);
      if (v22 < [v34 pointCount] - 1)
      {
        double v23 = 0.0;
        while (1)
        {
          [v34 pointAt:v22];
          CLLocationDegrees v25 = v24;
          CLLocationDegrees v27 = v26;
          GEOCalculateDistance();
          double v23 = v23 + v28;
          if (v23 >= a4) {
            break;
          }
          v37.CLLocationDegrees latitude = v25;
          v37.CLLocationDegrees longitude = v27;
          MKMapPoint v29 = MKMapPointForCoordinate(v37);
          CGPathAddLineToPoint(Mutable, 0, v29.x - v17, v29.y - v19);
          if (++v22 >= [v34 pointCount] - 1) {
            goto LABEL_18;
          }
        }
        [v34 pointAtRouteCoordinate:[v34 coordinateAtOffset:a3 + a4]];
        MKMapPoint v30 = MKMapPointForCoordinate(v38);
        CGPathMoveToPoint(Mutable, 0, v30.x - v17, v30.y - v19);
      }
LABEL_18:
      CGContextSaveGState(v9);
      CGContextAddPath(v9, Mutable);
      [v7 contentScaleFactor];
      CGContextSetLineWidth(v9, 8.0 / v33 * v31);
      CGContextSetLineJoin(v9, kCGLineJoinRound);
      CGContextSetLineCap(v9, kCGLineCapButt);
      id v32 = [v13 colorWithAlphaComponent:0.600000024];
      CGContextSetStrokeColorWithColor(v9, (CGColorRef)[v32 CGColor]);

      CGContextStrokePath(v9);
      CGContextRestoreGState(v9);
      CGPathRelease(Mutable);

      id v10 = v34;
    }
  }
LABEL_19:
}

void sub_100C6C038(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[CRRecentContactsLibrary messageSourcesBundleIdentifiers];
  CLLocationDegrees v25 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v26 objects:v34 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v27;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        id v11 = [v10 originalSource];
        if ([v11 length] && objc_msgSend(v4, "indexOfObject:", v11) != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          uint64_t v12 = +[AutocompleteMatchInfo matchInfoWithType:4];
          [*(id *)(*(void *)(a1 + 32) + 24) setMatchInfo:v12 forObject:v10];
          id v13 = [[AutocompleteItem alloc] initWithLocalCompletion:v10 sourceType:5 sourceSubtype:5 matchInfo:v12];
          [v25 addObject:v13];
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v26 objects:v34 count:16];
    }
    while (v7);
  }

  uint64_t v14 = a1;
  unsigned __int8 v15 = [*(id *)(a1 + 32) isCancelled];
  double v16 = sub_100109E50();
  BOOL v17 = os_log_type_enabled(v16, OS_LOG_TYPE_INFO);
  if (v15)
  {
    if (v17)
    {
      uint64_t v18 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v31 = v18;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "SearchRecentsOperation - %@ is cancelled", buf, 0xCu);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 40));
    id v20 = WeakRetained;
    uint64_t v21 = *(void *)(a1 + 32);
    unint64_t v22 = &__NSArray0__struct;
  }
  else
  {
    if (v17)
    {
      uint64_t v23 = *(void *)(a1 + 32);
      id v24 = [v25 count];
      *(_DWORD *)buf = 138412546;
      uint64_t v31 = v23;
      __int16 v32 = 2048;
      id v33 = v24;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "SearchRecentsOperation - %@ collected %lu results", buf, 0x16u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(v14 + 32) + 40));
    id v20 = WeakRetained;
    uint64_t v21 = *(void *)(v14 + 32);
    unint64_t v22 = v25;
  }
  [WeakRetained searchRecentsOperation:v21 didMatchResults:v22];

  [*(id *)(v14 + 32) willChangeValueForKey:@"isExecuting"];
  [*(id *)(v14 + 32) willChangeValueForKey:@"isFinished"];
  os_unfair_lock_lock((os_unfair_lock_t)(*(void *)(v14 + 32) + 32));
  if (([*(id *)(v14 + 32) isCancelled] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(v14 + 32) + 16) = 0;
    *(unsigned char *)(*(void *)(v14 + 32) + 17) = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v14 + 32) + 32));
  [*(id *)(v14 + 32) didChangeValueForKey:@"isExecuting"];
  [*(id *)(v14 + 32) didChangeValueForKey:@"isFinished"];
}

id sub_100C6D504()
{
  if (qword_101610CD8 != -1) {
    dispatch_once(&qword_101610CD8, &stru_10131D2D8);
  }
  uint64_t v0 = (void *)qword_101610CD0;

  return v0;
}

void sub_100C6DC44(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFSessionTransitSteppingMonitor");
  uint64_t v2 = (void *)qword_101610CD0;
  qword_101610CD0 = (uint64_t)v1;
}

id sub_100C6E7B8(void *a1)
{
  id v1 = a1;
  id v2 = [v1 sourceType];
  id v3 = [v1 suggestionType];
  id v4 = [v1 serverEntryType];

  if (v2 == (id)1)
  {
    if (v4 >= 4)
    {
      id v5 = +[NSString stringWithFormat:@"(unknown: %i)", v4];
    }
    else
    {
      id v5 = *(&off_10131D370 + (int)v4);
    }
    +[NSString stringWithFormat:@"ServerEntryType=%@", v5];
  }
  else
  {
    if (v2) {
      goto LABEL_12;
    }
    if (v3 >= 0xF)
    {
      id v5 = +[NSString stringWithFormat:@"(unknown: %i)", v3];
    }
    else
    {
      id v5 = *(&off_10131D2F8 + (int)v3);
    }
    +[NSString stringWithFormat:@"SuggestionType=%@", v5];
  }
  id v1 = (id)objc_claimAutoreleasedReturnValue();

LABEL_12:

  return v1;
}

NSString *sub_100C6E8D8(void *a1)
{
  id v1 = (char *)[a1 featureType];
  if ((unint64_t)(v1 - 1) > 0x28) {
    CFStringRef v2 = @"Unknown";
  }
  else {
    CFStringRef v2 = *(&off_10131D390 + (void)(v1 - 1));
  }
  return +[NSString stringWithFormat:@"Feature=%@", v2];
}

void sub_100C6F258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100C6F280(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v8 = WeakRetained;
  if (WeakRetained)
  {
    __int16 v9 = [WeakRetained offlineMapsDataSource];
    id v10 = [v9 sectionForSectionIndex:a2];

    if ([v10 sectionType]
      || ([v8 collectionView],
          id v11 = objc_claimAutoreleasedReturnValue(),
          id v12 = [v11 numberOfSections],
          v11,
          v12 != (id)1))
    {
      id v13 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:2];
      double v19 = +[UIColor clearColor];
      [v13 setBackgroundColor:v19];

      id v20 = [v10 headerText];
      [v13 setHeaderMode:[v20 length] != 0];

      [v13 setFooterMode:1];
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_100C6F600;
      v28[3] = &unk_10131A7C8;
      objc_copyWeak(&v29, v6);
      [v13 setTrailingSwipeActionsConfigurationProvider:v28];
      uint64_t v18 = +[NSCollectionLayoutSection sectionWithListConfiguration:v13 layoutEnvironment:v5];
      if (a2 < 1)
      {
        double v23 = 0.0;
      }
      else
      {
        uint64_t v21 = [v10 headerText];
        BOOL v22 = [v21 length] == 0;

        if (v22) {
          double v23 = 16.0;
        }
        else {
          double v23 = 0.0;
        }
      }
      id v24 = [v10 sectionType];
      double v25 = 32.0;
      double v26 = 16.0;
      if (v24) {
        double v25 = v23;
      }
      else {
        double v26 = 32.0;
      }
      [v18 setContentInsets:v25, v26, 0.0, v26];
      objc_destroyWeak(&v29);
    }
    else
    {
      id v13 = +[NSCollectionLayoutSize layoutSizeWithFractionalWidth:1.0 fractionalHeight:1.0];
      uint64_t v14 = +[NSCollectionLayoutItem itemWithLayoutSize:v13];
      [v14 setContentInsets:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];
      unsigned __int8 v15 = +[NSCollectionLayoutSize layoutSizeWithFractionalWidth:1.0 fractionalHeight:1.0];
      MKMapPoint v30 = v14;
      double v16 = +[NSArray arrayWithObjects:&v30 count:1];
      BOOL v17 = +[NSCollectionLayoutGroup verticalGroupWithLayoutSize:v15 subitems:v16];

      uint64_t v18 = +[NSCollectionLayoutSection sectionWithGroup:v17];
      [v18 setContentInsets:0.0, 32.0, 0.0, 32.0];
    }
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

void sub_100C6F5DC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100C6F600(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained offlineMapsDataSource];
    id v7 = [v6 swipeActionsConfigurationForIndexPath:v3];
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

id sub_100C6FC5C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) hairLineAlpha];
}

id sub_100C6FC70(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) setHairLineAlpha:];
}

void sub_100C710B0(uint64_t a1)
{
  CFStringRef v2 = +[CarDisplayController sharedInstance];
  id v3 = [v2 chromeViewController];
  id v4 = [v3 currentTraits];

  id v5 = +[MKMapService sharedService];
  id v6 = [v5 ticketForSearchFieldOfflinePlaceholderWithTraits:v4];

  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C711C4;
  v7[3] = &unk_1012EA3A8;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  [v6 submitWithHandler:v7 networkActivity:0];
  objc_destroyWeak(&v8);
}

void sub_100C711B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C711C4(uint64_t a1, unsigned __int8 a2, void *a3)
{
  id v9 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = (v9 == 0) & a2;
    *((unsigned char *)WeakRetained + 16) = v6;
    id v7 = objc_loadWeakRetained((id *)WeakRetained + 3);
    [v7 updateCardViewTitle:v6];

    id v8 = [objc_alloc((Class)NSIndexSet) initWithIndex:0];
    [*((id *)WeakRetained + 5) reloadSections:v8 withRowAnimation:100];
  }
}

id sub_100C713A0(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  if (v6)
  {
    id v22 = a3;
    id v7 = +[NSBundle mainBundle];
    id v8 = [v7 localizedStringForKey:@"No (Pair) [CarPlay]" value:@"localized string not found" table:0];
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_100C71694;
    v24[3] = &unk_1012E5D58;
    id v25 = v5;
    id v9 = v6;
    id v26 = v9;
    id v10 = +[MapsInterruptionAction actionWithTitle:v8 cancels:1 handler:v24];

    id v11 = +[NSBundle mainBundle];
    uint64_t v21 = [v11 localizedStringForKey:@"VG disambiguation title [CarPlay]" value:@"localized string not found" table:0];

    id v12 = +[NSBundle mainBundle];
    id v13 = [v12 localizedStringForKey:@"VG disambiguation subtitle [CarPlay]" value:@"localized string not found" table:0];

    v28[0] = @"kMapsInterruptionTitle";
    id v23 = v5;
    uint64_t v14 = [v9 displayName];
    unsigned __int8 v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v21, v14);
    v29[0] = v15;
    v28[1] = @"kMapsInterruptionMessage";
    double v16 = [v9 displayName];
    BOOL v17 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v13, v16);
    v29[1] = v17;
    v28[2] = @"kMapsInterruptionActions";
    v27[0] = v10;
    v27[1] = v22;
    uint64_t v18 = +[NSArray arrayWithObjects:v27 count:2];
    v29[2] = v18;
    double v19 = +[NSDictionary dictionaryWithObjects:v29 forKeys:v28 count:3];

    id v5 = v23;
  }
  else
  {
    double v19 = 0;
  }

  return v19;
}

void sub_100C71694(uint64_t a1)
{
  CFStringRef v2 = sub_100576D94();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User selected not to pair pair accessory (%@) to vehicle: %@", (uint8_t *)&v5, 0x16u);
  }
}

id sub_100C71748(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (a2)
  {
    uint64_t v4 = +[NSBundle mainBundle];
    int v5 = [v4 localizedStringForKey:@"Dismiss [CarPlay, Disambiguation]", @"localized string not found", 0 value table];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_100C71A28;
    v20[3] = &unk_1012E5D08;
    id v6 = v3;
    id v21 = v6;
    __int16 v7 = +[MapsInterruptionAction actionWithTitle:v5 cancels:1 handler:v20];

    uint64_t v8 = +[NSBundle mainBundle];
    id v9 = [v8 localizedStringForKey:@"Continue [CarPlay, Disambiguation]", @"localized string not found", 0 value table];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100C71AD0;
    v18[3] = &unk_1012E5D08;
    id v19 = v6;
    id v10 = +[MapsInterruptionAction actionWithTitle:v9 cancels:0 handler:v18];

    v23[0] = @"kMapsInterruptionTitle";
    id v11 = +[NSBundle mainBundle];
    id v12 = [v11 localizedStringForKey:@"Use CarPlay with Your Vehicles in Maps title [CarPlay]" value:@"localized string not found" table:0];
    v24[0] = v12;
    v23[1] = @"kMapsInterruptionMessage";
    id v13 = +[NSBundle mainBundle];
    uint64_t v14 = [v13 localizedStringForKey:@"Use CarPlay with Your Vehicles in Maps subtitle [CarPlay]" value:@"localized string not found" table:0];
    v24[1] = v14;
    v23[2] = @"kMapsInterruptionActions";
    v22[0] = v7;
    v22[1] = v10;
    unsigned __int8 v15 = +[NSArray arrayWithObjects:v22 count:2];
    v24[2] = v15;
    double v16 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:3];
  }
  else
  {
    double v16 = 0;
  }

  return v16;
}

void sub_100C71A28(uint64_t a1)
{
  CFStringRef v2 = sub_100576D94();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User selected not to find a paired vehicle for accessory (%@)", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100C71AD0(uint64_t a1)
{
  CFStringRef v2 = sub_100576D94();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138412290;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User selected find a paired vehicle for accessory: %@", (uint8_t *)&v4, 0xCu);
  }
}

id sub_100C723A8(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = [a2 iapIdentifier];
  __int16 v7 = [*(id *)(a1 + 32) identifier];
  id v8 = [v6 isEqualToString:v7];

  if (v8) {
    *a4 = 1;
  }
  return v8;
}

void sub_100C72858(uint64_t a1, void *a2)
{
  id v3 = [a2 authorizationStatus];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C728F4;
  v4[3] = &unk_1012F01B8;
  id v5 = *(id *)(a1 + 32);
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

uint64_t sub_100C728F4(uint64_t a1)
{
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40) != 2);
}

id sub_100C74038(uint64_t a1)
{
  return _[*(id *)(a1 + 32) continueSelected];
}

uint64_t sub_100C74040(uint64_t a1)
{
  +[GEOAPPortal captureUserAction:target:value:](GEOAPPortal, "captureUserAction:target:value:", 2122, [*(id *)(a1 + 32) _analyticsTarget], 0);
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 8);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

id sub_100C74A18(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateHorizontalLayoutIfNeeded];
}

void sub_100C74D74(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100C74DF8;
  v2[3] = &unk_1012F8940;
  char v3 = a2;
  char v4 = *(unsigned char *)(a1 + 40);
  void v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

id sub_100C74DF8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v2 = 270;
  }
  else {
    uint64_t v2 = 77;
  }
  id result = +[GEOAPPortal captureUserAction:v2 target:51 value:0];
  if (!*(unsigned char *)(a1 + 41))
  {
    id result = *(id *)(*(void *)(a1 + 32) + 8);
    if (result)
    {
      char v4 = (uint64_t (*)(void))*((void *)result + 2);
      return (id)v4();
    }
  }
  return result;
}

uint64_t sub_100C74E80(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 8);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100C777E8(uint64_t a1)
{
  id v4 = objc_alloc_init((Class)UICollectionViewFlowLayoutInvalidationContext);
  [v4 setInvalidateFlowLayoutAttributes:0];
  uint64_t v2 = [*(id *)(a1 + 32) reservationDetailCell];
  char v3 = [v2 timeSelectionCollectionViewLayout];
  [v3 invalidateLayoutWithContext:v4];
}

uint64_t sub_100C7AC48(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  char v3 = [a2 offerTitleText];
  uint64_t v4 = [v2 containsObject:v3] ^ 1;

  return v4;
}

void sub_100C7AC90(uint64_t a1, uint64_t a2)
{
  +[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", a2 + 1, [*(id *)(a1 + 32) offersSection]);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  char v3 = [*(id *)(a1 + 32) offersRowHeight];
  uint64_t v4 = [*(id *)(a1 + 32) heightCache];
  [v4 setObject:v3 forKeyedSubscript:v5];

  [*(id *)(a1 + 40) addObject:v5];
}

void sub_100C7CCB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 overviewCell:*(void *)(a1 + 32) incidentUpvoted:0];
}

void sub_100C7CD10(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 overviewCell:*(void *)(a1 + 32) incidentUpvoted:1];
}

void sub_100C7D6D0(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610CF8;
  qword_101610CF8 = v1;

  uint64_t v3 = qword_101610CF8;
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)(qword_101610CF8 + 8) = _Q0;
  *(_OWORD *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = xmmword_100F73CF0;
  *(void *)(v3 + 40) = 0x4038000000000000;
  uint64_t v9 = +[UIColor labelColor];
  id v10 = *(void **)(qword_101610CF8 + 64);
  *(void *)(qword_101610CF8 + 64) = v9;

  uint64_t v11 = qword_101610CF8;
  *(_OWORD *)(qword_101610CF8 + 72) = xmmword_100F73D00;
  *(void *)(v11 + 88) = 0x403E000000000000;
  *(void *)(v11 + 48) = UIFontTextStyleTitle3;
  *(UIFontWeight *)(v11 + 56) = UIFontWeightRegular;
  uint64_t v12 = +[UIColor secondaryLabelColor];
  id v13 = *(void **)(qword_101610CF8 + 96);
  *(void *)(qword_101610CF8 + 96) = v12;

  uint64_t v14 = qword_101610CF8;
  *(void *)(qword_101610CF8 + 104) = 0x402C000000000000;
  *(void *)(v14 + 112) = UIFontTextStyleTitle1;
  *(UIFontWeight *)(v14 + 120) = UIFontWeightBold;
  uint64_t v15 = +[UIColor labelColor];
  double v16 = *(void **)(qword_101610CF8 + 128);
  *(void *)(qword_101610CF8 + 128) = v15;

  uint64_t v17 = qword_101610CF8;
  *(int64x2_t *)(qword_101610CF8 + 248) = vdupq_n_s64(0x4042000000000000uLL);
  *(_OWORD *)(v17 + 136) = xmmword_100F73D10;
  *(void *)(v17 + 152) = UIFontTextStyleTitle2;
  *(UIFontWeight *)(v17 + 160) = UIFontWeightBold;
  *(void *)(v17 + 168) = UIFontTextStyleTitle3;
  *(UIFontWeight *)(v17 + 176) = UIFontWeightBold;
  *(void *)(v17 + 184) = 2;
  uint64_t v18 = +[UIColor systemWhiteColor];
  id v19 = *(void **)(qword_101610CF8 + 192);
  *(void *)(qword_101610CF8 + 192) = v18;

  uint64_t v20 = +[UIColor systemRedColor];
  id v21 = *(void **)(qword_101610CF8 + 200);
  *(void *)(qword_101610CF8 + 200) = v20;

  uint64_t v22 = +[UIColor systemBlueColor];
  id v23 = *(void **)(qword_101610CF8 + 208);
  *(void *)(qword_101610CF8 + 208) = v22;

  uint64_t v24 = +[UIColor tertiarySystemFillColor];
  id v25 = *(void **)(qword_101610CF8 + 216);
  *(void *)(qword_101610CF8 + 216) = v24;

  uint64_t v26 = qword_101610CF8;
  *(_OWORD *)(qword_101610CF8 + 2++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = xmmword_100F73D20;
  *(void *)(v26 + 240) = 0x4010000000000000;
}

void sub_100C7DB74(uint64_t a1)
{
  id v2 = [objc_alloc((Class)CNMonogrammer) initWithStyle:0 diameter:*(double *)(a1 + 48)];
  uint64_t v3 = [v2 monogramForContact:*(void *)(a1 + 32)];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C7DC50;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 40);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100C7DC50(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100C7DD20(uint64_t a1)
{
  id v2 = [objc_alloc((Class)CNMonogrammer) initWithStyle:0 diameter:*(double *)(a1 + 40)];
  uint64_t v3 = [v2 silhouetteMonogram];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C7DDF8;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100C7DDF8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100C7DEC8(uint64_t a1)
{
  id v2 = [objc_alloc((Class)CNMonogrammer) initWithStyle:0 diameter:*(double *)(a1 + 40)];
  uint64_t v3 = [v2 questionMarkMonogram];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C7DFA0;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100C7DFA0(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100C80850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C80868(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = *(void **)(a1 + 32);
  id v8 = a2;
  id v9 = [v7 objectAtIndexedSubscript:a3];
  LOBYTE(a3) = [v8 isEqualToSearchResult:forPurpose:];

  if ((a3 & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
}

void sub_100C80E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C80E58(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000B944C();
  id WeakRetained = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_ERROR, "Error saving URL collection: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      LOWORD(v6) = 0;
      _os_log_impl((void *)&_mh_execute_header, WeakRetained, OS_LOG_TYPE_INFO, "Completed creation of URL collection. Reloading collection and data source.", (uint8_t *)&v6, 2u);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _transformURLCollectionInMSPCollection];
  }
}

void sub_100C81A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,id location)
{
  objc_destroyWeak(v61);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100C81A80(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 136) setEditing:1];
  id v2 = *(void **)(*(void *)(a1 + 32) + 152);

  return [v2 setEditing:1];
}

void sub_100C81ADC(id a1, NSError *a2)
{
  id v2 = a2;
  id v3 = sub_1000B944C();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v2;
      id v5 = "Error updating collection: %@";
      int v6 = v4;
      os_log_type_t v7 = OS_LOG_TYPE_ERROR;
      uint32_t v8 = 12;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v9, v8);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v9) = 0;
    id v5 = "Updated collection successfully";
    int v6 = v4;
    os_log_type_t v7 = OS_LOG_TYPE_INFO;
    uint32_t v8 = 2;
    goto LABEL_6;
  }
}

id sub_100C81BC0(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 136) setEditing:0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 152);

  return [v2 setEditing:0];
}

void sub_100C81C1C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained delegate];
    [v5 viewController:*(void *)(a1 + 32) presentCollectionPickerContaineeViewController:v6];
  }
}

void sub_100C81C9C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained presentViewController:v5 animated:1 completion:0];
  }
}

void sub_100C81D08(uint64_t a1, int a2)
{
  if (a2)
  {
    id v2 = *(void **)(a1 + 32);
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_100C81D90;
    v3[3] = &unk_1012EB010;
    id v4 = v2;
    [v4 applyToCollection:0 completion:v3];
  }
}

void sub_100C81D90(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      uint64_t v7 = v5;
      __int16 v8 = 2112;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error during deletion session %@ %@", (uint8_t *)&v6, 0x16u);
    }
  }
}

void sub_100C81E5C(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = [[PersonalCollectionShareItemSource alloc] initWithCollectionHandlerInfo:*(void *)(a1 + 40)];
    if (v2)
    {
      double v16 = v2;
      id v3 = [[MapsActivityViewController alloc] initWithShareItem:v2];
      uint64_t v4 = *(void *)(a1 + 48);
      uint64_t v5 = [(MapsActivityViewController *)v3 popoverPresentationController];
      [v5 setSourceView:v4];

      [*(id *)(a1 + 48) bounds];
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      uint64_t v14 = [(MapsActivityViewController *)v3 popoverPresentationController];
      [v14 setSourceRect:v7, v9, v11, v13];

      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
      [WeakRetained presentViewController:v3 animated:1 completion:0];

      id v2 = v16;
    }
  }
}

uint64_t sub_100C81F88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C82308(id *a1, void *a2)
{
  id v3 = [a2 firstObject];
  if (v3)
  {
    uint64_t v4 = +[MKMapService sharedService];
    uint64_t v5 = [a1[4] delegate];
    id v6 = [v5 newTraits];
    double v7 = [v4 ticketForMapItemToRefine:v3 traits:v6];

    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100C82438;
    v8[3] = &unk_1012ECF50;
    id v9 = v3;
    id v10 = a1[5];
    id v11 = a1[6];
    [v7 submitWithHandler:v8 networkActivity:0];
  }
}

void sub_100C82438(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    double v7 = sub_1000B944C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      id v16 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error refining dropped map item: %@", buf, 0xCu);
    }
  }
  double v8 = [v5 firstObject];
  id v9 = v8;
  if (!v8) {
    id v9 = *(void **)(a1 + 32);
  }
  id v10 = v9;

  id v11 = *(void **)(a1 + 40);
  double v12 = +[NSSet setWithObject:v10];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100C825C0;
  v13[3] = &unk_1012EB010;
  id v14 = *(id *)(a1 + 48);
  [v11 addObjects:v12 completion:v13];
}

void sub_100C825C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 138412290;
      id v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error saving dropping map item: %@", (uint8_t *)&v5, 0xCu);
    }
  }
  [*(id *)(a1 + 32) reloadData];
}

void sub_100C82B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 120);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C82BAC;
  _OWORD v5[3] = &unk_1012E76C0;
  id v6 = *(id *)(a1 + 48);
  [v4 updateTitle:a2 forMapItem:v3 completion:v5];
}

void sub_100C82BAC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    uint64_t v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error renaming map item: %@", (uint8_t *)&v6, 0xCu);
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (v5) {
    (*(void (**)(void))(v5 + 16))();
  }
}

uint64_t sub_100C82C7C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100C83150(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C83164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C86304(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101610D08;
  qword_101610D08 = v1;
}

id sub_100C86FF0()
{
  if (qword_101610D30 != -1) {
    dispatch_once(&qword_101610D30, &stru_10131D6A8);
  }
  uint64_t v0 = (void *)qword_101610D28;

  return v0;
}

void sub_100C87044(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id v9 = sub_100C86FF0();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134349314;
    uint64_t v25 = v10;
    __int16 v26 = 2112;
    id v27 = v7;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[%{public}p] %@ TTR category chosen", buf, 0x16u);
  }

  id v11 = objc_alloc_init((Class)NSDateFormatter);
  [v11 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v12 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [v11 setLocale:v12];

  double v13 = +[NSDate date];
  id v14 = [v11 stringFromDate:v13];
  uint64_t v15 = +[NSString stringWithFormat:@"Timestamp: %@\n\nSummary:\n\nSteps to Reproduce:\n\nResults:\n", v14];

  id v16 = objc_opt_new();
  uint64_t v17 = +[NSString stringWithFormat:@"[Pedestrian AR]: %@", v7];
  [v16 setTitle:v17];

  [v16 setDescriptionText:v15];
  [v16 setComponent:v8];

  [v16 setClassification:a3];
  uint64_t v18 = +[MapsRadarKeyword keywordWithName:@"MAPS377" number:1281664];
  id v23 = v18;
  id v19 = +[NSArray arrayWithObjects:&v23 count:1];
  [v16 addKeywords:v19];

  uint64_t v20 = sub_100C86FF0();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
    uint64_t v21 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 134349056;
    uint64_t v25 = v21;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "[%{public}p] Will launch MapsRadarController", buf, 0xCu);
  }

  uint64_t v22 = +[MapsRadarController sharedInstance];
  [v22 launchTTRWithRadar:v16];
}

void sub_100C8730C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Missing AR element", 5, v2);
}

void sub_100C8737C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Wrong AR placement", 5, v2);
}

void sub_100C873EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Wrong instruction text", 5, v2);
}

void sub_100C8745C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsVisualLocalizationComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Failed to localize", 5, v2);
}

void sub_100C874CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsVisualLocalizationComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Slow to localize", 5, v2);
}

void sub_100C8753C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, @"Performance", 4, v2);
}

void sub_100C875AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[MapsRadarComponent mapsAppNavUIWalkingComponent];
  (*(void (**)(uint64_t, const __CFString *, uint64_t, id))(v1 + 16))(v1, &stru_101324E70, 7, v2);
}

void sub_100C8761C(uint64_t a1)
{
  id v2 = sub_100C86FF0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 134349056;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] User canceled TTR action sheet", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100C883F8(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610D20;
  qword_101610D20 = (uint64_t)v1;

  [(id)qword_101610D20 setDateFormat:@"yyyy-MM-dd HH:mm:ss.SSSSSSZZZ"];
  id v3 = [objc_alloc((Class)NSLocale) initWithLocaleIdentifier:@"en_US_POSIX"];
  [(id)qword_101610D20 setLocale:v3];
}

int64_t sub_100C88484(id a1, PedestrianARSessionMonitor *a2, PedestrianARSessionMonitor *a3)
{
  id v3 = a3;
  int v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  int v6 = (objc_class *)objc_opt_class();

  id v7 = NSStringFromClass(v6);
  id v8 = [v5 compare:v7];

  return (int64_t)v8;
}

void sub_100C88804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C88820(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 startDebugInfoRefreshTimer];
}

void sub_100C889A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C889CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained composeTTR];
}

void sub_100C88AB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];
}

void sub_100C88BB4(uint64_t a1)
{
  id v12 = +[NSMutableArray array];
  id v2 = [*(id *)(a1 + 32) platformController];
  uint64_t v3 = [v2 chromeViewController];
  int v4 = [(id)v3 topContext];

  objc_opt_class();
  LOBYTE(v3) = objc_opt_isKindOfClass();

  uint64_t v5 = [*(id *)(a1 + 32) platformController];
  int v6 = [v5 auxiliaryTasksManager];
  id v7 = [v6 auxilaryTaskForClass:objc_opt_class()];

  if ((v3 & 1) != 0 && v4
    || ([v7 isProvidingARAnnotations] & 1) != 0
    || ([*(id *)(a1 + 32) isAttached] & 1) != 0)
  {
    id v8 = [*(id *)(a1 + 32) debugText];
    id v9 = [v8 string];

    uint64_t v10 = +[MapsRadarTextAttachment attachmentWithFileName:@"PedestrianARStateDiagnostics.txt" text:v9];
    [v12 addObject:v10];

    id v11 = +[MapsRadarKeyword keywordWithName:@"MAPS377" number:1281664];

    [*(id *)(a1 + 40) addAttachments:v12];
    if (v11)
    {
      [*(id *)(a1 + 40) addKeyword:v11];
    }
  }
  else
  {
    [*(id *)(a1 + 40) addAttachments:v12];
  }
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_100C88E40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARFloatingDebugViewController");
  id v2 = (void *)qword_101610D28;
  qword_101610D28 = (uint64_t)v1;
}

id sub_100C89C24(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setUseNightMode:*(unsigned __int8 *)(a1 + 40)];
}

UIColor *__cdecl sub_100C8A9C8(id a1, MapsTheme *a2)
{
  return [(MapsTheme *)a2 keyColor];
}

void sub_100C8AC24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C8AC4C(uint64_t a1, void *a2, id a3)
{
  id v5 = a2;
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 3221225472;
  id v9 = sub_100C8AD68;
  uint64_t v10 = &unk_1012F16D0;
  objc_copyWeak(v11, (id *)(a1 + 48));
  v11[1] = a3;
  int v6 = +[UIAction actionWithTitle:v5 image:0 identifier:0 handler:&v7];
  [v6 setState:[*(id *)(*(void *)(a1 + 32) + 48) selectedIndex:v7, v8, v9, v10] == a3];
  [*(id *)(a1 + 40) addObject:v6];

  objc_destroyWeak(v11);
}

void sub_100C8AD50(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8AD68(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _itemSelectedAtIndex:*(void *)(a1 + 40)];
}

void sub_100C8AF20(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_10131D738];
  id v2 = (void *)qword_101610D38;
  qword_101610D38 = v1;
}

void sub_100C8AF80(id a1, SmallDropDownOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  id v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  id v7 = v6;

  [(SmallDropDownOutlineCell *)v8 setCellModel:v7];
}

void sub_100C8BA00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _populateExternalDevice];
}

void sub_100C8BB7C(uint64_t a1)
{
}

void sub_100C8BB90(uint64_t a1)
{
  id v2 = sub_100044DF4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 138543362;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Allowing previous value of currentCarPlayExternalDevice to deallocate: %{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_100C8C820(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C8C83C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C8C904;
  _OWORD v5[3] = &unk_1012FB070;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addNavigationRowWithTitle:@"Visual Effect Setting" viewControllerContent:v5];
  objc_destroyWeak(&v6);
}

void sub_100C8C8F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8C904(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C8C9CC;
  _OWORD v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Global Settings" content:v5];
  objc_destroyWeak(&v6);
}

void sub_100C8C9B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8C9CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Hide Chrome in Navigation" defaultsKey:@"__internal__hideChromeInNavigation" switchOnStateIfUnset:0 changeHandler:&stru_10131D798];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C8CB1C;
  v6[3] = &unk_1012E6998;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Disable Chrome" defaultsKey:@"__internal__DisableChrome" switchOnStateIfUnset:0 changeHandler:v6];
  objc_destroyWeak(&v7);
}

void sub_100C8CAB4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8CAC8(id a1, BOOL a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"__internal__hideChromeInNavigation" object:0];
}

void sub_100C8CB1C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_100C8CC28(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100C8CC44(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C8CD18;
  _OWORD v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  id v4 = [v3 addSectionWithTitle:0 content:v5];
  [*(id *)(a1 + 32) addVisualEffectSettingsTo:v3];
  objc_destroyWeak(&v6);
}

void sub_100C8CD00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8CD18(uint64_t a1, void *a2)
{
  id v3 = a2;
  v37[0] = _NSConcreteStackBlock;
  v37[1] = 3221225472;
  v37[2] = sub_100C8D2FC;
  v37[3] = &unk_1012E6998;
  objc_copyWeak(&v38, (id *)(a1 + 32));
  id v4 = [v3 addSwitchRowWithTitle:@"Show Application Size" geoConfigKey:MapsConfig_SizeDebugOverlay switchOnStateIfUnset:off_1015F0848 changeHandler:0 v37];
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 3221225472;
  v35[2] = sub_100C8D33C;
  v35[3] = &unk_1012E6998;
  objc_copyWeak(&v36, (id *)(a1 + 32));
  id v5 = [v3 addSwitchRowWithTitle:@"Allow Cards To Always Use Default Layout" geoConfigKey:MapsConfig_AllowCardsToSpecifyAlwaysDefaultLayout switchOnStateIfUnset:off_1015F0948 changeHandler:1 v35];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_100C8D37C;
  v33[3] = &unk_1012E6998;
  objc_copyWeak(&v34, (id *)(a1 + 32));
  id v6 = [v3 addSwitchRowWithTitle:@"Enable UIKitCards on Mac" geoConfigKey:MapsConfig_UseUIKitCardsOnMac switchOnStateIfUnset:off_1015F00C8 changeHandler:0 v33];
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_100C8D3BC;
  void v31[3] = &unk_1012E6998;
  objc_copyWeak(&v32, (id *)(a1 + 32));
  id v7 = [v3 addSwitchRowWithTitle:@"Optimize animations for sheet presentation" geoConfigKey:MapsConfig_ShouldOptimizeAnimationsForSheetPresentation switchOnStateIfUnset:off_1015F1008 changeHandler:0 v31];
  id v8 = [v3 addSwitchRowWithTitle:@"Enable Thick Card Material" geoConfigKey:MapsConfig_EnableThickCardMaterial];
  id v9 = [v3 addSwitchRowWithTitle:@"Enable Test Mode" defaultsKey:@"__internal__EnableTestMode" switchOnStateIfUnset:0 changeHandler:0];
  id v10 = [v3 addSwitchRowWithTitle:@"Show MapsSuggestion debug" defaultsKey:@"__internal__EnableMapsSuggestion" switchOnStateIfUnset:0 changeHandler:0];
  id v11 = [v3 addSwitchRowWithTitle:@"Show search debug" defaultsKey:@"EnableSearchDebug" switchOnStateIfUnset:0 changeHandler:0];
  id v12 = [v3 addSwitchRowWithTitle:@"Enable Tap-to-Hide" defaultsKey:@"__internal__EnabletapToHide" switchOnStateIfUnset:0 changeHandler:0];
  id v13 = [v3 addSwitchRowWithTitle:@"Enable Tap-to-Minmize" defaultsKey:@"__internal__EnabletapToMinimize" switchOnStateIfUnset:0 changeHandler:0];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100C8D3FC;
  void v29[3] = &unk_1012E6998;
  objc_copyWeak(&v30, (id *)(a1 + 32));
  id v14 = [v3 addSwitchRowWithTitle:@"MapsSuggestion LOI only filter" defaultsKey:@"__internal__EnableMapsSuggestionLOIOnly" switchOnStateIfUnset:0 changeHandler:v29];
  id v15 = [v3 addSwitchRowWithTitle:@"Don't Reset User Location" defaultsKey:@"__internal__MapsDebugDontResetUserLocation"];
  id v16 = [v3 addSwitchRowWithTitle:@"Highlight view frames" get:&stru_10131D7B8 set:&stru_10131D7D8];
  id v17 = [v3 addSwitchRowWithTitle:@"Enable Maps357 in Stark (must restart)" geoConfigKey:MapsConfig_StarkEnableMaps357 off_1015F0698];
  id v18 = [v3 addSwitchRowWithTitle:@"Thermal debug view" get:&stru_10131D7F8 set:&stru_10131D818];
  id v19 = [v3 addSwitchRowWithTitle:@"TTR capture screenshot" geoConfigKey:MapsConfig_EnableTapToRadarScreenshotAttachmentProvider off_1015F0AB8];
  id v20 = [v3 addSwitchRowWithTitle:@"Force Sticky Banners" defaultsKey:@"__internal_MapsDebugForceStickyBanners"];
  id v21 = [v3 addSwitchRowWithTitle:@"Updated maneuver arrow metrics" geoConfigKey:MapKitConfig_ArrowDrawingUseUpdatedGuidanceManeuverMetrics[0] MapKitConfig_ArrowDrawingUseUpdatedGuidanceManeuverMetrics[1]];
  id v22 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v23 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v24 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v25 = [v3 addSwitchRowWithTitle:@"Enable RealTime EVChargers" geoConfigKey:MapsFeaturesConfig_RealTimeEVCharger[0] MapsFeaturesConfig_RealTimeEVCharger[1]];
  id v26 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v27 = [v3 addSwitchRowWithTitle:@"Enable invalid root install alert" defaultsKey:@"EnableRootInstallationFailureAlert"];
  id v28 = [v3 addSwitchRowWithTitle:@"Enable automatic card expansion in route creation" defaultsKey:@"__internal_EnableAutomaticCardExpanion"];
  objc_destroyWeak(&v30);
  objc_destroyWeak(&v32);
  objc_destroyWeak(&v34);
  objc_destroyWeak(&v36);
  objc_destroyWeak(&v38);
}

void sub_100C8D2A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C8D2FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_100C8D33C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_100C8D37C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_100C8D3BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

void sub_100C8D3FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _promptForRestart];
}

BOOL sub_100C8D43C(id a1)
{
  return +[DebugViewFrameHighlighter frameHighlightingEnabled];
}

void sub_100C8D448(id a1, BOOL a2)
{
}

BOOL sub_100C8D458(id a1)
{
  uint64_t v1 = +[ThermalStateFloatingDebugViewController sharedInstance];
  unsigned __int8 v2 = [v1 isAttached];

  return v2;
}

void sub_100C8D498(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[ThermalStateFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_100C8D57C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Chrome" content:&stru_10131D838];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100C8D858;
  v17[3] = &unk_1012EE018;
  v17[4] = *(void *)(a1 + 32);
  id v5 = [v3 addSectionWithTitle:@"iOS/Mac" content:v17];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C8DE7C;
  v16[3] = &unk_1012EE018;
  v16[4] = *(void *)(a1 + 32);
  id v6 = [v3 addSectionWithTitle:@"Mac" content:v16];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C8F39C;
  v14[3] = &unk_1012FBC50;
  id v15 = &stru_10131D880;
  id v7 = [v3 addSectionWithTitle:@"Throttling navigation display rate" content:v14];
  v11[0] = 0;
  v11[1] = v11;
  id v11[2] = 0x4010000000;
  v11[3] = &unk_1011B93F2;
  MKMapSize size = MKMapRectNull.size;
  MKMapPoint origin = MKMapRectNull.origin;
  MKMapSize v13 = size;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C8F4B8;
  _OWORD v10[3] = &unk_10131DD48;
  void v10[4] = *(void *)(a1 + 32);
  v10[5] = v11;
  id v9 = [v3 addSectionWithTitle:@"Set Visible Map Rect" content:v10];
  _Block_object_dispose(v11, 8);
}

void sub_100C8D7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100C8D7C0(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Show Chrome layout guides" defaultsKey:@"__internal_VisualizeChromeLayoutGuidesDebug"];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Force Chrome map inactive" defaultsKey:@"__internal_MapsDebugForceChromeMapViewInactive"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enable status bar indicator", MapsConfig_EnableStatusBarIndicator, off_1015F0EE8 geoConfigKey];
}

void sub_100C8D858(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Force stale map effect" defaultsKey:@"__internal_MapsDebugForceChromeStaleMapEffect"];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C8DA58;
  v14[3] = &unk_1012E5D08;
  void v14[4] = *(void *)(a1 + 32);
  id v5 = [v3 addButtonRowWithTitle:@"Push card test context" action:v14];
  if (![*(id *)(*(void *)(a1 + 32) + 104) length])
  {
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = *(void **)(v6 + 104);
    *(void *)(v6 + 104) = @"Taco Bell";
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C8DB88;
  v12[3] = &unk_1012EE360;
  uint64_t v13 = *(void *)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100C8DB9C;
  v11[3] = &unk_1012E78C8;
  void v11[4] = v13;
  id v8 = [v3 addTextFieldRowWithTitle:@"Place Card Context Query" placeholderText:@"Enter a place name" inputType:0 get:v12 set:v11];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C8DBB0;
  _OWORD v10[3] = &unk_1012E5D08;
  void v10[4] = *(void *)(a1 + 32);
  id v9 = [v3 addButtonRowWithTitle:@"Push test place card context" action:v10];
}

void sub_100C8DA58(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  id v3 = [v2 _maps_mapsSceneDelegate];

  id v4 = [v3 chromeViewController];
  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C8DB28;
  v7[3] = &unk_1012E5D08;
  id v8 = v4;
  id v6 = v4;
  [v5 dismissViewControllerAnimated:1 completion:v7];
}

void sub_100C8DB28(uint64_t a1)
{
  id v2 = objc_alloc_init(IOSCardTestContext);
  [*(id *)(a1 + 32) pushContext:v2 animated:1 completion:0];
}

id sub_100C8DB88(uint64_t a1)
{
  return *(id *)(*(void *)(a1 + 32) + 104);
}

void sub_100C8DB9C(uint64_t a1, void *a2)
{
}

void sub_100C8DBB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  id v3 = [v2 _maps_mapsSceneDelegate];

  id v4 = [v3 chromeViewController];
  id v5 = [objc_alloc((Class)MKLocalSearchRequest) initWithNaturalLanguageQuery:*(void *)(*(void *)(a1 + 32) + 104)];
  id v6 = [objc_alloc((Class)MKLocalSearch) initWithRequest:v5];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100C8DCCC;
  v8[3] = &unk_10131D860;
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v4;
  id v7 = v4;
  [v6 startWithCompletionHandler:v8];
}

void sub_100C8DCCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 mapItems];
  id v5 = [v4 count];

  if (v5)
  {
    id v6 = [PlaceCardItem alloc];
    id v7 = [v3 mapItems];
    id v8 = [v7 firstObject];
    id v9 = [(PlaceCardItem *)v6 initWithMapItem:v8];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100C8DE14;
    v12[3] = &unk_1012E5D58;
    uint64_t v13 = [[_TtC4Maps29PlaceCardContextConfiguration alloc] initWithPlaceCardItem:v9 shouldInsertInHistory:0 excludedContent:0];
    id v10 = *(void **)(a1 + 32);
    id v14 = *(id *)(a1 + 40);
    id v11 = v13;
    [v10 dismissViewControllerAnimated:1 completion:v12];
  }
}

void sub_100C8DE14(uint64_t a1)
{
  id v2 = [[_TtC4Maps16PlaceCardContext alloc] initWithConfiguration:*(void *)(a1 + 32)];
  [*(id *)(a1 + 40) pushContext:v2 animated:1 completion:0];
}

void sub_100C8DE7C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Enable Chrome-owned sidebar" geoConfigKey:MapsConfig_EnableMacChromeOwnedSidebar off_1015F0A08];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C8DF38;
  v6[3] = &unk_1012E5D08;
  void v6[4] = *(void *)(a1 + 32);
  id v5 = [v3 addButtonRowWithTitle:@"Push sidebar test context" action:v6];
}

void sub_100C8DF38(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  id v3 = [v2 _maps_mapsSceneDelegate];

  id v4 = [v3 macChromeViewController];
  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C8E008;
  v7[3] = &unk_1012E5D08;
  id v8 = v4;
  id v6 = v4;
  [v5 dismissViewControllerAnimated:1 completion:v7];
}

void sub_100C8E008(uint64_t a1)
{
  id v2 = objc_alloc_init(MacSidebarTestContext);
  [*(id *)(a1 + 32) pushContext:v2 animated:1 completion:0];
}

void sub_100C8E068(id a1, MapsDebugValuesViewController *a2)
{
  id v10 = a2;
  id v2 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Throttle type" content:&stru_10131D8A0];
  id v3 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Global settings" content:&stru_10131D8E0];
  id v4 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Scaling" content:&stru_10131DA00];
  id v5 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Zoom level" content:&stru_10131DA40];
  id v6 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Map span (subtype)" content:&stru_10131DAE0];
  id v7 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Map span (settings)" content:&stru_10131DB20];
  id v8 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:@"Throttle when stationary" content:&stru_10131DBC0];
  id v9 = [(MapsDebugValuesViewController *)v10 addSectionWithTitle:0 content:&stru_10131DCE0];
}

void sub_100C8E198(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_10131D8C0 defaultsKey:@"ChromeNavigationDisplayRateThrottleType" checkedRowValueIfUnset:0 changeHandler:0];
}

void sub_100C8E1D4(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v10 = a2;
  id v2 = sub_1004A92DC(0);
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v10 addRowWithTitle:v2 value:&off_1013AADB0];

  id v4 = sub_1004A92DC(1uLL);
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v10 addRowWithTitle:v4 value:&off_1013AADC8];

  id v6 = sub_1004A92DC(2uLL);
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v10 addRowWithTitle:v6 value:&off_1013AADE0];

  id v8 = sub_1004A92DC(3uLL);
  id v9 = [(MapsDebugCheckmarkRowsGroup *)v10 addRowWithTitle:v8 value:&off_1013AADF8];
}

void sub_100C8E2D4(id a1, MapsDebugTableSection *a2)
{
  id v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Ignore connection type" defaultsKey:@"ChromeNavigationDisplayRateIgnoreConnectionType"];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Ignore camera style" defaultsKey:@"ChromeNavigationDisplayRateIgnoreCameraStyle"];
  id v4 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Constant rate" placeholderText:@"(20 fps)" inputType:1 get:&stru_10131D900 set:&stru_10131D920];
  id v5 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Minimum rate" placeholderText:@"(2 fps)" inputType:1 get:&stru_10131D940 set:&stru_10131D960];
  id v6 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Maximum rate" placeholderText:@"(8 fps)" inputType:1 get:&stru_10131D980 set:&stru_10131D9A0];
  id v7 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Temporary display rate duration" placeholderText:@"(4 seconds)" inputType:1 get:&stru_10131D9C0 set:&stru_10131D9E0];
  [(MapsDebugTableSection *)v8 setFooter:@"Temporary Display Rate Duration - Number of seconds that temporary display rate changes apply. This is used when the navigation bar shows/hides while navigating in Overview to ensure the map transition does not stutter unnecessarily."];
}

NSString *__cdecl sub_100C8E428(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleConstant"];

  return (NSString *)v2;
}

void sub_100C8E484(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleConstant"];
}

NSString *__cdecl sub_100C8E50C(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleMinimum"];

  return (NSString *)v2;
}

void sub_100C8E568(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleMinimum"];
}

NSString *__cdecl sub_100C8E5F0(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleMaximum"];

  return (NSString *)v2;
}

void sub_100C8E64C(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleMaximum"];
}

NSString *__cdecl sub_100C8E6D4(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateTemporaryDuration"];

  return (NSString *)v2;
}

void sub_100C8E730(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateTemporaryDuration"];
}

void sub_100C8E7B8(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addCheckmarkRowsGroupWithContent:&stru_10131DA20 defaultsKey:@"ChromeNavigationDisplayRateThrottleScaling" checkedRowValueIfUnset:0 changeHandler:0];
  [(MapsDebugTableSection *)v3 setFooter:@"Linear - e.g. using zoom-based throttling: if the current zoom level is halfway between the min and max specified here, then the display rate will be halfway between the min and max specified above. Also applies to map span throttling."];
}

void sub_100C8E824(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = sub_1004A936C(0);
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:v2 value:&off_1013AADB0];
}

void sub_100C8E894(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Maximum rate at zoom level" placeholderText:@"(16)" inputType:1 get:&stru_10131DA60 set:&stru_10131DA80];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Minimum rate at zoom level" placeholderText:@"(12)" inputType:1 get:&stru_10131DAA0 set:&stru_10131DAC0];
}

NSString *__cdecl sub_100C8E930(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleZoomLevelMax"];

  return (NSString *)v2;
}

void sub_100C8E98C(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleZoomLevelMax"];
}

NSString *__cdecl sub_100C8EA14(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleZoomLevelMin"];

  return (NSString *)v2;
}

void sub_100C8EA70(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleZoomLevelMin"];
}

void sub_100C8EAF8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_10131DB00 defaultsKey:@"ChromeNavigationDisplayRateThrottleMapSpanSubtype" checkedRowValueIfUnset:0 changeHandler:0];
}

void sub_100C8EB34(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v8 = a2;
  id v2 = sub_1004A93F4(0);
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:v2 value:&off_1013AADB0];

  id v4 = sub_1004A93F4(1uLL);
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:v4 value:&off_1013AADC8];

  id v6 = sub_1004A93F4(2uLL);
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:v6 value:&off_1013AADE0];
}

void sub_100C8EC04(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Maximum rate at distance" placeholderText:@"(750 m)" inputType:1 get:&stru_10131DB40 set:&stru_10131DB60];
  id v3 = [(MapsDebugTableSection *)v4 addTextFieldRowWithTitle:@"Minimum rate at distance" placeholderText:@"(3,000 m)" inputType:1 get:&stru_10131DB80 set:&stru_10131DBA0];
}

NSString *__cdecl sub_100C8ECA0(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleMapSpanMin"];

  return (NSString *)v2;
}

void sub_100C8ECFC(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleMapSpanMin"];
}

NSString *__cdecl sub_100C8ED84(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleMapSpanMax"];

  return (NSString *)v2;
}

void sub_100C8EDE0(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleMapSpanMax"];
}

void sub_100C8EE68(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Enabled" defaultsKey:@"ChromeNavigationDisplayRateThrottleWhenIdle"];
  id v3 = [(MapsDebugTableSection *)v7 addTextFieldRowWithTitle:@"Display rate" placeholderText:@"(same as min)" inputType:1 get:&stru_10131DBE0 set:&stru_10131DC00];
  id v4 = [(MapsDebugTableSection *)v7 addTextFieldRowWithTitle:@"Check interval" placeholderText:@"(16 seconds)" inputType:1 get:&stru_10131DC20 set:&stru_10131DC40];
  id v5 = [(MapsDebugTableSection *)v7 addTextFieldRowWithTitle:@"Required time stationary" placeholderText:@"(20 seconds)" inputType:1 get:&stru_10131DC60 set:&stru_10131DC80];
  id v6 = [(MapsDebugTableSection *)v7 addTextFieldRowWithTitle:@"Movement threshold" placeholderText:@"(1 m/s)" inputType:1 get:&stru_10131DCA0 set:&stru_10131DCC0];
  [(MapsDebugTableSection *)v7 setFooter:@"If enabled, we will check the user's speed at regular intervals.  If we're confident the user is not moving (or moving very much), we drop the display rate."];
}

NSString *__cdecl sub_100C8EF9C(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleIdleRate"];

  return (NSString *)v2;
}

void sub_100C8EFF8(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleIdleRate"];
}

NSString *__cdecl sub_100C8F080(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleIdleCheckInterval"];

  return (NSString *)v2;
}

void sub_100C8F0DC(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleIdleCheckInterval"];
}

NSString *__cdecl sub_100C8F164(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleIdleTimeThreshold"];

  return (NSString *)v2;
}

void sub_100C8F1C0(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleIdleTimeThreshold"];
}

NSString *__cdecl sub_100C8F248(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 stringForKey:@"ChromeNavigationDisplayRateThrottleIdleSpeedThreshold"];

  return (NSString *)v2;
}

void sub_100C8F2A4(id a1, NSString *a2)
{
  id v4 = a2;
  id v2 = v4;
  if (![(NSString *)v4 length])
  {

    id v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"ChromeNavigationDisplayRateThrottleIdleSpeedThreshold"];
}

void sub_100C8F32C(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addButtonRowWithTitle:@"Reset custom settings" action:&stru_10131DD00];
  [(MapsDebugTableSection *)v3 setFooter:@"This will happen immediately and take effect for the next navigation session."];
}

void sub_100C8F390(id a1)
{
}

void sub_100C8F39C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [v5 addTextFieldRowWithTitle:@"Current setting" placeholderText:@"Off" inputType:0 get:&stru_10131DD20 set:0];
  id v4 = [v5 addNavigationRowWithTitle:@"Change settings" viewControllerContent:*(void *)(a1 + 32)];
  [v5 setFooter:@"These settings will only take effect when you start navigation. Hence, you need to restart navigation if you change anything."];
}

NSString *__cdecl sub_100C8F438(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  id v2 = [v1 objectForKey:@"ChromeNavigationDisplayRateThrottleType"];

  if (v2)
  {
    id v3 = sub_1004A92DC((unint64_t)[v2 unsignedIntegerValue]);
  }
  else
  {
    id v3 = 0;
  }

  return (NSString *)v3;
}

void sub_100C8F4B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100C8F840;
  void v29[3] = &unk_101319E38;
  uint64_t v30 = *(void *)(a1 + 40);
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_100C8F8C0;
  void v28[3] = &unk_101319E60;
  void v28[4] = v30;
  id v4 = [v3 addTextFieldRowWithTitle:@"origin.x" placeholderText:0 inputType:2 get:v29 set:v28];
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_100C8F8F4;
  v26[3] = &unk_101319E38;
  uint64_t v27 = *(void *)(a1 + 40);
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100C8F974;
  v25[3] = &unk_101319E60;
  v25[4] = v27;
  id v5 = [v3 addTextFieldRowWithTitle:@"origin.y" placeholderText:0 inputType:2 get:v26 set:v25];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100C8F9A8;
  void v23[3] = &unk_101319E38;
  uint64_t v24 = *(void *)(a1 + 40);
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100C8FA2C;
  v22[3] = &unk_101319E60;
  v22[4] = v24;
  id v6 = [v3 addTextFieldRowWithTitle:@"size.width" placeholderText:0 inputType:2 get:v23 set:v22];
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100C8FA60;
  v20[3] = &unk_101319E38;
  uint64_t v21 = *(void *)(a1 + 40);
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C8FAE4;
  v19[3] = &unk_101319E60;
  v19[4] = v21;
  id v7 = [v3 addTextFieldRowWithTitle:@"size.height" placeholderText:0 inputType:2 get:v20 set:v19];
  id v8 = [*(id *)(a1 + 32) presentingViewController];
  id v9 = [v8 _maps_mapsSceneDelegate];

  id v10 = [v9 chromeViewController];
  id v11 = [v10 mapView];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C8FB18;
  v16[3] = &unk_1012ECFC0;
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  id v17 = v11;
  uint64_t v18 = v12;
  v16[4] = v13;
  id v14 = v11;
  id v15 = [v3 addButtonRowWithTitle:@"Apply" action:v16];
}

id sub_100C8F840(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  if (*(double *)(v1 + 32) == MKMapRectNull.origin.x && *(double *)(v1 + 40) == MKMapRectNull.origin.y)
  {
    id v4 = 0;
  }
  else
  {
    id v3 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    id v4 = [v3 stringValue];
  }

  return v4;
}

id sub_100C8F8C0(uint64_t a1, void *a2)
{
  id result = [a2 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 32) = v4;
  return result;
}

id sub_100C8F8F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  double v2 = *(double *)(v1 + 40);
  if (*(double *)(v1 + 32) == MKMapRectNull.origin.x && v2 == MKMapRectNull.origin.y)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v4 = +[NSNumber numberWithDouble:v2];
    id v5 = [v4 stringValue];
  }

  return v5;
}

id sub_100C8F974(uint64_t a1, void *a2)
{
  id result = [a2 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = v4;
  return result;
}

id sub_100C8F9A8(uint64_t a1)
{
  uint64_t v1 = *(double **)(*(void *)(a1 + 32) + 8);
  double v2 = v1[5];
  if (v1[4] == MKMapRectNull.origin.x && v2 == MKMapRectNull.origin.y)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v4 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v1[6], v2);
    id v5 = [v4 stringValue];
  }

  return v5;
}

id sub_100C8FA2C(uint64_t a1, void *a2)
{
  id result = [a2 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = v4;
  return result;
}

id sub_100C8FA60(uint64_t a1)
{
  uint64_t v1 = *(double **)(*(void *)(a1 + 32) + 8);
  double v2 = v1[5];
  if (v1[4] == MKMapRectNull.origin.x && v2 == MKMapRectNull.origin.y)
  {
    id v5 = 0;
  }
  else
  {
    uint64_t v4 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v1[7], v2);
    id v5 = [v4 stringValue];
  }

  return v5;
}

id sub_100C8FAE4(uint64_t a1, void *a2)
{
  id result = [a2 doubleValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 56) = v4;
  return result;
}

void sub_100C8FB18(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 48) + 8);
  if (*(double *)(v1 + 32) != MKMapRectNull.origin.x || *(double *)(v1 + 40) != MKMapRectNull.origin.y)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100C8FBD0;
    v7[3] = &unk_1012E67C0;
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = *(id *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    id v8 = v5;
    uint64_t v9 = v6;
    [v4 dismissViewControllerAnimated:1 completion:v7];
  }
}

id sub_100C8FBD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setVisibleMapRect:1 animated:[*(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 32), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 48), *(double *)(*(void *)(*(void *)(a1 + 40) + 8) + 56)]];
}

void sub_100C8FCC8(id a1, UIAlertAction *a2)
{
  double v2 = a2;
  exit(0);
}

void sub_100C8FDA0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C8FDBC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = objc_alloc_init(MapsDebugTableSection);
  id v5 = [(MapsDebugTableSection *)v4 addNavigationRowWithTitle:@"Headunit Info" viewControllerContent:&stru_10131DD88];
  [v3 addSection:v4];
  id v6 = [v3 addSectionWithTitle:@"Simulate Connection Scenario" content:&stru_10131DE98];
  id v7 = [v3 addSectionWithTitle:@"UI Experiments" content:&stru_10131DEF8];
  id v8 = [v3 addSectionWithTitle:@"Speed Sign" content:&stru_10131DF58];
  id v9 = [v3 addSectionWithTitle:@"Debugging" content:&stru_10131DF78];
  id v10 = [v3 addSectionWithTitle:@"Map Deactivation" content:&stru_10131DFD8];
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100C91304;
  v22[3] = &unk_1012E7EF8;
  objc_copyWeak(&v23, (id *)(a1 + 32));
  id v11 = [v3 addSectionWithTitle:@"Vehicle" content:v22];
  id v12 = [v3 addSectionWithTitle:@"Console" content:&stru_10131E038];
  id v13 = [v3 addSectionWithTitle:@"Timeout intervals" content:&stru_10131E058];
  id v14 = [v3 addSectionWithTitle:@"Search Along The Route" content:&stru_10131E138];
  id v15 = [v3 addSectionWithTitle:@"Route Genius/Maps Suggestions" content:&stru_10131E158];
  id v16 = [v3 addSectionWithTitle:@"Search" content:&stru_10131E198];
  id v17 = [v3 addSectionWithTitle:@"Pannning" content:&stru_10131E1B8];
  id v18 = [v3 addSectionWithTitle:@"One Handed Zoom" content:&stru_10131E278];
  id v19 = [v3 addSectionWithTitle:@"Interruption Testing" content:&stru_10131E358];
  id v20 = [v3 addSectionWithTitle:@"CarCard Testing" content:&stru_10131E428];
  id v21 = [v3 addSectionWithTitle:@"Dual-screen experience" content:&stru_10131E6E0];
  objc_destroyWeak(&v23);
}

void sub_100C9008C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C900A4(id a1, MapsDebugValuesViewController *a2)
{
  uint64_t v31 = a2;
  uint64_t v2 = +[CarDisplayController sharedInstance];
  id v3 = [v2 connectedCarScreenInfos];

  uint64_t v30 = v3;
  uint64_t v4 = [v3 keyEnumerator];
  id v5 = [v4 allObjects];
  id v6 = [v5 sortedArrayUsingComparator:&stru_10131DDC8];

  id v7 = +[UIApplication sharedApplication];
  id v8 = [v7 connectedScenes];
  id v9 = sub_1000AC254(v8, &stru_10131DDE8);
  id v29 = sub_1004E032C(v9, &stru_10131DE28);

  long long v39 = 0u;
  long long v40 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id obj = v6;
  id v10 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
  if (v10)
  {
    id v11 = v10;
    uint64_t v28 = *(void *)v38;
    do
    {
      for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v28) {
          objc_enumerationMutation(obj);
        }
        id v13 = *(void **)(*((void *)&v37 + 1) + 8 * i);
        id v14 = [v30 objectForKey:v13];
        v36[0] = _NSConcreteStackBlock;
        v36[1] = 3221225472;
        v36[2] = sub_100C90548;
        v36[3] = &unk_10131DE50;
        v36[4] = v13;
        id v15 = sub_1000990A8(v29, v36);
        id v16 = [v15 screen];
        id v17 = [v13 identifier];
        id v18 = +[UIScreen _carScreen];
        id v19 = [v18 _displayID];
        unsigned int v20 = [v17 isEqualToString:v19];
        id v21 = @"Instrument cluster info";
        if (v20) {
          id v21 = @"Center console info";
        }
        id v22 = v21;

        v32[0] = _NSConcreteStackBlock;
        v32[1] = 3221225472;
        v32[2] = sub_100C905BC;
        v32[3] = &unk_10131DE78;
        id v33 = v14;
        id v34 = v16;
        id v35 = v15;
        id v23 = v15;
        id v24 = v16;
        id v25 = v14;
        id v26 = [(MapsDebugValuesViewController *)v31 addSectionWithTitle:v22 content:v32];
      }
      id v11 = [obj countByEnumeratingWithState:&v37 objects:v41 count:16];
    }
    while (v11);
  }
}

int64_t sub_100C90410(id a1, CARScreenInfo *a2, CARScreenInfo *a3)
{
  uint64_t v4 = a3;
  id v5 = [(CARScreenInfo *)a2 identifier];
  id v6 = +[UIScreen _carScreen];
  id v7 = [v6 _displayID];
  unsigned __int8 v8 = [v5 isEqualToString:v7];

  if (v8)
  {
    int64_t v9 = -1;
  }
  else
  {
    id v10 = [(CARScreenInfo *)v4 identifier];
    id v11 = +[UIScreen _carScreen];
    id v12 = [v11 _displayID];
    unsigned int v13 = [v10 isEqualToString:v12];

    int64_t v9 = v13;
  }

  return v9;
}

BOOL sub_100C904F4(id a1, UIScene *a2, unint64_t a3, BOOL *a4)
{
  uint64_t v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_100C90540(id a1, UIWindowScene *a2, unint64_t a3)
{
  return [(UIWindowScene *)a2 windows];
}

id sub_100C90548(uint64_t a1, void *a2)
{
  id v3 = [a2 screen];
  uint64_t v4 = [v3 _displayID];
  id v5 = [*(id *)(a1 + 32) identifier];
  id v6 = [v4 isEqualToString:v5];

  return v6;
}

void sub_100C905BC(id *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1[4] carName];
  id v5 = [v3 addReadOnlyRowWithTitle:@"CarName" value:v4];

  id v6 = [a1[4] manufacturer];
  id v7 = [v3 addReadOnlyRowWithTitle:@"Manufacturer" value:v6];

  unsigned __int8 v8 = [a1[4] model];
  id v9 = [v3 addReadOnlyRowWithTitle:@"Model" value:v8];

  id v10 = [a1[4] deviceConnection];
  if (v10 >= 3)
  {
    id v11 = +[NSString stringWithFormat:@"(unknown: %i)", v10];
  }
  else
  {
    id v11 = off_1013205C0[(int)v10];
  }
  id v12 = [v3 addReadOnlyRowWithTitle:@"Connection" value:v11];

  [a1[5] _car_physicalSize];
  uint64_t v14 = v13;
  [a1[5] _car_physicalSize];
  id v16 = +[NSString stringWithFormat:@"w:%.2f h:%.2f", v14, v15];
  id v17 = [v3 addReadOnlyRowWithTitle:@"Dimensions (mm)" value:v16];

  id v18 = a1[4];
  if (v18)
  {
    [v18 screenResolution];
    id v19 = a1[4];
    uint64_t v20 = v77;
    if (v19)
    {
      [v19 screenResolution];
      uint64_t v21 = v73;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v20 = 0;
    uint64_t v78 = 0;
  }
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  uint64_t v21 = 0;
  uint64_t v75 = 0;
LABEL_9:
  id v22 = +[NSString stringWithFormat:@"w:%.2f h:%.2f", v20, v21, v73, v74, v75, v76, v77, v78];
  id v23 = [v3 addReadOnlyRowWithTitle:@"Resolution (pixels)" value:v22];

  id v24 = [a1[6] safeAreaLayoutGuide];
  [v24 layoutFrame];
  double v26 = v25;
  [a1[5] nativeScale];
  double v28 = v26 * v27;
  id v29 = [a1[6] safeAreaLayoutGuide];
  [v29 layoutFrame];
  double v31 = v30;
  [a1[5] nativeScale];
  id v33 = +[NSString stringWithFormat:@"w:%.2f h:%.2f", *(void *)&v28, v31 * v32];
  id v34 = [v3 addReadOnlyRowWithTitle:@"Safe area (pixels)" value:v33];

  [a1[5] _car_physicalPixelSize];
  id v36 = +[NSString stringWithFormat:@"%.3f", v35];
  id v37 = [v3 addReadOnlyRowWithTitle:@"Physical pixel size (mm)" value:v36];

  [a1[5] _car_physicalPointSize];
  long long v39 = +[NSString stringWithFormat:@"%.3f", v38];
  id v40 = [v3 addReadOnlyRowWithTitle:@"Physical point size (mm)" value:v39];

  [a1[5] nativeScale];
  uint64_t v42 = +[NSString stringWithFormat:@"%.3f", v41];
  id v43 = [v3 addReadOnlyRowWithTitle:@"Content scale" value:v42];

  [a1[5] _car_dynamicPixelScaleValue];
  long long v45 = +[NSString stringWithFormat:@"%.3f", v44];
  id v46 = [v3 addReadOnlyRowWithTitle:@"Dynamic pixel scale factor" value:v45];

  [a1[5] _car_dynamicPointScaleValue];
  double v48 = +[NSString stringWithFormat:@"%.3f", v47];
  id v49 = [v3 addReadOnlyRowWithTitle:@"Dynamic point scale factor" value:v48];

  if (objc_msgSend(a1[6], "_car_hybridInstrumentClusterAlignmentStyle")) {
    CFStringRef v50 = @"Wide";
  }
  else {
    CFStringRef v50 = @"Narrow";
  }
  id v51 = [v3 addReadOnlyRowWithTitle:@"Alignment style" value:v50];
  id v52 = [a1[6] _car_hybridInstrumentClusterAlignment];
  CFStringRef v53 = @"Center";
  if (v52 == (id)1) {
    CFStringRef v53 = @"Left";
  }
  if (v52 == (id)2) {
    CFStringRef v54 = @"Right";
  }
  else {
    CFStringRef v54 = v53;
  }
  id v55 = [v3 addReadOnlyRowWithTitle:@"Alignment" value:v54];
  long long v56 = objc_opt_new();
  if ([a1[4] engineTypesCount])
  {
    unint64_t v57 = 0;
    do
    {
      id v58 = [a1[4] engineTypeAtIndex:v57];
      if (v58 >= 5)
      {
        __int16 v59 = +[NSString stringWithFormat:@"(unknown: %i)", v58];
      }
      else
      {
        __int16 v59 = off_1013205D8[(int)v58];
      }
      [v56 addObject:v59];

      ++v57;
    }
    while (v57 < (unint64_t)[a1[4] engineTypesCount]);
  }
  id v60 = [v56 componentsJoinedByString:@", "];
  id v61 = [v3 addReadOnlyRowWithTitle:@"EngineType(s)" value:v60];

  CGFloat v62 = objc_opt_new();
  if ([a1[4] inputMethodsCount])
  {
    unint64_t v63 = 0;
    do
    {
      id v64 = [a1[4] inputMethodAtIndex:v63];
      if (v64 >= 5)
      {
        double v65 = +[NSString stringWithFormat:@"(unknown: %i)", v64];
      }
      else
      {
        double v65 = off_101320620[(int)v64];
      }
      [v62 addObject:v65];

      ++v63;
    }
    while (v63 < (unint64_t)[a1[4] inputMethodsCount]);
  }
  double v66 = [v62 componentsJoinedByString:@", "];
  id v67 = [v3 addReadOnlyRowWithTitle:@"InputMethod(s)" value:v66];

  if ([a1[4] destinationSharingEnabled]) {
    CFStringRef v68 = @"YES";
  }
  else {
    CFStringRef v68 = @"NO";
  }
  id v69 = [v3 addReadOnlyRowWithTitle:@"DestinationSharing" value:v68];
  id v70 = [a1[4] navAidedDrivingStatus];
  if (v70 >= 4)
  {
    v71 = +[NSString stringWithFormat:@"(unknown: %i)", v70];
  }
  else
  {
    v71 = off_101320600[(int)v70];
  }
  id v72 = [v3 addReadOnlyRowWithTitle:@"NavAidedDrivingSatus" value:v71];
}

void sub_100C90C74(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addCheckmarkRowsGroupWithContent:&stru_10131DEB8 defaultsKey:@"StarkDisplayEnablingState" checkedRowValueIfUnset:0 changeHandler:&stru_10131DED8];
  [(MapsDebugTableSection *)v3 setFooter:@"These settings take effect immediately.\n- No Simulation: default device behaviour (resolves to Allow/Disallow depending on device and region).\n- Enabled/Allowed: force CarPlay allowed on all devices.\n- No Screen: simulate no screen attached.\n- No Screen Ownership: allow a screen, but simulate no ownership (e.g. reverse camera, radio, etc).\n- Disabled/Disallowed: disallow CarPlay entirely on all devices."];
}

void sub_100C90CE4(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"No Simulation" value:0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Enabled/Allowed" value:&off_1013AAD68];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"No Screen" value:&off_1013AAD80];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"No Screen Ownership" value:&off_1013AAE10];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v7 addRowWithTitle:@"Disabled/Disallowed" value:&off_1013AAD98];
}

void sub_100C90DB4(id a1, id a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarDisplayDidUpdateEnablingStateNotification" object:0];
}

void sub_100C90E0C(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Map appearance should follow system settings *", MapsConfig_CarPlayMapAppearanceShouldFollowUserInterfaceStyle, off_1015F0668 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Should accessories modify map insets", MapsConfig_ShouldCarPlayAccessoriesModifyMapInsets, off_1015F0678 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"MSg decorated titles" defaultsKey:@"__internal__CarMapsSuggestionsEntryDecoratedTitle"];
  id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Disable blur" get:&stru_10131DF18 set:&stru_10131DF38];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Drive Camera", MapsConfig_EnableCarPlayDriveCamera, off_1015F0BB8 geoConfigKey];
}

BOOL sub_100C90EF4(id a1)
{
  return +[CarVisualEffectView isDisablingBlur];
}

void sub_100C90F00(id a1, BOOL a2)
{
}

void sub_100C90F10(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable speed sign road matcher", MapsConfig_EnableSpeedSignRoadMatcher, off_1015F0B58 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Search radius", @"(metres)", 2, MapsConfig_SpeedSignRoadMatcherRadius, off_1015F0B68 placeholderText inputType geoConfigKeyDouble];
}

void sub_100C90F98(id a1, MapsDebugTableSection *a2)
{
  uint64_t v14 = a2;
  id v2 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Visualize Launch Performance *" defaultsKey:@"StarkLaunchPerformanceDebug"];
  id v3 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Visualize Focus Guides *" defaultsKey:@"__internal_CarVisualizeFocusGuidesDebug"];
  id v4 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Visualize Map Controls Containers *" defaultsKey:@"__internal_CarVisualizeMapControlContainersDebug"];
  id v5 = [(MapsDebugTableSection *)v14 addTextFieldRowWithTitle:@"Launch Performance Seconds Delay *" placeholderText:@"10" inputType:1 defaultsKey:@"StarkLaunchPerformanceDelayDebug"];
  id v6 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Search Cell Items" defaultsKey:@"CarSearchCellItemDebug"];
  id v7 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Route Genius Location Ranking" defaultsKey:@"CarRouteGeniusManagerLocationRankingDebug"];
  id v8 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"EV Search Testing" defaultsKey:@"CarEVSearchTestingDebug"];
  id v9 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Panning touch targets" defaultsKey:@"CarPanningTouchTargetDebug"];
  id v10 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Force warning for low range" defaultsKey:@"ExternalAccessoryForceLowRangeWarningForLowRange"];
  id v11 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Human Presence **" get:&stru_10131DF98 set:&stru_10131DFB8];
  id v12 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Visualize card containers" defaultsKey:@"__internal_CarVisualizeCardContainersDebug"];
  id v13 = [(MapsDebugTableSection *)v14 addSwitchRowWithTitle:@"Test CarCards *" defaultsKey:@"__internal_CarCardTestDebug"];
  [(MapsDebugTableSection *)v14 setFooter:@"* restart maps for settings to be made active            \n** first on/off toggle after launch does nothing.  2nd and there after on/off toggle will work"];
}

BOOL sub_100C91170(id a1)
{
  uint64_t v1 = +[UIScreen _carScreen];
  unsigned __int8 v2 = [v1 _isCarPlayHumanPresenceInRange];

  return v2;
}

void sub_100C911B0(id a1, BOOL a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100C91224;
  block[3] = &unk_1012EBAF0;
  BOOL v3 = a2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100C91224(uint64_t a1)
{
  id v2 = +[UIScreen _carScreen];
  [v2 _setCarPlayHumanPresenceInRange:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100C9127C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"List deactivation reasons over map" defaultsKey:@"CarInternalShowDeactivationReasons"];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Avoid all map deactivation", MapsConfig_CarAvoidAllMapDeactivation, off_1015F0F28 geoConfigKey];
  [(MapsDebugTableSection *)v4 setFooter:@"The map is automatically deactivated in certain circumstances where it isn't visible for performance reasons."];
}

void sub_100C91304(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Use CarPlay.fw SPIs for metadata sharing *" geoConfigKey:MapsConfig_CarPlayShouldUseCPMetadataSPIs off_1015F0B48];
  id v5 = [v3 addSwitchRowWithTitle:@"Enable Low Fuel*" get:&stru_10131DFF8 set:&stru_10131E018];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C914AC;
  _OWORD v10[3] = &unk_1012E6708;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Start updating vehicle sensor data" action:v10];
  id v7 = [v3 addSwitchRowWithTitle:@"External Accessory Logging" defaultsKey:@"MapsEALoggingKey"];
  id v8 = [v3 addSwitchRowWithTitle:@"Simulate Destination Handoff Available" defaultsKey:@"StarkDestinationSharingEnableKey"];
  id v9 = [v3 addSwitchRowWithTitle:@"Debug Destination Handoff Output" defaultsKey:@"StarkDestinationSharingTestKey"];
  [v3 setFooter:@"Simulate Destination Handoff Available - Shows the handoff button even in cars that don't support it.\nDebug Destination Handoff Output - Instead of trying to send the destination to the car, it's fed to an activity controller instead for email/AirDrop, etc. Canceling the activity controller will trigger a handoff failure response.\n*Restart maps after changing state"];
  objc_destroyWeak(&v11);
}

void sub_100C91470(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100C91488(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C91498(id a1, BOOL a2)
{
}

void sub_100C914AC(id *a1)
{
  id v7 = +[MKLocationManager sharedLocationManager];
  [v7 startVehicleSpeedUpdate];
  [v7 startVehicleHeadingUpdate];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(a1);
  id v5 = [v3 allVisibleMapViewsForDebugController:v4];
  id v6 = [v5 firstObject];

  [v6 _setUseVehicleHeading:1];
  [v6 setUserTrackingMode:2];
}

void sub_100C9158C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enabled", MapKitConfig_VectorKitDebugConsoleEnabled[0], MapKitConfig_VectorKitDebugConsoleEnabled[1] geoConfigKey];
}

void sub_100C915C4(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_CarDisconnectedAndIdleTimeout;
  id v3 = off_1015F0F08;
  id v8 = a2;
  id v4 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Disconnected and idle", @"(seconds)", 2, v2, v3 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Navigation obscured" placeholderText:@"(seconds)" inputType:1 get:&stru_10131E078 set:&stru_10131E098];
  id v6 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Destination handoff" placeholderText:@"(seconds)" inputType:1 get:&stru_10131E0B8 set:&stru_10131E0D8];
  id v7 = [(MapsDebugTableSection *)v8 addTextFieldRowWithTitle:@"Content AutoHide" placeholderText:@"(seconds)" inputType:1 get:&stru_10131E0F8 set:&stru_10131E118];
  [(MapsDebugTableSection *)v8 setFooter:@"No screen ownership: how long after we lose the main CarPlay application scene before we suppress its chrome.\nDisconnected and idle: How long after we lose the main CarPlay screen before we destroy our chrome.\nNavigation obscured: while navigating, how long a context can sit on top of navigation before being purged (if permitted).\nDestination handoff: how long we wait for a success/failure notification from the car when sharing a destination.\nNavBar AutoHide: how long we wait to hide the nav bar after the last interaction."];
}

NSString *__cdecl sub_100C916E4(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  uint64_t v2 = [v1 stringForKey:@"CarNavigationObscuredTimeoutInterval"];

  return (NSString *)v2;
}

void sub_100C91740(id a1, NSString *a2)
{
  id v4 = a2;
  uint64_t v2 = v4;
  if (![(NSString *)v4 length])
  {

    uint64_t v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"CarNavigationObscuredTimeoutInterval"];
}

NSString *__cdecl sub_100C917C8(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  uint64_t v2 = [v1 stringForKey:@"__internal__CarDestinationHandoffTimeoutInterval"];

  return (NSString *)v2;
}

void sub_100C91824(id a1, NSString *a2)
{
  id v4 = a2;
  uint64_t v2 = v4;
  if (![(NSString *)v4 length])
  {

    uint64_t v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"__internal__CarDestinationHandoffTimeoutInterval"];
}

NSString *__cdecl sub_100C918AC(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  uint64_t v2 = [v1 stringForKey:@"CarAutoHideContentTimeInterval"];

  return (NSString *)v2;
}

void sub_100C91908(id a1, NSString *a2)
{
  id v4 = a2;
  uint64_t v2 = v4;
  if (![(NSString *)v4 length])
  {

    uint64_t v2 = 0;
  }
  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 setObject:v2 forKey:@"CarAutoHideContentTimeInterval"];
}

void sub_100C91990(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addSwitchRowWithTitle:@"Default to iPhone SAR categories" defaultsKey:@"EnableCarSARCategoryWorkaround"];
  [(MapsDebugTableSection *)v3 setFooter:@"This setting will take effect the next time you show SAR"];
}

void sub_100C919F4(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Set Route Genius Active" action:&stru_10131E178];
}

void sub_100C91A28(id a1)
{
  id v3 = +[CarDisplayController sharedInstance];
  uint64_t v1 = [v3 routeGeniusManager];
  id v2 = +[CarRouteGeniusManager sharedDebugPanelChrome];
  [v1 activateIfPossibleForChrome:v2];
}

void sub_100C91AA8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Keyboard" defaultsKey:@"StarkSearchEnableKeyboard"];
}

void sub_100C91ADC(id a1, MapsDebugTableSection *a2)
{
  id v17 = a2;
  LODWORD(v2) = 1.0;
  LODWORD(v3) = 0.25;
  id v4 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Hold magnitude" subtitleStringFormat:@"%.2f" min:@"CarMapNudgerizerMagnitudeHold" max:&stru_10131E1D8 defaultsKey:0.0 sliderValueIfUnset:v2 changeHandler:v3];
  LODWORD(v5) = 1050253722;
  LODWORD(v6) = 1.0;
  id v7 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Impulse magnitude" subtitleStringFormat:@"%.2f" min:@"CarMapNudgerizerMagnitudeImpulse" max:&stru_10131E1F8 defaultsKey:0.0 sliderValueIfUnset:v6 changeHandler:v5];
  LODWORD(v8) = 1036831949;
  LODWORD(v9) = 1.0;
  id v10 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Impulse magnitude acceleration" subtitleStringFormat:@"%.2f" min:@"CarMapNudgerizerMagnitudeImpulseAcceleration" max:&stru_10131E218 defaultsKey:0.0 sliderValueIfUnset:v9 changeHandler:v8];
  LODWORD(v11) = *(_DWORD *)"333?";
  LODWORD(v12) = 1.0;
  id v13 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Impulse max magnitude" subtitleStringFormat:@"%.2f" min:@"CarMapNudgerizerMagnitudeImpulseMax" max:&stru_10131E238 defaultsKey:0.0 sliderValueIfUnset:v12 changeHandler:v11];
  LODWORD(v14) = 1114636288;
  LODWORD(v15) = 5.0;
  id v16 = [(MapsDebugTableSection *)v17 addSliderRowWithTitle:@"Acceleration timeout" subtitleStringFormat:@"%.2f" min:@"CarMapNudgerizerImpulseAccelerationTimeout" max:&stru_10131E258 defaultsKey:0.0 sliderValueIfUnset:v14 changeHandler:v15];
}

void sub_100C91C48(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"CarMapNudgerizerMagnitudeHold" forKey:v3];
}

void sub_100C91CA8(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"CarMapNudgerizerMagnitudeImpulse" forKey:v3];
}

void sub_100C91D08(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"CarMapNudgerizerMagnitudeImpulseAcceleration" forKey:v3];
}

void sub_100C91D68(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"CarMapNudgerizerMagnitudeImpulseMax" forKey:v3];
}

void sub_100C91DC8(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"CarMapNudgerizerImpulseAccelerationTimeout" forKey:v3];
}

void sub_100C91E28(id a1, MapsDebugTableSection *a2)
{
  id v23 = a2;
  id v2 = [(MapsDebugTableSection *)v23 addSwitchRowWithTitle:@"Enable One handed Zoom Gesture" defaultsKey:@"__internal__CarPlayOneHandedZoomEnabled" switchOnStateIfUnset:+[CarChromeViewController allowOneHandedZooming] changeHandler:&stru_10131E298];
  LODWORD(v3) = 0.5;
  LODWORD(v4) = 1.5;
  LODWORD(v5) = 1.0;
  id v6 = [(MapsDebugTableSection *)v23 addSliderRowWithTitle:@"Dragging Resistance Scale" subtitleStringFormat:@"%.2f" min:@"__internal__CarPlayOneHandedZoomDraggingResistance" max:&stru_10131E2B8 defaultsKey:v3 sliderValueIfUnset:v4 changeHandler:v5];
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 15.0;
  LODWORD(v9) = 1.5;
  id v10 = [(MapsDebugTableSection *)v23 addSliderRowWithTitle:@"Minimum velocity threshold for deceleration animation" subtitleStringFormat:@"%.2f" min:@"__internal__CarPlayOneHandedZoomMinimumVelocity" max:&stru_10131E2D8 defaultsKey:v7 sliderValueIfUnset:v8 changeHandler:v9];
  LODWORD(v11) = 5.0;
  LODWORD(v12) = 15.0;
  LODWORD(v13) = 10.0;
  id v14 = [(MapsDebugTableSection *)v23 addSliderRowWithTitle:@"Maximum velocity for zoom in deceleration animation" subtitleStringFormat:@"%.2f" min:@"__internal__CarPlayOneHandedZoomInMaximumVelocity" max:&stru_10131E2F8 defaultsKey:v11 sliderValueIfUnset:v12 changeHandler:v13];
  LODWORD(v15) = 0.5;
  LODWORD(v16) = 10.0;
  LODWORD(v17) = 1.5;
  id v18 = [(MapsDebugTableSection *)v23 addSliderRowWithTitle:@"Maximum velocity for zoom out deceleration animation" subtitleStringFormat:@"%.2f" min:@"__internal__CarPlayOneHandedZoomOutMaximumVelocity" max:&stru_10131E318 defaultsKey:v15 sliderValueIfUnset:v16 changeHandler:v17];
  LODWORD(v19) = 1.0;
  LODWORD(v20) = 5.0;
  LODWORD(v21) = 2.5;
  id v22 = [(MapsDebugTableSection *)v23 addSliderRowWithTitle:@"Zoom Out friction scale" subtitleStringFormat:@"%.1f" min:@"__internal__CarPlayOneHandedZoomOutFrictionScale" max:&stru_10131E338 defaultsKey:v19 sliderValueIfUnset:v20 changeHandler:v21];
}

void sub_100C91FC4(id a1, BOOL a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C92018(id a1, float a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C9206C(id a1, float a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C920C0(id a1, float a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C92114(id a1, float a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C92168(id a1, float a2)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 postNotificationName:@"CarPlayOneHandedZoomingSettingDidChangeNotification" object:0];
}

void sub_100C921BC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addNavigationRowWithTitle:@"Configure interruption" viewControllerContent:&stru_10131E378];
}

void sub_100C921F0(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x2020000000;
  v34[3] = 0;
  uint64_t v28 = 0;
  id v29 = &v28;
  uint64_t v30 = 0x3032000000;
  double v31 = sub_1001044B0;
  double v32 = sub_100104AC8;
  id v33 = @"Debug interruption";
  uint64_t v22 = 0;
  id v23 = &v22;
  uint64_t v24 = 0x3032000000;
  double v25 = sub_1001044B0;
  double v26 = sub_100104AC8;
  double v27 = @"Some very long message that tells us something useful.";
  v21[0] = 0;
  v21[1] = v21;
  v21[2] = 0x2020000000;
  v21[3] = 3;
  double v3 = objc_alloc_init(MapsDebugTableSection);
  v19[4] = v34;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  v20[2] = sub_100C9266C;
  v20[3] = &unk_10131E3A0;
  void v20[4] = v34;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C92680;
  v19[3] = &unk_10131E3C8;
  LODWORD(v4) = 4.0;
  id v5 = [(MapsDebugTableSection *)v3 addSliderRowWithTitle:@"Count" subtitleStringFormat:@"%.0f" min:v20 max:v19 get:0.0 set:v4];
  uint64_t v6 = v29[5];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100C92694;
  v18[3] = &unk_101319E38;
  void v18[4] = &v28;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100C926A4;
  v17[3] = &unk_101319E60;
  v17[4] = &v28;
  id v7 = [(MapsDebugTableSection *)v3 addTextFieldRowWithTitle:@"Title" placeholderText:v6 inputType:0 get:v18 set:v17];
  uint64_t v8 = v23[5];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C926B4;
  v16[3] = &unk_101319E38;
  v16[4] = &v22;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C926C4;
  v15[3] = &unk_101319E60;
  v15[4] = &v22;
  id v9 = [(MapsDebugTableSection *)v3 addTextFieldRowWithTitle:@"Message" placeholderText:v8 inputType:0 get:v16 set:v15];
  [(MapsDebugValuesViewController *)v2 addSection:v3];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C926D4;
  v14[3] = &unk_101319258;
  void v14[4] = v21;
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Interrupt Kind" content:v14];
  double v11 = objc_alloc_init(MapsDebugTableSection);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100C92860;
  v13[3] = &unk_1012F1A20;
  void v13[4] = &v28;
  void v13[5] = &v22;
  v13[6] = v34;
  v13[7] = v21;
  id v12 = [(MapsDebugTableSection *)v11 addButtonRowWithTitle:@"Trigger" action:v13];
  [(MapsDebugValuesViewController *)v2 addSection:v11];

  _Block_object_dispose(v21, 8);
  _Block_object_dispose(&v22, 8);

  _Block_object_dispose(&v28, 8);
  _Block_object_dispose(v34, 8);
}

void sub_100C9262C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

float sub_100C9266C(uint64_t a1)
{
  return (float)*(unint64_t *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C92680(uint64_t result, float a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = vcvtas_u32_f32(a2);
  return result;
}

id sub_100C92694(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
}

void sub_100C926A4(uint64_t a1, void *a2)
{
}

id sub_100C926B4(uint64_t a1)
{
  return *(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
}

void sub_100C926C4(uint64_t a1, void *a2)
{
}

id sub_100C926D4(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C92810;
  v4[3] = &unk_101319EA8;
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C9282C;
  v3[3] = &unk_1012F1768;
  void v3[4] = v5;
  return [a2 addCheckmarkRowsGroupWithContent:&stru_10131E3E8 get:v4 set:v3];
}

void sub_100C9279C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  double v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Generic Error" value:&off_1013AAE10];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"NavSim" value:&off_1013AAE28];
}

NSNumber *sub_100C92810(uint64_t a1)
{
  return +[NSNumber numberWithInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C9282C(uint64_t a1, void *a2)
{
  id result = [a2 integerValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

void sub_100C92860(void *a1)
{
  id v7 = (id)objc_opt_new();
  [v7 setObject:*(void *)(*(void *)(a1[4] + 8) + 40) forKeyedSubscript:@"kMapsInterruptionTitle"];
  [v7 setObject:*(void *)(*(void *)(a1[5] + 8) + 40) forKeyedSubscript:@"kMapsInterruptionMessage"];
  id v2 = objc_opt_new();
  if (*(void *)(*(void *)(a1[6] + 8) + 24))
  {
    unint64_t v3 = 0;
    do
    {
      double v4 = +[NSString stringWithFormat:@"Action %lu", v3];
      uint64_t v5 = +[MapsInterruptionAction actionWithTitle:v4 cancels:0 handler:0];

      [v2 addObject:v5];
      ++v3;
    }
    while (v3 < *(void *)(*(void *)(a1[6] + 8) + 24));
  }
  if ([v2 count]) {
    [v7 setObject:v2 forKeyedSubscript:@"kMapsInterruptionActions"];
  }
  uint64_t v6 = +[UIApplication sharedMapsDelegate];
  [v6 interruptApplicationWithKind:*(void *)(*(void *)(a1[7] + 8) + 24) userInfo:v7 completionHandler:&stru_10131E408];
}

void sub_100C929EC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addNavigationRowWithTitle:@"Add Card" viewControllerContent:&stru_10131E448];
}

void sub_100C92A20(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  v41[0] = 0;
  v41[1] = v41;
  v41[2] = 0x2020000000;
  v41[3] = 0;
  v40[0] = 0;
  v40[1] = v40;
  v40[2] = 0x2020000000;
  v40[3] = 1;
  v39[0] = 0;
  v39[1] = v39;
  v39[2] = 0x2020000000;
  v39[3] = 1;
  v38[0] = 0;
  v38[1] = v38;
  v38[2] = 0x2020000000;
  v38[3] = 0;
  v36[0] = 0;
  v36[1] = v36;
  v36[2] = 0x2020000000;
  int v37 = 0;
  v35[0] = 0;
  v35[1] = v35;
  v35[2] = 0x2020000000;
  v35[3] = 0;
  v33[0] = 0;
  v33[1] = v33;
  v33[2] = 0x2020000000;
  int v34 = 0;
  v31[0] = 0;
  v31[1] = v31;
  v31[2] = 0x2020000000;
  char v32 = 0;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x2020000000;
  void v30[3] = 0;
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x2020000000;
  char v29 = 0;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  char v27 = 0;
  v25[0] = 0;
  v25[1] = v25;
  v25[2] = 0x2020000000;
  v25[3] = 1;
  v23[0] = 0;
  v23[1] = v23;
  v23[2] = 0x2020000000;
  char v24 = 1;
  v22[0] = 0;
  v22[1] = v22;
  void v22[2] = 0x2020000000;
  v22[3] = 1;
  v21[0] = 0;
  v21[1] = v21;
  v21[2] = 0x2020000000;
  v21[3] = 1;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x2020000000;
  v20[3] = 0x4049000000000000;
  v19[0] = 0;
  v19[1] = v19;
  v19[2] = 0x2020000000;
  v19[3] = 0x4059000000000000;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100C930D8;
  v18[3] = &unk_10131E4D8;
  void v18[4] = v41;
  void v18[5] = v40;
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Position" content:v18];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100C93594;
  v17[3] = &unk_10131E590;
  v17[4] = v39;
  void v17[5] = v38;
  v17[6] = v36;
  v17[7] = v35;
  v17[8] = v33;
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Primary Axis" content:v17];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C94054;
  v16[3] = &unk_101319258;
  v16[4] = v31;
  id v5 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Stays On Top" content:v16];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C9413C;
  v15[3] = &unk_101319258;
  v15[4] = v30;
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Pinned Edges" content:v15];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C943BC;
  v14[3] = &unk_10131E608;
  void v14[4] = v28;
  void v14[5] = v26;
  v14[6] = v20;
  v14[7] = v19;
  id v7 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Size" content:v14];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100C94734;
  v13[3] = &unk_10131E630;
  void v13[4] = v25;
  void v13[5] = v23;
  v13[6] = v22;
  id v8 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Stack" content:v13];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C949E4;
  v12[3] = &unk_101319258;
  void v12[4] = v21;
  id v9 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Stack Alignment" content:v12];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100C94BB0;
  v11[3] = &unk_10131E6C0;
  void v11[4] = v41;
  void v11[5] = v39;
  v11[6] = v30;
  v11[7] = v38;
  v11[8] = v35;
  v11[9] = v40;
  v11[10] = v36;
  v11[11] = v33;
  v11[12] = v19;
  v11[13] = v20;
  v11[14] = v31;
  v11[15] = v28;
  v11[16] = v26;
  v11[17] = v25;
  v11[18] = v23;
  v11[19] = v22;
  v11[20] = v21;
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:&stru_101324E70 content:v11];
  _Block_object_dispose(v19, 8);
  _Block_object_dispose(v20, 8);
  _Block_object_dispose(v21, 8);
  _Block_object_dispose(v22, 8);
  _Block_object_dispose(v23, 8);
  _Block_object_dispose(v25, 8);
  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v28, 8);
  _Block_object_dispose(v30, 8);
  _Block_object_dispose(v31, 8);
  _Block_object_dispose(v33, 8);
  _Block_object_dispose(v35, 8);
  _Block_object_dispose(v36, 8);
  _Block_object_dispose(v38, 8);
  _Block_object_dispose(v39, 8);
  _Block_object_dispose(v40, 8);
  _Block_object_dispose(v41, 8);
}

void sub_100C93000(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x210], 8);
  _Block_object_dispose(&STACK[0x230], 8);
  _Block_object_dispose(&STACK[0x250], 8);
  _Block_object_dispose(&STACK[0x270], 8);
  _Block_object_dispose(&STACK[0x290], 8);
  _Block_object_dispose(&STACK[0x2B0], 8);
  _Block_object_dispose(&STACK[0x2D0], 8);
  _Block_object_dispose(&STACK[0x2F0], 8);
  _Block_object_dispose(&STACK[0x310], 8);
  _Block_object_dispose(&STACK[0x330], 8);
  _Block_object_dispose(&STACK[0x350], 8);
  _Block_object_dispose(&STACK[0x370], 8);
  _Block_object_dispose((const void *)(v1 - 240), 8);
  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100C930D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v23 = 0;
  char v24 = &v23;
  uint64_t v25 = 0x3032000000;
  double v26 = sub_1001044B0;
  char v27 = sub_100104AC8;
  id v28 = 0;
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x3032000000;
  double v20 = sub_1001044B0;
  double v21 = sub_100104AC8;
  id v22 = 0;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C933F0;
  v16[3] = &unk_101319EA8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100C9340C;
  v13[3] = &unk_10131E490;
  long long v4 = *(_OWORD *)(a1 + 32);
  v16[4] = *(void *)(a1 + 32);
  long long v14 = v4;
  double v15 = &v17;
  uint64_t v5 = [v3 addCheckmarkRowsGroupWithContent:&stru_10131E468 get:v16 set:v13];
  id v6 = (void *)v24[5];
  v24[5] = v5;

  void v10[6] = &v23;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100C9351C;
  v11[3] = &unk_101319EA8;
  uint64_t v12 = *(void *)(a1 + 40);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C93538;
  _OWORD v10[3] = &unk_10131E490;
  uint64_t v7 = *(void *)(a1 + 32);
  void v10[4] = v12;
  void v10[5] = v7;
  uint64_t v8 = [v3 addCheckmarkRowsGroupWithContent:&stru_10131E4B0 get:v11 set:v10];
  id v9 = (void *)v18[5];
  void v18[5] = v8;

  _Block_object_dispose(&v17, 8);
  _Block_object_dispose(&v23, 8);
}

void sub_100C93318(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100C9333C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Top" value:&off_1013AADC8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Bottom" value:&off_1013AAE40];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Left" value:&off_1013AADE0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Right" value:&off_1013AAE58];
}

NSNumber *sub_100C933F0(uint64_t a1)
{
  return +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C9340C(void *a1, void *a2)
{
  *(void *)(*(void *)(a1[4] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [a2 unsignedIntegerValue];
  *(void *)(*(void *)(a1[5] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  id v3 = *(void **)(*(void *)(a1[6] + 8) + 40);

  return [v3 update];
}

void sub_100C93468(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Top Left" value:&off_1013AADC8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Bottom Left" value:&off_1013AAE40];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Top Right" value:&off_1013AADE0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Bottom Right" value:&off_1013AAE58];
}

NSNumber *sub_100C9351C(uint64_t a1)
{
  return +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C93538(void *a1, void *a2)
{
  *(void *)(*(void *)(a1[4] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [a2 unsignedIntegerValue];
  *(void *)(*(void *)(a1[5] + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  id v3 = *(void **)(*(void *)(a1[6] + 8) + 40);

  return [v3 update];
}

void sub_100C93594(uint64_t a1, void *a2)
{
  id v3 = a2;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C93738;
  v12[3] = &unk_10131E500;
  uint64_t v13 = *(void *)(a1 + 32);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100C93750;
  v11[3] = &unk_1012E83B0;
  void v11[4] = v13;
  id v4 = [v3 addSwitchRowWithTitle:@"Horizontal" get:v12 set:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C93764;
  v9[3] = &unk_10131E548;
  long long v10 = *(_OWORD *)(a1 + 40);
  id v5 = [v3 addNavigationRowWithTitle:@"Primary Axis Fill Mode" viewControllerContent:v9];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C93BDC;
  v7[3] = &unk_10131E548;
  long long v8 = *(_OWORD *)(a1 + 56);
  id v6 = [v3 addNavigationRowWithTitle:@"Secondary Axis Fill Mode" viewControllerContent:v7];
}

BOOL sub_100C93738(uint64_t a1)
{
  return *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) == 0;
}

uint64_t sub_100C93750(uint64_t result, int a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2 ^ 1u;
  return result;
}

void sub_100C93764(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C93864;
  v7[3] = &unk_101319258;
  void v7[4] = *(void *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Primary Axis Fill Mode" content:v7];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C93A50;
  v6[3] = &unk_101319258;
  void v6[4] = *(void *)(a1 + 40);
  id v5 = [v3 addSectionWithTitle:@"Priority" content:v6];
}

void sub_100C93864(uint64_t a1, void *a2)
{
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  double v11 = sub_100C93A00;
  uint64_t v12 = &unk_101319EA8;
  uint64_t v13 = *(void *)(a1 + 32);
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100C93A1C;
  uint64_t v7 = &unk_1012F1768;
  uint64_t v8 = v13;
  id v2 = a2;
  id v3 = [v2 addCheckmarkRowsGroupWithContent:&stru_10131E520 get:&v9 set:&v4];
  [v2 setFooter:@"* for horizontal, the width is capped to minimum of 320 and 38% of screen width. For vertical axis it behaves as .Fill", v4, v5, v6, v7, v8, v9, v10, v11, v12];
}

void sub_100C9394C(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Intrinsic" value:&off_1013AADB0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Restricted" value:&off_1013AADC8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Best for Screen*" value:&off_1013AADE0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Fill" value:&off_1013AADF8];
}

NSNumber *sub_100C93A00(uint64_t a1)
{
  return +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C93A1C(uint64_t a1, void *a2)
{
  id result = [a2 unsignedIntegerValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

void sub_100C93A50(uint64_t a1, void *a2)
{
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  double v11 = sub_100C93B44;
  uint64_t v12 = &unk_101319E38;
  uint64_t v13 = *(void *)(a1 + 32);
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100C93BA8;
  uint64_t v7 = &unk_101319E60;
  uint64_t v8 = v13;
  id v2 = a2;
  id v3 = [v2 addTextFieldRowWithTitle:@"Priority" placeholderText:@"0" inputType:1 get:&v9 set:&v4];
  [v2 setFooter:@"For Intrinsic fill mode, the higher the priority, the more space the card will have available compared to other, competing Intrinsic cards", v4, v5, v6, v7, v8, v9, v10, v11, v12];
}

id sub_100C93B44(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  id v2 = +[NSNumber numberWithFloat:a2];
  id v3 = [v2 stringValue];

  return v3;
}

id sub_100C93BA8(uint64_t a1, void *a2)
{
  id result = [a2 floatValue];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  return result;
}

void sub_100C93BDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C93CDC;
  v7[3] = &unk_101319258;
  void v7[4] = *(void *)(a1 + 32);
  id v4 = [v3 addSectionWithTitle:@"Secondary Axis Fill Mode" content:v7];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C93EC8;
  v6[3] = &unk_101319258;
  void v6[4] = *(void *)(a1 + 40);
  id v5 = [v3 addSectionWithTitle:@"Priority" content:v6];
}

void sub_100C93CDC(uint64_t a1, void *a2)
{
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  double v11 = sub_100C93E78;
  uint64_t v12 = &unk_101319EA8;
  uint64_t v13 = *(void *)(a1 + 32);
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100C93E94;
  uint64_t v7 = &unk_1012F1768;
  uint64_t v8 = v13;
  id v2 = a2;
  id v3 = [v2 addCheckmarkRowsGroupWithContent:&stru_10131E568 get:&v9 set:&v4];
  [v2 setFooter:@"* for horizontal, the width is capped to minimum of 640pt and 38% of screen width. For vertical axis it behaves as .Fill", v4, v5, v6, v7, v8, v9, v10, v11, v12];
}

void sub_100C93DC4(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Intrinsic" value:&off_1013AADB0];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Restricted" value:&off_1013AADC8];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Best for Screen" value:&off_1013AADE0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Fill" value:&off_1013AADF8];
}

NSNumber *sub_100C93E78(uint64_t a1)
{
  return +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C93E94(uint64_t a1, void *a2)
{
  id result = [a2 unsignedIntegerValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

void sub_100C93EC8(uint64_t a1, void *a2)
{
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  double v11 = sub_100C93FBC;
  uint64_t v12 = &unk_101319E38;
  uint64_t v13 = *(void *)(a1 + 32);
  id v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100C94020;
  uint64_t v7 = &unk_101319E60;
  uint64_t v8 = v13;
  id v2 = a2;
  id v3 = [v2 addTextFieldRowWithTitle:@"Priority" placeholderText:@"0" inputType:1 get:&v9 set:&v4];
  [v2 setFooter:@"For Intrinsic fill mode, the higher the priority, the more space the card will have available compared to other, competing Intrinsic cards", v4, v5, v6, v7, v8, v9, v10, v11, v12];
}

id sub_100C93FBC(uint64_t a1, double a2)
{
  LODWORD(a2) = *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  id v2 = +[NSNumber numberWithFloat:a2];
  id v3 = [v2 stringValue];

  return v3;
}

id sub_100C94020(uint64_t a1, void *a2)
{
  id result = [a2 floatValue];
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  return result;
}

id sub_100C94054(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C9411C;
  v4[3] = &unk_10131E500;
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C9412C;
  v3[3] = &unk_1012E83B0;
  void v3[4] = v5;
  return [a2 addSwitchRowWithTitle:@"Stays On Top" get:v4 set:v3];
}

uint64_t sub_100C9411C(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C9412C(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

void sub_100C9413C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10[0] = &off_1013AADC8;
  v10[1] = &off_1013AAE40;
  v11[0] = @"Top";
  v11[1] = @"Bottom";
  void v10[2] = &off_1013AADE0;
  _OWORD v10[3] = &off_1013AAE58;
  id v11[2] = @"Left";
  v11[3] = @"Right";
  int v4 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:4];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C94280;
  v7[3] = &unk_10131E5E0;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v6 = v3;
  [v4 enumerateKeysAndObjectsUsingBlock:v7];
}

void sub_100C94280(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = [a2 unsignedIntegerValue];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C94370;
  _OWORD v10[3] = &unk_10131E5B8;
  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  id v12 = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C94388;
  v9[3] = &unk_1012F5AA0;
  void v9[4] = v11;
  v9[5] = v6;
  id v8 = [v7 addSwitchRowWithTitle:v5 get:v10 set:v9];
}

BOOL sub_100C94370(uint64_t a1)
{
  return (*(void *)(a1 + 40) & ~*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) == 0;
}

uint64_t sub_100C94388(uint64_t result, int a2)
{
  uint64_t v2 = *(void *)(result + 40);
  uint64_t v3 = *(void *)(*(void *)(result + 32) + 8);
  if (a2) {
    uint64_t v4 = *(void *)(v3 + 24) | v2;
  }
  else {
    uint64_t v4 = *(void *)(v3 + 24) & ~v2;
  }
  *(void *)(v3 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v4;
  return result;
}

void sub_100C943BC(void *a1, void *a2)
{
  id v3 = a2;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100C946A4;
  v22[3] = &unk_10131E500;
  uint64_t v23 = a1[4];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100C946B4;
  v21[3] = &unk_1012E83B0;
  void v21[4] = v23;
  id v4 = [v3 addSwitchRowWithTitle:@"Grows" get:v22 set:v21];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C946C4;
  v19[3] = &unk_10131E500;
  uint64_t v20 = a1[5];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100C946D4;
  v18[3] = &unk_1012E83B0;
  void v18[4] = v20;
  id v5 = [v3 addSwitchRowWithTitle:@"Compresses" get:v19 set:v18];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C946E4;
  v16[3] = &unk_10131E3A0;
  uint64_t v17 = a1[6];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C946F8;
  v15[3] = &unk_10131E3C8;
  v15[4] = v17;
  LODWORD(v6) = 1128792064;
  LODWORD(v7) = 10.0;
  id v8 = [v3 addSliderRowWithTitle:@"Height" subtitleStringFormat:@"%.1f" min:v16 max:v15 get:v7 set:v6];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100C9470C;
  v13[3] = &unk_10131E3A0;
  uint64_t v14 = a1[7];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C94720;
  v12[3] = &unk_10131E3C8;
  void v12[4] = v14;
  LODWORD(v9) = 1137180672;
  LODWORD(v10) = 10.0;
  id v11 = [v3 addSliderRowWithTitle:@"Width" subtitleStringFormat:@"%.1f" min:v13 max:v12 get:v10 set:v9];
}

uint64_t sub_100C946A4(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C946B4(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

uint64_t sub_100C946C4(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C946D4(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

float sub_100C946E4(uint64_t a1)
{
  return *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

double sub_100C946F8(uint64_t a1, float a2)
{
  double result = a2;
  *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

float sub_100C9470C(uint64_t a1)
{
  return *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

double sub_100C94720(uint64_t a1, float a2)
{
  double result = a2;
  *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

void sub_100C94734(void *a1, void *a2)
{
  id v3 = a2;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C94970;
  v15[3] = &unk_10131E3A0;
  uint64_t v16 = a1[4];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C94984;
  v14[3] = &unk_10131E3C8;
  void v14[4] = v16;
  LODWORD(v4) = 4.0;
  id v5 = [v3 addSliderRowWithTitle:@"Count" subtitleStringFormat:@"%.0f" min:v15 max:v14 get:0.0 set:v4];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C94998;
  v12[3] = &unk_10131E500;
  uint64_t v13 = a1[5];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100C949A8;
  v11[3] = &unk_1012E83B0;
  void v11[4] = v13;
  id v6 = [v3 addSwitchRowWithTitle:@"Use card layout" get:v12 set:v11];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C949B8;
  v9[3] = &unk_10131E500;
  uint64_t v10 = a1[6];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100C949D0;
  v8[3] = &unk_1012E83B0;
  void v8[4] = v10;
  id v7 = [v3 addSwitchRowWithTitle:@"Horizontal" get:v9 set:v8];
}

float sub_100C94970(uint64_t a1)
{
  return (float)*(unint64_t *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C94984(uint64_t result, float a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = vcvtas_u32_f32(a2);
  return result;
}

uint64_t sub_100C94998(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
}

uint64_t sub_100C949A8(uint64_t result, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  return result;
}

BOOL sub_100C949B8(uint64_t a1)
{
  return *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) == 0;
}

uint64_t sub_100C949D0(uint64_t result, int a2)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2 ^ 1u;
  return result;
}

id sub_100C949E4(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C94B60;
  v4[3] = &unk_101319EA8;
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C94B7C;
  v3[3] = &unk_1012F1768;
  void v3[4] = v5;
  return [a2 addCheckmarkRowsGroupWithContent:&stru_10131E650 get:v4 set:v3];
}

void sub_100C94AAC(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Fill" value:&off_1013AAD68];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Leading/Top" value:&off_1013AAD80];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Center" value:&off_1013AAE10];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v6 addRowWithTitle:@"Trailing/Bottom" value:&off_1013AAE70];
}

NSNumber *sub_100C94B60(uint64_t a1)
{
  return +[NSNumber numberWithInteger:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

id sub_100C94B7C(uint64_t a1, void *a2)
{
  id result = [a2 integerValue];
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  return result;
}

void sub_100C94BB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C94C98;
  _OWORD v10[3] = &unk_10131E678;
  long long v4 = *(_OWORD *)(a1 + 48);
  long long v11 = *(_OWORD *)(a1 + 32);
  long long v12 = v4;
  long long v5 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = v5;
  long long v6 = *(_OWORD *)(a1 + 112);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = v6;
  long long v7 = *(_OWORD *)(a1 + 144);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = v7;
  uint64_t v19 = *(void *)(a1 + 160);
  id v8 = [v3 addButtonRowWithTitle:@"Make Card" action:v10];
  id v9 = [v3 addButtonRowWithTitle:@"Remove all Cards" action:&stru_10131E698];
}

void sub_100C94C98(void *a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1[4] + 8) + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(a1[5] + 8) + 24);
    uint64_t v4 = *(void *)(*(void *)(a1[6] + 8) + 24);
    uint64_t v5 = *(void *)(*(void *)(a1[7] + 8) + 24);
    uint64_t v6 = *(void *)(*(void *)(a1[8] + 8) + 24);
    float v7 = 1000.0;
    if ((v5 & 0xFFFFFFFFFFFFFFFELL) == 2) {
      float v8 = 1000.0;
    }
    else {
      float v8 = 1.0;
    }
    if ((v6 & 0xFFFFFFFFFFFFFFFELL) != 2) {
      float v7 = 1.0;
    }
    uint64_t v9 = 4 * (v2 == 1);
    if (v2 == 4) {
      uint64_t v9 = 1;
    }
    if (v2 == 2) {
      v9 |= 8uLL;
    }
    if (v2 == 8)
    {
      v9 |= 2uLL;
      unsigned int v10 = 1;
    }
    else
    {
      unsigned int v10 = 0;
    }
    uint64_t v11 = 2 * v10;
    if (v2 == 2) {
      uint64_t v11 = 8;
    }
    if (v2 == 1) {
      v11 |= 4uLL;
    }
    uint64_t v40 = *(void *)(*(void *)(a1[4] + 8) + 24);
    uint64_t v41 = 0;
    uint64_t v12 = v11 | (v2 == 4);
    uint64_t v42 = v3;
    uint64_t v43 = v4;
    if (v3 == 1) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = v9;
    }
    uint64_t v44 = v5;
    float v45 = v8;
    int v46 = 0;
    uint64_t v47 = v6;
    float v48 = v7;
  }
  else
  {
    uint64_t v14 = *(void *)(*(void *)(a1[9] + 8) + 24);
    uint64_t v15 = *(void *)(*(void *)(a1[5] + 8) + 24);
    uint64_t v16 = *(void *)(*(void *)(a1[6] + 8) + 24);
    uint64_t v17 = *(void *)(*(void *)(a1[7] + 8) + 24);
    uint64_t v18 = *(void *)(*(void *)(a1[8] + 8) + 24);
    if (v15 == 1)
    {
      _ZF = v14 == 1 || v14 == 4;
      uint64_t v13 = 8;
      if (!_ZF) {
        uint64_t v13 = 0;
      }
      if (v14 == 8 || v14 == 2) {
        v13 |= 2uLL;
      }
    }
    else if (v14 == 4 || v14 == 8)
    {
      uint64_t v13 = 1;
    }
    else
    {
      uint64_t v13 = 4 * ((unint64_t)(v14 - 1) < 2);
    }
    uint64_t v40 = 0;
    uint64_t v41 = v14;
    uint64_t v42 = v15;
    uint64_t v43 = v16;
    uint64_t v44 = v17;
    int v46 = 0;
    uint64_t v47 = v18;
  }
  id v49 = 0;
  id v50 = 0;
  __asm { FMOV            V0.2D, #8.0 }
  long long v51 = _Q0;
  long long v52 = _Q0;
  char v53 = 1;
  memset(v54, 0, sizeof(v54));
  uint64_t v55 = v13;
  char v56 = 0;
  uint64_t v26 = a1[11];
  float v45 = *(float *)(*(void *)(a1[10] + 8) + 24);
  float v48 = *(float *)(*(void *)(v26 + 8) + 24);
  double v27 = *(double *)(*(void *)(a1[12] + 8) + 24);
  double v28 = *(double *)(*(void *)(a1[13] + 8) + 24);
  long long v39 = +[NSValue value:&v40 withObjCType:"{?=QQqQQfQf@@{UIEdgeInsets=dddd}BQB}"];
  char v29 = +[NSValue valueWithCGSize:](NSValue, "valueWithCGSize:", v27, v28);
  uint64_t v30 = +[NSNotificationCenter defaultCenter];
  v58[0] = v39;
  v57[0] = @"Layout";
  v57[1] = @"StaysOnTop";
  double v31 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1[14] + 8) + 24)];
  v58[1] = v31;
  v58[2] = v29;
  v57[2] = @"Size";
  v57[3] = @"Grows";
  char v32 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1[15] + 8) + 24)];
  v58[3] = v32;
  v57[4] = @"Compresses";
  id v33 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1[16] + 8) + 24)];
  v58[4] = v33;
  v57[5] = @"StackCount";
  int v34 = +[NSNumber numberWithUnsignedInteger:*(void *)(*(void *)(a1[17] + 8) + 24)];
  v58[5] = v34;
  v57[6] = @"StackUseCardLayout";
  uint64_t v35 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1[18] + 8) + 24)];
  v58[6] = v35;
  v57[7] = @"StackAxis";
  id v36 = +[NSNumber numberWithInteger:*(void *)(*(void *)(a1[19] + 8) + 24)];
  v58[7] = v36;
  v57[8] = @"StackAlignment";
  int v37 = +[NSNumber numberWithInteger:*(void *)(*(void *)(a1[20] + 8) + 24)];
  v58[8] = v37;
  uint64_t v38 = +[NSDictionary dictionaryWithObjects:v58 forKeys:v57 count:9];
  [v30 postNotificationName:@"__internal_CarCardTestDebug" object:0 userInfo:v38];
}

void sub_100C950FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_100C95124(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"__internal_CarCardTestDebug" object:0 userInfo:&off_1013AEF10];
}

void sub_100C95180(id a1, MapsDebugTableSection *a2)
{
  uint64_t v11 = a2;
  id v2 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Change camera mode on IC connection changes", MapsConfig_InstrumentClusterConnectionCameraStyleToggleEnabled, off_1015F0C48 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v11 addEmptySectionBannerRowWithTitle:@"IC Dual Screen Camera Behavior"];
  id v4 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v11, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131E700, MapsConfig_CarPlayHybridInstrumentClusterCameraStyleDualScreenBehavior, off_1015F11A8, &stru_10131E720, &stru_10131E740);
  id v5 = [(MapsDebugTableSection *)v11 addEmptySectionBannerRowWithTitle:@"IC Single Screen Camera Behavior"];
  id v6 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v11, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131E760, MapsConfig_CarPlayHybridInstrumentClusterCameraStyleSingleScreenBehavior, off_1015F11B8, &stru_10131E780, &stru_10131E7A0);
  id v7 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Force dual display config" defaultsKey:@"CarDisplayConfigForceDualDisplayKey"];
  id v8 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Hide current location text label", MapsConfig_InstrumentClusterHideCurrentLocationTextLabel, off_1015F0C78 geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Hide guidance card in center display" defaultsKey:@"CarNavigationHideGuidanceCard"];
  id v10 = [(MapsDebugTableSection *)v11 addNavigationRowWithTitle:@"Hybrid IC" viewControllerContent:&stru_10131E7C0];
}

void sub_100C952F4(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Overview" value:&off_1013AAE88];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Detailed" value:&off_1013AAEA0];
}

id sub_100C95368(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C953B4(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C953F0(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Overview" value:&off_1013AAE88];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Detailed" value:&off_1013AAEA0];
}

id sub_100C95464(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C954B0(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C954EC(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Hybrid IC" content:&stru_10131E7E0];
  id v4 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Force hybrid IC everywhere" content:&stru_10131E800];
  [v4 setFooter:@"Force all instrument cluster displays to render the hybrid stream. Requires relaunching Maps to take effect."];
  id v5 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Dynamic content scale" content:&stru_10131E820];
  id v6 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Physical size override" content:&stru_10131E860];
  id v7 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Guidance card" content:&stru_10131E8A0];
  id v8 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"ETA tray" content:&stru_10131E8C0];
  id v9 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Flexible UI" content:&stru_10131E8E0];
  id v10 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Alignment style" content:&stru_10131E980];
  id v11 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Card alignment" content:&stru_10131EA20];
  id v12 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Narrow card width" content:&stru_10131EAC0];
  id v13 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Map inset centering" content:&stru_10131EB00];
  id v14 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Camera styles" content:&stru_10131EB40];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100C96834;
  void v23[3] = &unk_1012FBC50;
  char v24 = &stru_10131EC40;
  id v15 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Compass override" content:v23];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100C969BC;
  v21[3] = &unk_1012FBC50;
  id v22 = &stru_10131EC40;
  id v16 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Speed limit override" content:v21];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C96B44;
  v19[3] = &unk_1012FBC50;
  uint64_t v20 = &stru_10131EC40;
  id v17 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"ETA tray override" content:v19];
  id v18 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"Clear all overrides" content:&stru_10131EDA8];
}

void sub_100C95804(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Hybrid IC enabled", MapsConfig_HybridInstrumentClusterEnabled, off_1015F0838 geoConfigKey];
}

void sub_100C9583C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Hybrid IC everywhere", MapsConfig_CarPlayHybridInstrumentClusterEverywhere, off_1015F10A8 geoConfigKey];
}

void sub_100C95874(id a1, MapsDebugTableSection *a2)
{
  id v13 = a2;
  id v2 = [(MapsDebugTableSection *)v13 addSwitchRowWithTitle:@"Enabled", MapsConfig_HybridInstrumentClusterDynamicScalingEnabled, off_1015F1288 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline screen width (pixels)", @"1920", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPixelWidth, off_1015F11F8 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline screen height (pixels)", @"720", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPixelHeight, off_1015F1208 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline screen width (mm)", @"293", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPhysicalWidth, off_1015F1218 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline screen height (mm)", @"110", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPhysicalHeight, off_1015F1228 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline maneuver width (pixels)", @"330", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineManeuverPixelWidth, off_1015F1238 placeholderText inputType geoConfigKeyDouble];
  id v8 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline maneuver height (pixels)", @"115", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineManeuverPixelHeight, off_1015F1248 placeholderText inputType geoConfigKeyDouble];
  id v9 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Baseline content scale", @"2.0", 2, MapsConfig_CarPlayHybridInstrumentClusterDynamicScaleBaselineContentScale, off_1015F11E8 placeholderText inputType geoConfigKeyDouble];
  id v10 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Point scale override", @"-1", 2, MapsConfig_HybridInstrumentClusterDynamicPointScaleValueOverride, off_1015F1308 placeholderText inputType geoConfigKeyDouble];
  id v11 = [(MapsDebugTableSection *)v13 addGEOTextFieldRowWithTitle:@"Pixel scale override", @"-1", 2, MapsConfig_HybridInstrumentClusterDynamicPixelScaleValueOverride, off_1015F1318 placeholderText inputType geoConfigKeyDouble];
  id v12 = [(MapsDebugTableSection *)v13 addButtonRowWithTitle:@"Clear scale overrides" action:&stru_10131E840];
}

void sub_100C95AA4(id a1)
{
  _GEOConfigRemoveValue();

  _GEOConfigRemoveValue();
}

void sub_100C95AE4(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Width (mm)", @"-1", 2, MapsConfig_CarPlayHybridInstrumentClusterScreenPhysicalSizeDebugWidthOverride, off_1015F1268 placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Height (mm)", @"-1", 2, MapsConfig_CarPlayHybridInstrumentClusterScreenPhysicalSizeDebugHeightOverride, off_1015F1278 placeholderText inputType geoConfigKeyDouble];
  id v4 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Clear overrides" action:&stru_10131E880];
}

void sub_100C95BA0(id a1)
{
  _GEOConfigRemoveValue();

  _GEOConfigRemoveValue();
}

void sub_100C95BE0(id a1, MapsDebugTableSection *a2)
{
  id v9 = a2;
  id v2 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Guidance card enabled", MapsConfig_HybridInstrumentClusterGuidanceCardEnabled, off_1015F0C38 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Hide secondary guidance", MapsConfig_CarPlayHybridInstrumentClusterHideSecondaryGuidance, off_1015F10E8 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v9 addEmptySectionBannerRowWithTitle:@"Visibility"];
  id v5 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Overview mode - narrow", MapsConfig_CarPlayHybridInstrumentClusterGuidanceCardVisibleOverviewNarrow, off_1015F10F8 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Detail mode - narrow", MapsConfig_CarPlayHybridInstrumentClusterGuidanceCardVisibleDetailNarrow, off_1015F1108 geoConfigKey];
  id v7 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Overview mode - wide", MapsConfig_CarPlayHybridInstrumentClusterGuidanceCardVisibleOverviewWide, off_1015F1138 geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v9 addSwitchRowWithTitle:@"Detail mode - wide", MapsConfig_CarPlayHybridInstrumentClusterGuidanceCardVisibleDetailWide, off_1015F1148 geoConfigKey];
}

void sub_100C95D04(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addEmptySectionBannerRowWithTitle:@"Visibility"];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Overview mode - narrow", MapsConfig_CarPlayHybridInstrumentClusterETATrayVisibleOverviewNarrow, off_1015F1118 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Detail mode - narrow", MapsConfig_CarPlayHybridInstrumentClusterETATrayVisibleDetailNarrow, off_1015F1128 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Overview mode - wide", MapsConfig_CarPlayHybridInstrumentClusterETATrayVisibleOverviewWide, off_1015F1158 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Detail mode - wide", MapsConfig_CarPlayHybridInstrumentClusterETATrayVisibleDetailWide, off_1015F1168 geoConfigKey];
}

void sub_100C95DE0(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enabled", MapsConfig_HybridInstrumentClusterFlexibleUIEnabled, off_1015F1298 geoConfigKey];
  id v3 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v6, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131E900, MapsConfig_HybridInstrumentClusterFlexibleUILayoutOverride, off_1015F12B8, &stru_10131E920, &stru_10131E940);
  id v4 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Clear override" action:&stru_10131E960];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"ETA tray visibility requirement ratio", @"0.3", 2, MapsConfig_HybridInstrumentClusterFlexibleUIETATrayVisibilityRequirementRatio, off_1015F12C8 placeholderText inputType geoConfigKeyDouble];
}

void sub_100C95EBC(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Maneuver only" value:&off_1013AAEB8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Maneuver + map" value:&off_1013AAE88];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Maneuver + map + other" value:&off_1013AAEA0];
}

id sub_100C95F50(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C95F9C(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C95FD8(id a1)
{
}

void sub_100C95FE8(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v5, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131E9A0, MapsConfig_HybridInstrumentClusterAlignmentStyleOverride, off_1015F12D8, &stru_10131E9C0, &stru_10131E9E0);
  id v3 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Clear override" action:&stru_10131EA00];
  id v4 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Wide alignment width multiple requirement", @"2.0", 2, MapsConfig_HybridInstrumentClusterAlignmentStyleManeuverScaledWidthMultiple, off_1015F12E8 placeholderText inputType geoConfigKeyDouble];
}

void sub_100C960A0(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Narrow" value:&off_1013AAEB8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Wide" value:&off_1013AAE88];
}

id sub_100C96114(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C96160(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C9619C(id a1)
{
}

void sub_100C961AC(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enabled", MapsConfig_HybridInstrumentClusterCardAlignmentEnabled, off_1015F12A8 geoConfigKey];
  id v3 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v5, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131EA40, MapsConfig_CarPlayHybridInstrumentClusterAlignmentOverride, off_1015F1188, &stru_10131EA60, &stru_10131EA80);
  id v4 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Clear override" action:&stru_10131EAA0];
}

void sub_100C96258(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Center" value:&off_1013AAEB8];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Left" value:&off_1013AAE88];
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v5 addRowWithTitle:@"Right" value:&off_1013AAEA0];
}

id sub_100C962EC(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C96338(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C96374(id a1)
{
}

void sub_100C96384(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Max card width", @"300", 2, MapsConfig_HybridInstrumentClusterNarrowAlignmentStyleCardMaxWidth, off_1015F1348 placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear override" action:&stru_10131EAE0];
}

void sub_100C96408(id a1)
{
}

void sub_100C96418(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addGEOTextFieldRowWithTitle:@"Maneuver width multiple requirement", @"3", 2, MapsConfig_HybridInstrumentClusterFlexibleMapInsetCenteringScaledManeuverWidthMultipleRequirement, off_1015F1358 placeholderText inputType geoConfigKeyDouble];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear override" action:&stru_10131EB20];
}

void sub_100C9649C(id a1)
{
}

void sub_100C964AC(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addEmptySectionBannerRowWithTitle:@"Default center console camera style"];
  id v3 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v6, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131EB60, MapsConfig_CarPlayDefaultCenterConsoleCameraStyle, off_1015F11C8, &stru_10131EB80, &stru_10131EBA0);
  id v4 = [(MapsDebugTableSection *)v6 addEmptySectionBannerRowWithTitle:@"Default hybrid IC camera style"];
  id v5 = -[MapsDebugTableSection addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:](v6, "addCheckmarkRowsGroupWithContent:backingGeoConfigKey:get:set:", &stru_10131EBC0, MapsConfig_CarPlayDefaultHybridInstrumentClusterCameraStyle, off_1015F11D8, &stru_10131EBE0, &stru_10131EC00);
}

void sub_100C96578(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Trench" value:&off_1013AAE88];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Overview" value:&off_1013AAEA0];
}

id sub_100C965EC(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C96638(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C96674(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Trench" value:&off_1013AAE88];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v4 addRowWithTitle:@"Overview" value:&off_1013AAEA0];
}

id sub_100C966E8(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C96734(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C96770(id a1, MapsDebugCheckmarkRowsGroup *a2, BOOL a3)
{
  BOOL v3 = a3;
  id v8 = a2;
  id v4 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Unspecified" value:&off_1013AADB0];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Enabled" value:&off_1013AADC8];
  id v6 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Disabled" value:&off_1013AADE0];
  if (v3) {
    id v7 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"User" value:&off_1013AADF8];
  }
}

void sub_100C96834(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C96910;
  v6[3] = &unk_10131EC68;
  id v7 = *(id *)(a1 + 32);
  id v4 = [v3 addCheckmarkRowsGroupWithContent:v6 backingGeoConfigKey:MapsConfig_CarPlayHybridInstrumentClusterShowHeadingIndicatorOverride get:off_1015F10B8 set:&stru_10131EC88];
  id v5 = [v3 addButtonRowWithTitle:@"Clear override" action:&stru_10131ECC8];
}

uint64_t sub_100C96910(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100C96924(id a1)
{
  Uuint64_t Integer = GEOConfigGetUInteger();

  return +[NSNumber numberWithUnsignedInteger:UInteger];
}

void sub_100C96970(id a1, id a2)
{
  [a2 unsignedIntegerValue];

  GEOConfigSetUInteger();
}

void sub_100C969AC(id a1)
{
}

void sub_100C969BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C96A98;
  v6[3] = &unk_10131EC68;
  id v7 = *(id *)(a1 + 32);
  id v4 = [v3 addCheckmarkRowsGroupWithContent:v6 backingGeoConfigKey:MapsConfig_CarPlayHybridInstrumentClusterShowSpeedLimitOverride get:off_1015F10C8 set:&stru_10131ECE8];
  id v5 = [v3 addButtonRowWithTitle:@"Clear override" action:&stru_10131ED28];
}

uint64_t sub_100C96A98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100C96AAC(id a1)
{
  Uuint64_t Integer = GEOConfigGetUInteger();

  return +[NSNumber numberWithUnsignedInteger:UInteger];
}

void sub_100C96AF8(id a1, id a2)
{
  [a2 unsignedIntegerValue];

  GEOConfigSetUInteger();
}

void sub_100C96B34(id a1)
{
}

void sub_100C96B44(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C96C20;
  v6[3] = &unk_10131EC68;
  id v7 = *(id *)(a1 + 32);
  id v4 = [v3 addCheckmarkRowsGroupWithContent:v6 backingGeoConfigKey:MapsConfig_CarPlayHybridInstrumentClusterShowETATrayOverride get:off_1015F10D8 set:&stru_10131ED48];
  id v5 = [v3 addButtonRowWithTitle:@"Clear override" action:&stru_10131ED88];
}

uint64_t sub_100C96C20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100C96C34(id a1)
{
  Uuint64_t Integer = GEOConfigGetUInteger();

  return +[NSNumber numberWithUnsignedInteger:UInteger];
}

void sub_100C96C80(id a1, id a2)
{
  [a2 unsignedIntegerValue];

  GEOConfigSetUInteger();
}

void sub_100C96CBC(id a1)
{
}

void sub_100C96CCC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Clear all overrides" action:&stru_10131EDC8];
}

void sub_100C96D00(id a1)
{
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();

  _GEOConfigRemoveValue();
}

void sub_100C96FB4(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Guides" content:&stru_10131EE08];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Tech Debt" content:&stru_10131EE28];
}

void sub_100C97028(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Server Results", MapsConfig_MapsHomeResultEnabled, off_1015EFD78 geoConfigKey];
}

void sub_100C97060(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Collection View", MapsConfig_MapsHomeEnableUICollectionView, off_1015EFDD8 geoConfigKey];
}

void sub_100C970CC(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = a2;
  objc_initWeak(&location, v2);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100C971A4;
  v4[3] = &unk_1012E7EF8;
  objc_copyWeak(&v5, &location);
  id v3 = [(MapsDebugValuesViewController *)v2 addSectionWithTitle:@"DOoM and L&G" content:v4];
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void sub_100C97188(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C971A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSwitchRowWithTitle:@"Run DOoM/L&G code" get:&stru_10131EE68 set:&stru_10131EE88];
  id v5 = [v3 addSwitchRowWithTitle:@"Allow DOoM to trigger" get:&stru_10131EEA8 set:&stru_10131EEC8];
  id v6 = [v3 addButtonRowWithTitle:@"Show Test Notification" action:&stru_10131EEE8];
  id v7 = +[NavdDoomCache loadFromFilePath:0];
  id v8 = v7;
  if (v7)
  {
    id v9 = [v7 mostRecentDestinations];
    id v10 = [v9 firstObject];
    id v11 = [v10 undecoratedTitle];

    id v12 = [v8 mostRecentDoomWindow];
    id v13 = [v12 startDate];
    id v14 = MapsSuggestionsStringFromDate();

    id v15 = [v8 mostRecentDoomWindow];
    id v16 = [v15 endDate];
    id v17 = MapsSuggestionsStringFromDate();

    id v18 = [v8 nextWakeup];
    uint64_t v19 = MapsSuggestionsStringFromDate();

    uint64_t v20 = [v8 mostRecentModification];
    double v21 = MapsSuggestionsStringFromDate();

    id v22 = [v8 cachedIncidents];
    uint64_t v23 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%lu", [v22 count]);

    id v24 = [v3 addEmptySectionBannerRowWithTitle:@"Latest Doom Snapshot"];
    id v25 = [v3 addReadOnlyRowWithTitle:@"DOoM Window Start" value:v14];
    id v26 = [v3 addReadOnlyRowWithTitle:@"DOoM Window End" value:v17];
    id v27 = [v3 addReadOnlyRowWithTitle:@"Top Destination" value:v11];
    id v28 = [v3 addReadOnlyRowWithTitle:@"Next Wakeup" value:v19];
    id v29 = [v3 addReadOnlyRowWithTitle:@"Last Modified" value:v21];
    id v30 = [v3 addReadOnlyRowWithTitle:@"Cached Incidents" value:v23];
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    v33[2] = sub_100C9763C;
    void v33[3] = &unk_1012E7ED0;
    id v34 = v8;
    objc_copyWeak(&v35, (id *)(a1 + 32));
    id v31 = [v3 addButtonRowWithTitle:@"Clear Cached Incidents" action:v33];
    objc_destroyWeak(&v35);
  }
  else
  {
    id v32 = [v3 addEmptySectionBannerRowWithTitle:@"No Current Snapshot"];
  }
}

void sub_100C9750C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100C97520(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C97530(id a1, BOOL a2)
{
}

BOOL sub_100C97544(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C97554(id a1, BOOL a2)
{
}

void sub_100C97568(id a1)
{
  id v5 = +[MapsSuggestionsEntry __debug_fakeHomeEntry];
  [v5 archiveDestination];
  id v1 = [v5 undecoratedTitle];
  uint64_t v2 = +[NSString stringWithFormat:@"Take 280 to %@", v1];

  id v3 = [v5 notificationDetailsWithTitle:v2 message:@"Heavy traffic on 101"];
  id v4 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v4 showPredictedRouteTrafficIncidentBulletinForCommuteDetails:v3];
}

void sub_100C9763C(uint64_t a1)
{
  [*(id *)(a1 + 32) setCachedIncidents:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained reloadData];
}

void sub_100C976C8(id a1, MapsDebugValuesViewController *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Transit" content:&stru_10131EF28];
  id v3 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Nearby Transit" content:&stru_10131F048];
  id v4 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Transit + Pay" content:&stru_10131F0A8];
}

void sub_100C9775C(id a1, MapsDebugTableSection *a2)
{
  id v12 = a2;
  id v2 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Show Routing Apps Sheet" defaultsKey:@"EnableRoutingAppsSheet"];
  id v3 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Enable Re-routing" defaultsKey:@"__internal__EnableTransitRerouting"];
  id v4 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Enable Debug Local Instruction Strings" defaultsKey:@"__internal__EnableTransitDebugLocalInstruction"];
  id v5 = [(MapsDebugTableSection *)v12 addTextFieldRowWithTitle:@"Max vehicles displayed" placeholderText:@"1" inputType:1 get:&stru_10131EF48 set:&stru_10131EF68];
  id v6 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Suppress summary in boarding info" defaultsKey:@"__internal_MapsTransitDebugSuppressSummaryBoardingInfo"];
  id v7 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Suppress reference date update timer", MapKitConfig_DisableTransitReferenceDateUpdater[0], MapKitConfig_DisableTransitReferenceDateUpdater[1] geoConfigKey];
  id v8 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Suppress transit route update timer", GeoServicesConfig_SuppressTransitRealtimeUpdates[0], GeoServicesConfig_SuppressTransitRealtimeUpdates[1] geoConfigKey];
  id v9 = [(MapsDebugTableSection *)v12 addSwitchRowWithTitle:@"Enable Pre-Flight Markets" get:&stru_10131EF88 set:&stru_10131EFA8];
  id v10 = [(MapsDebugTableSection *)v12 addTextFieldRowWithTitle:@"Realtime update initial request delay" placeholderText:@"seconds" inputType:1 get:&stru_10131EFC8 set:&stru_10131EFE8];
  id v11 = [(MapsDebugTableSection *)v12 addTextFieldRowWithTitle:@"Realtime update refresh rate override" placeholderText:@"seconds" inputType:1 get:&stru_10131F008 set:&stru_10131F028];
}

NSString *__cdecl sub_100C97924(id a1)
{
  id v1 = +[NSNumber numberWithUnsignedInteger:GEOConfigGetUInteger()];
  id v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_100C97990(id a1, NSString *a2)
{
  id v2 = a2;
  if ([(NSString *)v2 length])
  {
    [(NSString *)v2 integerValue];
    GEOConfigSetUInteger();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100C97A18(_Unwind_Exception *a1)
{
}

void sub_100C97A3C(void *a1, int a2)
{
  if (a2 == 2) {
    objc_end_catch();
  }
  JUMPOUT(0x100C979C4);
}

BOOL sub_100C97A68(id a1)
{
  id v1 = GEOConfigGetDictionary();
  id v2 = [v1 objectForKeyedSubscript:@"*"];

  if (v2 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0)) {
    unsigned __int8 v3 = [v2 BOOLValue];
  }
  else {
    unsigned __int8 v3 = 0;
  }

  return v3;
}

void sub_100C97AF0(id a1, BOOL a2)
{
  BOOL v2 = a2;
  unsigned __int8 v3 = GEOConfigGetDictionary();
  id v6 = [v3 mutableCopy];

  id v4 = +[NSNumber numberWithBool:v2];
  [v6 setObject:v4 forKeyedSubscript:@"*"];

  GEOConfigSetDictionary();
  id v5 = [@"com.apple.geoservices" stringByAppendingString:@".siri_data_changed"];
  notify_post((const char *)[v5 UTF8String]);
}

NSString *__cdecl sub_100C97BC0(id a1)
{
  GEOConfigGetDouble();
  id v1 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  BOOL v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_100C97C28(id a1, NSString *a2)
{
  BOOL v2 = a2;
  if ([(NSString *)v2 length])
  {
    [(NSString *)v2 integerValue];
    GEOConfigSetDouble();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100C97CB0(_Unwind_Exception *a1)
{
}

void sub_100C97CD4(void *a1, int a2)
{
  if (a2 == 2) {
    objc_end_catch();
  }
  JUMPOUT(0x100C97C5CLL);
}

NSString *__cdecl sub_100C97D00(id a1)
{
  GEOConfigGetDouble();
  id v1 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  BOOL v2 = [v1 stringValue];

  return (NSString *)v2;
}

void sub_100C97D68(id a1, NSString *a2)
{
  BOOL v2 = a2;
  if ([(NSString *)v2 length])
  {
    [(NSString *)v2 integerValue];
    GEOConfigSetDouble();
  }
  else
  {
    _GEOConfigRemoveValue();
  }
}

void sub_100C97DF0(_Unwind_Exception *a1)
{
}

void sub_100C97E74(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Force isTransitUserHere" defaultsKey:@"__internal__NearbyTransitDebugForceTransitUser"];
  id v3 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Reset Nearby Transit tip state history" action:&stru_10131F068];
  id v4 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Reset teachable moment history" action:&stru_10131F088];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Use map center after panning (ignore user location)" defaultsKey:@"__internal__NearbyTransitAlwaysFollowMap"];
}

void sub_100C97F28(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"__internal__NearbyTransitTipInfoKey"];
}

void sub_100C97F78(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"__internal__NearbyTransitTeachableMomentShownKey"];

  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 removeObjectForKey:@"__internal__NearbyTransitTeachableMomentShownCardTimes"];
}

void sub_100C97FF0(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Reset Transit + Pay tip state history" action:&stru_10131F0C8];
}

void sub_100C98024(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"__internal__TransitPayTipInfoKey"];
}

void sub_100C980A8(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Logging" content:&stru_10131F108];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Transportation Mode" content:&stru_10131F168];
}

void sub_100C9811C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Verbose logging" get:&stru_10131F128 set:&stru_10131F148];
  [v2 setSubtitle:@"Adds serialized suggestion entries to logs."];
}

void sub_100C98184(id a1, BOOL a2)
{
}

void sub_100C9818C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"MSg Transportation Mode Prediction" get:&stru_10131F188 set:&stru_10131F1A8];
  [v2 setSubtitle:@"Toggle MSg-based transportation mode prediction"];
}

void sub_100C981F4(id a1, BOOL a2)
{
}

void sub_100C98230(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"TipKit" content:&stru_10131F1E8];
}

void sub_100C98264(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_TipKitHideAllForTesting;
  id v3 = off_1015F15D8;
  id v7 = a2;
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Hide All Tips For Testing", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Show All Tips For Testing", MapsConfig_TipKitShowAllForTesting, off_1015F15E8 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Reset All Tips For Testing", MapsConfig_TipKitResetDatastore, off_1015F15F8 geoConfigKey];
  [(MapsDebugTableSection *)v7 setFooter:@"TipKit testing settings changes require relaunching Maps to take effect."];
}

void sub_100C98358(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Find My Car" content:&stru_10131F228];
}

void sub_100C9838C(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Add MT02 parked car" action:&stru_10131F248];
  id v3 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Show Notification" action:&stru_10131F268];
  id v4 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Show Multi-Car Replacement Notification" action:&stru_10131F288];
  id v5 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Remove Parked Car" action:&stru_10131F2A8];
}

void sub_100C98440(id a1)
{
  id v2 = [objc_alloc((Class)CLLocation) initWithLatitude:37.391576 longitude:-122.032652];
  id v1 = +[ParkedCarManager sharedManager];
  [v1 _debug_addParkedCarAtLocation:v2];
}

void sub_100C984BC(id a1)
{
  id v1 = +[ParkedCarManager sharedManager];
  [v1 _debug_showParkedCarNotification];
}

void sub_100C98504(id a1)
{
  id v1 = +[ParkedCarManager sharedManager];
  [v1 _debug_showParkedCarReplacementNotification];
}

void sub_100C9854C(id a1)
{
  id v1 = +[ParkedCarManager sharedManager];
  [v1 removeParkedCar];
}

void sub_100C985C8(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Personalized Maps" content:&stru_10131F2E8];
}

void sub_100C985FC(id a1, MapsDebugTableSection *a2)
{
  id v16 = a2;
  id v2 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Search for 'Home' and 'Work' use address results" get:&stru_10131F308 set:&stru_10131F328];
  id v3 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Enable Calendar events on map" defaultsKey:@"__personalizedMapsCalendarEnabled"];
  id v4 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Disable text only calendar events" defaultsKey:@"__personalizedMapsCalendarDisableCanonicalLookupSearch"];
  id v5 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Show cluster count in subtitle" defaultsKey:@"__personalizedMapsShowClusterCountInSubtitle"];
  id v6 = [(MapsDebugTableSection *)v16 addTextFieldRowWithTitle:@"Override POI locale" placeholderText:@"locale, eg 'en'" inputType:0 defaultsKey:@"__personalizedMapsOverrideLocale"];
  id v7 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Make all injected POIs airports" defaultsKey:@"__personalizedMapsInjectedPOIsLookLikeAirports"];
  id v8 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Fixed Zoom on cluster" defaultsKey:@"__personalizedMapsFixedClusterZoom"];
  id v9 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Calendar items use Generic POI type" defaultsKey:@"__personalizedMapsCalendarItemsUseGenericPOI"];
  id v10 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Show favorites on map" defaultsKey:@"__personalizedMapsShowFavorites"];
  id v11 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Sync address corrections & labels" get:&stru_10131F348 set:&stru_10131F368];
  id v12 = [(MapsDebugTableSection *)v16 addSwitchRowWithTitle:@"Write sync corrections to Core Routine" get:&stru_10131F388 set:&stru_10131F3A8];
  LODWORD(v13) = 981668463;
  LODWORD(v14) = 1.0;
  id v15 = [(MapsDebugTableSection *)v16 addSliderRowWithTitle:@"Deselect Clusters when zooming" subtitleStringFormat:@"When gesture scale is +/- %.3f of 1.0" min:&stru_10131F3C8 max:&stru_10131F3E8 get:v13 set:v14];
}

BOOL sub_100C987F0(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C98800(id a1, BOOL a2)
{
}

BOOL sub_100C98814(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C98824(id a1, BOOL a2)
{
}

BOOL sub_100C98838(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C98848(id a1, BOOL a2)
{
}

float sub_100C9885C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 floatForKey:@"__personalizedMapsZoomAmountToClearClusterSelection"];
  float v3 = v2;

  return v3;
}

void sub_100C988AC(id a1, float a2)
{
  id v4 = +[NSUserDefaults standardUserDefaults];
  *(float *)&double v3 = a2;
  [v4 setFloat:@"__personalizedMapsZoomAmountToClearClusterSelection" forKey:v3];
}

void sub_100C98940(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Autocomplete" content:&stru_10131F428];
}

void sub_100C98974(id a1, MapsDebugTableSection *a2)
{
  id v10 = a2;
  id v2 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Use CoreDuet to rank contacts" get:&stru_10131F448 set:&stru_10131F468];
  id v3 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"Local backfill for short query", @"backfill (short)", 1, MapsConfig_AutocompleteLocalBackfillForShortQuery, off_1015EEF78 placeholderText inputType geoConfigKeyInteger];
  id v4 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"Local backfill for long query", @"backfill (long)", 1, MapsConfig_AutocompleteLocalBackfillForLongQuery, off_1015EEF88 placeholderText inputType geoConfigKeyInteger];
  id v5 = [(MapsDebugTableSection *)v10 addGEOTextFieldRowWithTitle:@"Max length of short query", @"length", 1, MapsConfig_AutocompleteShortQueryMaxLength, off_1015EEF68 placeholderText inputType geoConfigKeyInteger];
  LODWORD(v6) = 1157234688;
  id v7 = [(MapsDebugTableSection *)v10 addSliderRowWithTitle:@"Minimum Latency" subtitleStringFormat:@"%.0f milliseconds" min:&stru_10131F488 max:&stru_10131F4A8 get:0.0 set:v6];
  id v8 = [(MapsDebugTableSection *)v10 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v9 = [(MapsDebugTableSection *)v10 addSwitchRowWithTitle:@"Disable AC in Mac routing" defaultsKey:@"__internal_DisableMacRoutingAutocomplete"];
}

BOOL sub_100C98ADC(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C98AEC(id a1, BOOL a2)
{
}

float sub_100C98B00(id a1)
{
  GEOConfigGetDouble();
  *(float *)&double v1 = v1;
  return *(float *)&v1 * 1000.0;
}

void sub_100C98B34(id a1, float a2)
{
  if (fabsf(a2) >= 0.01) {
    GEOConfigSetDouble();
  }
  else {
    _GEOConfigRemoveValue();
  }
}

void sub_100C98BB0(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Search" content:&stru_10131F4E8];
  if (MapsFeature_IsEnabled_ShelbyvilleSearch()) {
    id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Place Summary" content:&stru_10131F548];
  }
}

void sub_100C98C2C(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Draw results viewport on map" get:&stru_10131F508 set:&stru_10131F528];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Allow SAR in all TbT" defaultsKey:@"__internal__NavigationAllowSAREverywhere"];
  if (MapsFeature_IsEnabled_ShelbyvilleSearch())
  {
    id v4 = [(MapsDebugTableSection *)v7 addSliderRowWithTitle:@"Number of auxiliary tier search results", @"%1.0f auxiliary results", 0, 500, MapsConfig_SearchRequestAuxiliaryTierNumberOfResults, off_1015EFCD8, 0 subtitleStringFormat min max geoConfigKeyInteger changeHandler];
    id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Auto redo search prototype", MapsConfig_SearchAutoRedoPrototype, off_1015EFCE8 geoConfigKey];
  }
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Force topographic features", MapsConfig_SearchInfoForceTopographicFeaturesEnabled, off_1015F1368 geoConfigKey];
}

BOOL sub_100C98D30(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C98D40(id a1, BOOL a2)
{
}

void sub_100C98D54(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Use Place Summary in Search Results and Autocomplete", MapsConfig_UsePlaceSummary, off_1015EFEB8 geoConfigKey];
}

void sub_100C98DC0(id a1, MapsDebugValuesViewController *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:0 content:&stru_10131F588];
  id v3 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"China AOI" content:&stru_10131F5A8];
  id v4 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:@"Ride Booking" content:&stru_10131F5C8];
  id v5 = [(MapsDebugValuesViewController *)v6 addSectionWithTitle:0 content:&stru_10131F628];
}

void sub_100C98E6C(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100C98EC4(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = +[NSUserDefaults standardUserDefaults];
  id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Show place card link to first child" userDefaults:v2 defaultsKey:@"__mapsInternal_placeCardShowLinkToFirstChild"];

  id v4 = +[NSUserDefaults standardUserDefaults];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Treat AOI POIs as Search Results" userDefaults:v4 defaultsKey:@"__internalChinaAOIInjectPOIsAsSearchResults"];
}

void sub_100C98F78(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear completed ride dates cache" action:&stru_10131F5E8];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Enable Ride Booking on iPad (Maps will quit)", MapsConfig_EnableRideSharingiPad, off_1015EEE08, 0, &stru_10131F608 geoConfigKey switchOnStateIfUnset changeHandler];
}

void sub_100C98FFC(id a1)
{
  double v1 = +[NSUserDefaults standardUserDefaults];
  [v1 setObject:&__NSDictionary0__struct forKey:@"RideBookingCompletedRideIdentifiersAndDates"];

  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 synchronize];
}

void sub_100C99078(id a1, BOOL a2)
{
}

void sub_100C9908C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Feature Freedom" defaultsKey:@"MapsFeatureFreedom"];
}

void sub_100C990F4(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"CoreRecents" content:&stru_10131F668];
}

void sub_100C99128(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Clear System Recents" action:&stru_10131F688];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Add Default Recent" action:&stru_10131F6A8];
}

void sub_100C9919C(id a1)
{
  double v1 = +[CRRecentContactsLibrary defaultInstance];
  id v2 = objc_alloc_init((Class)CRSearchQuery);
  uint64_t v8 = CRRecentsDomainMaps;
  id v3 = +[NSArray arrayWithObjects:&v8 count:1];
  [v2 setDomains:v3];

  id v4 = +[CRRecentContactsLibrary defaultInstance];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C992E0;
  v6[3] = &unk_1012E7610;
  id v7 = v1;
  id v5 = v1;
  [v4 performRecentsSearch:v2 queue:&_dispatch_main_q completion:v6];
}

void sub_100C992E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 count])
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v6 = 0;
    if ([v4 removeRecentContacts:v3 error:&v6]) {
      BOOL v5 = v6 == 0;
    }
    else {
      BOOL v5 = 0;
    }
    if (!v5) {
      NSLog(@"Cannot remove CoreRecents: %@", v6);
    }
  }
}

void sub_100C99350(id a1)
{
  double v1 = +[CRRecentContactsLibrary defaultInstance];
  id v2 = objc_alloc_init((Class)CRSearchQuery);
  uint64_t v8 = CRRecentsDomainMaps;
  id v3 = +[NSArray arrayWithObjects:&v8 count:1];
  [v2 setDomains:v3];

  id v4 = +[CRRecentContactsLibrary defaultInstance];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C99494;
  v6[3] = &unk_1012E7610;
  id v7 = v1;
  id v5 = v1;
  [v4 performRecentsSearch:v2 queue:&_dispatch_main_q completion:v6];
}

void sub_100C99494(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 count])
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v12 = 0;
    if ([v4 removeRecentContacts:v3 error:&v12]) {
      BOOL v5 = v12 == 0;
    }
    else {
      BOOL v5 = 0;
    }
    if (!v5) {
      NSLog(@"Cannot remove CoreRecents: %@", v12);
    }
  }
  uint64_t v6 = CRAddressKindMapLocation;
  id v7 = +[NSDate date];
  uint64_t v14 = CRRecentContactMetadataSubject;
  CFStringRef v15 = @"Default";
  uint64_t v8 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
  id v9 = +[CRRecentContactsLibrary recentEventForAddress:@"706 Mission Street, SF CA 94103-3162" displayName:@"706 Mission Street, SF" kind:v6 date:v7 weight:0 metadata:v8 options:0];

  id v10 = *(void **)(a1 + 32);
  double v13 = v9;
  id v11 = +[NSArray arrayWithObjects:&v13 count:1];
  [v10 recordContactEvents:v11 recentsDomain:CRRecentsDomainMaps sendingAddress:0 completion:0];
}

void sub_100C996AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:&stru_101324E70 content:&stru_10131F6C8];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100C9979C;
  v6[3] = &unk_1012EE018;
  void v6[4] = *(void *)(a1 + 32);
  id v5 = [v3 addSectionWithTitle:@"Reset Launch Alerts" content:v6];
}

void sub_100C99764(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Disable All Launch Alerts", MapsConfig_PreventAllLaunchAlerts, off_1015F07C8 geoConfigKey];
}

void sub_100C9979C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addButtonRowWithTitle:@"Set Declined Notifications DistantPast" action:&stru_10131F6E8];
  id v5 = [v3 addButtonRowWithTitle:@"Reset Notification Repeat Prompt Count" action:&stru_10131F708];
  id v6 = [v3 addButtonRowWithTitle:@"Reset Initial Notification Prompt Count" action:&stru_10131F728];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100C99B70;
  v21[3] = &unk_1012E5D08;
  void v21[4] = *(void *)(a1 + 32);
  id v7 = [v3 addButtonRowWithTitle:@"Reset CoreLocation Auth" action:v21];
  uint64_t v8 = sub_1000BBB44(*(void **)(a1 + 32));
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C99B78;
  v19[3] = &unk_1012EBAF0;
  BOOL v20 = v8 != 5;
  id v9 = [v3 addButtonRowWithTitle:@"Reset Help Improve Maps" action:v19];
  id v10 = [v3 addButtonRowWithTitle:@"Reset Nav Trace Prompt" action:&stru_10131F748];
  id v11 = [v3 addButtonRowWithTitle:@"Reset Precise Location Disabled Alert" action:&stru_10131F768];
  id v12 = [v3 addButtonRowWithTitle:@"Reset What’s New" action:&stru_10131F788];
  id v13 = [v3 addButtonRowWithTitle:@"Reset Map Settings Tip" action:&stru_10131F7A8];
  id v14 = [v3 addButtonRowWithTitle:@"Reset Offline Place Card Download Tips" action:&stru_10131F7C8];
  id v15 = [v3 addButtonRowWithTitle:@"Reset Offline Maps Tips" action:&stru_10131F7E8];
  if (MapsFeature_IsEnabled_HikingiOS()) {
    id v16 = [v3 addButtonRowWithTitle:@"Reset Hiking Welcome Screen" action:&stru_10131F808];
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100C99E78;
  v18[3] = &unk_1012E5D08;
  void v18[4] = *(void *)(a1 + 32);
  id v17 = [v3 addButtonRowWithTitle:@"Reset All" action:v18];
}

void sub_100C99A50(id a1)
{
  id v2 = +[NSUserDefaults standardUserDefaults];
  double v1 = +[NSDate distantPast];
  [v2 setObject:v1 forKey:@"MapsNotificationAuthLastPromptedDate"];
}

void sub_100C99AC8(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 setInteger:0 forKey:@"MapsNotificationAuthRepromptCount"];
}

void sub_100C99B1C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 setInteger:0 forKey:@"MapsNotificationAuthPromptCount"];
}

id sub_100C99B70(uint64_t a1)
{
  return _[*(id *)(a1 + 32) promptCLReset];
}

void sub_100C99B78(uint64_t a1)
{
  _GEOConfigRemoveValue();
  if (*(unsigned char *)(a1 + 32))
  {
    id v2 = +[NSBundle bundleWithPath:@"/System/Library/LocationBundles/AppGenius.bundle"];
    +[CLLocationManager setAuthorizationStatusByType:2 forBundle:v2];
  }
}

void sub_100C99C0C(id a1)
{
}

void sub_100C99C1C(id a1)
{
}

void sub_100C99C2C(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 setInteger:0 forKey:@"kMapsWelcomeScreenKey"];
}

void sub_100C99C80(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"SettingsTipKey"];

  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 removeObjectForKey:@"SettingsTipLaunchCount"];

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 removeObjectForKey:@"SettingsTipImpressionCount"];
}

void sub_100C99D18(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"OfflineMapsPlaceCardDownloadTipsShownKey"];

  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 removeObjectForKey:@"OfflineMapsPlaceCardDownloadTipsDisplayedCountKey"];
}

void sub_100C99D90(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"OfflineMapsDownloadingTipDisplayedCountKey"];

  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 removeObjectForKey:@"OfflineMapsDownloadingTipLastDisplayedTimeKey"];

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 removeObjectForKey:@"OfflineMapsUserHasOpenedOfflineManagementScreenKey"];
}

void sub_100C99E28(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 removeObjectForKey:@"HikingWelcomeScreenDisplayed"];
}

id sub_100C99E78(uint64_t a1)
{
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  _GEOConfigRemoveValue();
  id v2 = +[NSUserDefaults standardUserDefaults];
  [v2 setInteger:0 forKey:@"kMapsWelcomeScreenKey"];

  id v3 = +[NSUserDefaults standardUserDefaults];
  [v3 removeObjectForKey:@"SettingsTipKey"];

  id v4 = +[NSUserDefaults standardUserDefaults];
  [v4 removeObjectForKey:@"SettingsTipLaunchCount"];

  id v5 = +[NSUserDefaults standardUserDefaults];
  [v5 removeObjectForKey:@"SettingsTipImpressionCount"];

  id v6 = +[NSUserDefaults standardUserDefaults];
  [v6 removeObjectForKey:@"OfflineMapsDownloadingTipDisplayedCountKey"];

  id v7 = +[NSUserDefaults standardUserDefaults];
  [v7 removeObjectForKey:@"OfflineMapsDownloadingTipLastDisplayedTimeKey"];

  uint64_t v8 = +[NSUserDefaults standardUserDefaults];
  [v8 removeObjectForKey:@"OfflineMapsUserHasOpenedOfflineManagementScreenKey"];

  id v9 = +[NSUserDefaults standardUserDefaults];
  [v9 removeObjectForKey:@"OfflineMapsPlaceCardDownloadTipsShownKey"];

  id v10 = +[NSUserDefaults standardUserDefaults];
  [v10 removeObjectForKey:@"OfflineMapsPlaceCardDownloadTipsDisplayedCountKey"];

  id v11 = +[NSUserDefaults standardUserDefaults];
  [v11 removeObjectForKey:@"HikingWelcomeScreenDisplayed"];

  id v12 = *(void **)(a1 + 32);

  return _[v12 promptCLReset];
}

void sub_100C9A194(id a1, UIAlertAction *a2)
{
  +[CLLocationManager setAuthorizationStatusByType:0 forBundleIdentifier:@"com.apple.Maps"];

  +[CLLocationManager setTemporaryAuthorizationGranted:0 forBundleIdentifier:@"com.apple.Maps"];
}

void sub_100C9A1E8(id a1, UIAlertAction *a2)
{
  id v2 = a2;
  +[CLLocationManager setAuthorizationStatusByType:0 forBundleIdentifier:@"com.apple.Maps"];
  +[CLLocationManager setTemporaryAuthorizationGranted:0 forBundleIdentifier:@"com.apple.Maps"];
  exit(0);
}

id sub_100C9A230(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_100C9A2D4(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Location Simulation" content:&stru_10131F888];
}

void sub_100C9A308(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Place Card Trigger" defaultsKey:@"__internal__PlaceCardLocationSimulation"];
  id v3 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Clear Simulated Location" action:&stru_10131F8A8];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Assume accurate locations" get:&stru_10131F8C8 set:&stru_10131F8E8];
  [(MapsDebugTableSection *)v5 setFooter:@"Toggle \"Assume accurate locations\" when using location simulation, otherwise all directions requests may incur a location fix delay of 10s."];
}

void sub_100C9A3B4(id a1)
{
  id v1 = +[GEOPlatform sharedPlatform];
  unsigned int v2 = [v1 isInternalInstall];

  if (v2)
  {
    id v3 = objc_alloc_init((Class)CLSimulationManager);
    [v3 clearSimulatedLocations];
    [v3 stopLocationSimulation];
  }
}

BOOL sub_100C9A43C(id a1)
{
  return GEOConfigGetBOOL();
}

void sub_100C9A44C(id a1, BOOL a2)
{
  GEOConfigSetBOOL();
  id v2 = +[MKLocationManager sharedLocationManager];
  if (objc_opt_respondsToSelector()) {
    [v2 _syncLocationProviderWithTracking];
  }
}

void sub_100C9A4BC(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Routing Apps" content:&stru_10131F928];
}

void sub_100C9A4F0(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Fake Search Response" defaultsKey:@"__internal__FakeTransitResponse"];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Disable Local Sieving" defaultsKey:@"__internal__DisableTransitAppSieving"];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enable Logging" defaultsKey:@"__internal__RoutingAppsLogging"];
}

void sub_100C9A584(id a1, MapsDebugValuesViewController *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Battery level rate limiting" content:&stru_10131F968];
  id v3 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Low power mode rate limiting" content:&stru_10131F988];
  id v4 = [(MapsDebugValuesViewController *)v5 addSectionWithTitle:@"Thermal rate limiting" content:&stru_10131F9A8];
}

void sub_100C9A618(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Battery level rate limiting (iOS)", MapsConfig_BatteryLevelNavigationRateLimitEnablediOS, off_1015F06F8 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Battery level rate limiting (CarPlay)", MapsConfig_BatteryLevelNavigationRateLimitEnabledCarPlay, off_1015F06E8 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Battery level threshold", @"0.2", 2, MapsConfig_BatteryLevelNavigationRateLimitThreshold, off_1015F0708 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Battery level rate limit", @"5", 1, MapsConfig_BatteryLevelNavigationRateLimit, off_1015F0718 placeholderText inputType geoConfigKeyInteger];
}

void sub_100C9A6F4(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Low power mode rate limiting (iOS)", MapsConfig_LowPowerNavigationRateLimitEnablediOS, off_1015F0738 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Low power mode rate limiting (CarPlay)", MapsConfig_LowPowerNavigationRateLimitEnabledCarPlay, off_1015F0728 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v5 addGEOTextFieldRowWithTitle:@"Low power mode rate limit", @"10", 1, MapsConfig_LowPowerNavigationRateLimit, off_1015F0748 placeholderText inputType geoConfigKeyInteger];
}

void sub_100C9A7A0(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Non-internal analytics", MapsConfig_ThermalPressureAnalyticsAllowNonInternal, off_1015F0518 geoConfigKey];
}

void sub_100C9A85C(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Look Around" content:&stru_10131F9E8];
}

void sub_100C9A890(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Hide Tap To Radar" defaultsKey:@"__internal__HideTapToRadarInMunin"];
}

void sub_100C9A8F8(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Guides" content:&stru_10131FA28];
}

void sub_100C9A92C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable User Guides sharing", MapsConfig_CollectionAllowsURLSharing, off_1015EF288, 1, 0 geoConfigKey switchOnStateIfUnset changeHandler];
}

void sub_100C9A9F0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Share ETA" content:&stru_10131FA48];
  id v5 = [v3 addSectionWithTitle:@"IDS Capabilities" content:&stru_10131FAA8];
  id v6 = [v3 addSectionWithTitle:@"Minimal Strategy" content:&stru_10131FAC8];
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C9AFC0;
  v16[3] = &unk_1012EE018;
  void v16[4] = *(void *)(a1 + 32);
  id v7 = [v3 addSectionWithTitle:@"Live Strategy" content:v16];
  id v8 = [v3 addSectionWithTitle:@"User Input (Siri/Keyboard)" content:&stru_10131FB90];
  id v9 = [v3 addSectionWithTitle:0 content:&stru_10131FBB0];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C9B228;
  v15[3] = &unk_1012EE018;
  void v15[4] = *(void *)(a1 + 32);
  id v10 = [v3 addSectionWithTitle:@"Testing the service" content:v15];
  id v11 = [v3 addSectionWithTitle:@"Mock trips for UI testing" content:&stru_10131FC30];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100C9B7CC;
  v14[3] = &unk_1012EE018;
  void v14[4] = *(void *)(a1 + 32);
  id v12 = [v3 addSectionWithTitle:@"UI" content:v14];
  id v13 = [v3 addSectionWithTitle:@"Notifications" content:&stru_10131FC70];
}

void sub_100C9AC24(id a1, MapsDebugTableSection *a2)
{
  id v5 = a2;
  id v2 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Enable Share ETA", GEOConfigMSPSharedTripServerEnabled[0], GEOConfigMSPSharedTripServerEnabled[1], 1, &stru_10131FA68 geoConfigKey switchOnStateIfUnset changeHandler];
  id v3 = [(MapsDebugTableSection *)v5 addButtonRowWithTitle:@"Delete all session storage" action:&stru_10131FA88];
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Archive and restore sending state in navigation", MapsConfig_ShareETAEnableStateRestoration, off_1015F0828 geoConfigKey];
}

void sub_100C9ACCC(id a1, BOOL a2)
{
}

void sub_100C9ACE0(id a1)
{
  id v1 = +[MSPMapsPaths mapsApplicationContainerPaths];
  id v2 = [v1 groupDirectory];

  long long v17 = 0u;
  long long v18 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = [&off_1013AE7C0 countByEnumeratingWithState:&v15 objects:v23 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v16;
    *(void *)&long long v4 = 138543618;
    long long v13 = v4;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v16 != v6) {
          objc_enumerationMutation(&off_1013AE7C0);
        }
        uint64_t v8 = *(void *)(*((void *)&v15 + 1) + 8 * i);
        id v9 = [v2 stringByAppendingPathComponent:v8, v13];
        id v10 = +[NSFileManager defaultManager];
        id v14 = 0;
        [v10 removeItemAtPath:v9 error:&v14];
        id v11 = v14;

        if (v11)
        {
          id v12 = sub_100576A9C();
          if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v13;
            uint64_t v20 = v8;
            __int16 v21 = 2114;
            id v22 = v11;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Error removing %{public}@: %{public}@", buf, 0x16u);
          }
        }
      }
      id v5 = [&off_1013AE7C0 countByEnumeratingWithState:&v15 objects:v23 count:16];
    }
    while (v5);
  }
}

void sub_100C9AEB8(id a1, MapsDebugTableSection *a2)
{
  long long v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Suppress Sky message content", GEOConfigMSPShareETASuppressSharingRoutingPathLegs[0], GEOConfigMSPShareETASuppressSharingRoutingPathLegs[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Suppress Sydney message content", GEOConfigMSPShareETASuppressSharingWaypointRoutes[0], GEOConfigMSPShareETASuppressSharingWaypointRoutes[1] geoConfigKey];
}

void sub_100C9AF34(id a1, MapsDebugTableSection *a2)
{
  LODWORD(v3) = 1133903872;
  LODWORD(v2) = 10.0;
  id v4 = [(MapsDebugTableSection *)a2 addSliderRowWithTitle:@"Between 2 ETA updates" subtitleStringFormat:@"%.1f" min:&stru_10131FAE8 max:&stru_10131FB08 get:v2 set:v3];
}

float sub_100C9AF84(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100C9AFAC(id a1, float a2)
{
}

void sub_100C9AFC0(uint64_t a1, void *a2)
{
  id v3 = a2;
  LODWORD(v4) = 1119092736;
  LODWORD(v5) = 1.0;
  id v6 = [v3 addSliderRowWithTitle:@"Between 2 ETA updates" subtitleStringFormat:@"%.1f" min:&stru_10131FB28 max:&stru_10131FB48 get:v5 set:v4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100C9B0D0;
  v8[3] = &unk_1012E5D08;
  void v8[4] = *(void *)(a1 + 32);
  id v7 = [v3 addButtonRowWithTitle:@"Reset" action:v8];
}

float sub_100C9B094(id a1)
{
  GEOConfigGetDouble();
  return v1;
}

void sub_100C9B0BC(id a1, float a2)
{
}

uint64_t sub_100C9B0D0()
{
  return GEOConfigGetPropertiesForKey();
}

id sub_100C9B14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  [a5 doubleValue];
  GEOConfigSetDouble();
  id v6 = *(void **)(a1 + 32);

  return [v6 reloadData];
}

void sub_100C9B198(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable dictation/keyboard (CarPlay)", MapsConfig_ShareETAEnableCarPlayUserInput, off_1015EFD48 geoConfigKey];
}

void sub_100C9B1D0(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addNavigationRowForViewControllerClass:objc_opt_class()];
}

void sub_100C9B228(uint64_t a1, void *a2)
{
  id v3 = a2;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C9B388;
  _OWORD v10[3] = &unk_1012E5D08;
  void v10[4] = *(void *)(a1 + 32);
  id v4 = [v3 addButtonRowWithTitle:@"Share with contact..." action:v10];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C9B418;
  v9[3] = &unk_1012E5D08;
  void v9[4] = *(void *)(a1 + 32);
  id v5 = [v3 addButtonRowWithTitle:@"Stop all sharing" action:v9];
  id v6 = [v3 addButtonRowWithTitle:@"Clear 'user confirmed handle'" action:&stru_10131FBD0];
  id v7 = [v3 addButtonRowWithTitle:@"Purge expired blocked trip identifiers" action:&stru_10131FBF0];
  id v8 = [v3 addButtonRowWithTitle:@"Clear blocked trip identifiers" action:&stru_10131FC10];
}

void sub_100C9B388(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)CNContactPickerViewController);
  [v2 setDelegate:*(void *)(a1 + 32)];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 88);
  *(void *)(v3 + 88) = v2;
  id v5 = v2;

  [*(id *)(a1 + 32) presentViewController:v5 animated:1 completion:0];
}

void sub_100C9B418(uint64_t a1)
{
  id v2 = +[MSPSharedTripService sharedInstance];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C9B4AC;
  v3[3] = &unk_1012EB010;
  void v3[4] = *(void *)(a1 + 32);
  [v2 stopAllSharingWithCompletion:v3];
}

void sub_100C9B4AC(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = [a2 debugDescription];
    id v4 = [v3 copy];
    id v5 = +[UIAlertController alertControllerWithTitle:@"Error Stopping Sharing" message:v4 preferredStyle:1];

    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100C9B5D4;
    v8[3] = &unk_1012E6DE0;
    id v9 = v5;
    id v6 = v5;
    id v7 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:v8];
    [v6 addAction:v7];

    [*(id *)(a1 + 32) presentViewController:v6 animated:1 completion:0];
  }
}

id sub_100C9B5D4(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_100C9B5E4(id a1)
{
  double v1 = +[NSUserDefaults __maps_groupUserDefaults];
  [v1 removeObjectForKey:@"MapsSharedETADefaultSender"];

  id v2 = +[NSUserDefaults __maps_groupUserDefaults];
  [v2 synchronize];
}

void sub_100C9B654(id a1)
{
  id v1 = +[MSPSharedTripService sharedInstance];
  [v1 purgeExpiredBlockedTripIdentifiers];
}

void sub_100C9B69C(id a1)
{
  id v1 = +[MSPSharedTripService sharedInstance];
  [v1 clearBlockedTripIdentifiers];
}

void sub_100C9B6E4(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Single destination", GEOConfigMSPShareETAIncludeMockTripForUITesting[0], GEOConfigMSPShareETAIncludeMockTripForUITesting[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Multiple destinations, start of route", GEOConfigMSPShareETAIncludeMockMPRTripForUITesting[0], GEOConfigMSPShareETAIncludeMockMPRTripForUITesting[1] geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Multiple destinations, passed 1 stop", GEOConfigMSPShareETAIncludeMockMPRMiddleOfRouteTripForUITesting[0], GEOConfigMSPShareETAIncludeMockMPRMiddleOfRouteTripForUITesting[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Sky trip", GEOConfigMSPShareETAIncludeMockSkyTripForUITesting[0], GEOConfigMSPShareETAIncludeMockSkyTripForUITesting[1] geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Closed trip with past ETA (Safety Check)", GEOConfigMSPShareETAIncludeMockClosedTripWithPastETAForUITesting[0], GEOConfigMSPShareETAIncludeMockClosedTripWithPastETAForUITesting[1] geoConfigKey];
}

id sub_100C9B7CC(uint64_t a1, void *a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100C9B850;
  v3[3] = &unk_1012E5D08;
  void v3[4] = *(void *)(a1 + 32);
  return [a2 addButtonRowWithTitle:@"Push SharedTripsContext" action:v3];
}

void sub_100C9B850(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) presentingViewController];
  id v3 = [v2 _maps_mapsSceneDelegate];

  id v4 = [v3 chromeViewController];
  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C9B920;
  v7[3] = &unk_1012E5D08;
  id v8 = v4;
  id v6 = v4;
  [v5 dismissViewControllerAnimated:1 completion:v7];
}

void sub_100C9B920(uint64_t a1)
{
  id v4 = objc_alloc_init(IOSSharedTripsContext);
  id v2 = [*(id *)(a1 + 32) appCoordinator];
  id v3 = [v2 baseActionCoordinator];
  [(IOSSharedTripsContext *)v4 setDelegate:v3];

  [*(id *)(a1 + 32) pushContext:v4 animated:1 completion:&stru_10131FC50];
}

void sub_100C9B9C0(id a1, MapsDebugTableSection *a2)
{
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100C9BED4;
  void v24[3] = &unk_1012F3690;
  id v25 = &stru_10131FCF0;
  id v26 = &stru_10131FCB0;
  id v2 = a2;
  id v3 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Initial" action:v24];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100C9BFEC;
  v21[3] = &unk_1012F3690;
  id v22 = &stru_10131FCF0;
  uint64_t v23 = &stru_10131FCB0;
  id v4 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Update" action:v21];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100C9C104;
  v18[3] = &unk_1012F3690;
  uint64_t v19 = &stru_10131FCF0;
  uint64_t v20 = &stru_10131FCB0;
  id v5 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Charging Stop" action:v18];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C9C21C;
  v15[3] = &unk_1012F3690;
  long long v16 = &stru_10131FCF0;
  long long v17 = &stru_10131FCB0;
  id v6 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Intermediate Stop" action:v15];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100C9C334;
  v12[3] = &unk_1012F3690;
  long long v13 = &stru_10131FCF0;
  id v14 = &stru_10131FCB0;
  id v7 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Resume" action:v12];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C9C44C;
  v9[3] = &unk_1012F3690;
  id v10 = &stru_10131FCF0;
  id v11 = &stru_10131FCB0;
  id v8 = [(MapsDebugTableSection *)v2 addButtonRowWithTitle:@"Final" action:v9];
  [(MapsDebugTableSection *)v2 setFooter:@"Only to be used for testing strings.\nRequires at least one received trip."];
}

void sub_100C9BC8C(id a1, UNNotificationContent *a2)
{
  id v2 = a2;
  id v3 = +[NSUUID UUID];
  id v4 = [v3 UUIDString];
  id v5 = +[UNNotificationRequest requestWithIdentifier:v4 content:v2 trigger:0 destinations:1];

  id v6 = +[UNUserNotificationCenter currentNotificationCenter];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100C9BD9C;
  v8[3] = &unk_1012EB010;
  id v9 = v5;
  id v7 = v5;
  [v6 addNotificationRequest:v7 withCompletionHandler:v8];
}

void sub_100C9BD9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_10057637C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 138412546;
      id v7 = v3;
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error adding test notification: %@\n(notification: %@)", (uint8_t *)&v6, 0x16u);
    }
  }
}

GEOSharedNavState *__cdecl sub_100C9BE68(id a1)
{
  id v1 = +[MSPSharedTripService sharedInstance];
  id v2 = [v1 receivedTrips];
  id v3 = [v2 lastObject];

  return (GEOSharedNavState *)v3;
}

void sub_100C9BED4(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 initialNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 initialNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTrip"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9BFEC(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 updateNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 updateNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTripUpdate"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9C104(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 chargingStopNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 chargingStopNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTripUpdate"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9C21C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 intermediateArrivalNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 intermediateArrivalNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTripUpdate"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9C334(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 waypointResumeNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 waypointResumeNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTripUpdate"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9C44C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  id v6 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = objc_alloc_init((Class)UNMutableNotificationContent);
  [v2 setTitle:&stru_101324E70];
  id v3 = [v6 arrivalNotificationSubtitle];
  [v2 setSubtitle:v3];

  id v4 = [v6 arrivalNotificationBody];
  [v2 setBody:v4];

  [v2 setInterruptionLevel:2];
  uint64_t v5 = +[NSURL URLWithString:@"maps://"];
  [v2 setDefaultActionURL:v5];

  [v2 setCategoryIdentifier:@"MapsUNCategorySharedTripUpdate"];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100C9C660(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    uint64_t v5 = [*(id *)(a1 + 32) displayName];
    id v6 = +[NSString stringWithFormat:@"Error Sharing with %@", v5];
    id v7 = [v4 debugDescription];
    id v8 = [v7 copy];
    uint64_t v9 = +[UIAlertController alertControllerWithTitle:v6 message:v8 preferredStyle:1];

    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100C9C7EC;
    v12[3] = &unk_1012E6DE0;
    id v13 = v9;
    id v10 = v9;
    id v11 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:v12];
    [v10 addAction:v11];

    [*(id *)(a1 + 40) presentViewController:v10 animated:1 completion:0];
  }
  else
  {
    +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:*(void *)(a1 + 32)];
  }
}

id sub_100C9C7EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

void sub_100C9C890(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Screenshot 2.0" content:&stru_10131FD58];
}

void sub_100C9C8C4(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Multipages" defaultsKey:@"__internal_kScreenshotMultipages"];
}

void sub_100C9C9B8(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 registerDefaults:&off_1013AEF38];
}

void sub_100C9CA08(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSectionWithTitle:@"Catalyst" content:&stru_10131FD98];
  id v5 = [v3 addSectionWithTitle:@"iOS" content:&stru_10131FDB8];
  id v6 = [v3 addSectionWithTitle:@"Out of Coverage Errors" content:&stru_10131FDD8];
  id v7 = [v3 addSectionWithTitle:@"Transit Route Updates" content:&stru_10131FDF8];
  id v8 = [v3 addSectionWithTitle:@"Environmental/Regulatory" content:&stru_10131FE18];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100C9CC54;
  _OWORD v10[3] = &unk_1012EE018;
  void v10[4] = *(void *)(a1 + 32);
  id v9 = [v3 addSectionWithTitle:@"\"Resume Route\" Testing" content:v10];
}

void sub_100C9CB40(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Automatically apply route options", MapsConfig_RoutePlanningMacAutomaticallySaveRouteOptions, off_1015EF808 geoConfigKey];
}

void sub_100C9CB78(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable transport type button row", MapsConfig_RoutePlanningUseTransportTypeButtons, off_1015F0E88 geoConfigKey];
}

void sub_100C9CBB0(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Allow View Routing Apps button", MapsConfig_RoutePlanningShowOutOfCoverageRoutingAppsButton, off_1015EF968 geoConfigKey];
}

void sub_100C9CBE8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Always use local transit updater", MapsConfig_TransitRouteUpdatesAlwaysUseLocalUpdater, off_1015EFCF8 geoConfigKey];
}

void sub_100C9CC20(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Shown environmental tip" defaultsKey:@"EnvironmentalFeatureDiscoverySourceShown"];
}

void sub_100C9CC54(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setFooter:@"Searches for the query above and then gets a route through a number of the results.\nAll routes originate from current location.\nThis can take a few seconds to complete, wait for an alert."];
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v4 = [v3 addTextFieldRowWithTitle:@"Destination Search Query" placeholderText:@"search category or chain name" inputType:0 defaultsKey:@"__internal_ResumeRouteTestSearchQuery"];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_100C9D044;
  void v33[3] = &unk_10131FF30;
  void v33[4] = *(void *)(a1 + 32);
  objc_copyWeak(&v34, &location);
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 3221225472;
  v31[2] = sub_100C9DEA8;
  void v31[3] = &unk_1012E6EA8;
  id v5 = objc_retainBlock(v33);
  id v32 = v5;
  id v6 = [v3 addButtonRowWithTitle:@"A-B" action:v31];
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100C9DEC4;
  void v29[3] = &unk_1012E6EA8;
  id v7 = v5;
  id v30 = v7;
  id v8 = [v3 addButtonRowWithTitle:@"A-B (bad storage, current location only)", v29 action];
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  void v27[2] = sub_100C9DEE4;
  v27[3] = &unk_1012E6EA8;
  id v9 = v7;
  id v28 = v9;
  id v10 = [v3 addButtonRowWithTitle:@"A-B (bad storage, one waypoint only)", v27 action];
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100C9DF04;
  v25[3] = &unk_1012E6EA8;
  id v11 = v9;
  id v26 = v11;
  id v12 = [v3 addButtonRowWithTitle:@"A-B-C (no progress)" action:v25];
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 3221225472;
  v23[2] = sub_100C9DF20;
  void v23[3] = &unk_1012E6EA8;
  id v13 = v11;
  id v24 = v13;
  id v14 = [v3 addButtonRowWithTitle:@"A-B-C-D (no progress)" action:v23];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_100C9DF3C;
  v21[3] = &unk_1012E6EA8;
  long long v15 = v13;
  id v22 = v15;
  id v16 = [v3 addButtonRowWithTitle:@"A-B-C-D (resume towards C)" action:v21];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_100C9DF58;
  v19[3] = &unk_1012E6EA8;
  long long v17 = v15;
  id v20 = v17;
  id v18 = [v3 addButtonRowWithTitle:@"A-B-C-D (resume towards D)" action:v19];

  objc_destroyWeak(&v34);
  objc_destroyWeak(&location);
}

void sub_100C9D020(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_100C9D044(uint64_t a1, void *a2, unint64_t a3, void *a4)
{
  id v7 = a4;
  v21[0] = 0;
  v21[1] = v21;
  v21[2] = 0x2020000000;
  if (a3 <= 1) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = a3;
  }
  v21[3] = v8;
  id v9 = [*(id *)(a1 + 32) presentingViewController];
  id v10 = [v9 _maps_mapsSceneDelegate];

  id v11 = [v10 chromeViewController];
  id v12 = [v11 currentTraits];
  id v13 = *(void **)(a1 + 32);
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100C9D1DC;
  v16[3] = &unk_10131FF08;
  v20[1] = a2;
  void v16[4] = v13;
  id v14 = v12;
  id v17 = v14;
  uint64_t v19 = v21;
  id v15 = v7;
  id v18 = v15;
  objc_copyWeak(v20, (id *)(a1 + 40));
  [v13 _searchForWaypointsWithCompletion:v16];
  objc_destroyWeak(v20);

  _Block_object_dispose(v21, 8);
}

void sub_100C9D1AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

void sub_100C9D1DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  id v5 = +[NanoDirectionWaypoint directionWaypointForCurrentLocation:0];
  [v4 addObject:v5];

  if (*(void *)(a1 + 72))
  {
    unint64_t v6 = 0;
    do
    {
      for (unint64_t i = v6; i >= (unint64_t)[v3 count]; i -= (unint64_t)[v3 count])
        ;
      uint64_t v8 = [v3 objectAtIndexedSubscript:i];
      id v9 = [v8 _geoMapItem];
      id v10 = +[NanoDirectionWaypoint directionWaypointWithGEOMapItem:v9];
      [v4 addObject:v10];

      ++v6;
    }
    while (v6 < *(void *)(a1 + 72));
  }
  id v11 = *(void **)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C9D3B4;
  v15[3] = &unk_10131FEE0;
  id v13 = *(void **)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  id v16 = v13;
  objc_copyWeak(&v19, (id *)(a1 + 64));
  id v14 = v4;
  id v17 = v14;
  [v11 _requestRouteWithWaypoints:v14 traits:v12 completion:v15];

  objc_destroyWeak(&v19);
}

void sub_100C9D3A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C9D3B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  void v22[2] = sub_100C9D5E8;
  v22[3] = &unk_10131FE40;
  void v22[4] = *(void *)(a1 + 48);
  v20[0] = 0;
  v20[1] = v20;
  id v20[2] = 0x3032000000;
  v20[3] = sub_1001044B0;
  void v20[4] = sub_100104AC8;
  id v21 = 0;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100C9D748;
  v15[3] = &unk_10131FE68;
  id v4 = objc_retainBlock(v22);
  id v17 = v4;
  id v16 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v18 = v20;
  uint64_t v19 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100C9DA38;
  v9[3] = &unk_10131FEB8;
  objc_copyWeak(&v14, (id *)(a1 + 56));
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  id v10 = v6;
  uint64_t v12 = v7;
  id v13 = v20;
  id v11 = *(id *)(a1 + 32);
  id v8 = +[HistoryEntryRecentsItem saveRoute:v3 withOriginalHistoryIdentifier:0 editBlock:v15 completionBlock:v9];

  objc_destroyWeak(&v14);
  _Block_object_dispose(v20, 8);
}

void sub_100C9D5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  objc_destroyWeak(v26);
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_100C9D5E8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([(__CFString *)v6 length])
  {
    uint64_t v7 = sub_1005768D4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      int v11 = 138412290;
      uint64_t v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Updating test route request storage for variant \"%@\"", (uint8_t *)&v11, 0xCu);
    }

    if (v6 == @"current-location-only")
    {
      id v8 = [v5 waypoints];
      uint64_t v9 = [v8 firstObject];
    }
    else
    {
      if (v6 != @"one-waypoint-only") {
        goto LABEL_11;
      }
      id v8 = [v5 waypoints];
      uint64_t v9 = [v8 lastObject];
    }
    id v10 = (void *)v9;

    if (v10)
    {
      [v5 clearWaypoints];
      [v5 addWaypoints:v10];
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
LABEL_11:
}

void sub_100C9D748(void *a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    id v5 = [v4 routeRequestStorage];
    (*(void (**)(void))(a1[5] + 16))();
    [v4 setRouteRequestStorage:v5];
    id v6 = [v5 waypoints];
    id v7 = [v6 copy];
    uint64_t v8 = *(void *)(a1[6] + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    [v4 setNavigationInterrupted:1];
    id v10 = sub_1005768D4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      LOWORD(v23) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Saving for Resume Route...", (uint8_t *)&v23, 2u);
    }
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v11 = v3;
    uint64_t v12 = [v11 routeRequestStorage];
    (*(void (**)(void))(a1[5] + 16))();
    [v11 setRouteRequestStorage:v12];
    id v13 = [v12 waypoints];
    id v14 = [v13 copy];
    uint64_t v15 = *(void *)(a1[6] + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;

    [v11 setNavigationInterrupted:1];
    unint64_t v17 = *(void *)(*(void *)(a1[7] + 8) + 24);
    if (v17 >= (unint64_t)[v12 waypointsCount])
    {
      uint64_t v18 = sub_1005768D4();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        LOWORD(v23) = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Not setting progress waypoint index for test route, it's out of bounds", (uint8_t *)&v23, 2u);
      }
    }
    else
    {
      [v11 setRouteProgressWaypointIndex:*(__int16 *)(*(void *)(a1[7] + 8) + 24)];
    }
    uint64_t v19 = [v12 waypointsAtIndex:*(void *)(*(void *)(a1[7] + 8) + 24)];
    id v20 = sub_1005768D4();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
    {
      uint64_t v21 = *(void *)(*(void *)(a1[7] + 8) + 24);
      id v22 = [v19 name];
      int v23 = 134218242;
      uint64_t v24 = v21;
      __int16 v25 = 2112;
      id v26 = v22;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Saving for Resume Route (resuming towards waypoint index %lu, \"%@\")...", (uint8_t *)&v23, 0x16u);
    }
  }
}

void sub_100C9DA38(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100C9DB30;
  block[3] = &unk_10131FE90;
  objc_copyWeak(&v14, (id *)(a1 + 64));
  id v10 = v3;
  id v4 = *(id *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  id v11 = v4;
  uint64_t v13 = v5;
  long long v8 = *(_OWORD *)(a1 + 40);
  id v6 = (id)v8;
  long long v12 = v8;
  id v7 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v14);
}

void sub_100C9DB30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    id v3 = *(void **)(a1 + 32);
    if (v3)
    {
      id v4 = [v3 localizedDescription];
      uint64_t v5 = +[UIAlertController alertControllerWithTitle:@"Route Not Saved" message:v4 preferredStyle:1];

      id v6 = +[UIAlertAction actionWithTitle:@"Cancel" style:1 handler:0];
      [v5 addAction:v6];

      [WeakRetained presentViewController:v5 animated:1 completion:0];
    }
    else
    {
      uint64_t v5 = sub_100018584();
      [v5 hintRefreshOfType:11];
      id v7 = [*(id *)(a1 + 40) valueForKey:@"name"];
      unint64_t v8 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
      if (v8 >= (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) count])
      {
        uint64_t v9 = 0;
      }
      else
      {
        uint64_t v9 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)];
      }
      id v10 = [*(id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) valueForKey:@"name"];
      id v11 = [v7 componentsJoinedByString:@" >\n"];
      long long v12 = +[NSString stringWithFormat:@"Requested Waypoints:\n%@", v11];

      if (*(void *)(a1 + 48))
      {
        uint64_t v13 = [v10 componentsJoinedByString:@" >\n"];
        uint64_t v14 = [v12 stringByAppendingFormat:@"\n\nFinal Waypoints:\n%@\n\nPost-processing: %@", v13, *(void *)(a1 + 48)];

        long long v12 = (void *)v14;
      }
      if (v9)
      {
        uint64_t v15 = [v9 name];
        uint64_t v16 = [v12 stringByAppendingFormat:@"\n\nResuming to: %@", v15];

        long long v12 = (void *)v16;
      }
      unint64_t v17 = [WeakRetained parentViewController];
      uint64_t v18 = +[UIAlertController alertControllerWithTitle:@"Route Saved" message:v12 preferredStyle:1];
      uint64_t v19 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:0];
      [v18 addAction:v19];

      v22[0] = _NSConcreteStackBlock;
      v22[1] = 3221225472;
      void v22[2] = sub_100C9DE98;
      v22[3] = &unk_1012E6DE0;
      id v23 = v17;
      id v20 = v17;
      uint64_t v21 = +[UIAlertAction actionWithTitle:@"Close Debug Panel" style:0 handler:v22];
      [v18 addAction:v21];

      [WeakRetained presentViewController:v18 animated:1 completion:0];
    }
  }
}

id sub_100C9DE98(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100C9DEA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DEC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DEE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DF04(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DF20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DF3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100C9DF58(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100C9E0B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100C9E0D8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6
    || ([v5 mapItems],
        long long v12 = objc_claimAutoreleasedReturnValue(),
        id v13 = [v12 count],
        v12,
        !v13))
  {
    id v7 = sub_1005768D4();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v17 = 138412290;
      id v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to fetch test destination: %@", (uint8_t *)&v17, 0xCu);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    if (WeakRetained)
    {
      uint64_t v9 = [v6 localizedDescription];
      id v10 = +[UIAlertController alertControllerWithTitle:@"Failed to find test waypoints" message:v9 preferredStyle:1];

      id v11 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:0];
      [v10 addAction:v11];

      [WeakRetained presentViewController:v10 animated:1 completion:0];
    }
  }
  else
  {
    id v14 = objc_alloc_init((Class)NSMutableArray);
    uint64_t v15 = +[NanoDirectionWaypoint directionWaypointForCurrentLocation:0];
    [v14 addObject:v15];

    uint64_t v16 = [v5 mapItems];
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100C9E420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100C9E444(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = [v4 lastError];
  if (v5)
  {
    id v6 = sub_1005768D4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v15 = 138412290;
      unint64_t v16 = (unint64_t)v5;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to fetch test route: %@", (uint8_t *)&v15, 0xCu);
    }

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      unint64_t v8 = [v5 localizedDescription];
      uint64_t v9 = +[UIAlertController alertControllerWithTitle:@"Failed to get test route" message:v8 preferredStyle:1];

      id v10 = +[UIAlertAction actionWithTitle:@"OK" style:1 handler:0];
      [v9 addAction:v10];

      [WeakRetained presentViewController:v9 animated:1 completion:0];
    }
  }
  else
  {
    id v11 = [v4 routes];
    id WeakRetained = [v11 firstObject];

    long long v12 = sub_1005768D4();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      unint64_t v13 = [WeakRetained expectedTime] / 0x3CuLL;
      id v14 = [*(id *)(a1 + 32) valueForKey:@"name"];
      int v15 = 134218242;
      unint64_t v16 = v13;
      __int16 v17 = 2112;
      id v18 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Fetched a %lu minute test route with waypoints: %@", (uint8_t *)&v15, 0x16u);
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100C9E6B8(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Snapshotting" content:&stru_10131FFC0];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:@"Radar" content:&stru_101320000];
}

void sub_100C9E72C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Clear snapshot cache" action:&stru_10131FFE0];
}

void sub_100C9E760(id a1)
{
  id v1 = +[MURouteSnapshotManager sharedInstance];
  [v1 purgeSnapshotsWithCompletionBlock:0];
}

void sub_100C9E7AC(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"TTR button", MapsConfig_CustomRouteTTRButtonEnabled, off_1015F1528 geoConfigKey];
}

void sub_100C9E818(id a1, MapsDebugValuesViewController *a2)
{
  uint64_t v9 = a2;
  id v2 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Elevation Graph (Smoothing)" content:&stru_101320040];
  id v3 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Elevation Graph (Accessibility)" content:&stru_101320060];
  id v4 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Elevation Graph (Planning, Normalisation)" content:&stru_101320080];
  id v5 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Elevation Graph (Planning, Alternative Normalisation)" content:&stru_1013200A0];
  id v6 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Routing Options" content:&stru_1013200C0];
  id v7 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Annotations" content:&stru_1013200E0];
  id v8 = [(MapsDebugValuesViewController *)v9 addSectionWithTitle:@"Out of Coverage Error" content:&stru_101320100];
}

void sub_100C9E92C(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_ElevationGraphSkipSmoothing;
  id v3 = off_1015EF7F8;
  id v8 = a2;
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Skip all smoothing", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Ignore server smoothing range", MapsConfig_ElevationGraphIgnoreServerMinimumRange, off_1015EF9C8 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Client smoothing (metres)", @"e.g. 40", 2, MapsConfig_ElevationGraphSmoothingAdjustment, off_1015EF7E8 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Fake segment descriptions (AX)" defaultsKey:@"ElevationGraphFakeSegmentDescriptions"];
  [(MapsDebugTableSection *)v8 setFooter:@"Client smoothing only applies in the absence of server smoothing values or the Ignore switch."];
}

void sub_100C9EA18(id a1, MapsDebugTableSection *a2)
{
  id v3 = a2;
  id v2 = [(MapsDebugTableSection *)v3 addSwitchRowWithTitle:@"Fake segment descriptions (AX)" defaultsKey:@"ElevationGraphFakeSegmentDescriptions"];
  [(MapsDebugTableSection *)v3 setFooter:@"Generates fake 4 equally-sized segments with generic names."];
}

void sub_100C9EA7C(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingMinimumDistance;
  id v3 = off_1015EFB08;
  uint64_t v9 = a2;
  id v4 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Min route length", 0, 2, v2, v3 placeholderText inputType geoConfigKeyDouble];
  id v5 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Average route length", 0, 2, MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingAverageDistance, off_1015EFB18 placeholderText inputType geoConfigKeyDouble];
  id v6 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"Max route length", 0, 2, MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingMaximumDistance, off_1015EFB28 placeholderText inputType geoConfigKeyDouble];
  id v7 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"A", 0, 2, MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingA, off_1015EFB38 placeholderText inputType geoConfigKeyDouble];
  id v8 = [(MapsDebugTableSection *)v9 addGEOTextFieldRowWithTitle:@"B", 0, 2, MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingB, off_1015EFB48 placeholderText inputType geoConfigKeyDouble];
  [(MapsDebugTableSection *)v9 setFooter:@"Normalisation is done using the equation double y = A + B ln(x), where x is the distance in km and y is the ratio from 0.0 to 1.0 for available chart width."];
}

void sub_100C9EBAC(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingForceLinear;
  id v3 = off_1015EFB58;
  id v6 = a2;
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Force linear calculation", v2, v3 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addGEOTextFieldRowWithTitle:@"Avg linear ratio", 0, 2, MapsConfig_RoutePlanningElevationGraphBarCalculationCyclingLinearMinAvgRatio, off_1015EFB68 placeholderText inputType geoConfigKeyDouble];
  [(MapsDebugTableSection *)v6 setFooter:@"Uses simple linear equations to figure out the chart width based on route length. Route lengths from Min to Average will reach a max of [avg linear ratio] of available width, e.g. 70%. From Average to Max covers the remaining available width, e.g. 30%."];
}

void sub_100C9EC50(id a1, MapsDebugTableSection *a2)
{
  uint64_t v2 = MapsConfig_RoutePlanningShowAllPossibleCyclingOptions;
  id v3 = off_1015EF818;
  id v5 = a2;
  id v4 = [(MapsDebugTableSection *)v5 addSwitchRowWithTitle:@"Show all possible options", v2, v3 geoConfigKey];
  [(MapsDebugTableSection *)v5 setFooter:@"China doesn't support avoidance, but does support e-bike. This switch enables the UI for both for all countries."];
}

void sub_100C9ECC8(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Show all inclines, dismounts, etc", MapsConfig_ShowRouteAnnotationsForAlternateRoutes, off_1015F0688 geoConfigKey];
}

void sub_100C9ED00(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addGEOTextFieldRowWithTitle:@"Punchout URL", 0, 3, MapsConfig_RoutePlanningEnableCyclingOutOfCoverageFeatureAvailabilityPunchoutURL, off_1015EFC48 placeholderText inputType geoConfigKeyString];
}

void sub_100C9EE00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C9EE1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100C9EEE4;
  _OWORD v5[3] = &unk_1012E7EF8;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  id v4 = [v3 addSectionWithTitle:@"Verified Business Header" content:v5];
  objc_destroyWeak(&v6);
}

void sub_100C9EED0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100C9EEE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addSliderRowWithTitle:@"Logo visibility start transition" subtitleStringHandler:&stru_101320120 min:MapsUIConfig_EnhancedPlaceHeaderLogoStartTransition[0] max:MapsUIConfig_EnhancedPlaceHeaderLogoStartTransition[1] geoConfigKeyDouble:0.0 changeHandler:0.0];
  id v5 = [v3 addSliderRowWithTitle:@"Logo visibility end transition" subtitleStringHandler:&stru_101320140 min:MapsUIConfig_EnhancedPlaceHeaderLogoEndTransition[0] max:MapsUIConfig_EnhancedPlaceHeaderLogoEndTransition[1] geoConfigKeyDouble:0.0 changeHandler:0.0];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100C9F088;
  v7[3] = &unk_1012E6708;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  id v6 = [v3 addButtonRowWithTitle:@"Restore Defaults" action:v7];
  objc_destroyWeak(&v8);
}

void sub_100C9F004(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

NSString *__cdecl sub_100C9F018(id a1, float a2)
{
  return +[NSString stringWithFormat:@"The percentage where the logo should start to become visibile.  Current value is %.2f.  Default is 0.6", a2];
}

NSString *__cdecl sub_100C9F050(id a1, float a2)
{
  return +[NSString stringWithFormat:@"The percentage where the logo should be fully visible.  Current value is %.2f.  Default is 0.9", a2];
}

void sub_100C9F088(uint64_t a1)
{
  GEOConfigSetDouble();
  GEOConfigSetDouble();
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained reloadData];
}

void sub_100C9F138(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Features" content:&stru_101320180];
}

void sub_100C9F16C(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Place Card Impressions" defaultsKey:@"EnablePlacecardImpressionLoggingVisualization" switchOnStateIfUnset:0 changeHandler:&stru_1013201A0];
  id v3 = [(MapsDebugTableSection *)v4 addSwitchRowWithTitle:@"Search Result Impressions" defaultsKey:@"EnableSearchResultsImpressionLoggingVisualization" switchOnStateIfUnset:0 changeHandler:&stru_1013201C0];
}

void sub_100C9F1F8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[MapsImpressionsPlaceCardFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_100C9F258(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = +[MapsImpressionsSearchResultsFloatingDebugViewController sharedInstance];
  id v4 = v3;
  if (v2) {
    [v3 attach];
  }
  else {
    [v3 detach];
  }
}

void sub_100C9F2EC(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"Maps 100" content:&stru_101320200];
}

void sub_100C9F320(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Enable Save MapItem UI", MapKitConfig_MKUseSerializedMapItemStorage[0], MapKitConfig_MKUseSerializedMapItemStorage[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v6 addButtonRowWithTitle:@"Clear Saved MapItem" action:&stru_101320220];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Hide rating ribbon item if call to action present", MapsUIConfig_MakeRatingScoreAndCallToActionRibbonItemsMutuallyExclusive[0], MapsUIConfig_MakeRatingScoreAndCallToActionRibbonItemsMutuallyExclusive[1] geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Force separator style", MapsUIConfig_ForceSeparatorPlacecardStyle[0], MapsUIConfig_ForceSeparatorPlacecardStyle[1] geoConfigKey];
}

void sub_100C9F3E0(id a1)
{
  id v1 = NSTemporaryDirectory();
  id v3 = [v1 stringByAppendingPathComponent:@"SavedMapItem.json"];

  id v2 = +[NSFileManager defaultManager];
  [v2 removeItemAtPath:v3 error:0];
}

void sub_100C9F54C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100C9F568(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [v13 addSectionWithTitle:@"Ratings and Photos" content:&stru_101320240];
  id v4 = [v13 addSectionWithTitle:@"Informed Consent" content:&stru_1013202E0];
  id v5 = [v13 addSectionWithTitle:@"Notifications" content:&stru_101320360];
  id v6 = [v13 addSectionWithTitle:@"Siri Traffic Incidents" content:&stru_1013203C0];
  id v7 = +[GEOPlatform sharedPlatform];
  unsigned int v8 = [v7 isInternalInstall];

  if (v8) {
    id v9 = [v13 addSectionWithTitle:@"Laguna Beach Submission Defaults" content:&stru_101320440];
  }
  id v10 = [v13 addSectionWithTitle:@"LogDiscard Settings" content:&stru_101320460];
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  long long v12 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained[12] appendEnvironmentSectionToDebugController:v13];
  }
}

void sub_100C9F6BC(id a1, MapsDebugTableSection *a2)
{
  id v11 = a2;
  id v2 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Enable user generated content", MapsFeaturesConfig_ShouldEnableLagunaBeach[0], MapsFeaturesConfig_ShouldEnableLagunaBeach[1] geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v11 addButtonRowWithTitle:@"Clear all POI enrichment content" action:&stru_101320260];
  id v4 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Enable add photo override" defaultsKey:@"__internal__AllowAddingFakePhotos" switchOnStateIfUnset:0 changeHandler:0];
  id v5 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Tipkit banner set", MapsConfig_LagunaBeachHasShownTipKitAlert, off_1015EF978 geoConfigKey];
  id v6 = [(MapsDebugTableSection *)v11 addSwitchRowWithTitle:@"Force All Siri Suggestions As Rating Suggestions", MapsConfig_ARPForceAllMapsHomeSuggestionsAsRatingSuggestions, off_1015EF988 geoConfigKey];
  GEOConfigGetDouble();
  unsigned int v8 = +[NSString stringWithFormat:@"Present Third Party Photo Sharing splash screen (%.f s delay)", v7];
  id v9 = [(MapsDebugTableSection *)v11 addButtonRowWithTitle:v8 action:&stru_101320280];

  id v10 = [(MapsDebugTableSection *)v11 addButtonRowWithTitle:@"Reset Third Party Photo Sharing splash screen" action:&stru_1013202C0];
}

void sub_100C9F820(id a1)
{
}

void sub_100C9F82C(id a1)
{
  GEOConfigGetDouble();
  dispatch_time_t v2 = dispatch_time(0, (uint64_t)(v1 * 1000000000.0));

  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, &stru_1013202A0);
}

void sub_100C9F888(id a1)
{
  id v3 = objc_alloc_init(UGCThirdPartyPhotoSharingSplashViewController);
  [(UGCThirdPartyPhotoSharingSplashViewController *)v3 setModalPresentationStyle:2];
  double v1 = +[UIApplication sharedMapsDelegate];
  dispatch_time_t v2 = [v1 chromeViewController];
  [v2 _maps_topMostPresentViewController:v3 animated:1 completion:0];
}

void sub_100C9F910(id a1)
{
  id v1 = +[UGCThirdPartyPhotoSharingPreferencesManager sharedManager];
  [v1 debugEraseServerSavedThirdPartyPhotoSharingPreference];
}

void sub_100C9F958(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addCheckmarkRowsGroupWithContent:&stru_101320300 get:&stru_101320320 set:&stru_101320340];
}

void sub_100C9F994(id a1, MapsDebugCheckmarkRowsGroup *a2)
{
  unsigned int v8 = a2;
  id v2 = +[NSNumber numberWithInteger:1];
  id v3 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Opted in" value:v2];

  id v4 = +[NSNumber numberWithInteger:2];
  id v5 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Opted out" value:v4];

  id v6 = +[NSNumber numberWithInteger:0];
  id v7 = [(MapsDebugCheckmarkRowsGroup *)v8 addRowWithTitle:@"Hasn't answered yet" value:v6];
}

id sub_100C9FA74(id a1)
{
  uint64_t Integer = GEOConfigGetInteger();

  return +[NSNumber numberWithInteger:Integer];
}

void sub_100C9FAC0(id a1, id a2)
{
  [a2 integerValue];

  GEOConfigSetInteger();
}

void sub_100C9FAFC(id a1, MapsDebugTableSection *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Present Fake Photo Submission Resolution (10s delay)" action:&stru_101320380];
  id v3 = [(MapsDebugTableSection *)v4 addButtonRowWithTitle:@"Present Fake Photo Attribution Cleared Notification" action:&stru_1013203A0];
}

void sub_100C9FB70(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 simulateUGCPhotoSubmissionResolution];
}

void sub_100C9FBB8(id a1)
{
  id v1 = +[MSPMapsPushDaemonRemoteProxy sharedInstance];
  [v1 simulateUGCPhotoAttributionClearedNotification];
}

void sub_100C9FC00(id a1, MapsDebugTableSection *a2)
{
  id v7 = a2;
  id v2 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Enabled", MapsFeaturesConfig_EnableBakersfield[0], MapsFeaturesConfig_EnableBakersfield[1], 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v3 = [(MapsDebugTableSection *)v7 addSwitchRowWithTitle:@"Debug submissions", MapsConfig_TrafficIncidentsDebugSettingSubmissions, off_1015EF3D8, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v4 = [(MapsDebugTableSection *)v7 addButtonRowWithTitle:@"Delete all cached layout results" action:&stru_1013203E0];
  id v5 = [(MapsDebugTableSection *)v7 addButtonRowWithTitle:@"Delete all user generated reports" action:&stru_101320400];
  id v6 = [(MapsDebugTableSection *)v7 addButtonRowWithTitle:@"Rollover annon ID" action:&stru_101320420];
}

void sub_100C9FCEC(id a1)
{
  id v1 = +[TrafficIncidentLayoutStorage sharedInstance];
  [v1 clearCache];
}

void sub_100C9FD34(id a1)
{
  id v1 = +[TrafficIncidentsStorageManager sharedInstance];
  [v1 clearCache];
}

void sub_100C9FD7C(id a1)
{
  id v1 = +[TrafficIncidentAuthenticationManager sharedInstance];
  [v1 rolloverAnonymousId];
}

void sub_100C9FDC4(id a1, MapsDebugTableSection *a2)
{
  id v6 = a2;
  id v2 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Send geotags with photos", MapsConfig_Debug_UGCSendGeotagsWithPhotos, off_1015EFAC8, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v3 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Send timestamps with photos", MapsConfig_Debug_UGCSendTimestampsWithPhotos, off_1015EFAD8, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v4 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Send device location with submission", MapsConfig_Debug_UGCSendDeviceLocationWithSubmission, off_1015EFAE8, 0, 0 geoConfigKey switchOnStateIfUnset changeHandler];
  id v5 = [(MapsDebugTableSection *)v6 addSwitchRowWithTitle:@"Save photos after submission", MapsConfig_DebugUGCSaveLastAddedPhotosToDisk, off_1015EFC88 geoConfigKey];
}

void sub_100C9FEA0(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Fetch BAA certificate info" action:&stru_101320480];
}

void sub_100C9FED4(id a1)
{
  id v1 = (id)objc_opt_new();
  MSPUGCFetchClientCertificateWithCompletion();
}

void sub_100C9FF68(id a1, MapsDebugValuesViewController *a2)
{
  id v4 = a2;
  id v2 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:0 content:&stru_101320500];
  id v3 = [(MapsDebugValuesViewController *)v4 addSectionWithTitle:0 content:&stru_101320520];
}

void sub_100C9FFD4(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addSwitchRowWithTitle:@"Enable Alberta", MapsFeaturesConfig_EnableAlberta[0], MapsFeaturesConfig_EnableAlberta[1] geoConfigKey];
}

void sub_100CA000C(id a1, MapsDebugTableSection *a2)
{
  id v2 = [(MapsDebugTableSection *)a2 addButtonRowWithTitle:@"Reset Tippkit UI" action:&stru_101320540];
}

void sub_100CA0040(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  [v1 setInteger:0 forKey:@"LPRRoutingFeatureDiscoverySourceViewedTimesKey"];
}

void sub_100CA00C8(id a1, MapsDebugValuesViewController *a2)
{
  id v2 = [(MapsDebugValuesViewController *)a2 addSectionWithTitle:@"DTM" content:&stru_101320580];
}

void sub_100CA00FC(id a1, MapsDebugTableSection *a2)
{
  unsigned int v8 = a2;
  id v2 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Force show suggestion", MapsConfig_DTMForceShowFeatureDiscovery, off_1015EF778 geoConfigKey];
  id v3 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Force hide suggestion", MapsConfig_DTMForceHideFeatureDiscovery, off_1015EF788 geoConfigKey];
  id v4 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Allow repeated presentation per launch", MapsConfig_DTMFeatureDiscoveryAllowRepeatPresentationPerLaunch, off_1015EF798 geoConfigKey];
  id v5 = [(MapsDebugTableSection *)v8 addSwitchRowWithTitle:@"Allow when launched for testing" defaultsKey:@"DTMFeatureDiscoveryAllowForTests"];
  id v6 = [(MapsDebugTableSection *)v8 addGEOTextFieldRowWithTitle:@"Max required previous sessions", @"e.g. 3", 1, MapsConfig_DTMSuggestionMinimumNumberOfPreviousRoutes, off_1015EF7A8 placeholderText inputType geoConfigKeyUInteger];
  id v7 = [(MapsDebugTableSection *)v8 addButtonRowWithTitle:@"Reset user dismissals" action:&stru_1013205A0];
}

void sub_100CA020C(id a1)
{
}

void sub_100CA03A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 56));
  _Unwind_Resume(a1);
}

void sub_100CA03DC(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained addAppUISectionTo:v3];

  id v6 = objc_loadWeakRetained(a1);
  [v6 addChromeSettingsTo:v3];

  id v7 = objc_loadWeakRetained(a1);
  [v7 addCarPlaySectionTo:v3];
}

void sub_100CA0498(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained addHikingSettingsTo:v3];

  id v5 = objc_loadWeakRetained(v2);
  [v5 addImpressionLoggingSettingsTo:v3];

  id v6 = objc_loadWeakRetained(v2);
  [v6 addEnhancedBusinessSettingsTo:v3];

  id v7 = objc_loadWeakRetained(v2);
  [v7 addSmartCardsSettingsTo:v3];

  id v8 = objc_loadWeakRetained(v2);
  [v8 addDavisSettingsTo:v3];

  id v9 = objc_loadWeakRetained(v2);
  [v9 addUGCSettingsTo:v3];

  id v10 = objc_loadWeakRetained(v2);
  [v10 addLPRSettingsTo:v3];

  id v11 = objc_loadWeakRetained(v2);
  [v11 addMFDSettingsTo:v3];

  id v12 = objc_loadWeakRetained(v2);
  [v12 addRoutePlanningSettingsTo:v3];

  id v13 = objc_loadWeakRetained(v2);
  [v13 addMapsHomeSettingsTo:v3];

  id v14 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v15 = objc_loadWeakRetained(v2);
  [v15 addLookAroundSettingsTo:v3];

  id v16 = objc_loadWeakRetained(v2);
  [v16 addCollectionSettingsTo:v3];

  id v17 = objc_loadWeakRetained(v2);
  [v17 addShareETASettingsTo:v3];

  id v18 = objc_loadWeakRetained(v2);
  [v18 addScreenshot2SettingsTo:v3];

  id v19 = objc_loadWeakRetained(v2);
  [v19 addTransitSettingsTo:v3];

  id v20 = objc_loadWeakRetained(v2);
  [v20 addDoomSettingsTo:v3];

  id v21 = objc_loadWeakRetained(v2);
  [v21 addFindMyCarSettingsTo:v3];

  id v22 = objc_loadWeakRetained(v2);
  [v22 addPoisInjectionSettingsTo:v3];

  id v23 = objc_loadWeakRetained(v2);
  [v23 addAutocompleteSettingsTo:v3];

  id v24 = objc_loadWeakRetained(v2);
  [v24 addSearchSettingsTo:v3];

  id v25 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v26 = objc_loadWeakRetained(v2);
  [v26 addTipKitSettingsTo:v3];

  id v27 = objc_loadWeakRetained(v2);
  [v27 addFeaturesSectionTo:v3];
}

void sub_100CA0734(id *a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  a1 += 4;
  id WeakRetained = objc_loadWeakRetained(a1);
  [WeakRetained addMapsResetLaunchAlertsTo:v3];

  id v6 = [v3 addNavigationRowForViewControllerClass:objc_opt_class()];
  id v7 = objc_loadWeakRetained(a1);
  [v7 addCoreRecentsTo:v3];

  id v8 = objc_loadWeakRetained(a1);
  [v8 addOthersTo:v3];
}

void sub_100CA0DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_100CA0DFC(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100CA0E5C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

id sub_100CA0EBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
  id v4 = *(void **)(a1 + 32);
  id v5 = [*(id *)(a1 + 40) transportType];
  uint64_t v6 = *(void *)(a1 + 48);

  return _[v4 _continueWithOrigin:v2 destination:v3 transportType:v5 completion:v6];
}

void sub_100CA1334(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  uint64_t v6 = v5;
  if (v10)
  {
    [*(id *)(a1 + 32) setAddress:];
  }
  else if (v5)
  {
    id v7 = [SearchResult alloc];
    id v8 = [v6 mapItem];
    id v9 = [(SearchResult *)v7 initWithMapItem:v8];

    [(SearchResult *)v9 setLocationOfInterest:v6];
    [*(id *)(a1 + 32) setSearchResult:v9];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_100CA1408(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [SearchResult alloc];
  id v5 = [v3 mapItem];

  uint64_t v6 = [(SearchResult *)v4 initWithMapItem:v5];
  [*(id *)(a1 + 32) setSearchResult:v6];

  id v7 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v7();
}

SearchFieldItem *__cdecl sub_100CA1E68(id a1, SearchFieldItem *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [(SearchFieldItem *)v3 composedWaypoint];
  unsigned __int8 v5 = [v4 isServerProvidedWaypoint];

  if (v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v3;
  }

  return v6;
}

id sub_100CA214C()
{
  if (qword_101610D78 != -1) {
    dispatch_once(&qword_101610D78, &stru_101320700);
  }
  uint64_t v0 = (void *)qword_101610D70;

  return v0;
}

void sub_100CA2944(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) waypointListView];
  id v3 = [v2 indexForLastWaypointCell];

  id v4 = [*(id *)(a1 + 32) delegate];
  [v4 routeSearch:*(void *)(a1 + 32) didUpdateInputText:&stru_101324E70 atIndex:v3];

  id v5 = [*(id *)(a1 + 32) waypointListView];
  [v5 selectRowIndex:v3];
}

void sub_100CA3418(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RoutePlanningWaypointEditor");
  uint64_t v2 = (void *)qword_101610D70;
  qword_101610D70 = (uint64_t)v1;
}

void sub_100CA3D20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA3DB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);

  _Unwind_Resume(a1);
}

void sub_100CA3EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_100CA3F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA415C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA41D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA4220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA4294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA42E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA4358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA43A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA441C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA446C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA44E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA4530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA45A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA4798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA49EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA4B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_100CA4C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);

  _Unwind_Resume(a1);
}

void sub_100CA4E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100CA50CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100CA539C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_100CA5474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id v12 = v11;

  objc_sync_exit(v10);
  _Unwind_Resume(a1);
}

void sub_100CA562C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100CA62D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_Unwind_Exception *exception_object,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  _Unwind_Resume(a1);
}

id sub_100CA67C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startTestAndPerformScrollTest];
}

void sub_100CA6930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CA694C(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100CA6A70;
    _OWORD v5[3] = &unk_1012E6730;
    objc_copyWeak(&v6, v1);
    +[PPTNotificationCenter addOnceObserverForName:@"PPTTest_SearchHome_DidSetActive" object:0 usingBlock:v5];
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 addObserver:WeakRetained selector:"didUpdateDataFetcher:" name:@"PPTTest_SearchHome_DidUpdateDataFetcher" object:0];

    id v4 = [WeakRetained testCoordinator];
    [v4 pptTestEnterSearchMode];

    objc_destroyWeak(&v6);
  }
}

void sub_100CA6A58(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100CA6A70(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = [v5 object];
    [WeakRetained setNumberOfDataFetchers:[v4 _ppt_numberOfDataFetchers]];
    [WeakRetained startedSubTest:@"collectData"];
  }
}

id sub_100CA6C30(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _selectAndScrollCuratedCollection];
}

id sub_100CA6CA4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _selectAndScrollCuratedCollection];
}

void sub_100CA6D78(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100CA6D94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained canUpdateTrayLayout])
    {
      v3[0] = _NSConcreteStackBlock;
      v3[1] = 3221225472;
      v3[2] = sub_100CA6E40;
      v3[3] = &unk_1012E5D08;
      void v3[4] = v2;
      [v2 updateTrayLayout:2 animated:1 completion:v3];
    }
    else
    {
      [v2 _scrollCuratedCollection];
    }
  }
}

id sub_100CA6E40(uint64_t a1)
{
  return [*(id *)(a1 + 32) _scrollCuratedCollection];
}

void sub_100CA7070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CA70BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) finishedSubTest:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) finishedTest];
    id WeakRetained = v3;
  }
}

uint64_t sub_100CA71C8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100CA72E0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100CA7DFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [v5 traitCollection];
  id v7 = [v6 userInterfaceIdiom];

  id v8 = objc_alloc((Class)UICollectionLayoutListConfiguration);
  BOOL v9 = v7 == (id)5;
  BOOL v10 = v7 != (id)5;
  if (v9) {
    double v11 = 0.0;
  }
  else {
    double v11 = 16.0;
  }
  if (v9) {
    double v12 = 0.0;
  }
  else {
    double v12 = 8.0;
  }
  if (v9) {
    double v13 = 16.0;
  }
  else {
    double v13 = 0.0;
  }
  id v14 = [v8 initWithAppearance:2 * v10];
  [v14 setShowsSeparators:v10];
  id v15 = [v14 separatorConfiguration];
  id v30 = [v15 copy];

  id v16 = [*(id *)(a1 + 32) theme];
  id v17 = [v16 dynamicHairlineColor];
  [v30 setColor:v17];

  [v14 setSeparatorConfiguration:v30];
  [v14 setHeaderMode:1];
  [v14 setHeaderTopPadding:2.0];
  [v14 setFooterMode:1];
  id v18 = +[UIColor clearColor];
  [v14 setBackgroundColor:v18];

  id v19 = +[NSCollectionLayoutSection sectionWithListConfiguration:v14 layoutEnvironment:v5];

  [v19 setContentInsets:0.0, v11, v12, v11];
  id v20 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
  id v21 = +[NSCollectionLayoutDimension absoluteDimension:40.0];
  id v22 = +[NSCollectionLayoutSize sizeWithWidthDimension:v20 heightDimension:v21];

  id v23 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v22 elementKind:UICollectionElementKindSectionHeader alignment:1];
  [v23 setContentInsets:0.0, 0.0, -8.0, 0.0];
  id v24 = +[NSCollectionLayoutDimension fractionalWidthDimension:1.0];
  [*(id *)(*(void *)(a1 + 32) + 152) footerHeightForSection:a2 collectionView:*(void *)(*(void *)(a1 + 32) + 128)];
  id v25 = +[NSCollectionLayoutDimension estimatedDimension:](NSCollectionLayoutDimension, "estimatedDimension:");
  id v26 = +[NSCollectionLayoutSize sizeWithWidthDimension:v24 heightDimension:v25];

  id v27 = +[NSCollectionLayoutBoundarySupplementaryItem boundarySupplementaryItemWithLayoutSize:v26 elementKind:UICollectionElementKindSectionFooter alignment:5];
  [v27 setContentInsets:0.0, v13, 0.0, v13];
  v31[0] = v23;
  v31[1] = v27;
  id v28 = +[NSArray arrayWithObjects:v31 count:2];
  [v19 setBoundarySupplementaryItems:v28];

  return v19;
}

void sub_100CA88C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CA88E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    uint64_t v2 = [WeakRetained delegate];
    [v2 viewControllerShowOfflineMaps:v3];

    id WeakRetained = v3;
  }
}

BOOL sub_100CA90B8(void *a1, void *a2)
{
  [a2 frame];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];

  return CGRectIntersectsRect(*(CGRect *)&v3, *(CGRect *)&v7);
}

id sub_100CA919C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) indexPathForCell:a2];
}

MKServerFormattedString *__cdecl sub_100CAA25C(id a1, GEOComposedString *a2, unint64_t a3)
{
  uint64_t v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

id sub_100CAA2B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

MKServerFormattedString *__cdecl sub_100CAA31C(id a1, GEOComposedString *a2, unint64_t a3)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithComposedString:v3];

  return (MKServerFormattedString *)v4;
}

id sub_100CAA374(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)MKServerFormattedString) initWithGeoServerString:v3 parameters:*(void *)(a1 + 32)];

  return v4;
}

id sub_100CAD3D4()
{
  if (qword_101610D98 != -1) {
    dispatch_once(&qword_101610D98, &stru_101320938);
  }
  uint64_t v0 = (void *)qword_101610D90;

  return v0;
}

void sub_100CAD7C4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _description];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100CAD9C4(uint64_t a1)
{
  [*(id *)(a1 + 32) _cancelRequestIfNeeded];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 _notifyDidInvalidate];
}

id sub_100CADAA0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _processRequest:*(void *)(a1 + 40)];
}

void sub_100CADC94(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableDictionary);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 104);
  *(void *)(v3 + 104) = v2;
}

uint64_t sub_100CADDD0(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(*(void *)(result + 32) + 32);
  return result;
}

uint64_t sub_100CADE98(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(void *)(*(void *)(result + 32) + 48);
  return result;
}

void sub_100CADFA4(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100CAE0E8(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 72) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

uint64_t sub_100CAE1E8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 40);
  return result;
}

uint64_t sub_100CAE274(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 40) = *(unsigned char *)(result + 40);
  return result;
}

uint64_t sub_100CAE330(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = (unint64_t)(*(void *)(*(void *)(result + 32)
                                                                                                + 48)
                                                                                    - 1) < 3;
  return result;
}

void sub_100CAE3EC(uint64_t a1)
{
}

id sub_100CAE494(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setResponse:*(void *)(a1 + 40)];
}

void sub_100CAE6E8(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 104) objectForKeyedSubscript:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100CAE838(void *a1)
{
  return [*(id *)(a1[4] + 104) setObject:a1[6] forKeyedSubscript:a1[5]];
}

void sub_100CAE8D8(uint64_t a1)
{
  unsigned int v2 = [*(id *)(a1 + 32) isInvalidated];
  uint64_t v3 = sub_100CAD3D4();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v7 = 134217984;
      uint64_t v8 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%p] invalidated before we could post NanoRoutePlanningSessionWillStartNotification", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v7 = 134217984;
      uint64_t v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%p] posting NanoRoutePlanningSessionWillStartNotification", (uint8_t *)&v7, 0xCu);
    }

    id v4 = +[NSNotificationCenter defaultCenter];
    [v4 postNotificationName:@"NanoRoutePlanningSessionWillStart" object:*(void *)(a1 + 32)];
  }
}

void sub_100CAEA90(uint64_t a1)
{
  unsigned int v2 = sub_100CAD3D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 observers];
    int v8 = 134218498;
    uint64_t v9 = v3;
    __int16 v10 = 2080;
    double v11 = "-[NanoRoutePlanningSession _notifySessionDidStartLoading]_block_invoke";
    __int16 v12 = 2112;
    double v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%p] %s <%@>", (uint8_t *)&v8, 0x20u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) observers];
  uint64_t v6 = *(void **)(a1 + 32);
  int v7 = [v6 request];
  [v5 routePlanningSession:v6 didStartLoadingWithRequest:v7];
}

void sub_100CAEC38(uint64_t a1)
{
  unsigned int v2 = sub_100CAD3D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 observers];
    int v8 = 134218498;
    uint64_t v9 = v3;
    __int16 v10 = 2080;
    double v11 = "-[NanoRoutePlanningSession _notifySessionDidUpdateResponse]_block_invoke";
    __int16 v12 = 2112;
    double v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%p] %s <%@>", (uint8_t *)&v8, 0x20u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) observers];
  uint64_t v6 = *(void **)(a1 + 32);
  int v7 = [v6 response];
  [v5 routePlanningSession:v6 didUpdateWithResponse:v7];
}

void sub_100CAEDE0(uint64_t a1)
{
  unsigned int v2 = sub_100CAD3D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 observers];
    int v8 = 134218498;
    uint64_t v9 = v3;
    __int16 v10 = 2080;
    double v11 = "-[NanoRoutePlanningSession _notifySessionDidFail]_block_invoke";
    __int16 v12 = 2112;
    double v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "[%p] %s <%@>", (uint8_t *)&v8, 0x20u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) observers];
  uint64_t v6 = *(void **)(a1 + 32);
  int v7 = [v6 response];
  [v5 routePlanningSession:v6 didFailWithResponse:v7];
}

void sub_100CAEF74(uint64_t a1)
{
  unsigned int v2 = sub_100CAD3D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 observers];
    int v6 = 134218498;
    int v7 = v3;
    __int16 v8 = 2080;
    uint64_t v9 = "-[NanoRoutePlanningSession _notifyDidInvalidate]_block_invoke";
    __int16 v10 = 2112;
    double v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%p] %s <%@>", (uint8_t *)&v6, 0x20u);
  }
  uint64_t v5 = [*(id *)(a1 + 32) observers];
  [v5 routePlanningSessionDidInvalidate:*(void *)(a1 + 32)];
}

void sub_100CAF0C8(id a1)
{
  v4[0] = &off_1013AAF00;
  v5[0] = objc_opt_class();
  v4[1] = &off_1013AAF18;
  v5[1] = objc_opt_class();
  v4[2] = &off_1013AAF30;
  v5[2] = objc_opt_class();
  v4[3] = &off_1013AAF48;
  _OWORD v5[3] = objc_opt_class();
  void v4[4] = &off_1013AAF60;
  void v5[4] = objc_opt_class();
  os_log_t v1 = +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:5];
  id v2 = [v1 mutableCopy];
  uint64_t v3 = (void *)qword_101610D80;
  qword_101610D80 = (uint64_t)v2;
}

void sub_100CAF43C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained && ([WeakRetained isInvalidated] & 1) == 0)
  {
    [*(id *)(a1 + 32) _triggerStalenessTimer];
    int64_t v4 = *((void *)v3 + 6);
    switch((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))())
    {
      case 0:
        uint64_t v5 = sub_100CAD3D4();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          int v6 = sub_100A34658(v4);
          int v25 = 134218242;
          id v26 = v3;
          __int16 v27 = 2112;
          id v28 = v6;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "[%p] '%@' is still running", (uint8_t *)&v25, 0x16u);
        }
        break;
      case 1:
        int v7 = sub_100CAD3D4();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          __int16 v8 = sub_100A34658(v4);
          id v9 = [*((id *)v3 + 9) numberOfRoutes];
          id v10 = [*((id *)v3 + 9) expectedNumberOfRoutes];
          int v25 = 134218754;
          id v26 = v3;
          __int16 v27 = 2112;
          id v28 = v8;
          __int16 v29 = 2048;
          id v30 = v9;
          __int16 v31 = 2048;
          id v32 = v10;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[%p] '%@' did update; (%lu/%lu)",
            (uint8_t *)&v25,
            0x2Au);
        }
        double v11 = *(void **)(a1 + 32);
        goto LABEL_16;
      case 2:
        uint64_t v12 = 3;
        if (v4 < 3) {
          uint64_t v12 = v4;
        }
        unint64_t v13 = v12 + 1;
        id v14 = sub_100CAD3D4();
        BOOL v15 = os_log_type_enabled(v14, OS_LOG_TYPE_INFO);
        if (v13 == v4)
        {
          if (v15)
          {
            id v16 = sub_100A34658(v4);
            int v25 = 134218242;
            id v26 = v3;
            __int16 v27 = 2112;
            id v28 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[%p] '%@' reported finished, but will not advance state", (uint8_t *)&v25, 0x16u);
          }
          double v11 = v3;
LABEL_16:
          [v11 _notifySessionDidUpdateResponse];
        }
        else
        {
          if (v15)
          {
            id v23 = sub_100A34658(v4);
            id v24 = sub_100A34658(v13);
            int v25 = 134218498;
            id v26 = v3;
            __int16 v27 = 2112;
            id v28 = v23;
            __int16 v29 = 2112;
            id v30 = v24;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[%p] '%@' has finished, advancing to '%@'", (uint8_t *)&v25, 0x20u);
          }
          id v21 = v3;
          uint64_t v22 = v13;
LABEL_23:
          [v21 _transitionToState:v22];
        }
        break;
      case 3:
        id v17 = sub_100CAD3D4();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
        {
          id v18 = sub_100A34658(v4);
          id v19 = sub_100A34658(4uLL);
          id v20 = [*((id *)v3 + 9) lastError];
          int v25 = 134218754;
          id v26 = v3;
          __int16 v27 = 2112;
          id v28 = v18;
          __int16 v29 = 2112;
          id v30 = v19;
          __int16 v31 = 2112;
          id v32 = v20;
          _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "[%p] '%@' reported an error, moving to '%@'; error: %@",
            (uint8_t *)&v25,
            0x2Au);
        }
        id v21 = v3;
        uint64_t v22 = 4;
        goto LABEL_23;
      default:
        break;
    }
  }
}

void sub_100CAFB10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v5 = WeakRetained;
    unsigned __int8 v4 = [WeakRetained isInvalidated];
    id v3 = v5;
    if ((v4 & 1) == 0)
    {
      [v5 _transitionToState:*(void *)(*(void *)(a1 + 32) + 48) withClass:*(void *)(a1 + 48)];
      id v3 = v5;
    }
  }
}

void sub_100CAFDA8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 72) selectedRoute];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned __int8 v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100CAFEE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 72) selectedCompanionRoute];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  unsigned __int8 v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

id sub_100CB00C8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setSelectedRouteWithRouteID:*(void *)(a1 + 40)];
}

void sub_100CB0244(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = [WeakRetained _hasReceivedAllExpectedRoutes];
}

id sub_100CB09C4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateWithRequest:*(void *)(a1 + 40) response:*(void *)(a1 + 48)];
}

void sub_100CB0D4C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) mutableCopy];
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = *(void **)(v3 + 64);
  *(void *)(v3 + 64) = v2;

  uint64_t v5 = *(void **)(a1 + 48);
  if (v5)
  {
    int v6 = *(void **)(a1 + 32);
    id v7 = [v5 mutableCopy];
    [v6 _setResponse:v7];
  }
}

void sub_100CB10E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100CB10F8(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;
}

void sub_100CB1148(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NanoRoutePlanningSession");
  uint64_t v2 = (void *)qword_101610D90;
  qword_101610D90 = (uint64_t)v1;
}

void sub_100CB131C(id a1)
{
  os_log_t v1 = objc_alloc_init(NavMessageSignLayout);
  uint64_t v2 = (void *)qword_101610DA0;
  qword_101610DA0 = (uint64_t)v1;
}

void sub_100CB1C04(id a1)
{
  os_log_t v1 = objc_alloc_init(NavSteppingSignLayout);
  uint64_t v2 = (void *)qword_101610DB0;
  qword_101610DB0 = (uint64_t)v1;
}

void sub_100CB1C9C(id a1)
{
  os_log_t v1 = objc_alloc_init(NavPedestrianSignLayout);
  uint64_t v2 = (void *)qword_101610DC0;
  qword_101610DC0 = (uint64_t)v1;
}

void sub_100CB20D0(id a1)
{
  os_log_t v1 = objc_alloc_init(NavPedestrianSignLayoutCompactWidth);
  uint64_t v2 = (void *)qword_101610DD0;
  qword_101610DD0 = (uint64_t)v1;
}

void sub_100CB2160(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayout);
  uint64_t v2 = (void *)qword_101610DE0;
  qword_101610DE0 = (uint64_t)v1;
}

void sub_100CB2564(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutMinimizedWithJunctionView);
  uint64_t v2 = (void *)qword_101610DF0;
  qword_101610DF0 = (uint64_t)v1;
}

void sub_100CB25FC(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutCompactWithJunctionView);
  uint64_t v2 = (void *)qword_101610E00;
  qword_101610E00 = (uint64_t)v1;
}

void sub_100CB2694(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutMinimized);
  uint64_t v2 = (void *)qword_101610E10;
  qword_101610E10 = (uint64_t)v1;
}

void sub_100CB2BD0(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutSecondary);
  uint64_t v2 = (void *)qword_101610E20;
  qword_101610E20 = (uint64_t)v1;
}

void sub_100CB2D58(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutCompactWidth);
  uint64_t v2 = (void *)qword_101610E30;
  qword_101610E30 = (uint64_t)v1;
}

void sub_100CB3048(id a1)
{
  os_log_t v1 = objc_alloc_init(NavDrivingSignLayoutSecondaryCompactWidth);
  uint64_t v2 = (void *)qword_101610E40;
  qword_101610E40 = (uint64_t)v1;
}

id sub_100CB3F18()
{
  if (qword_101610E58 != -1) {
    dispatch_once(&qword_101610E58, &stru_101320AE0);
  }
  uint64_t v0 = (void *)qword_101610E50;

  return v0;
}

void sub_100CB5F64(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v9 = v3;
  if (*(void *)(a1 + 40) == 2)
  {
    [v3 setAlternateRoutesEnabled:*(unsigned __int8 *)(a1 + 48)];
  }
  else
  {
    unsigned __int8 v4 = [*(id *)(a1 + 32) trafficAlert];
    if (v4) {
      BOOL v5 = *(unsigned char *)(a1 + 48) != 0;
    }
    else {
      BOOL v5 = 0;
    }
    [v9 setAlternateRoutesEnabled:v5];
  }
  id v7 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  __int16 v8 = [v7 trafficAlert];
  [v9 setRouteMarkerOptions:[v7 _routeMarkerOptionsForCameraStyle:v6 incidentAlert:v8]];
}

void sub_100CB6C64(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ChromeNavigationDisplay");
  uint64_t v2 = (void *)qword_101610E50;
  qword_101610E50 = (uint64_t)v1;
}

void sub_100CB6CFC(id a1)
{
  os_log_t v1 = +[NSProcessInfo processInfo];
  uint64_t v2 = [v1 environment];
  id v8 = [v2 objectForKeyedSubscript:@"XCODE_BUILT_PRODUCTS"];

  if (!v8)
  {
    id v3 = UISystemRootDirectory();
    id v8 = [v3 stringByAppendingPathComponent:@"/AppleInternal/Library/Bundles/"];
  }
  id v4 = objc_alloc((Class)NSBundle);
  BOOL v5 = [v8 stringByAppendingPathComponent:@"MapsInternalExtras.bundle"];
  id v6 = [v4 initWithPath:v5];
  id v7 = (void *)qword_101610E68;
  qword_101610E68 = (uint64_t)v6;
}

void sub_100CB7764(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileLinkPreferencesProvider);
  uint64_t v2 = (void *)qword_101610E70;
  qword_101610E70 = (uint64_t)v1;
}

id sub_100CB7870(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateLinkAndNotifyObservers:1];
}

void sub_100CB7E30(id a1, id a2, id a3)
{
}

void sub_100CB81C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CB820C(id a1, id a2, id a3, RAPSearchHistoryItemTableViewCell *a4, RAPUserSearch *a5)
{
}

void sub_100CB8218(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = [a2 selectedValue];
  [v5 setSelectedValue:v6];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _instrumentSelectedSearch];
}

void sub_100CB829C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained proceedToNextQuestion:v3];
}

void sub_100CB88A4(id a1, id a2, RAPReportComposerSearchSubcategorySection *a3)
{
}

void sub_100CBC0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CBC11C(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateFooterContentWithSharingIdentity:v3];
}

void sub_100CBC618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CBC63C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)WeakRetained[10];
    WeakRetained[10] = 0;
    id v4 = WeakRetained;

    v4[8] = 1;
    id v3 = +[NSNotificationCenter defaultCenter];
    [v3 postNotificationName:CarShareETAInfoViewDidChangeShareETASuggestionVisibilityNotification object:v4];

    +[GEOAPPortal captureUserAction:399 target:126 value:0];
    id WeakRetained = v4;
  }
}

id sub_100CBC890(uint64_t a1)
{
  [*(id *)(a1 + 32) updateContent];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 48);

  return [v2 reloadData];
}

void sub_100CBCAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100CBCAC0(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  id v3 = +[CarShareTripContactCell reuseIdentifier];
  uint64_t v4 = [v2 dequeueReusableCellWithIdentifier:v3 forIndexPath:a1[5]];
  uint64_t v5 = *(void *)(a1[7] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  [*(id *)(*(void *)(a1[7] + 8) + 40) setShowsSubtitleWhenNotSharing:1];
  [*(id *)(*(void *)(a1[7] + 8) + 40) configureWithMSPSharedTripContact:*(void *)(a1[6] + 32)];
  [*(id *)(*(void *)(a1[7] + 8) + 40) setDelegate:a1[6]];
  id v7 = +[MSPSharedTripService sharedInstance];
  LODWORD(v3) = [v7 isSharingWithContact:*(void *)(a1[6] + 32)];

  if (v3)
  {
    id v8 = *(void **)(*(void *)(a1[7] + 8) + 40);
    [v8 setSharingState:3 animated:0];
  }
}

void sub_100CBCE1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100CBCE40(uint64_t a1)
{
  return [*(id *)(a1 + 32) setSharingState:1 animated:1];
}

id sub_100CBCE50(uint64_t a1)
{
  [*(id *)(a1 + 32) setSharingState:0 animated:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _stopCompletionTimer];

  return +[GEOAPPortal captureUserAction:402 target:126 value:0];
}

void sub_100CBD0A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id sub_100CBD0D8(uint64_t a1)
{
  [*(id *)(a1 + 32) setSharingState:0 animated:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _stopCompletionTimer];

  return +[GEOAPPortal captureUserAction:402 target:126 value:0];
}

void sub_100CBD140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = *(void **)(a1 + 40);
    [v4 setSharingState:0 animated:0];
  }
  else
  {
    +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:*(void *)(a1 + 32)];
    +[GEOAPPortal captureUserAction:400 target:126 value:0];
    [*(id *)(a1 + 40) setSharingState:3 animated:0];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _startCompletionTimer];
  }
}

void sub_100CBF738(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 coordinator];
  [v4 showAnnouncementForFlyover:v3];
}

void sub_100CBF9BC(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [v10 count];
  id v4 = v10;
  if (v3)
  {
    uint64_t v5 = [v10 firstObject];
    id v6 = v5;
    if (v5)
    {
      id v7 = *(void **)(a1 + 32);
      id v8 = [v5 _geoMapItem];
      [v7 updateWithGEOMapItem:v8];
    }
    uint64_t v9 = *(void *)(a1 + 40);
    if (v9) {
      (*(void (**)(uint64_t, void))(v9 + 16))(v9, *(void *)(a1 + 32));
    }

    id v4 = v10;
  }
}

void sub_100CC0CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v26 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_100CC0D60(void *a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = a1[5];
    uint64_t v3 = a1[6];
    uint64_t v5 = a1[4];
    int v6 = 138412802;
    uint64_t v7 = v5;
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) from source: %ld : state: %@", (uint8_t *)&v6, 0x20u);
  }
}

void sub_100CC0E24(uint64_t a1, void *a2)
{
  id v13 = a2;
  uint64_t v3 = +[SearchInfo searchInfoWithResults:](SearchInfo, "searchInfoWithResults:");
  if ([*(id *)(a1 + 32) hasSelectedPlaceIndex])
  {
    id v4 = [*(id *)(a1 + 32) selectedPlaceIndex];
    if (v4 < [v13 count]) {
      [v3 setSelectedIndex:[*(id *)(a1 + 32) selectedPlaceIndex]];
    }
  }
  if (v3 && !*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v5 = objc_alloc_init(SearchFieldItem);
    uint64_t v6 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    __int16 v8 = [v3 results];
    uint64_t v9 = [v8 firstObject];

    __int16 v10 = [v9 title];
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) setSearchString:v10];
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 16));
    uint64_t v12 = [WeakRetained baseActionCoordinator];
    [v12 restoreSearchForItem:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) withResults:v3];
  }
}

void sub_100CC0F90(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        __int16 v8 = [[SearchResult alloc] initWithMapItem:*(void *)(*((void *)&v9 + 1) + 8 * (void)v7)];
        if (v8) {
          [*(id *)(a1 + 32) addObject:v8];
        }

        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100CC10C0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = objc_alloc_init(SearchFieldItem);
    uint64_t v6 = [v3 title];
    [(SearchFieldItem *)v5 setSearchString:v6];

    id v7 = objc_loadWeakRetained(WeakRetained + 2);
    __int16 v8 = [v7 baseActionCoordinator];
    id v11 = v3;
    long long v9 = +[NSArray arrayWithObjects:&v11 count:1];
    long long v10 = +[SearchInfo searchInfoWithResults:v9];
    [v8 restoreSearchForItem:v5 withResults:v10];
  }
}

id sub_100CC154C()
{
  if (qword_101610E88 != -1) {
    dispatch_once(&qword_101610E88, &stru_101320D90);
  }
  uint64_t v0 = (void *)qword_101610E80;

  return v0;
}

void sub_100CC2688(void *a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = a1[5];
    uint64_t v3 = a1[6];
    uint64_t v5 = a1[4];
    int v6 = 138412802;
    uint64_t v7 = v5;
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) from source: %ld – plan: %@", (uint8_t *)&v6, 0x20u);
  }
}

id sub_100CC274C(void *a1)
{
  id v1 = a1;
  if (objc_msgSend(v1, "_maps_isEqualToSearchStringForCurrentLocationSearchResult"))
  {
    uint64_t v2 = +[SearchResult currentLocationSearchResult];
    uint64_t v3 = +[SearchFieldItem searchFieldItemWithObject:v2];
  }
  else
  {
    uint64_t v3 = +[SearchFieldItem searchFieldItemWithObject:v1];
  }

  return v3;
}

id sub_100CC27E4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = objc_opt_new();
    uint64_t v5 = [v3 route];
    int v6 = [v5 persistentData];
    [v4 setRouteData:v6];
  }
  else
  {
    if (*(unsigned char *)(a1 + 32) || ![v3 isCurrentLocation])
    {
      uint64_t v7 = [[SearchResult alloc] initWithComposedWaypoint:v3];
    }
    else
    {
      uint64_t v7 = +[SearchResult currentLocationSearchResult];
    }
    uint64_t v4 = v7;
  }
  __int16 v8 = +[SearchFieldItem searchFieldItemWithObject:v4];

  if (!v8)
  {
    uint64_t v9 = sub_100CC154C();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      __int16 v10 = [v3 shortDescription];
      int v12 = 138412290;
      id v13 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Substituting empty item for failed conversion from waypoint: %@", (uint8_t *)&v12, 0xCu);
    }
    __int16 v8 = objc_opt_new();
  }

  return v8;
}

void sub_100CC32F8(void *a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v4 = a1[5];
    uint64_t v3 = a1[6];
    uint64_t v5 = a1[4];
    int v6 = 138412802;
    uint64_t v7 = v5;
    __int16 v8 = 2048;
    uint64_t v9 = v3;
    __int16 v10 = 2112;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) from source: %ld : state: %@", (uint8_t *)&v6, 0x20u);
  }
}

void sub_100CC33BC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "AppStateManager");
  uint64_t v2 = (void *)qword_101610E80;
  qword_101610E80 = (uint64_t)v1;
}

id sub_100CC3D4C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _identifierForItem:a2];
}

TwoLinesCollectionOutlineCellModel *sub_100CC3D58(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  id v94 = v5;
  if (objc_opt_isKindOfClass())
  {
    id v7 = v5;
    __int16 v8 = *(void **)(a1 + 32);
    uint64_t v9 = [v6 topIdentifierPath];
    unsigned int v10 = [v8 containsObject:v9];

    uint64_t v11 = [v6 topIdentifierPath];
    int v12 = v11;
    if (v11 == *(void **)(*(void *)(a1 + 40) + 160)) {
      unsigned int v13 = 1;
    }
    else {
      unsigned int v13 = [v11 isEqual:];
    }

    long long v101 = 0u;
    long long v102 = 0u;
    long long v99 = 0u;
    long long v100 = 0u;
    id v33 = *(id *)(a1 + 32);
    id v34 = [v33 countByEnumeratingWithState:&v99 objects:v105 count:16];
    if (v34)
    {
      id v35 = v34;
      unsigned int v88 = v10;
      unsigned int v92 = v13;
      id v36 = v7;
      uint64_t v37 = *(void *)v100;
      do
      {
        for (unint64_t i = 0; i != v35; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v100 != v37) {
            objc_enumerationMutation(v33);
          }
          long long v39 = *(void **)(*((void *)&v99 + 1) + 8 * i);
          uint64_t v40 = [v6 topIdentifierPath];
          if ([v39 hasPrefix:v40])
          {
            id v41 = [v39 length];
            id v42 = [v6 depth];

            if (v41 > v42)
            {
              unsigned int v43 = 1;
              goto LABEL_35;
            }
          }
          else
          {
          }
        }
        id v35 = [v33 countByEnumeratingWithState:&v99 objects:v105 count:16];
      }
      while (v35);
      unsigned int v43 = 0;
LABEL_35:
      id v7 = v36;
      unsigned int v13 = v92;
      unsigned int v10 = v88;
    }
    else
    {
      unsigned int v43 = 0;
    }

    id v17 = objc_alloc_init((Class)NSMutableArray);
    if (![v7 handlerType])
    {
      float v45 = -[TwoLineOutlineCellButtonAccessoryModel initWithAccessoryType:visibility:delegate:]([TwoLineOutlineCellButtonAccessoryModel alloc], "initWithAccessoryType:visibility:delegate:", 1, [*(id *)(a1 + 40) _accessoryVisibilityForCollection:v7 withAccessoryType:1], *(void *)(a1 + 40));
      [v17 addObject:v45];
    }
    if ([v7 contentType])
    {
      int v46 = -[TwoLineOutlineCellButtonAccessoryModel initWithAccessoryType:visibility:delegate:]([TwoLineOutlineCellButtonAccessoryModel alloc], "initWithAccessoryType:visibility:delegate:", 2, [*(id *)(a1 + 40) _accessoryVisibilityForCollection:v7 withAccessoryType:2], *(void *)(a1 + 40));
      [v17 addObject:v46];
    }
    uint64_t v47 = 0;
    if (![v7 handlerType] && v10 | v43 | v13)
    {
      float v48 = [*(id *)(a1 + 40) expandedIdentifierPaths];
      id v49 = [v6 topIdentifierPath];
      id v93 = v7;
      unsigned int v50 = [v48 containsObject:v49];

      long long v51 = [*(id *)(a1 + 40) _childItemsInCollection:v93 excludeDeletions:1];
      BOOL v52 = [v51 count] != 0;

      uint64_t v85 = v43;
      v89 = [SidebarOutlineCellBackgroundModel alloc];
      uint64_t v53 = v13;
      if ((v50 & v52) != 0) {
        uint64_t v54 = 2;
      }
      else {
        uint64_t v54 = 0;
      }
      uint64_t v55 = [*(id *)(a1 + 40) delegate];
      id v56 = [v55 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 40)];
      unint64_t v57 = [*(id *)(a1 + 40) delegate];
      id v58 = [v57 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 40)];
      __int16 v59 = [*(id *)(a1 + 40) delegate];
      id v60 = [v59 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 40)];
      uint64_t v61 = v54;
      id v7 = v93;
      uint64_t v47 = [(SidebarOutlineCellBackgroundModel *)v89 initWithStyle:v85 dropStyle:v53 grouping:v61 collectionViewFocused:v56 collectionViewProxyFocused:v58 collectionViewHasDropSession:v60];
    }
    CGFloat v62 = [TwoLinesCollectionOutlineCellModel alloc];
    id v63 = [v17 copy];
    id v64 = [(TwoLinesCollectionOutlineCellModel *)v62 initWithCollection:v7 accessoryModels:v63 backgroundModel:v47 actionModel:0];

    goto LABEL_61;
  }
  id v14 = [v6 parentItem];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    BOOL v15 = v14;
  }
  else {
    BOOL v15 = 0;
  }
  id v91 = v15;

  id v16 = [v6 topIdentifierPath];
  id v17 = [v16 identifierPathByRemovingLastIdentifier];

  id v18 = *(void **)(a1 + 32);
  id v19 = [v6 topIdentifierPath];
  unsigned int v20 = [v18 containsObject:v19];

  unsigned int v21 = [*(id *)(a1 + 32) containsObject:v17];
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  id v22 = *(id *)(a1 + 32);
  id v23 = [v22 countByEnumeratingWithState:&v95 objects:v104 count:16];
  if (v23)
  {
    id v24 = v23;
    unsigned int v84 = v21;
    unsigned int v87 = v20;
    uint64_t v25 = *(void *)v96;
    do
    {
      for (j = 0; j != v24; j = (char *)j + 1)
      {
        if (*(void *)v96 != v25) {
          objc_enumerationMutation(v22);
        }
        __int16 v27 = *(void **)(*((void *)&v95 + 1) + 8 * (void)j);
        if ([v27 hasPrefix:v17])
        {
          id v28 = [v27 length];
          if (v28 >= [v6 depth])
          {
            uint64_t v29 = [v6 topIdentifierPath];
            if (v27 == (void *)v29)
            {
            }
            else
            {
              id v30 = (void *)v29;
              unsigned int v31 = [v27 isEqual:v29];

              if (!v31)
              {
                int v32 = 1;
                goto LABEL_21;
              }
            }
          }
        }
      }
      id v24 = [v22 countByEnumeratingWithState:&v95 objects:v104 count:16];
    }
    while (v24);
    int v32 = 0;
LABEL_21:
    unsigned int v20 = v87;
    unsigned int v21 = v84;
  }
  else
  {
    int v32 = 0;
  }

  id v7 = v91;
  if (v17 == *(id *)(*(void *)(a1 + 40) + 160)) {
    unsigned int v44 = 1;
  }
  else {
    unsigned int v44 = [v17 isEqual:];
  }
  if ([v91 handlerType] || (v20 | v21 | v32 | v44) != 1)
  {
    uint64_t v47 = 0;
    double v66 = v94;
  }
  else
  {
    if (v91)
    {
      double v65 = [*(id *)(a1 + 40) _childItemsInCollection:v91 excludeDeletions:1];
    }
    else
    {
      double v65 = &__NSArray0__struct;
    }
    v90 = v65;
    id v72 = [v65 lastObject];
    uint64_t v73 = v72;
    if (v72 == v94)
    {
      uint64_t v75 = 4;
    }
    else
    {
      unsigned int v74 = [v72 isEqual:v94];
      uint64_t v75 = 3;
      if (v74) {
        uint64_t v75 = 4;
      }
    }
    uint64_t v86 = v75;

    v83 = [SidebarOutlineCellBackgroundModel alloc];
    if (v20) {
      uint64_t v76 = 0;
    }
    else {
      uint64_t v76 = 2;
    }
    if (v44) {
      uint64_t v77 = 2;
    }
    else {
      uint64_t v77 = 0;
    }
    uint64_t v78 = [*(id *)(a1 + 40) delegate];
    id v79 = [v78 isCollectionViewFocusedWithSectionController:*(void *)(a1 + 40)];
    CGRect v80 = [*(id *)(a1 + 40) delegate];
    id v81 = [v80 isCollectionViewProxyFocusedWithSectionController:*(void *)(a1 + 40)];
    v82 = [*(id *)(a1 + 40) delegate];
    uint64_t v47 = -[SidebarOutlineCellBackgroundModel initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:](v83, "initWithStyle:dropStyle:grouping:collectionViewFocused:collectionViewProxyFocused:collectionViewHasDropSession:", v76, v77, v86, v79, v81, [v82 hasCollectionViewDropSessionWithSectionController:*(void *)(a1 + 40)]);

    id v7 = v91;
    double v66 = v94;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v67 = [[TwoLinesCollectionMapItemOutlineCellModel alloc] initWithMapItem:v66 currentLocation:*(void *)(a1 + 48) distanceUnit:*(void *)(a1 + 56) backgroundModel:v47];
LABEL_64:
    id v64 = (TwoLinesCollectionOutlineCellModel *)v67;
    goto LABEL_65;
  }
  if ([v66 conformsToProtocol:&OBJC_PROTOCOL___GEOTransitLine])
  {
    CFStringRef v68 = [[TwoLineOutlineCellButtonAccessoryModel alloc] initWithAccessoryType:1 visibility:1 delegate:*(void *)(a1 + 40)];
    id v69 = [TwoLinesTransitLineOutlineCellModel alloc];
    v103 = v68;
    id v70 = +[NSArray arrayWithObjects:&v103 count:1];
    id v64 = [(TwoLinesTransitLineOutlineCellModel *)v69 initWithTransitLine:v94 accessoryModels:v70 backgroundModel:v47];

LABEL_61:
    double v66 = v94;
    goto LABEL_65;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v67 = [v66 cellModelWithBackgroundModel:v47];
    goto LABEL_64;
  }
  id v64 = 0;
LABEL_65:

  return v64;
}

id sub_100CC45C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = [*(id *)(a1 + 32) _childItemsInCollection:v3 excludeDeletions:0];
  }
  else
  {
    uint64_t v4 = &__NSArray0__struct;
  }

  return v4;
}

id sub_100CC4644(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a3;
  id v5 = [v3 expandedIdentifierPaths];
  id v6 = [v4 topIdentifierPath];

  id v7 = [v5 containsObject:v6];
  return v7;
}

void sub_100CC49F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CC4A10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _showCollection:*(void *)(a1 + 32) completion:0];
}

void sub_100CC4B34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CC4B50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _showAndEditCollection:*(void *)(a1 + 32)];
}

void sub_100CC4EB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC4ECC(uint64_t a1)
{
  uint64_t v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Timeout waiting for collection %@. Dropping pending operation.", (uint8_t *)&v5, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _clearPendingCollection];
}

void sub_100CC524C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CC5268(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _editCollection:*(void *)(a1 + 32)];
  }
}

void sub_100CC5714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC5738(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = (void *)WeakRetained[21];
    id v7 = v3;
    if (v4 != *(void **)(a1 + 32))
    {
      unsigned int v5 = [v4 isEqual:];
      uint64_t v3 = v7;
      if (!v5) {
        goto LABEL_6;
      }
      id v4 = (void *)v7[21];
    }
    v3[21] = 0;

    uint64_t v6 = [v7 delegate];
    [v6 sectionController:v7 setNeedsApplySnapshotAnimated:1];

    uint64_t v3 = v7;
  }
LABEL_6:
}

void sub_100CC696C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak((id *)(v12 - 168));
  _Unwind_Resume(a1);
}

void sub_100CC6A38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _editCollectionSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC6A88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addPlacesToCollectionSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC6AD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _duplicateCollectionSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC6B28(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:1];
}

void sub_100CC6B7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:0];
}

void sub_100CC6BD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC75A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id *a11, uint64_t a12, id *location, id *a14)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)&STACK[0x268]);
  _Unwind_Resume(a1);
}

void sub_100CC76B4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _moveMapItemSnapshot:*(void *)(a1 + 32) toCollection:*(void *)(a1 + 40)];
}

void sub_100CC7704(uint64_t a1)
{
  id v5 = +[CollectionHandler collection];
  uint64_t v2 = +[NSBundle mainBundle];
  uint64_t v3 = [v2 localizedStringForKey:@"[Maps Home] New Guide Name" value:@"localized string not found" table:0];
  [v5 updateTitle:v3];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _moveMapItemSnapshot:*(void *)(a1 + 32) toCollection:v5];

  +[GEOAPPortal captureUserAction:2072 target:251 value:0];
}

void sub_100CC77D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _renameMapItemSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC7828(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:1];
}

void sub_100CC787C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:0];
}

void sub_100CC78D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _addMapItemSnapshotToFavorites:*(void *)(a1 + 32)];
}

void sub_100CC7920(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _removeMapItemSnapshotFromFavorites:*(void *)(a1 + 32) shortcut:*(void *)(a1 + 40)];
}

void sub_100CC7970(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

void sub_100CC7CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v12 - 144));
  _Unwind_Resume(a1);
}

void sub_100CC7D30(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:1];
}

void sub_100CC7D84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _openSnapshot:*(void *)(a1 + 32) inNewTab:0];
}

void sub_100CC7DD8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteSnapshot:*(void *)(a1 + 32)];
}

id sub_100CC82A0(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) updateTitle:a2 forMapItem:*(void *)(a1 + 40) completion:&stru_101320E00];
}

void sub_100CC82B8(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_1000AA148();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      id v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error renaming place in collection: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100CC850C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC8528(uint64_t a1, char a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      id v5 = sub_100576544();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error adding shortcut", v6, 2u);
      }
    }
    [WeakRetained[19] setObject:0 forKeyedSubscript:*(void *)(a1 + 32)];
  }
}

void sub_100CC87B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC87D0(uint64_t a1, char a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ((a2 & 1) == 0)
    {
      id v5 = sub_100576544();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error removing shortcut", v6, 2u);
      }
    }
    [WeakRetained[19] setObject:0 forKeyedSubscript:*(void *)(a1 + 32)];
  }
}

void sub_100CC8CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC8D18(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (v3)
    {
      uint64_t v6 = sub_1000AA148();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        id v7 = [*(id *)(a1 + 32) identifier];
        *(_DWORD *)buf = 138412546;
        BOOL v15 = v7;
        __int16 v16 = 2112;
        id v17 = v3;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Error moving map item into collection '%@': %@", buf, 0x16u);
      }
    }
    else
    {
      [WeakRetained[17] addObject:*(void *)(a1 + 40)];
      __int16 v8 = *(void **)(a1 + 40);
      uint64_t v9 = *(void *)(a1 + 48);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      void v10[2] = sub_100CC8F10;
      _OWORD v10[3] = &unk_1012F6B00;
      objc_copyWeak(&v13, (id *)(a1 + 64));
      id v11 = *(id *)(a1 + 48);
      id v12 = *(id *)(a1 + 40);
      [v8 applyToCollection:v9 completion:v10];

      objc_destroyWeak(&v13);
    }
    [v5[17] removeObject:*(void *)(a1 + 56)];
  }
}

void sub_100CC8EF4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100CC8F10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v3)
    {
      id v5 = sub_1000AA148();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        uint64_t v6 = [*(id *)(a1 + 32) identifier];
        int v7 = 138412546;
        __int16 v8 = v6;
        __int16 v9 = 2112;
        id v10 = v3;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error removing map item from collection '%@': %@", (uint8_t *)&v7, 0x16u);
      }
    }
    [WeakRetained[17] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100CC920C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100CC9230(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v3)
    {
      id v5 = sub_1000AA148();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        uint64_t v6 = [*(id *)(a1 + 32) identifier];
        int v7 = 138412546;
        __int16 v8 = v6;
        __int16 v9 = 2112;
        id v10 = v3;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error duplicating collection '%@': %@", (uint8_t *)&v7, 0x16u);
      }
    }
    [WeakRetained[18] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100CC9470(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CC9490(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    int v4 = sub_1000B944C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v6 = 138412290;
      id v7 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "error creating collection from home:%@", (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained editCollection:*(void *)(a1 + 32)];
  }
}

void sub_100CC9AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CC9ACC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (v3)
    {
      id v5 = sub_1000AA148();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        int v6 = [*(id *)(a1 + 32) identifier];
        int v7 = 138412546;
        __int16 v8 = v6;
        __int16 v9 = 2112;
        id v10 = v3;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error copying map item into collection '%@': %@", (uint8_t *)&v7, 0x16u);
      }
    }
    [WeakRetained[15] removeObject:*(void *)(a1 + 40)];
  }
}

void sub_100CCA08C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CCA0B8(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _didConfirmDeleteCollection:*(void *)(a1 + 32) deletion:*(void *)(a1 + 40)];
  }
}

void sub_100CCA248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CCA274(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (v3 && WeakRetained)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v6 = +[NSArray arrayWithObjects:&v7 count:1];
    [v5 endFailedDeletions:v6 error:v3];
  }
}

void sub_100CCA554(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CCA580(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v3)
    {
      id v5 = sub_1000AA148();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        int v6 = [*(id *)(a1 + 32) identifier];
        *(_DWORD *)buf = 138412546;
        id v10 = v6;
        __int16 v11 = 2112;
        id v12 = v3;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error deleting item from collection '%@': %@", buf, 0x16u);
      }
      uint64_t v8 = *(void *)(a1 + 40);
      uint64_t v7 = +[NSArray arrayWithObjects:&v8 count:1];
      [WeakRetained endFailedDeletions:v7 error:v3];
    }
    [WeakRetained[16] removeObject:*(void *)(a1 + 48)];
  }
}

void sub_100CCBDAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CCBDD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v7 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v8 = (void *)WeakRetained[2];
    WeakRetained[2] = 0;

    if (!v5)
    {
      v7[3] = 2;
      void v7[4] = a2;
LABEL_14:
      [v7 _update];
      goto LABEL_15;
    }
    __int16 v9 = [v5 domain];
    id v10 = GEOErrorDomain();
    if ([v9 isEqualToString:v10])
    {
      id v11 = [v5 code];

      if (v11 == (id)-6)
      {
        id v12 = sub_10057683C();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          LOWORD(v14) = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Offline Maps is not available/supported in this location", (uint8_t *)&v14, 2u);
        }
        uint64_t v13 = 0;
LABEL_13:

        v7[3] = v13;
        goto LABEL_14;
      }
    }
    else
    {
    }
    id v12 = sub_10057683C();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      int v14 = 138543362;
      id v15 = v5;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Failed to determine offline region support/size: %{public}@", (uint8_t *)&v14, 0xCu);
    }
    uint64_t v13 = 3;
    goto LABEL_13;
  }
LABEL_15:
}

void sub_100CCCBBC(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    int v4 = [[SearchResult alloc] initWithMapItem:v3];

    id v5 = objc_alloc_init(SearchFieldItem);
    [(SearchFieldItem *)v5 setSearchResult:v4];
    __int16 v9 = v4;
    int v6 = +[NSArray arrayWithObjects:&v9 count:1];
    uint64_t v7 = +[SearchInfo searchInfoWithResults:v6];

    uint64_t v8 = [*(id *)(a1 + 32) appCoordinator];
    [v8 openSearch:v5 andResults:v7];
  }
}

void sub_100CCF2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CCF310(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v8 = [v5 firstObject];
    __int16 v9 = v8;
    if (v6 || !v8)
    {
      id v10 = sub_10057683C();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        id v18 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Error fetching route address before saving: %@", buf, 0xCu);
      }
    }
    else
    {
      id v10 = [v8 addressObject];
      [*(id *)(a1 + 40) setAddress:v10];
    }

    id v11 = [*(id *)(a1 + 40) iso3166CountryCode];
    id v12 = [v11 length];

    if ((unint64_t)v12 <= 1)
    {
      dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
      uint64_t v13 = *(void **)(a1 + 40);
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_100CCF4F4;
      v14[3] = &unk_1012EAC50;
      id v15 = v13;
      id v16 = *(id *)(a1 + 32);
      [v15 updateCountryIfNecessaryWithCompletionHandler:v14];
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100CCF4F4(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_10057683C();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT))
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Error getting country for saved route. We will be unable to load this route. Error: %@", (uint8_t *)&v8, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v6 = [*(id *)(a1 + 32) userProvidedName];
    uint64_t v7 = [*(id *)(a1 + 32) iso3166CountryCode];
    int v8 = 138478083;
    id v9 = v6;
    __int16 v10 = 2112;
    id v11 = v7;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Route \"%{private}@\" was updated with country %@.", (uint8_t *)&v8, 0x16u);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100CCFEEC(uint64_t a1, void *a2, char a3)
{
  id v5 = a2;
  id v6 = sub_10057683C();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138412290;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Adding subscription for %@", buf, 0xCu);
  }

  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  uint64_t v7 = +[MapsOfflineUIHelper sharedHelper];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100CD0040;
  v9[3] = &unk_101320E50;
  char v11 = a3;
  uint64_t v8 = *(void *)(a1 + 40);
  id v10 = *(id *)(a1 + 32);
  [v7 addSubscriptionWithRegion:v8 name:v5 completion:v9];
}

void sub_100CD0040(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = sub_10057683C();
  uint64_t v8 = v7;
  if (!v5)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      id v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to add offline region: %{public}@", (uint8_t *)&v9, 0xCu);
    }
    goto LABEL_8;
  }
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    int v9 = 138412290;
    id v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Added subscription for %@", (uint8_t *)&v9, 0xCu);
  }

  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v8 = +[MapsOfflineUIHelper sharedHelper];
    [v8 resumeDownloadForSubscriptionWithIdentifier:v5 mode:1];
LABEL_8:
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100CD0184(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = +[MapsOfflineUIHelper sharedHelper];
  id v5 = [v4 cellularBehaviorForDownloadOfSize:*(void *)(a1 + 56) forForcedDownload:0];

  id v6 = sub_10057683C();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 134217984;
    id v16 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Checking cellular download policy (%ld)", buf, 0xCu);
  }

  if (v5 == (id)2)
  {
    uint64_t v7 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    goto LABEL_8;
  }
  if (v5 == (id)1)
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    uint64_t v8 = +[MapsOfflineUIHelper sharedHelper];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_100CD0384;
    v11[3] = &unk_101320EA0;
    uint64_t v9 = *(void *)(a1 + 56);
    id v14 = *(id *)(a1 + 48);
    id v12 = v3;
    id v13 = *(id *)(a1 + 32);
    id v10 = [v8 alertControllerForCellularDownloadConfirmationForRegionName:v12 size:v9 actionHandler:v11];

    [*(id *)(a1 + 40) _maps_topMostPresentViewController:v10 animated:1 completion:0];
    goto LABEL_10;
  }
  if (!v5)
  {
    uint64_t v7 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
LABEL_8:
    v7();
  }
LABEL_10:
}

void sub_100CD0384(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  uint64_t v2 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v2);
}

void sub_100CD03D0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_1000493C0();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v16 = 138543362;
      id v17 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Error fetching suggested name for region: %{public}@", (uint8_t *)&v16, 0xCu);
    }
LABEL_11:
    id v13 = 0;
    goto LABEL_12;
  }
  uint64_t v8 = [v5 firstObject];
  uint64_t v7 = [v8 name];

  id v9 = [v7 length];
  id v10 = sub_1000493C0();
  BOOL v11 = os_log_type_enabled(v10, OS_LOG_TYPE_INFO);
  if (!v9)
  {
    if (v11)
    {
      id v14 = *(NSObject **)(a1 + 32);
      int v16 = 138477827;
      id v17 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Attempt to fetch suggested name for region succeeded, but no name was provided (%{private}@)", (uint8_t *)&v16, 0xCu);
    }

    goto LABEL_11;
  }
  if (v11)
  {
    uint64_t v12 = *(void *)(a1 + 32);
    int v16 = 138478083;
    id v17 = v7;
    __int16 v18 = 2113;
    uint64_t v19 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Fetched suggested name '%{private}@' for region %{private}@", (uint8_t *)&v16, 0x16u);
  }

  uint64_t v7 = v7;
  id v13 = v7;
LABEL_12:

  if (![v13 length])
  {
    id v15 = *(id *)(a1 + 40);

    id v13 = v15;
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100CD05CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_10057683C();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138412290;
      id v11 = v3;
      id v6 = "error saving route: %@";
      uint64_t v7 = v5;
      os_log_type_t v8 = OS_LOG_TYPE_ERROR;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, v8, v6, (uint8_t *)&v10, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v9 = *(void **)(a1 + 32);
    int v10 = 138412290;
    id v11 = v9;
    id v6 = "saved route: %@";
    uint64_t v7 = v5;
    os_log_type_t v8 = OS_LOG_TYPE_INFO;
    goto LABEL_6;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100CD06D0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = *(void **)(a1 + 40);
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100CD07A8;
    v4[3] = &unk_1012EAC50;
    id v5 = v3;
    id v6 = *(id *)(a1 + 32);
    +[MapsSavedRoutesManager saveRouteData:v5 completion:v4];
  }
  else
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100CD07A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = sub_10057683C();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138412290;
      id v11 = v3;
      id v6 = "error saving route: %@";
      uint64_t v7 = v5;
      os_log_type_t v8 = OS_LOG_TYPE_ERROR;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v7, v8, v6, (uint8_t *)&v10, 0xCu);
    }
  }
  else if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v9 = *(void **)(a1 + 32);
    int v10 = 138412290;
    id v11 = v9;
    id v6 = "saved route: %@";
    uint64_t v7 = v5;
    os_log_type_t v8 = OS_LOG_TYPE_INFO;
    goto LABEL_6;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100CD08AC(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    if ([*(id *)(a1 + 32) source] == (id)2)
    {
      if ([*(id *)(a1 + 32) mapItemMuid])
      {
        id v3 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [*(id *)(a1 + 32) mapItemMuid]);
      }
      else
      {
        id v3 = 0;
      }
      +[GEOAPPortal captureUserAction:469 target:132 value:v3];
    }
    else
    {
      +[GEOAPPortal captureUserAction:463 target:131 value:0];
    }
    id v4 = objc_loadWeakRetained(v5 + 14);
    [v4 didSaveCustomRoute:*(void *)(a1 + 32)];

    id WeakRetained = v5;
  }
}

void sub_100CD0F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CD0F50(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _startRAPPlacecardTest];
}

void sub_100CD260C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CD2628(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _becomeTopContextInChromeViewController:*(void *)(a1 + 32)];
}

void sub_100CD2A68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CD2A84(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _resignTopContextInChromeViewController:*(void *)(a1 + 32)];
}

void sub_100CD2E40(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) actionCoordinator];
  id v2 = [v5 isAuthorizedForPreciseLocation];
  id v3 = [*(id *)(a1 + 32) chromeViewController];
  id v4 = [v3 mapView];
  [v4 _setShowHeadingIndicatorForStepping:v2];
}

uint64_t sub_100CD3150()
{
  uint64_t v0 = +[GEOCountryConfiguration sharedConfiguration];
  os_log_t v1 = [v0 countryCode];
  uint64_t v2 = [v1 isEqualToString:@"CN"] ^ 1;

  return v2;
}

uint64_t sub_100CD31B0()
{
  uint64_t v0 = +[GEOCountryConfiguration sharedConfiguration];
  if ([v0 currentCountrySupportsAvoidStairs])
  {
    uint64_t v1 = 1;
  }
  else
  {
    uint64_t v2 = +[GEOCountryConfiguration sharedConfiguration];
    id v3 = [v2 countryCode];
    uint64_t v1 = (uint64_t)[v3 isEqualToString:@"CN"];
  }
  return v1;
}

id sub_100CD368C()
{
  if (qword_101610EB0 != -1) {
    dispatch_once(&qword_101610EB0, &stru_101320F60);
  }
  uint64_t v0 = (void *)qword_101610EA8;

  return v0;
}

id sub_100CD38F0(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_100CD3D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100CD3D38(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "ARFrameIndoorOutdoor");
  uint64_t v2 = (void *)qword_101610EA8;
  qword_101610EA8 = (uint64_t)v1;
}

void sub_100CD3D7C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = objc_getClass("VNClassifyImageRequest");
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610EB8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    abort_report_np();
    sub_100CD3DEC();
  }
}

void sub_100CD3DEC()
{
  v1[0] = 0;
  if (!qword_101610EA0)
  {
    v1[1] = _NSConcreteStackBlock;
    v1[2] = 3221225472;
    v1[3] = sub_100CD3EF8;
    v1[4] = &unk_1012E63F0;
    v1[5] = v1;
    long long v2 = off_101320F80;
    uint64_t v3 = 0;
    qword_101610EA0 = _sl_dlopen();
    uint64_t v0 = (void *)v1[0];
    if (qword_101610EA0)
    {
      if (!v1[0]) {
        return;
      }
    }
    else
    {
      uint64_t v0 = (void *)abort_report_np();
    }
    free(v0);
  }
}

uint64_t sub_100CD3EF8()
{
  uint64_t result = _sl_dlopen();
  qword_101610EA0 = result;
  return result;
}

Class sub_100CD3F6C(uint64_t a1)
{
  sub_100CD3DEC();
  Class result = objc_getClass("VNImageRequestHandler");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_101610EC0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (VLFSessionMapsHomeMonitor *)abort_report_np();
    return (Class)[(VLFSessionMapsHomeMonitor *)v3 debugDescription];
  }
  return result;
}

void sub_100CD4524(id a1, id a2, RAPCuratedCollectionQuestion *a3)
{
  uint64_t v3 = a3;
  [(RAPQuestion *)v3 _setComplete:[(RAPCuratedCollectionQuestion *)v3 isComplete]];
}

void sub_100CD6E90(uint64_t a1, void *a2)
{
  id v18 = a2;
  uint64_t v3 = +[CustomSearchManager sharedManager];
  [v3 setCustomSearchResult:0 animated:0 shouldSelectOnMap:0];

  if (v18)
  {
    SEL v4 = [*(id *)(a1 + 32) chrome];
    [v18 coordinate];
    [v4 createCustomSearchResultForDroppedPinAtPoint:GEOLocationFloorOrdinalFromCLLocation(v18) floorOrdinal:1 animated:v5 v6];

    uint64_t v7 = [*(id *)(a1 + 32) chrome];
    os_log_type_t v8 = [v7 userLocationView];
    [v8 animateVLFPuckOnce];

    id v9 = +[MKMapService sharedService];
    [v9 captureUserAction:1030 onTarget:503 eventValue:0];
  }
  else
  {
    int v10 = +[NSBundle mainBundle];
    id v11 = [v10 localizedStringForKey:@"Mark My Location [Launch Action]" value:@"localized string not found" table:0];
    uint64_t v12 = +[NSBundle mainBundle];
    id v13 = [v12 localizedStringForKey:@"Your current location is not available." value:@"localized string not found" table:0];
    id v9 = +[UIAlertController alertControllerWithTitle:v11 message:v13 preferredStyle:1];

    id v14 = +[NSBundle mainBundle];
    id v15 = [v14 localizedStringForKey:@"Cancel" value:@"localized string not found" table:0];
    int v16 = +[UIAlertAction actionWithTitle:v15 style:1 handler:0];

    [v9 addAction:v16];
    id v17 = [*(id *)(a1 + 32) chrome];
    [v17 presentViewController:v9 animated:1 completion:0];
  }
}

void sub_100CD70E0(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v2;
    uint64_t v16 = v3;
    uint64_t v7 = +[MKLocationManager sharedLocationManager];
    unsigned int v8 = [v7 isAuthorizedForPreciseLocation];

    if (v8)
    {
      id v9 = +[MKLocationManager sharedLocationManager];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      id v11[2] = sub_100CD71E4;
      v11[3] = &unk_1012F1628;
      id v12 = *(id *)(a1 + 32);
      int v10 = [v9 singleLocationUpdateWithDesiredAccuracy:v11 handler:kCLLocationAccuracyBest];

      [v10 start];
    }
  }
}

uint64_t sub_100CD71E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100CD7C08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [[SearchResult alloc] initWithCuratedGuide:v3];

  [*(id *)(a1 + 32) addObject:v4];
}

void sub_100CD81A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose((const void *)(v25 - 112), 8);
  _Unwind_Resume(a1);
}

id sub_100CD81EC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v70 = a2;
  id v72 = a3;
  id v69 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  unsigned int v8 = [WeakRetained viewModel];
  id v9 = [v8 sections];
  v71 = [v9 objectAtIndex:[v72 section]];

  int v10 = [WeakRetained viewModel];
  id v11 = [v10 sections];
  if ([v11 count] == (id)1) {
    uint64_t v12 = 2;
  }
  else {
    uint64_t v12 = 1;
  }

  id v13 = [v71 type];
  if (v13 != (id)2)
  {
    if (v13 == (id)1)
    {
      id v41 = v71;
      id v42 = v69;
      unsigned int v43 = +[AllRefinementsMultiSelectElementCell reuseIdentifier];
      id v16 = [v70 dequeueReusableCellWithReuseIdentifier:v43 forIndexPath:v72];

      [WeakRetained getMaxWidth];
      double v45 = v44;
      int v46 = [v42 displayName];
      id v47 = [v42 isSelected];
      float v48 = [v42 labelWidth];
      [v48 floatValue];
      double v50 = v49;
      v81[0] = _NSConcreteStackBlock;
      v81[1] = 3221225472;
      v81[2] = sub_100CD8C58;
      v81[3] = &unk_1013210B8;
      v81[4] = WeakRetained;
      id v82 = v41;
      v78[0] = _NSConcreteStackBlock;
      v78[1] = 3221225472;
      v78[2] = sub_100CD8C9C;
      v78[3] = &unk_1012EB038;
      v78[4] = *(void *)(a1 + 32);
      v78[5] = WeakRetained;
      id v79 = v42;
      uint64_t v80 = v12;
      id v51 = v42;
      id v52 = v41;
      [v16 setDisplayName:v46 isSelected:v47 labelWidth:v81 maxWidth:v78 allowSelection:v50 tapHandler:v45];

      goto LABEL_18;
    }
    if (!v13)
    {
      id v14 = v69;
      uint64_t v15 = +[NonSelectableCollectionViewListCell reuseIdentifier];
      id v16 = [v70 dequeueReusableCellWithReuseIdentifier:v15 forIndexPath:v72];

      id v17 = +[UIListContentConfiguration cellConfiguration];
      id v18 = [v14 displayName];
      [v17 setText:v18];

      [v16 setContentConfiguration:v17];
      uint64_t v87 = 0;
      unsigned int v88 = &v87;
      uint64_t v89 = 0x3032000000;
      v90 = sub_100104500;
      id v91 = sub_100104AF0;
      id v92 = 0;
      id v19 = objc_alloc((Class)UISwitch);
      v83[0] = _NSConcreteStackBlock;
      v83[1] = 3221225472;
      v83[2] = sub_100CD8B18;
      v83[3] = &unk_101321090;
      v83[4] = WeakRetained;
      id v20 = v14;
      id v84 = v20;
      uint64_t v85 = &v87;
      uint64_t v86 = v12;
      unsigned int v21 = +[UIAction actionWithHandler:v83];
      id v22 = [v19 initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
      id v23 = (void *)v88[5];
      v88[5] = (uint64_t)v22;

      id v24 = [v20 isSelected];
      [(id)v88[5] setOn:v24];
      [(id)v88[5] setAccessibilityIdentifier:@"RefinementToggle"];
      id v25 = objc_alloc((Class)UICellAccessoryCustomView);
      id v26 = [v25 initWithCustomView:v88[5] placement:1];
      id v94 = v26;
      __int16 v27 = +[NSArray arrayWithObjects:&v94 count:1];
      [v16 setAccessories:v27];

      [v16 setAccessibilityIdentifier:@"RefinementToggleCell"];
      _Block_object_dispose(&v87, 8);

      goto LABEL_18;
    }
LABEL_17:
    id v16 = 0;
    goto LABEL_18;
  }
  if (!MapsFeature_IsEnabled_SearchAndDiscovery())
  {
    uint64_t v53 = +[AllRefinementsOpenAtCell reuseIdentifier];
    id v16 = [v70 dequeueReusableCellWithReuseIdentifier:v53 forIndexPath:v72];

    goto LABEL_18;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a4);
    id v28 = +[NonSelectableCollectionViewListCell reuseIdentifier];
    id v16 = [v70 dequeueReusableCellWithReuseIdentifier:v28 forIndexPath:v72];

    uint64_t v29 = +[UIListContentConfiguration cellConfiguration];
    id v30 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) displayName];
    [v29 setText:v30];

    [v16 setContentConfiguration:v29];
    uint64_t v87 = 0;
    unsigned int v88 = &v87;
    uint64_t v89 = 0x3032000000;
    v90 = sub_100104500;
    id v91 = sub_100104AF0;
    id v92 = 0;
    id v31 = objc_alloc((Class)UISwitch);
    v77[0] = _NSConcreteStackBlock;
    v77[1] = 3221225472;
    v77[2] = sub_100CD8DB8;
    v77[3] = &unk_1013210E0;
    uint64_t v32 = *(void *)(a1 + 40);
    uint64_t v33 = *(void *)(a1 + 48);
    v77[4] = WeakRetained;
    v77[5] = v32;
    v77[6] = &v87;
    v77[7] = v33;
    v77[8] = v12;
    id v34 = +[UIAction actionWithHandler:v77];
    id v35 = [v31 initWithFrame:CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height];
    id v36 = (void *)v88[5];
    v88[5] = (uint64_t)v35;

    id v37 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) isSelected];
    [(id)v88[5] setOn:v37];
    [(id)v88[5] setAccessibilityIdentifier:@"RefinementToggle"];
    id v38 = objc_alloc((Class)UICellAccessoryCustomView);
    id v39 = [v38 initWithCustomView:v88[5] placement:1];
    id v93 = v39;
    uint64_t v40 = +[NSArray arrayWithObjects:&v93 count:1];
    [v16 setAccessories:v40];

    [v16 setAccessibilityIdentifier:@"RefinementToggleCell"];
    _Block_object_dispose(&v87, 8);

    goto LABEL_18;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_17;
  }
  id v54 = v69;
  uint64_t v55 = +[AllRefinementsOpenAtCell reuseIdentifier];
  uint64_t v56 = [v70 dequeueReusableCellWithReuseIdentifier:v55 forIndexPath:v72];
  uint64_t v57 = *(void *)(*(void *)(a1 + 48) + 8);
  id v58 = *(void **)(v57 + 40);
  *(void *)(v57 + 40) = v56;

  __int16 v59 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v59) {
    [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) shouldEnableControl:[v59 isSelected] ^ 1];
  }
  v73[0] = _NSConcreteStackBlock;
  v73[1] = 3221225472;
  v73[2] = sub_100CD8F3C;
  v73[3] = &unk_101321108;
  id v74 = v54;
  id v75 = WeakRetained;
  uint64_t v76 = v12;
  uint64_t v61 = *(void *)(a1 + 48);
  uint64_t v60 = a1 + 48;
  CGFloat v62 = *(void **)(*(void *)(v61 + 8) + 40);
  id v63 = v54;
  [v62 setDateSelectionHandler:v73];
  id v64 = *(void **)(*(void *)(*(void *)v60 + 8) + 40);
  [v63 timeStamp];
  double v66 = v65;
  id v67 = [v63 displayName];
  [v64 updatedContentsWithTime:v67 isSelected:[v63 isSelected] openAtSelected:v66];

  id v16 = *(id *)(*(void *)(*(void *)v60 + 8) + 40);
LABEL_18:

  return v16;
}

void sub_100CD8AEC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_100CD8B18(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) selectionSequenceNumber];
  id v3 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v2 intValue] + 1);
  [*(id *)(a1 + 32) setSelectionSequenceNumber:v3];

  uint64_t v4 = [*(id *)(a1 + 32) togglesLogicController];
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) isOn];
  uint64_t v7 = [*(id *)(a1 + 32) selectionSequenceNumber];
  [v4 toggleValueDidChange:v5 newValue:v6 selectionSequenceNumber:v7];

  unsigned int v8 = [*(id *)(a1 + 32) analyticsDelegate];
  id v9 = [*(id *)(a1 + 40) refinementKey];
  [v8 resultRefinementTappedWithKey:v9 source:*(void *)(a1 + 56) refinementType:0 isSelected:[*(id *)(a1 + 40) isSelected]];

  id v10 = [*(id *)(a1 + 32) viewModelDelegate];
  [v10 refinementViewModelDidChange];
}

id sub_100CD8C58(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) multiSelectLogicController];
  id v3 = [v2 allowsSelectionWithViewModel:*(void *)(a1 + 40)];

  return v3;
}

void sub_100CD8C9C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 40) selectionSequenceNumber];
  id v3 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v2 intValue] + 1);
  [*(id *)(a1 + 32) setSelectionSequenceNumber:v3];

  uint64_t v4 = [*(id *)(a1 + 40) multiSelectLogicController];
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [*(id *)(a1 + 40) selectionSequenceNumber];
  [v4 didTapOnMultiSelectElement:v5 selectionSequenceNumber:v6];

  uint64_t v7 = [*(id *)(a1 + 40) analyticsDelegate];
  unsigned int v8 = [*(id *)(a1 + 48) refinementKey];
  [v7 resultRefinementTappedWithKey:v8 source:*(void *)(a1 + 56) refinementType:1 isSelected:[*(id *)(a1 + 48) isSelected]];

  id v9 = [*(id *)(a1 + 40) viewModelDelegate];
  [v9 refinementViewModelDidChange];
}

void sub_100CD8DB8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) selectionSequenceNumber];
  id v3 = +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", [v2 intValue] + 1);
  [*(id *)(a1 + 32) setSelectionSequenceNumber:v3];

  uint64_t v4 = [*(id *)(a1 + 32) togglesLogicController];
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v6 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) isOn];
  uint64_t v7 = [*(id *)(a1 + 32) selectionSequenceNumber];
  [v4 toggleValueDidChange:v5 newValue:v6 selectionSequenceNumber:v7];

  unsigned int v8 = *(void **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
  if (v8) {
    [v8 shouldEnableControl:[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) isOn] ^ 1];
  }
  id v9 = [*(id *)(a1 + 32) viewModelDelegate];
  [v9 refinementViewModelDidChange];

  id v11 = [*(id *)(a1 + 32) analyticsDelegate];
  id v10 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) refinementKey];
  [v11 resultRefinementTappedWithKey:v10 source:[*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) isSelected]];
}

void sub_100CD8F3C(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  id v9 = a3;
  if (a2)
  {
    [*(id *)(a1 + 32) updateTimeStamp:1 isSelected:a4];
    uint64_t v7 = [*(id *)(a1 + 40) viewModelDelegate];
    [v7 refinementViewModelDidChange];
  }
  unsigned int v8 = [*(id *)(a1 + 40) analyticsDelegate];
  [v8 resultRefinementTappedWithKey:v9 source:*(void *)(a1 + 48) refinementType:1 isSelected:a2];
}

id sub_100CD8FEC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = (id *)(a1 + 32);
  id v6 = a4;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v9 = [WeakRetained viewModel];
  id v10 = [v9 sections];
  id v11 = [v10 objectAtIndex:[v6 section]];

  uint64_t v12 = +[AllRefinementsHeaderView reuseIdentifier];
  id v13 = [v7 dequeueReusableSupplementaryViewOfKind:UICollectionElementKindSectionHeader withReuseIdentifier:v12 forIndexPath:v6];

  id v14 = [v11 displayName];
  [v13 setTitle:v14];

  return v13;
}

void sub_100CD9EBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double sub_100CD9F44(uint64_t a1, void *a2)
{
  id v3 = (char *)[a2 row];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = [WeakRetained toggles];
  id v6 = (char *)[v5 count] - 1;

  if (v3 == v6) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

double sub_100CD9FE0(uint64_t a1, void *a2)
{
  id v3 = (char *)[a2 row];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = (char *)[WeakRetained numberOfItems] - 1;

  if (v3 == v5) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

id sub_100CDA688()
{
  if (qword_101610EE0 != -1) {
    dispatch_once(&qword_101610EE0, &stru_101321150);
  }
  uint64_t v0 = (void *)qword_101610ED8;

  return v0;
}

void sub_100CDAA58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CDAA7C(uint64_t a1)
{
  uint64_t v2 = sub_100CDA688();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v8 = 134349056;
    id v9 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}p] Timeout timer fired", (uint8_t *)&v8, 0xCu);
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v5 = v4;
  if (v4)
  {
    [v4 setTimeoutTimer:0];
    id v6 = [v5 stateManager];
    [v6 recordSessionDisableEvent:8];

    id v7 = [v5 platformController];
    [v7 removeObserver:v5];
  }
}

void sub_100CDACDC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFVIOSessionTimeoutMonitor");
  uint64_t v2 = (void *)qword_101610ED8;
  qword_101610ED8 = (uint64_t)v1;
}

id sub_100CDADEC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) layoutIfNeeded];
}

id sub_100CDB08C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 16) setContentOffset:CGPointZero.x, CGPointZero.y];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v2 resetScrollOffset];
}

void sub_100CDB4F4(uint64_t a1)
{
  double v2 = 0.0;
  if (!*(unsigned char *)(a1 + 48)) {
    double v2 = 1.0;
  }
  [*(id *)(*(void *)(a1 + 32) + 72) setAlpha:v2];
  [*(id *)(*(void *)(a1 + 32) + 80) setConstant:*(double *)(a1 + 40)];
  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

uint64_t sub_100CDB9C4(void *a1)
{
  sub_100099700(a1, &stru_101321190);
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  id v2 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v11;
    while (2)
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v11 != v4) {
          objc_enumerationMutation(v1);
        }
        id v6 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v5);
        id v7 = [v1 firstObject];
        LODWORD(v6) = [v6 isEqualToString:v7];

        if (!v6)
        {
          uint64_t v8 = 0;
          goto LABEL_11;
        }
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v8 = 1;
LABEL_11:

  return v8;
}

NSString *__cdecl sub_100CDBAFC(id a1, VGVehicle *a2, unint64_t a3)
{
  return (NSString *)[(VGVehicle *)a2 manufacturer];
}

id sub_100CDBB04(void *a1)
{
  id v1 = a1;
  if ([v1 count])
  {
    if ([v1 count] == (id)1 || sub_100CDB9C4(v1))
    {
      id v2 = +[NSBundle mainBundle];
      id v3 = [v2 localizedStringForKey:@"Try EV title with single vehicle [Title, Route Planning, Feature Discovery, EV]", @"localized string not found", 0 value table];

      uint64_t v4 = [v1 firstObject];
      uint64_t v5 = [v4 manufacturer];
      id v6 = (void *)v5;
      if (v5)
      {
        id v7 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v5);
      }
      else
      {
        uint64_t v8 = [v1 firstObject];
        id v9 = [v8 displayName];
        id v7 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v3, v9);
      }
    }
    else
    {
      id v3 = +[NSBundle mainBundle];
      id v7 = [v3 localizedStringForKey:@"Try EV title with multiple vehicles [Title, Route Planning, Feature Discovery, EV]", @"localized string not found", 0 value table];
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

UIImage *sub_100CDBC88()
{
  return +[UIImage imageNamed:@"greenEV"];
}

BOOL sub_100CDBC9C(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    if (GEOConfigGetBOOL())
    {
      id v2 = sub_10000A540();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
      {
        LOWORD(v18) = 0;
        id v3 = "EVRoutingForceHideFeatureDiscovery is set to yes, do not show EV Onboarding";
        uint64_t v4 = v2;
        os_log_type_t v5 = OS_LOG_TYPE_INFO;
LABEL_7:
        _os_log_impl((void *)&_mh_execute_header, v4, v5, v3, (uint8_t *)&v18, 2u);
        goto LABEL_8;
      }
      goto LABEL_8;
    }
    if (GEOConfigGetBOOL())
    {
      id v2 = sub_10000A540();
      BOOL v6 = 1;
      if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
        goto LABEL_9;
      }
      LOWORD(v18) = 0;
      uint64_t v8 = "EVOnboardingShouldShowEventForKey is set to yes, should try to show vehicles.";
      id v9 = v2;
      uint32_t v10 = 2;
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, v8, (uint8_t *)&v18, v10);
      goto LABEL_9;
    }
    if (qword_101610EF0 != -1) {
      dispatch_once(&qword_101610EF0, &stru_1013211B0);
    }
    if ([(id)qword_101610EE8 containsObject:v1])
    {
      id v2 = sub_10000A540();
      BOOL v6 = 1;
      if (!os_log_type_enabled(v2, OS_LOG_TYPE_INFO)) {
        goto LABEL_9;
      }
      int v18 = 138412290;
      id v19 = v1;
      uint64_t v8 = "The key: %@ was already displayed during this Maps launch.";
      id v9 = v2;
      uint32_t v10 = 12;
      goto LABEL_18;
    }
    long long v11 = +[NSUserDefaults standardUserDefaults];
    id v2 = [v11 dictionaryForKey:@"EVViewedVehiclesHistoryDictionaryKey"];

    long long v12 = [v2 objectForKeyedSubscript:v1];
    id v13 = [v12 unsignedIntegerValue];

    Uuint64_t Integer = GEOConfigGetUInteger();
    uint64_t v15 = sub_1005761B4();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_INFO);
    BOOL v6 = (unint64_t)v13 < UInteger;
    if ((unint64_t)v13 >= UInteger)
    {
      if (v16)
      {
        int v18 = 138412546;
        id v19 = v1;
        __int16 v20 = 2048;
        unint64_t v21 = UInteger;
        id v17 = "EVOnboardingShouldShowEventForKey onboarding suggestion for %@ was shown more than %lu, won't show again.";
        goto LABEL_24;
      }
    }
    else if (v16)
    {
      int v18 = 138412546;
      id v19 = v1;
      __int16 v20 = 2048;
      unint64_t v21 = (unint64_t)v13;
      id v17 = "EVOnboardingShouldShowEventForKey onboarding suggestion for %@ was shown %lu times, will attempt to show.";
LABEL_24:
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, v17, (uint8_t *)&v18, 0x16u);
    }

    goto LABEL_9;
  }
  id v2 = sub_10000A540();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
  {
    LOWORD(v18) = 0;
    id v3 = "EVOnboardingShouldShowEventForKey key can't be nil";
    uint64_t v4 = v2;
    os_log_type_t v5 = OS_LOG_TYPE_FAULT;
    goto LABEL_7;
  }
LABEL_8:
  BOOL v6 = 0;
LABEL_9:

  return v6;
}

void sub_100CDBF90(void *a1)
{
  double v1 = COERCE_DOUBLE(a1);
  if (v1 == 0.0)
  {
    id v2 = sub_10000A540();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "EVOnboardingMarkKeyAsViewed key can't be nil", (uint8_t *)&v24, 2u);
    }
  }
  else
  {
    if (qword_101610EF0 != -1) {
      dispatch_once(&qword_101610EF0, &stru_1013211B0);
    }
    [(id)qword_101610EE8 addObject:*(void *)&v1];
    id v2 = +[NSUserDefaults standardUserDefaults];
    id v3 = [v2 dictionaryForKey:@"EVViewedVehiclesHistoryDictionaryKey"];
    id v4 = [v3 mutableCopy];
    os_log_type_t v5 = v4;
    if (v4)
    {
      id v6 = v4;
    }
    else
    {
      id v6 = +[NSMutableDictionary dictionary];
    }
    id v7 = v6;

    double Current = CFAbsoluteTimeGetCurrent();
    id v9 = [v7 objectForKeyedSubscript:*(void *)&v1];

    if (v9)
    {
      uint32_t v10 = [v7 valueForKey:@"EVViewedVehiclesHistoryLastUpdateKey"];
      long long v11 = v10;
      double v12 = Current;
      if (v10)
      {
        [v10 doubleValue];
        double v12 = v13;
      }
      GEOConfigGetDouble();
      double v15 = v14;
      if (Current <= v12 + v14)
      {
        __int16 v20 = sub_10000A540();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
        {
          int v24 = 134218240;
          double v25 = v12;
          __int16 v26 = 2048;
          double v27 = v15;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "EVOnboardingFeatureDiscovery last entry was at %.2f, min delay of %.2f hasn't passed yet", (uint8_t *)&v24, 0x16u);
        }
      }
      else
      {
        BOOL v16 = [v7 objectForKeyedSubscript:*(void *)&v1];
        id v17 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", (char *)[v16 unsignedIntegerValue] + 1);
        [v7 setObject:v17 forKeyedSubscript:*(void *)&v1];

        int v18 = +[NSNumber numberWithDouble:Current];
        [v7 setObject:v18 forKeyedSubscript:@"EVViewedVehiclesHistoryLastUpdateKey"];

        id v19 = [v7 copy];
        [v2 setObject:v19 forKey:@"EVViewedVehiclesHistoryDictionaryKey"];

        __int16 v20 = sub_10000A540();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
        {
          unint64_t v21 = [v7 objectForKeyedSubscript:*(void *)&v1];
          int v24 = 138412802;
          double v25 = v1;
          __int16 v26 = 2112;
          double v27 = *(double *)&v21;
          __int16 v28 = 2048;
          Uuint64_t Integer = GEOConfigGetUInteger();
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "EVOnboardingFeatureDiscovery for %@ has been shown %@/%lu times", (uint8_t *)&v24, 0x20u);
        }
      }
    }
    else
    {
      [v7 setObject:&off_1013AAF90 forKeyedSubscript:*(void *)&v1];
      id v22 = +[NSNumber numberWithDouble:Current];
      [v7 setObject:v22 forKeyedSubscript:@"EVViewedVehiclesHistoryLastUpdateKey"];

      id v23 = [v7 copy];
      [v2 setObject:v23 forKey:@"EVViewedVehiclesHistoryDictionaryKey"];

      long long v11 = sub_10000A540();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        int v24 = 138412290;
        double v25 = v1;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "EVOnboardingFeatureDiscovery for %@ has been shown once", (uint8_t *)&v24, 0xCu);
      }
    }
  }
}

void sub_100CDC3A8(id a1)
{
  id v1 = objc_alloc_init((Class)NSMutableSet);
  id v2 = (void *)qword_101610EE8;
  qword_101610EE8 = (uint64_t)v1;
}

uint64_t sub_100CDC3E4()
{
  uint64_t v0 = MapsConfig_TrafficIncidentsSubmitNeutralVotes;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    id v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsIncludeImagesAndComments];
    v13[0] = v2;
    v14[0] = &off_1013AEF60;
    id v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsRequireAuthentication];
    v13[1] = v3;
    v14[1] = &off_1013AEF88;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsSubmitNeutralVotes];
    v13[2] = v4;
    v14[2] = &off_1013AEFB0;
    os_log_type_t v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

    id v6 = +[NSNumber numberWithUnsignedInt:v0];
    id v7 = [v5 objectForKeyedSubscript:v6];

    uint64_t v8 = +[GEOCountryConfiguration sharedConfiguration];
    id v9 = [v8 countryCode];
    uint32_t v10 = [v7 objectForKey:v9];

    if (v10) {
      id BOOL = [v10 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v12 = BOOL;

    return (uint64_t)v12;
  }
}

uint64_t sub_100CDC5F8()
{
  uint64_t v0 = MapsConfig_TrafficIncidentsIncludeImagesAndComments;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    id v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsIncludeImagesAndComments];
    v13[0] = v2;
    v14[0] = &off_1013AEF60;
    id v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsRequireAuthentication];
    v13[1] = v3;
    v14[1] = &off_1013AEF88;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsSubmitNeutralVotes];
    v13[2] = v4;
    v14[2] = &off_1013AEFB0;
    os_log_type_t v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

    id v6 = +[NSNumber numberWithUnsignedInt:v0];
    id v7 = [v5 objectForKeyedSubscript:v6];

    uint64_t v8 = +[GEOCountryConfiguration sharedConfiguration];
    id v9 = [v8 countryCode];
    uint32_t v10 = [v7 objectForKey:v9];

    if (v10) {
      id BOOL = [v10 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v12 = BOOL;

    return (uint64_t)v12;
  }
}

uint64_t sub_100CDC80C()
{
  uint64_t v0 = MapsConfig_TrafficIncidentsRequireAuthentication;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    id v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsIncludeImagesAndComments];
    v13[0] = v2;
    v14[0] = &off_1013AEF60;
    id v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsRequireAuthentication];
    v13[1] = v3;
    v14[1] = &off_1013AEF88;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsSubmitNeutralVotes];
    v13[2] = v4;
    v14[2] = &off_1013AEFB0;
    os_log_type_t v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

    id v6 = +[NSNumber numberWithUnsignedInt:v0];
    id v7 = [v5 objectForKeyedSubscript:v6];

    uint64_t v8 = +[GEOCountryConfiguration sharedConfiguration];
    id v9 = [v8 countryCode];
    uint32_t v10 = [v7 objectForKey:v9];

    if (v10) {
      id BOOL = [v10 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v12 = BOOL;

    return (uint64_t)v12;
  }
}

uint64_t sub_100CDCA20()
{
  uint64_t v0 = MapsConfig_TrafficIncidentsDebugSettingSubmissions;
  if (_GEOConfigHasValue())
  {
    return GEOConfigGetBOOL();
  }
  else
  {
    id v2 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsIncludeImagesAndComments];
    v13[0] = v2;
    v14[0] = &off_1013AEF60;
    id v3 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsRequireAuthentication];
    v13[1] = v3;
    v14[1] = &off_1013AEF88;
    id v4 = +[NSNumber numberWithUnsignedInt:MapsConfig_TrafficIncidentsSubmitNeutralVotes];
    v13[2] = v4;
    v14[2] = &off_1013AEFB0;
    os_log_type_t v5 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];

    id v6 = +[NSNumber numberWithUnsignedInt:v0];
    id v7 = [v5 objectForKeyedSubscript:v6];

    uint64_t v8 = +[GEOCountryConfiguration sharedConfiguration];
    id v9 = [v8 countryCode];
    uint32_t v10 = [v7 objectForKey:v9];

    if (v10) {
      id BOOL = [v10 BOOLValue];
    }
    else {
      id BOOL = (id)GEOConfigGetBOOL();
    }
    id v12 = BOOL;

    return (uint64_t)v12;
  }
}

void sub_100CDCDAC(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 durationFormat];

  if (v3)
  {
    [*(id *)(a1 + 32) travelAndChargingDuration];
    double v5 = v4;
    id v6 = [v7 durationFormat];
    [v6 setOverrideValue:v5];
  }
}

void sub_100CDD410(id a1, GEOComposedStringArgument *a2)
{
  id v3 = a2;
  if ([(GEOComposedStringArgument *)v3 type] == 1)
  {
    id v2 = [(GEOComposedStringArgument *)v3 distanceFormat];
    [v2 setFormatOptions:1];
  }
}

void sub_100CDD6D0(id a1)
{
  id v1 = objc_alloc_init((Class)NSDateFormatter);
  id v2 = (void *)qword_101610F00;
  qword_101610F00 = (uint64_t)v1;

  [(id)qword_101610F00 setDateStyle:0];
  [(id)qword_101610F00 setTimeStyle:1];
  [(id)qword_101610F00 setDateFormat:@"h:mm a"];
  uint64_t v3 = +[NSCalendar autoupdatingCurrentCalendar];
  double v4 = (void *)qword_101610F08;
  qword_101610F08 = v3;

  id v5 = +[NSLocale autoupdatingCurrentLocale];
  [(id)qword_101610F08 setLocale:v5];
}

void sub_100CDDB00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CDDB28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained onTransitionFromState:a2 toState:a3];
  }
}

id sub_100CDE0D0()
{
  if (qword_101610F18 != -1) {
    dispatch_once(&qword_101610F18, &stru_101321280);
  }
  uint64_t v0 = (void *)qword_101610F10;

  return v0;
}

void sub_100CDE7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CDE7E4(uint64_t a1, void *a2)
{
  id v6 = a2;
  uint64_t v3 = [v6 collection];

  if (v3)
  {
    double v4 = *(void **)(a1 + 32);
    id v5 = [v6 collection];
    [v4 addObject:v5];
  }
}

void sub_100CDE860(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v3 = [WeakRetained collectionView];
  [v3 setContentOffset:CGPointZero];

  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v4 publisherHeaderView];
  [v5 maximumRequiredHeight];
  double v7 = v6;
  id v8 = objc_loadWeakRetained(v1);
  id v9 = [v8 headerHeightConstraint];
  [v9 setConstant:v7];

  id v11 = objc_loadWeakRetained(v1);
  uint32_t v10 = [v11 publisherHeaderView];
  [v10 resetLogoHeight];
}

void sub_100CDF738(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v12 = WeakRetained;
    id v2 = [WeakRetained loadingView];
    if (!v2)
    {
      uint64_t v3 = [v12 apiController];
      id v4 = [v3 currentState];

      id WeakRetained = v12;
      if (v4 != (id)1) {
        goto LABEL_6;
      }
      id v5 = [LoadingModeView alloc];
      double v6 = +[NSBundle mainBundle];
      double v7 = [v6 localizedStringForKey:@"Loading ..." value:@"localized string not found" table:0];
      id v8 = [(LoadingModeView *)v5 initWithTitle:v7];
      [v12 setLoadingView:v8];

      id v9 = [v12 loadingView];
      [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

      uint32_t v10 = [v12 contentView];
      id v11 = [v12 loadingView];
      [v10 addSubview:v11];

      id v2 = [v12 loadingView];
      [v12 activateConstraintsForViewPinnedBelowHeader:v2];
    }

    id WeakRetained = v12;
  }
LABEL_6:
}

void sub_100CDFC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CDFC64(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v2 = [WeakRetained dataSource];

    if (v2)
    {
      uint64_t v3 = [v5 dataSource];
      [v3 didTapTryAgainOnErrorView];

      id v4 = [v5 analyticsManager];
      [v4 publisherTryAgainTapped];
    }
    else
    {
      id v4 = [v5 apiController];
      [v4 fetchPublisherViewForKeywordFilter:0 addressFilter:0 onCompletion:&stru_101321260];
    }

    id WeakRetained = v5;
  }
}

id sub_100CE006C(uint64_t a1)
{
  return [*(id *)(a1 + 32) resetCollectionViewLayout];
}

void sub_100CE0074(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) cardPresentationController];
  [v3 cardHeight];
  *(void *)(*(void *)(a1 + 32) + 144) = v2;
}

void sub_100CE0A40(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PublisherViewController");
  uint64_t v2 = (void *)qword_101610F10;
  qword_101610F10 = (uint64_t)v1;
}

UIFont *__cdecl sub_100CE0B74(id a1)
{
  return (UIFont *)+[UIFont system28Bold];
}

UIFont *__cdecl sub_100CE0B80(id a1)
{
  return (UIFont *)+[UIFont system18];
}

UIFont *__cdecl sub_100CE0B8C(id a1)
{
  os_log_t v1 = +[UIFont system18];
  uint64_t v2 = [v1 _maps_fontWithMonospacedNumbers];

  return (UIFont *)v2;
}

UIFont *__cdecl sub_100CE0BE0(id a1)
{
  return (UIFont *)+[UIFont system17];
}

UIFont *__cdecl sub_100CE0BEC(id a1)
{
  os_log_t v1 = +[UIFont system17Medium];
  uint64_t v2 = [v1 _maps_fontWithMonospacedNumbers];

  return (UIFont *)v2;
}

UIFont *__cdecl sub_100CE0C40(id a1)
{
  return (UIFont *)+[UIFont system15];
}

UIFont *__cdecl sub_100CE0C4C(id a1)
{
  os_log_t v1 = +[UIFont system15];
  uint64_t v2 = [v1 _maps_fontWithMonospacedNumbers];

  return (UIFont *)v2;
}

UIFont *__cdecl sub_100CE0CA0(id a1)
{
  return (UIFont *)+[UIFont system15Medium];
}

UIFont *__cdecl sub_100CE0CAC(id a1)
{
  return (UIFont *)+[UIFont system15Semibold];
}

UIFont *__cdecl sub_100CE0CB8(id a1)
{
  return (UIFont *)+[UIFont system12];
}

UIFont *__cdecl sub_100CE0CC4(id a1)
{
  return (UIFont *)+[UIFont system11];
}

UIFont *__cdecl sub_100CE0CD0(id a1)
{
  return (UIFont *)+[UIFont _maps_boldSystemFontWithSize:26.0];
}

UIFont *__cdecl sub_100CE0CE0(id a1)
{
  return (UIFont *)+[UIFont system22Semibold];
}

UIFont *__cdecl sub_100CE0CEC(id a1)
{
  return (UIFont *)+[UIFont system22AdaptiveSemibold];
}

UIFont *__cdecl sub_100CE0CF8(id a1)
{
  return (UIFont *)+[UIFont system22Bold];
}

UIFont *__cdecl sub_100CE0D04(id a1)
{
  return (UIFont *)+[UIFont system20Bold];
}

UIFont *__cdecl sub_100CE0D10(id a1)
{
  return (UIFont *)+[UIFont system20Semibold];
}

UIFont *__cdecl sub_100CE0D1C(id a1)
{
  return (UIFont *)+[UIFont system17SemiBold];
}

UIFont *__cdecl sub_100CE0D28(id a1)
{
  return (UIFont *)+[UIFont system17Bold];
}

UIFont *__cdecl sub_100CE0D34(id a1)
{
  return (UIFont *)+[UIFont system15Bold];
}

UIFont *__cdecl sub_100CE0D40(id a1)
{
  return (UIFont *)+[UIFont system13];
}

UIFont *__cdecl sub_100CE0D4C(id a1)
{
  return (UIFont *)+[UIFont system12Bold];
}

void sub_100CE0FE4(void *a1, void *a2)
{
  id v9 = a1;
  id v3 = a2;
  id v4 = [v9 firstItem];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  double v6 = [v9 firstItem];
  if ((isKindOfClass & 1) == 0)
  {
    objc_opt_class();
    char v7 = objc_opt_isKindOfClass();

    if (v7)
    {
      id v8 = [v9 firstItem];
      double v6 = [v8 owningView];
    }
    else
    {
      double v6 = 0;
    }
  }
  [v3 scaledValue];
  UIRoundToViewScale();
  [v9 setConstant:];
}

void sub_100CE15E4(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  uint64_t v2 = (void *)qword_101610F20;
  qword_101610F20 = (uint64_t)v1;
}

void sub_100CE1B78(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 keyEnumerator];
  id v3 = [v2 allObjects];

  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v14;
    do
    {
      for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        [v1 objectForKey:v9];
        uint32_t v10 = (NSString *)objc_claimAutoreleasedReturnValue();
        SEL v11 = NSSelectorFromString(v10);

        if (objc_opt_respondsToSelector()) {
          id v12 = (id)((uint64_t (*)(void *, SEL))[v9 methodForSelector:v11])(v9, v11);
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v6);
  }
}

void sub_100CE2560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v3 = *(void **)(a1 + 32);
    id v4 = +[NSString stringWithFormat:@"%@: %@", a2, a3];
    [v3 addObject:v4];
  }
}

void sub_100CE30F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE3110(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = [v11 mutableCopy];
    id v8 = (void *)*((void *)WeakRetained + 16);
    *((void *)WeakRetained + 16) = v7;

    id v9 = [v5 mutableCopy];
    uint32_t v10 = (void *)*((void *)WeakRetained + 17);
    *((void *)WeakRetained + 17) = v9;

    [WeakRetained _updateContent];
    [*((id *)WeakRetained + 24) reloadData];
  }
}

void sub_100CE3D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE3D44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _presentUnavailableRoutesList];
}

void sub_100CE47BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE47EC(id *a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);

  if (WeakRetained)
  {
    id v7 = +[UIApplication sharedMapsDelegate];
    id v8 = [a1[4] storageID];
    id v9 = [a1[5] titleString];
    [v7 interruptConvertToNavigableSavedRouteID:v8 routeName:v9 error:v10 directionsError:v5];
  }
}

void sub_100CE48B4(id *a1, void *a2)
{
  id v3 = a1 + 6;
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [WeakRetained _maps_mapsSceneDelegate];
  id v7 = [v6 appCoordinator];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100CE49B4;
  v8[3] = &unk_1012E5D58;
  id v9 = a1[4];
  id v10 = a1[5];
  [v7 enterRouteCreationWithRoute:v4 originMapItem:0 destinationMapItem:0 userInfo:0 completion:v8];
}

id sub_100CE49B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) deselectRowAtIndexPath:*(void *)(a1 + 40) animated:1];
}

void sub_100CE4B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100CE4BC4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = (id *)(a1 + 40);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v12 = WeakRetained;
  if (WeakRetained)
  {
    long long v13 = [WeakRetained[24] cellForRowAtIndexPath:*(void *)(a1 + 32)];
    long long v14 = [v13 routeData];

    if (v14)
    {
      long long v15 = [v13 routeData];
      double v25 = _NSConcreteStackBlock;
      uint64_t v26 = 3221225472;
      double v27 = sub_100CE4F10;
      __int16 v28 = &unk_1012E96B8;
      objc_copyWeak(&v31, v10);
      id v16 = v13;
      id v29 = v16;
      id v30 = v9;
      [v12 _showDeleteConfirmationAlertForRouteDate:v15 withCompletion:&v25];

      id v17 = +[MKMapService sharedService];
      int v18 = [v16 routeData];
      id v19 = [v18 mapItemMuid];
      __int16 v20 = +[NSString stringWithFormat:@"%llu", v19, v25, v26, v27, v28];
      [v17 captureUserAction:479 onTarget:135 eventValue:v20];

      objc_destroyWeak(&v31);
    }
    else
    {
      unint64_t v21 = sub_1005762E4();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
      {
        id v22 = +[NSString stringWithFormat:@"Swipe to delete on a nil cell or routeData"];
        *(_DWORD *)buf = 136315906;
        uint64_t v33 = "-[MapsRouteListViewController tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:]_block_invoke";
        __int16 v34 = 2080;
        id v35 = "MapsRouteListViewController.m";
        __int16 v36 = 1024;
        int v37 = 521;
        __int16 v38 = 2112;
        id v39 = v22;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly! '%@'", buf, 0x26u);
      }
      if (sub_100BB36BC())
      {
        id v23 = sub_1005762E4();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
        {
          int v24 = +[NSThread callStackSymbols];
          *(_DWORD *)buf = 138412290;
          uint64_t v33 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
        }
      }
      (*((void (**)(id, void))v9 + 2))(v9, 0);
    }
  }
}

void sub_100CE4EF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100CE4F10(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = [a1[4] routeData];
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100CE4FD0;
    v4[3] = &unk_1012EAFC0;
    id v5 = a1[5];
    [WeakRetained _deleteRouteData:v3 completion:v4];
  }
}

uint64_t sub_100CE4FD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100CE51B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE51D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteRouteData:*(void *)(a1 + 32) completion:0];
}

uint64_t sub_100CE5504(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100CE5618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE5634(uint64_t a1)
{
  id WeakRetained = (void **)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained _routeDataForSection:0];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100CE5778;
    v8[3] = &unk_1013215B8;
    id v9 = *(id *)(a1 + 32);
    id v5 = [v4 indexOfObjectPassingTest:v8];
    id v6 = [v4 count];
    if (v5 < v6)
    {
      [v4 removeObjectAtIndex:v5];
      [v3[24] reloadData];
    }
    if (v4 == v3[17] && ![v4 count]) {
      [v3 handleDismissAction:0];
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7) {
      (*(void (**)(uint64_t, BOOL))(v7 + 16))(v7, v5 < v6);
    }
  }
}

id sub_100CE5778(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 storageID];
  id v5 = [v3 storageID];

  id v6 = [v4 isEqual:v5];
  return v6;
}

void sub_100CE5C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE5CC8(id *a1, void *a2, void *a3)
{
  id v27 = a2;
  id v26 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v24 = [objc_alloc((Class)GEORouteBuilder_PersistentData) initWithPersistentData:a1[4]];
    id v6 = [v24 buildRoute];
    uint64_t v7 = [v6 userProvidedName];
    if ([v7 length]) {
      [v6 userProvidedName];
    }
    else {
    double v25 = [v6 name];
    }

    uint64_t v8 = (uint64_t)[v6 suggestedNavigationModeForLocation:v27 context:1];
    if (!v8)
    {
      id v9 = sub_10057683C();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138543362;
        CFStringRef v36 = @"None";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Coercing navigation mode to route planning from %{public}@", buf, 0xCu);
      }

      uint64_t v8 = 4;
    }
    if ([a1[4] mapItemMuid])
    {
      id v10 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"%llu", [a1[4] mapItemMuid]);
    }
    else
    {
      id v10 = 0;
    }
    if (v8 == 4)
    {
      +[GEOAPPortal captureUserAction:6003 target:135 value:v10];
      id v11 = [a1[5] containeeDelegate];
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        id v12 = v11;
      }
      else {
        id v12 = 0;
      }
      id v13 = v12;

      long long v14 = objc_opt_new();
      [v14 setRouteData:a1[4]];
      long long v15 = objc_opt_new();
      id v16 = +[SearchResult currentLocationSearchResult];
      [v15 setSearchResult:v16];

      id v17 = objc_opt_new();
      [v17 setSearchResult:v14];
      int v18 = [DirectionItem alloc];
      v34[0] = v15;
      v34[1] = v17;
      id v19 = +[NSArray arrayWithObjects:v34 count:2];
      __int16 v20 = [(DirectionItem *)v18 initWithItems:v19 transportType:0];

      CFStringRef v32 = @"DirectionsSessionInitiatorKey";
      uint64_t v33 = &off_1013AB008;
      unint64_t v21 = +[NSDictionary dictionaryWithObjects:&v33 forKeys:&v32 count:1];
      [v13 viewController:WeakRetained doDirectionItem:v20 withUserInfo:v21];

      id v22 = (void *)WeakRetained[15];
      WeakRetained[15] = 0;
    }
    else
    {
      +[GEOAPPortal captureUserAction:3001 target:135 value:v10];
      id v23 = [WeakRetained _maps_platformController];
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_100CE60F4;
      void v28[3] = &unk_1013215E0;
      id v29 = v6;
      id v30 = v25;
      objc_copyWeak(&v31, a1 + 6);
      [v23 pushNavigationWithRoute:v29 navigationMode:v8 shouldCheckNavSafetyAlert:1 completion:v28];

      objc_destroyWeak(&v31);
      long long v14 = v29;
    }
  }
}

void sub_100CE60D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100CE60F4(uint64_t a1, void *a2, void *a3)
{
  unint64_t v11 = a2;
  unint64_t v5 = a3;
  if (v11 | v5)
  {
    id v6 = +[UIApplication sharedMapsDelegate];
    uint64_t v7 = [*(id *)(a1 + 32) storageID];
    [v6 interruptConvertToNavigableSavedRouteID:v7 routeName:*(void *)(a1 + 40) error:v11 directionsError:v5];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v9 = WeakRetained;
  if (WeakRetained)
  {
    id v10 = (void *)*((void *)WeakRetained + 15);
    *((void *)WeakRetained + 15) = 0;
  }
}

void sub_100CE65BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a23, 8);
  _Unwind_Resume(a1);
}

void sub_100CE65F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 48);
    id v9 = WeakRetained;
    id v6 = [WeakRetained iosChromeViewController];
    uint64_t v7 = [v6 mapView];
    uint64_t v8 = [v7 _mapLayer];
    [v8 setApplicationSubState:v5];

    id WeakRetained = v9;
  }
}

id sub_100CE69E0(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = a2;
  uint64_t v8 = a3;
  id v9 = a4;
  id v10 = off_1015EC4B0->invoke(off_1015EC4B0, v7, v8, v9);
  if (!v10)
  {
    id v10 = off_1015E8D50->invoke(off_1015E8D50, v7, v8, v9);
    if (!v10)
    {
      id v10 = off_1015F8130->invoke(off_1015F8130, v7, v8, v9);
      if (!v10)
      {
        id v10 = off_1015E5790->invoke(off_1015E5790, v7, v8, v9);
      }
    }
  }
  +[PPTNotificationCenter setEnabled:v10 != 0];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100CE6BA4;
  v15[3] = &unk_1012E66E0;
  id v11 = v10;
  id v16 = v11;
  id v17 = *(id *)(a1 + 32);
  id v18 = *(id *)(a1 + 40);
  [v11 popToRootTrayWithCompletion:v15];
  id v12 = v18;
  id v13 = v11;

  return v13;
}

id sub_100CE6BA4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) runTest];
  if ((result & 1) == 0)
  {
    id v3 = *(void **)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    return [v3 failedTest:v4];
  }
  return result;
}

id sub_100CE7338(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) collectionViewLayout];
  [v2 invalidateLayout];

  id v3 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v3 layoutIfNeeded];
}

int64_t sub_100CE7E04(id a1, id a2, id a3)
{
  id v4 = a3;
  [a2 frame];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  [v4 frame];
  CGFloat v14 = v13;
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  CGFloat rect = v6;
  v26.origin.double x = v6;
  v26.origin.double y = v8;
  v26.size.double width = v10;
  v26.size.double height = v12;
  double MinY = CGRectGetMinY(v26);
  v27.origin.double x = v14;
  v27.origin.double y = v16;
  v27.size.double width = v18;
  v27.size.double height = v20;
  if (MinY < CGRectGetMinY(v27)) {
    return -1;
  }
  v28.origin.double x = rect;
  v28.origin.double y = v8;
  v28.size.double width = v10;
  v28.size.double height = v12;
  double v23 = CGRectGetMinY(v28);
  v29.origin.double x = v14;
  v29.origin.double y = v16;
  v29.size.double width = v18;
  v29.size.double height = v20;
  if (v23 > CGRectGetMinY(v29)) {
    return 1;
  }
  v30.origin.double x = rect;
  v30.origin.double y = v8;
  v30.size.double width = v10;
  v30.size.double height = v12;
  double MinX = CGRectGetMinX(v30);
  v31.origin.double x = v14;
  v31.origin.double y = v16;
  v31.size.double width = v18;
  v31.size.double height = v20;
  if (MinX >= CGRectGetMinX(v31)) {
    return 1;
  }
  else {
    return -1;
  }
}

void sub_100CE90AC(id a1, UIAction *a2)
{
  id v2 = +[MNNavigationService sharedService];
  [v2 stopNavigationWithReason:2];
}

void sub_100CE96D4(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100CE9764;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_100CE9764(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _updateParkedCar];
    id WeakRetained = v2;
  }
}

void sub_100CE9DD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CE9DF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100CE9EEC;
  block[3] = &unk_101321690;
  objc_copyWeak(&v9, (id *)(a1 + 48));
  id v6 = v3;
  long long v10 = *(_OWORD *)(a1 + 56);
  int v11 = *(_DWORD *)(a1 + 72);
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_100CE9EEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setParkedCarWithMapItem:*(void *)(a1 + 32) overrideCoordinate:*(unsigned int *)(a1 + 80) referenceFrame:*(void *)(a1 + 40) vehicleEvent:*(double *)(a1 + 64) vehicleEvent:*(double *)(a1 + 72)];
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
}

void sub_100CE9F58(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v2 = *(void *)(a1 + 32);
  CLLocationCoordinate2DFromGEOLocationCoordinate2D();
  [WeakRetained resolveMapItemFromVehicleEvent:v2 overrideCoordinate:2 referenceFrame:*(void *)(a1 + 40) callback:];
}

void sub_100CE9FD4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setParkedCarWithMapItem:0 overrideCoordinate:0 referenceFrame:0 vehicleEvent:kCLLocationCoordinate2DInvalid.latitude, kCLLocationCoordinate2DInvalid.longitude];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100CEA048(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained resolveMapItemFromVehicleEvent:*(void *)(a1 + 32) overrideCoordinate:1 referenceFrame:*(void *)(a1 + 40) callback:kCLLocationCoordinate2DInvalid.latitude, kCLLocationCoordinate2DInvalid.longitude];
}

void sub_100CEA204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CEA228(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && [v3 count])
  {
    id v5 = objc_alloc((Class)MKMapItem);
    id v6 = [v3 firstObject];
    id v7 = [v5 initWithGeoMapItem:v6 isPlaceHolderPlace:0];

    [*(id *)(a1 + 32) setMapItem:v7];
    id v8 = [*(id *)(a1 + 32) vehicleEvent];
    if (v8)
    {
      id v9 = [v7 _geoMapItemStorageForPersistence];
      long long v10 = +[RTRoutineManager defaultManager];
      int v11 = [v8 identifier];
      [v10 updateVehicleEventWithIdentifier:v11 geoMapItem:v9];
    }
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    CGFloat v12 = [WeakRetained[1] allObjects];
    id v13 = [v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v13)
    {
      id v14 = v13;
      uint64_t v15 = *(void *)v20;
      do
      {
        for (unint64_t i = 0; i != v14; unint64_t i = (char *)i + 1)
        {
          if (*(void *)v20 != v15) {
            objc_enumerationMutation(v12);
          }
          double v17 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          if (objc_opt_respondsToSelector()) {
            [v17 parkedCarManager:WeakRetained didUpdateParkedCar:*(void *)(a1 + 32)];
          }
        }
        id v14 = [v12 countByEnumeratingWithState:&v19 objects:v23 count:16];
      }
      while (v14);
    }
  }
}

id sub_100CEA4CC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateParkedCar];
}

void sub_100CEDDDC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  unint64_t v6 = a3 + 1;
  if (a3 + 1 != *(void *)(a1 + 48))
  {
    id v9 = v5;
    id v7 = 0;
    do
    {
      id v8 = v7;
      id v7 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v6];

      if (![v7 isHidden]) {
        break;
      }
      ++v6;
    }
    while (v6 < *(void *)(a1 + 48));
    [*(id *)(a1 + 40) _extraSpacingAboveView:v7];
    [*(id *)(*(void *)(a1 + 40) + 296) setCustomSpacing:v9 afterView:];

    id v5 = v9;
  }
}

void sub_100CEE49C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) detailButton];
  [v2 setTitle:*(void *)(a1 + 40) forState:0];

  id v3 = [*(id *)(a1 + 32) detailButton];
  [v3 setEnabled:[*(id *)(a1 + 48) shouldEnableExpandedButton]];
}

void sub_100CF0E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19)
{
  _Unwind_Resume(a1);
}

void sub_100CF1300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36)
{
  _Unwind_Resume(a1);
}

void sub_100CF17B0(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 64) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100CF17FC(uint64_t a1)
{
  [*(id *)(a1 + 32) _createPOIsForItems:&__NSArray0__struct];
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100CF18E0;
  v3[3] = &unk_1012F84F8;
  objc_copyWeak(&v4, &location);
  void v3[4] = *(void *)(a1 + 40);
  [v2 _addAfterUpdateBlock:v3];
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void sub_100CF18C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CF18E0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _createPOIsForItems:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)];
}

void sub_100CF1B94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  objc_destroyWeak(v14);
  objc_destroyWeak((id *)(v15 - 72));
  _Unwind_Resume(a1);
}

id sub_100CF1BBC(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100CF1BE8(uint64_t a1)
{
}

void sub_100CF1BF0(uint64_t a1)
{
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = WeakRetained;
  uint64_t v11 = 0;
  CGFloat v12 = &v11;
  uint64_t v13 = 0x3032000000;
  id v14 = sub_100104520;
  uint64_t v15 = sub_100104B00;
  id v16 = 0;
  if (WeakRetained)
  {
    id v4 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100CF1D24;
    block[3] = &unk_1012E7A60;
    id v5 = *(id *)(a1 + 32);
    id v9 = v3;
    long long v10 = &v11;
    id v8 = v5;
    dispatch_sync(v4, block);
  }
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v6, v12[5]);
  }
  _Block_object_dispose(&v11, 8);
}

void sub_100CF1D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100CF1D24(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
LABEL_3:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v11 != v5) {
        objc_enumerationMutation(v2);
      }
      uint64_t v7 = [*(id *)(*(void *)(a1 + 40) + 80) objectForKeyedSubscript:*(void *)(*((void *)&v10 + 1) + 8 * v6) v10];
      uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
      id v9 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = v7;

      if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
        break;
      }
      if (v4 == (id)++v6)
      {
        id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
        if (v4) {
          goto LABEL_3;
        }
        break;
      }
    }
  }
}

void sub_100CF1E44(uint64_t a1)
{
  id v2 = *(unsigned char **)(a1 + 32);
  if (v2[76])
  {
    [v2 _addAfterUpdateBlock:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = 0;
  }
}

void sub_100CF2000(uint64_t a1)
{
  uint64_t v140 = 0;
  v141 = &v140;
  uint64_t v142 = 0x2020000000;
  char v143 = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(NSObject **)(v2 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000294F8;
  block[3] = &unk_101321850;
  uint64_t v138 = *(void *)(a1 + 88);
  v139 = &v140;
  void block[4] = v2;
  id v136 = *(id *)(a1 + 40);
  id v137 = *(id *)(a1 + 48);
  dispatch_sync(v3, block);
  if (!*((unsigned char *)v141 + 24))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
    id v4 = [WeakRetained _selectedLabelMarker];

    long long v12 = [v4 featureAnnotation];
    long long v13 = sub_1000F03EC();
    if (!os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_22;
    }
    id v14 = objc_loadWeakRetained((id *)(a1 + 96));
    if (!v14)
    {
      long long v19 = @"<nil>";
      goto LABEL_21;
    }
    uint64_t v15 = (objc_class *)objc_opt_class();
    id v16 = NSStringFromClass(v15);
    if (objc_opt_respondsToSelector())
    {
      double v17 = [v14 performSelector:"accessibilityIdentifier"];
      CGFloat v18 = v17;
      if (v17 && ([v17 isEqualToString:v16] & 1) == 0)
      {
        long long v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

        goto LABEL_17;
      }
    }
    long long v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_17:

LABEL_21:
    long long v21 = v19;
    sub_100CF3180(*(void **)(a1 + 56));
    long long v22 = (uint64_t (*)(uint64_t, uint64_t))(id)objc_claimAutoreleasedReturnValue();
    sub_100CF3180(*(void **)(a1 + 64));
    id v23 = (id)objc_claimAutoreleasedReturnValue();
    sub_100CF3180(*(void **)(a1 + 72));
    id v24 = (id)objc_claimAutoreleasedReturnValue();
    double v25 = sub_100CF3180(*(void **)(a1 + 80));
    *(_DWORD *)buf = 138544642;
    *(void *)&uint8_t buf[4] = v21;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v12;
    *(_WORD *)&buf[22] = 2112;
    v149 = v22;
    *(_WORD *)v150 = 2112;
    *(void *)&v150[2] = v23;
    *(_WORD *)&v150[10] = 2112;
    *(void *)&v150[12] = v24;
    __int16 v151 = 2112;
    v152 = v25;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[%{public}@] POI calculation complete:\nSelected: %@\nRemoving: %@\nRemoving Clusters: %@\nAdding: %@\nAdding Clusters: %@", buf, 0x3Eu);

LABEL_22:
    CGRect v26 = *(void **)(*(void *)(a1 + 32) + 32);
    CGRect v27 = [*(id *)(a1 + 56) allObjects];
    [v26 removeAnnotations:v27];

    CGRect v28 = *(void **)(*(void *)(a1 + 32) + 32);
    CGRect v29 = [*(id *)(a1 + 72) allObjects];
    [v28 addAnnotations:v29];

    CGRect v30 = [*(id *)(a1 + 64) count];
    CGRect v31 = [*(id *)(a1 + 80) count];
    v132[0] = _NSConcreteStackBlock;
    v132[1] = 3221225472;
    v132[2] = sub_100CF31C8;
    v132[3] = &unk_1012FA980;
    v132[4] = *(void *)(a1 + 32);
    id v133 = *(id *)(a1 + 48);
    id location = (id *)(a1 + 96);
    objc_copyWeak(&v134, (id *)(a1 + 96));
    CFStringRef v32 = objc_retainBlock(v132);
    if (v31)
    {
      *(unsigned char *)(*(void *)(a1 + 32) + 56) = 0;
      uint64_t v33 = (char *)[*(id *)(*(void *)(a1 + 32) + 40) annotationCount];
      unsigned int v34 = [*(id *)(a1 + 32) allowSingleSearchResult];
      if (&v33[v31 - v30] == (char *)1) {
        int v35 = v34;
      }
      else {
        int v35 = 1;
      }
      if (v35) {
        uint64_t v36 = 1;
      }
      else {
        uint64_t v36 = 2;
      }
      [*(id *)(*(void *)(a1 + 32) + 40) setSceneID:v36];
      int v37 = *(void **)(*(void *)(a1 + 32) + 40);
      __int16 v38 = [*(id *)(a1 + 64) allObjects];
      [v37 removeAnnotations:v38];

      id v39 = *(void **)(*(void *)(a1 + 32) + 40);
      uint64_t v40 = [*(id *)(a1 + 80) allObjects];
      [v39 addAnnotations:v40];

      uint64_t v41 = *(void *)(a1 + 32);
      id v42 = *(void **)(v41 + 40);
      unsigned int v43 = [*(id *)(v41 + 48) allObjects];
      [v42 removeAnnotations:v43];

      [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
      [*(id *)(*(void *)(a1 + 32) + 40) showScene];
      double v44 = sub_1000F03EC();
      if (!os_log_type_enabled(v44, OS_LOG_TYPE_INFO)) {
        goto LABEL_48;
      }
      id v45 = objc_loadWeakRetained(location);
      if (!v45)
      {
        double v50 = @"<nil>";
        goto LABEL_47;
      }
      int v46 = (objc_class *)objc_opt_class();
      id v47 = NSStringFromClass(v46);
      if (objc_opt_respondsToSelector())
      {
        float v48 = [v45 performSelector:"accessibilityIdentifier"];
        float v49 = v48;
        if (v48 && ([v48 isEqualToString:v47] & 1) == 0)
        {
          double v50 = +[NSString stringWithFormat:@"%@<%p, %@>", v47, v45, v49];

          goto LABEL_36;
        }
      }
      double v50 = +[NSString stringWithFormat:@"%@<%p>", v47, v45];
LABEL_36:

LABEL_47:
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v50;
      _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_INFO, "[%{public}@] Showing clustering features scene", buf, 0xCu);

LABEL_48:
      goto LABEL_54;
    }
    if (!v30)
    {
LABEL_54:
      ((void (*)(void *))v32[2])(v32);
      if (!v12 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
      {
LABEL_99:
        long long v95 = [*(id *)(a1 + 32) mapView];
        long long v96 = [v95 _mapLayer];
        long long v97 = [v96 selectedLabelMarker];
        if (v97)
        {
        }
        else
        {
          long long v98 = [*(id *)(a1 + 32) mapView];
          BOOL v99 = [v98 _applicationState] == 9;

          if (v99) {
            goto LABEL_104;
          }
          long long v95 = [*(id *)(a1 + 32) mapView];
          long long v96 = [v95 _mapLayer];
          [v96 clearPreviouslySelectedLabelMarker];
        }

LABEL_104:
        *(void *)buf = 0;
        *(void *)&buf[8] = buf;
        *(void *)&buf[16] = 0x3032000000;
        v149 = sub_100104520;
        *(void *)v150 = sub_100104B00;
        *(void *)&v150[8] = 0;
        uint64_t v100 = *(void *)(a1 + 32);
        long long v101 = *(NSObject **)(v100 + 8);
        v125[0] = _NSConcreteStackBlock;
        v125[1] = 3221225472;
        v125[2] = sub_100CF3520;
        v125[3] = &unk_1012F14D0;
        uint64_t v102 = *(void *)(a1 + 88);
        v125[4] = v100;
        v125[5] = v102;
        v125[6] = buf;
        dispatch_sync(v101, v125);
        v103 = sub_1000F03EC();
        if (!os_log_type_enabled(v103, OS_LOG_TYPE_DEBUG))
        {
LABEL_114:

          long long v123 = 0u;
          long long v124 = 0u;
          long long v121 = 0u;
          long long v122 = 0u;
          id v110 = *(id *)(*(void *)&buf[8] + 40);
          id v111 = [v110 countByEnumeratingWithState:&v121 objects:v144 count:16];
          if (v111)
          {
            uint64_t v112 = *(void *)v122;
            do
            {
              for (unint64_t i = 0; i != v111; unint64_t i = (char *)i + 1)
              {
                if (*(void *)v122 != v112) {
                  objc_enumerationMutation(v110);
                }
                (*(void (**)(void))(*(void *)(*((void *)&v121 + 1) + 8 * i) + 16))();
              }
              id v111 = [v110 countByEnumeratingWithState:&v121 objects:v144 count:16];
            }
            while (v111);
          }

          _Block_object_dispose(buf, 8);
          objc_destroyWeak(&v134);

          goto LABEL_122;
        }
        id v104 = objc_loadWeakRetained(location);
        if (!v104)
        {
          v109 = @"<nil>";
          goto LABEL_113;
        }
        v105 = (objc_class *)objc_opt_class();
        v106 = NSStringFromClass(v105);
        if (objc_opt_respondsToSelector())
        {
          v107 = [v104 performSelector:"accessibilityIdentifier"];
          v108 = v107;
          if (v107 && ([v107 isEqualToString:v106] & 1) == 0)
          {
            v109 = +[NSString stringWithFormat:@"%@<%p, %@>", v106, v104, v108];

            goto LABEL_111;
          }
        }
        v109 = +[NSString stringWithFormat:@"%@<%p>", v106, v104];
LABEL_111:

LABEL_113:
        *(_DWORD *)v145 = 138543362;
        v146 = v109;
        _os_log_impl((void *)&_mh_execute_header, v103, OS_LOG_TYPE_DEBUG, "[%{public}@] Update complete, calling post-update blocks", v145, 0xCu);

        goto LABEL_114;
      }
      id v61 = v12;
      long long v126 = 0u;
      long long v127 = 0u;
      long long v128 = 0u;
      long long v129 = 0u;
      CGFloat v62 = [v61 keys];
      id v63 = [v62 countByEnumeratingWithState:&v126 objects:v147 count:16];
      if (v63)
      {
        uint64_t v64 = *(void *)v127;
LABEL_58:
        uint64_t v65 = 0;
        while (1)
        {
          if (*(void *)v127 != v64) {
            objc_enumerationMutation(v62);
          }
          double v66 = [*(id *)(a1 + 40) objectForKeyedSubscript:*(void *)(*((void *)&v126 + 1) + 8 * v65)];
          if (v66) {
            break;
          }
          if (v63 == (id)++v65)
          {
            id v63 = [v62 countByEnumeratingWithState:&v126 objects:v147 count:16];
            if (v63) {
              goto LABEL_58;
            }
            goto LABEL_64;
          }
        }
      }
      else
      {
LABEL_64:
        double v66 = 0;
      }

      id v67 = [*(id *)(a1 + 32) activeInjectedAnnotation];
      unsigned int v68 = [v61 isEqual:v67];

      if (v68)
      {
        id v69 = v61;

        double v66 = v69;
      }
      if (v66)
      {
        unsigned int v70 = [v66 isEqual:v61];
        if ([v66 isMarkedLocation] && objc_msgSend(v61, "isMarkedLocation"))
        {
          v71 = [v66 title];
          id v72 = [v61 title];
          unsigned int v73 = [v71 isEqualToString:v72];

          int v74 = v73 ^ 1;
        }
        else
        {
          int v74 = 0;
        }
        if (v70 && !v74) {
          goto LABEL_98;
        }
        id v75 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
        uint64_t v76 = [v75 _labelMarkerForCustomFeatureAnnotation:v66];

        uint64_t v77 = sub_1000F03EC();
        if (!os_log_type_enabled(v77, OS_LOG_TYPE_INFO)) {
          goto LABEL_96;
        }
        log = v77;
        id v78 = objc_loadWeakRetained(location);
        if (!v78)
        {
          id v84 = @"<nil>";
          goto LABEL_95;
        }
        id v79 = (objc_class *)objc_opt_class();
        v118 = NSStringFromClass(v79);
        if (objc_opt_respondsToSelector())
        {
          uint64_t v80 = [v78 performSelector:"accessibilityIdentifier"];
          id v81 = v80;
          if (v80)
          {
            id v82 = v80;
            unsigned __int8 v83 = [v80 isEqualToString:v118];
            id v81 = v82;
            if ((v83 & 1) == 0)
            {
              uint64_t v116 = +[NSString stringWithFormat:@"%@<%p, %@>", v118, v78, v82];
              v117 = v82;
              id v84 = (__CFString *)v116;

              goto LABEL_81;
            }
          }
        }
        id v84 = +[NSString stringWithFormat:@"%@<%p>", v118, v78];
LABEL_81:

LABEL_95:
        *(_DWORD *)buf = 138543874;
        *(void *)&uint8_t buf[4] = v84;
        *(_WORD *)&buf[12] = 2112;
        *(void *)&buf[14] = v76;
        *(_WORD *)&buf[22] = 1024;
        LODWORD(v149) = v74;
        _os_log_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_INFO, "[%{public}@] Selecting new label marker that matches existing selection %@. isMarkedLocationWithNewTitle: %d", buf, 0x1Cu);

        uint64_t v77 = log;
LABEL_96:

        id v94 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
        [v94 _selectLabelMarker:v76 animated:0];

        goto LABEL_97;
      }
      uint64_t v85 = sub_1000F03EC();
      if (!os_log_type_enabled(v85, OS_LOG_TYPE_INFO))
      {
LABEL_93:

        uint64_t v76 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
        [v76 _deselectLabelMarkerAnimated:1];
LABEL_97:

LABEL_98:
        goto LABEL_99;
      }
      id v86 = objc_loadWeakRetained(location);
      if (!v86)
      {
        id v93 = @"<nil>";
        goto LABEL_92;
      }
      uint64_t v87 = (objc_class *)objc_opt_class();
      unsigned int v88 = NSStringFromClass(v87);
      if (objc_opt_respondsToSelector())
      {
        uint64_t v89 = [v86 performSelector:"accessibilityIdentifier"];
        v90 = v89;
        if (v89)
        {
          id v91 = v89;
          unsigned __int8 v92 = [v89 isEqualToString:v88];
          v90 = v91;
          if ((v92 & 1) == 0)
          {
            uint64_t v114 = +[NSString stringWithFormat:@"%@<%p, %@>", v88, v86, v91];
            v115 = v91;
            id v93 = (__CFString *)v114;

            goto LABEL_89;
          }
        }
      }
      id v93 = +[NSString stringWithFormat:@"%@<%p>", v88, v86];
LABEL_89:

LABEL_92:
      *(_DWORD *)buf = 138543362;
      *(void *)&uint8_t buf[4] = v93;
      _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_INFO, "[%{public}@] Deselecting label marker", buf, 0xCu);

      goto LABEL_93;
    }
    id v51 = *(void **)(*(void *)(a1 + 32) + 40);
    id v52 = [*(id *)(a1 + 80) allObjects];
    [v51 addAnnotations:v52];

    [*(id *)(*(void *)(a1 + 32) + 48) unionHashTable:*(void *)(a1 + 64)];
    [*(id *)(*(void *)(a1 + 32) + 40) hideScene];
    uint64_t v53 = sub_1000F03EC();
    if (!os_log_type_enabled(v53, OS_LOG_TYPE_INFO))
    {
LABEL_53:

      dispatch_time_t v60 = dispatch_time(0, 1000000000);
      v130[0] = _NSConcreteStackBlock;
      v130[1] = 3221225472;
      v130[2] = sub_100CF34AC;
      v130[3] = &unk_1012E76E8;
      v130[4] = *(void *)(a1 + 32);
      v131 = v32;
      dispatch_after(v60, (dispatch_queue_t)&_dispatch_main_q, v130);

      goto LABEL_54;
    }
    id v54 = objc_loadWeakRetained(location);
    if (!v54)
    {
      __int16 v59 = @"<nil>";
      goto LABEL_52;
    }
    uint64_t v55 = (objc_class *)objc_opt_class();
    uint64_t v56 = NSStringFromClass(v55);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v57 = [v54 performSelector:"accessibilityIdentifier"];
      id v58 = v57;
      if (v57 && ([v57 isEqualToString:v56] & 1) == 0)
      {
        __int16 v59 = +[NSString stringWithFormat:@"%@<%p, %@>", v56, v54, v58];

        goto LABEL_45;
      }
    }
    __int16 v59 = +[NSString stringWithFormat:@"%@<%p>", v56, v54];
LABEL_45:

LABEL_52:
    *(_DWORD *)buf = 138543362;
    *(void *)&uint8_t buf[4] = v59;
    _os_log_impl((void *)&_mh_execute_header, v53, OS_LOG_TYPE_INFO, "[%{public}@] Hiding clustering features scene", buf, 0xCu);

    goto LABEL_53;
  }
  id v4 = sub_1000F03EC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 96));
    if (!v5)
    {
      long long v10 = @"<nil>";
      goto LABEL_19;
    }
    uint64_t v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ([v8 isEqualToString:v7] & 1) == 0)
      {
        long long v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_9;
      }
    }
    long long v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_9:

LABEL_19:
    int v20 = *(_DWORD *)(*(void *)(*(void *)(a1 + 88) + 8) + 24);
    *(_DWORD *)buf = 138543618;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = v20;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}@] Counter (%d) updated while updating label markers; aborting early",
      buf,
      0x12u);
  }
LABEL_122:

  _Block_object_dispose(&v140, 8);
}

void sub_100CF30E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
}

__CFString *sub_100CF3180(void *a1)
{
  id v1 = a1;
  if ([(__CFString *)v1 count]) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = @"none";
  }
  uint64_t v3 = v2;

  return v3;
}

void sub_100CF31C8(id *a1)
{
  uint64_t v2 = (uint64_t)[a1[4] _preferredDisplayedSearchResultTypeWithItems:a1[5]];
  if (!v2)
  {
    uint64_t v3 = [*((id *)a1[4] + 5) allAnnotations];
    id v4 = [v3 count];
    if (v4 == (id)1)
    {
      long long v10 = [v3 firstObject];
      if ([v10 isLabelPOI])
      {
        uint64_t v2 = 2 * (*((unsigned char *)a1[4] + 56) == 0);
      }
      else if ([v10 isVenueOrBuilding])
      {
        uint64_t v2 = 3;
      }
      else
      {
        uint64_t v2 = 4;
      }
    }
    else if (v4)
    {
LABEL_16:
      uint64_t v2 = 1;
    }
    else
    {
      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v5 = a1[5];
      id v6 = [v5 countByEnumeratingWithState:&v19 objects:v27 count:16];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = *(void *)v20;
        while (2)
        {
          for (unint64_t i = 0; i != v7; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v20 != v8) {
              objc_enumerationMutation(v5);
            }
            if ([*(id *)(*((void *)&v19 + 1) + 8 * i) wantsDisplayedSearchResultsTypePoints])
            {

              goto LABEL_16;
            }
          }
          id v7 = [v5 countByEnumeratingWithState:&v19 objects:v27 count:16];
          if (v7) {
            continue;
          }
          break;
        }
      }

      uint64_t v2 = 0;
    }
  }
  long long v11 = sub_1000F03EC();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
  {
    id v12 = objc_loadWeakRetained(a1 + 6);
    if (!v12)
    {
      double v17 = @"<nil>";
      goto LABEL_31;
    }
    long long v13 = (objc_class *)objc_opt_class();
    id v14 = NSStringFromClass(v13);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v15 = [v12 performSelector:"accessibilityIdentifier"];
      id v16 = v15;
      if (v15 && ![v15 isEqualToString:v14])
      {
        double v17 = +[NSString stringWithFormat:@"%@<%p, %@>", v14, v12, v16];

        goto LABEL_29;
      }
    }
    double v17 = +[NSString stringWithFormat:@"%@<%p>", v14, v12];
LABEL_29:

LABEL_31:
    *(_DWORD *)buf = 138543618;
    id v24 = v17;
    __int16 v25 = 2048;
    uint64_t v26 = v2;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "[%{public}@] Setting map view search results type: %ld", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)a1[4] + 15);
  [WeakRetained _setDisplayedSearchResultsType:v2];
}

uint64_t sub_100CF34AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 40);
  id v4 = [*(id *)(v2 + 48) allObjects];
  [v3 removeAnnotations:v4];

  [*(id *)(*(void *)(a1 + 32) + 48) removeAllObjects];
  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v5();
}

void *sub_100CF3520(void *result)
{
  uint64_t v1 = result[4];
  if (*(_DWORD *)(*(void *)(result[5] + 8) + 24) == *(_DWORD *)(v1 + 72))
  {
    uint64_t v2 = result;
    id v3 = [*(id *)(v1 + 88) copy];
    uint64_t v4 = *(void *)(v2[6] + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;

    id result = [*(id *)(v2[4] + 88) removeAllObjects];
    *(unsigned char *)(v2[4] + 76) = 0;
  }
  return result;
}

void sub_100CF3BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100CF3BFC(uint64_t a1)
{
}

void sub_100CF3CA8(uint64_t a1)
{
}

void sub_100CF4D08(id a1)
{
  v15[0] = &off_1013AB068;
  v15[1] = &off_1013AB080;
  v16[0] = @"NotSet";
  v16[1] = @"km";
  v15[2] = &off_1013AB098;
  v15[3] = &off_1013AB0B0;
  v16[2] = @"miles";
  v16[3] = @"m";
  void v15[4] = &off_1013AB0C8;
  void v15[5] = &off_1013AB0E0;
  void v16[4] = @"yards";
  void v16[5] = @"ft";
  id v6 = +[NSDictionary dictionaryWithObjects:v16 forKeys:v15 count:6];
  v13[0] = &off_1013AB068;
  v13[1] = &off_1013AB080;
  v14[0] = @"NotSet";
  v14[1] = @"Right";
  v13[2] = &off_1013AB098;
  v14[2] = @"Left";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:3];
  v11[0] = &off_1013AB068;
  v11[1] = &off_1013AB080;
  v12[0] = @"NotSet";
  v12[1] = @"Normal";
  id v11[2] = &off_1013AB098;
  v12[2] = @"Roundabout";
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:3];
  v9[0] = &off_1013AB068;
  v9[1] = &off_1013AB080;
  v10[0] = @"NotSet";
  v10[1] = @"NO_TURN";
  void v9[2] = &off_1013AB098;
  v9[3] = &off_1013AB0B0;
  void v10[2] = @"LEFT_TURN";
  _OWORD v10[3] = @"RIGHT_TURN";
  void v9[4] = &off_1013AB0C8;
  void v9[5] = &off_1013AB0E0;
  void v10[4] = @"STRAIGHT_AHEAD";
  void v10[5] = @"U_TURN";
  void v9[6] = &off_1013AB0F8;
  v9[7] = &off_1013AB110;
  void v10[6] = @"FOLLOW_ROAD";
  void v10[7] = @"ENTER_ROUNDABOUT";
  v9[8] = &off_1013AB128;
  v9[9] = &off_1013AB140;
  v10[8] = @"EXIT_ROUNDABOUT";
  v10[9] = @"OFF_RAMP";
  v9[10] = &off_1013AB158;
  v9[11] = &off_1013AB170;
  v10[10] = @"ON_RAMP";
  v10[11] = @"ARRIVE_END_OF_NAVIGATION";
  v9[12] = &off_1013AB188;
  v9[13] = &off_1013AB1A0;
  v10[12] = @"START_ROUTE";
  v10[13] = @"ARRIVE_AT_DESTINATION";
  v9[14] = &off_1013AB1B8;
  v9[15] = &off_1013AB1D0;
  v10[14] = @"KEEP_LEFT";
  v10[15] = @"KEEP_RIGHT";
  uint8_t v9[16] = &off_1013AB1E8;
  v9[17] = &off_1013AB200;
  v10[16] = @"ENTER_FERRY";
  v10[17] = @"EXIT_FERRY";
  v9[18] = &off_1013AB218;
  v9[19] = &off_1013AB230;
  v10[18] = @"CHANGE_FERRY";
  v10[19] = @"START_ROUTE_WITH_U_TURN";
  v9[20] = &off_1013AB248;
  v9[21] = &off_1013AB260;
  v10[20] = @"U_TURN_AT_ROUNDABOUT";
  v10[21] = @"LEFT_TURN_AT_END";
  v9[22] = &off_1013AB278;
  v9[23] = &off_1013AB290;
  v10[22] = @"RIGHT_TURN_AT_END";
  v10[23] = @"HIGHWAY_OFF_RAMP_LEFT";
  v9[24] = &off_1013AB2A8;
  v9[25] = &off_1013AB2C0;
  v10[24] = @"HIGHWAY_OFF_RAMP_RIGHT";
  v10[25] = @"ARRIVE_AT_DESTINATION_LEFT";
  v9[26] = &off_1013AB2D8;
  v9[27] = &off_1013AB2F0;
  v10[26] = @"ARRIVE_AT_DESTINATION_RIGHT";
  v10[27] = @"U_TURN_WHEN_POSSIBLE";
  v9[28] = &off_1013AB308;
  v9[29] = &off_1013AB320;
  v10[28] = @"ARRIVE_END_OF_DIRECTIONS";
  v10[29] = @"ROUNDABOUT_EXIT_1";
  v9[30] = &off_1013AB338;
  v9[31] = &off_1013AB350;
  v10[30] = @"ROUNDABOUT_EXIT_2";
  v10[31] = @"ROUNDABOUT_EXIT_3";
  v9[32] = &off_1013AB368;
  v9[33] = &off_1013AB380;
  v10[32] = @"ROUNDABOUT_EXIT_4";
  v10[33] = @"ROUNDABOUT_EXIT_5";
  v9[34] = &off_1013AB398;
  v9[35] = &off_1013AB3B0;
  v10[34] = @"ROUNDABOUT_EXIT_6";
  v10[35] = @"ROUNDABOUT_EXIT_7";
  v9[36] = &off_1013AB3C8;
  v9[37] = &off_1013AB3E0;
  v10[36] = @"ROUNDABOUT_EXIT_8";
  v10[37] = @"ROUNDABOUT_EXIT_9";
  v9[38] = &off_1013AB3F8;
  v9[39] = &off_1013AB410;
  v10[38] = @"ROUNDABOUT_EXIT_10";
  v10[39] = @"ROUNDABOUT_EXIT_11";
  v9[40] = &off_1013AB428;
  v9[41] = &off_1013AB440;
  v10[40] = @"ROUNDABOUT_EXIT_12";
  v10[41] = @"ROUNDABOUT_EXIT_13";
  v9[42] = &off_1013AB458;
  v9[43] = &off_1013AB470;
  v10[42] = @"ROUNDABOUT_EXIT_14";
  v10[43] = @"ROUNDABOUT_EXIT_15";
  v9[44] = &off_1013AB488;
  v9[45] = &off_1013AB4A0;
  v10[44] = @"ROUNDABOUT_EXIT_16";
  v10[45] = @"ROUNDABOUT_EXIT_17";
  v9[46] = &off_1013AB4B8;
  v9[47] = &off_1013AB4D0;
  v10[46] = @"ROUNDABOUT_EXIT_18";
  v10[47] = @"ROUNDABOUT_EXIT_19";
  v9[48] = &off_1013AB4E8;
  v9[49] = &off_1013AB500;
  v10[48] = @"SHARP_LEFT_TURN";
  v10[49] = @"SHARP_RIGHT_TURN";
  v9[50] = &off_1013AB518;
  v9[51] = &off_1013AB530;
  v10[50] = @"SLIGHT_LEFT_TURN";
  v10[51] = @"SLIGHT_RIGHT_TURN";
  v9[52] = &off_1013AB548;
  v9[53] = &off_1013AB560;
  v10[52] = @"CHANGE_HIGHWAY";
  v10[53] = @"CHANGE_HIGHWAY_LEFT";
  v9[54] = &off_1013AB578;
  v10[54] = @"CHANGE_HIGHWAY_RIGHT";
  id v3 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:55];
  v7[0] = @"maneuverType";
  v7[1] = @"distanceBetweenManeuverDisplayUnits";
  v8[0] = v3;
  v8[1] = v6;
  v7[2] = @"drivingSide";
  v7[3] = @"junctionType";
  v8[2] = v1;
  v8[3] = v2;
  uint64_t v4 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:4];
  id v5 = (void *)qword_101610F60;
  qword_101610F60 = v4;
}

void sub_100CF53F0(id a1)
{
  v3[0] = &off_1013AB590;
  v3[1] = &off_1013AB5A8;
  v4[0] = @"navigationRouteGuidanceDisplayComponentID";
  v4[1] = @"index";
  v3[2] = &off_1013AB5C0;
  v3[3] = &off_1013AB5D8;
  v4[2] = @"maneuverDescription";
  v4[3] = @"maneuverType";
  void v3[4] = &off_1013AB5F0;
  void v3[5] = &off_1013AB608;
  void v4[4] = @"afterManeuverRoadName";
  void v4[5] = @"distanceBetweenManeuver";
  v3[6] = &off_1013AB620;
  v3[7] = &off_1013AB638;
  v4[6] = @"distanceBetweenManeuverDisplayString";
  v4[7] = @"distanceBetweenManeuverDisplayUnits";
  v3[8] = &off_1013AB650;
  v3[9] = &off_1013AB668;
  v4[8] = @"drivingSide";
  v4[9] = @"junctionType";
  v3[10] = &off_1013AB680;
  v3[11] = &off_1013AB698;
  v4[10] = @"junctionElementAngle";
  v4[11] = @"junctionElementExitAngle";
  v3[12] = &off_1013AB6B0;
  void v3[13] = &off_1013AB6C8;
  v4[12] = @"linkedLaneGuidanceInfo";
  v4[13] = @"exitInfo";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:14];
  uint64_t v2 = (void *)qword_101610F70;
  qword_101610F70 = v1;
}

void sub_100CF6CA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100CF6CC0(uint64_t a1, void *a2)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    LODWORD(v4) = 20.0;
    id v5 = [v11 addSliderRowWithTitle:@"Masking Texture alpha factor" subtitleStringFormat:@"factor:  %1.1f" min:&stru_101321908 max:&stru_101321928 get:0.0 set:v4];
    LODWORD(v6) = 1008981770;
    LODWORD(v7) = 0.5;
    id v8 = [v11 addSliderRowWithTitle:@"Mask corner radius to shorter edge ratio" subtitleStringFormat:@"ratio:  %1.2f" min:&stru_101321948 max:&stru_101321968 get:v6 set:v7];
    LODWORD(v9) = 1041865114;
    id v10 = [v11 addSliderRowWithTitle:@"Mask corner radius zoom based bias step" subtitleStringFormat:@"ratio:  %1.2f" min:&stru_101321988 max:&stru_1013219A8 get:0.0 set:v9];
  }
}

float sub_100CF6DC8(id a1)
{
  uint64_t v1 = +[VKDebugSettings sharedSettings];
  [v1 maskingOverlayOpacityFactor];
  float v3 = v2;

  return v3;
}

void sub_100CF6E10(id a1, float a2)
{
  id v4 = +[VKDebugSettings sharedSettings];
  *(float *)&double v3 = a2;
  [v4 setMaskingOverlayOpacityFactor:v3];
}

float sub_100CF6E68(id a1)
{
  uint64_t v1 = +[VKDebugSettings sharedSettings];
  [v1 maskingOverlayRadiusEdgeRatio];
  float v3 = v2;

  return v3;
}

void sub_100CF6EB0(id a1, float a2)
{
  float v3 = +[VKDebugSettings sharedSettings];
  *(float *)&double v4 = a2;
  [v3 setMaskingOverlayRadiusEdgeRatio:v4];

  id v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

float sub_100CF6F3C(id a1)
{
  uint64_t v1 = +[VKDebugSettings sharedSettings];
  [v1 maskingOverlayRadiusZoomCorrectionStep];
  float v3 = v2;

  return v3;
}

void sub_100CF6F84(id a1, float a2)
{
  float v3 = +[VKDebugSettings sharedSettings];
  *(float *)&double v4 = a2;
  [v3 setMaskingOverlayRadiusZoomCorrectionStep:v4];

  id v5 = +[NSNotificationCenter defaultCenter];
  [v5 postNotificationName:VKShouldFlushTileCachesNotification object:0];
}

void sub_100CF7188(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100CF71A8(uint64_t a1, char a2, char a3, void *a4)
{
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100CF7284;
  void v11[3] = &unk_1013219D0;
  id v9 = *(id *)(a1 + 32);
  char v14 = a2;
  char v15 = a3;
  id v12 = v7;
  id v13 = v9;
  id v10 = v7;
  [WeakRetained dismissViewControllerAnimated:1 completion:v11];
}

uint64_t sub_100CF7284(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49), *(void *)(a1 + 32));
  }
  return result;
}

uint64_t sub_100CFA744(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 152);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(result + 16))(result, 0, 1, *(void *)(a1 + 40));
  }
  return result;
}

uint64_t sub_100CFA8DC(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 32) + 152);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(result + 16))(result, 1, 1, *(void *)(a1 + 40));
  }
  return result;
}

void sub_100CFB0AC(id a1)
{
}

id sub_100CFB9B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentMapsDebugControllerIfEnabled];
}

void sub_100CFB9C0(uint64_t a1, char a2)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_100CFBA3C;
  v2[3] = &unk_101321A80;
  char v3 = a2;
  void v2[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_100CFBA3C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  double v4 = *(void **)(v3 + 40);
  if (v2)
  {
    if (v4) {
      return;
    }
    id v8 = +[LoadingIndicatorController sharedController];
    uint64_t v5 = [v8 beginShowingLoadingIndicator];
    uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;

    double v4 = v8;
  }
  else
  {
    if (!v4) {
      return;
    }
    *(void *)(v3 + 40) = 0;
  }
}

void sub_100CFBB9C(uint64_t a1)
{
  int v2 = objc_opt_new();
  [v2 setTitle:@"geod Crashed"];
  uint64_t v3 = +[MapsRadarComponent mapsGeoServicesComponent];
  [v2 setComponent:v3];

  [v2 setClassification:2];
  double v4 = sub_1000A930C();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = *(id *)(a1 + 32);
    if (!v5)
    {
      id v10 = @"<nil>";
      goto LABEL_10;
    }
    uint64_t v6 = (objc_class *)objc_opt_class();
    id v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      id v8 = [v5 performSelector:"accessibilityIdentifier"];
      id v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        id v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    id v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

LABEL_10:
    *(_DWORD *)buf = 138543362;
    char v14 = v10;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}@] Launching TTR for geod crash", buf, 0xCu);
  }
  id v11 = +[MapsRadarController sharedInstance];
  id v12 = [*(id *)(a1 + 32) chromeViewController];
  [v11 launchTTRWithRadar:v2 promptTitle:@"the Geo Daemon appears to have crashed" fromViewController:v12];
}

void sub_100CFBE90(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) object];
  id v19 = 0;
  uint64_t v3 = +[NSJSONSerialization dataWithJSONObject:v2 options:1 error:&v19];
  id v4 = v19;

  id v5 = objc_opt_new();
  uint64_t v6 = +[NSString stringWithFormat:@"VectorKit Fault"];
  [v5 setTitle:v6];

  if (v4)
  {
    id v7 = +[NSString stringWithFormat:@"Failed to serialize payload - %@", v4];
  }
  else
  {
    id v7 = [objc_alloc((Class)NSString) initWithData:v3 encoding:4];
  }
  id v8 = v7;
  [v5 setDescriptionText:v7];

  id v9 = +[MapsRadarComponent mapsMapDisplayComponent];
  [v5 setComponent:v9];

  [v5 setClassification:6];
  id v10 = sub_1000A930C();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = *(id *)(a1 + 40);
    if (!v11)
    {
      id v16 = @"<nil>";
      goto LABEL_13;
    }
    id v12 = (objc_class *)objc_opt_class();
    id v13 = NSStringFromClass(v12);
    if (objc_opt_respondsToSelector())
    {
      char v14 = [v11 performSelector:"accessibilityIdentifier"];
      char v15 = v14;
      if (v14 && ![v14 isEqualToString:v13])
      {
        id v16 = +[NSString stringWithFormat:@"%@<%p, %@>", v13, v11, v15];

        goto LABEL_11;
      }
    }
    id v16 = +[NSString stringWithFormat:@"%@<%p>", v13, v11];
LABEL_11:

LABEL_13:
    *(_DWORD *)buf = 138543362;
    long long v21 = v16;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "[%{public}@] Launching TTR for VectorKit crash", buf, 0xCu);
  }
  double v17 = +[MapsRadarController sharedInstance];
  CGFloat v18 = [*(id *)(a1 + 40) chromeViewController];
  [v17 launchTTRWithRadar:v5 promptTitle:@"VectorKit has encountered a serious error" fromViewController:v18];
}

void sub_100CFC570(uint64_t a1, void *a2)
{
  int v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v5 = [v2 window];
  id v4 = [v5 windowScene];
  [v4 setTitle:v3];
}

void sub_100CFD794(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v5 = sub_1000B8184();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    int v6 = 138412290;
    id v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Download Web Bundle Error: %@", (uint8_t *)&v6, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100CFD86C(uint64_t a1, uint64_t a2)
{
  if (a2) {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100CFDA24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100CFDA4C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    if (v7 && (uint64_t v9 = *(void *)(a1 + 56)) != 0)
    {
      (*(void (**)(uint64_t, id))(v9 + 16))(v9, v7);
    }
    else
    {
      id v10 = *(void **)(a1 + 32);
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v12 = *(void *)(a1 + 48);
      id v15 = 0;
      [v10 _saveFileData:v6 toDirectory:v11 toFilePath:v12 error:&v15];
      id v13 = v15;
      uint64_t v14 = *(void *)(a1 + 56);
      if (v14) {
        (*(void (**)(uint64_t, id))(v14 + 16))(v14, v13);
      }
    }
  }
}

id sub_100CFEC64(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 legs];
  id v6 = [v5 count];

  if ((unint64_t)v6 < 2)
  {
    id v7 = 0;
    goto LABEL_12;
  }
  id v8 = [v4 legIndexForStepIndex:[v3 stepIndex]];
  uint64_t v9 = [v4 legs];
  if (v8 >= [v9 count])
  {
    uint64_t v11 = 0;
    id v7 = 0;
  }
  else
  {
    id v10 = [v4 legs];
    uint64_t v11 = [v10 objectAtIndexedSubscript:v8];

    if (!v11
      || ([v4 legs],
          uint64_t v12 = objc_claimAutoreleasedReturnValue(),
          [v12 lastObject],
          id v13 = objc_claimAutoreleasedReturnValue(),
          v13,
          v12,
          v11 == v13)
      || (id v14 = [v11 endStepIndex], v14 != objc_msgSend(v3, "stepIndex")))
    {
      id v7 = 0;
      goto LABEL_11;
    }
    uint64_t v9 = [v11 destination];
    id v7 = objc_opt_new();
    [v7 updateFromGEOComposedWaypoint:v9];
  }

LABEL_11:
LABEL_12:

  return v7;
}

void sub_100CFFFFC(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [*(id *)(a1 + 32) objectAtIndexPath:];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 mapItem];
    id v6 = [v5 _geoMapItem];
    unsigned int v7 = [v6 _hasEVCharger];

    if (v7)
    {
      id v8 = [*(id *)(a1 + 32) placeSummaryTemplateForSearchResult:v4 indexPath:v12];
      if (v8)
      {
        uint64_t v9 = *(void **)(*(void *)(a1 + 32) + 216);
        id v10 = [v4 mapItem];
        uint64_t v11 = [v10 _identifier];
        [v9 setObject:v8 forKeyedSubscript:v11];
      }
    }
  }
}

void sub_100D016F4(uint64_t a1)
{
  [*(id *)(a1 + 32) viewController:*(void *)(a1 + 40) selectMapItem:*(void *)(a1 + 48) address:0 addToHistory:1 source:4];
  id v2 = [*(id *)(a1 + 32) mapCameraController];
  [v2 frameMapItem:*(void *)(a1 + 48) animated:1 completion:0];
}

uint64_t sub_100D01768(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100D02558(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 25);
  return result;
}

void sub_100D0256C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = objc_loadWeakRetained(WeakRetained + 4);
    [v3 source:v4 didUpdateAvailability:*(unsigned __int8 *)(a1 + 40)];

    id WeakRetained = v4;
  }
}

void sub_100D0268C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    if (v3 != WeakRetained[7])
    {
      WeakRetained[7] = v3;
      id v4 = WeakRetained;
      [WeakRetained _reloadAvailability];
      id WeakRetained = v4;
    }
  }
}

void sub_100D02C38(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v1);
  objc_destroyWeak(v2);
  objc_destroyWeak((id *)(v4 - 112));
  _Unwind_Resume(a1);
}

void sub_100D02C6C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didSelectModel];
}

void sub_100D02CAC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _didViewModel];
}

void sub_100D02CEC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _dismiss];
}

void sub_100D02DDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_10000A540();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User dismissed EV suggestion.", v3, 2u);
    }

    WeakRetained[24] = 1;
    [WeakRetained _reloadAvailability];
  }
}

void sub_100D02F40(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D02FE4;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  if (qword_101610F90 != -1) {
    dispatch_once(&qword_101610F90, block);
  }
  objc_destroyWeak(&v2);
}

void sub_100D02FE4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = sub_10000A540();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "User viewed EV suggestion.", v3, 2u);
    }

    [WeakRetained _markCurrentVehicleCombinationAsViewed];
  }
}

void sub_100D03138(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    if ([*((id *)WeakRetained + 6) count])
    {
      uint64_t v3 = +[UIApplication sharedMapsDelegate];
      uint64_t v4 = [v3 appCoordinator];
      id v5 = [v4 baseActionCoordinator];

      [v5 presentVehicleOnboardingWithVehicles:v2[6] completion:0];
    }
    else
    {
      id v6 = sub_10000A540();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)unsigned int v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "User selected EV routing feature source, but there were no unpaired vehicles.", v7, 2u);
      }
    }
  }
}

void sub_100D03430(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained setUnpairedVehicles:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

NSString *__cdecl sub_100D03538(id a1, VGVehicle *a2, unint64_t a3)
{
  id v3 = a2;
  uint64_t v4 = +[NSMutableString string];
  uint64_t v5 = [(VGVehicle *)v3 pairedAppIdentifier];
  id v6 = (void *)v5;
  if (v5) {
    CFStringRef v7 = (const __CFString *)v5;
  }
  else {
    CFStringRef v7 = &stru_101324E70;
  }
  [v4 appendString:v7];

  uint64_t v8 = [(VGVehicle *)v3 displayName];
  uint64_t v9 = (void *)v8;
  if (v8) {
    CFStringRef v10 = (const __CFString *)v8;
  }
  else {
    CFStringRef v10 = &stru_101324E70;
  }
  [v4 appendString:v10];

  uint64_t v11 = [(VGVehicle *)v3 year];
  id v12 = (void *)v11;
  if (v11) {
    CFStringRef v13 = (const __CFString *)v11;
  }
  else {
    CFStringRef v13 = &stru_101324E70;
  }
  [v4 appendString:v13];

  uint64_t v14 = [(VGVehicle *)v3 model];
  id v15 = (void *)v14;
  if (v14) {
    CFStringRef v16 = (const __CFString *)v14;
  }
  else {
    CFStringRef v16 = &stru_101324E70;
  }
  [v4 appendString:v16];

  double v17 = [(VGVehicle *)v3 manufacturer];

  if (v17) {
    CFStringRef v18 = v17;
  }
  else {
    CFStringRef v18 = &stru_101324E70;
  }
  [v4 appendString:v18];

  id v19 = [v4 copy];

  return (NSString *)v19;
}

int64_t sub_100D03660(id a1, NSString *a2, NSString *a3)
{
  return [(NSString *)a2 compare:a3];
}

void sub_100D038A4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a2;
  id v7 = [v5 waypointAtIndex:a3];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100D0452C(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_101321C60];
  id v2 = (void *)qword_101610F98;
  qword_101610F98 = v1;
}

void sub_100D0458C(id a1, RelatedSearchSuggestionOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  uint64_t v8 = a2;
  uint64_t v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  [(RelatedSearchSuggestionOutlineCell *)v8 setCellModel:v7];
}

void sub_100D05380(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) textLabel];
  [v2 setText:v1];
}

id sub_100D058D4()
{
  if (qword_101610FB0 != -1) {
    dispatch_once(&qword_101610FB0, &stru_101321C80);
  }
  uint64_t v0 = (void *)qword_101610FA8;

  return v0;
}

void sub_100D06520(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionDailyUsageEntry");
  id v2 = (void *)qword_101610FA8;
  qword_101610FA8 = (uint64_t)v1;
}

void sub_100D06F0C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "ForwardGeocodeAction resolveMapItem: %@", (uint8_t *)&v11, 0xCu);
    }

    id v8 = *(id *)(a1 + 32);
  }
  else
  {
    id v8 = *(id *)(a1 + 32);
    if ([v5 count])
    {
      uint64_t v9 = [v5 firstObject];

      id v8 = (id)v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v8);
  }
}

BOOL sub_100D07764(id a1, id a2, NSDictionary *a3)
{
  id v3 = a2;
  uint64_t v4 = &OBJC_PROTOCOL___MSPHistoryEntryPlaceDisplay;
  objc_opt_class();
  id v5 = v3;
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  if (v7
    && ([v7 historyEntry],
        id v8 = objc_claimAutoreleasedReturnValue(),
        unsigned int v9 = [v8 conformsToProtocol:v4],
        v8,
        v9))
  {
    id v10 = v5;
  }
  else
  {
    id v10 = 0;
  }

  if (v10)
  {
    int v11 = [v10 historyEntry];
    id v12 = [v11 geoMapItem];
    CFStringRef v13 = +[MKMapItem _itemWithGeoMapItem:v12];

    unsigned __int8 v14 = [v13 _isMapItemTypeSettlement];
  }
  else
  {
    unsigned __int8 v14 = 0;
  }

  return v14;
}

void sub_100D08FA8(id a1)
{
  v10.double width = 40.0;
  v10.double height = 40.0;
  UIGraphicsBeginImageContextWithOptions(v10, 0, 0.0);
  os_log_t v1 = +[UIColor grayColor];
  [v1 set];

  id v2 = +[UIBezierPath bezierPathWithOvalInRect:](UIBezierPath, "bezierPathWithOvalInRect:", 0.0, 0.0, 40.0, 40.0);
  [v2 fill];

  id v3 = +[UIColor whiteColor];
  [v3 set];

  id v8 = +[UIImage _mapsCar_systemImageNamed:@"magnifyingglass"];
  [v8 size];
  [v8 drawInRect:CGRectMake(20.0 - v4 * 0.5, 20.0 - v5 * 0.5, v4, v4)];
  uint64_t v6 = UIGraphicsGetImageFromCurrentImageContext();
  id v7 = (void *)qword_101610FB8;
  qword_101610FB8 = v6;

  UIGraphicsEndImageContext();
}

void sub_100D090C0(uint64_t a1, void *a2)
{
  id v5 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  id v3 = *(void **)(a1 + 32);
  double v4 = [*(id *)(a1 + 40) updateIdentifier];
  LODWORD(v3) = [v3 isEqual:v4];

  if (v3) {
    [*(id *)(a1 + 40) setImage:v5];
  }
}

void sub_100D0914C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NSThread isMainThread])
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100D09220;
    v4[3] = &unk_1012E5F78;
    id v6 = *(id *)(a1 + 32);
    id v5 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

uint64_t sub_100D09220(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100D0AAC0(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) searchController];
  os_log_t v1 = [v3 searchBar];
  id v2 = [v1 searchTextField];
  [v2 becomeFirstResponder];
}

void sub_100D0B098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D0B0C0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v9 = [WeakRetained searchDataSource];
    CGSize v10 = [v9 sectionForSectionIndex:a2];

    id v11 = [objc_alloc((Class)UICollectionLayoutListConfiguration) initWithAppearance:0];
    id v12 = +[UIColor clearColor];
    [v11 setBackgroundColor:v12];

    CFStringRef v13 = [v10 headerText];
    [v11 setHeaderMode:[v13 length] != 0];

    [v11 setFooterMode:0];
    id v19 = _NSConcreteStackBlock;
    uint64_t v20 = 3221225472;
    long long v21 = sub_100D0B2B8;
    long long v22 = &unk_101321CE8;
    objc_copyWeak(&v24, v6);
    id v14 = v10;
    id v23 = v14;
    [v11 setItemSeparatorHandler:&v19];
    id v15 = +[NSCollectionLayoutSection sectionWithListConfiguration:layoutEnvironment:](NSCollectionLayoutSection, "sectionWithListConfiguration:layoutEnvironment:", v11, v5, v19, v20, v21, v22);
    CFStringRef v16 = [v15 boundarySupplementaryItems];
    double v17 = [v16 firstObject];
    [v17 setPinToVisibleBounds:0];

    objc_destroyWeak(&v24);
  }
  else
  {
    id v15 = 0;
  }

  return v15;
}

void sub_100D0B2A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id sub_100D0B2B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v9 = [WeakRetained searchDataSource];
    CGSize v10 = (char *)[v9 numberOfItemsInSection:*(void *)(a1 + 32)] - 1;

    if ([v5 item] == v10) {
      [v6 setBottomSeparatorVisibility:2];
    }
  }

  return v6;
}

void sub_100D0BA30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_100D0BA4C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v3 = [WeakRetained delegate];
    [v3 presentOfflineMapRegionSelectorForRegion:*(void *)(a1 + 32) name:*(void *)(a1 + 40)];

    id WeakRetained = v4;
  }
}

uint64_t sub_100D0BAB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D0BD5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D0BD78(uint64_t a1, void *a2, uint64_t a3)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained setIsSearchLoading:0];
    if (!a3)
    {
      id v7 = [v11 mapItems];
      id v8 = [v7 count];

      if (v8)
      {
        unsigned int v9 = [v11 mapItems];
        CGSize v10 = [v9 firstObject];

        [v6 _addSubscriptionForMapItem:v10];
      }
    }
  }
}

void sub_100D0D3B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,os_activity_scope_state_s state)
{
}

void sub_100D0D9E4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100D0D9FC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) isolationQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D0DA94;
  block[3] = &unk_1012ECF98;
  long long v4 = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 48);
  dispatch_sync(v2, block);
}

void sub_100D0DA94(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  uint64_t v3 = [v6 objectForKeyedSubscript:v2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100D0DB20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[Result resultWithError:a2];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100D0DC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D0DC8C(uint64_t a1, void *a2)
{
}

void sub_100D0DECC(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  uint64_t v2 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  [v3 removeObjectForKey:v2];
}

void sub_100D0E0D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D0E0F0(uint64_t a1, void *a2)
{
}

void sub_100D0E240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D0E258(uint64_t a1, void *a2)
{
}

void sub_100D0E5F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
}

void sub_100D0E610(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  uint64_t v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  [v3 setObject:v2 forKeyedSubscript:v4];

  uint64_t v5 = [*(id *)(a1 + 32) resolvedWaypoints];

  if (v5)
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 48);
    [v6 _notifyObserversDidUpdateRouteCollectionResult:v7 forTransportType:v8];
  }
}

void sub_100D0E758(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) value];
  [v2 _updateIsInACustomRouteRegionForRouteCollection:v3];

  id v4 = [*(id *)(a1 + 32) observers];
  [v4 routePlanningSession:*(void *)(a1 + 32) didUpdateRouteCollectionResult:*(void *)(a1 + 40) forTransportType:*(void *)(a1 + 48)];
}

id sub_100D0E9E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setCurrentTransportType:*(void *)(a1 + 40)];
}

void sub_100D0F21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,os_activity_scope_state_s state)
{
}

id sub_100D0F244(uint64_t a1)
{
  return [*(id *)(a1 + 32) stopRecording];
}

void sub_100D0F24C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 routePlanningSession:*(void *)(a1 + 32) didChangeCurrentTransportType:*(void *)(*(void *)(a1 + 32) + 88) userInitiated:*(unsigned __int8 *)(a1 + 40)];
}

void sub_100D0F908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,os_activity_scope_state_s state)
{
  _Block_object_dispose((const void *)(v31 - 160), 8);
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_100D0F94C(uint64_t a1, void *a2)
{
}

void sub_100D0F960(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  id v3 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  [v4 setObject:v2 forKeyedSubscript:v3];
}

void sub_100D0F9D8(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateIsInACustomRouteRegionForRouteCollection:*(void *)(a1 + 40)];
  uint64_t v2 = [*(id *)(a1 + 32) observers];
  [v2 routePlanningSession:*(void *)(a1 + 32) didUpdateRouteCollectionResult:*(void *)(a1 + 48) forTransportType:*(void *)(a1 + 56)];

  id v3 = sub_1005768D4();
  id v4 = v3;
  os_signpost_id_t v5 = *(void *)(a1 + 64);
  if (v5 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v3))
  {
    *(_WORD *)id v6 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_INTERVAL_END, v5, "SetSelectedRoute", "", v6, 2u);
  }
}

void sub_100D0FD78(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  [v1 removeAllObjects];
}

void sub_100D1011C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_100D10144(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100D1015C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    id v3 = [WeakRetained currentRouteCollection];
    unsigned int v4 = [v3 isEqual:*(void *)(a1 + 32)];

    id WeakRetained = v5;
    if (v4)
    {
      [v5 _setIsInACustomRouteRegion:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
      id WeakRetained = v5;
    }
  }
}

void sub_100D103D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100D104EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100D10A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, id location)
{
}

void sub_100D10AA8(uint64_t a1)
{
  uint64_t v2 = sub_1005768D4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    *(_DWORD *)buf = 134349056;
    id v7 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[%{public}p] Got accurate location; will start resolving waypoints now",
      buf,
      0xCu);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D10BD0;
  block[3] = &unk_1012E6708;
  objc_copyWeak(&v5, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v5);
}

void sub_100D10BD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[25] = 0;
    id v3 = [WeakRetained waypointController];
    [v3 start];
  }
  else
  {
    id v3 = sub_1005768D4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)unsigned int v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "RoutePlanningSession disappeared before we could start resolving waypoints", v4, 2u);
    }
  }
}

void sub_100D11098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100D11A54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D11A70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _refreshAutomaticSharingContactsFromShortcut];
}

void sub_100D11C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100D11C98(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unsigned int v4 = +[LibraryUIUtilities isMyPlacesEnabled];
    uint64_t v5 = *(void *)(a1 + 32);
    if (v4)
    {
      id v6 = [WeakRetained _favoriteWithIdentifier:v5];
      id v7 = sub_100576A9C();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        uint64_t v8 = [v6 title];
        *(_DWORD *)buf = 138477827;
        uint64_t v20 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "... found matching favorite item \"%{private}@\"", buf, 0xCu);
      }
      unsigned int v9 = [v6 contacts];
      uint64_t v10 = +[MSPSharedTripContact contactsFromHandles:v9];
    }
    else
    {
      id v6 = [WeakRetained _shortcutWithIdentifier:v5];
      id v11 = sub_100576A9C();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        id v12 = [v6 title];
        *(_DWORD *)buf = 138477827;
        uint64_t v20 = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "... found matching shortcut \"%{private}@\"", buf, 0xCu);
      }
      unsigned int v9 = [v6 contacts];
      uint64_t v10 = +[MSPSharedTripContact contactValuesFromSuggestionsContacts:v9];
    }
    CFStringRef v13 = (void *)v10;

    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100D11F08;
    v15[3] = &unk_1012E92F0;
    objc_copyWeak(&v18, v2);
    void v15[4] = WeakRetained;
    id v16 = v13;
    id v17 = *(id *)(a1 + 32);
    id v14 = v13;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v15);

    objc_destroyWeak(&v18);
  }
}

void sub_100D11F08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v3 = *(void **)(a1 + 32);
    if (v3)
    {
      id v4 = WeakRetained;
      [v3 _setAutomaticSharingContacts:*(void *)(a1 + 40) forShortcutIdentifier:*(void *)(a1 + 48)];
      id WeakRetained = v4;
    }
  }
}

void sub_100D12580(uint64_t a1)
{
  v30.opaque[0] = 0;
  v30.opaque[1] = 0;
  os_activity_scope_enter(*(os_activity_t *)(*(void *)(a1 + 32) + 144), &v30);
  uint64_t v2 = [*(id *)(a1 + 32) resolvedWaypoints];
  BOOL v3 = v2 == 0;

  if (v3)
  {
    CGRect v27 = sub_1005762E4();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315906;
      CFStringRef v32 = "-[RoutePlanningSession _handleReceivedWaypointSetResult]_block_invoke";
      __int16 v33 = 2080;
      unsigned int v34 = "RoutePlanningSession.m";
      __int16 v35 = 1024;
      int v36 = 783;
      __int16 v37 = 2080;
      __int16 v38 = "self.resolvedWaypoints != nil";
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion: (%s)", buf, 0x26u);
    }

    if (sub_100BB36BC())
    {
      CGRect v28 = sub_1005762E4();
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        CGRect v29 = +[NSThread callStackSymbols];
        *(_DWORD *)buf = 138412290;
        CFStringRef v32 = v29;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
      }
    }
  }
  id v4 = [*(id *)(a1 + 32) routeLoadingController];
  BOOL v5 = v4 == 0;

  if (v5)
  {
    uint64_t v8 = [RouteLoadingController alloc];
    unsigned int v9 = [*(id *)(a1 + 32) resolvedWaypoints];
    uint64_t v10 = [*(id *)(a1 + 32) configuration];
    id v11 = [v10 routeLoadingTaskFactory];
    id v12 = [(RouteLoadingController *)v8 initWithWaypointSet:v9 taskFactory:v11];
    [*(id *)(a1 + 32) setRouteLoadingController:v12];

    CFStringRef v13 = *(void **)(a1 + 32);
    id v14 = [v13 routeLoadingController];
    [v14 setDelegate:v13];

    [*(id *)(a1 + 32) _updateLoadingControllerForRealtimeUpdates];
  }
  else
  {
    id v6 = [*(id *)(a1 + 32) resolvedWaypoints];
    id v7 = [*(id *)(a1 + 32) routeLoadingController];
    [v7 setWaypointSet:v6];
  }
  id v15 = [*(id *)(a1 + 32) sessionInitiator];
  id v16 = [*(id *)(a1 + 32) routeLoadingController];
  id v17 = [v16 routeLoadingTaskFactory];
  [v17 setInitiator:v15];

  id v18 = [*(id *)(a1 + 32) configuration];
  LOBYTE(v15) = [v18 areInitialRoutesBeingFetchedExternally];

  if (v15)
  {
    id v19 = sub_1005768D4();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = *(const char **)(a1 + 32);
      *(_DWORD *)buf = 134349056;
      CFStringRef v32 = v20;
      long long v21 = "[%{public}p] Routes are being fetched externally; not fetching routes ourselves";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, v21, buf, 0xCu);
    }
  }
  else
  {
    long long v22 = [*(id *)(a1 + 32) routeLoadingController];
    unsigned __int8 v23 = [v22 isActive];

    id v19 = sub_1005768D4();
    BOOL v24 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
    if (v23)
    {
      if (v24)
      {
        __int16 v25 = *(const char **)(a1 + 32);
        *(_DWORD *)buf = 134349056;
        CFStringRef v32 = v25;
        long long v21 = "[%{public}p] Route loading is already in progress; not requesting again";
        goto LABEL_11;
      }
    }
    else
    {
      if (v24)
      {
        uint64_t v26 = *(const char **)(a1 + 32);
        *(_DWORD *)buf = 134349056;
        CFStringRef v32 = v26;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "[%{public}p] Start fetching routes now", buf, 0xCu);
      }

      id v19 = [*(id *)(a1 + 32) routeLoadingController];
      -[NSObject refreshRoutesForTransportType:](v19, "refreshRoutesForTransportType:", [*(id *)(a1 + 32) currentTransportType]);
    }
  }

  os_activity_scope_leave(&v30);
}

void sub_100D12974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
}

void sub_100D13118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,os_activity_scope_state_s state)
{
}

void sub_100D1317C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = (os_activity_t *)objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v5 = WeakRetained;
  if (WeakRetained)
  {
    state.opaque[0] = 0;
    state.opaque[1] = 0;
    os_activity_scope_enter(WeakRetained[18], &state);
    id v6 = [(os_activity_t *)v5 isolationQueue];
    label = dispatch_queue_get_label(v6);
    uint64_t v8 = dispatch_queue_get_label(0);
    if (label == v8)
    {
    }
    else
    {
      if (!label || !v8)
      {
LABEL_13:

        goto LABEL_14;
      }
      BOOL v9 = strcmp(label, v8) == 0;

      if (!v9)
      {
LABEL_14:
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100D1356C;
        block[3] = &unk_1012E5D58;
        void block[4] = v5;
        id v23 = *(id *)(a1 + 32);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
        id v15 = [(os_activity_t *)v5 isolationQueue];
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_100D135C0;
        v21[3] = &unk_1012E69C0;
        void v21[4] = v5;
        void v21[5] = a2;
        dispatch_sync(v15, v21);

        id v16 = *(void **)(a1 + 32);
        void v19[4] = v5;
        v20[0] = _NSConcreteStackBlock;
        v20[1] = 3221225472;
        id v20[2] = sub_100D13790;
        v20[3] = &unk_10131A188;
        void v20[4] = v5;
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_100D13860;
        v19[3] = &unk_1012EB010;
        [v16 withValue:v20 orError:v19];
        id v17 = [(os_activity_t *)v5 isolationQueue];
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        v18[2] = sub_100D13928;
        v18[3] = &unk_1012E5D08;
        void v18[4] = v5;
        dispatch_sync(v17, v18);

        os_activity_scope_leave(&state);
        goto LABEL_15;
      }
    }
    uint64_t v10 = sub_1005762E4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      id v11 = [(os_activity_t *)v5 isolationQueue];
      id v12 = dispatch_queue_get_label(v11);
      *(_DWORD *)buf = 136316162;
      uint64_t v26 = "-[RoutePlanningSession waypointController:didResolveWaypointSet:]_block_invoke";
      __int16 v27 = 2080;
      CGRect v28 = "RoutePlanningSession.m";
      __int16 v29 = 1024;
      int v30 = 826;
      __int16 v31 = 2080;
      CFStringRef v32 = "strongSelf.isolationQueue";
      __int16 v33 = 2080;
      unsigned int v34 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion not on queue failed: %s/%s", buf, 0x30u);
    }
    if (!sub_100BB36BC()) {
      goto LABEL_14;
    }
    id v6 = sub_1005762E4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      uint64_t v13 = +[NSThread callStackSymbols];
      *(_DWORD *)buf = 138412290;
      uint64_t v26 = (const char *)v13;
      id v14 = (void *)v13;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%@", buf, 0xCu);
    }
    goto LABEL_13;
  }
LABEL_15:
}

void sub_100D13548(_Unwind_Exception *a1)
{
  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_100D1356C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 routePlanningSession:*(void *)(a1 + 32) didFinishResolvingWaypointSet:*(void *)(a1 + 40)];
}

id sub_100D135C0(uint64_t a1)
{
  if (![*(id *)(a1 + 32) currentTransportType]) {
    [*(id *)(a1 + 32) setCurrentTransportType:*(void *)(a1 + 40) userInitiated:0];
  }
  id result = [*(id *)(a1 + 32) currentTransportType];
  if (!result)
  {
    BOOL v3 = sub_1005762E4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136315650;
      BOOL v9 = "-[RoutePlanningSession waypointController:didResolveWaypointSet:]_block_invoke_2";
      __int16 v10 = 2080;
      id v11 = "RoutePlanningSession.m";
      __int16 v12 = 1024;
      int v13 = 838;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v8, 0x1Cu);
    }

    if (sub_100BB36BC())
    {
      id v4 = sub_1005762E4();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      {
        BOOL v5 = +[NSThread callStackSymbols];
        int v8 = 138412290;
        BOOL v9 = v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v8, 0xCu);
      }
    }
    id v6 = sub_1005768D4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      id v7 = *(const char **)(a1 + 32);
      int v8 = 134349056;
      BOOL v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "[%{public}p] Transport type is undefined; defaulting to driving before fetching routes",
        (uint8_t *)&v8,
        0xCu);
    }

    return [*(id *)(a1 + 32) setCurrentTransportType:1 userInitiated:0];
  }
  return result;
}

void sub_100D13790(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1005768D4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 134349315;
    uint64_t v7 = v5;
    __int16 v8 = 2113;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[%{public}p] Waypoints loaded successfully: %{private}@", (uint8_t *)&v6, 0x16u);
  }

  [*(id *)(a1 + 32) _handleReceivedWaypointSetResult];
}

void sub_100D13860(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1005768D4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = 134349314;
    uint64_t v7 = v5;
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "[%{public}p] Waypoint loading failed: %@", (uint8_t *)&v6, 0x16u);
  }
}

void sub_100D13928(uint64_t a1)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v2 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
  id v3 = [v2 allKeys];

  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      uint64_t v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        __int16 v8 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v7);
        id v9 = [*(id *)(a1 + 32) transportTypeToRouteCollectionResultsMap];
        __int16 v10 = [v9 objectForKey:v8];

        [*(id *)(a1 + 32) _notifyObserversDidUpdateRouteCollectionResult:v10 forTransportType:[v8 integerValue]];
        uint64_t v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }
}

uint64_t sub_100D13A80(uint64_t a1, uint64_t a2)
{
  id v4 = +[MapsSuggestionsPredictor sharedPredictor];
  id v5 = v4;
  unint64_t v6 = a2 - 1;
  if ((unint64_t)(a2 - 1) > 4) {
    uint64_t v7 = 4;
  }
  else {
    uint64_t v7 = dword_100F73EC0[v6];
  }
  [v4 capturePredictedTransportationMode:v7];

  __int16 v8 = sub_1005768D4();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    __int16 v10 = WeakRetained;
    if (v6 > 4) {
      CFStringRef v11 = @"Undefined";
    }
    else {
      CFStringRef v11 = off_101321F30[v6];
    }
    int v13 = 134349314;
    id v14 = WeakRetained;
    __int16 v15 = 2112;
    CFStringRef v16 = v11;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[%{public}p] Determined default transport type: %@", (uint8_t *)&v13, 0x16u);
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D13EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
}

void sub_100D13F1C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100099700(a2, &stru_101321E70);
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

NSUUID *__cdecl sub_100D13F74(id a1, GEOComposedRoute *a2, unint64_t a3)
{
  return (NSUUID *)[(GEOComposedRoute *)a2 uniqueRouteID];
}

RouteCollection *__cdecl sub_100D13F80(id a1, NSArray *a2)
{
  id v2 = a2;
  uint64_t v3 = [[RouteCollection alloc] initWithRoutes:v2 currentRouteIndex:0];

  return v3;
}

void sub_100D1417C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state)
{
}

void sub_100D14198(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  [v2 routePlanningSession:*(void *)(a1 + 32) didReceiveUpdates:*(void *)(a1 + 40) forRoutesResult:*(void *)(a1 + 48)];
}

id sub_100D15348(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:1.0];
}

id sub_100D15358(uint64_t a1)
{
  return [*(id *)(a1 + 32) resetHideTraceControlsTimer];
}

id sub_100D15534(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 48) setAlpha:0.0];
}

void sub_100D16E1C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 48) viewCameraSnapshotsButton];
  [v3 center];
  double v5 = v4;
  double v7 = v6;
  __int16 v8 = [*(id *)(a1 + 48) viewCameraSnapshotsButton];
  id v9 = [v8 superview];
  [v2 convertPoint:v9 fromView:v5];
  [*(id *)(a1 + 32) setCenter:];

  CATransform3DMakeScale(&v14, *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 56));
  CATransform3DRotate(&v15, &v14, -1.57079633, 0.0, 0.0, 1.0);
  __int16 v10 = [*(id *)(a1 + 32) layer];
  CATransform3D v13 = v15;
  [v10 setTransform:&v13];

  CFStringRef v11 = [*(id *)(a1 + 32) layer];
  LODWORD(v12) = *(_DWORD *)"333?";
  [v11 setOpacity:v12];
}

void sub_100D16F4C(uint64_t a1)
{
  [*(id *)(a1 + 32) removeFromSuperview];
  id v4 = +[NavigationCameraSnapshotManager sharedInstance];
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = [*(id *)(a1 + 48) tracePath];
  [v4 addCameraSnapshot:v2 toTraceFile:v3];
}

void sub_100D17624(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 128) navigationItem];
  [v2 setLeftBarButtonItem:0];

  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 184);
  *(void *)(v3 + 184) = 0;

  *(unsigned char *)(*(void *)(a1 + 32) + 176) = 0;
}

void sub_100D1784C(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) mapView];
  uint64_t v2 = [*(id *)(a1 + 40) camera];
  [v3 setCamera:v2 animated:1];
}

void sub_100D1897C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    double v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v10 = 138412290;
      id v11 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "ResolveMUIDAction resolveMapItem: %@", (uint8_t *)&v10, 0xCu);
    }
  }
  __int16 v8 = [v5 firstObject];
  uint64_t v9 = *(void *)(a1 + 32);
  if (v9) {
    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v8);
  }
}

id sub_100D18B58()
{
  if (qword_101610FE0 != -1) {
    dispatch_once(&qword_101610FE0, &stru_101322180);
  }
  uint64_t v0 = (void *)qword_101610FD8;

  return v0;
}

void sub_100D18D54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CustomRoutesTask");
  uint64_t v2 = (void *)qword_101610FD8;
  qword_101610FD8 = (uint64_t)v1;
}

id sub_100D18E64(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _updateDebugText];
}

void sub_100D193B0(id a1)
{
  os_log_t v1 = objc_alloc_init(MapsImpressionsPlaceCardFloatingDebugViewController);
  uint64_t v2 = (void *)qword_101610FE8;
  qword_101610FE8 = (uint64_t)v1;
}

void sub_100D1944C(id a1)
{
  os_log_t v1 = objc_alloc_init(MapsImpressionsSearchResultsFloatingDebugViewController);
  uint64_t v2 = (void *)qword_101610FF8;
  qword_101610FF8 = (uint64_t)v1;
}

UIFont *__cdecl sub_100D19EA0(id a1)
{
  os_log_t v1 = sub_100CE0C40(&stru_101321340);
  uint64_t v2 = +[UIFont _maps_cappedFont:v1 withMaxPoint:25.0];

  return (UIFont *)v2;
}

UIFont *__cdecl sub_100D19F10(id a1)
{
  os_log_t v1 = sub_100CE0CEC(&stru_101321440);
  uint64_t v2 = +[UIFont _maps_cappedFont:v1 withMaxPoint:31.0];

  return (UIFont *)v2;
}

void sub_100D1A8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D1A908(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 _maps_openURL:*(void *)(a1 + 32) options:&__NSDictionary0__struct completionHandler:0];
}

void sub_100D1A96C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v2 = WeakRetained;
    [WeakRetained _hideTip];
    id WeakRetained = v2;
  }
}

id sub_100D1A9B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _hideTip];
}

void sub_100D1A9B8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    double v7 = sub_10010A09C();
    __int16 v8 = v7;
    if (v5)
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        int v10 = 138543362;
        id v11 = v5;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Error fetching disk space from paired device, will hide disk space tip: %{public}@", (uint8_t *)&v10, 0xCu);
      }
    }
    else
    {
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
        uint64_t v9 = *(void **)(a1 + 40);
        int v10 = 134218240;
        id v11 = v9;
        __int16 v12 = 2048;
        uint64_t v13 = a2;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Paired device space needed (%lld), paired device space available (%lld)", (uint8_t *)&v10, 0x16u);
      }

      if (*(void *)(a1 + 40) - a2 >= 1)
      {
        [WeakRetained _showTipWithRequiredDiskSpace:];
        goto LABEL_11;
      }
    }
    [WeakRetained _hideTip];
  }
LABEL_11:
}

id sub_100D1B6A8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) imageView];
  id v3 = [v2 image];
  if (v3) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [*(id *)(a1 + 32) imageView];
  [v5 setAlpha:v4];

  id v6 = *(void **)(a1 + 32);

  return [v6 layoutIfNeeded];
}

id sub_100D1B7C8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

id sub_100D1B860(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_100D1BB80(id a1)
{
  uint64_t v1 = objc_opt_new();
  id v2 = (void *)qword_101611028;
  qword_101611028 = v1;
}

void sub_100D1CACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D1CAE8(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained updateDebugText];

  id v3 = objc_loadWeakRetained(v1);
  [v3 updateCameraFrame];

  id v4 = objc_loadWeakRetained(v1);
  [v4 startDebugInfoRefreshTimer];
}

void sub_100D1CDC8(uint64_t a1)
{
  id v3 = +[UIImage systemImageNamed:@"video.slash"];
  id v2 = [*(id *)(a1 + 32) cameraFeedImageView];
  [v2 setImage:v3];
}

id sub_100D1D880(id a1, VKRouteWaypointInfo *a2)
{
  id v2 = a2;
  id v3 = [SearchResult alloc];
  id v4 = [(VKRouteWaypointInfo *)v2 waypoint];

  id v5 = [(SearchResult *)v3 initWithComposedWaypoint:v4];

  return v5;
}

void sub_100D1DF78(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 count];
  if (v6 || !v7)
  {
    if (v6)
    {
      CATransform3D v14 = sub_1005768D4();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      {
        int v15 = 138412290;
        id v16 = v6;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Error: Identifier refinement ticket failed: %@", (uint8_t *)&v15, 0xCu);
      }
    }
  }
  else
  {
    __int16 v8 = [*(id *)(a1 + 32) waypointInfo];
    unsigned int v9 = [v8 type];

    int v10 = [PlaceCardItem alloc];
    id v11 = [v5 firstObject];
    if (v9 == 2)
    {
      __int16 v12 = [*(id *)(a1 + 32) waypointInfo];
      uint64_t v13 = [(PlaceCardItem *)v10 initWithMapItem:v11 chargeStationWaypointInfo:v12];

      id v11 = +[MKMapService sharedService];
      [v11 captureUserAction:6098 onTarget:504 eventValue:0];
    }
    else
    {
      uint64_t v13 = [(PlaceCardItem *)v10 initWithMapItem:v11];
    }

    [*(id *)(a1 + 40) presentPlaceCardForItem:v13 addToHistory:0 source:1 saveSelectionState:1];
  }
}

void sub_100D1E398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D1E3BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100D1E4FC;
    v6[3] = &unk_1012E6690;
    objc_copyWeak(&v8, (id *)(a1 + 40));
    id v7 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }
  else
  {
    id v4 = sub_1005768D4();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Failed to construct autocomplete person from handle ID: %@", buf, 0xCu);
    }
  }
}

void sub_100D1E4FC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = +[SearchFieldItem searchFieldItemWithObject:*(void *)(a1 + 32)];
    id v3 = [WeakRetained mapSelectionManager];
    [v3 clearSelectionAnimated:0];

    [WeakRetained viewController:0 doSearchItem:v2 withUserInfo:0];
  }
}

void sub_100D1E670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D1E694(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100D1E750;
  _OWORD v5[3] = &unk_1012E6690;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100D1E750(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v2 = +[SearchFieldItem searchFieldItemWithObject:*(void *)(a1 + 32)];
    id v3 = [WeakRetained mapSelectionManager];
    [v3 clearSelectionAnimated:0];

    [WeakRetained viewController:0 doSearchItem:v2 withUserInfo:0];
  }
}

void sub_100D1E924(uint64_t a1, void *a2, uint64_t a3)
{
  id v8 = a2;
  id v5 = [v8 count];
  if (!a3 && v5)
  {
    id v6 = *(void **)(a1 + 32);
    id v7 = [v8 firstObject];
    [v6 viewController:0 selectMapItem:v7 address:0 addToHistory:0 source:1];
  }
}

void sub_100D1EC08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D1EC20(uint64_t a1, void *a2, uint64_t a3)
{
  id v17 = a2;
  id v5 = [*(id *)(a1 + 32) lineSelectionAction];
  unsigned int v6 = [v5 isActive];

  id v7 = v17;
  if (!v6) {
    goto LABEL_22;
  }
  if (*(unsigned char *)(a1 + 64))
  {
    if (a3) {
      goto LABEL_22;
    }
    if (v17) {
      id v8 = (IncompleteTransitLineItem *)v17;
    }
    else {
      id v8 = [[IncompleteTransitLineItem alloc] initWithLabelMarker:*(void *)(a1 + 40)];
    }
    id v16 = v8;
    goto LABEL_20;
  }
  if (!v17)
  {
    BOOL v11 = 0;
    if (a3) {
      goto LABEL_8;
    }
LABEL_10:
    BOOL v14 = 0;
    goto LABEL_11;
  }
  unsigned int v9 = [*(id *)(a1 + 48) lineItem];
  id v10 = [v9 muid];
  BOOL v11 = v10 == [v17 muid];

  if (!a3) {
    goto LABEL_10;
  }
LABEL_8:
  id v12 = *(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  uint64_t v13 = [*(id *)(a1 + 48) lineItem];
  BOOL v14 = v12 == [v13 muid];

LABEL_11:
  id v7 = v17;
  if (v11 || v14 || !*(unsigned char *)(a1 + 65))
  {
    if (v17) {
      int v15 = (IncompleteTransitLineItem *)v17;
    }
    else {
      int v15 = [[IncompleteTransitLineItem alloc] initWithLabelMarker:*(void *)(a1 + 40)];
    }
    id v16 = v15;
    if (*(unsigned char *)(a1 + 65))
    {
      [*(id *)(a1 + 48) setLineItem:v15 loading:0];
LABEL_21:

      id v7 = v17;
      goto LABEL_22;
    }
LABEL_20:
    [*(id *)(a1 + 32) presentLineCardForItem:v16 labelMarker:*(void *)(a1 + 40) loading:0 overDisambiguation:*(unsigned __int8 *)(a1 + 64) preferredLayout:0];
    goto LABEL_21;
  }
LABEL_22:
}

id sub_100D1F6C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) showVLFUI];
}

void sub_100D206BC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 reloadData];

  *(unsigned char *)(*(void *)(a1 + 32) + 25) = 0;
}

id sub_100D2108C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) state];
  id v3 = *(void **)(a1 + 32);
  if (v2 == (id)1)
  {
    uint64_t v4 = 2;
  }
  else
  {
    id result = [v3 state];
    if (result != (id)2) {
      return result;
    }
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = 1;
  }

  return [v3 setState:v4];
}

void sub_100D21528(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 length])
  {
    id v4 = objc_alloc((Class)GEOCustomEnvironmentInfo);
    CFStringRef v9 = @"uuid";
    id v5 = +[NSUUID UUID];
    unsigned int v6 = [v5 UUIDString];
    id v10 = v6;
    id v7 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    id v8 = [v4 initWithName:v3 displayName:v3 dictionaryRepresentation:v7];

    [v8 save];
    [*(id *)(*(void *)(a1 + 32) + 8) addCustomEnvironment:v8];
  }
  else
  {
    NSLog(@"Can't create a config with an empty name");
  }
}

id sub_100D22824(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) fractionCompleted];
  id v2 = *(void **)(*(void *)(a1 + 32) + 32);
  *(float *)&double v3 = v3;
  double v4 = *(float *)&v3;

  return [v2 setProgress:1 animated:0 completion:v4];
}

int64_t sub_100D23318(id a1, id a2, id a3)
{
  return (int64_t)[a2 compare:a3];
}

void sub_100D2411C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 8) delete];
  id v3 = [*(id *)(a1 + 32) navigationController];
  id v2 = [v3 popViewControllerAnimated:1];
}

BOOL sub_100D24910(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  BOOL v6 = 0;
  if (v3 && v4)
  {
    if (v3 == v4
      || [v3 isCurrentLocation]
      && ([v5 isCurrentLocation] & 1) != 0)
    {
      goto LABEL_6;
    }
    [v3 coordinate];
    double v8 = v7;
    double v10 = v9;
    [v5 coordinate];
    double v12 = v11;
    double v14 = v13;
    v19.CLLocationDegrees latitude = v8;
    v19.CLLocationDegrees longitude = v10;
    if (!CLLocationCoordinate2DIsValid(v19)) {
      goto LABEL_11;
    }
    v20.CLLocationDegrees latitude = v12;
    v20.CLLocationDegrees longitude = v14;
    if (CLLocationCoordinate2DIsValid(v20)
      && vabdd_f64(v8, v12) < 0.00000000999999994
      && vabdd_f64(v10, v14) < 0.00000000999999994)
    {
LABEL_6:
      BOOL v6 = 1;
    }
    else
    {
LABEL_11:
      int v15 = [v3 mapItemForLocationComparison];
      uint64_t v16 = [v5 mapItemForLocationComparison];
      id v17 = (void *)v16;
      BOOL v6 = v15 && v16 && ([v15 _isEquivalentURLRepresentationTo:v16] & 1) != 0;
    }
  }

  return v6;
}

void sub_100D24EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[UGCThirdPartyPhotoSharingPreferencesManager sharedManager];
  unsigned int v5 = [v4 hasDeviceReadServerSettings];

  if (v5 || (unint64_t)[v3 count] <= 2)
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    BOOL v6 = +[UGCThirdPartyPhotoSharingPreferencesManager sharedManager];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100D24FF0;
    v7[3] = &unk_1013225C8;
    id v8 = *(id *)(a1 + 32);
    [v6 fetchThirdPartyPhotoSharingPreferencesWithCompletion:v7];
  }
}

void sub_100D24FF0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = v5;
  if (!a3) {
    [v5 hasOptIn];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D2551C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D25540(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v5 = (id *)(a1 + 32);
  id v6 = a4;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained setThirdPartyPhotoSharingPreference:v7];

  id v8 = [v6 count];
  if (v8)
  {
    double v9 = +[NSBundle mainBundle];
    double v10 = [v9 localizedStringForKey:@"Submission Generic Failure Title [UGC]" value:@"localized string not found" table:0];
    double v11 = +[NSBundle mainBundle];
    double v12 = [v11 localizedStringForKey:@"Submission Generic Failure Description [UGC]" value:@"localized string not found" table:0];
    double v13 = +[UIAlertController alertControllerWithTitle:v10 message:v12 preferredStyle:1];

    double v14 = +[NSBundle mainBundle];
    int v15 = [v14 localizedStringForKey:@"OK [UGC]" value:@"localized string not found" table:0];
    uint64_t v16 = +[UIAlertAction actionWithTitle:v15 style:1 handler:0];
    [v13 addAction:v16];

    [WeakRetained presentViewController:v13 animated:1 completion:0];
  }
  else
  {
    double v13 = [WeakRetained presentingViewController];
    [v13 dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100D25D44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userCurrentBookingResponse];
  id v3 = [v2 userCurrentBookings];
  id v11 = [v3 firstObject];

  id v4 = [*(id *)(a1 + 40) extension];
  id v5 = [v4 _containingAppIdentifer];
  if (isExtensionLocked())
  {
  }
  else
  {
    unsigned int v6 = [v11 _maps_shouldBeDisplayed];

    if (v6)
    {
      [*(id *)(a1 + 40) setActiveRestaurantUserBooking:v11];
      goto LABEL_6;
    }
  }
  [*(id *)(a1 + 40) setActiveRestaurantUserBooking:0];
  id v7 = [*(id *)(a1 + 32) userCurrentBookingUserActivity];
  [v7 setUserInfo:0];

LABEL_6:
  id v8 = [*(id *)(a1 + 32) userCurrentBookingUserActivity];
  [*(id *)(a1 + 40) setActiveRestaurantUserBookingActivity:v8];

  [*(id *)(a1 + 40) setActiveEventDiscoveryCompleted:1];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 40) + 8));
  double v10 = [*(id *)(a1 + 40) reservationExtensionFlowViewController];
  [WeakRetained presentExtensionFlowController:v10];
}

void sub_100D25F28(uint64_t a1)
{
  [*(id *)(a1 + 32) setActiveRestaurantUserBooking:0];
  [*(id *)(a1 + 32) setActiveEventDiscoveryCompleted:1];
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v2 = [*(id *)(a1 + 32) alertControllerForExtensionPermission];
  [WeakRetained presentPermissionsController:v2];
}

void sub_100D2622C(uint64_t a1)
{
  id v2 = sub_100018584();
  id v3 = [v2 oneAppGuardian];
  [v3 unregisterAppTracker:*(void *)(a1 + 32)];

  id v4 = [*(id *)(a1 + 32) activeBookingSession];
  [v4 endSessionWithState:2];
}

void sub_100D265E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) extension];
  [v2 _setEnabled:1 error:0];

  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 8));
  id v3 = [*(id *)(a1 + 32) reservationExtensionFlowViewController];
  [WeakRetained presentExtensionFlowController:v3];
}

void sub_100D2666C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) activeBookingSession];
  [v1 endSessionWithState:2];
}

id sub_100D27C28(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_100D27C30(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:0.0];
  id v2 = [*(id *)(a1 + 40) actionRowView];
  [v2 setAlpha:1.0];
}

id sub_100D27C90(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_100D2862C(uint64_t a1)
{
  id v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) currentSuggestion];
    id v4 = [v3 route];
    *(_DWORD *)buf = 138412290;
    id v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "route=%@", buf, 0xCu);
  }
  id v5 = [*(id *)(a1 + 32) currentSuggestion];
  unsigned int v6 = [v5 route];

  id v7 = [RouteCollection alloc];
  int v15 = v6;
  id v8 = +[NSArray arrayWithObjects:&v15 count:1];
  double v9 = [(RouteCollection *)v7 initWithRoutes:v8 currentRouteIndex:0];

  double v10 = [(RouteCollection *)v9 currentRoute];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100D28844;
  void v12[3] = &unk_101322630;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  void v12[4] = *(void *)(a1 + 32);
  id v11 = v9;
  double v13 = v11;
  +[NavigationSimulationPromptController promptIfNeededForSimulationForRoute:v10 navigationTracePlayback:0 continueWithOptions:v12];

  objc_destroyWeak(&v14);
}

void sub_100D28828(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D28844(uint64_t a1, uint64_t a2, int a3)
{
  if (a3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      id v5 = sub_100015DB4();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        LOWORD(v10[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "RG _startNavigation: simulation popup was dismissed.", (uint8_t *)v10, 2u);
      }

      [WeakRetained setState:1];
      unsigned int v6 = [WeakRetained detailCard];
      [v6 allowInteraction];
    }
  }
  else
  {
    *(void *)(a2 + 16) = [*(id *)(a1 + 32) navigationType] != 0;
    *(unsigned char *)(a2 + 33) = [*(id *)(a1 + 32) navigationType] == (id)2;
    id WeakRetained = +[CarChromeModeCoordinator sharedInstance];
    uint64_t v8 = *(void *)(a1 + 40);
    long long v9 = *(_OWORD *)(a2 + 16);
    v10[0] = *(_OWORD *)a2;
    v10[1] = v9;
    void v10[2] = *(_OWORD *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 48);
    [WeakRetained displayNavigationForRouteCollection:v8 options:v10];
  }
}

void sub_100D28BA4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) currentSuggestion];
  id v3 = [*(id *)(a1 + 32) suggestionsCard];
  [v3 setCurrentSuggestion:v2];

  id v4 = [*(id *)(a1 + 32) currentSuggestion];
  id v5 = [*(id *)(a1 + 32) detailCard];
  [v5 setCurrentSuggestion:v4];

  unsigned int v6 = *(void **)(a1 + 32);
  id v7 = [v6 currentSuggestion];
  id v20 = [v6 _guidanceETAFromEntry:v7];

  uint64_t v8 = [*(id *)(a1 + 32) suggestionsCard];
  [v8 setCurrentETA:v20];

  long long v9 = [*(id *)(a1 + 32) detailCard];
  [v9 setCurrentETA:v20];

  [*(id *)(a1 + 32) _updateHardwareBackButtonBehavior];
  double v10 = [*(id *)(a1 + 32) chromeViewController];
  uint64_t v11 = [v10 mapView];
  double v12 = [*(id *)(a1 + 32) trackingController];
  [v12 setMapView:v11];

  double v13 = [[ChromeMapSettings alloc] initWithType:2 userInterfaceIdiom:3];
  id v14 = [*(id *)(a1 + 32) chromeViewController];
  int v15 = [v14 transientMapSettings];
  [*(id *)(a1 + 32) setZoomedSettings:v15];

  [(ChromeMapSettings *)v13 zoomLevel];
  double v17 = v16;
  id v18 = [*(id *)(a1 + 32) zoomedSettings];
  [v18 setZoomLevel:v17];

  CLLocationCoordinate2D v19 = [*(id *)(a1 + 32) zoomedSettings];
  [v19 setTrackingMode:1];
}

void sub_100D28D90(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) previousTopContext];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v2 = [v5 mapWasPanned] ^ 1;
  }
  else {
    uint64_t v2 = 1;
  }
  id v3 = [*(id *)(a1 + 40) trackingController];
  [v3 setForcedTrackingMode:v2];

  id v4 = [*(id *)(a1 + 40) trackingController];
  [v4 setUseForcedTrackingMode:1];
}

void sub_100D28E4C(uint64_t a1)
{
  uint64_t v2 = *(unsigned char **)(a1 + 32);
  if (v2[97])
  {
    BOOL v3 = 0;
  }
  else
  {
    BOOL v3 = +[CarChromeViewController allowOneHandedZooming];
    uint64_t v2 = *(unsigned char **)(a1 + 32);
  }
  id v4 = [v2 mapView];
  id v5 = [v4 _oneHandedZoomGestureRecognizer];
  [v5 setEnabled:v3];

  unsigned int v6 = [*(id *)(a1 + 32) suggestionsCard];
  [v6 becomeCurrent];

  id v7 = *(void **)(a1 + 32);
  id v9 = [v7 carChromeViewController];
  uint64_t v8 = [v9 nudgerizer];
  [v8 setDelegate:v7];
}

void sub_100D295EC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_100D29610(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _suggestionsCardTapped];
}

void sub_100D2A134(id a1, CarFocusGuide *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  id v5 = [(CarFocusGuide *)v4 owningView];
  [v5 removeLayoutGuide:v4];
}

id sub_100D2A26C(uint64_t a1, void *a2)
{
  return [a2 setEnabled:*(unsigned __int8 *)(a1 + 32)];
}

void sub_100D2AC0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D2AC38(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    unsigned int v6 = [WeakRetained suggestionImageFetchIdentifier];
    unsigned int v7 = [v6 isEqual:*(void *)(a1 + 32)];
    uint64_t v8 = sub_100015DB4();
    BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_INFO);
    if (v7)
    {
      if (v9)
      {
        double v10 = *(void **)(a1 + 32);
        uint64_t v11 = *(void *)(a1 + 40);
        int v14 = 138543874;
        id v15 = v3;
        __int16 v16 = 2114;
        double v17 = v10;
        __int16 v18 = 2112;
        uint64_t v19 = v11;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "RG mode: _updateCurrentSuggestionImage assigned image: %{public}@ (%{public}@) for suggestion: %@", (uint8_t *)&v14, 0x20u);
      }

      [v5 setCurrentSuggestionImage:v3];
    }
    else
    {
      if (v9)
      {
        uint64_t v12 = *(void *)(a1 + 32);
        uint64_t v13 = *(void *)(a1 + 40);
        int v14 = 138544130;
        id v15 = v3;
        __int16 v16 = 2114;
        double v17 = v6;
        __int16 v18 = 2114;
        uint64_t v19 = v12;
        __int16 v20 = 2112;
        uint64_t v21 = v13;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "RG mode: _updateCurrentSuggestionImage dropping image: %{public}@ (new: %{public}@, old: %{public}@) for suggestion: %@", (uint8_t *)&v14, 0x2Au);
      }
    }
  }
}

void sub_100D2B6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D2B700(id *a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  unsigned int v7 = [WeakRetained chromeViewController];
  id v8 = objc_loadWeakRetained(a1 + 6);
  unsigned int v9 = [v7 isTopContext:v8];

  if (v9)
  {
    double v10 = sub_100015DB4();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      uint64_t v11 = @"NO";
      if (a2) {
        uint64_t v11 = @"YES";
      }
      uint64_t v12 = v11;
      *(_DWORD *)buf = 138412546;
      long long v22 = v12;
      __int16 v23 = 2112;
      id v24 = v5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "RouteGenius, handoffDestination success: %@, error: %@", buf, 0x16u);
    }
    id v13 = objc_loadWeakRetained(a1 + 6);
    int v14 = [v13 chromeViewController];
    id v15 = sub_100672F88(v5);
    [v14 captureUserAction:9020 onTarget:1006 eventValue:v15];

    if (a2)
    {
      [a1[4] setState:3];
      __int16 v16 = +[CarChromeModeCoordinator sharedInstance];
      [v16 displayMapBrowsing];
    }
    else
    {
      double v17 = +[UIApplication sharedMapsDelegate];
      __int16 v18 = CarInterruptionUserInfoForDestinationHandoffFailure(a1[5], v5);
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472;
      v19[2] = sub_100D2B978;
      v19[3] = &unk_1012F9B00;
      objc_copyWeak(&v20, a1 + 6);
      [v17 interruptApplicationWithKind:3 userInfo:v18 completionHandler:v19];

      objc_destroyWeak(&v20);
    }
  }
}

void sub_100D2B95C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D2B978(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained detailCard];
  [v1 allowInteraction];
}

id sub_100D2EC1C()
{
  if (qword_101611040 != -1) {
    dispatch_once(&qword_101611040, &stru_1013226D8);
  }
  uint64_t v0 = (void *)qword_101611038;

  return v0;
}

id sub_100D2F66C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _startVLFSession];
}

id sub_100D2FF74(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100D300BC;
  _OWORD v5[3] = &unk_1012E5D08;
  void v5[4] = *(void *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:v5 relativeDuration:0.0 animations:1.0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D30100;
  v4[3] = &unk_1012E5D08;
  void v4[4] = *(void *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:v4 relativeDuration:0.0 animations:0.833333333];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100D3018C;
  v3[3] = &unk_1012E5D08;
  void v3[4] = *(void *)(a1 + 32);
  return +[UIView addKeyframeWithRelativeStartTime:v3 relativeDuration:0.333333333 animations:0.666666667];
}

void sub_100D300BC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

void sub_100D30100(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) instructionView];
  [v2 setAlpha:0.0];

  id v3 = [*(id *)(a1 + 32) scanningAnimationView];
  [v3 setAlpha:0.0];

  id v4 = [*(id *)(a1 + 32) titleHeaderView];
  [v4 setAlpha:0.0];
}

void sub_100D3018C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) failureView];
  [v1 setAlpha:1.0];
}

id sub_100D3035C(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100D304A4;
  _OWORD v5[3] = &unk_1012E5D08;
  void v5[4] = *(void *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:v5 relativeDuration:0.0 animations:1.0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D304E8;
  v4[3] = &unk_1012E5D08;
  void v4[4] = *(void *)(a1 + 32);
  +[UIView addKeyframeWithRelativeStartTime:v4 relativeDuration:0.166666667 animations:0.833333333];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100D30574;
  v3[3] = &unk_1012E5D08;
  void v3[4] = *(void *)(a1 + 32);
  return +[UIView addKeyframeWithRelativeStartTime:v3 relativeDuration:0.0 animations:0.666666667];
}

void sub_100D304A4(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) cardPresentationController];
  [v1 updateHeightForCurrentLayout];
}

void sub_100D304E8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) instructionView];
  [v2 setAlpha:1.0];

  id v3 = [*(id *)(a1 + 32) scanningAnimationView];
  [v3 setAlpha:1.0];

  id v4 = [*(id *)(a1 + 32) titleHeaderView];
  [v4 setAlpha:1.0];
}

void sub_100D30574(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) failureView];
  [v1 setAlpha:0.0];
}

uint64_t sub_100D305BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D30FCC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VLFContaineeViewController");
  uint64_t v2 = (void *)qword_101611038;
  qword_101611038 = (uint64_t)v1;
}

id sub_100D31C84(uint64_t a1, uint64_t a2)
{
  return +[NSAttributedString _mapkit_attributedStringForComposedString:a2 defaultAttributes:*(void *)(a1 + 32)];
}

void sub_100D320D8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100D320F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = [*(id *)(a1 + 32) previousTopContext];
    char v3 = objc_opt_respondsToSelector();

    if (v3)
    {
      id v4 = [*(id *)(a1 + 32) previousTopContext];
      if ([v4 shouldResetStateAfterResigning])
      {
        id v5 = (void *)WeakRetained[3];
        WeakRetained[3] = 0;

        unsigned int v6 = (void *)WeakRetained[4];
        WeakRetained[4] = 0;
      }
    }
  }
}

void sub_100D327DC(uint64_t a1, unsigned int a2)
{
  id v4 = +[MapsOfflineUIHelper sharedHelper];
  [v4 resumeDownloadForSubscriptionInfo:*(void *)(a1 + 32) mode:a2];
}

void sub_100D32B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_100D32B38(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100D32B50(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
  }
  return result;
}

void sub_100D32C08(uint64_t a1, void *a2, void *a3)
{
  id v34 = a2;
  id v5 = a3;
  if (!v5)
  {
    uint64_t v33 = a1;
    unsigned int v6 = +[MapsOfflineUIHelper sharedHelper];
    uint64_t v35 = [v6 alertControllerForAttemptedUpdateAll];

    if (v35)
    {
      unsigned int v7 = [*(id *)(a1 + 32) chromeViewController];
      id v8 = (void *)v35;
      [v7 _maps_topMostPresentViewController:v35 animated:1 completion:0];

LABEL_37:
      id v5 = 0;
      goto LABEL_38;
    }
    if ([v34 count])
    {
      long long v39 = 0u;
      long long v40 = 0u;
      long long v37 = 0u;
      long long v38 = 0u;
      id v9 = v34;
      uint64_t v10 = 0;
      id v11 = [v9 countByEnumeratingWithState:&v37 objects:v44 count:16];
      if (!v11) {
        goto LABEL_20;
      }
      uint64_t v12 = *(void *)v38;
      while (1)
      {
        id v13 = 0;
        do
        {
          if (*(void *)v38 != v12) {
            objc_enumerationMutation(v9);
          }
          int v14 = *(void **)(*((void *)&v37 + 1) + 8 * (void)v13);
          id v15 = [v14 state];
          if ([v15 loadState] == (id)1) {
            goto LABEL_13;
          }
          __int16 v16 = [v14 state];
          if ([v16 loadState] == (id)2)
          {

LABEL_13:
LABEL_14:
            double v17 = [v14 state];
            id v18 = [v17 downloadedDataSize];

            v10 += (uint64_t)v18;
            goto LABEL_15;
          }
          uint64_t v19 = [v14 state];
          BOOL v20 = [v19 loadState] == (id)3;

          if (v20) {
            goto LABEL_14;
          }
LABEL_15:
          id v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v21 = [v9 countByEnumeratingWithState:&v37 objects:v44 count:16];
        id v11 = v21;
        if (!v21)
        {
LABEL_20:

          goto LABEL_22;
        }
      }
    }
    uint64_t v10 = -1;
LABEL_22:
    long long v22 = +[MapsOfflineUIHelper sharedHelper];
    __int16 v23 = [v22 alertControllerForInsufficientDiskSpaceForDownloadSize:v10];

    if (v23)
    {
      id v24 = sub_1000493C0();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        LODWORD(buf) = 134217984;
        *(void *)((char *)&buf + 4) = v10;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_INFO, "Displaying insufficient disk space alert for update of size %{bytes}llu", (uint8_t *)&buf, 0xCu);
      }

      __int16 v25 = [*(id *)(v33 + 32) chromeViewController];
      [v25 _maps_topMostPresentViewController:v23 animated:1 completion:0];

      goto LABEL_36;
    }
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v42 = 0x2020000000;
    uint64_t v43 = 0;
    uint64_t v26 = +[GEONetworkObserver sharedNetworkObserver];
    unsigned int v27 = [v26 isCellConnection];

    if (v27)
    {
      int BOOL = GEOConfigGetBOOL();
      if (v10 >= 0) {
        int v29 = BOOL;
      }
      else {
        int v29 = 0;
      }
      if (v29 != 1 || v10 >= (unint64_t)GEOConfigGetUInteger())
      {
        __int16 v31 = +[MapsOfflineUIHelper sharedHelper];
        v36[0] = _NSConcreteStackBlock;
        v36[1] = 3221225472;
        v36[2] = sub_100D33060;
        void v36[3] = &unk_1012E83B0;
        v36[4] = &buf;
        int v30 = [v31 alertControllerForCellularUpdateConfirmationForSize:v10 actionHandler:v36];

        CFStringRef v32 = [*(id *)(v33 + 32) chromeViewController];
        [v32 _maps_topMostPresentViewController:v30 animated:1 completion:0];

        goto LABEL_35;
      }
      *(void *)(*((void *)&buf + 1) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
    }
    int v30 = +[MapsOfflineUIHelper sharedHelper];
    [v30 forceUpdateAllSubscriptionsWithMode:*(void *)(*((void *)&buf + 1) + 24)];
LABEL_35:

    _Block_object_dispose(&buf, 8);
LABEL_36:

    id v8 = 0;
    goto LABEL_37;
  }
LABEL_38:
}

void sub_100D3303C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_100D33060(uint64_t a1, unsigned int a2)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  id v3 = +[MapsOfflineUIHelper sharedHelper];
  [v3 forceUpdateAllSubscriptionsWithMode:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];
}

void sub_100D332B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[MapsOfflineUIHelper sharedHelper];
  id v5 = *(void **)(a1 + 32);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_100D333A0;
  v7[3] = &unk_101322840;
  id v8 = v5;
  id v9 = v3;
  id v10 = *(id *)(a1 + 40);
  id v6 = v3;
  [v4 updateName:v6 forSubscriptionInfo:v8 completion:v7];
}

void sub_100D333A0(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4)
  {
    id v5 = sub_1000493C0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = a1[4];
      uint64_t v7 = a1[5];
      int v8 = 138412802;
      uint64_t v9 = v6;
      __int16 v10 = 2112;
      uint64_t v11 = v7;
      __int16 v12 = 2112;
      id v13 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error updating subscriptionInfo: %@, newDisplayName: %@, error: %@", (uint8_t *)&v8, 0x20u);
    }
  }
  (*(void (**)(void))(a1[6] + 16))();
}

uint64_t sub_100D33488(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D337B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 setAutocorrectionType:1];
  [v3 setAutocapitalizationType:1];
  [v3 setClearButtonMode:1];
  [v3 setText:*(void *)(a1 + 32)];
}

uint64_t sub_100D33824(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D3383C(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id v5 = [*(id *)(a1 + 32) text];
    Uuint64_t Integer = GEOConfigGetUInteger();
    if ((unint64_t)[(__CFString *)v5 length] <= UInteger)
    {
      CFStringRef v4 = v5;
    }
    else
    {
      uint64_t v3 = -[__CFString substringWithRange:](v5, "substringWithRange:", 0, UInteger);

      CFStringRef v4 = (const __CFString *)v3;
    }
    uint64_t v6 = (__CFString *)v4;
    if (!v4) {
      CFStringRef v4 = &stru_101324E70;
    }
    (*(void (**)(void, const __CFString *))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v4);
  }
}

uint64_t sub_100D33CB0(uint64_t a1, int a2, char a3)
{
  if (a2)
  {
    CFStringRef v4 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);
    return v4();
  }
  else
  {
    if ((a3 & 1) == 0)
    {
      long long v17 = 0u;
      long long v18 = 0u;
      long long v15 = 0u;
      long long v16 = 0u;
      uint64_t v6 = +[MapsOfflineUIHelper sharedHelper];
      uint64_t v7 = [v6 subscriptionInfos];

      id v8 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
      if (v8)
      {
        id v9 = v8;
        uint64_t v10 = *(void *)v16;
        do
        {
          for (unint64_t i = 0; i != v9; unint64_t i = (char *)i + 1)
          {
            if (*(void *)v16 != v10) {
              objc_enumerationMutation(v7);
            }
            __int16 v12 = *(void **)(*((void *)&v15 + 1) + 8 * i);
            id v13 = [v12 pairedDeviceState];

            if (v13)
            {
              int v14 = +[MapsOfflineUIHelper sharedHelper];
              [v14 setSubscriptionInfo:v12 shouldSyncToPairedDevice:0 completionHandler:&stru_101322860];
            }
          }
          id v9 = [v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
        }
        while (v9);
      }
    }
    GEOConfigSetBOOL();
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

id sub_100D34300(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForHistoryEntryRecentsItem:*(void *)(a1 + 32) showAutocompleteClientSource:0 showPlaceContext:0];
}

id sub_100D345A8(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForRecentContact:*(void *)(a1 + 32)];
}

void sub_100D347E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D34800(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = [WeakRetained searchResult];
    CFStringRef v4 = +[TwoLinesContentViewModelComposer cellModelForSearchResult:v3];
  }
  else
  {
    CFStringRef v4 = 0;
  }

  return v4;
}

id sub_100D34AAC(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForMapsSuggestionEntry:*(void *)(a1 + 32)];
}

id sub_100D34D7C(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForMapsFavoriteItem:*(void *)(a1 + 32)];
}

void sub_100D35078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D35094(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = [WeakRetained sharedTripSummary];
    CFStringRef v4 = +[TwoLinesContentViewModelComposer cellModelForSharedTripSummary:v3];
  }
  else
  {
    CFStringRef v4 = 0;
  }

  return v4;
}

id sub_100D353FC(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForCollection:*(void *)(a1 + 32)];
}

void sub_100D35754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D35770(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = [WeakRetained transitLine];
    CFStringRef v4 = +[TwoLinesContentViewModelComposer cellModelForTransitLine:v3];
  }
  else
  {
    CFStringRef v4 = 0;
  }

  return v4;
}

id sub_100D35B08(uint64_t a1)
{
  return +[TwoLinesContentViewModelComposer cellModelForCollectionMapItem:*(void *)(a1 + 32) currentLocation:*(void *)(a1 + 40)];
}

void sub_100D36794(id a1)
{
  os_log_t v1 = objc_alloc_init(UserProfileLinkGuidesProvider);
  uint64_t v2 = (void *)qword_101611048;
  qword_101611048 = (uint64_t)v1;
}

void sub_100D36E80(uint64_t a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) _activities %@", (uint8_t *)&v5, 0x16u);
  }
}

GEOURLOptions *__cdecl sub_100D37258(id a1, RichMapsActivity *a2, unint64_t a3)
{
  uint64_t v3 = [(RichMapsActivity *)a2 mapsActivity];
  uint64_t v4 = [v3 displayOptions];

  return (GEOURLOptions *)v4;
}

void sub_100D372A8(uint64_t a1)
{
  uint64_t v2 = sub_1000A930C();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 138412546;
    uint64_t v6 = v3;
    __int16 v7 = 2112;
    uint64_t v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "(tag %@) %@", (uint8_t *)&v5, 0x16u);
  }
}

void sub_100D37654(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = sub_100109E50();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 138412290;
      uint64_t v6 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recent: %@", (uint8_t *)&v5, 0xCu);
    }
  }
}

void sub_100D3776C(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (v2)
  {
    uint64_t v3 = sub_100109E50();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 138412290;
      int v5 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error deleting recents: %@", (uint8_t *)&v4, 0xCu);
    }
  }
}

id sub_100D37F78()
{
  if (qword_101611060 != -1) {
    dispatch_once(&qword_101611060, &stru_1013229A0);
  }
  uint64_t v0 = (void *)qword_101611058;

  return v0;
}

void sub_100D382CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained stateManager];
  uint64_t v3 = v2;
  if (v1 > 1) {
    [v2 resetStateEnteredThrottleEvent:0];
  }
  else {
    [v2 recordStateEnteredThrottleEvent:0];
  }
}

void sub_100D38340(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionTrackingStateMonitor");
  uint64_t v2 = (void *)qword_101611058;
  qword_101611058 = (uint64_t)v1;
}

id sub_100D39430(uint64_t a1)
{
  id v2 = *(id *)(a1 + 40);
  [v2 lookAroundViewHeading];
  double v4 = v3;
  int v5 = [v2 mapView];

  [v5 presentationYaw];
  double v7 = (v4 - v6) * 0.0174532925;

  [*(id *)(*(void *)(a1 + 32) + 32) setHeading:v7];
  [*(id *)(*(void *)(a1 + 32) + 32) setState:2];
  uint64_t v8 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v8 updateSubviewsIfNeededAnimated:1];
}

id sub_100D395F8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) setState:1];
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(v2 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100D39694;
  _OWORD v5[3] = &unk_1012E7D28;
  void v5[4] = v2;
  return [v3 updateSubviewsIfNeededAnimated:1 completion:v5];
}

id sub_100D39694(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 32) setState:0];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 32);

  return [v2 updateSubviewsIfNeededAnimated:1];
}

id sub_100D3A02C()
{
  if (qword_101611070 != -1) {
    dispatch_once(&qword_101611070, &stru_101322A28);
  }
  uint64_t v0 = (void *)qword_101611068;

  return v0;
}

void sub_100D3A404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D3A430(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 stationary];
  double v4 = sub_100D3A02C();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG);
  if (v3)
  {
    if (v5)
    {
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      int v10 = 134349056;
      id v11 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}p] Detected device is stationary", (uint8_t *)&v10, 0xCu);
    }
    id v7 = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v8 = [v7 stateManager];
    [v8 recordStateEnteredThrottleEvent:1];
  }
  else
  {
    if (v5)
    {
      id v9 = objc_loadWeakRetained((id *)(a1 + 32));
      int v10 = 134349056;
      id v11 = v9;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[%{public}p] Detected device is not stationary", (uint8_t *)&v10, 0xCu);
    }
    id v7 = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v8 = [v7 stateManager];
    [v8 resetStateEnteredThrottleEvent:1];
  }
}

void sub_100D3A624(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "VIOSessionDeviceMotionMonitor");
  uint64_t v2 = (void *)qword_101611068;
  qword_101611068 = (uint64_t)v1;
}

id sub_100D3AECC()
{
  if (qword_101611080 != -1) {
    dispatch_once(&qword_101611080, &stru_101322A48);
  }
  uint64_t v0 = (void *)qword_101611078;

  return v0;
}

void sub_100D3BC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
}

void sub_100D3BCB0(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100D3AECC();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v8 = 134349056;
    id v9 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Close button tapped; dismissing",
      (uint8_t *)&v8,
      0xCu);
  }
  +[GEOAPPortal captureUserAction:127 target:15 value:0];
  id v6 = objc_loadWeakRetained((id *)(a1 + 32));
  id v7 = [v3 sender];

  [v6 handleDismissAction:v7];
}

void sub_100D3C6C4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARRaiseToEnterTeachableMomentContaineeViewController");
  uint64_t v2 = (void *)qword_101611078;
  qword_101611078 = (uint64_t)v1;
}

void sub_100D3D7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D3D7E0(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if ([v7 isBlockingIncident])
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
    *a4 = 1;
  }
}

id sub_100D40834(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = &OBJC_IVAR___RoutePlanningTimingViewController__constraintsHidingArriveBy;
  if (*(unsigned char *)(v2 + 184))
  {
    id v3 = &OBJC_IVAR___RoutePlanningTimingViewController__constraintsShowingArriveBy;
    [*(id *)(v2 + 136) setHidden:0];
    double v4 = &OBJC_IVAR___RoutePlanningTimingViewController__constraintsHidingArriveBy;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  else
  {
    double v4 = &OBJC_IVAR___RoutePlanningTimingViewController__constraintsShowingArriveBy;
  }
  +[NSLayoutConstraint deactivateConstraints:*(void *)(v2 + *v4)];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + *v3);

  return +[NSLayoutConstraint activateConstraints:v5];
}

void *sub_100D408D8(void *result)
{
  uint64_t v1 = result[4];
  if (!*(unsigned char *)(v1 + 184)) {
    return [*(id *)(v1 + 136) setHidden:1];
  }
  return result;
}

void sub_100D40904(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

void sub_100D419BC(id a1)
{
  uint64_t v1 = objc_alloc_init(NavigationCameraSnapshotManager);
  uint64_t v2 = (void *)qword_1016110A0;
  qword_1016110A0 = (uint64_t)v1;
}

void sub_100D41DFC(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  int v8 = [v5 _cameraSnapshotComparator];
  id v10 = [v6 sortedArrayWithOptions:17 usingComparator:v8];

  id v9 = [v10 mutableCopy];
  [*(id *)(*(void *)(a1 + 32) + 16) setObject:v9 forKeyedSubscript:v7];
}

void sub_100D422E4(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if ([v5 count])
  {
    [*(id *)(a1 + 32) addObject:v8];
    id v6 = *(void **)(a1 + 40);
    id v7 = +[NSArray arrayWithArray:v5];
    [v6 addObject:v7];
  }
}

int64_t sub_100D4238C(id a1, NavigationCameraSnapshot *a2, NavigationCameraSnapshot *a3)
{
  double v4 = a2;
  id v5 = a3;
  [(NavigationCameraSnapshot *)v4 tracePlaybackTimeFraction];
  double v7 = v6;
  [(NavigationCameraSnapshot *)v5 tracePlaybackTimeFraction];
  if (v7 >= v8)
  {
    [(NavigationCameraSnapshot *)v4 tracePlaybackTimeFraction];
    double v11 = v10;
    [(NavigationCameraSnapshot *)v5 tracePlaybackTimeFraction];
    int64_t v9 = v11 != v12;
  }
  else
  {
    int64_t v9 = -1;
  }

  return v9;
}

void sub_100D4262C(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = (void *)*((void *)a1[4] + 2);
    if (!v3)
    {
      uint64_t v4 = [a1[4] _dummyVehicles];
      id v5 = a1[4];
      double v6 = (void *)v5[2];
      v5[2] = v4;

      id v3 = (void *)*((void *)a1[4] + 2);
    }
    id v7 = [v3 copy];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_100D4277C;
    void v13[3] = &unk_1012E5F78;
    id v8 = a1[5];
    id v14 = v7;
    id v15 = v8;
    id v9 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v13);
  }
  else
  {
    double v10 = (void (**)(id, void, void *))a1[5];
    double v11 = GEOErrorDomain();
    double v12 = +[NSError errorWithDomain:v11 code:-8 userInfo:0];
    v10[2](v10, 0, v12);
  }
}

uint64_t sub_100D4277C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0);
}

void sub_100D42B8C(void *a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (a3 == 1)
  {
    id v40 = v5;
    id v34 = objc_alloc((Class)VGVehicleState);
    uint64_t v36 = [v40 identifier];
    uint64_t v23 = a1[4];
    id v24 = objc_alloc((Class)NSMeasurement);
    long long v39 = +[NSUnitLength meters];
    id v8 = [v24 initWithDoubleValue:75000.0];
    id v25 = objc_alloc((Class)NSMeasurement);
    long long v38 = +[NSUnitLength meters];
    id v10 = [v25 initWithDoubleValue:v38 unit:500000.0];
    id v26 = objc_alloc((Class)NSMeasurement);
    long long v37 = +[NSUnitEnergy kilowattHours];
    id v12 = [v26 initWithDoubleValue:0.0 unit:];
    id v27 = objc_alloc((Class)NSMeasurement);
    [&off_1013AF628 doubleValue];
    double v29 = v28 * 100.0;
    long long v16 = +[NSUnitEnergy kilowattHours];
    id v17 = [v27 initWithDoubleValue:v16 unit:v29];
    id v30 = objc_alloc((Class)NSMeasurement);
    uint64_t v19 = (void *)v36;
    BOOL v20 = +[NSUnitEnergy kilowattHours];
    id v21 = [v30 initWithDoubleValue:v20 unit:66.0];
    LOBYTE(v32) = 0;
    id v22 = [v34 initWithIdentifier:v36 dateOfUpdate:v23 origin:0 batteryPercentage:&off_1013AF628 currentEVRange:v8 maxEVRange:v10 minBatteryCapacity:v12 currentBatteryCapacity:v17 maxBatteryCapacity:v21 consumptionArguments:a1[5] chargingArguments:a1[6] isCharging:v32 activeConnector:2];
  }
  else
  {
    if (a3) {
      goto LABEL_6;
    }
    id v40 = v5;
    id v33 = objc_alloc((Class)VGVehicleState);
    uint64_t v35 = [v40 identifier];
    uint64_t v6 = a1[4];
    id v7 = objc_alloc((Class)NSMeasurement);
    long long v39 = +[NSUnitLength meters];
    id v8 = [v7 initWithDoubleValue:250000.0];
    id v9 = objc_alloc((Class)NSMeasurement);
    long long v38 = +[NSUnitLength meters];
    id v10 = [v9 initWithDoubleValue:500000.0 unit:];
    id v11 = objc_alloc((Class)NSMeasurement);
    long long v37 = +[NSUnitEnergy kilowattHours];
    id v12 = [v11 initWithDoubleValue:0.0 unit:nil];
    id v13 = objc_alloc((Class)NSMeasurement);
    [&off_1013AF618 doubleValue];
    double v15 = v14 * 100.0;
    long long v16 = +[NSUnitEnergy kilowattHours];
    id v17 = [v13 initWithDoubleValue:v16 unit:v15];
    id v18 = objc_alloc((Class)NSMeasurement);
    uint64_t v19 = (void *)v35;
    BOOL v20 = +[NSUnitEnergy kilowattHours];
    id v21 = [v18 initWithDoubleValue:v20 unit:66.0];
    LOBYTE(v32) = 0;
    id v22 = [v33 initWithIdentifier:v35 dateOfUpdate:v6 origin:0 batteryPercentage:&off_1013AF618 currentEVRange:v8 maxEVRange:v10 minBatteryCapacity:v12 currentBatteryCapacity:v17 maxBatteryCapacity:v21 consumptionArguments:a1[5] chargingArguments:a1[6] isCharging:v32 activeConnector:2];
  }
  __int16 v31 = v22;

  [v40 _setVehicleState:v31];
  id v5 = v40;
LABEL_6:
}

void sub_100D43098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D430B0(void *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(a1[4] + 16);
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    while (2)
    {
      for (unint64_t i = 0; i != v4; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v10 + 1) + 8 * i);
        id v8 = [v7 identifier:v10];
        unsigned int v9 = [v8 isEqualToString:a1[5]];

        if (v9)
        {
          objc_storeStrong((id *)(*(void *)(a1[6] + 8) + 40), v7);
          goto LABEL_11;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_11:
}

void sub_100D432F0(id a1)
{
  id v6 = +[MSPMapsPaths pathsAtLocation:0];
  uint64_t v1 = [MSPHistoryRAPDirectionsRecordingStorage alloc];
  id v2 = [v6 reportAProblemDirectionsRecordingsPath];
  id v3 = +[NSURL fileURLWithPath:v2];
  id v4 = [(MSPHistoryRAPStorage *)v1 initWithStorageDirectoryURL:v3];
  uint64_t v5 = (void *)qword_1016110B0;
  qword_1016110B0 = (uint64_t)v4;
}

void sub_100D433FC(id a1)
{
  id v6 = +[MSPMapsPaths pathsAtLocation:0];
  uint64_t v1 = [MSPHistoryRAPSearchRecordingStorage alloc];
  id v2 = [v6 reportAProblemSearchRecordingsPath];
  id v3 = +[NSURL fileURLWithPath:v2];
  id v4 = [(MSPHistoryRAPStorage *)v1 initWithStorageDirectoryURL:v3];
  uint64_t v5 = (void *)qword_1016110C0;
  qword_1016110C0 = (uint64_t)v4;
}

void sub_100D4363C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D43650(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc_init((Class)NSMutableArray);
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      unsigned int v9 = 0;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        long long v10 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v9) storageIdentifier];
        if (v10) {
          [v4 addObject:v10];
        }

        unsigned int v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }

  id v11 = [v4 copy];
  [*(id *)(a1 + 32) historyContainerPerformMaintenanceForValidIdentifiers:v11 completion:&stru_101322C30];
}

uint64_t sub_100D43888(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) containsObject:a2] ^ 1;
}

void sub_100D43ADC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_msgSend(objc_alloc((Class)NSMutableDictionary), "initWithCapacity:", objc_msgSend(v3, "count"));
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v32;
    do
    {
      for (unint64_t i = 0; i != v7; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v8) {
          objc_enumerationMutation(v5);
        }
        long long v10 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        id v11 = [v10 identifier];

        if (v11)
        {
          long long v12 = [v10 identifier];
          [v4 setObject:v10 forKey:v12];
        }
      }
      id v7 = [v5 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v7);
  }
  id v24 = v5;

  id v26 = objc_alloc_init((Class)NSMutableArray);
  id v25 = objc_alloc_init((Class)NSMutableDictionary);
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v13 = *(id *)(a1 + 32);
  id v14 = [v13 countByEnumeratingWithState:&v27 objects:v35 count:16];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = *(void *)v28;
    do
    {
      for (j = 0; j != v15; j = (char *)j + 1)
      {
        if (*(void *)v28 != v16) {
          objc_enumerationMutation(v13);
        }
        uint64_t v18 = *(void *)(*((void *)&v27 + 1) + 8 * (void)j);
        uint64_t v19 = [v4 objectForKey:v18];
        if (v19)
        {
          BOOL v20 = [*(id *)(a1 + 40) underlyingStorage];
          id v21 = [v20 dataForItemWithIdentifier:v18 error:0];

          if (v21)
          {
            id v22 = objc_msgSend(objc_alloc((Class)objc_msgSend((id)objc_opt_class(), "recordingClass")), "initWithData:", v21);
            if (v22)
            {
              uint64_t v23 = v22;
              [v25 setObject:v22 forKey:v18];
              [v26 addObject:v19];
            }
          }
        }
      }
      id v15 = [v13 countByEnumeratingWithState:&v27 objects:v35 count:16];
    }
    while (v15);
  }

  (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
}

id sub_100D43EEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) saveRecording:*(void *)(a1 + 40) forHistoryEntryWithStorageIdentifier:*(void *)(a1 + 48) completion:0];
}

uint64_t sub_100D43FF8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D45064(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    *((_DWORD *)WeakRetained + 49) = *(_DWORD *)(a1 + 40);
    *((unsigned char *)WeakRetained + 192) = 0;
    [WeakRetained _sendMapsSuggestionsSignals];
  }
  else
  {
    GEOFindOrCreateLog();
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      int v5 = 136446722;
      id v6 = "CarDisplayController.m";
      __int16 v7 = 1026;
      int v8 = 424;
      __int16 v9 = 2082;
      long long v10 = "-[CarDisplayController updateMapsSuggestionsSignalForMapType:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v5, 0x1Cu);
    }
  }
}

void sub_100D452B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_100015DB4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      id v4 = *(char **)(a1 + 32);
      int v5 = [WeakRetained carSessionStatus];
      id v6 = [v5 currentSession];
      int v8 = 138412546;
      __int16 v9 = v4;
      __int16 v10 = 2048;
      v11[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "carSession didConnect: %@, currentSession: %p", (uint8_t *)&v8, 0x16u);
    }
    [WeakRetained _setupClusterSuggestionControllerIfNeeded];
  }
  else
  {
    GEOFindOrCreateLog();
    __int16 v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      __int16 v9 = "CarDisplayController.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 437;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[CarDisplayController sessionDidConnect:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

void sub_100D45458(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[192] = 1;
    [WeakRetained _sendMapsSuggestionsSignals];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      int v5 = "CarDisplayController.m";
      __int16 v6 = 1026;
      int v7 = 443;
      __int16 v8 = 2082;
      __int16 v9 = "-[CarDisplayController sessionDidConnect:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

void sub_100D456A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = sub_100015DB4();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      int v4 = *(char **)(a1 + 32);
      int v5 = [WeakRetained carSessionStatus];
      __int16 v6 = [v5 currentSession];
      int v8 = 138412546;
      __int16 v9 = v4;
      __int16 v10 = 2048;
      v11[0] = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "carSession didDisconnect: %@, currentSession: %p", (uint8_t *)&v8, 0x16u);
    }
    [WeakRetained _tearDownClusterSuggestionController];
  }
  else
  {
    GEOFindOrCreateLog();
    int v7 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v8 = 136446722;
      __int16 v9 = "CarDisplayController.m";
      __int16 v10 = 1026;
      LODWORD(v11[0]) = 453;
      WORD2(v11[0]) = 2082;
      *(void *)((char *)v11 + 6) = "-[CarDisplayController sessionDidDisconnect:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v8, 0x1Cu);
    }
  }
}

void sub_100D45844(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[192] = 0;
    [WeakRetained _sendMapsSuggestionsSignals];
    [v2 _tearDownMapsSuggestionsController];
  }
  else
  {
    GEOFindOrCreateLog();
    id v3 = (id)objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      int v4 = 136446722;
      int v5 = "CarDisplayController.m";
      __int16 v6 = 1026;
      int v7 = 459;
      __int16 v8 = 2082;
      __int16 v9 = "-[CarDisplayController sessionDidDisconnect:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%{public}s:%{public}d: strongSelf went away in %{public}s", (uint8_t *)&v4, 0x1Cu);
    }
  }
}

id sub_100D461C4(uint64_t a1)
{
  id v1 = *(id *)(a1 + 32);
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v2 = v1;
  }
  else {
    id v2 = 0;
  }
  id v3 = v2;

  if (v3)
  {
    if ([v3 isCarNavigationCompatible])
    {
      int v4 = objc_alloc_init(CarNavigationModeController);
      __int16 v10 = v4;
      int v5 = &v10;
    }
    else
    {
      int v4 = (CarNavigationModeController *)objc_opt_new();
      __int16 v9 = v4;
      int v5 = &v9;
    }
  }
  else
  {
    int v4 = (CarNavigationModeController *)objc_opt_new();
    __int16 v8 = v4;
    int v5 = &v8;
  }
  __int16 v6 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v5, 1, v8, v9, v10);

  return v6;
}

void sub_100D46A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D46A88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = sub_100015DB4();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = *(void *)(a1 + 40);
    int v6 = 134217984;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Reactivating Chrome after %#.1lfs delay", (uint8_t *)&v6, 0xCu);
  }

  int v5 = (void *)WeakRetained[4];
  WeakRetained[4] = 0;
}

id sub_100D47B98(uint64_t a1)
{
  id v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Invalidating idle timeout assertion %p", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 32) invalidate];
}

void sub_100D488CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D48A14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D48CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D48CD8(uint64_t a1)
{
  id v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Running deferred screen update operation...", v4, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateForCurrentScreen];
}

void sub_100D4A410(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) screen];
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = [*(id *)(a1 + 32) chromeViewController];
    if (v4)
    {
      int v5 = (void *)v4;
      uint64_t v6 = [*(id *)(a1 + 32) chromeViewController];
      unsigned int v7 = [v6 isSuppressed];

      if (!v7)
      {
        id v8 = [*(id *)(a1 + 40) canReceiveEvents];
        id v19 = [*(id *)(a1 + 32) chromeViewController];
        [v19 setOwnsFocus:v8];

        return;
      }
    }
    else
    {
    }
  }
  __int16 v9 = sub_100015DB4();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v10 = [*(id *)(a1 + 32) screen];
    if (v10) {
      id v11 = @"YES";
    }
    else {
      id v11 = @"NO";
    }
    long long v12 = v11;
    id v13 = [*(id *)(a1 + 32) chromeViewController];
    if (v13) {
      id v14 = @"YES";
    }
    else {
      id v14 = @"NO";
    }
    id v15 = v14;
    uint64_t v16 = [*(id *)(a1 + 32) chromeViewController];
    if ([v16 isSuppressed]) {
      id v17 = @"YES";
    }
    else {
      id v17 = @"NO";
    }
    uint64_t v18 = v17;
    *(_DWORD *)long long buf = 138412802;
    id v21 = v12;
    __int16 v22 = 2112;
    uint64_t v23 = v15;
    __int16 v24 = 2112;
    id v25 = v18;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Will not act on focus deferral change, (screen:%@, chrome:%@ (suppressed? %@)", buf, 0x20u);
  }
}

id sub_100D4B644(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  int v5 = [v3 domain];
  uint64_t v6 = [v3 userInfo];
  uint64_t v7 = [v6 objectForKeyedSubscript:NSLocalizedDescriptionKey];
  uint64_t v8 = [v6 objectForKeyedSubscript:NSLocalizedFailureReasonErrorKey];
  if (![(id)v7 length] && !objc_msgSend((id)v8, "length"))
  {
    if (([v5 isEqualToString:kCLErrorDomain] & 1) != 0
      || [v5 isEqualToString:MKLocationErrorDomain])
    {
      id v50 = v4;
      __int16 v9 = +[MKLocationManager sharedLocationManager];
      id v56 = 0;
      unsigned int v10 = [v9 isLocationServicesPossiblyAvailable:&v56];
      id v11 = v56;

      if (v10)
      {
        long long v12 = +[NSBundle mainBundle];
        uint64_t v13 = [v12 localizedStringForKey:@"Current Location Not Available" value:@"localized string not found" table:0];

        id v14 = +[NSBundle mainBundle];
        [v14 localizedStringForKey:@"Your current location cannot be determined at this time." value:@"localized string not found" table:0];
      }
      else
      {
        id v15 = [v11 userInfo];
        uint64_t v13 = [v15 objectForKeyedSubscript:NSLocalizedDescriptionKey];

        id v14 = [v11 userInfo];
        [v14 objectForKeyedSubscript:NSLocalizedRecoverySuggestionErrorKey];
      uint64_t v16 = };
      uint64_t v7 = v13;

      uint64_t v8 = v16;
      id v4 = v50;
    }
    else
    {
      uint64_t v41 = GEOErrorDomain();
      unsigned int v42 = [v5 isEqualToString:v41];

      if (v42)
      {
        uint64_t v43 = +[NSBundle mainBundle];
        uint64_t v44 = [v43 localizedStringForKey:@"CARPLAY ERROR No search results title" value:@"localized string not found" table:0];

        id v45 = +[NSBundle mainBundle];
        uint64_t v46 = [v45 localizedStringForKey:@"CARPLAY ERROR No search results message" value:@"localized string not found" table:0];

        uint64_t v8 = v46;
        uint64_t v7 = v44;
      }
      else
      {
        uint64_t v47 = CarDisplayDirectionsNotAvailableErrorTitle();

        float v48 = +[NSBundle mainBundle];
        uint64_t v49 = [v48 localizedStringForKey:@"Route information is not available at this moment." value:@"localized string not found" table:0];

        uint64_t v8 = v49;
        uint64_t v7 = v47;
      }
    }
  }
  if (([v5 isEqualToString:kCFErrorDomainCFNetwork] & 1) != 0
    || [v5 isEqualToString:NSURLErrorDomain])
  {
    if ([v3 code] == (id)-1009) {
      +[GEOAPPortal captureUserAction:17071 target:0 value:0];
    }
    if ([v3 code] == (id)-1017)
    {
      uint64_t v17 = CarDisplayDirectionsNotAvailableErrorTitle();

      uint64_t v18 = +[NSBundle mainBundle];
      uint64_t v19 = [v18 localizedStringForKey:@"Route information is not available at this moment." value:@"localized string not found" table:0];

      uint64_t v8 = v19;
      uint64_t v7 = v17;
    }
  }
  if (!v3)
  {
    __int16 v24 = 0;
    goto LABEL_38;
  }
  id v20 = +[GEOPlatform sharedPlatform];
  if (![v20 isInternalInstall])
  {
    __int16 v24 = 0;
LABEL_27:

    goto LABEL_28;
  }
  id v21 = v4;
  __int16 v22 = [v3 domain];
  if (![v22 isEqualToString:@"com.apple.Maps.externaldevice"])
  {
    __int16 v24 = 0;
LABEL_26:

    id v4 = v21;
    goto LABEL_27;
  }
  id v23 = [v3 code];

  if (v23 == (id)1)
  {
    id v4 = v21;
    __int16 v24 = [v21 objectForKeyedSubscript:@"CarDisplayHandoffDestination"];
    if (!v24)
    {
      id v20 = 0;
      goto LABEL_27;
    }
    CFStringRef v25 = &stru_101324E70;
    if (v8) {
      CFStringRef v25 = (const __CFString *)v8;
    }
    uint64_t v51 = +[NSString stringWithFormat:@"%@\n\n[Internal] Tap Debug to share payload from iPhone.", v25];

    id v26 = +[MapsInterruptionAction actionWithTitle:@"Cancel" cancels:1 handler:0];
    v57[0] = v26;
    v54[0] = _NSConcreteStackBlock;
    v54[1] = 3221225472;
    v54[2] = sub_100D50690;
    v54[3] = &unk_1012E5D08;
    id v20 = v24;
    id v55 = v20;
    long long v27 = +[MapsInterruptionAction actionWithTitle:@"Debug" cancels:0 handler:v54];
    v57[1] = v27;
    __int16 v24 = +[NSArray arrayWithObjects:v57 count:2];

    __int16 v22 = v55;
    uint64_t v8 = v51;
    goto LABEL_26;
  }
  __int16 v24 = 0;
  id v4 = v21;
LABEL_28:
  long long v28 = +[GEOPlatform sharedPlatform];
  if ([v28 isInternalInstall])
  {
    int BOOL = GEOConfigGetBOOL();

    if (!BOOL) {
      goto LABEL_38;
    }
    id v52 = v4;
    long long v30 = [v3 userInfo];
    long long v28 = [v30 objectForKeyedSubscript:MKErrorDirectionsErrorInfoKey];

    long long v31 = [v28 internalServerErrors];
    id v32 = [v31 count];

    if (v32)
    {
      long long v33 = [v28 internalServerErrors];
      long long v34 = [v33 firstObject];
      uint64_t v35 = +[NSString stringWithFormat:@"[Internal Only] %@", v34];

      if (v8)
      {
        uint64_t v36 = [(id)v8 stringByAppendingFormat:@"\n\n%@", v35];

        uint64_t v8 = v36;
      }
      else
      {
        uint64_t v8 = v35;
      }
      id v4 = v52;
    }
    else
    {
      id v4 = v52;
    }
  }

LABEL_38:
  if (v7 | v8)
  {
    long long v37 = +[NSMutableDictionary dictionaryWithCapacity:3];
    long long v38 = v37;
    if (v7) {
      [v37 setObject:v7 forKeyedSubscript:@"kMapsInterruptionTitle"];
    }
    if (v8) {
      [v38 setObject:v8 forKeyedSubscript:@"kMapsInterruptionMessage"];
    }
    if (v24) {
      [v38 setObject:v24 forKeyedSubscript:@"kMapsInterruptionActions"];
    }
    id v39 = [v38 copy];
  }
  else
  {
    long long v38 = sub_100015DB4();
    if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "Asked to create user info for error with no title or message. Bailing.", buf, 2u);
    }
    id v39 = 0;
  }

  return v39;
}

void sub_100D4C264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D4C28C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = sub_100015DB4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "External Device did request repeat current guidance", v3, 2u);
    }

    [WeakRetained _repeatGuidanceForExternalDevice];
  }
}

void sub_100D4CAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D4CAE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) chromeViewController];
  id v3 = [v2 contexts];
  id v4 = [v3 indexOfObjectPassingTest:&stru_101322CD0];

  if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    int v5 = [*(id *)(a1 + 32) chromeViewController];
    uint64_t v6 = [v5 contexts];
    id v8 = [v6 objectAtIndexedSubscript:v4];

    uint64_t v7 = [*(id *)(a1 + 32) chromeViewController];
    [v7 popToContext:v8 animated:1 completion:0];
  }
}

BOOL sub_100D4CBD8(id a1, ChromeContext *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

void sub_100D4CC24(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained mapsSuggestionsController];
  [v1 hintRefreshOfType:11];
}

void sub_100D4D1CC(uint64_t a1, uint64_t a2)
{
  id v4 = sub_100015DB4();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Notified interruption was dismissed (key:%@)", (uint8_t *)&v7, 0xCu);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _removeQueuedInterruptionWithKey:*(void *)(a1 + 32) animated:a2];
}

void sub_100D4D544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
}

void sub_100D4D570(uint64_t a1)
{
  if (*(void *)(a1 + 48))
  {
    uint64_t v2 = sub_100015DB4();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 184);
      int v5 = 138412290;
      uint64_t v6 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Queued interruption handler fired (key:%@)", (uint8_t *)&v5, 0xCu);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained _removeQueuedInterruptionWithKey:*(void *)(a1 + 40)];
}

void sub_100D4D854(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_1016110D8 = [v1 BOOLForKey:@"StarkLaunchPerformanceDebug"];

  uint64_t v2 = sub_100015DB4();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    if (byte_1016110D8) {
      uint64_t v3 = @"YES";
    }
    else {
      uint64_t v3 = @"NO";
    }
    id v4 = v3;
    int v9 = 138412290;
    uint64_t v10 = (uint64_t)v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Debug launch performance: %@", (uint8_t *)&v9, 0xCu);
  }
  int v5 = +[NSUserDefaults standardUserDefaults];
  [v5 doubleForKey:@"StarkLaunchPerformanceDelayDebug"];
  double v7 = v6;

  if (v7 > 0.0)
  {
    uint64_t v8 = sub_100015DB4();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      int v9 = 134217984;
      uint64_t v10 = qword_1015F7A60;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Launch delay set to %lf seconds", (uint8_t *)&v9, 0xCu);
    }

    qword_1015F7A60 = *(void *)&v7;
  }
}

void sub_100D4DBC4(uint64_t a1)
{
  uint64_t v65 = +[NSMutableArray array];
  uint64_t v66 = a1;
  uint64_t v64 = [*(id *)(a1 + 32) connectedCarScreenInfos];
  uint64_t v2 = [v64 keyEnumerator];
  uint64_t v3 = [v2 allObjects];
  id v4 = [v3 sortedArrayUsingComparator:&stru_101322D38];

  int v5 = +[UIApplication sharedApplication];
  double v6 = [v5 connectedScenes];
  double v7 = sub_1000AC254(v6, &stru_101322D58);
  id v63 = sub_1004E032C(v7, &stru_101322D78);

  long long v70 = 0u;
  long long v71 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  id obj = v4;
  id v8 = [obj countByEnumeratingWithState:&v68 objects:v72 count:16];
  if (v8)
  {
    id v9 = v8;
    uint64_t v62 = *(void *)v69;
    do
    {
      for (unint64_t i = 0; i != v9; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v69 != v62) {
          objc_enumerationMutation(obj);
        }
        id v11 = *(void **)(*((void *)&v68 + 1) + 8 * i);
        long long v12 = [v64 objectForKey:v11];
        v67[0] = _NSConcreteStackBlock;
        v67[1] = 3221225472;
        v67[2] = sub_100D4E6D0;
        v67[3] = &unk_10131DE50;
        v67[4] = v11;
        uint64_t v13 = sub_1000990A8(v63, v67);
        id v14 = [v13 screen];
        uint64_t v15 = objc_opt_class();
        uint64_t v16 = [v11 identifier];
        uint64_t v17 = +[NSString stringWithFormat:@"%@.screenInfo.%@.txt", v15, v16];

        uint64_t v18 = [v13 _car_debugDescription];
        uint64_t v19 = [v14 _car_debugDescription];
        id v20 = +[NSString stringWithFormat:@"CARScreenInfo:%@\nGEOCarInfo:%@\nUIWindow:%@\n%@\nUIScreen:%@\n%@\n", v11, v12, v13, v18, v14, v19];

        id v21 = +[MapsRadarTextAttachment attachmentWithFileName:v17 text:v20];
        [v65 addObject:v21];
      }
      id v9 = [obj countByEnumeratingWithState:&v68 objects:v72 count:16];
    }
    while (v9);
  }

  __int16 v22 = +[NSMutableString string];
  if (GEOConfigGetBOOL()) {
    CFStringRef v23 = @"YES";
  }
  else {
    CFStringRef v23 = @"NO";
  }
  [v22 appendFormat:@"HybridInstrumentClusterEnabled:%@\n", v23];
  if (GEOConfigGetBOOL()) {
    CFStringRef v24 = @"YES";
  }
  else {
    CFStringRef v24 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterEverywhere:%@\n", v24];
  if (GEOConfigGetBOOL()) {
    CFStringRef v25 = @"YES";
  }
  else {
    CFStringRef v25 = @"NO";
  }
  [v22 appendFormat:@"HybridInstrumentClusterDynamicScalingEnabled:%@\n", v25];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPixelWidth:%f\n", v26];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPixelHeight:%f\n" v27];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPhysicalWidth:%f\n" v28];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineScreenPhysicalHeight:%f\n", v29];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineManeuverPixelWidth:%f\n", v30];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineManeuverPixelHeight:%f\n", v31];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterDynamicScaleBaselineContentScale:%f\n", v32];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterScreenPhysicalSizeDebugWidthOverride:%f\n" v33];
  GEOConfigGetDouble();
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterScreenPhysicalSizeDebugHeightOverride:%f\n", v34];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterDynamicPointScaleValueOverride:%f\n" v35];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterDynamicPixelScaleValueOverride:%f\n" v36];
  if (GEOConfigGetBOOL()) {
    CFStringRef v37 = @"YES";
  }
  else {
    CFStringRef v37 = @"NO";
  }
  [v22 appendFormat:@"HybridInstrumentClusterGuidanceCardEnabled:%@\n", v37];
  if (GEOConfigGetBOOL()) {
    CFStringRef v38 = @"YES";
  }
  else {
    CFStringRef v38 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterHideSecondaryGuidance:%@\n", v38];
  if (GEOConfigGetBOOL()) {
    CFStringRef v39 = @"YES";
  }
  else {
    CFStringRef v39 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterGuidanceCardVisibleOverviewNarrow:%@\n", v39];
  if (GEOConfigGetBOOL()) {
    CFStringRef v40 = @"YES";
  }
  else {
    CFStringRef v40 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterGuidanceCardVisibleDetailNarrow:%@\n", v40];
  if (GEOConfigGetBOOL()) {
    CFStringRef v41 = @"YES";
  }
  else {
    CFStringRef v41 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterETATrayVisibleOverviewNarrow:%@\n", v41];
  if (GEOConfigGetBOOL()) {
    CFStringRef v42 = @"YES";
  }
  else {
    CFStringRef v42 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterETATrayVisibleDetailNarrow:%@\n", v42];
  if (GEOConfigGetBOOL()) {
    CFStringRef v43 = @"YES";
  }
  else {
    CFStringRef v43 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterGuidanceCardVisibleOverviewWide:%@\n", v43];
  if (GEOConfigGetBOOL()) {
    CFStringRef v44 = @"YES";
  }
  else {
    CFStringRef v44 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterGuidanceCardVisibleDetailWide:%@\n", v44];
  if (GEOConfigGetBOOL()) {
    CFStringRef v45 = @"YES";
  }
  else {
    CFStringRef v45 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterETATrayVisibleOverviewWide:%@\n", v45];
  if (GEOConfigGetBOOL()) {
    CFStringRef v46 = @"YES";
  }
  else {
    CFStringRef v46 = @"NO";
  }
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterETATrayVisibleDetailWide:%@\n", v46];
  if (GEOConfigGetBOOL()) {
    CFStringRef v47 = @"YES";
  }
  else {
    CFStringRef v47 = @"NO";
  }
  [v22 appendFormat:@"HybridInstrumentClusterFlexibleUIEnabled:%@\n", v47];
  [v22 appendFormat:@"HybridInstrumentClusterDynamicPixelScaleValueOverride:%ld\n", GEOConfigGetInteger()];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterFlexibleUIETATrayVisibilityRequirementRatio:%f\n" v48];
  [v22 appendFormat:@"HybridInstrumentClusterAlignmentStyleOverride:%ld\n", GEOConfigGetInteger()];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterAlignmentStyleManeuverScaledWidthMultiple:%f\n", v49];
  if (GEOConfigGetBOOL()) {
    CFStringRef v50 = @"YES";
  }
  else {
    CFStringRef v50 = @"NO";
  }
  [v22 appendFormat:@"HybridInstrumentClusterCardAlignmentEnabled:%@\n", v50];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterNarrowAlignmentStyleCardMaxWidth:%f\n", v51];
  GEOConfigGetDouble();
  [v22 appendFormat:@"HybridInstrumentClusterFlexibleMapInsetCenteringScaledManeuverWidthMultipleRequirement:%f\n", v52];
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterAlignmentOverride:%ld\n", GEOConfigGetInteger()];
  [v22 appendFormat:@"CarPlayDefaultCenterConsoleCameraStyle:%ld\n", GEOConfigGetInteger()];
  [v22 appendFormat:@"CarPlayDefaultHybridInstrumentClusterCameraStyle:%ld\n", GEOConfigGetInteger()];
  Uuint64_t Integer = GEOConfigGetUInteger();
  id v54 = sub_100C4CC40(UInteger);
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterShowHeadingIndicatorOverride:%@\n", v54];

  uint64_t v55 = GEOConfigGetUInteger();
  id v56 = sub_100C4CC40(v55);
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterShowSpeedLimitOverride:%@\n", v56];

  uint64_t v57 = GEOConfigGetUInteger();
  id v58 = sub_100C4CC40(v57);
  [v22 appendFormat:@"CarPlayHybridInstrumentClusterShowETATrayOverride:%@\n", v58];

  __int16 v59 = +[NSString stringWithFormat:@"%@.hybridICConfigs.txt", objc_opt_class()];
  dispatch_time_t v60 = +[MapsRadarTextAttachment attachmentWithFileName:v59 text:v22];
  [v65 addObject:v60];

  [*(id *)(v66 + 40) addAttachments:v65];
  (*(void (**)(void))(*(void *)(v66 + 48) + 16))();
}

int64_t sub_100D4E598(id a1, CARScreenInfo *a2, CARScreenInfo *a3)
{
  id v4 = a3;
  int v5 = [(CARScreenInfo *)a2 identifier];
  double v6 = +[UIScreen _carScreen];
  double v7 = [v6 _displayID];
  unsigned __int8 v8 = [v5 isEqualToString:v7];

  if (v8)
  {
    int64_t v9 = -1;
  }
  else
  {
    uint64_t v10 = [(CARScreenInfo *)v4 identifier];
    id v11 = +[UIScreen _carScreen];
    long long v12 = [v11 _displayID];
    unsigned int v13 = [v10 isEqualToString:v12];

    int64_t v9 = v13;
  }

  return v9;
}

BOOL sub_100D4E67C(id a1, UIScene *a2, unint64_t a3, BOOL *a4)
{
  id v4 = a2;
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  return isKindOfClass & 1;
}

id sub_100D4E6C8(id a1, UIWindowScene *a2, unint64_t a3)
{
  return [(UIWindowScene *)a2 windows];
}

id sub_100D4E6D0(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 screen];
  id v4 = [v3 _displayID];
  int v5 = [*(id *)(a1 + 32) identifier];
  id v6 = [v4 isEqualToString:v5];

  return v6;
}

void sub_100D4F29C(id a1)
{
  id v1 = +[NSNotificationCenter defaultCenter];
  [v1 postNotificationName:@"CarDisplayDidUpdateTraitCollectionNotification" object:0];
}

id sub_100D4FEE8(uint64_t a1)
{
  return [*(id *)(a1 + 40) performSearchForEngineType:*(unsigned int *)(a1 + 48) withObserver:*(void *)(a1 + 32)];
}

void sub_100D4FEF8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  double v7 = [v6 domain];
  unsigned int v8 = [v7 isEqualToString:NSURLErrorDomain];

  if (v8)
  {
    id v9 = +[UIApplication sharedMapsDelegate];
    uint64_t v10 = sub_100D4B644(v6, 0);
    [v9 interruptApplicationWithKind:3 userInfo:v10 completionHandler:0];
  }
  else
  {
    if ([v5 count])
    {
      id v11 = [v5 objectAtIndexedSubscript:0];
      long long v12 = [v11 category];
    }
    else
    {
      long long v12 = 0;
    }
    unsigned int v13 = sub_100015DB4();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
    {
      id v14 = [v5 count];
      uint64_t v15 = [v12 displayString];
      *(_DWORD *)long long buf = 134218242;
      id v23 = v14;
      __int16 v24 = 2112;
      CFStringRef v25 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "categories.count=%lu category=%@", buf, 0x16u);
    }
    uint64_t v16 = *(void **)(a1 + 32);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100D50144;
    v18[3] = &unk_101322DC0;
    id v19 = v12;
    id v20 = v16;
    id v21 = *(id *)(a1 + 40);
    id v9 = v12;
    id v17 = [v20 searchForCategory:v9 source:6 completion:v18];
  }
}

void sub_100D50144(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_opt_new();
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v19 objects:v25 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v20;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v20 != v8) {
          objc_enumerationMutation(v5);
        }
        uint64_t v10 = +[SearchResult carSearchResultFromDestination:](SearchResult, "carSearchResultFromDestination:", *(void *)(*((void *)&v19 + 1) + 8 * (void)v9), (void)v19);
        if (v10) {
          [v4 addObject:v10];
        }

        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v19 objects:v25 count:16];
    }
    while (v7);
  }

  id v11 = sub_100015DB4();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEBUG))
  {
    id v12 = [v4 count];
    *(_DWORD *)long long buf = 134217984;
    id v24 = v12;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "searchResults.count=%lu", buf, 0xCu);
  }

  unsigned int v13 = [[SearchSession alloc] initWithOrigin:1 options:2];
  [(SearchSession *)v13 setShouldBroadcast:0];
  id v14 = objc_alloc_init(SearchFieldItem);
  [(SearchFieldItem *)v14 setSearchCategory:*(void *)(a1 + 32)];
  uint64_t v15 = +[SearchInfo searchInfoWithResults:v4];
  uint64_t v16 = [*(id *)(a1 + 32) displayString];
  [v15 setSearchText:v16];

  [v15 setSelectedIndex:0];
  id v17 = [*(id *)(a1 + 40) traits];
  [v15 setSearchAlongRoute:[v17 navigating]];

  [(SearchSession *)v13 addObserver:*(void *)(a1 + 48)];
  [(SearchSession *)v13 restoreSearchForItem:v14 withResults:v15];
  if (![v4 count])
  {
    uint64_t v18 = +[CarChromeModeCoordinator sharedInstance];
    [v18 displaySearchSession:v13];
  }
}

id sub_100D504D0(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id CarDisplayDirectionsNotAvailableErrorTitle()
{
  uint64_t v0 = +[NSBundle mainBundle];
  id v1 = [v0 localizedStringForKey:@"Directions Not Available [CarPlay]" value:@"localized string not found" table:0];

  return v1;
}

void sub_100D50690(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D50714;
  block[3] = &unk_1012E5D08;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_100D50714(uint64_t a1)
{
  return +[MapsExternalDevice _presentActivityControllerForDestination:*(void *)(a1 + 32) completion:0];
}

id CarInterruptionUserInfoForRoutingFailure(void *a1, double a2, double a3, double a4, double a5)
{
  id v9 = a1;
  uint64_t v10 = v9;
  if (v9 && objc_msgSend(v9, "_mapkit_isDirectionsError"))
  {
    id v11 = 0;
    if (a3 >= -180.0 && a3 <= 180.0 && a2 >= -90.0 && a2 <= 90.0)
    {
      id v11 = 0;
      if (a4 >= 0.0 && a4 <= 180.0 && a5 >= 0.0 && a5 <= 360.0)
      {
        id v12 = +[NSBundle mainBundle];
        unsigned int v13 = [v12 localizedStringForKey:@"Cancel [CarPlay, No Route]", @"localized string not found", 0 value table];
        id v14 = +[MapsInterruptionAction actionWithTitle:v13 cancels:1 handler:&stru_101322DE0];
        v25[0] = v14;
        uint64_t v15 = +[NSBundle mainBundle];
        uint64_t v16 = [v15 localizedStringForKey:@"View Map [CarPlay, No Route]", @"localized string not found", 0 value table];
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 3221225472;
        v24[2] = sub_100D50AAC;
        void v24[3] = &unk_101322E00;
        *(double *)&void v24[4] = a2;
        *(double *)&v24[5] = a3;
        *(double *)&v24[6] = a4;
        *(double *)&v24[7] = a5;
        id v17 = +[MapsInterruptionAction actionWithTitle:v16 cancels:0 handler:v24];
        v25[1] = v17;
        id v11 = +[NSArray arrayWithObjects:v25 count:2];
      }
    }
  }
  else
  {
    id v11 = 0;
  }
  uint64_t v18 = sub_100D4B644(v10, 0);
  id v19 = [v18 mutableCopy];

  long long v20 = [[RoutePlanningError alloc] initWithError:v10 transportType:1];
  long long v21 = [(RoutePlanningError *)v20 errorTitle];
  [v19 setObject:v21 forKeyedSubscript:@"kMapsInterruptionTitle"];

  long long v22 = [(RoutePlanningError *)v20 errorMessage];
  [v19 setObject:v22 forKeyedSubscript:@"kMapsInterruptionMessage"];

  if (v11) {
    [v19 setObject:v11 forKeyedSubscript:@"kMapsInterruptionActions"];
  }

  return v19;
}

void sub_100D50A38(id a1)
{
  id v2 = +[CarDisplayController sharedInstance];
  id v1 = [v2 platformController];
  [v1 clearIfCurrentSessionIsKindOfClass:objc_opt_class()];
}

void sub_100D50AAC(double *a1)
{
  id v2 = +[CarChromeModeCoordinator sharedInstance];
  [v2 displayMapRegion:a1[4], a1[5], a1[6], a1[7]];
}

id CarInterruptionUserInfoForDestinationHandoffFailure(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = v3;
  if (v3)
  {
    CFStringRef v9 = @"CarDisplayHandoffDestination";
    id v10 = v3;
    id v5 = a2;
    id v6 = +[NSDictionary dictionaryWithObjects:&v10 forKeys:&v9 count:1];
    id v7 = sub_100D4B644(v5, v6);
  }
  else
  {
    id v6 = a2;
    id v7 = sub_100D4B644(v6, 0);
  }

  return v7;
}

id CarInterruptionUserInfoWithMSPTransportType(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionaryWithCapacity:2];
  id v3 = +[NSNumber numberWithInteger:a1];
  [v2 setObject:v3 forKeyedSubscript:@"kMapsInterruptionTransportType"];

  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"Show Driving Directions [CarPlay]" value:@"localized string not found" table:0];
  id v6 = +[MapsInterruptionAction actionWithTitle:v5 cancels:0 handler:&stru_101322E20];
  uint64_t v15 = v6;
  id v7 = +[NSArray arrayWithObjects:&v15 count:1];
  [v2 setObject:v7 forKeyedSubscript:@"kMapsInterruptionActions"];

  uint64_t v8 = +[NSBundle mainBundle];
  CFStringRef v9 = [v8 localizedStringForKey:@"Show driving directions title [CarPlay]" value:@"localized string not found" table:0];

  switch(a1)
  {
    case 2:
      id v10 = +[NSBundle mainBundle];
      id v11 = v10;
      CFStringRef v12 = @"Walking directions can not be shown in carplay [CarPlay]";
      goto LABEL_7;
    case 3:
      id v10 = +[NSBundle mainBundle];
      id v11 = v10;
      CFStringRef v12 = @"Transit directions can not be shown in carplay [CarPlay]";
      goto LABEL_7;
    case 4:
      id v10 = +[NSBundle mainBundle];
      id v11 = v10;
      CFStringRef v12 = @"Ridesharing directions can not be shown in carplay [CarPlay]";
      goto LABEL_7;
    case 5:
      id v10 = +[NSBundle mainBundle];
      id v11 = v10;
      CFStringRef v12 = @"Cycling directions can not be shown in carplay [CarPlay]";
LABEL_7:
      unsigned int v13 = [v10 localizedStringForKey:v12 value:@"localized string not found" table:0];

      [v2 setObject:v9 forKeyedSubscript:@"kMapsInterruptionTitle"];
      if (v13)
      {
        [v2 setObject:v13 forKeyedSubscript:@"kMapsInterruptionMessage"];
      }
      break;
    default:
      [v2 setObject:v9 forKeyedSubscript:@"kMapsInterruptionTitle"];
      break;
  }

  return v2;
}

void sub_100D50EA4(id a1)
{
  id v1 = +[CarDisplayController sharedInstance];
  id v2 = [v1 platformController];
  id v3 = [v2 currentSession];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v4 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      id v5 = v4;
    }
    else {
      id v5 = 0;
    }
    id v6 = v5;

    [v6 safelySetCurrentTransportType:1];
LABEL_11:

    goto LABEL_12;
  }
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v7 = v3;
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    id v9 = v8;

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D51024;
    block[3] = &unk_1012E5D08;
    id v11 = v9;
    id v6 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    goto LABEL_11;
  }
LABEL_12:
}

void sub_100D51024(uint64_t a1)
{
  id v2 = +[CarChromeModeCoordinator sharedInstance];
  id v3 = [*(id *)(a1 + 32) destination];
  CFStringRef v5 = @"skipEndNavigationPrompt";
  id v6 = &__kCFBooleanTrue;
  id v4 = +[NSDictionary dictionaryWithObjects:&v6 forKeys:&v5 count:1];
  [v2 displayRoutePlanningForDestination:v3 userInfo:v4];
}

id CarInterruptionUserInfoForSharedTripSenderInfo(void *a1, void *a2)
{
  id v2 = 0;
  if (a1 && a2)
  {
    v7[0] = @"kMapsInterruptionSharedTripSenderName";
    v7[1] = @"kMapsInterruptionSharedTripSenderHandle";
    v8[0] = a1;
    v8[1] = a2;
    id v4 = a2;
    id v5 = a1;
    id v2 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  }

  return v2;
}

double CarDisplayRegionForSearchResult(void *a1)
{
  id v1 = a1;
  id v2 = [v1 mapItem];
  id v3 = [v2 _displayMapRegion];

  if (v3)
  {
    id v4 = [v2 _displayMapRegion];
    GEOMapRectForMapRegion();
  }
  else
  {
    if (!v1)
    {
      double v9 = *(double *)MKCoordinateRegionInvalid;
      goto LABEL_6;
    }
    id v11 = v1;
    id v4 = +[NSArray arrayWithObjects:&v11 count:1];
    double v5 = sub_10050943C(v4);
  }
  *(void *)&double v9 = (unint64_t)MKCoordinateRegionForMapRect(*(MKMapRect *)&v5);

LABEL_6:
  return v9;
}

id CarDisplayPreciseLocationOffAdvisory()
{
  uint64_t v0 = +[NSBundle mainBundle];
  id v1 = [v0 localizedStringForKey:@"Precise Location Off Advisory in CarPlay [CarPlay]" value:@"localized string not found" table:0];

  return v1;
}

id CarDisplayTurnByTurnNotAvailableAdvisory()
{
  uint64_t v0 = +[NSBundle mainBundle];
  id v1 = [v0 localizedStringForKey:@"Stepping Route Advisory in CarPlay [CarPlay]" value:@"localized string not found" table:0];

  return v1;
}

id CarInterruptionUserInfoWithTransportType(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      goto LABEL_3;
    case 2:
      a1 = 2;
LABEL_3:
      id result = CarInterruptionUserInfoWithMSPTransportType(a1);
      break;
    case 4:
      id result = CarInterruptionUserInfoWithMSPTransportType(3);
      break;
    case 8:
      id result = CarInterruptionUserInfoWithMSPTransportType(5);
      break;
    default:
      id result = CarInterruptionUserInfoWithMSPTransportType(0);
      break;
  }
  return result;
}

uint64_t CarDisplayIsDriveCameraEnabled()
{
  uint64_t v0 = +[GEOPlatform sharedPlatform];
  if ([v0 isInternalInstall]) {
    uint64_t BOOL = GEOConfigGetBOOL();
  }
  else {
    uint64_t BOOL = 0;
  }

  return BOOL;
}

void sub_100D51B4C(uint64_t a1, void *a2)
{
  id v5 = a2;
  dispatch_assert_queue_V2((dispatch_queue_t)&_dispatch_main_q);
  id v3 = *(void **)(a1 + 32);
  id v4 = [*(id *)(a1 + 40) updateIdentifier];
  LODWORD(v3) = [v3 isEqual:v4];

  if (v3) {
    [*(id *)(*(void *)(a1 + 40) + 8) setImage:v5];
  }
}

void sub_100D51BE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (+[NSThread isMainThread])
  {
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  else
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100D51CB8;
    v4[3] = &unk_1012E5F78;
    id v6 = *(id *)(a1 + 32);
    id v5 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
  }
}

uint64_t sub_100D51CB8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

id sub_100D522D0()
{
  if (qword_101611108 != -1) {
    dispatch_once(&qword_101611108, &stru_101322E68);
  }
  uint64_t v0 = (void *)qword_101611100;

  return v0;
}

id sub_100D52324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) registerClass:a3 forCellWithReuseIdentifier:a2];
}

void sub_100D531A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained delegate];
    [v2 dataSourceRequiresReload:v3];

    id WeakRetained = v3;
  }
}

void sub_100D53324(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained delegate];
    [v2 dataSourceRequiresReload:v3];

    id WeakRetained = v3;
  }
}

void sub_100D535B0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "RideBookingOutlineController");
  id v2 = (void *)qword_101611100;
  qword_101611100 = (uint64_t)v1;
}

void sub_100D53930(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100D53950(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleEvent:v3];
}

void sub_100D53DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
}

id sub_100D53DF0()
{
  if (qword_101611118 != -1) {
    dispatch_once(&qword_101611118, &stru_101322E88);
  }
  uint64_t v0 = (void *)qword_101611110;

  return v0;
}

void sub_100D53E44(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleTimer];
}

void sub_100D542E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "NavIdleTimeoutTimer");
  uint64_t v2 = (void *)qword_101611110;
  qword_101611110 = (uint64_t)v1;
}

void sub_100D54514(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 56) allObjects];
  uint64_t v3 = [v2 sortedArrayUsingComparator:&stru_101322ED0];

  uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

int64_t sub_100D54588(id a1, MapsToken *a2, MapsToken *a3)
{
  uint64_t v4 = a3;
  [(MapsToken *)a2 createdTimestamp];
  double v6 = v5;
  [(MapsToken *)v4 createdTimestamp];
  double v8 = v7;

  if (v6 >= v8) {
    int64_t v9 = 0;
  }
  else {
    int64_t v9 = -1;
  }
  if (v6 > v8) {
    return 1;
  }
  else {
    return v9;
  }
}

id sub_100D547E8(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 40) containsObject:*(void *)(a1 + 40)];
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 40);
    return [v4 addObject:v3];
  }
  return result;
}

id sub_100D54A44(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 40) count];
  if (result)
  {
    id result = [*(id *)(*(void *)(a1 + 32) + 40) containsObject:*(void *)(a1 + 40)];
    if (result)
    {
      uint64_t v3 = *(void *)(a1 + 40);
      uint64_t v4 = *(void **)(*(void *)(a1 + 32) + 40);
      return [v4 removeObject:v3];
    }
  }
  return result;
}

uint64_t sub_100D54AA8(uint64_t a1)
{
  uint64_t v2 = sub_1000961C8();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    label = dispatch_queue_get_label(*(dispatch_queue_t *)(*(void *)(a1 + 32) + 24));
    int v5 = 136446210;
    double v6 = label;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "ON QUEUE %{public}s:", (uint8_t *)&v5, 0xCu);
  }

  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100D558F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

MKServerFormattedString *__cdecl sub_100D55924(id a1, NSString *a2, unint64_t a3)
{
  return (MKServerFormattedString *)[(NSString *)a2 mkServerFormattedString];
}

void sub_100D5592C(uint64_t a1, int a2, id obj)
{
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_100D55E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100D55E4C(uint64_t a1, int a2, id obj)
{
  *(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_100D56E7C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerViewController];
  [v1 _internal_ensurePresentationsMatchContaineeStackAllowingFault:0, allowingAnimations:0, skipUnlock:1];
}

void sub_100D57080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D5709C(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    _OWORD v5[3] = v2;
    void v5[4] = v3;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D57138;
    block[3] = &unk_1012E6708;
    objc_copyWeak(v5, (id *)(a1 + 32));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    objc_destroyWeak(v5);
  }
}

void sub_100D57138(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained openShareETAController];
}

void *sub_100D57308(void *result, uint64_t a2, uint64_t a3)
{
  if (!a3) {
    return +[MapsSharedTripAnalyticsHelper sendSuccessAnalyticFor:result[4]];
  }
  return result;
}

void sub_100D58344(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100D58360(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained mapSelectionManager];
  uint64_t v2 = [v1 mapView];
  [v2 _deselectLabelMarkerAnimated:1];
}

void sub_100D584B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100D584CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained mapSelectionManager];
  uint64_t v2 = [v1 mapView];
  [v2 _deselectLabelMarkerAnimated:1];
}

void sub_100D5866C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
  uint64_t v2 = [*(id *)(a1 + 32) navigationTrayContaineeViewController];
  [WeakRetained presentController:v2 animated:*(unsigned __int8 *)(a1 + 40) useDefaultContaineeLayout:*(unsigned __int8 *)(a1 + 41)];
}

void sub_100D58C94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
  [WeakRetained removeControllerFromStack:*(void *)(*(void *)(a1 + 32) + 16)];
}

void sub_100D59114(uint64_t a1)
{
  uint64_t v2 = +[MNNavigationService sharedService];
  switch([v2 navigationTransportType])
  {
    case 1u:
    case 6u:

      goto LABEL_10;
    case 2u:
      char IsEnabled_Maps182 = MapsFeature_IsEnabled_Maps182();
      goto LABEL_5;
    case 3u:
      char IsEnabled_Maps182 = MapsFeature_IsEnabled_Maps420();
LABEL_5:
      char v4 = IsEnabled_Maps182;

      if (v4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    default:
      int IsEnabled_DrivingMultiWaypointRoutes = MapsFeature_IsEnabled_DrivingMultiWaypointRoutes();

      if (IsEnabled_DrivingMultiWaypointRoutes)
      {
LABEL_6:
        int v5 = sub_10000AF10();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Present SAR aware Search Home", buf, 2u);
        }

        double v6 = [NavCategoryListViewController alloc];
        double v7 = *(void **)(a1 + 32);
        double v8 = [v7 searchHomeViewController];
        int64_t v9 = [(NavCategoryListViewController *)v6 initWithDelegate:v7 usingSearchHome:v8];
        uint64_t v10 = *(void *)(a1 + 32);
        id v11 = *(void **)(v10 + 16);
        *(void *)(v10 + 16) = v9;

        [*(id *)(a1 + 32) setSearchingAlongTheRoute:1];
        id WeakRetained = (NavCategoryListViewController *)objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = *(void *)(v13 + 16);
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        v18[2] = sub_100D59354;
        v18[3] = &unk_1012E7D28;
        void v18[4] = v13;
        [(NavCategoryListViewController *)WeakRetained presentController:v14 animated:1 completion:v18];
      }
      else
      {
LABEL_10:
        uint64_t v16 = sub_10000AF10();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "Present SAR category list", buf, 2u);
        }

        id WeakRetained = [[NavCategoryListViewController alloc] initWithDelegate:*(void *)(a1 + 32) categories:*(void *)(a1 + 40)];
        id v17 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 120));
        [v17 presentController:WeakRetained];
      }
      return;
  }
}

id sub_100D59354(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) searchBarBecomeFirstResponder];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 112);

  return [v2 cleanSearch];
}

void sub_100D59398(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    uint64_t v6 = v2;
    uint64_t v7 = v3;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D59428;
    block[3] = &unk_1012E6EA8;
    id v5 = *(id *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

uint64_t sub_100D59428(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D59F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D59FD0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    char v4 = sub_10000AF10();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    uint64_t v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      double v8 = [v5 performSelector:"accessibilityIdentifier"];
      int64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)long long buf = 138543618;
    uint64_t v27 = v10;
    __int16 v28 = 1024;
    int v29 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    unsigned int v11 = [WeakRetained canEnterPedestrianAR];
    uint64_t v12 = sub_10000AF10();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_INFO);
    if (v11)
    {
      if (!v13)
      {
LABEL_17:

        [WeakRetained enterPedestrianAR];
        goto LABEL_26;
      }
      id v14 = WeakRetained;
      uint64_t v15 = (objc_class *)objc_opt_class();
      uint64_t v16 = NSStringFromClass(v15);
      if (objc_opt_respondsToSelector())
      {
        id v17 = [v14 performSelector:"accessibilityIdentifier"];
        uint64_t v18 = v17;
        if (v17 && ![v17 isEqualToString:v16])
        {
          id v19 = +[NSString stringWithFormat:@"%@<%p, %@>", v16, v14, v18];

          goto LABEL_16;
        }
      }
      id v19 = +[NSString stringWithFormat:@"%@<%p>", v16, v14];
LABEL_16:

      *(_DWORD *)long long buf = 138543362;
      uint64_t v27 = v19;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}@] Still eligible to enter Pedestrian AR; will enter now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v13)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v20 = WeakRetained;
    long long v21 = (objc_class *)objc_opt_class();
    long long v22 = NSStringFromClass(v21);
    if (objc_opt_respondsToSelector())
    {
      id v23 = [v20 performSelector:"accessibilityIdentifier"];
      id v24 = v23;
      if (v23 && ![v23 isEqualToString:v22])
      {
        CFStringRef v25 = +[NSString stringWithFormat:@"%@<%p, %@>", v22, v20, v24];

        goto LABEL_24;
      }
    }
    CFStringRef v25 = +[NSString stringWithFormat:@"%@<%p>", v22, v20];
LABEL_24:

    *(_DWORD *)long long buf = 138543362;
    uint64_t v27 = v25;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "[%{public}@] No longer eligible to enter Pedestrian AR", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_100D5AAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D5AAF0(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    char v4 = sub_10000AF10();
    if (!os_log_type_enabled(v4, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    id v5 = WeakRetained;
    uint64_t v6 = (objc_class *)objc_opt_class();
    uint64_t v7 = NSStringFromClass(v6);
    if (objc_opt_respondsToSelector())
    {
      double v8 = [v5 performSelector:"accessibilityIdentifier"];
      int64_t v9 = v8;
      if (v8 && ![v8 isEqualToString:v7])
      {
        uint64_t v10 = +[NSString stringWithFormat:@"%@<%p, %@>", v7, v5, v9];

        goto LABEL_8;
      }
    }
    uint64_t v10 = +[NSString stringWithFormat:@"%@<%p>", v7, v5];
LABEL_8:

    *(_DWORD *)long long buf = 138543618;
    uint64_t v30 = v10;
    __int16 v31 = 1024;
    int v32 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}@] User exited VLF Crowdsourcing permission card with answer: %d", buf, 0x12u);

LABEL_9:
    unsigned int v11 = [WeakRetained containerViewController];
    uint64_t v12 = [v11 chromeViewController];
    BOOL v13 = [v12 userLocationView];
    id v14 = [v13 vlfMode];

    uint64_t v15 = sub_10000AF10();
    BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_INFO);
    if (v14)
    {
      if (!v16)
      {
LABEL_17:

        [WeakRetained showVLF];
        goto LABEL_26;
      }
      id v17 = WeakRetained;
      uint64_t v18 = (objc_class *)objc_opt_class();
      id v19 = NSStringFromClass(v18);
      if (objc_opt_respondsToSelector())
      {
        id v20 = [v17 performSelector:"accessibilityIdentifier"];
        long long v21 = v20;
        if (v20 && ![v20 isEqualToString:v19])
        {
          long long v22 = +[NSString stringWithFormat:@"%@<%p, %@>", v19, v17, v21];

          goto LABEL_16;
        }
      }
      long long v22 = +[NSString stringWithFormat:@"%@<%p>", v19, v17];
LABEL_16:

      *(_DWORD *)long long buf = 138543362;
      uint64_t v30 = v22;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is still eligible to be shown; showing now",
        buf,
        0xCu);

      goto LABEL_17;
    }
    if (!v16)
    {
LABEL_25:

      goto LABEL_26;
    }
    id v23 = WeakRetained;
    id v24 = (objc_class *)objc_opt_class();
    CFStringRef v25 = NSStringFromClass(v24);
    if (objc_opt_respondsToSelector())
    {
      uint64_t v26 = [v23 performSelector:"accessibilityIdentifier"];
      uint64_t v27 = v26;
      if (v26 && ![v26 isEqualToString:v25])
      {
        __int16 v28 = +[NSString stringWithFormat:@"%@<%p, %@>", v25, v23, v27];

        goto LABEL_24;
      }
    }
    __int16 v28 = +[NSString stringWithFormat:@"%@<%p>", v25, v23];
LABEL_24:

    *(_DWORD *)long long buf = 138543362;
    uint64_t v30 = v28;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "[%{public}@] VLF is no longer eligible to be shown", buf, 0xCu);

    goto LABEL_25;
  }
LABEL_26:
}

void sub_100D5B2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D5B308(uint64_t a1, unint64_t a2, void *a3)
{
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v3 = +[ModalCardHeaderConfiguration defaultModalCardHeaderConfiguration];
  }
  else
  {
    if (sub_1008262C8(a2, a3)) {
      +[ModalCardHeaderConfiguration navigationModalCardHeaderCompactConfiguration];
    }
    else {
    uint64_t v3 = +[ModalCardHeaderConfiguration navigationModalCardHeaderConfiguration];
    }
  }

  return v3;
}

void sub_100D5B378(uint64_t a1)
{
  id v1 = objc_loadWeakRetained((id *)(a1 + 32));
  [v1 pressedEndWithSender:v1];
}

void sub_100D5B3CC(uint64_t a1)
{
  +[GEOAPPortal captureUserAction:140 target:505 value:0];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissTray];
}

void sub_100D5B590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D5B5AC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    char v4 = sub_10057670C();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Error unlocking the device; will not proceed with RAP flow: %@",
        (uint8_t *)&buf,
        0xCu);
    }
    goto LABEL_6;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    char v4 = WeakRetained;
    *(void *)&long long buf = 0;
    *((void *)&buf + 1) = &buf;
    uint64_t v24 = 0x3032000000;
    CFStringRef v25 = sub_1001045A0;
    uint64_t v26 = sub_100104B40;
    id v27 = [(objc_class *)WeakRetained[10].isa rapAppStateForCurrentNavigation];
    id v6 = objc_loadWeakRetained((id *)&v4[4].isa);
    uint64_t v7 = [v6 mapsSceneDelegate];
    double v8 = [v7 rapPresenter];

    int64_t v9 = dispatch_group_create();
    dispatch_group_enter(v9);
    isCATransform3D a = v4[10].isa;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    id v20[2] = sub_100D5B8AC;
    v20[3] = &unk_101322F98;
    p_long long buf = &buf;
    unsigned int v11 = v9;
    long long v21 = v11;
    [(objc_class *)isa getLatestRAPAppStateWithCompletion:v20];
    dispatch_group_enter(v11);
    id v12 = objc_loadWeakRetained((id *)&v4[4].isa);
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100D5B9A4;
    v18[3] = &unk_1012E5D08;
    BOOL v13 = v11;
    id v19 = v13;
    [v12 endNavigationWithCompletion:v18];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D5B9AC;
    block[3] = &unk_1012E73F0;
    id v16 = v8;
    id v17 = &buf;
    id v14 = v8;
    dispatch_group_notify(v13, (dispatch_queue_t)&_dispatch_main_q, block);

    _Block_object_dispose(&buf, 8);
LABEL_6:
  }
}

void sub_100D5B888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_100D5B8AC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (v7)
  {
    double v8 = sub_10057670C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138412290;
      id v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "RAPNavigationTracker failed to provide most recent route info. Will use latest data instead. Error: %@", (uint8_t *)&v9, 0xCu);
    }
  }
  if (v6) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100D5B9A4(uint64_t a1)
{
}

void sub_100D5B9AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v3 = sub_10057670C();
  char v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "User pressed thumbs down and navigation ended -> will present RAP", v5, 2u);
    }

    [*(id *)(a1 + 32) presentReportAProblemForRouteWithAppState:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
  else
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "User pressed thumbs down, but there was no underlying report to present.", buf, 2u);
    }
  }
}

void sub_100D5C46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_100D5C4C4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    char v4 = (id *)(a1 + 40);
    id WeakRetained = objc_loadWeakRetained(v4);
    id v6 = [WeakRetained _labelMarkerForCustomFeatureAnnotation:v3];

    if (v6)
    {
      id v7 = objc_loadWeakRetained(v4);
      [v7 _selectLabelMarker:v6 animated:1];
LABEL_6:
    }
  }
  else
  {
    id v6 = sub_10000AF10();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      id v7 = [*(id *)(a1 + 32) name];
      int v8 = 138412290;
      int v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "No annotation for mapItem: %@.", (uint8_t *)&v8, 0xCu);
      goto LABEL_6;
    }
  }
}

void sub_100D5F1A0(uint64_t a1)
{
  uint64_t v2 = sub_100577F64();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = *(id *)(a1 + 32);
    if (!v3)
    {
      int v8 = @"<nil>";
      goto LABEL_10;
    }
    char v4 = (objc_class *)objc_opt_class();
    id v5 = NSStringFromClass(v4);
    if (objc_opt_respondsToSelector())
    {
      id v6 = [v3 performSelector:"accessibilityIdentifier"];
      id v7 = v6;
      if (v6 && ![v6 isEqualToString:v5])
      {
        int v8 = +[NSString stringWithFormat:@"%@<%p, %@>", v5, v3, v7];

        goto LABEL_8;
      }
    }
    int v8 = +[NSString stringWithFormat:@"%@<%p>", v5, v3];
LABEL_8:

LABEL_10:
    uint64_t v9 = *(void *)(a1 + 40);
    *(_DWORD *)long long buf = 138543618;
    id v12 = v8;
    __int16 v13 = 2112;
    uint64_t v14 = v9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "[%{public}@] displayRoutePlanningForDestination: %@", buf, 0x16u);
  }
  id v10 = +[CarChromeModeCoordinator sharedInstance];
  [v10 displayRoutePlanningForDestination:*(void *)(a1 + 40)];
}

void sub_100D5FC40(id a1)
{
  v11[0] = NSFontAttributeName;
  id v1 = +[UIFont boldSystemFontOfSize:20.0];
  v12[0] = v1;
  v11[1] = NSForegroundColorAttributeName;
  uint64_t v2 = +[UIColor labelColor];
  v12[1] = v2;
  uint64_t v3 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:2];
  char v4 = (void *)qword_101611130;
  qword_101611130 = v3;

  v9[0] = NSFontAttributeName;
  id v5 = +[UIFont systemFontOfSize:13.0];
  v9[1] = NSForegroundColorAttributeName;
  v10[0] = v5;
  id v6 = +[UIColor labelColor];
  v10[1] = v6;
  uint64_t v7 = +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:2];
  int v8 = (void *)qword_101611138;
  qword_101611138 = v7;
}

void sub_100D60C70(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) window];
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();

  if (isKindOfClass)
  {
    char v4 = [*(id *)(a1 + 32) window];
    id v5 = [*(id *)(*(void *)(a1 + 32) + 8) visibleCells];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100D60DF8;
    v9[3] = &unk_101322FE0;
    void v9[4] = *(void *)(a1 + 32);
    id v6 = [v5 sortedArrayUsingComparator:v9];

    [v4 _maps_safeSetFocusableViews:v6];
    uint64_t v7 = sub_100577F64();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      id v8 = [v6 count];
      *(_DWORD *)long long buf = 134217984;
      id v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "CarSmallWidgetCollectionView setFocusableViews %ld", buf, 0xCu);
    }
  }
}

id sub_100D60DF8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(*(void *)(a1 + 32) + 8);
  id v6 = a3;
  uint64_t v7 = [v5 indexPathForCell:a2];
  id v8 = [*(id *)(*(void *)(a1 + 32) + 8) indexPathForCell:v6];

  id v9 = [v7 compare:v8];
  return v9;
}

void sub_100D61408(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_1000A930C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      int v11 = 138412290;
      id v12 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "RefineMapItemAction resolveMapItem: %@", (uint8_t *)&v11, 0xCu);
    }

    id v8 = *(id *)(a1 + 32);
  }
  else
  {
    id v8 = *(id *)(a1 + 32);
    if ([v5 count])
    {
      uint64_t v9 = [v5 firstObject];

      id v8 = (id)v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 40);
  if (v10) {
    (*(void (**)(uint64_t, id))(v10 + 16))(v10, v8);
  }
}

void sub_100D62BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D62BF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained primaryTextColor];

  return v2;
}

void sub_100D65A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D65AB8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isServerProvidedWaypoint])
  {
LABEL_10:
    id v5 = 0;
    goto LABEL_11;
  }
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v4 >= (unint64_t)[*(id *)(a1 + 32) count])
  {
    id v6 = sub_1005762E4();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      int v9 = 136315650;
      uint64_t v10 = "-[RoutePlanningSession(WaypointsOrRequests) enumerateRequestsOrWaypointsUsingBlock:]_block_invoke";
      __int16 v11 = 2080;
      id v12 = "RoutePlanningSession+WaypointsOrRequests.m";
      __int16 v13 = 1024;
      int v14 = 40;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s [%s:%d] Assertion reached unexpectedly!", (uint8_t *)&v9, 0x1Cu);
    }

    if (sub_100BB36BC())
    {
      uint64_t v7 = sub_1005762E4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        id v8 = +[NSThread callStackSymbols];
        int v9 = 138412290;
        uint64_t v10 = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v9, 0xCu);
      }
    }
    goto LABEL_10;
  }
  id v5 = [*(id *)(a1 + 32) objectAtIndexedSubscript:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
  ++*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
LABEL_11:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100D65C9C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a2;
  id v7 = [v5 waypointAtIndex:a3];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100D66130(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100D6614C(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = WeakRetained;
    [WeakRetained updateMapEdgeInsets];
    id v6 = [v8 chromeViewController];
    [v6 setNeedsUpdateMapInsets];

    id v5 = v8;
    uint64_t v7 = *(void *)(a1 + 32);
    if (v7)
    {
      (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v7, a2);
      id v5 = v8;
    }
  }
}

void sub_100D66294(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  else {
    double v1 = 1.0;
  }
  id v2 = [*(id *)(a1 + 32) view];
  [v2 setAlpha:v1];
}

id sub_100D66608(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _executeNextAlert];
}

void sub_100D6686C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D66890(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _currentAlertDidFinish];
}

void sub_100D67CD8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) registrationWithCellClass:objc_opt_class() configurationHandler:&stru_101323048];
  id v2 = (void *)qword_101611148;
  qword_101611148 = v1;
}

void sub_100D67D38(id a1, SearchResultOutlineCell *a2, NSIndexPath *a3, MapsUIDiffableDataSourceOutlineNodeSnapshot *a4)
{
  id v8 = a2;
  id v5 = [(MapsUIDiffableDataSourceOutlineNodeSnapshot *)a4 viewModel];
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    id v6 = v5;
  }
  else {
    id v6 = 0;
  }
  id v7 = v6;

  [(SearchResultOutlineCell *)v8 setCellModel:v7];
}

void sub_100D681B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100D681D8(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 query];
  uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  uint64_t v7 = [v3 locationDisplayString];

  uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
  int v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;
}

void sub_100D68258(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 geoMapItem];
  uint64_t v5 = [v4 name];
  uint64_t v6 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  uint64_t v8 = [v3 geoMapItem];

  id v17 = [v8 addressObject];

  uint64_t v9 = [v17 cityDisplayNameWithFallback:0];
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  __int16 v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  if (![*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) length]
    || [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) length]
    && [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) isEqualToString:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)])
  {
    id v12 = [v17 address];
    uint64_t v13 = [v12 structuredAddress];
    uint64_t v14 = [v13 country];
    uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
}

id sub_100D686D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 3221225472;
  id v12 = sub_100D6880C;
  uint64_t v13 = &unk_1013230C0;
  id v4 = *(id *)(a1 + 32);
  id v14 = v3;
  id v15 = v4;
  id v5 = v3;
  uint64_t v6 = sub_100B7E834(&v10);
  id v16 = v6;
  uint64_t v7 = +[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1, v10, v11, v12, v13);
  uint64_t v8 = +[UISwipeActionsConfiguration configurationWithActions:v7];

  return v8;
}

void sub_100D6880C(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = a2;
  (*(void (**)(uint64_t, id))(v2 + 16))(v2, [v3 row]);
  v4[2](v4, 1);
}

double sub_100D68880(uint64_t a1, void *a2)
{
  if ([a2 row] == (id)(*(void *)(a1 + 32) - 1)) {
    return _UICollectionViewListSectionSeparatorInsetHidden[0];
  }
  else {
    return _UICollectionViewListLayoutSectionAutomaticDimension;
  }
}

void sub_100D6938C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D6946C;
  v4[3] = &unk_1012E76C0;
  id v5 = *(id *)(a1 + 56);
  [v2 deleteCollection:v4];
  +[GEOAPPortal captureUserAction:2009 target:0 value:0];
  id v3 = [*(id *)(a1 + 32) handlerType];
  if (v3 == (id)4)
  {
    [*(id *)(a1 + 40) _captureCuratedCuratedCollectionAction:2088 indexPath:*(void *)(a1 + 48)];
  }
  else if (!v3)
  {
    +[GEOAPPortal captureUserAction:2081 target:251 value:0];
  }
}

uint64_t sub_100D6946C(uint64_t a1, uint64_t a2)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, a2 == 0);
  }
  return result;
}

uint64_t sub_100D6948C(uint64_t a1, int a2)
{
  if (a2) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100D69820(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100D6983C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_1000AA148();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "RDS _deleteAction", v6, 2u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _deleteAtIndexPath:*(void *)(a1 + 32) completion:v3];
}

void sub_100D69A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D69A3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _deleteAtIndexPath:*(void *)(a1 + 32) completion:&stru_101323128];
    id WeakRetained = v3;
  }
}

void sub_100D69B80(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100D69B9C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4[2](v4, 1);
    [WeakRetained _shareAtIndexPath:*(void *)(a1 + 32)];
  }
}

void sub_100D69D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D69D78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _shareAtIndexPath:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

id sub_100D6A404(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

id sub_100D6ACF0()
{
  if (qword_101611170 != -1) {
    dispatch_once(&qword_101611170, &stru_101323148);
  }
  uint64_t v0 = (void *)qword_101611168;

  return v0;
}

void sub_100D6AF0C(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if (WeakRetained[8])
    {
      id v4 = +[VGVirtualGarageService sharedService];
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_100D6B050;
      v6[3] = &unk_1012F2D20;
      void v6[4] = v3;
      objc_copyWeak(&v7, v1);
      [v4 virtualGarageGetGarageWithReply:v6];

      objc_destroyWeak(&v7);
    }
    else
    {
      [WeakRetained setCurrentRouteAttributes:0];
      [v3 setCurrentVehicleState:0];
      id v5 = sub_100D6ACF0();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "_updateState:, monitor is not active, clearing state", buf, 2u);
      }
    }
  }
}

void sub_100D6B03C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D6B050(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = *(NSObject **)(*(void *)(a1 + 32) + 24);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100D6B1A8;
    v9[3] = &unk_1012E6690;
    objc_copyWeak(&v11, (id *)(a1 + 40));
    id v10 = v5;
    dispatch_async(v7, v9);

    objc_destroyWeak(&v11);
  }
  else
  {
    uint64_t v8 = sub_100D6ACF0();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "_updateState:, failed to fetch garage with error: %@", buf, 0xCu);
    }
  }
}

void sub_100D6B1A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained routeGeniusService];
    id v5 = [v4 suggestion];
    id v6 = [v5 route];
    id v7 = [v6 routeAttributes];
    [v3 setCurrentRouteAttributes:v7];

    uint64_t v8 = [*(id *)(a1 + 32) selectedVehicle];
    uint64_t v9 = [v8 currentVehicleState];
    [v3 setCurrentVehicleState:v9];

    id v10 = sub_100D6ACF0();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      id v11 = [v3 currentVehicleState];
      id v12 = [v3 currentRouteAttributes];
      int v13 = 138412546;
      id v14 = v11;
      __int16 v15 = 2112;
      id v16 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "_updateState:, monitor is active, currentVehicleState: %@, currentRouteAttributes: %@", (uint8_t *)&v13, 0x16u);
    }
  }
}

id sub_100D6B3A8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _checkBattery];
}

void sub_100D6B768(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = sub_100D6ACF0();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      double v4 = *(double *)(a1 + 40) * 100.0;
      double v5 = *(double *)(a1 + 48) * 100.0;
      double v6 = *(double *)(a1 + 56) * 100.0;
      int v8 = 134218496;
      double v9 = v4;
      __int16 v10 = 2048;
      double v11 = v5;
      __int16 v12 = 2048;
      double v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "_checkBattery: batteryPercentage changed from: %.2lf (RG) to: %.2lf (VG), which is more than threshold: %.2lf", (uint8_t *)&v8, 0x20u);
    }

    id v7 = [WeakRetained delegate];
    [v7 vehicleBatteryChangedSignificantly];
  }
}

void sub_100D6B990(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) route];
  uint64_t v2 = [v3 routeAttributes];
  [*(id *)(a1 + 32) setCurrentRouteAttributes:v2];
}

void sub_100D6BB18(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 40) selectedVehicle];
  uint64_t v2 = [v3 currentVehicleState];
  [*(id *)(a1 + 32) setCurrentVehicleState:v2];
}

void sub_100D6BCAC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "CarRouteGeniusVehicleBatteryMonitor");
  uint64_t v2 = (void *)qword_101611168;
  qword_101611168 = (uint64_t)v1;
}

id sub_100D6C4F8(uint64_t a1)
{
  return [*(id *)(a1 + 32) setShowsLoading:1];
}

void sub_100D6C59C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = [*(id *)(a1 + 32) dataSource];
  [v3 setMapItem:v2];

  [*(id *)(a1 + 32) updateFilterBar];
  [*(id *)(a1 + 32) performInitialSearchIfNecessary];
  if (*(void *)(a1 + 40))
  {
    double v4 = [*(id *)(a1 + 32) dataSource];
    double v5 = [v4 searchCategory];

    if (v5)
    {
      double v6 = *(void **)(a1 + 32);
      uint64_t v7 = *(void *)(a1 + 40);
      id v10 = [v6 dataSource];
      int v8 = [v10 searchCategory];
      double v9 = [v6 _headerLabelTextFromMapItem:v7 searchCategory:v8];
      [*(id *)(a1 + 32) setHeaderTitle:v9];
    }
  }
}

id sub_100D6C7D0(uint64_t a1)
{
  [*(id *)(a1 + 32) setDidFinishAutoCompleteSearchRequest:1];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setShowsLoading:0];
}

id sub_100D6C888(uint64_t a1)
{
  [*(id *)(a1 + 32) setDidFinishAutoCompleteSearchRequest:1];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setShowsLoading:0];
}

void sub_100D6CA28(uint64_t a1)
{
  [*(id *)(a1 + 32) setDidFinishAutoCompleteSearchRequest:1];
  uint64_t v2 = [*(id *)(a1 + 32) dataSource];
  [v2 setSearchResults:*(void *)(a1 + 40) labelContext:*(void *)(a1 + 48)];

  [*(id *)(a1 + 32) didUpdateResults];
  [*(id *)(a1 + 32) notifyVenuesManagerAndSwitchToBestFloor:*(unsigned __int8 *)(a1 + 56)];
  [*(id *)(a1 + 32) setShowsLoading:0];
  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 postNotificationName:@"VenueBrowseDidDisplayCategoryResults" object:*(void *)(a1 + 32)];
}

id sub_100D6CB70(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  id v3 = [*(id *)(a1 + 32) dataSource];
  [v3 setSubcategoriesType:v2];

  uint64_t v4 = *(void *)(a1 + 40);
  double v5 = [*(id *)(a1 + 32) dataSource];
  [v5 setSubcategories:v4];

  [*(id *)(a1 + 32) updateFilterBar];
  double v6 = *(void **)(a1 + 32);

  return [v6 updateHeaderImageView];
}

void sub_100D6CF98(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) contentView];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) contentView];
  [v3 layoutIfNeeded];
}

void sub_100D6EBC8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  else {
    double v1 = 1.0;
  }
  id v2 = [*(id *)(a1 + 32) filterView];
  [v2 setAlpha:v1];
}

void sub_100D705A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_100D705BC()
{
  if (qword_101611190 != -1) {
    dispatch_once(&qword_101611190, &stru_101323288);
  }
  uint64_t v0 = (void *)qword_101611188;

  return v0;
}

void sub_100D706C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D7081C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D708A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D70C80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D70DEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D70F10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D71278(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARSessionUsageTracker");
  id v2 = (void *)qword_101611188;
  qword_101611188 = (uint64_t)v1;
}

void sub_100D71754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100D7176C(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) taskState];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result == (id)1;
  return result;
}

void sub_100D718C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D718DC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) resultOnIsolationQueue];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100D71A88(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id sub_100D71AA0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) taskState];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = result != 0;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    return [v3 setTaskState:1];
  }
  return result;
}

void sub_100D71B10(uint64_t a1)
{
  id v2 = objc_alloc((Class)MNDirectionsRequestDetails);
  uint64_t v3 = [*(id *)(a1 + 32) tracePath];
  id v4 = [v2 initWithTracePath:v3];

  id v5 = objc_alloc_init((Class)GEODirectionsRequestFeedback);
  [v5 setPurpose:4];
  [v5 setSource:1];
  double v6 = +[NSBundle mainBundle];
  uint64_t v7 = [v6 bundleIdentifier];
  [v5 setRequestingAppId:v7];

  [v4 setDirectionsRequestFeedback:v5];
  int v8 = +[MNNavigationService sharedService];
  [v8 openForClient:*(void *)(a1 + 32)];
  double v9 = [v8 ticketForDirectionsRequest:v4];
  [*(id *)(a1 + 32) setTicket:v9];

  objc_initWeak(&location, *(id *)(a1 + 32));
  id v10 = [*(id *)(a1 + 32) ticket];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100D71D08;
  void v14[3] = &unk_1013232B0;
  objc_copyWeak(&v18, &location);
  id v11 = v8;
  uint64_t v12 = *(void *)(a1 + 32);
  double v13 = *(void **)(a1 + 40);
  id v15 = v11;
  uint64_t v16 = v12;
  id v17 = v13;
  [v10 submitWithHandler:v14];

  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);
}

void sub_100D71CE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100D71D08(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [*(id *)(a1 + 32) closeForClient:WeakRetained];
  if (v8)
  {
    id v11 = [v8 _mapkit_errorWithDirectionsError:v9];
    uint64_t v12 = +[Result resultWithError:v11];
  }
  else
  {
    uint64_t v12 = +[Result resultWithValue:v7];
  }
  double v13 = [*(id *)(a1 + 40) isolationQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D71E70;
  block[3] = &unk_1012E80F0;
  id v14 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v17 = v12;
  id v18 = v14;
  id v15 = v12;
  dispatch_async(v13, block);
}

void sub_100D71E70(uint64_t a1)
{
  [*(id *)(a1 + 32) setResultOnIsolationQueue:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setTaskState:2];
  uint64_t v2 = dispatch_get_global_queue(21, 0);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100D71F30;
  v3[3] = &unk_1012E76E8;
  void v3[4] = *(void *)(a1 + 32);
  id v4 = *(id *)(a1 + 48);
  dispatch_async(v2, v3);
}

void sub_100D71F30(uint64_t a1)
{
  uint64_t v2 = GEOFindOrCreateLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void **)(a1 + 32);
    id v4 = [v3 result];
    int v10 = 138412546;
    id v11 = v3;
    __int16 v12 = 2112;
    double v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%@ – invoking completion handler with result %@", (uint8_t *)&v10, 0x16u);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  double v6 = [*(id *)(a1 + 32) resultOnIsolationQueue];
  id v7 = [*(id *)(a1 + 32) ticket];
  id v8 = [v7 directionsResponse];
  id v9 = [v8 advisoriesInfo];
  (*(void (**)(uint64_t, void *, void *))(v5 + 16))(v5, v6, v9);
}

void sub_100D7211C(uint64_t a1)
{
  [*(id *)(a1 + 32) setTaskState:2];
  id v2 = [*(id *)(a1 + 32) ticket];
  [v2 cancel];
}

void sub_100D727D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t sub_100D727F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = [WeakRetained logicController];
  [v3 displayCollections];

  uint64_t result = *(void *)(a1 + 32);
  if (result)
  {
    uint64_t v5 = *(uint64_t (**)(void))(result + 16);
    return v5();
  }
  return result;
}

void sub_100D72A74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    uint64_t v2 = [WeakRetained apiController];
    id v3 = [v2 currentState];

    id WeakRetained = v5;
    if (v3 == (id)1)
    {
      id v4 = [v5 logicController];
      [v4 clearSnapshotData];

      id WeakRetained = v5;
    }
  }
}

void sub_100D73038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D73060(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionView];
  uint64_t v4 = sub_1000BBB44(v3);

  if (v4 == 5)
  {
    id v13 = objc_loadWeakRetained(v1);
    id v5 = [v13 filterMenu];
    id v6 = objc_loadWeakRetained(v1);
    id v7 = [v6 resultFilters];
    id v8 = objc_loadWeakRetained(v1);
    id v9 = [v8 selectedFilterIndexPath];
    id v10 = objc_loadWeakRetained(v1);
    id v11 = [v10 apiController];
    __int16 v12 = [v11 publisherViewIdentifiers];
    [v5 configureForPublisherWithRoutingDelegate:v6 withPublishersResultFilters:v7 withSelectedFilterIndex:v9 selectedFilterResultsCount:[v12 count]];
  }
}

void sub_100D73318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D73340(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained collectionView];
  uint64_t v4 = sub_1000BBB44(v3);

  if (v4 == 5)
  {
    id v13 = objc_loadWeakRetained(v1);
    id v5 = [v13 filterMenu];
    id v6 = objc_loadWeakRetained(v1);
    id v7 = [v6 resultFilters];
    id v8 = objc_loadWeakRetained(v1);
    id v9 = [v8 selectedFilterIndexPath];
    id v10 = objc_loadWeakRetained(v1);
    id v11 = [v10 apiController];
    __int16 v12 = [v11 publisherViewIdentifiers];
    [v5 configureForPublisherWithRoutingDelegate:v6 withPublishersResultFilters:v7 withSelectedFilterIndex:v9 selectedFilterResultsCount:[v12 count]];
  }
}

id sub_100D74940()
{
  if (qword_1016111A0 != -1) {
    dispatch_once(&qword_1016111A0, &stru_1013232F8);
  }
  uint64_t v0 = (void *)qword_101611198;

  return v0;
}

void sub_100D74EC4(id *a1)
{
  uint64_t v2 = sub_100D74940();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [a1[4] searchFieldItem];
    id v4 = a1[4];
    *(_DWORD *)long long buf = 138412546;
    long long v69 = v3;
    __int16 v70 = 2112;
    long long v71 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Processing search results for item: %@ session: %@", buf, 0x16u);
  }
  if ([a1[4] isRedoOrAutoRedoSearchType])
  {
    uint64_t v5 = 0;
  }
  else
  {
    id v6 = [a1[5] mapRegion];
    uint64_t v5 = v6 != 0;
  }
  unsigned __int8 v7 = [a1[4] isVenueQuery];
  if (![a1[4] isSpotlightPunchInSearch]) {
    goto LABEL_10;
  }
  id v8 = [a1[6] _spotlightMatchingSearchResult:a1[4] searchInfo:a1[5]];
  if (!v8)
  {
    if ([a1[4] isSingleResultToShowAsPlacecard])
    {
      id v9 = [a1[5] results];
      id v8 = [v9 firstObject];

      goto LABEL_11;
    }
LABEL_10:
    id v8 = 0;
  }
LABEL_11:
  if ([a1[4] isSpotlightPunchInSearch]
    && [a1[4] isSingleResultToShowAsPlacecard])
  {
    if ([a1[6] _userInterfaceIdiom] == (id)5)
    {
      [a1[6] _presentLoadingResults:a1[4]];
      id v10 = [a1[6] observers];
      [v10 searchSessionManagerSessionDidReceiveUpdate];
    }
    else
    {
      uint64_t v33 = [v8 mapItem];
      uint64_t v34 = [v33 _identifier];
      uint64_t v35 = [a1[5] spotlightMapsIdentifier];
      unsigned __int8 v36 = [v34 isEqual:v35];

      if ((v36 & 1) == 0)
      {
        CFStringRef v37 = sub_100D74940();
        if (os_log_type_enabled(v37, OS_LOG_TYPE_DEFAULT))
        {
          CFStringRef v38 = [a1[5] spotlightMapsIdentifier];
          CFStringRef v39 = [v8 mapItem];
          CFStringRef v40 = [v39 _identifier];
          *(_DWORD *)long long buf = 138478083;
          long long v69 = v38;
          __int16 v70 = 2113;
          long long v71 = v40;
        }
      }
      id v10 = [a1[6] coordinator];
      [v10 viewController:0 selectSearchResult:v8 addToHistory:1 source:8 saveSelectionState:1 replaceCurrentCard:1];
    }
    uint64_t v5 = 1;
  }
  else if (v7)
  {
    if (!v5) {
      goto LABEL_37;
    }
    id v10 = [a1[4] searchFieldItem];
    id v11 = [v10 venueCategoryItem];
    uint64_t v5 = (uint64_t)[v11 shouldFrameMapViewport];
  }
  else
  {
    __int16 v12 = sub_100D74940();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      id v13 = [a1[4] searchFieldItem];
      id v14 = [v13 searchString];
      *(_DWORD *)long long buf = 138412290;
      long long v69 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Processing no venue search results for Query %@", buf, 0xCu);
    }
    if ([a1[4] isSingleResultToShowAsPlacecard])
    {
      id v15 = [a1[5] results];
      uint64_t v16 = [v15 firstObject];

      if ([a1[5] hasRelatedSearchSuggestion])
      {
        id v17 = [RelatedSearchSuggestion alloc];
        id v18 = [a1[5] resultDisplayHeader];
        id v19 = [a1[5] substitutes];
        [a1[5] dymSuggestionVisibleTime];
        long long v21 = -[RelatedSearchSuggestion initWithResultDisplayHeader:substitutes:visibleTime:showCloseButton:](v17, "initWithResultDisplayHeader:substitutes:visibleTime:showCloseButton:", v18, v19, [a1[5] showDymSuggestionCloseButton], v20);
        [v16 setRelatedSearchSuggestion:v21];
      }
      long long v22 = [a1[6] delegate];
      [v22 retainSearchQueryForSelectedSearchResult:v16];

      unsigned int v23 = [a1[4] shouldCreateHistoryEntry];
      uint64_t v24 = [v16 address];
      if (v24)
      {
        CFStringRef v25 = [v16 address];
        unsigned int v26 = [v25 isMeCard];

        v23 &= ~v26;
      }
      id v27 = [a1[5] autocompletePerson];
      BOOL v28 = v27 == 0;

      int v29 = [a1[6] coordinator];
      [v29 viewController:0 selectSearchResult:v16 addToHistory:v28 & v23 source:2 saveSelectionState:1 replaceCurrentCard:1];

      uint64_t v30 = +[MKMapService sharedService];
      __int16 v31 = [a1[4] searchFieldItem];
      int v32 = [v31 searchString];
      [v30 captureUserAction:2015 onTarget:101 queryString:v32];

      uint64_t v5 = 1;
    }
    else
    {
      if ([a1[6] _userInterfaceIdiom] == (id)5) {
        [a1[6] _presentLoadingResults:a1[4]];
      }
      uint64_t v16 = v8;
    }
    id v10 = [a1[6] observers];
    [v10 searchSessionManagerSessionDidReceiveUpdate];
    id v8 = v16;
  }

LABEL_37:
  CFStringRef v41 = [a1[4] currentResultsSearchInfo];
  unsigned int v42 = [v41 shouldInjectSearchResults];

  if (v42)
  {
    objc_initWeak((id *)buf, a1[6]);
    v66[0] = _NSConcreteStackBlock;
    v66[1] = 3221225472;
    v66[2] = sub_100D757C8;
    v66[3] = &unk_1013232D8;
    objc_copyWeak(&v67, (id *)buf);
    CFStringRef v43 = objc_retainBlock(v66);
    unsigned int v44 = [a1[4] singleResultMode];
    id v45 = a1[5];
    if (v44)
    {
      CFStringRef v46 = [v45 autocompletePerson];
      BOOL v47 = v46 == 0;

      [a1[6] coordinator];
      if (v47) {
        uint64_t v48 = {;
      }
        uint64_t v49 = [v48 searchPinsManager];
        CFStringRef v50 = [a1[4] currentResultsSearchInfo];
        uint64_t v55 = [a1[4] searchFieldItem];
        id v56 = [v55 historyItem];
        [v49 setSingleSearchPinFromSearchInfo:v50 scrollToResults:v5 displayPlaceCardForResult:v8 historyItem:v56 animated:1 completion:v43];

        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v53 = [v45 autocompletePerson];
      BOOL v54 = v53 == 0;

      [a1[6] coordinator];
      if (v54) {
        uint64_t v48 = {;
      }
        uint64_t v49 = [v48 searchPinsManager];
        CFStringRef v50 = [a1[4] currentResultsSearchInfo];
        [v49 setSearchPinsFromSearchInfo:v50 scrollToResults:v5 displayPlaceCardForResult:v8 animated:1 completion:v43];
        goto LABEL_47;
      }
    uint64_t v48 = };
    uint64_t v49 = [v48 searchPinsManager];
    CFStringRef v50 = [a1[4] currentResultsSearchInfo];
    [v49 setSearchPinsFromSearchInfo:v50 scrollToResults:v5 displayPlaceCardForResult:0 animated:1 completion:v43];
LABEL_47:

    unsigned int v57 = [a1[4] isSpotlightPunchInSearch];
    if (v8) {
      unsigned int v58 = v57;
    }
    else {
      unsigned int v58 = 0;
    }
    if (v58 == 1 && ([a1[4] isSingleResultToShowAsPlacecard] & 1) == 0)
    {
      __int16 v59 = [a1[6] coordinator];
      dispatch_time_t v60 = [v59 searchPinsManager];
      [v60 selectAndShowSearchResult:v8 animated:1];
    }
    objc_destroyWeak(&v67);
    objc_destroyWeak((id *)buf);
    goto LABEL_54;
  }
  if (([a1[4] singleResultMode] & 1) == 0)
  {
    uint64_t v51 = [a1[6] coordinator];
    uint64_t v52 = [v51 searchPinsManager];
    [v52 clearSearchPins];
  }
LABEL_54:
  id v61 = [a1[6] delegate];
  uint64_t v62 = [a1[5] results];
  id v63 = [a1[4] searchFieldItem];
  uint64_t v64 = [a1[5] browseCategories];
  [v61 handleVenueSearchResultsWithSelectedSearchResult:v62 searchFieldItem:v63 browseCategories:v64];

  uint64_t v65 = [a1[6] delegate];
  [v65 updateFloatingControlsWithSearchSession:a1[4]];
}

void sub_100D757A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D757C8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ((a3 != MKMapRectNull.origin.y || a2 != MKMapRectNull.origin.x) && WeakRetained != 0)
  {
    id v20 = WeakRetained;
    id v12 = objc_alloc_init((Class)GEOPDViewportInfo);
    id v13 = [objc_alloc((Class)GEOMapRegion) initWithMapRect:a2, a3, a4, a5];
    [v12 setMapRegion:v13];

    id v14 = [v20 coordinator];
    id v15 = [v14 searchPinsManager];
    uint64_t v16 = [v15 mapView];
    id v17 = [v16 mapType];

    uint64_t v18 = 1;
    switch((unint64_t)v17)
    {
      case 0uLL:
        break;
      case 1uLL:
      case 3uLL:
        uint64_t v18 = 2;
        break;
      case 2uLL:
      case 4uLL:
        uint64_t v18 = 3;
        break;
      default:
        if (v17 == (id)104) {
          unsigned int v19 = 4;
        }
        else {
          unsigned int v19 = 0;
        }
        if (v17 == (id)102) {
          uint64_t v18 = 1;
        }
        else {
          uint64_t v18 = v19;
        }
        break;
    }
    [v12 setMapType:v18];
    [v20 setLastSearchSessionViewport:v12];

    id WeakRetained = v20;
  }
}

void sub_100D76EFC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "SearchSessionManager");
  uint64_t v2 = (void *)qword_101611198;
  qword_101611198 = (uint64_t)v1;
}

void sub_100D76FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100D771A8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v8 = v5;
  if (!*(unsigned char *)(a1 + 40)) {
    goto LABEL_6;
  }
  if ([v5 isPreferredLaneForManeuver])
  {
    uint64_t v6 = 1;
    goto LABEL_7;
  }
  id v5 = v8;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v6 = 0;
  }
  else {
LABEL_6:
  }
    uint64_t v6 = (uint64_t)[v5 isLaneForManeuver];
LABEL_7:
  unsigned __int8 v7 = [[CarClusterUpdateLaneGuidanceLaneInfo alloc] initWithComposedRouteLaneInfo:v8 atIndex:a3 highlightFirstAngle:v6];
  [*(id *)(a1 + 32) addObject:v7];
}

void sub_100D775E8(id a1)
{
  v6[0] = &off_1013AB830;
  v6[1] = &off_1013AB848;
  v7[0] = @"NotSet";
  v7[1] = @"NotGood";
  v6[2] = &off_1013AB860;
  v6[3] = &off_1013AB878;
  void v7[2] = @"Good";
  v7[3] = @"Preferred";
  os_log_t v1 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:4];
  CFStringRef v4 = @"status";
  id v5 = v1;
  uint64_t v2 = +[NSDictionary dictionaryWithObjects:&v5 forKeys:&v4 count:1];
  id v3 = (void *)qword_1016111B0;
  qword_1016111B0 = v2;
}

void sub_100D77734(id a1)
{
  v3[0] = &off_1013AB890;
  v3[1] = &off_1013AB8A8;
  v4[0] = @"index";
  v4[1] = @"status";
  v3[2] = &off_1013AB8C0;
  v3[3] = &off_1013AB8D8;
  v4[2] = @"angle";
  v4[3] = @"angleHighlight";
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
  uint64_t v2 = (void *)qword_1016111C0;
  qword_1016111C0 = v1;
}

uint64_t sub_100D78018(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D781A4(uint64_t a1, void *a2)
{
  id v13 = a2;
  id v3 = [*(id *)(a1 + 32) window];
  [v3 setUserInteractionEnabled:1];

  uint64_t v4 = *(void *)(a1 + 48);
  if (v4) {
    (*(void (**)(uint64_t, id))(v4 + 16))(v4, v13);
  }
  id v5 = [RAPReport alloc];
  uint64_t v6 = [*(id *)(a1 + 40) submissionManager];
  unsigned __int8 v7 = [(RAPReport *)v5 initWithContext:v13 submitter:v6];

  id v8 = [(RAPReport *)v7 combinedUserPath];
  [v8 addNativePath:*(unsigned int *)(a1 + 64)];

  id v9 = [RAPWebBundleQuestion alloc];
  id v10 = [(RAPReport *)v7 _context];
  id v11 = [v10 reportedPlace];
  id v12 = [(RAPWebBundleQuestion *)v9 initWithReport:v7 place:v11 questionType:2];

  [(RAPReport *)v7 setInitialQuestion:v12];
  [*(id *)(a1 + 40) _presentWebBundleWithReport:v7 completion:*(void *)(a1 + 56)];
}

void sub_100D78468(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v42 = a3;
  uint64_t v6 = [*(id *)(a1 + 32) window];
  [v6 setUserInteractionEnabled:1];

  uint64_t v7 = *(void *)(a1 + 56);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v5);
  }
  id v8 = [RAPReport alloc];
  id v9 = [*(id *)(a1 + 40) submissionManager];
  id v10 = [(RAPReport *)v8 initWithContext:v5 submitter:v9];

  id v11 = [(RAPReport *)v10 combinedUserPath];
  [v11 addNativePath:*(unsigned int *)(a1 + 72)];

  uint64_t v47 = 0;
  uint64_t v48 = &v47;
  uint64_t v49 = 0x2020000000;
  uint64_t v50 = 0;
  id v12 = [*(id *)(a1 + 48) placeCardItem];
  id v13 = [v12 placeItem];

  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472;
  v43[2] = sub_100D78A30;
  v43[3] = &unk_1012EC608;
  id v14 = v5;
  id v44 = v14;
  id v15 = v13;
  id v45 = v15;
  CFStringRef v46 = &v47;
  uint64_t v16 = objc_retainBlock(v43);
  id v17 = [v14 reportedPlace];
  uint64_t v18 = [v17 mapItem];
  unsigned int v19 = [v18 _geoMapItem];
  unsigned int v20 = [v19 _RAPFlowType] - 1;
  if (v20 > 6) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = qword_100F74058[v20];
  }
  v48[3] = v21;

  uint64_t v22 = v48[3];
  unsigned int v23 = sub_10057754C();
  BOOL v24 = os_log_type_enabled(v23, OS_LOG_TYPE_INFO);
  if (v22)
  {
    if (v24)
    {
      CFStringRef v25 = [v14 reportedPlace];
      unsigned int v26 = [v25 mapItem];
      id v27 = [v26 _geoMapItem];
      [v27 _RAPFlowType];
      uint64_t v28 = _PDRAPFlowTypeForMapItemRAPFlowType();
      if (v28 >= 8)
      {
        int v29 = +[NSString stringWithFormat:@"(unknown: %i)", v28];
      }
      else
      {
        int v29 = *(&off_1013237F8 + (int)v28);
      }
      *(_DWORD *)long long buf = 138412290;
      uint64_t v52 = v29;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Places response contains RAP flow type %@", buf, 0xCu);
    }
    uint64_t v30 = [v14 reportedPlace];
    __int16 v31 = [v30 mapItem];
    unsigned int v32 = [v31 _maps_isHomeWorkOrSchool];

    if (v32)
    {
      uint64_t v33 = sub_10057754C();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Overriding RAP flow type in places response since reported place is HWS", buf, 2u);
      }
      uint64_t v34 = 10;
LABEL_29:

      v48[3] = v34;
      goto LABEL_30;
    }
    if (MapsFeature_IsEnabled_MapsWally()
      && [v15 representsPerson]
      && ([v15 options] & 8) == 0)
    {
      uint64_t v33 = sub_10057754C();
      uint64_t v34 = 1;
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        uint64_t v34 = 1;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Overriding RAP flow type in places response since reported place represents a Waldo person", buf, 2u);
      }
      goto LABEL_29;
    }
    if (([v15 options] & 8) != 0 || (objc_msgSend(v15, "options") & 4) != 0)
    {
      uint64_t v33 = sub_10057754C();
      if (os_log_type_enabled(v33, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Overriding RAP flow type in places response since reported place is a personalized place card", buf, 2u);
      }
      uint64_t v34 = 11;
      goto LABEL_29;
    }
  }
  else
  {
    if (v24)
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "No RAP flow type in places response. Falling back to client logic", buf, 2u);
    }

    ((void (*)(void *))v16[2])(v16);
  }
LABEL_30:
  unint64_t v35 = v48[3];
  if (v35 <= 0x19 && ((1 << v35) & 0x3001200) != 0)
  {
    unsigned __int8 v36 = [RAPWebBundleQuestion alloc];
    CFStringRef v37 = [(RAPReport *)v10 _context];
    CFStringRef v38 = [v37 reportedPlace];
    CFStringRef v39 = [(RAPWebBundleQuestion *)v36 initWithReport:v10 place:v38 poiCorrectionType:2 questionType:v48[3]];
  }
  else
  {
    CFStringRef v41 = [RAPWebBundleQuestion alloc];
    CFStringRef v37 = [(RAPReport *)v10 _context];
    CFStringRef v38 = [v37 reportedPlace];
    CFStringRef v39 = [(RAPWebBundleQuestion *)v41 initWithReport:v10 place:v38 questionType:v48[3]];
  }
  CFStringRef v40 = v39;

  [(RAPReport *)v10 setInitialQuestion:v40];
  [*(id *)(a1 + 40) _presentWebBundleWithReport:v10 completion:*(void *)(a1 + 64)];

  _Block_object_dispose(&v47, 8);
}

void sub_100D78A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D78A30(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) reportedPlace];
  id v3 = [v2 mapItem];
  unsigned __int8 v4 = [v3 _hasTransit];

  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v6 = 26;
LABEL_12:
    *(void *)(v5 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6;
    return;
  }
  if (MapsFeature_IsEnabled_MapsWally()
    && [*(id *)(a1 + 40) representsPerson]
    && ([*(id *)(a1 + 40) options] & 8) == 0)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    goto LABEL_28;
  }
  uint64_t v7 = [*(id *)(a1 + 32) reportedPlace];
  id v8 = [v7 mapItem];
  if (objc_msgSend(v8, "_maps_isLargeAreaPlace"))
  {

LABEL_10:
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    goto LABEL_11;
  }
  id v9 = [*(id *)(a1 + 32) reportedPlace];
  id v10 = [v9 mapItem];
  unsigned int v11 = [v10 _isMapItemTypeSettlement];

  if (v11) {
    goto LABEL_10;
  }
  id v12 = [*(id *)(a1 + 32) reportedPlace];
  id v13 = [v12 mapItem];
  if (([v13 _hasMUID] & 1) == 0)
  {

LABEL_21:
    unsigned int v23 = [*(id *)(a1 + 32) reportedPlace];
    BOOL v24 = [v23 mapItem];
    unsigned int v25 = [v24 _maps_isHomeWorkOrSchool];

    if (v25)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v6 = 10;
      goto LABEL_12;
    }
    BOOL v26 = ([*(id *)(a1 + 40) options] & 8) == 0
       && ((unint64_t)[*(id *)(a1 + 40) options] & 4) == 0;
    id v27 = [*(id *)(a1 + 40) mapItem];
    unsigned int v28 = [v27 _isMapItemTypeAddress];

    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    if (v28 && v26)
    {
LABEL_28:
      uint64_t v6 = 1;
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v6 = 11;
    goto LABEL_12;
  }
  id v14 = [*(id *)(a1 + 32) reportedPlace];
  id v15 = [v14 mapItem];
  unsigned __int8 v16 = [v15 _isMapItemTypeAddress];

  if (v16) {
    goto LABEL_21;
  }
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 12;
  id v17 = [*(id *)(a1 + 32) reportedPlace];
  uint64_t v18 = [v17 mapItem];
  id v32 = [v18 _trailHead];

  if (v32)
  {
    unsigned int v19 = [v32 displayType];
    if (v19)
    {
      BOOL v20 = v19 == 1;
      uint64_t v21 = v32;
      if (!v20) {
        goto LABEL_33;
      }
      uint64_t v22 = 25;
    }
    else
    {
      uint64_t v22 = 24;
      uint64_t v21 = v32;
    }
    goto LABEL_32;
  }
  int v29 = [*(id *)(a1 + 32) reportedPlace];
  uint64_t v30 = [v29 mapItem];
  unsigned int v31 = [v30 _maps_isEVChargingStation];

  uint64_t v21 = 0;
  if (v31)
  {
    uint64_t v22 = 9;
LABEL_32:
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v22;
  }
LABEL_33:
}

void sub_100D78E9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 8);
  *(void *)(v1 + 8) = 0;
}

uint64_t sub_100D79108(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D79260(uint64_t a1)
{
  if (sub_100523398()) {
    goto LABEL_4;
  }
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  id v3 = [WeakRetained topMostPresentedViewController];
  if (sub_1000BBB44(v3) == 5)
  {
    char IsEnabled_RAPCommunityID = MapsFeature_IsEnabled_RAPCommunityID();

    if ((IsEnabled_RAPCommunityID & 1) == 0)
    {
LABEL_4:
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      void v7[2] = sub_100D7937C;
      v7[3] = &unk_10131D240;
      id v5 = *(id *)(a1 + 40);
      void v7[4] = *(void *)(a1 + 32);
      id v8 = v5;
      +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v7];

      return;
    }
  }
  else
  {
  }
  uint64_t v6 = *(void **)(a1 + 32);

  [v6 representReportAProblemIfCurrentlyOngoingAnimated:1];
}

void sub_100D7937C(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (a2)
  {
    id v8 = v6;
    [*(id *)(a1 + 32) representReportAProblemIfCurrentlyOngoingAnimated:1];
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 40);
    if (!v7) {
      goto LABEL_6;
    }
    id v8 = v6;
    (*(void (**)(void))(v7 + 16))();
  }
  id v6 = v8;
LABEL_6:
}

uint64_t sub_100D793F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100D794C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D796A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D796CC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v9 = *(void **)(a1 + 40);
    if (v9)
    {
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_100D797D0;
      void v13[3] = &unk_101323408;
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v16 = a3;
      void v13[4] = v10;
      id v15 = v9;
      id v11 = v7;
      id v14 = v11;
      char v17 = a4;
      id v12 = objc_retainBlock(v13);
      [WeakRetained _dismissSender:v11 withGesture:a4 completion:v12];
    }
  }
}

uint64_t sub_100D797D0(uint64_t a1)
{
  if (*(void *)(a1 + 56) == 1) {
    [*(id *)(a1 + 32) _presentPushNotificationPromptIfNecessary];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100D79850(id a1, BOOL a2, int64_t a3)
{
  if (a2)
  {
    uint64_t v8 = 0;
    id v9 = &v8;
    uint64_t v10 = 0x3032000000;
    id v11 = sub_1001045D0;
    id v12 = sub_100104B58;
    id v13 = 0;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    void v7[2] = sub_100D79994;
    v7[3] = &unk_1012E9390;
    void v7[4] = &v8;
    id v3 = [[PushNotificationPrompt alloc] initWithReason:2 authorizationStatus:a3 completion:v7];
    unsigned __int8 v4 = (void *)v9[5];
    void v9[5] = (uint64_t)v3;

    id v5 = +[UIApplication sharedMapsDelegate];
    id v6 = [v5 chromeViewController];
    [v6 _maps_topMostPresentViewController:v9[5] animated:1 completion:0];

    _Block_object_dispose(&v8, 8);
  }
}

void sub_100D7997C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100D79994(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_100D79BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D79C04(uint64_t a1, void *a2, void *a3)
{
  id v13 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v13);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v8 = [RAPReport alloc];
    id v9 = [WeakRetained submissionManager];
    uint64_t v10 = [(RAPReport *)v8 initWithContext:v13 submitter:v9];

    id v11 = [(RAPReport *)v10 combinedUserPath];
    [v11 addNativePath:201];

    id v12 = [[RAPWebBundleQuestion alloc] initWithReport:v10 questionType:27];
    [(RAPReport *)v10 setInitialQuestion:v12];
    [WeakRetained _presentWebBundleWithReport:v10 completion:*(void *)(a1 + 40)];
  }
}

void sub_100D79E5C(uint64_t a1, void *a2)
{
  id v6 = a2;
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    (*(void (**)(uint64_t, id))(v3 + 16))(v3, v6);
  }
  unsigned __int8 v4 = [*(id *)(*(void *)(a1 + 32) + 8) view];
  id v5 = [v4 window];
  [v5 setUserInteractionEnabled:1];

  [*(id *)(a1 + 32) _presentReportComposerWithAppState:v6 completion:*(void *)(a1 + 48)];
}

void sub_100D7A00C(uint64_t a1, void *a2, void *a3)
{
  id v17 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v17);
  }
  id v7 = [RAPReport alloc];
  uint64_t v8 = [*(id *)(a1 + 32) submissionManager];
  id v9 = [(RAPReport *)v7 initWithContext:v17 submitter:v8];

  uint64_t v10 = [(RAPReport *)v9 combinedUserPath];
  [v10 addNativePath:201];

  unint64_t v11 = *(void *)(a1 + 48) - 2;
  if (v11 > 2) {
    uint64_t v12 = 12;
  }
  else {
    uint64_t v12 = qword_100F74090[v11];
  }
  id v13 = [RAPWebBundleQuestion alloc];
  id v14 = [(RAPReport *)v9 _context];
  id v15 = [v14 reportedPlace];
  uint64_t v16 = [(RAPWebBundleQuestion *)v13 initWithReport:v9 place:v15 poiCorrectionType:2 questionType:v12];

  [(RAPReport *)v9 setInitialQuestion:v16];
  [*(id *)(a1 + 32) _presentWebBundleWithReport:v9 completion:0];
}

void sub_100D7A26C(uint64_t a1, void *a2, void *a3)
{
  id v17 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, id))(v6 + 16))(v6, v17);
  }
  id v7 = [RAPReport alloc];
  uint64_t v8 = [*(id *)(a1 + 32) submissionManager];
  id v9 = [(RAPReport *)v7 initWithContext:v17 submitter:v8];

  uint64_t v10 = [(RAPReport *)v9 combinedUserPath];
  [v10 addNativePath:201];

  unint64_t v11 = *(void *)(a1 + 48) - 1;
  if (v11 > 3) {
    uint64_t v12 = 12;
  }
  else {
    uint64_t v12 = qword_100F740A8[v11];
  }
  id v13 = [RAPWebBundleQuestion alloc];
  id v14 = [(RAPReport *)v9 _context];
  id v15 = [v14 reportedPlace];
  uint64_t v16 = [(RAPWebBundleQuestion *)v13 initWithReport:v9 place:v15 poiCorrectionType:2 questionType:v12];

  [(RAPReport *)v9 setInitialQuestion:v16];
  [*(id *)(a1 + 32) _presentWebBundleWithReport:v9 completion:0];
}

void sub_100D7A538(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 32) + 8);
  id v6 = a2;
  unsigned __int8 v4 = [v3 view];
  id v5 = [v4 window];
  [v5 setUserInteractionEnabled:1];

  [*(id *)(a1 + 32) _presentReportComposerWithAppState:v6 completion:*(void *)(a1 + 40)];
}

id sub_100D7A71C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _dismissReportComposerWithSender:a2 completion:*(void *)(a1 + 40)];
}

void sub_100D7A944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100D7A968(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100D7A980(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v5);
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100D7AB38;
  void v13[3] = &unk_1012F6568;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  int v17 = *(_DWORD *)(a1 + 56);
  id v8 = v5;
  id v14 = v8;
  id v15 = *(id *)(a1 + 40);
  id v9 = objc_retainBlock(v13);
  if (sub_100523014())
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100D7AB90;
    _OWORD v10[3] = &unk_101323518;
    id v11 = *(id *)(a1 + 40);
    uint64_t v12 = v9;
    +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v10];
  }
  else
  {
    ((void (*)(void *))v9[2])(v9);
  }

  objc_destroyWeak(&v16);
}

void sub_100D7AB24(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D7AB38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained presentAddAPlaceViewControllerFromEntryPoint:*(unsigned int *)(a1 + 56) withAppState:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

uint64_t sub_100D7AB90(uint64_t a1, int a2)
{
  uint64_t v2 = 32;
  if (a2) {
    uint64_t v2 = 40;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + v2) + 16))();
}

void sub_100D7AD54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100D7AD70(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0, 0);
}

void sub_100D7AD8C(uint64_t a1, void *a2)
{
  id v11 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  unsigned __int8 v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*(void *)(a1 + 56) == 12)
    {
      [WeakRetained _presentChooseAPlaceWithAppState:v11 entryPoint:*(unsigned int *)(a1 + 64)];
    }
    else
    {
      id v5 = [RAPReport alloc];
      id v6 = [v4 submissionManager];
      uint64_t v7 = [(RAPReport *)v5 initWithContext:v11 submitter:v6];

      id v8 = [(RAPReport *)v7 combinedUserPath];
      [v8 addNativePath:*(unsigned int *)(a1 + 64)];

      id v9 = [[RAPSelfLoadedPlace alloc] initWithMapItem:*(void *)(a1 + 32)];
      uint64_t v10 = [[RAPWebBundleQuestion alloc] initWithReport:v7 place:v9 questionType:*(void *)(a1 + 56)];
      [(RAPReport *)v7 setInitialQuestion:v10];
      [v4 _presentWebBundleWithReport:v7 withOutcomeCompletion:*(void *)(a1 + 40)];
    }
  }
}

void sub_100D7B05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100D7B078(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32), 0, 0);
}

void sub_100D7B094(uint64_t a1, void *a2)
{
  id v13 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    unsigned __int8 v4 = [[RAPSelfLoadedPlace alloc] initWithMapItem:*(void *)(a1 + 32)];
    [v13 setReportedPlace:v4];

    id v5 = [RAPReport alloc];
    id v6 = [WeakRetained submissionManager];
    uint64_t v7 = [(RAPReport *)v5 initWithContext:v13 submitter:v6];

    id v8 = [(RAPReport *)v7 combinedUserPath];
    [v8 addNativePath:*(unsigned int *)(a1 + 56)];

    id v9 = [RAPWebBundleQuestion alloc];
    uint64_t v10 = [(RAPReport *)v7 _context];
    id v11 = [v10 reportedPlace];
    uint64_t v12 = [(RAPWebBundleQuestion *)v9 initWithReport:v7 place:v11 questionType:12];

    [(RAPReport *)v7 setInitialQuestion:v12];
    [WeakRetained _presentWebBundleWithReport:v7 withOutcomeCompletion:*(void *)(a1 + 40)];
  }
}

void sub_100D7B51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D7B538(id *a1, void *a2)
{
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    unsigned __int8 v4 = [RAPReport alloc];
    id v5 = [WeakRetained submissionManager];
    id v6 = [(RAPReport *)v4 initWithContext:v12 submitter:v5];

    uint64_t v7 = [(RAPReport *)v6 combinedUserPath];
    [v7 addNativePath:[a1[4] entryPoint]];

    id v8 = [RAPSelfLoadedPlace alloc];
    id v9 = [a1[5] selectedMapItem];
    uint64_t v10 = [(RAPSelfLoadedPlace *)v8 initWithMapItem:v9];

    id v11 = [[RAPWebBundleQuestion alloc] initWithReport:v6 place:v10 questionType:12];
    [(RAPReport *)v6 setInitialQuestion:v11];
    [WeakRetained _presentWebBundleWithReport:v6 completion:0];
  }
}

void sub_100D7B778(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = sub_10057670C();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 138412290;
      id v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "_createInitialNavigationRapStateWithCompletion failed to create app state with error: %@", buf, 0xCu);
    }

    uint64_t v8 = *(void *)(a1 + 40);
    if (v8) {
      (*(void (**)(uint64_t, void, id))(v8 + 16))(v8, 0, v6);
    }
  }
  else
  {
    id v9 = [RAPReport alloc];
    uint64_t v10 = [*(id *)(a1 + 32) submissionManager];
    id v11 = [(RAPReport *)v9 initWithContext:v5 submitter:v10];

    if (MapsFeature_IsEnabled_RAPCommunityID())
    {
      uint64_t v12 = *(void *)(a1 + 40);
      if (v12) {
        (*(void (**)(uint64_t, RAPReport *, void))(v12 + 16))(v12, v11, 0);
      }
    }
    else
    {
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_100D7B958;
      void v13[3] = &unk_101323760;
      id v16 = *(id *)(a1 + 40);
      id v14 = v11;
      id v15 = 0;
      +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v13];
    }
  }
}

void sub_100D7B958(void *a1, char a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (a2)
  {
    uint64_t v7 = a1[6];
    if (v7) {
      (*(void (**)(uint64_t, void, void))(v7 + 16))(v7, a1[4], a1[5]);
    }
  }
  else
  {
    uint64_t v8 = sub_10057670C();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "User dismissed privacy check.", v11, 2u);
    }

    id v9 = +[NSError GEOErrorWithCode:-2 reason:@"The user dismissed the privacy check."];
    uint64_t v10 = a1[6];
    if (v10) {
      (*(void (**)(uint64_t, void, void *))(v10 + 16))(v10, 0, v9);
    }
  }
}

void sub_100D7BB44(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_100D7BB60(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v10 = sub_10057670C();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        int v11 = 138412290;
        id v12 = v6;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to create report with error: %@. Will abort RAP.", (uint8_t *)&v11, 0xCu);
      }
    }
    else
    {
      uint64_t v8 = [v5 combinedUserPath];
      [v8 addNativePath:*(unsigned int *)(a1 + 48)];

      id v9 = [[RAPDirectionsReportContaineeViewController alloc] initWithReport:v5 directionsReportContext:1];
      [*(id *)(a1 + 32) presentViewController:v9 animated:1];
    }
  }
}

void sub_100D7BEA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 80));
  _Unwind_Resume(a1);
}

void sub_100D7BED4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v5 = [v3 _context];
    id v6 = [v5 directionsHistory];
    uint64_t v7 = [v6 firstObject];
    uint64_t v8 = [v7 recording];

    if (v8)
    {
      id v9 = [v3 combinedUserPath];
      [v9 addNativePath:*(unsigned int *)(a1 + 48)];

      uint64_t v10 = [[RAPDirectionsReportContaineeViewController alloc] initWithReport:v3 directionsReportContext:0];
      if (*(unsigned char *)(a1 + 52))
      {
        id v11 = objc_loadWeakRetained(WeakRetained + 3);
        [v11 presentFromContainerViewController:v10 animated:1];
      }
      else
      {
        [*(id *)(a1 + 32) presentViewController:v10 animated:1];
      }
    }
    else
    {
      id v12 = sub_10057670C();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)id v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Can't present single route flow because the latest route doesn't have a route recording.", v13, 2u);
      }
    }
  }
}

void sub_100D7C038(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (!v5 || v6)
    {
      uint64_t v8 = sub_10057670C();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      {
        int v9 = 138412290;
        id v10 = v6;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to create report with error: %@. Will abort RAP.", (uint8_t *)&v9, 0xCu);
      }
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_100D7C42C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [RAPReport alloc];
  id v5 = [*(id *)(a1 + 32) submissionManager];
  id v6 = [(RAPReport *)v4 initWithContext:v3 submitter:v5];

  uint64_t v7 = [[RAPLookAroundQuestion alloc] initWithReport:v6 parentQuestion:0];
  [(RAPReport *)v6 setInitialQuestion:v7];
  uint64_t v8 = [RAPReportComposerViewController alloc];
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 3221225472;
  id v15 = sub_100D7C56C;
  id v16 = &unk_1013234F0;
  int v9 = *(void **)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 32);
  id v18 = v9;
  id v10 = [(RAPReportComposerViewController *)v8 initWithReport:v6 lookAroundQuestion:v7 completion:&v13];
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = *(void **)(v11 + 8);
  *(void *)(v11 + 8) = v10;

  [*(id *)(a1 + 32) _presentReportComposerWithCompletion:*(void *)(a1 + 40) v13, v14, v15, v16, v17];
}

id sub_100D7C56C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _dismissReportComposerWithSender:a2 completion:*(void *)(a1 + 40)];
}

void sub_100D7C69C(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned __int8 v4 = [RAPReport alloc];
  id v5 = [*(id *)(a1 + 32) submissionManager];
  uint64_t v7 = [(RAPReport *)v4 initWithContext:v3 submitter:v5];

  id v6 = [[RAPPlacecardImageryQuestion alloc] initWithReport:v7 parentQuestion:0 supportedIssueItems:&__NSArray0__struct];
  -[RAPPlacecardImageryQuestion setIssueType:](v6, "setIssueType:", [*(id *)(a1 + 40) type]);
  [(RAPReport *)v7 setInitialQuestion:v6];
  [*(id *)(a1 + 32) _presentPlacecardImageryCommentViewControllerWithReport:v7 question:v6 completion:*(void *)(a1 + 48)];
}

void sub_100D7C8CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = [RAPReport alloc];
  uint64_t v8 = [*(id *)(a1 + 32) submissionManager];
  int v9 = [(RAPReport *)v7 initWithContext:v5 submitter:v8];

  id v10 = [[RAPPlacecardImageryController alloc] initWithReport:v9 layoutManager:*(void *)(a1 + 40)];
  uint64_t v11 = *(void *)(a1 + 32);
  id v12 = *(void **)(v11 + 16);
  *(void *)(v11 + 16) = v10;

  uint64_t v13 = *(void *)(a1 + 48);
  if (v13)
  {
    uint64_t v14 = [*(id *)(*(void *)(a1 + 32) + 16) alertController];
    id v15 = [v14 popoverPresentationController];
    (*(void (**)(uint64_t, void *))(v13 + 16))(v13, v15);
  }
  objc_initWeak(&location, *(id *)(a1 + 32));
  id v16 = *(void **)(*(void *)(a1 + 32) + 16);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_100D7CAE0;
  v18[3] = &unk_1013236A8;
  objc_copyWeak(&v20, &location);
  id v19 = *(id *)(a1 + 56);
  [v16 setCompletionHandler:v18];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100D7CB6C;
  v17[3] = &unk_1012E5D08;
  v17[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v17);

  objc_destroyWeak(&v20);
  objc_destroyWeak(&location);
}

void sub_100D7CAC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D7CAE0(uint64_t a1, int a2, void *a3, void *a4)
{
  id v10 = a3;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v9 = WeakRetained;
  if (WeakRetained && a2) {
    [WeakRetained _presentPlacecardImageryCommentViewControllerWithReport:v10 question:v7 completion:*(void *)(a1 + 32)];
  }
}

void sub_100D7CB6C(uint64_t a1)
{
  id v1 = *(id **)(a1 + 32);
  id v2 = [v1[2] alertController];
  [v1 presentViewController:v2 animated:1];
}

void sub_100D7CCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D7CD14(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _dismissReportComposerWithSender:v5 completion:*(void *)(a1 + 32)];
  }
}

void sub_100D7CE48(void *a1, int a2)
{
  if (a2)
  {
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100D7CEF4;
    v4[3] = &unk_101319C08;
    id v2 = (void *)a1[4];
    id v3 = (void *)a1[6];
    void v4[4] = a1[5];
    id v5 = v3;
    [v2 submitWithPrivacyRequestHandler:&stru_101323718 willStartSubmitting:v4 didFinishSubmitting:&stru_101323738];
  }
}

uint64_t sub_100D7CEF4(uint64_t a1)
{
  [*(id *)(a1 + 32) _presentLightweightFeedbackAcknowledgmentScreen];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100D7D258(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100D7D274(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  if (WeakRetained)
  {
    id v44 = v6;
    uint64_t v8 = [RAPReport alloc];
    id v43 = WeakRetained;
    int v9 = [WeakRetained submissionManager];
    id v10 = [(RAPReport *)v8 initWithContext:v5 submitter:v9];

    uint64_t v11 = [(RAPReport *)v10 combinedUserPath];
    [v11 addNativePath:40];

    id v12 = [[RAPCuratedCollectionQuestion alloc] initWithReport:v10 parentQuestion:0];
    [(RAPReport *)v10 setInitialQuestion:v12];
    v54[0] = _NSConcreteStackBlock;
    v54[1] = 3221225472;
    v54[2] = sub_100D7D7C8;
    v54[3] = &unk_1012EC980;
    objc_copyWeak(v58, a1 + 7);
    uint64_t v13 = v10;
    uint64_t v55 = v13;
    uint64_t v14 = v12;
    id v56 = v14;
    id v57 = a1[6];
    id v15 = objc_retainBlock(v54);
    id v16 = objc_alloc_init((Class)UIAlertController);
    uint64_t v17 = +[NSBundle mainBundle];
    id v18 = [v17 localizedStringForKey:@"Report an issue with a [Curated Collections RAP]" value:@"localized string not found" table:0];
    [v16 setTitle:v18];

    id v19 = +[NSBundle mainBundle];
    id v20 = [v19 localizedStringForKey:@"Guide [Curated Collection RAP]" value:@"localized string not found" table:0];
    v52[0] = _NSConcreteStackBlock;
    v52[1] = 3221225472;
    v52[2] = sub_100D7D950;
    v52[3] = &unk_1012E6E08;
    id v42 = v15;
    id v53 = v42;
    uint64_t v21 = +[UIAlertAction actionWithTitle:v20 style:0 handler:v52];
    [v16 addAction:v21];

    uint64_t v22 = +[NSBundle mainBundle];
    unsigned int v23 = [v22 localizedStringForKey:@"Individual Place [RAP Curated Collections]" value:@"localized string not found" table:0];
    v47[0] = _NSConcreteStackBlock;
    v47[1] = 3221225472;
    v47[2] = sub_100D7D9A4;
    v47[3] = &unk_101323788;
    BOOL v24 = v14;
    uint64_t v48 = v24;
    objc_copyWeak(&v51, a1 + 7);
    unsigned int v25 = v13;
    uint64_t v49 = v25;
    id v50 = a1[6];
    BOOL v26 = +[UIAlertAction actionWithTitle:v23 style:0 handler:v47];
    [v16 addAction:v26];

    id v27 = +[NSBundle mainBundle];
    unsigned int v28 = [v27 localizedStringForKey:@"Cancel [RAP Curated Collections]" value:@"localized string not found" table:0];
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472;
    v45[2] = sub_100D7DB84;
    void v45[3] = &unk_1012E6E08;
    id v46 = a1[6];
    int v29 = +[UIAlertAction actionWithTitle:v28 style:1 handler:v45];
    [v16 addAction:v29];

    id v30 = a1[4];
    unsigned int v31 = [v16 popoverPresentationController];
    [v31 setSourceView:v30];

    [a1[4] bounds];
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
    CFStringRef v40 = [v16 popoverPresentationController];
    [v40 setSourceRect:v33, v35, v37, v39];

    CFStringRef v41 = [v16 popoverPresentationController];
    [v41 setPermittedArrowDirections:15];

    [a1[5] presentViewController:v16 animated:1];
    objc_destroyWeak(&v51);

    objc_destroyWeak(v58);
    id v6 = v44;
    id WeakRetained = v43;
  }
}

void sub_100D7D7A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  objc_destroyWeak(v13);
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

void sub_100D7D7C8(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    unsigned __int8 v4 = [RAPReportComposerViewController alloc];
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    int v9 = _NSConcreteStackBlock;
    uint64_t v10 = 3221225472;
    uint64_t v11 = sub_100D7D8E8;
    id v12 = &unk_1013236F8;
    objc_copyWeak(&v14, v2);
    id v13 = *(id *)(a1 + 48);
    id v7 = [(RAPReportComposerViewController *)v4 initWithReport:v5 curatedCollectionQuestion:v6 completion:&v9];
    uint64_t v8 = (void *)WeakRetained[1];
    WeakRetained[1] = v7;

    [WeakRetained _presentReportComposerWithCompletion:*(void *)(a1 + 48) v9, v10, v11, v12];
    objc_destroyWeak(&v14);
  }
}

void sub_100D7D8D0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D7D8E8(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _dismissReportComposerWithSender:v5 completion:*(void *)(a1 + 32)];
  }
}

uint64_t sub_100D7D950(uint64_t a1)
{
  +[GEOAPPortal captureUserAction:232 target:259 value:0];
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v2();
}

void sub_100D7D9A4(uint64_t a1, void *a2)
{
  id v3 = a2;
  +[GEOAPPortal captureUserAction:221 target:259 value:0];
  [*(id *)(a1 + 32) setSelectedQuestionType:3];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v5 = [RAPCuratedCollectionPOISelectionViewController alloc];
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    id v13 = sub_100D7DB18;
    id v14 = &unk_1013236F8;
    objc_copyWeak(&v16, (id *)(a1 + 56));
    id v15 = *(id *)(a1 + 48);
    uint64_t v8 = [(RAPCuratedCollectionPOISelectionViewController *)v5 initWithReport:v6 parentQuestion:v7 completion:&v11];
    id v9 = objc_alloc((Class)UINavigationController);
    id v10 = [v9 initWithRootViewController:v8 v11, v12, v13, v14];
    [v10 setModalPresentationStyle:2];
    [WeakRetained presentViewController:v10 animated:1];

    objc_destroyWeak(&v16);
  }
}

void sub_100D7DB00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D7DB18(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned __int8 v4 = WeakRetained;
  if (WeakRetained) {
    [WeakRetained _dismissSender:v5 withGesture:0 completion:*(void *)(a1 + 32)];
  }
}

uint64_t sub_100D7DB84(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_100D7DDD8(uint64_t a1)
{
  return [*(id *)(a1 + 32) presentViewController:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48)];
}

void sub_100D7DDE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained presentViewController:*(void *)(a1 + 40) animated:*(unsigned __int8 *)(a1 + 48)];
}

void sub_100D7DFD8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100D7DFFC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  void v12[2] = sub_100D7E1B0;
  void v12[3] = &unk_1013237D8;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  int v17 = *(_DWORD *)(a1 + 56);
  id v13 = *(id *)(a1 + 32);
  id v7 = v5;
  id v14 = v7;
  id v15 = *(id *)(a1 + 40);
  uint64_t v8 = objc_retainBlock(v12);
  if (sub_100523014())
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_100D7E20C;
    v9[3] = &unk_101323518;
    id v10 = *(id *)(a1 + 40);
    uint64_t v11 = v8;
    +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v9];
  }
  else
  {
    ((void (*)(void *))v8[2])(v8);
  }

  objc_destroyWeak(&v16);
}

void sub_100D7E19C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D7E1B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained presentAddToMapsFromSearchEntryPoint:*(unsigned int *)(a1 + 64) result:*(void *)(a1 + 32) withAppState:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
    id WeakRetained = v3;
  }
}

uint64_t sub_100D7E20C(uint64_t a1, int a2)
{
  uint64_t v2 = 32;
  if (a2) {
    uint64_t v2 = 40;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + v2) + 16))();
}

void sub_100D7E488(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100D7E4AC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(a1 + 32);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v5);
  }
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100D7E664;
  void v13[3] = &unk_1012F6568;
  objc_copyWeak(&v16, (id *)(a1 + 48));
  int v17 = *(_DWORD *)(a1 + 56);
  id v8 = v5;
  id v14 = v8;
  id v15 = *(id *)(a1 + 40);
  id v9 = objc_retainBlock(v13);
  if (sub_100523014())
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100D7E6BC;
    _OWORD v10[3] = &unk_101323518;
    id v11 = *(id *)(a1 + 40);
    uint64_t v12 = v9;
    +[RAPPrivacy performPrivacyCheckWithAppearance:4 completion:v10];
  }
  else
  {
    ((void (*)(void *))v9[2])(v9);
  }

  objc_destroyWeak(&v16);
}

void sub_100D7E650(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D7E664(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained presentPlaceEnrichmentRAPWithTarget:*(unsigned int *)(a1 + 56) withAppState:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
    id WeakRetained = v3;
  }
}

uint64_t sub_100D7E6BC(uint64_t a1, int a2)
{
  uint64_t v2 = 32;
  if (a2) {
    uint64_t v2 = 40;
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + v2) + 16))();
}

NSString *__cdecl sub_100D7F144(id a1, MKServerFormattedString *a2, unint64_t a3)
{
  return (NSString *)[(MKServerFormattedString *)a2 debugDescription];
}

NSString *__cdecl sub_100D7F14C(id a1, MKServerFormattedString *a2, unint64_t a3)
{
  return (NSString *)[(MKServerFormattedString *)a2 debugDescription];
}

void sub_100D80BC4(id a1, id a2, id a3)
{
}

void sub_100D82580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t sub_100D825C0(uint64_t a1, uint64_t a2)
{
  if (qword_1015F38F8 == a2)
  {
    id v3 = 0;
  }
  else
  {
    unsigned __int8 v4 = [*(id *)(a1 + 32) objectAtIndexedSubscript:a2];
    id v3 = (__CFString *)[v4 unsignedIntegerValue];
  }
  id v5 = sub_10057741C();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    id v6 = sub_100D82794(v3);
    LODWORD(v20) = 138412290;
    *(void *)((char *)&v20 + 4) = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "promptOutcome=%@", (uint8_t *)&v20, 0xCu);
  }
  switch((unint64_t)v3)
  {
    case 0uLL:
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
      id v13 = *(uint64_t (**)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16);
      long long v14 = *(_OWORD *)(v12 + 48);
      long long v20 = *(_OWORD *)(v12 + 32);
      long long v21 = v14;
      long long v22 = *(_OWORD *)(v12 + 64);
      uint64_t v23 = *(void *)(v12 + 80);
      return v13(v11, &v20, 1, v7, v8, v9, v10);
    case 1uLL:
      if (*(void *)(a1 + 56) != 3 && !*(unsigned char *)(a1 + 64)) {
        goto LABEL_12;
      }
      goto LABEL_10;
    case 2uLL:
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 32) = 1;
      goto LABEL_12;
    case 3uLL:
LABEL_10:
      *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) = 2;
      goto LABEL_12;
    default:
LABEL_12:
      uint64_t v16 = *(void *)(a1 + 40);
      uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8);
      id v18 = *(uint64_t (**)(uint64_t, long long *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 16);
      long long v19 = *(_OWORD *)(v17 + 48);
      long long v20 = *(_OWORD *)(v17 + 32);
      long long v21 = v19;
      long long v22 = *(_OWORD *)(v17 + 64);
      uint64_t v23 = *(void *)(v17 + 80);
      return v18(v16, &v20, 0, v7, v8, v9, v10);
  }
}

__CFString *sub_100D82794(__CFString *result)
{
  if ((unint64_t)result <= 3) {
    return off_101323908[(void)result];
  }
  return result;
}

void sub_100D82DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_100D82DF4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(id *)(a2 + 8);
  *(void *)(a1 + 16) = *(id *)(a2 + 16);
  *(void *)(a1 + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(id *)(a2 + 24);
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  *(void *)(a1 + 40) = *(id *)(a2 + 40);
  *(void *)(a1 + 48) = *(id *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(id *)(a2 + 64);
  id result = *(id *)(a2 + 72);
  *(void *)(a1 + 72) = result;
  return result;
}

void sub_100D82F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D82F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D830A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D831BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D835B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D837AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D8386C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D839D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83D2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003B5EAC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100D83E5C(_Unwind_Exception *a1)
{
  sub_1003B5EAC(v1);
  _Unwind_Resume(a1);
}

void sub_100D8400C(_Unwind_Exception *exception_object)
{
}

id sub_100D84790(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 64);
  v6.receiver = *(id *)(a1 + 48);
  v6.super_class = (Class)MacBaseActionCoordinator;
  return [super viewController:v1 selectPersonalizedItem:v2 source:v3 saveSelectionState:v4];
}

id sub_100D848D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  v5.receiver = *(id *)(a1 + 56);
  v5.super_class = (Class)MacBaseActionCoordinator;
  return [super viewController:v1 doSearchItem:v2 withUserInfo:v3];
}

id sub_100D84A18(uint64_t a1)
{
  uint64_t v2 = sub_1000AA148();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 56);
    *(_DWORD *)long long buf = 138412546;
    uint64_t v14 = v3;
    __int16 v15 = 2048;
    uint64_t v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Will Present Single Result: %@, source: %lu", buf, 0x16u);
  }

  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 65);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 66);
  v12.receiver = *(id *)(a1 + 48);
  v12.super_class = (Class)MacBaseActionCoordinator;
  return [super viewController:v5 selectSearchResult:v6 addToHistory:v7 source:v8 saveSelectionState:v9 replaceCurrentCard:v10];
}

MapsAppTest *__cdecl sub_100D8700C(id a1, NSString *a2, MapsAppTesting *a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  uint64_t v7 = a3;
  uint64_t v8 = a4;
  if ([(NSString *)v6 rangeOfString:@"switch"])
  {
    if ([(NSString *)v6 rangeOfString:@"capture"])
    {
      if ([(NSString *)v6 rangeOfString:@"tileData"])
      {
        if ([(NSString *)v6 rangeOfString:@"flyovertour"])
        {
          if ([(NSString *)v6 rangeOfString:@"flyover"])
          {
            if ([(NSString *)v6 rangeOfString:@"drivingRoute"])
            {
              if ([(NSString *)v6 rangeOfString:@"route"])
              {
                if ([(NSString *)v6 rangeOfString:@"vlf"])
                {
                  if ([(NSString *)v6 rangeOfString:@"PedestrianAR"])
                  {
                    id v9 = 0;
                    goto LABEL_23;
                  }
                  uint64_t v10 = off_1012D3CA8;
                }
                else
                {
                  uint64_t v10 = off_1012D3E58;
                }
              }
              else
              {
                unsigned int v11 = [(NSString *)v6 containsString:@"-transit"];
                uint64_t v10 = off_1012D3DE8;
                if (v11) {
                  uint64_t v10 = off_1012D3E50;
                }
              }
            }
            else
            {
              uint64_t v10 = off_1012D3D00;
            }
          }
          else
          {
            uint64_t v10 = off_1012D3D20;
          }
        }
        else
        {
          uint64_t v10 = off_1012D3D28;
        }
      }
      else
      {
        uint64_t v10 = off_1012D3E40;
      }
    }
    else
    {
      uint64_t v10 = off_1012D3CC0;
    }
  }
  else
  {
    uint64_t v10 = off_1012D3E30;
  }
  id v9 = [objc_alloc(*v10) initWithApplication:v7 testName:v6 options:v8];
LABEL_23:

  return (MapsAppTest *)v9;
}

void sub_100D87588(id a1)
{
  uint64_t v1 = objc_opt_new();
  uint64_t v2 = (void *)qword_1016111C8;
  qword_1016111C8 = v1;

  uint64_t v3 = (void *)qword_1016111C8;

  [v3 setDateFormat:@"yyyy'-'MM'-'dd'T'HH':'mm':'ss"];
}

void sub_100D87AAC(uint64_t a1)
{
  id v6 = +[MapsFavoritesManager sharedManager];
  uint64_t v2 = [v6 shortcuts];
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(v4 + 16);
  *(void *)(v4 + 16) = v3;
}

void sub_100D87B20(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_100D87BDC;
    v6[3] = &unk_1012E5D58;
    id v7 = *(id *)(a1 + 32);
    id v8 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
  }
}

void sub_100D87BDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 40) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = v2;
}

void sub_100D889C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v20 - 72));
  _Unwind_Resume(a1);
}

id sub_100D88A14(uint64_t a1)
{
  return [*(id *)(a1 + 32) _saveFavorite:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_100D88A24(uint64_t a1, int a2)
{
  char v2 = a2;
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    unsigned int v5 = [WeakRetained moveToPreferredIndexInFavorites];

    if (v5)
    {
      id v6 = objc_loadWeakRetained((id *)(a1 + 48));
      id v7 = objc_loadWeakRetained((id *)(a1 + 40));
      id v8 = [v7 shortcut];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      v15[2] = sub_100D88BDC;
      v15[3] = &unk_1012E6998;
      objc_copyWeak(&v16, (id *)(a1 + 40));
      [v6 moveShortcutToFront:v8 handler:v15];

      objc_destroyWeak(&v16);
    }
    else
    {
      id v9 = objc_loadWeakRetained((id *)(a1 + 40));
      [v9 _touchMapsSuggestionsEngine];
    }
  }
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100D88C1C;
  _OWORD v10[3] = &unk_101323A68;
  id v11 = *(id *)(a1 + 32);
  char v13 = v2;
  objc_copyWeak(&v12, (id *)(a1 + 40));
  char v14 = *(unsigned char *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
  objc_destroyWeak(&v12);
}

void sub_100D88BC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D88BDC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _touchMapsSuggestionsEngine];
}

void sub_100D88C1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    (*(void (**)(uint64_t, void))(v2 + 16))(v2, *(unsigned __int8 *)(a1 + 48));
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = [WeakRetained completionHandler];

  if (v4)
  {
    id v5 = objc_loadWeakRetained((id *)(a1 + 40));
    id v6 = [v5 completionHandler];
    v6[2]();
  }
  if (*(unsigned char *)(a1 + 49))
  {
    id v7 = objc_loadWeakRetained((id *)(a1 + 40));
    [(id)objc_opt_class() captureCreateFavoriteAction];
  }
}

void sub_100D88DEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100D88E08(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    if (!v3 && [WeakRetained moveToPreferredIndexInFavorites])
    {
      id v6 = +[MapsFavoritesManager sharedManager];
      id v7 = [v6 shortcuts];

      [*(id *)(a1 + 32) moveToPreferredIndexWith:v7 completion:&stru_101323AB0];
    }
    uint64_t v8 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v8 + 32)) {
      char v9 = 0;
    }
    else {
      char v9 = [*(id *)(v8 + 72) isShortcutForSetup] ^ 1;
    }
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    void v12[2] = sub_100D88F50;
    void v12[3] = &unk_101323AD8;
    id v15 = *(id *)(a1 + 48);
    id v10 = v3;
    uint64_t v11 = *(void *)(a1 + 40);
    id v13 = v10;
    uint64_t v14 = v11;
    char v16 = v9;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
  }
}

void sub_100D88F50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(uint64_t, BOOL))(v2 + 16))(v2, *(void *)(a1 + 32) == 0);
  }
  id v3 = [*(id *)(a1 + 40) completionHandler];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 40) completionHandler];
    v4[2]();
  }
  if (*(unsigned char *)(a1 + 56))
  {
    id v5 = objc_opt_class();
    [v5 captureCreateFavoriteAction];
  }
}

void sub_100D891F8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100D89228(uint64_t a1, void *a2)
{
  id v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100D892D4;
  v6[3] = &unk_1012E5F78;
  id v4 = *(id *)(a1 + 32);
  id v7 = v3;
  id v8 = v4;
  id v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

uint64_t sub_100D892D4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 40);
  if (result) {
    return (*(uint64_t (**)(uint64_t, BOOL))(result + 16))(result, *(void *)(a1 + 32) == 0);
  }
  return result;
}

void sub_100D892FC(uint64_t a1, int a2)
{
  char v2 = a2;
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _touchMapsSuggestionsEngine];
  }
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100D893B4;
  _OWORD v5[3] = &unk_1012E9AD0;
  id v6 = *(id *)(a1 + 32);
  char v7 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
}

uint64_t sub_100D893B4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, *(unsigned __int8 *)(a1 + 40));
  }
  return result;
}

void sub_100D89670(id a1, NSArray *a2, NSError *a3)
{
  id v4 = a2;
  id v5 = a3;
  if (!v5)
  {
    uint64_t v11 = 0;
    id v12 = &v11;
    uint64_t v13 = 0x2020000000;
    uint64_t v14 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100D897BC;
    _OWORD v10[3] = &unk_1012EB568;
    void v10[4] = &v11;
    [(NSArray *)v4 enumerateObjectsUsingBlock:v10];
    uint64_t v6 = v12[3];
    if ((unint64_t)v6 >= 0xF) {
      int v7 = 15;
    }
    else {
      int v7 = 10;
    }
    if ((unint64_t)v6 >= 0xA) {
      unsigned int v8 = v7;
    }
    else {
      unsigned int v8 = 5;
    }
    if (v6 <= 4) {
      uint64_t v6 = v6;
    }
    else {
      uint64_t v6 = v8;
    }
    char v9 = +[NSString stringWithFormat:@"%d", v6];
    +[GEOAPPortal captureUserAction:2052 target:0 value:v9];

    _Block_object_dispose(&v11, 8);
  }
}

void sub_100D897A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100D897BC(uint64_t a1, void *a2)
{
  id result = [a2 type];
  if (result == (id)6 || result == (id)1) {
    ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  return result;
}

id sub_100D899B8()
{
  return +[UIColor _carSystemQuaternaryColor];
}

id sub_100D899C4(char a1)
{
  char v2 = +[UIColor systemGreenColor];
  id v3 = v2;
  if ((a1 & 1) == 0)
  {
    uint64_t v4 = [v2 colorWithAlphaComponent:0.200000003];

    id v3 = (void *)v4;
  }

  return v3;
}

id sub_100D89A30(char a1)
{
  char v2 = +[UIColor systemBlueColor];
  id v3 = v2;
  if ((a1 & 1) == 0)
  {
    uint64_t v4 = [v2 colorWithAlphaComponent:0.200000003];

    id v3 = (void *)v4;
  }

  return v3;
}

id sub_100D89A9C(char a1)
{
  if (a1)
  {
    uint64_t v1 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:1];
    char v2 = +[UITraitCollection traitCollectionWithUserInterfaceStyle:0];
    v8[0] = v1;
    id v3 = +[UIColor systemGray2Color];
    v8[1] = v2;
    v9[0] = v3;
    uint64_t v4 = +[UIColor systemGrayColor];
    v9[1] = v4;
    id v5 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:2];

    uint64_t v6 = +[UIColor _dynamicColorWithColorsByTraitCollection:v5];
  }
  else
  {
    uint64_t v6 = +[UIColor colorWithWhite:1.0 alpha:0.150000006];
  }

  return v6;
}

id sub_100D89BDC()
{
  uint64_t v0 = +[NSBundle mainBundle];
  uint64_t v1 = +[UIColor colorNamed:@"CarHairlineOverlayBackgroundColor" inBundle:v0 compatibleWithTraitCollection:0];

  return v1;
}

id sub_100D89C4C(char a1)
{
  if (a1) {
    +[UIColor labelColor];
  }
  else {
  uint64_t v1 = +[UIColor systemWhiteColor];
  }

  return v1;
}

id sub_100D89C94(char a1)
{
  if (a1) {
    +[UIColor _carSystemPrimaryColor];
  }
  else {
  uint64_t v1 = +[UIColor colorWithWhite:1.0 alpha:0.800000012];
  }

  return v1;
}

void sub_100D89D88(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  char v2 = (void *)qword_1016111D8;
  qword_1016111D8 = (uint64_t)v1;
}

void sub_100D8A580(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _refreshFreshSuggestions:*(void *)(a1 + 32)];
}

id sub_100D8ACF4(id a1, MSPSharedTripContact *a2, unint64_t a3)
{
  id v3 = [(MSPSharedTripContact *)a2 contact];
  uint64_t v4 = [v3 identifier];

  return v4;
}

id sub_100D8AD44(uint64_t a1, void *a2)
{
  char v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v2 contact];
  id v5 = [v4 identifier];
  id v6 = [v3 isEqualToString:v5];

  return v6;
}

void sub_100D8AE88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _provideFeedbackForContact:*(void *)(a1 + 32)];
}

void sub_100D8B1A0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _provideAbandonmentFeedback];
}

void sub_100D8B3D8(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D8B488;
  v4[3] = &unk_1012EDF70;
  id v5 = *(id *)(a1 + 32);
  id v3 = [a2 addCheckmarkRowsGroupForConfigKey:NavigationConfig_TracePlaybackDefaultSpeedMultiplier[0] content:NavigationConfig_TracePlaybackDefaultSpeedMultiplier[1] get:v4 set:&stru_101323B88 change:0];
}

void sub_100D8B488(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v4 = *(id *)(a1 + 32);
  id v5 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v13;
    do
    {
      for (unint64_t i = 0; i != v6; unint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void *)(*((void *)&v12 + 1) + 8 * i);
        id v10 = +[NSString stringWithFormat:@"%@x", v9];
        id v11 = [v3 addRowWithTitle:v10 value:v9];
      }
      id v6 = [v4 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v6);
  }
}

id sub_100D8B5D0(id a1)
{
  GEOConfigGetDouble();
  if (v1 <= 0.0)
  {
    char v2 = &off_1013AB980;
  }
  else
  {
    +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    char v2 = (_UNKNOWN **)objc_claimAutoreleasedReturnValue();
  }

  return v2;
}

void sub_100D8CE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D8CE30(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = *(void **)(a1 + 32);
    id v6 = [WeakRetained contact];

    if (v5 == v6)
    {
      [v4[3] setImage:v7];
      [v4[3] setContentMode:2];
    }
  }
}

void sub_100D8DE48(uint64_t a1, void *a2, uint64_t a3)
{
  if (!a3)
  {
    id v9 = [a2 firstObject];
    uint64_t v5 = *(void *)(a1 + 40);
    id v6 = [Flyover alloc];
    id v7 = [*(id *)(a1 + 32) userMessage];
    unsigned int v8 = [(Flyover *)v6 initWithAnnouncement:v7 mapItem:v9 animationID:*(void *)(a1 + 48)];
    (*(void (**)(uint64_t, Flyover *))(v5 + 16))(v5, v8);
  }
}

void sub_100D8E168(uint64_t a1)
{
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = (id *)(WeakRetained + 88);
    if (v4 != (void *)v3[11])
    {
      id v7 = v3;
      objc_storeStrong(v5, v4);
      id v6 = [v7 delegate];
      [v6 source:v7 didUpdateAvailability:*(void *)(a1 + 32) != 0];

      uint64_t v3 = v7;
    }
  }
}

void sub_100D8E3A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D8E3C4(uint64_t a1, char a2)
{
  uint64_t v3 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D8E468;
  v4[3] = &unk_1012E6830;
  objc_copyWeak(&v5, (id *)(a1 + 40));
  char v6 = a2;
  dispatch_async(v3, v4);
  objc_destroyWeak(&v5);
}

void sub_100D8E468(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v3 = *(unsigned __int8 *)(a1 + 40);
    id v4 = sub_100021338();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_INFO);
    if (v3)
    {
      if (v5)
      {
        *(_WORD *)char v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Route Planning - User is eligible for Transit + Pay in Route Planning", v6, 2u);
      }

      [WeakRetained _updateAvailability];
    }
    else
    {
      if (v5)
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Route Planning - User is not eligible for Transit + Pay", buf, 2u);
      }

      [WeakRetained _tearDown];
    }
  }
}

void sub_100D8E7B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D8E7D4(uint64_t a1, char a2, char a3)
{
  char v6 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100D8E8A0;
  block[3] = &unk_101323BB0;
  objc_copyWeak(&v9, (id *)(a1 + 48));
  char v10 = a2;
  id v8 = *(id *)(a1 + 40);
  char v11 = a3;
  dispatch_async(v6, block);

  objc_destroyWeak(&v9);
}

void sub_100D8E8A0(uint64_t a1)
{
  char v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      void v7[2] = sub_100D8E9E8;
      v7[3] = &unk_1012E6830;
      objc_copyWeak(&v8, v2);
      char v9 = *(unsigned char *)(a1 + 49);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), 1, v4, v5);
      objc_destroyWeak(&v8);
    }
    else
    {
      char v6 = sub_100021338();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Route Planning - User is not eligible for Transit + Pay with no payment card in Wallet", buf, 2u);
      }

      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    }
  }
}

void sub_100D8E9D4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D8E9E8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    char v2 = [[TransitPayFeatureDiscoveryMetadataStore alloc] initWithTouristStatus:*(unsigned __int8 *)(a1 + 40)];
    int v3 = (void *)WeakRetained[3];
    WeakRetained[3] = v2;
  }
}

void sub_100D8EBA0(uint64_t a1)
{
  char v2 = (id *)(a1 + 72);
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 72));
  uint64_t v4 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[2] isTouristHere];
    double v6 = v5;
    MapsSuggestionsConfidenceDontKnow();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = v6 > v7;
    id v8 = sub_100021338();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
        CFStringRef v9 = @"Yes";
      }
      else {
        CFStringRef v9 = @"No";
      }
      *(_DWORD *)long long buf = 138412290;
      CFStringRef v23 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Route Planning - isTourist: %@", buf, 0xCu);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    dispatch_group_wait(*(dispatch_group_t *)(a1 + 32), 0xFFFFFFFFFFFFFFFFLL);
    char v10 = [[TransitPassManager alloc] initWithIsTourist:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)];
    id v11 = v4[5];
    void v4[5] = v10;

    [v4[5] setDelegate:v4];
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    id v12 = v4[5];
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_100D8EE2C;
    v18[3] = &unk_1012E9F40;
    objc_copyWeak(&v21, v2);
    uint64_t v20 = *(void *)(a1 + 64);
    id v19 = *(id *)(a1 + 32);
    [v12 userHasPaymentCardWithHandler:v18];
    long long v13 = *(NSObject **)(a1 + 32);
    long long v14 = *(NSObject **)(*(void *)(a1 + 40) + 8);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100D8EFCC;
    v15[3] = &unk_1012E9F68;
    id v16 = *(id *)(a1 + 48);
    int8x16_t v17 = vextq_s8(*(int8x16_t *)(a1 + 56), *(int8x16_t *)(a1 + 56), 8uLL);
    dispatch_group_notify(v13, v14, v15);

    objc_destroyWeak(&v21);
  }
}

void sub_100D8EE10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D8EE2C(uint64_t a1, char a2)
{
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 48));
  double v5 = WeakRetained;
  if (WeakRetained)
  {
    double v6 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D8EEEC;
    block[3] = &unk_1012E9F18;
    char v11 = a2;
    long long v8 = *(_OWORD *)(a1 + 32);
    id v7 = (id)v8;
    long long v10 = v8;
    dispatch_async(v6, block);
  }
}

void sub_100D8EEEC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(a1 + 48);
  char v2 = sub_100021338();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)) {
      CFStringRef v3 = @"Yes";
    }
    else {
      CFStringRef v3 = @"No";
    }
    int v4 = 138412290;
    CFStringRef v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Route Planning: userHasPaymentCard: %@", (uint8_t *)&v4, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100D8EFCC(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[4] + 16))(a1[4], *(unsigned __int8 *)(*(void *)(a1[5] + 8) + 24), *(unsigned __int8 *)(*(void *)(a1[6] + 8) + 24));
}

void sub_100D8F1E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_100D8F20C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (!WeakRetained) {
    goto LABEL_20;
  }
  uint64_t v3 = sub_100021338();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    LOWORD(v19) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Action Button Tapped in RoutePlanning", (uint8_t *)&v19, 2u);
  }

  switch([*(id *)(a1 + 32) suggestionType])
  {
    case 1u:
    case 2u:
    case 4u:
      if (![*(id *)(a1 + 32) canPresentEducationScreen])
      {
        CFStringRef v9 = sub_100021338();
        if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
          goto LABEL_19;
        }
        LOWORD(v19) = 0;
        long long v10 = "Cannot present education screen because canPresentEducationScreen returned NO";
        goto LABEL_18;
      }
      int v4 = [WeakRetained transitPayActionDelegate];
      CFStringRef v5 = [*(id *)(a1 + 32) educationScreenAssetURLs];
      double v6 = [*(id *)(a1 + 32) educationScreenTitle];
      id v7 = [*(id *)(a1 + 32) educationScreenText];
      [v4 presentEducationScreenWithAssetURLs:v5 titleText:v6 bodyText:v7];

      long long v8 = [*(id *)(a1 + 32) analyticsValue];
      +[GEOAPPortal captureUserAction:308 target:303 value:v8];

      [WeakRetained[3] handleManualTipDismissForMarket:[*(id *)(a1 + 32) suggestionType] tipType:4 sinkType:4];
      [WeakRetained _tearDown];
      goto LABEL_20;
    case 3u:
      char v11 = [*(id *)(a1 + 32) paymentMethods];
      id v12 = [v11 count];

      if (v12)
      {
        [WeakRetained[11] markActionExecuted:1];
        long long v13 = [WeakRetained transitPayActionDelegate];
        long long v14 = [*(id *)(a1 + 32) paymentMethods];
        [v13 presentWalletDCIViewControllerWithTransitSystems:v14 callbackDelegate:WeakRetained];
        goto LABEL_14;
      }
      int8x16_t v17 = sub_100021338();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_FAULT))
      {
        id v18 = [*(id *)(a1 + 32) paymentMethods];
        int v19 = 138412290;
        uint64_t v20 = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_FAULT, "Cannot present DCI flow because modelData.paymentMethods is empty: %@", (uint8_t *)&v19, 0xCu);
      }
      goto LABEL_20;
    case 5u:
      long long v15 = [*(id *)(a1 + 32) paymentMethods];
      if (![v15 count])
      {

LABEL_16:
        CFStringRef v9 = sub_100021338();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
        {
          LOWORD(v19) = 0;
          long long v10 = "Cannot present top-up because we have incomplete data. Did you use the correct TransitPayModelData initializer?";
LABEL_18:
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, v10, (uint8_t *)&v19, 2u);
        }
        goto LABEL_19;
      }
      id v16 = [*(id *)(a1 + 32) topUpPassUniqueID];

      if (!v16) {
        goto LABEL_16;
      }
      [WeakRetained[11] markActionExecuted:1];
      long long v13 = [WeakRetained transitPayActionDelegate];
      long long v14 = [*(id *)(a1 + 32) topUpPassUniqueID];
      [v13 presentWalletTopUpViewControllerWithTransitIdentifier:v14 callbackDelegate:WeakRetained];
LABEL_14:

      CFStringRef v9 = [*(id *)(a1 + 32) analyticsValue];
      +[GEOAPPortal captureUserAction:308 target:303 value:v9];
LABEL_19:

LABEL_20:
      return;
    default:
      goto LABEL_20;
  }
}

void sub_100D8F5C8(id a1)
{
  double v1 = sub_100021338();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)char v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_INFO, "FeatureDiscoveryView handler called, purposely doing nothing", v2, 2u);
  }
}

void sub_100D8F630(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    uint64_t v3 = sub_100021338();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "TipKit dismissed in RoutePlanning", buf, 2u);
    }

    int v4 = [*(id *)(a1 + 32) analyticsValue];
    +[GEOAPPortal captureUserAction:306 target:303 value:v4];

    [WeakRetained[3] handleManualTipDismissForMarket:[*(id *)(a1 + 32) suggestionType] sinkType:4];
    id v5 = objc_alloc_init((Class)NSMutableDictionary);
    double v6 = +[NSNumber numberWithUnsignedLongLong:*(void *)(*(void *)(a1 + 40) + 32)];
    [v5 setObject:v6 forKey:@"TransitPayTipDismissedInRoutePlanningNotificationMarketMUIDKey"];

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100D8F7C8;
    block[3] = &unk_1012E5D08;
    id v9 = v5;
    id v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    [WeakRetained _tearDown];
  }
}

void sub_100D8F7C8(uint64_t a1)
{
  id v3 = +[NSNotificationCenter defaultCenter];
  id v2 = [*(id *)(a1 + 32) copy];
  [v3 postNotificationName:@"TransitPayTipDismissedInRoutePlanningNotification" object:0 userInfo:v2];
}

void sub_100D8FB50(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    if (*((unsigned char *)WeakRetained + 48))
    {
      id v5 = sub_10000A540();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "strongSelf->_isUpdatingAvailability == YES. Returning.", buf, 2u);
      }
    }
    else
    {
      *((unsigned char *)WeakRetained + 48) = 1;
      double v6 = [*(id *)(a1 + 32) routeCollection];
      id v5 = [v6 currentRoute];

      if (v5 && [v5 transportType] == 1)
      {
        id v7 = sub_100021338();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Checking transit pay availability", buf, 2u);
        }

        long long v8 = [v5 routeInitializerData];
        BOOL v24 = [v8 directionsResponse];

        id v9 = [v24 transitPaymentMethodSuggestions];
        long long v10 = [v4 _suggestionsFromPBSuggestions:v9];

        CFStringRef v23 = [v5 transitPaymentMethods];
        char v11 = [v10 firstObject];
        void v4[4] = [v11 marketMUID];

        id v12 = sub_100021338();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
        {
          long long v13 = [v5 origin];
          long long v14 = [v13 name];
          long long v15 = [v5 destination];
          id v16 = [v15 name];
          *(_DWORD *)long long buf = 138412546;
          *(void *)unsigned int v28 = v14;
          *(_WORD *)&v28[8] = 2112;
          id v29 = v16;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Route is between {%@} and {%@}", buf, 0x16u);
        }
        if (v4[5])
        {
          if ([v10 count] && objc_msgSend(v23, "count"))
          {
            int8x16_t v17 = (void *)v4[5];
            v25[0] = _NSConcreteStackBlock;
            v25[1] = 3221225472;
            void v25[2] = sub_100D8FFE0;
            v25[3] = &unk_101323C20;
            void v25[4] = *(void *)(a1 + 32);
            objc_copyWeak(&v26, v2);
            [v17 fetchTransitMessageForRoute:v5 paymentMethods:v23 suggestions:v10 completion:v25];
            objc_destroyWeak(&v26);
          }
          else
          {
            int v19 = sub_100021338();
            if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
            {
              id v20 = [v10 count];
              id v21 = [v23 count];
              *(_DWORD *)long long buf = 134218240;
              *(void *)unsigned int v28 = v20;
              *(_WORD *)&v28[8] = 2048;
              id v29 = v21;
              _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Either Suggestions are absent (%lu) or paymentMethods are absent (%lu). Not going to show the Tip.", buf, 0x16u);
            }

            [v4 _tearDown];
          }
        }
        else
        {
          long long v22 = sub_100021338();
          if (os_log_type_enabled(v22, OS_LOG_TYPE_FAULT))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "_passManager is nil. This should never happen", buf, 2u);
          }

          [v4 _tearDown];
        }
      }
      else
      {
        id v18 = sub_10000A540();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
        {
          *(_DWORD *)long long buf = 67109376;
          *(_DWORD *)unsigned int v28 = v5 == 0;
          *(_WORD *)&void v28[4] = 1024;
          *(_DWORD *)&v28[6] = [v5 transportType] != 1;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Not pinging TransitPassManager because either currentRoute==nil (%d) OR the mode is NOT transit (%d)", buf, 0xEu);
        }

        [v4 _tearDown];
      }
    }
  }
}

void sub_100D8FFC4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100D8FFE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = *(NSObject **)(*(void *)(a1 + 32) + 8);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_100D900D0;
  _OWORD v10[3] = &unk_1012E92F0;
  objc_copyWeak(&v14, (id *)(a1 + 40));
  id v11 = v5;
  id v12 = v6;
  uint64_t v13 = *(void *)(a1 + 32);
  id v8 = v6;
  id v9 = v5;
  dispatch_async(v7, v10);

  objc_destroyWeak(&v14);
}

void sub_100D900D0(uint64_t a1)
{
  id v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  int v4 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[48] = 0;
    id v5 = [WeakRetained routeCollection];
    id v6 = [v5 currentRoute];
    id v7 = *(void **)(a1 + 32);

    if (v6 == v7)
    {
      if (*(void *)(a1 + 40))
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100D9023C;
        block[3] = &unk_1012E9340;
        objc_copyWeak(&v14, v2);
        id v8 = *(id *)(a1 + 40);
        uint64_t v9 = *(void *)(a1 + 48);
        id v12 = v8;
        uint64_t v13 = v9;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

        objc_destroyWeak(&v14);
      }
      else
      {
        long long v10 = sub_100021338();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)long long buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Got callback into RoutePlanning from TransitPassManager and modelData is nil.", buf, 2u);
        }

        [v4 _tearDown];
      }
    }
    else
    {
      [v4 _updateAvailability];
    }
  }
}

void sub_100D9023C(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (!WeakRetained) {
    goto LABEL_14;
  }
  id v4 = WeakRetained[3];
  if (!v4)
  {
    id v12 = sub_100021338();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Route Planning - the metadata store was never created. This should never happen.", (uint8_t *)&v13, 2u);
    }

    goto LABEL_13;
  }
  unsigned __int8 v5 = [v4 shouldDisplayTipInMarket:WeakRetained[4] tipType:[*(id *)(a1 + 32) suggestionType] sinkType:4];
  id v6 = sub_100021338();
  BOOL v7 = os_log_type_enabled(v6, OS_LOG_TYPE_INFO);
  if ((v5 & 1) == 0)
  {
    if (v7)
    {
      LOWORD(v13) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "User has either dismissed the tip recently or has seen the tip more than the set threshold in Route Planning", (uint8_t *)&v13, 2u);
    }

LABEL_13:
    [v3 _tearDown];
    goto LABEL_14;
  }
  if (v7)
  {
    id v8 = [*(id *)(a1 + 32) title];
    uint64_t v9 = [*(id *)(a1 + 32) subtitle];
    int v13 = 138412546;
    id v14 = v8;
    __int16 v15 = 2112;
    id v16 = v9;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "TipKit displayed in RoutePlanning with\nTitle: %@\nSubtitle: %@\n", (uint8_t *)&v13, 0x16u);
  }
  long long v10 = [*(id *)(a1 + 32) analyticsValue];
  +[GEOAPPortal captureUserAction:307 target:303 value:v10];

  [v3[3] handleTipDisplayForMarket:[*(id *)(a1 + 32) suggestionType] tipType:4 sinkType:4];
  id v11 = [v3 _modelFromData:*(void *)(a1 + 32)];
  [v3 setModel:v11];

LABEL_14:
}

void sub_100D90514(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    WeakRetained[48] = 0;
  }
}

void sub_100D90760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D90784(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained[3] handleManualTipDismissForMarket:*(void *)(*(void *)(a1 + 32) + 32) tipType:3 sinkType:4];
    id WeakRetained = v3;
  }
}

uint64_t sub_100D91580(void *a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
    return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
  }
  id v4 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
  unsigned __int8 v5 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
  id v6 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
  BOOL v7 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
  while (2)
  {
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v11);
      *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v12;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + OBJC_IVAR___PBDataReader__error);
    if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
    }
    switch((v10 >> 3))
    {
      case 0x14u:
        *(_WORD *)((char *)a1 + v7[748]) |= 8u;
        unint64_t v17 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v17 <= 0xFFFFFFFFFFFFFFF7 && v17 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v17);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v17 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v18 = 0;
        }
        uint64_t v55 = 4;
        goto LABEL_105;
      case 0x15u:
        *(_WORD *)((char *)a1 + v7[748]) |= 0x20u;
        unint64_t v25 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v25);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v25 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v18 = 0;
        }
        uint64_t v55 = 6;
        goto LABEL_105;
      case 0x16u:
        *(_WORD *)((char *)a1 + v7[748]) |= 0x10u;
        unint64_t v26 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v26);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v26 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v18 = 0;
        }
        uint64_t v55 = 5;
        goto LABEL_105;
      case 0x17u:
        *(_WORD *)((char *)a1 + v7[748]) |= 0x40u;
        unint64_t v27 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
        if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
        {
          uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v27);
          *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v27 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          uint64_t v18 = 0;
        }
        uint64_t v55 = 7;
LABEL_105:
        a1[v55] = v18;
        goto LABEL_106;
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
LABEL_64:
        uint64_t result = PBReaderSkipValueWithTag();
        BOOL v7 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
        if (!result) {
          return result;
        }
        goto LABEL_106;
      case 0x1Eu:
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v21 = 0;
        *(_WORD *)((char *)a1 + v7[748]) |= 0x100u;
        while (2)
        {
          uint64_t v30 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v32 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v30);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v31;
            v21 |= (unint64_t)(v32 & 0x7F) << v28;
            if (v32 < 0)
            {
              v28 += 7;
              BOOL v14 = v29++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v21) = 0;
        }
LABEL_79:
        uint64_t v54 = 88;
        goto LABEL_92;
      case 0x1Fu:
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(_WORD *)((char *)a1 + v7[748]) |= 1u;
        while (2)
        {
          uint64_t v36 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v37 = v36 + 1;
          if (v36 == -1 || v37 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v38 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v36);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v37;
            v35 |= (unint64_t)(v38 & 0x7F) << v33;
            if (v38 < 0)
            {
              v33 += 7;
              BOOL v14 = v34++ >= 9;
              if (v14)
              {
                uint64_t v35 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          uint64_t v35 = 0;
        }
LABEL_83:
        a1[1] = v35;
        goto LABEL_106;
      case 0x20u:
        uint64_t v39 = PBReaderReadString();
        uint64_t v40 = 64;
LABEL_68:
        id v51 = *(void **)((char *)a1 + v40);
        *(void *)((char *)a1 + v40) = v39;

        goto LABEL_69;
      case 0x28u:
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v21 = 0;
        *(_WORD *)((char *)a1 + v7[748]) |= 0x80u;
        while (2)
        {
          uint64_t v43 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v43);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v44;
            v21 |= (unint64_t)(v45 & 0x7F) << v41;
            if (v45 < 0)
            {
              v41 += 7;
              BOOL v14 = v42++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v21) = 0;
        }
LABEL_87:
        uint64_t v54 = 72;
        goto LABEL_92;
      case 0x29u:
        id v46 = v6;
        uint64_t v47 = v5;
        uint64_t v48 = v4;
        uint64_t v49 = objc_alloc_init(SyncedBookmarkRepr);
        [a1 addPlaces:v49];
        if PBReaderPlaceMark() && (sub_100D91580(v49, a2))
        {
          PBReaderRecallMark();

          id v4 = v48;
          unsigned __int8 v5 = v47;
          id v6 = v46;
LABEL_69:
          BOOL v7 = &OBJC_IVAR___NavdRouteLoadingTaskFactory__transportTypeInformation;
LABEL_106:
          if (*(void *)(a2 + OBJC_IVAR___PBDataReader__pos) >= *(void *)(a2 + OBJC_IVAR___PBDataReader__length)) {
            return *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) == 0;
          }
          continue;
        }

        return 0;
      default:
        switch((v10 >> 3))
        {
          case 1u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            break;
          case 2u:
            uint64_t v39 = PBReaderReadString();
            uint64_t v40 = v5[746];
            goto LABEL_68;
          case 4u:
            uint64_t v39 = PBReaderReadString();
            uint64_t v40 = v6[747];
            goto LABEL_68;
          case 0xAu:
            *(_WORD *)((char *)a1 + v7[748]) |= 2u;
            unint64_t v52 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v52);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v52 + 8;
            }
            else
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              uint64_t v18 = 0;
            }
            uint64_t v55 = 2;
            goto LABEL_105;
          case 0xBu:
            *(_WORD *)((char *)a1 + v7[748]) |= 4u;
            unint64_t v53 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
            if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
            {
              uint64_t v18 = *(void *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v53);
              *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v53 + 8;
            }
            else
            {
              *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
              uint64_t v18 = 0;
            }
            uint64_t v55 = 3;
            goto LABEL_105;
          default:
            goto LABEL_64;
        }
        while (2)
        {
          uint64_t v22 = *(void *)(a2 + OBJC_IVAR___PBDataReader__pos);
          unint64_t v23 = v22 + 1;
          if (v22 == -1 || v23 > *(void *)(a2 + OBJC_IVAR___PBDataReader__length))
          {
            *(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + OBJC_IVAR___PBDataReader__bytes) + v22);
            *(void *)(a2 + OBJC_IVAR___PBDataReader__pos) = v23;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + OBJC_IVAR___PBDataReader__error)) {
          LODWORD(v21) = 0;
        }
LABEL_91:
        uint64_t v54 = v4[760];
LABEL_92:
        *(_DWORD *)((char *)a1 + v54) = v21;
        goto LABEL_106;
    }
  }
}

id sub_100D932C0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(*(void *)(a1 + 32) + 984);
  id v4 = a2;
  [v3 removeFromSuperview];
  unsigned __int8 v5 = +[StaleMapEffectView dimmingOverlayForView:v4];

  [v5 setAlpha:0.0];
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 984), v5);

  return v5;
}

id sub_100D9377C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 976) setAlpha:*(double *)(a1 + 40)];
  double v2 = *(double *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 984);

  return [v3 setAlpha:v2];
}

id sub_100D937D8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 48);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100D93858;
  v4[3] = &unk_1012E7D28;
  uint64_t v2 = *(void *)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  return +[UIView _maps_animateForAndromeda:v1 animations:v2 completion:v4];
}

id sub_100D93858(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _acquireChromeDeactivationTokenForLuminanceIfNeeded];
}

void sub_100D946F4(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsStatusBarAppearanceUpdate];
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];

  [*(id *)(a1 + 32) updateMapEdgeInsets];
  id v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];
}

void sub_100D94838(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsStatusBarAppearanceUpdate];
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];

  [*(id *)(a1 + 32) updateMapEdgeInsets];
  id v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];
}

void sub_100D96238(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateLayeringToSignProminent];
  [*(id *)(a1 + 32) _navigationChromeVisibilityChanged];
  [*(id *)(a1 + 32) _updateChildViewLayouts];
  id v3 = [*(id *)(a1 + 32) view];
  uint64_t v2 = [v3 superview];
  [v2 layoutIfNeeded];
}

void sub_100D96630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D96654(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPedestrianARFeatureIntroTeachableMomentCardIfNecessary];
}

void sub_100D96694(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _showPedestrianARRaiseToEnterTeachableMomentCardIfNecessary];
}

id sub_100D968D8(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateChildViewLayouts];
  uint64_t v2 = [*(id *)(a1 + 32) view];
  id v3 = [v2 superview];
  [v3 layoutIfNeeded];

  id v4 = *(void **)(a1 + 32);

  return [v4 _updateSignContainerLeadingConstraint];
}

void sub_100D96DC0(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    id v6 = [v3 navSignViewController];
    if ([v6 isExpanded]) {
      sub_1008265CC();
    }
    else {
    id v4 = sub_100826530();
    }
    unsigned __int8 v5 = [*(id *)(a1 + 32) chromeViewController];
    [v5 setStatusBarAdditionalColor:v4];
  }
  else
  {
    [v3 updateStatusBarColor];
  }
}

void sub_100D975AC(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateChildViewLayouts];
  [*(id *)(a1 + 32) _updateContaineeHiddenIfNeeded];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

void sub_100D97728(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) resumeRouteBanner];
  [v2 showIfNeeded];

  [*(id *)(a1 + 32) _updateChildViewLayouts];
  [*(id *)(a1 + 32) _updateContaineeHiddenIfNeeded];
  id v3 = [*(id *)(a1 + 32) view];
  [v3 layoutIfNeeded];
}

void sub_100D977A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 32);
  BOOL v2 = v1[531] == 0;
  id v4 = [v1 junctionViewController];
  id v3 = [v4 view];
  [v3 setHidden:v2];
}

void sub_100D97A34(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) navSignViewController];
  [v1 clearPartialExpansionAnimated:0];
}

void sub_100D99120(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateRecenterButtonLayout];
  [*(id *)(a1 + 32) setNeedsStatusBarAppearanceUpdate];
  id v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];
}

uint64_t sub_100D99180(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100D99F18(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navSignViewController];
  unsigned __int8 v3 = [v2 isExpanded];

  if ((v3 & 1) == 0)
  {
    [*(id *)(a1 + 32) _usedPortraitTopSpace];
    [*(id *)(*(void *)(a1 + 32) + 440) setConstant:-v4];
  }
  unsigned __int8 v5 = [*(id *)(a1 + 32) indicatorsViewController];
  id v6 = [v5 view];
  [v6 setAlpha:0.0];

  [*(id *)(*(void *)(a1 + 32) + 432) setAlpha:0.0];
  [*(id *)(*(void *)(a1 + 32) + 584) setAlpha:0.0];
  id v7 = [*(id *)(a1 + 32) view];
  [v7 layoutIfNeeded];
}

id sub_100D9A00C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _teardownViewHierarchy];
}

void sub_100D9B56C(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateContaineeHiddenIfNeeded];
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 603)) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = *(unsigned char *)(v2 + 547) != 0;
  }
  [*(id *)(v2 + 432) setHidden:v3];
  double v4 = [*(id *)(a1 + 32) iosBasedChromeViewController];
  [v4 setNeedsUpdateComponent:@"statusBarStyle" animated:1];

  unsigned __int8 v5 = [*(id *)(a1 + 32) iosBasedChromeViewController];
  [v5 setNeedsUpdateComponent:@"StaleMapEffect" animated:1];

  id v6 = [*(id *)(a1 + 32) iosBasedChromeViewController];
  [v6 updateComponentsIfNeeded];
}

void sub_100D9B970(id a1)
{
  uint64_t v3 = objc_opt_class();
  uint64_t v1 = +[NSArray arrayWithObjects:&v3 count:1];
  uint64_t v2 = (void *)qword_1016111E8;
  qword_1016111E8 = v1;
}

id sub_100D9BAF4(uint64_t a1)
{
  [*(id *)(a1 + 32) updateStatusBarColor];
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 updateLaneGuidanceBackgroundColor];
}

void sub_100D9C324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D9C340(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained showJunctionViewIfNeeded];
}

id sub_100D9CAA8(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateChildViewLayouts];
  uint64_t v2 = [*(id *)(a1 + 32) view];
  [v2 layoutIfNeeded];

  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 updateMapEdgeInsets];
}

void sub_100D9DA20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_100D9DA40(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v4 = WeakRetained;
  if (!WeakRetained)
  {
    char v8 = 0;
    goto LABEL_29;
  }
  uint64_t v5 = sub_1000BBB44(WeakRetained);
  unsigned int v6 = [v4 isSelectionBackgroundVisible];
  if ([v4 isHighlighted]) {
    unsigned int v7 = 1;
  }
  else {
    unsigned int v7 = [v4 isFocused];
  }
  unsigned int v9 = [v4 traitCollection];
  id v10 = [v9 activeAppearance];

  char v8 = +[_UIBackgroundViewConfiguration defaultPlainListCellConfigurationForState:a2];
  uint64_t v11 = sub_1000BBB44(v4);
  double v12 = 10.0;
  if (v11 != 5) {
    double v12 = 16.0;
  }
  [v8 setBackgroundInsets:0.0, v12, 0.0, v12];
  uint64_t v13 = sub_1000BBB44(v4);
  double v14 = 13.0;
  if (v13 == 5) {
    double v14 = 5.0;
  }
  [v8 setCornerRadius:v14];
  if (v5 != 5)
  {
    if (v6) {
      +[UIColor quaternarySystemFillColor];
    }
    else {
    uint64_t v15 = +[UIColor secondarySystemGroupedBackgroundColor];
    }
    goto LABEL_26;
  }
  if (v6)
  {
    if (v10 == (id)1)
    {
      if (([v4 hasSelectedStep] | v7)) {
        uint64_t v17 = 10;
      }
      else {
        uint64_t v17 = 1;
      }
    }
    else
    {
      uint64_t v17 = 3;
    }
    goto LABEL_28;
  }
  if (v10 == (id)1) {
    char v16 = v7;
  }
  else {
    char v16 = 0;
  }
  if ((v16 & 1) == 0)
  {
    uint64_t v15 = +[UIColor clearColor];
LABEL_26:
    uint64_t v18 = (void *)v15;
    [v8 setBackgroundColorMode:0];
    [v8 setBackgroundColor:v18];

    goto LABEL_29;
  }
  uint64_t v17 = 4;
LABEL_28:
  [v8 setBackgroundColorMode:v17];
LABEL_29:

  return v8;
}

void sub_100D9E724(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100D9E750(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  double v4 = [v3 sender];

  [WeakRetained _didTapPrimaryActionButton:v4];
}

void sub_100DA075C(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) detailsButton:*(void *)(a1 + 40) *(void *)(a1 + 48) *(void *)(a1 + 56) *(void *)(a1 + 64) *(void *)(a1 + 72) *(void *)(a1 + 80)];
  [v1 setTransform:&v2];
}

void sub_100DA140C(id a1)
{
  id v1 = objc_alloc_init((Class)NSCache);
  long long v2 = (void *)qword_1016111F8;
  qword_1016111F8 = (uint64_t)v1;
}

id sub_100DA4214()
{
  if (qword_101611210 != -1) {
    dispatch_once(&qword_101611210, &stru_101323EF8);
  }
  uint64_t v0 = (void *)qword_101611208;

  return v0;
}

void sub_100DA5364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id a29)
{
}

id sub_100DA5390(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = sub_100DA4214();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    int v14 = 134349056;
    id v15 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[%{public}p] Close button tapped; dismissing",
      (uint8_t *)&v14,
      0xCu);
  }
  unsigned int v6 = (id *)(a1 + 32);
  id v7 = objc_loadWeakRetained(v6);
  char v8 = [v3 sender];

  [v7 handleDismissAction:v8];
  id v9 = objc_loadWeakRetained(v6);
  id v10 = [v9 buttonReplica];
  [v10 removeFromSuperview];

  id v11 = objc_loadWeakRetained(v6);
  double v12 = [v11 arrowContainerView];
  [v12 removeFromSuperview];

  return +[GEOAPPortal captureUserAction:127 target:14 value:0];
}

void sub_100DA6EC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100DA6EE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) buttonReplica];
  id v3 = [v2 layer];
  [v3 setOpacity:0.0];

  id v5 = [*(id *)(a1 + 32) arrowContainerView];
  double v4 = [v5 layer];
  [v4 setOpacity:0.0];
}

void sub_100DA6F80(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained buttonReplica];
  [v3 removeFromSuperview];

  id v5 = objc_loadWeakRetained(v1);
  double v4 = [v5 arrowContainerView];
  [v4 removeFromSuperview];
}

void sub_100DA71FC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.Maps", "PedestrianARFeatureIntroTeachableMomentContaineeViewController");
  uint64_t v2 = (void *)qword_101611208;
  qword_101611208 = (uint64_t)v1;
}

id sub_100DAB2C4(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_100DAB338;
  v3[3] = &unk_1012EE650;
  os_log_t v1 = *(void **)(a1 + 32);
  void v3[4] = *(void *)(a1 + 40);
  return [v1 startWithCompletionHandler:v3];
}

void sub_100DAB338(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100DAB404;
  block[3] = &unk_1012E66E0;
  id v9 = a3;
  id v10 = v5;
  uint64_t v11 = *(void *)(a1 + 32);
  id v6 = v5;
  id v7 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100DAB404(uint64_t result)
{
  if (!*(void *)(result + 32) && *(void *)(result + 40))
  {
    os_log_t v1 = *(void **)(result + 48);
    uint64_t v2 = [*(id *)(result + 40) image];
    [v1 updateWithSnapshot:v2];

    return kdebug_trace();
  }
  return result;
}

void sub_100DAB668(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = +[UITraitCollection _currentTraitCollection];
  +[UITraitCollection _setCurrentTraitCollection:*(void *)(*(void *)(a1 + 32) + 48)];
  id v5 = (CGContext *)[v3 CGContext];
  if ([*(id *)(*(void *)(a1 + 32) + 48) userInterfaceIdiom] != (id)5)
  {
    id v6 = +[UIColor secondarySystemBackgroundColor];
    id v7 = +[UIColor systemBackgroundColor];
    [v6 setFill];
    CGContextFillRect(v5, *(CGRect *)(a1 + 40));
    [v7 setFill];
    CGContextFillRect(v5, *(CGRect *)(a1 + 72));
  }
  if (*(void *)(*(void *)(a1 + 32) + 8))
  {
    CGContextSaveGState(v5);
    memset(&v12, 0, sizeof(v12));
    CGAffineTransformMakeScale(&v12, 1.0, -1.0);
    CGFloat v8 = -*(double *)(a1 + 128);
    CGAffineTransform v10 = v12;
    CGAffineTransformTranslate(&transform, &v10, 0.0, v8);
    CGAffineTransform v12 = transform;
    CGContextConcatCTM(v5, &transform);
    CGContextDrawImage(v5, *(CGRect *)(a1 + 104), (CGImageRef)[*(id *)(*(void *)(a1 + 32) + 8) CGImage]);
    CGContextRestoreGState(v5);
  }
  CGContextSaveGState(v5);
  CGContextTranslateCTM(v5, 0.0, *(CGFloat *)(a1 + 128));
  id v9 = [*(id *)(*(void *)(a1 + 32) + 24) layer];
  [v9 renderInContext:[v3 CGContext]];

  CGContextRestoreGState(v5);
  +[UITraitCollection _setCurrentTraitCollection:v4];
}

void sub_100DACDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_100DACDF4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  os_log_t v1 = [WeakRetained incidentReportingDelegate];
  [v1 dismissIncidentReportingViewController:WeakRetained];
}

id sub_100DAE908(uint64_t a1)
{
  return [*(id *)(a1 + 32) _cancelTapped:0 exitRoutePlanning:*(unsigned __int8 *)(a1 + 40)];
}

id sub_100DAFDAC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _requestRoute];
}

void sub_100DB08EC(uint64_t a1, uint64_t a2)
{
  id v5 = +[SearchFieldItem searchFieldItemsForRouteHistoryEntry:a2];
  id v3 = [*(id *)(a1 + 32) fieldsViewController];
  [v3 setItems:v5];

  double v4 = [*(id *)(a1 + 32) fieldsViewController];
  [v4 endEditingFields];

  [*(id *)(a1 + 32) _requestRoute];
}

void sub_100DB0D58(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) delegate];
  id v3 = [v2 traitsForRouteSearchViewController:*(void *)(a1 + 32)];

  double v4 = +[MKMapService sharedService];
  id v5 = [v4 ticketForSearchFieldOfflinePlaceholderWithTraits:v3];

  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100DB0E5C;
  v6[3] = &unk_1012EA3A8;
  objc_copyWeak(&v7, (id *)(a1 + 40));
  [v5 submitWithHandler:v6 networkActivity:0];
  objc_destroyWeak(&v7);
}

void sub_100DB0E48(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100DB0E5C(uint64_t a1, char a2, uint64_t a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a3)
    {
      id v7 = sub_1005768D4();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
      {
        v8[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "There is something wrong with offline full text search support API", (uint8_t *)v8, 2u);
      }
    }
    else
    {
      WeakRetained[152] = a2 & 1;
    }
    if (v6[153] && v6[152]) {
      v6[153] = 0;
    }
    [v6 _addSubViewsWithTextSearchSupport:v6[152]];
    [v6 _selectFieldAtIndex:*((void *)v6 + 20)];
  }
}

void sub_100DB1744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100DB1760(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateViewLayout];
}

uint64_t sub_100DB3614(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void **)(a1 + 32);
  id v6 = a3;
  id v7 = a2;
  uint64_t v8 = [v5 objectForKey:v7];
  id v9 = (void *)v8;
  if (v8) {
    CGAffineTransform v10 = (void *)v8;
  }
  else {
    CGAffineTransform v10 = v7;
  }
  id v11 = v10;

  uint64_t v12 = [*(id *)(a1 + 32) objectForKey:v6];
  uint64_t v13 = (void *)v12;
  if (v12) {
    int v14 = (void *)v12;
  }
  else {
    int v14 = v6;
  }
  id v15 = v14;

  char v16 = [v11 imageToDisplayWithScreenScale:0 nightMode:*(double *)(a1 + 40)];

  [v16 size];
  double v18 = v17;

  char v19 = [v15 imageToDisplayWithScreenScale:0 nightMode:*(double *)(a1 + 40)];

  [v19 size];
  double v21 = v20;

  uint64_t v22 = -1;
  if (v18 >= v21) {
    uint64_t v22 = 1;
  }
  if (v18 == v21) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = v22;
  }

  return v23;
}

void sub_100DB3CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100DB3CE8(uint64_t a1, void *a2)
{
  id v14 = a2;
  if (![*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) length])
  {
    uint64_t v3 = [v14 query];
    uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8);
    id v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = v3;
  }
  uint64_t v6 = [v14 locationDisplayString];
  uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;

  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v9 = +[NSBundle mainBundle];
    CGAffineTransform v10 = [v9 localizedStringForKey:@"[RAP] Cell_subtitle_for_a_previous_search_with_results" value:@"localized string not found" table:0];

    uint64_t v11 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v10, [*(id *)(a1 + 32) searchResultsCount], *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
}

void sub_100DB3E18(uint64_t a1, void *a2)
{
  id v6 = [a2 geoMapItem];
  uint64_t v3 = [v6 name];
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

uint64_t UniqueAppEntity<>.id.getter()
{
  return UniqueAppEntity<>.id.getter();
}

uint64_t type metadata accessor for AppEntityVisualState()
{
  return type metadata accessor for AppEntityVisualState();
}

uint64_t static AppIntent.openAppWhenRun.getter()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t static IntentResult.result<A>(value:)()
{
  return static IntentResult.result<A>(value:)();
}

uint64_t EntityProperty.wrappedValue.getter()
{
  return EntityProperty.wrappedValue.getter();
}

uint64_t EntityProperty.wrappedValue.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EntityProperty<>.init(title:)()
{
  return EntityProperty<>.init(title:)();
}

{
  return EntityProperty<>.init(title:)();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentDescription.init(stringLiteral:)()
{
  return IntentDescription.init(stringLiteral:)();
}

uint64_t type metadata accessor for IntentDescription()
{
  return type metadata accessor for IntentDescription();
}

uint64_t type metadata accessor for DisplayRepresentation.Image()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:synonyms:)()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:)();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t type metadata accessor for DisplayRepresentation()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t static EnumerableEntityQuery.findIntentDescription.getter()
{
  return static EnumerableEntityQuery.findIntentDescription.getter();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)()
{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

{
  return _IntentUpdatableEntityProperty<>.init(title:get:set:intent:)();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t static FormatStyle.list<A>(type:width:)()
{
  return static FormatStyle.list<A>(type:width:)();
}

uint64_t static Measurement.< infix<A, B>(_:_:)()
{
  return static Measurement.< infix<A, B>(_:_:)();
}

uint64_t static Measurement.== infix<A, B>(_:_:)()
{
  return static Measurement.== infix<A, B>(_:_:)();
}

uint64_t static Measurement._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Measurement._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Measurement.unit.getter()
{
  return Measurement.unit.getter();
}

uint64_t Measurement.init(value:unit:)()
{
  return Measurement.init(value:unit:)();
}

uint64_t Measurement.value.getter()
{
  return Measurement.value.getter();
}

uint64_t Measurement<>.formattedString()()
{
  return Measurement<>.formattedString()();
}

uint64_t Measurement<>.formattedDigitsOnlyString()()
{
  return Measurement<>.formattedDigitsOnlyString()();
}

uint64_t static Measurement<>.+ infix(_:_:)()
{
  return static Measurement<>.+ infix(_:_:)();
}

uint64_t Measurement<>.converted(to:)()
{
  return Measurement<>.converted(to:)();
}

uint64_t type metadata accessor for Measurement()
{
  return type metadata accessor for Measurement();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

NSDateComponents __swiftcall DateComponents._bridgeToObjectiveC()()
{
  return (NSDateComponents)DateComponents._bridgeToObjectiveC()();
}

uint64_t DateComponents.minute.setter()
{
  return DateComponents.minute.setter();
}

uint64_t DateComponents.second.setter()
{
  return DateComponents.second.setter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t LocalizedError.helpAnchor.getter()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t LocalizedError.failureReason.getter()
{
  return LocalizedError.failureReason.getter();
}

uint64_t LocalizedError.recoverySuggestion.getter()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t AttributeScopes.SwiftUIAttributes.foregroundColor.getter()
{
  return AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
}

uint64_t AttributeScopes.SwiftUIAttributes.strikethroughStyle.getter()
{
  return AttributeScopes.SwiftUIAttributes.strikethroughStyle.getter();
}

uint64_t AttributeScopes.SwiftUIAttributes.font.getter()
{
  return AttributeScopes.SwiftUIAttributes.font.getter();
}

uint64_t AttributedString.characters.getter()
{
  return AttributedString.characters.getter();
}

uint64_t AttributedString.startIndex.getter()
{
  return AttributedString.startIndex.getter();
}

uint64_t AttributedString.CharacterView._count.getter()
{
  return AttributedString.CharacterView._count.getter();
}

uint64_t AttributedString.CharacterView._index(_:offsetBy:)()
{
  return AttributedString.CharacterView._index(_:offsetBy:)();
}

uint64_t type metadata accessor for AttributedString.CharacterView()
{
  return type metadata accessor for AttributedString.CharacterView();
}

uint64_t AttributedString.subscript.setter()
{
  return AttributedString.subscript.setter();
}

uint64_t AttributedString.init(stringLiteral:)()
{
  return AttributedString.init(stringLiteral:)();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t static AttributedString.+ infix(_:_:)()
{
  return static AttributedString.+ infix(_:_:)();
}

uint64_t type metadata accessor for AttributedString.Index()
{
  return type metadata accessor for AttributedString.Index();
}

uint64_t AttributedString.init(localized:options:table:bundle:locale:comment:)()
{
  return AttributedString.init(localized:options:table:bundle:locale:comment:)();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t AttributedString.subscript.modify()
{
  return AttributedString.subscript.modify();
}

uint64_t AttributedString.subscript.getter()
{
  return AttributedString.subscript.getter();
}

uint64_t AttributedString.init(_:)()
{
  return AttributedString.init(_:)();
}

uint64_t KeyPathComparator.init<A>(_:order:)()
{
  return KeyPathComparator.init<A>(_:order:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t AttributedSubstring.subscript.getter()
{
  return AttributedSubstring.subscript.getter();
}

uint64_t AttributedSubstring.subscript.setter()
{
  return AttributedSubstring.subscript.setter();
}

uint64_t type metadata accessor for AttributedSubstring()
{
  return type metadata accessor for AttributedSubstring();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t AttributedStringProtocol.range<A>(of:options:locale:)()
{
  return AttributedStringProtocol.range<A>(of:options:locale:)();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL.== infix(_:_:)()
{
  return static URL.== infix(_:_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.hash(into:)()
{
  return Data.hash(into:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.addingTimeInterval(_:)()
{
  return Date.addingTimeInterval(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.compare(_:)()
{
  return Date.compare(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.identifier.getter()
{
  return Locale.identifier.getter();
}

uint64_t static Locale.MeasurementSystem.== infix(_:_:)()
{
  return static Locale.MeasurementSystem.== infix(_:_:)();
}

uint64_t static Locale.MeasurementSystem.us.getter()
{
  return static Locale.MeasurementSystem.us.getter();
}

uint64_t type metadata accessor for Locale.MeasurementSystem()
{
  return type metadata accessor for Locale.MeasurementSystem();
}

uint64_t Locale.measurementSystem.getter()
{
  return Locale.measurementSystem.getter();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t type metadata accessor for Calendar.Identifier()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t Calendar.init(identifier:)()
{
  return Calendar.init(identifier:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

NSCalendar __swiftcall Calendar._bridgeToObjectiveC()()
{
  return (NSCalendar)Calendar._bridgeToObjectiveC()();
}

uint64_t Calendar.date(from:)()
{
  return Calendar.date(from:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

NSTimeZone __swiftcall TimeZone._bridgeToObjectiveC()()
{
  return (NSTimeZone)TimeZone._bridgeToObjectiveC()();
}

uint64_t static TimeZone._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static TimeZone.current.getter()
{
  return static TimeZone.current.getter();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t CurrentWeather.isDaylight.getter()
{
  return CurrentWeather.isDaylight.getter();
}

uint64_t CurrentWeather.temperature.getter()
{
  return CurrentWeather.temperature.getter();
}

uint64_t CurrentWeather.metadata.getter()
{
  return CurrentWeather.metadata.getter();
}

uint64_t CurrentWeather.condition.getter()
{
  return CurrentWeather.condition.getter();
}

uint64_t type metadata accessor for CurrentWeather()
{
  return type metadata accessor for CurrentWeather();
}

uint64_t static WeatherQuery.airQuality.getter()
{
  return static WeatherQuery.airQuality.getter();
}

uint64_t static WeatherQuery.current.getter()
{
  return static WeatherQuery.current.getter();
}

uint64_t WeatherService.__allocating_init()()
{
  return WeatherService.__allocating_init()();
}

uint64_t type metadata accessor for WeatherService()
{
  return type metadata accessor for WeatherService();
}

uint64_t WeatherMetadata.expirationDate.getter()
{
  return WeatherMetadata.expirationDate.getter();
}

uint64_t type metadata accessor for WeatherMetadata()
{
  return type metadata accessor for WeatherMetadata();
}

uint64_t WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)()
{
  return WeatherCondition.conditionIcon(isDaylight:isFilled:forLightBackground:)();
}

uint64_t WeatherCondition.accessibilityDescription.getter()
{
  return WeatherCondition.accessibilityDescription.getter();
}

uint64_t type metadata accessor for WeatherCondition()
{
  return type metadata accessor for WeatherCondition();
}

uint64_t AirQuality.learnMoreURL.getter()
{
  return AirQuality.learnMoreURL.getter();
}

uint64_t AirQuality.currentScaleCategory.getter()
{
  return AirQuality.currentScaleCategory.getter();
}

uint64_t AirQuality.index.getter()
{
  return AirQuality.index.getter();
}

uint64_t AirQuality.scale.getter()
{
  return AirQuality.scale.getter();
}

uint64_t AirQuality.metadata.getter()
{
  return AirQuality.metadata.getter();
}

uint64_t type metadata accessor for AirQuality()
{
  return type metadata accessor for AirQuality();
}

uint64_t AirQualityScale.isNumerical.getter()
{
  return AirQualityScale.isNumerical.getter();
}

uint64_t type metadata accessor for AirQualityScale()
{
  return type metadata accessor for AirQualityScale();
}

uint64_t AirQualityScaleCategory.description.getter()
{
  return AirQualityScaleCategory.description.getter();
}

uint64_t AirQualityScaleCategory.color.getter()
{
  return AirQualityScaleCategory.color.getter();
}

uint64_t type metadata accessor for AirQualityScaleCategory()
{
  return type metadata accessor for AirQualityScaleCategory();
}

uint64_t type metadata accessor for ClientOrigin()
{
  return type metadata accessor for ClientOrigin();
}

uint64_t type metadata accessor for RequestOrigin()
{
  return type metadata accessor for RequestOrigin();
}

uint64_t RequestOrigin.init(_:)()
{
  return RequestOrigin.init(_:)();
}

uint64_t type metadata accessor for FriendStreamChange()
{
  return type metadata accessor for FriendStreamChange();
}

uint64_t Friend.handle.getter()
{
  return Friend.handle.getter();
}

uint64_t type metadata accessor for Friend()
{
  return type metadata accessor for Friend();
}

uint64_t Handle.identifier.getter()
{
  return Handle.identifier.getter();
}

uint64_t Handle.prettyName.getter()
{
  return Handle.prettyName.getter();
}

uint64_t Handle.contactIdentifier.getter()
{
  return Handle.contactIdentifier.getter();
}

uint64_t static Handle.== infix(_:_:)()
{
  return static Handle.== infix(_:_:)();
}

uint64_t Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)()
{
  return Handle.init(withID:serverID:pushIdentifiers:expiresByGroupId:siblingIdentifiers:)();
}

uint64_t Handle.hashValue.getter()
{
  return Handle.hashValue.getter();
}

uint64_t type metadata accessor for Handle()
{
  return type metadata accessor for Handle();
}

uint64_t type metadata accessor for Session()
{
  return type metadata accessor for Session();
}

uint64_t Session.init(_:)()
{
  return Session.init(_:)();
}

uint64_t Location.latitude.getter()
{
  return Location.latitude.getter();
}

uint64_t Location.hashValue.getter()
{
  return Location.hashValue.getter();
}

uint64_t Location.longitude.getter()
{
  return Location.longitude.getter();
}

uint64_t Location.timestamp.getter()
{
  return Location.timestamp.getter();
}

uint64_t type metadata accessor for Location()
{
  return type metadata accessor for Location();
}

uint64_t AppEntityViewAnnotation.init<A>(entity:state:)()
{
  return AppEntityViewAnnotation.init<A>(entity:state:)();
}

uint64_t type metadata accessor for AppEntityViewAnnotation()
{
  return type metadata accessor for AppEntityViewAnnotation();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t OSSignpostID.rawValue.getter()
{
  return OSSignpostID.rawValue.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t OSSignposter.logHandle.getter()
{
  return OSSignposter.logHandle.getter();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t type metadata accessor for OSSignpostError()
{
  return type metadata accessor for OSSignpostError();
}

uint64_t OSSignpostIntervalState.signpostID.getter()
{
  return OSSignpostIntervalState.signpostID.getter();
}

uint64_t OSSignpostIntervalState.init(id:isOpen:)()
{
  return OSSignpostIntervalState.init(id:isOpen:)();
}

uint64_t type metadata accessor for OSSignpostIntervalState()
{
  return type metadata accessor for OSSignpostIntervalState();
}

uint64_t checkForErrorAndConsumeState(state:)()
{
  return checkForErrorAndConsumeState(state:)();
}

uint64_t static Logger.subsystem.getter()
{
  return static Logger.subsystem.getter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.+ infix(_:_:)();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

uint64_t UIContentView.supports(_:)()
{
  return UIContentView.supports(_:)();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return type metadata accessor for UICellAccessory.DisplayedState();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return type metadata accessor for UICellAccessory.LayoutDimension();
}

uint64_t static UICellAccessory.disclosureIndicator(displayed:options:)()
{
  return static UICellAccessory.disclosureIndicator(displayed:options:)();
}

uint64_t UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)()
{
  return UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
}

uint64_t type metadata accessor for UICellAccessory.DisclosureIndicatorOptions()
{
  return type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return type metadata accessor for UICellAccessory();
}

uint64_t UICellConfigurationState.traitCollection.getter()
{
  return UICellConfigurationState.traitCollection.getter();
}

UICellConfigurationState __swiftcall UICellConfigurationState._bridgeToObjectiveC()()
{
  return (UICellConfigurationState)UICellConfigurationState._bridgeToObjectiveC()();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return UIBackgroundConfiguration.cornerRadius.setter();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return static UIBackgroundConfiguration.clear()();
}

uint64_t static UIBackgroundConfiguration.listCell()()
{
  return static UIBackgroundConfiguration.listCell()();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t type metadata accessor for UITraitUserInterfaceStyle()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter()
{
  return UIListContentConfiguration.prefersSideBySideTextAndSecondaryText.setter();
}

uint64_t UIListContentConfiguration.secondaryText.setter()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t UIListContentConfiguration.TextProperties.font.getter()
{
  return UIListContentConfiguration.TextProperties.font.getter();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return UIListContentConfiguration.TextProperties.font.setter();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return UIListContentConfiguration.TextProperties.color.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration.TextProperties()
{
  return type metadata accessor for UIListContentConfiguration.TextProperties();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t UIListContentConfiguration.textProperties.getter()
{
  return UIListContentConfiguration.textProperties.getter();
}

uint64_t UIListContentConfiguration.secondaryTextProperties.modify()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.modify()
{
  return UIListContentConfiguration.directionalLayoutMargins.modify();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.setter()
{
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

uint64_t static UIListContentConfiguration.prominentInsetGroupedHeader()()
{
  return static UIListContentConfiguration.prominentInsetGroupedHeader()();
}

uint64_t UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter()
{
  return UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t static UIListContentConfiguration.valueCell()()
{
  return static UIListContentConfiguration.valueCell()();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteItems(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)()
{
  return NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifiers.getter()
{
  return NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
}

NSDiffableDataSourceSnapshot __swiftcall NSDiffableDataSourceSnapshot._bridgeToObjectiveC()()
{
  return (NSDiffableDataSourceSnapshot)NSDiffableDataSourceSnapshot._bridgeToObjectiveC()();
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t type metadata accessor for NSDiffableDataSourceSnapshot()
{
  return type metadata accessor for NSDiffableDataSourceSnapshot();
}

uint64_t UITableViewDiffableDataSource.init(tableView:cellProvider:)()
{
  return UITableViewDiffableDataSource.init(tableView:cellProvider:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.snapshot()()
{
  return dispatch thunk of UITableViewDiffableDataSource.snapshot()();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.snapshot()()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
}

uint64_t UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter()
{
  return UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t UICollectionLayoutListConfiguration.headerMode.setter()
{
  return UICollectionLayoutListConfiguration.headerMode.setter();
}

uint64_t UICollectionLayoutListConfiguration.backgroundColor.setter()
{
  return UICollectionLayoutListConfiguration.backgroundColor.setter();
}

uint64_t UICollectionLayoutListConfiguration.headerTopPadding.setter()
{
  return UICollectionLayoutListConfiguration.headerTopPadding.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t AxisGridLine.init(centered:stroke:)()
{
  return AxisGridLine.init(centered:stroke:)();
}

uint64_t type metadata accessor for AxisGridLine()
{
  return type metadata accessor for AxisGridLine();
}

uint64_t ChartContent.foregroundStyle<A>(_:)()
{
  return ChartContent.foregroundStyle<A>(_:)();
}

uint64_t ChartContent.accessibilityLabel<A>(_:)()
{
  return ChartContent.accessibilityLabel<A>(_:)();
}

uint64_t ChartContent.accessibilityValue<A>(_:)()
{
  return ChartContent.accessibilityValue<A>(_:)();
}

uint64_t ChartContent.interpolationMethod(_:)()
{
  return ChartContent.interpolationMethod(_:)();
}

uint64_t ChartContent.mask<A>(content:)()
{
  return ChartContent.mask<A>(content:)();
}

uint64_t ChartContent.symbol<A>(symbol:)()
{
  return ChartContent.symbol<A>(symbol:)();
}

uint64_t ChartContent.lineStyle(_:)()
{
  return ChartContent.lineStyle(_:)();
}

uint64_t RectangleMark.init<A>(xStart:xEnd:yStart:yEnd:)()
{
  return RectangleMark.init<A>(xStart:xEnd:yStart:yEnd:)();
}

uint64_t type metadata accessor for RectangleMark()
{
  return type metadata accessor for RectangleMark();
}

uint64_t static AxisMarkPreset.inset.getter()
{
  return static AxisMarkPreset.inset.getter();
}

uint64_t static AxisMarkPreset.automatic.getter()
{
  return static AxisMarkPreset.automatic.getter();
}

uint64_t type metadata accessor for AxisMarkPreset()
{
  return type metadata accessor for AxisMarkPreset();
}

uint64_t AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)()
{
  return AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
}

uint64_t AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)()
{
  return AxisValueLabel.init<A>(_:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
}

uint64_t static PlottableValue.value(_:_:)()
{
  return static PlottableValue.value(_:_:)();
}

uint64_t static AxisMarkPosition.automatic.getter()
{
  return static AxisMarkPosition.automatic.getter();
}

uint64_t type metadata accessor for AxisMarkPosition()
{
  return type metadata accessor for AxisMarkPosition();
}

uint64_t static AxisValueLabelOrientation.automatic.getter()
{
  return static AxisValueLabelOrientation.automatic.getter();
}

uint64_t type metadata accessor for AxisValueLabelOrientation()
{
  return type metadata accessor for AxisValueLabelOrientation();
}

uint64_t static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)()
{
  return static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
}

uint64_t static AxisValueLabelCollisionResolution.automatic.getter()
{
  return static AxisValueLabelCollisionResolution.automatic.getter();
}

uint64_t type metadata accessor for AxisValueLabelCollisionResolution()
{
  return type metadata accessor for AxisValueLabelCollisionResolution();
}

uint64_t Plot.init(content:)()
{
  return Plot.init(content:)();
}

uint64_t Chart.init(content:)()
{
  return Chart.init(content:)();
}

uint64_t Chart.init<A, B, C>(_:id:content:)()
{
  return Chart.init<A, B, C>(_:id:content:)();
}

uint64_t BarMark.init<A, B>(x:y:width:height:stacking:)()
{
  return BarMark.init<A, B>(x:y:width:height:stacking:)();
}

uint64_t BarMark.init<A, B>(x:yStart:yEnd:width:)()
{
  return BarMark.init<A, B>(x:yStart:yEnd:width:)();
}

uint64_t type metadata accessor for BarMark()
{
  return type metadata accessor for BarMark();
}

uint64_t AreaMark.init<A, B, C>(x:yStart:yEnd:series:)()
{
  return AreaMark.init<A, B, C>(x:yStart:yEnd:series:)();
}

uint64_t AreaMark.init<A, B>(x:yStart:yEnd:)()
{
  return AreaMark.init<A, B>(x:yStart:yEnd:)();
}

uint64_t type metadata accessor for AreaMark()
{
  return type metadata accessor for AreaMark();
}

uint64_t AxisMark.foregroundStyle<A>(_:)()
{
  return AxisMark.foregroundStyle<A>(_:)();
}

uint64_t AxisMark.font(_:)()
{
  return AxisMark.font(_:)();
}

uint64_t AxisMark.offset(x:y:)()
{
  return AxisMark.offset(x:y:)();
}

uint64_t LineMark.init<A, B, C>(x:y:series:)()
{
  return LineMark.init<A, B, C>(x:y:series:)();
}

uint64_t LineMark.init<A, B>(x:y:)()
{
  return LineMark.init<A, B>(x:y:)();
}

uint64_t type metadata accessor for LineMark()
{
  return type metadata accessor for LineMark();
}

uint64_t AxisMarks.init<A>(preset:position:values:content:)()
{
  return AxisMarks.init<A>(preset:position:values:content:)();
}

uint64_t AxisValue.as<A>(_:)()
{
  return AxisValue.as<A>(_:)();
}

uint64_t AxisValue.index.getter()
{
  return AxisValue.index.getter();
}

uint64_t PointMark.init<A, B>(x:y:)()
{
  return PointMark.init<A, B>(x:y:)();
}

uint64_t type metadata accessor for PointMark()
{
  return type metadata accessor for PointMark();
}

uint64_t type metadata accessor for ScaleType()
{
  return type metadata accessor for ScaleType();
}

uint64_t Tip.invalidate(reason:)()
{
  return Tip.invalidate(reason:)();
}

uint64_t Tip.shouldDisplayUpdates.getter()
{
  return Tip.shouldDisplayUpdates.getter();
}

uint64_t Tip.status.getter()
{
  return Tip.status.getter();
}

uint64_t Tip.actions.getter()
{
  return Tip.actions.getter();
}

uint64_t TipUIPopoverViewController.popoverPresentationController.getter()
{
  return TipUIPopoverViewController.popoverPresentationController.getter();
}

uint64_t TipUIPopoverViewController.imageStyle.setter()
{
  return TipUIPopoverViewController.imageStyle.setter();
}

uint64_t TipUIPopoverViewController.presentationDelegate.setter()
{
  return TipUIPopoverViewController.presentationDelegate.setter();
}

uint64_t type metadata accessor for TipUIPopoverViewController()
{
  return type metadata accessor for TipUIPopoverViewController();
}

uint64_t TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)()
{
  return TipUIPopoverViewController.__allocating_init(_:sourceItem:actionHandler:)();
}

uint64_t static Tips.hideAllTipsForTesting()()
{
  return static Tips.hideAllTipsForTesting()();
}

uint64_t static Tips.showAllTipsForTesting()()
{
  return static Tips.showAllTipsForTesting()();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return static Tips.RuleBuilder.buildExpression(_:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(first:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t static Tips.resetDatastore()()
{
  return static Tips.resetDatastore()();
}

uint64_t type metadata accessor for Tips.MaxDisplayCount()
{
  return type metadata accessor for Tips.MaxDisplayCount();
}

uint64_t Tips.MaxDisplayCount.init(_:)()
{
  return Tips.MaxDisplayCount.init(_:)();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return type metadata accessor for Tips.InvalidationReason();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return type metadata accessor for Tips.Rule();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return Tips.Rule.init<A>(_:_:)();
}

uint64_t type metadata accessor for Tips.Status()
{
  return type metadata accessor for Tips.Status();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return Tips.Parameter.wrappedValue.setter();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t static ObservableObject.environmentStore.getter()
{
  return static ObservableObject.environmentStore.getter();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t LazyHStack.init(alignment:spacing:pinnedViews:content:)()
{
  return LazyHStack.init(alignment:spacing:pinnedViews:content:)();
}

uint64_t ScrollView.scrollsContentToBeginningInRightToLeft.setter()
{
  return ScrollView.scrollsContentToBeginningInRightToLeft.setter();
}

uint64_t type metadata accessor for ScrollView()
{
  return type metadata accessor for ScrollView();
}

uint64_t ScrollView.init(_:showsIndicators:content:)()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t static ColorScheme.== infix(_:_:)()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t ContextMenu.init(menuItems:)()
{
  return ContextMenu.init(menuItems:)();
}

uint64_t type metadata accessor for ControlSize()
{
  return type metadata accessor for ControlSize();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t static ScrollPhase.== infix(_:_:)()
{
  return static ScrollPhase.== infix(_:_:)();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t ControlGroup.init(content:)()
{
  return ControlGroup.init(content:)();
}

uint64_t ProgressView<>.init<>()()
{
  return ProgressView<>.init<>()();
}

uint64_t ScaledMetric.init(wrappedValue:)()
{
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t ScaledMetric.wrappedValue.getter()
{
  return ScaledMetric.wrappedValue.getter();
}

uint64_t type metadata accessor for ScaledMetric()
{
  return type metadata accessor for ScaledMetric();
}

uint64_t static ViewModifier._makeView(modifier:inputs:body:)()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t static ViewModifier._makeViewList(modifier:inputs:body:)()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t static ViewModifier._viewListCount(inputs:body:)()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t VisualEffect.scaleEffect(_:anchor:)()
{
  return VisualEffect.scaleEffect(_:anchor:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t AnyShapeStyle.init<A>(_:)()
{
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t GeometryProxy.size.getter()
{
  return GeometryProxy.size.getter();
}

uint64_t PhaseAnimator.init<A>(_:content:animation:)()
{
  return PhaseAnimator.init<A>(_:content:animation:)();
}

uint64_t withAnimation<A>(_:_:)()
{
  return withAnimation<A>(_:_:)();
}

uint64_t static EnvironmentKey._valuesEqual(_:_:)()
{
  return static EnvironmentKey._valuesEqual(_:_:)();
}

uint64_t LinearGradient.init(gradient:startPoint:endPoint:)()
{
  return LinearGradient.init(gradient:startPoint:endPoint:)();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t ScrollGeometry.contentOffset.getter()
{
  return ScrollGeometry.contentOffset.getter();
}

uint64_t type metadata accessor for ScrollGeometry()
{
  return type metadata accessor for ScrollGeometry();
}

uint64_t type metadata accessor for DynamicTypeSize()
{
  return type metadata accessor for DynamicTypeSize();
}

uint64_t ModifiedContent<>.accessibility(identifier:)()
{
  return ModifiedContent<>.accessibility(identifier:)();
}

uint64_t ModifiedContent<>.accessibilityLabel<A>(_:)()
{
  return ModifiedContent<>.accessibilityLabel<A>(_:)();
}

uint64_t ModifiedContent<>.accessibilityAction(named:_:)()
{
  return ModifiedContent<>.accessibilityAction(named:_:)();
}

uint64_t ModifiedContent<>.accessibilityIdentifier(_:)()
{
  return ModifiedContent<>.accessibilityIdentifier(_:)();
}

uint64_t ModifiedContent<>.accessibilityRemoveTraits(_:)()
{
  return ModifiedContent<>.accessibilityRemoveTraits(_:)();
}

uint64_t ModifiedContent<>.accessibilityAutomationType(_:)()
{
  return ModifiedContent<>.accessibilityAutomationType(_:)();
}

uint64_t type metadata accessor for ModifiedContent()
{
  return type metadata accessor for ModifiedContent();
}

uint64_t static SafeAreaRegions.all.getter()
{
  return static SafeAreaRegions.all.getter();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t type metadata accessor for _BlendModeEffect()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t static ContentTransition.numericText(increasing:)()
{
  return static ContentTransition.numericText(increasing:)();
}

uint64_t static ContentTransition.Style.sessionWidget.getter()
{
  return static ContentTransition.Style.sessionWidget.getter();
}

uint64_t type metadata accessor for ContentTransition.Style()
{
  return type metadata accessor for ContentTransition.Style();
}

uint64_t type metadata accessor for ContentTransition()
{
  return type metadata accessor for ContentTransition();
}

uint64_t type metadata accessor for EmptyVisualEffect()
{
  return type metadata accessor for EmptyVisualEffect();
}

uint64_t EnvironmentObject.error()()
{
  return EnvironmentObject.error()();
}

uint64_t EnvironmentObject.init()()
{
  return EnvironmentObject.init()();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.controlSize.getter()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t EnvironmentValues.sizeCategory.getter()
{
  return EnvironmentValues.sizeCategory.getter();
}

uint64_t EnvironmentValues.sizeCategory.setter()
{
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t EnvironmentValues.dynamicTypeSize.getter()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.contentTransition.getter()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t EnvironmentValues.contentTransitionStyle.getter()
{
  return EnvironmentValues.contentTransitionStyle.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.contentTransitionAddsDrawingGroup.getter()
{
  return EnvironmentValues.contentTransitionAddsDrawingGroup.getter();
}

uint64_t EnvironmentValues.contentTransitionAddsDrawingGroup.setter()
{
  return EnvironmentValues.contentTransitionAddsDrawingGroup.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.tint.getter()
{
  return EnvironmentValues.tint.getter();
}

uint64_t EnvironmentValues.tint.setter()
{
  return EnvironmentValues.tint.setter();
}

uint64_t EnvironmentValues.textCase.getter()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t EnvironmentValues.textCase.setter()
{
  return EnvironmentValues.textCase.setter();
}

uint64_t EnvironmentValues.isEnabled.getter()
{
  return EnvironmentValues.isEnabled.getter();
}

uint64_t EnvironmentValues.isEnabled.setter()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.tintColor.getter()
{
  return EnvironmentValues.tintColor.getter();
}

uint64_t EnvironmentValues.tintColor.setter()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t EnvironmentValues.subscript.getter()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t EnvironmentValues.subscript.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t static VerticalAlignment.lastTextBaseline.getter()
{
  return static VerticalAlignment.lastTextBaseline.getter();
}

uint64_t static VerticalAlignment.firstTextBaseline.getter()
{
  return static VerticalAlignment.firstTextBaseline.getter();
}

uint64_t static VerticalAlignment.bottom.getter()
{
  return static VerticalAlignment.bottom.getter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t IconOnlyLabelStyle.init()()
{
  return IconOnlyLabelStyle.init()();
}

uint64_t type metadata accessor for IconOnlyLabelStyle()
{
  return type metadata accessor for IconOnlyLabelStyle();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

uint64_t LocalizedStringKey.StringInterpolation.appendInterpolation(_:)()
{
  return LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall LocalizedStringKey.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for LocalizedStringKey.StringInterpolation()
{
  return type metadata accessor for LocalizedStringKey.StringInterpolation();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t LocalizedStringKey.init(stringInterpolation:)()
{
  return LocalizedStringKey.init(stringInterpolation:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static AccessibilityTraits.isSelected.getter()
{
  return static AccessibilityTraits.isSelected.getter();
}

uint64_t static AccessibilityTraits.isButton.getter()
{
  return static AccessibilityTraits.isButton.getter();
}

uint64_t static AccessibilityTraits.isHeader.getter()
{
  return static AccessibilityTraits.isHeader.getter();
}

uint64_t type metadata accessor for AccessibilityTraits()
{
  return type metadata accessor for AccessibilityTraits();
}

uint64_t static ContentSizeCategory.allCases.getter()
{
  return static ContentSizeCategory.allCases.getter();
}

uint64_t type metadata accessor for ContentSizeCategory()
{
  return type metadata accessor for ContentSizeCategory();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t static HorizontalAlignment.trailing.getter()
{
  return static HorizontalAlignment.trailing.getter();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return dispatch thunk of UIHostingController.sizingOptions.setter();
}

uint64_t dispatch thunk of UIHostingController._disableSafeArea.setter()
{
  return dispatch thunk of UIHostingController._disableSafeArea.setter();
}

uint64_t UIHostingController.init(coder:rootView:)()
{
  return UIHostingController.init(coder:rootView:)();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t UIViewRepresentable._resetUIView(_:coordinator:destroy:)()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t static UIViewRepresentable.dismantleUIView(_:coordinator:)()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t static UIViewRepresentable._layoutOptions(_:)()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t UIViewRepresentable._identifiedViewTree(in:)()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t UIViewRepresentable._overrideLayoutTraits(_:for:)()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t static UIViewRepresentable._modifyBridgedViewInputs(_:)()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t UIViewRepresentable<>.makeCoordinator()()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t type metadata accessor for _ConditionalContent.Storage()
{
  return type metadata accessor for _ConditionalContent.Storage();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t type metadata accessor for _ConditionalContent()
{
  return type metadata accessor for _ConditionalContent();
}

uint64_t RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)()
{
  return RectangleCornerRadii.init(topLeft:topRight:bottomRight:bottomLeft:)();
}

uint64_t BorderlessButtonStyle.init()()
{
  return BorderlessButtonStyle.init()();
}

uint64_t type metadata accessor for BorderlessButtonStyle()
{
  return type metadata accessor for BorderlessButtonStyle();
}

uint64_t InsetGroupedListStyle.init()()
{
  return InsetGroupedListStyle.init()();
}

uint64_t type metadata accessor for InsetGroupedListStyle()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t type metadata accessor for PinnedScrollableViews()
{
  return type metadata accessor for PinnedScrollableViews();
}

uint64_t static HierarchicalShapeStyle.secondary.getter()
{
  return static HierarchicalShapeStyle.secondary.getter();
}

uint64_t type metadata accessor for MenuStyleConfiguration()
{
  return type metadata accessor for MenuStyleConfiguration();
}

uint64_t UIHostingConfiguration.margins(_:_:)()
{
  return UIHostingConfiguration.margins(_:_:)();
}

uint64_t UIHostingConfiguration<>.init(content:)()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t type metadata accessor for UnevenRoundedRectangle()
{
  return type metadata accessor for UnevenRoundedRectangle();
}

uint64_t SafeAreaPaddingModifier.init(edges:insets:)()
{
  return SafeAreaPaddingModifier.init(edges:insets:)();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t ButtonStyleConfiguration.isPressed.getter()
{
  return ButtonStyleConfiguration.isPressed.getter();
}

uint64_t ScrollPhaseChangeContext.geometry.getter()
{
  return ScrollPhaseChangeContext.geometry.getter();
}

uint64_t CircularProgressViewStyle.init()()
{
  return CircularProgressViewStyle.init()();
}

uint64_t type metadata accessor for CircularProgressViewStyle()
{
  return type metadata accessor for CircularProgressViewStyle();
}

uint64_t static AccessibilityChildBehavior.ignore.getter()
{
  return static AccessibilityChildBehavior.ignore.getter();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t BorderedProminentButtonStyle.init()()
{
  return BorderedProminentButtonStyle.init()();
}

uint64_t type metadata accessor for BorderedProminentButtonStyle()
{
  return type metadata accessor for BorderedProminentButtonStyle();
}

uint64_t type metadata accessor for AccessibilityAttachmentModifier()
{
  return type metadata accessor for AccessibilityAttachmentModifier();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return type metadata accessor for UIHostingControllerSizingOptions();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Axis.Set.horizontal.getter()
{
  return static Axis.Set.horizontal.getter();
}

uint64_t static Edge.Set.horizontal.getter()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Edge.Set.leading.getter()
{
  return static Edge.Set.leading.getter();
}

uint64_t static Edge.Set.trailing.getter()
{
  return static Edge.Set.trailing.getter();
}

uint64_t static Edge.Set.vertical.getter()
{
  return static Edge.Set.vertical.getter();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t static Font.body.getter()
{
  return static Font.body.getter();
}

uint64_t Font.bold()()
{
  return Font.bold()();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t static Font.Weight.bold.getter()
{
  return static Font.Weight.bold.getter();
}

uint64_t static Font.Weight.medium.getter()
{
  return static Font.Weight.medium.getter();
}

uint64_t static Font.Weight.regular.getter()
{
  return static Font.Weight.regular.getter();
}

uint64_t static Font.Weight.semibold.getter()
{
  return static Font.Weight.semibold.getter();
}

uint64_t Font.italic()()
{
  return Font.italic()();
}

uint64_t static Font.system(size:weight:design:)()
{
  return static Font.system(size:weight:design:)();
}

uint64_t static Font.system(_:design:weight:)()
{
  return static Font.system(_:design:weight:)();
}

uint64_t static Font.title3.getter()
{
  return static Font.title3.getter();
}

uint64_t Font.weight(_:)()
{
  return Font.weight(_:)();
}

uint64_t static Font.caption.getter()
{
  return static Font.caption.getter();
}

uint64_t static Font.caption2.getter()
{
  return static Font.caption2.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t type metadata accessor for Font.TextStyle()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t Font.init(_:)()
{
  return Font.init(_:)();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Menu.init(content:label:)()
{
  return Menu.init(content:label:)();
}

uint64_t Menu<>.init(_:)()
{
  return Menu<>.init(_:)();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t type metadata accessor for Text.WritingMode()
{
  return type metadata accessor for Text.WritingMode();
}

uint64_t Text.Measurements.size(of:in:writingMode:)()
{
  return Text.Measurements.size(of:in:writingMode:)();
}

uint64_t Text.Measurements.init()()
{
  return Text.Measurements.init()();
}

uint64_t type metadata accessor for Text.Measurements()
{
  return type metadata accessor for Text.Measurements();
}

uint64_t Text.foregroundColor(_:)()
{
  return Text.foregroundColor(_:)();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t type metadata accessor for Text.Case()
{
  return type metadata accessor for Text.Case();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t static Text.LineStyle.single.getter()
{
  return static Text.LineStyle.single.getter();
}

uint64_t type metadata accessor for Text.LineStyle()
{
  return type metadata accessor for Text.LineStyle();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init(_:)()
{
  return Text.init(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.chartXAxis<A>(content:)()
{
  return View.chartXAxis<A>(content:)();
}

uint64_t View.chartXAxis(_:)()
{
  return View.chartXAxis(_:)();
}

uint64_t View.chartYAxis<A>(content:)()
{
  return View.chartYAxis<A>(content:)();
}

uint64_t View.chartYAxis(_:)()
{
  return View.chartYAxis(_:)();
}

uint64_t View.chartXScale<A>(domain:type:)()
{
  return View.chartXScale<A>(domain:type:)();
}

uint64_t View.chartYScale<A>(domain:type:)()
{
  return View.chartYScale<A>(domain:type:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.progressViewStyle<A>(_:)()
{
  return View.progressViewStyle<A>(_:)();
}

uint64_t View.fontWeight(_:)()
{
  return View.fontWeight(_:)();
}

uint64_t View.labelStyle<A>(_:)()
{
  return View.labelStyle<A>(_:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

{
  return View.buttonStyle<A>(_:)();
}

uint64_t View.contextMenu<A>(_:)()
{
  return View.contextMenu<A>(_:)();
}

uint64_t View.environment<A>(_:_:)()
{
  return View.environment<A>(_:_:)();
}

uint64_t View.onTapGesture(count:perform:)()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t View.swipeActions<A>(edge:allowsFullSwipe:content:)()
{
  return View.swipeActions<A>(edge:allowsFullSwipe:content:)();
}

uint64_t View.visualEffect<A>(_:)()
{
  return View.visualEffect<A>(_:)();
}

uint64_t View.accessibility(identifier:)()
{
  return View.accessibility(identifier:)();
}

uint64_t View.accessibility(addTraits:)()
{
  return View.accessibility(addTraits:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.dynamicTypeSize(_:)()
{
  return View.dynamicTypeSize(_:)();
}

uint64_t View.accessibilityLabel<A>(_:)()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t View.accessibilityValue<A>(_:)()
{
  return View.accessibilityValue<A>(_:)();
}

uint64_t View.accessibilityHidden(_:)()
{
  return View.accessibilityHidden(_:)();
}

uint64_t View.onScrollPhaseChange(_:)()
{
  return View.onScrollPhaseChange(_:)();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.accessibilityAddTraits(_:)()
{
  return View.accessibilityAddTraits(_:)();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t View.scrollContentBackground<A>(_:)()
{
  return View.scrollContentBackground<A>(_:)();
}

uint64_t View.accessibilityAutomationType(_:)()
{
  return View.accessibilityAutomationType(_:)();
}

uint64_t View.frame(width:height:alignment:)()
{
  return View.frame(width:height:alignment:)();
}

uint64_t View.offset(x:y:)()
{
  return View.offset(x:y:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t View.menuStyle<A>(_:)()
{
  return View.menuStyle<A>(_:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t static Color.== infix(_:_:)()
{
  return static Color.== infix(_:_:)();
}

uint64_t static Color.blue.getter()
{
  return static Color.blue.getter();
}

uint64_t static Color.gray.getter()
{
  return static Color.gray.getter();
}

uint64_t static Color.black.getter()
{
  return static Color.black.getter();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t static Color.white.getter()
{
  return static Color.white.getter();
}

uint64_t static Color.yellow.getter()
{
  return static Color.yellow.getter();
}

uint64_t Color.opacity(_:)()
{
  return Color.opacity(_:)();
}

uint64_t static Color.primary.getter()
{
  return static Color.primary.getter();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t Color.init(_:white:opacity:)()
{
  return Color.init(_:white:opacity:)();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t Image.init(uiImage:)()
{
  return Image.init(uiImage:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.ResizingMode()
{
  return type metadata accessor for Image.ResizingMode();
}

uint64_t Image.renderingMode(_:)()
{
  return Image.renderingMode(_:)();
}

uint64_t Image.init(_internalSystemName:)()
{
  return Image.init(_internalSystemName:)();
}

uint64_t static Image.TemplateRenderingMode.== infix(_:_:)()
{
  return static Image.TemplateRenderingMode.== infix(_:_:)();
}

uint64_t type metadata accessor for Image.TemplateRenderingMode()
{
  return type metadata accessor for Image.TemplateRenderingMode();
}

uint64_t Image.resizable(capInsets:resizingMode:)()
{
  return Image.resizable(capInsets:resizingMode:)();
}

uint64_t Label.init(title:icon:)()
{
  return Label.init(title:icon:)();
}

uint64_t Label<>.init<A>(_:systemImage:)()
{
  return Label<>.init<A>(_:systemImage:)();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t State.wrappedValue.getter()
{
  return State.wrappedValue.getter();
}

uint64_t State.wrappedValue.setter()
{
  return State.wrappedValue.setter();
}

uint64_t State.projectedValue.getter()
{
  return State.projectedValue.getter();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return Button<>.init<A>(_:action:)();
}

uint64_t type metadata accessor for Button()
{
  return type metadata accessor for Button();
}

uint64_t HStack.init(alignment:spacing:content:)()
{
  return HStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for HStack()
{
  return type metadata accessor for HStack();
}

uint64_t VStack.init(alignment:spacing:content:)()
{
  return VStack.init(alignment:spacing:content:)();
}

uint64_t type metadata accessor for VStack()
{
  return type metadata accessor for VStack();
}

uint64_t ZStack.init(alignment:content:)()
{
  return ZStack.init(alignment:content:)();
}

uint64_t type metadata accessor for ZStack()
{
  return type metadata accessor for ZStack();
}

uint64_t AnyView.init<A>(_:)()
{
  return AnyView.init<A>(_:)();
}

uint64_t Binding.wrappedValue.getter()
{
  return Binding.wrappedValue.getter();
}

uint64_t Binding.wrappedValue.setter()
{
  return Binding.wrappedValue.setter();
}

uint64_t type metadata accessor for Capsule()
{
  return type metadata accessor for Capsule();
}

uint64_t Divider.init()()
{
  return Divider.init()();
}

uint64_t type metadata accessor for Divider()
{
  return type metadata accessor for Divider();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

{
  return ForEach<>.init(_:content:)();
}

uint64_t ForEach<>.init(_:id:content:)()
{
  return ForEach<>.init(_:id:content:)();
}

{
  return ForEach<>.init(_:id:content:)();
}

uint64_t Section<>.init(header:content:)()
{
  return Section<>.init(header:content:)();
}

uint64_t Gradient.Stop.init(color:location:)()
{
  return Gradient.Stop.init(color:location:)();
}

uint64_t Gradient.init(stops:)()
{
  return Gradient.init(stops:)();
}

uint64_t Gradient.init(colors:)()
{
  return Gradient.init(colors:)();
}

uint64_t type metadata accessor for GridItem.Size()
{
  return type metadata accessor for GridItem.Size();
}

uint64_t type metadata accessor for GridItem()
{
  return type metadata accessor for GridItem();
}

uint64_t GridItem.init(_:spacing:alignment:)()
{
  return GridItem.init(_:spacing:alignment:)();
}

uint64_t static Alignment.bottomLeading.getter()
{
  return static Alignment.bottomLeading.getter();
}

uint64_t static Alignment.bottomTrailing.getter()
{
  return static Alignment.bottomTrailing.getter();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t static Alignment.leading.getter()
{
  return static Alignment.leading.getter();
}

uint64_t static Alignment.trailing.getter()
{
  return static Alignment.trailing.getter();
}

uint64_t Animation.delay(_:)()
{
  return Animation.delay(_:)();
}

uint64_t static Animation.spring(response:dampingFraction:blendDuration:)()
{
  return static Animation.spring(response:dampingFraction:blendDuration:)();
}

uint64_t static Animation.default.getter()
{
  return static Animation.default.getter();
}

uint64_t static Animation.easeInOut(duration:)()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t type metadata accessor for BlendMode()
{
  return type metadata accessor for BlendMode();
}

uint64_t LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)()
{
  return LazyVGrid.init(columns:alignment:spacing:pinnedViews:content:)();
}

uint64_t type metadata accessor for TupleView()
{
  return type metadata accessor for TupleView();
}

uint64_t TupleView.init(_:)()
{
  return TupleView.init(_:)();
}

uint64_t static UnitPoint.topLeading.getter()
{
  return static UnitPoint.topLeading.getter();
}

uint64_t static UnitPoint.topTrailing.getter()
{
  return static UnitPoint.topTrailing.getter();
}

uint64_t static UnitPoint.top.getter()
{
  return static UnitPoint.top.getter();
}

uint64_t static UnitPoint.bottom.getter()
{
  return static UnitPoint.bottom.getter();
}

uint64_t static UnitPoint.center.getter()
{
  return static UnitPoint.center.getter();
}

uint64_t static UnitPoint.trailing.getter()
{
  return static UnitPoint.trailing.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)()
{
  return MapsSyncQueryOptions.init(predicate:sortDescriptors:range:)();
}

uint64_t type metadata accessor for MapsSyncQueryOptions()
{
  return type metadata accessor for MapsSyncQueryOptions();
}

uint64_t static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)()
{
  return static MapsSyncQueryPredicate.mapsFavoritesPredicate(hidden:includeNearbyTransit:)();
}

uint64_t static MapsSyncQueryPredicate.queryPredicate(format:argumentArray:)()
{
  return static MapsSyncQueryPredicate.queryPredicate(format:argumentArray:)();
}

uint64_t static MapsSyncQueryPredicate.withFormat(_:_:)()
{
  return static MapsSyncQueryPredicate.withFormat(_:_:)();
}

uint64_t MapsSyncQueryPredicate.init(or:)()
{
  return MapsSyncQueryPredicate.init(or:)();
}

uint64_t MapsSyncQueryPredicate.init(and:)()
{
  return MapsSyncQueryPredicate.init(and:)();
}

uint64_t MapsSyncQueryPredicate.init(mapItem:customName:)()
{
  return MapsSyncQueryPredicate.init(mapItem:customName:)();
}

uint64_t type metadata accessor for MapsSyncQueryPredicate()
{
  return type metadata accessor for MapsSyncQueryPredicate();
}

uint64_t MapsSyncRange.init(offset:limit:)()
{
  return MapsSyncRange.init(offset:limit:)();
}

uint64_t type metadata accessor for MapsSyncRange()
{
  return type metadata accessor for MapsSyncRange();
}

uint64_t static MapsSyncStore.sharedStore.getter()
{
  return static MapsSyncStore.sharedStore.getter();
}

uint64_t dispatch thunk of MapsSyncStore.unsubscribe(_:)()
{
  return dispatch thunk of MapsSyncStore.unsubscribe(_:)();
}

uint64_t dispatch thunk of MapsSyncStore.save(objects:)()
{
  return dispatch thunk of MapsSyncStore.save(objects:)();
}

uint64_t dispatch thunk of MapsSyncStore.save(_:)()
{
  return dispatch thunk of MapsSyncStore.save(_:)();
}

uint64_t dispatch thunk of MapsSyncStore.delete(objects:)()
{
  return dispatch thunk of MapsSyncStore.delete(objects:)();
}

uint64_t dispatch thunk of MapsSyncStore.subscribe(_:)()
{
  return dispatch thunk of MapsSyncStore.subscribe(_:)();
}

uint64_t type metadata accessor for MapsSyncStore()
{
  return type metadata accessor for MapsSyncStore();
}

uint64_t dispatch thunk of MapsSyncObject.createTime.getter()
{
  return dispatch thunk of MapsSyncObject.createTime.getter();
}

uint64_t dispatch thunk of MapsSyncObject.createTime.setter()
{
  return dispatch thunk of MapsSyncObject.createTime.setter();
}

uint64_t dispatch thunk of MapsSyncObject.identifier.getter()
{
  return dispatch thunk of MapsSyncObject.identifier.getter();
}

uint64_t dispatch thunk of MapsSyncObject.identifier.setter()
{
  return dispatch thunk of MapsSyncObject.identifier.setter();
}

uint64_t MapsSyncObject.__allocating_init()()
{
  return MapsSyncObject.__allocating_init()();
}

uint64_t type metadata accessor for MapsSyncObject()
{
  return type metadata accessor for MapsSyncObject();
}

uint64_t static MapsSyncService.shared.getter()
{
  return static MapsSyncService.shared.getter();
}

uint64_t type metadata accessor for MapsSyncService()
{
  return type metadata accessor for MapsSyncService();
}

uint64_t dispatch thunk of Collection.title.getter()
{
  return dispatch thunk of Collection.title.getter();
}

uint64_t type metadata accessor for Collection()
{
  return type metadata accessor for Collection();
}

uint64_t dispatch thunk of CommunityID.communityIdentifier.getter()
{
  return dispatch thunk of CommunityID.communityIdentifier.getter();
}

uint64_t dispatch thunk of CommunityID.communityIdentifier.setter()
{
  return dispatch thunk of CommunityID.communityIdentifier.setter();
}

uint64_t dispatch thunk of CommunityID.expired.setter()
{
  return dispatch thunk of CommunityID.expired.setter();
}

uint64_t dispatch thunk of CommunityID.usedCount.modify()
{
  return dispatch thunk of CommunityID.usedCount.modify();
}

uint64_t dispatch thunk of CommunityID.usedCount.getter()
{
  return dispatch thunk of CommunityID.usedCount.getter();
}

uint64_t dispatch thunk of CommunityID.usedCount.setter()
{
  return dispatch thunk of CommunityID.usedCount.setter();
}

uint64_t type metadata accessor for CommunityID()
{
  return type metadata accessor for CommunityID();
}

uint64_t dispatch thunk of FavoriteItem.mapItemLastRefreshed.getter()
{
  return dispatch thunk of FavoriteItem.mapItemLastRefreshed.getter();
}

uint64_t dispatch thunk of FavoriteItem.mapItemName.getter()
{
  return dispatch thunk of FavoriteItem.mapItemName.getter();
}

uint64_t dispatch thunk of FavoriteItem.mapItemStorage.getter()
{
  return dispatch thunk of FavoriteItem.mapItemStorage.getter();
}

uint64_t dispatch thunk of FavoriteItem.mapItemStorage.setter()
{
  return dispatch thunk of FavoriteItem.mapItemStorage.setter();
}

uint64_t dispatch thunk of FavoriteItem.mapItemCategory.getter()
{
  return dispatch thunk of FavoriteItem.mapItemCategory.getter();
}

uint64_t FavoriteItem.__allocating_init(customName:hidden:latitude:longitude:mapItemAddress:mapItemCategory:mapItemLastRefreshed:mapItemName:muid:originatingAddressString:positionIndex:shortcutIdentifier:source:type:version:)()
{
  return FavoriteItem.__allocating_init(customName:hidden:latitude:longitude:mapItemAddress:mapItemCategory:mapItemLastRefreshed:mapItemName:muid:originatingAddressString:positionIndex:shortcutIdentifier:source:type:version:)();
}

uint64_t dispatch thunk of FavoriteItem.customName.getter()
{
  return dispatch thunk of FavoriteItem.customName.getter();
}

uint64_t dispatch thunk of FavoriteItem.customName.setter()
{
  return dispatch thunk of FavoriteItem.customName.setter();
}

uint64_t dispatch thunk of FavoriteItem.positionIndex.getter()
{
  return dispatch thunk of FavoriteItem.positionIndex.getter();
}

uint64_t dispatch thunk of FavoriteItem.addContactHandle(_:)()
{
  return dispatch thunk of FavoriteItem.addContactHandle(_:)();
}

uint64_t dispatch thunk of FavoriteItem.shortcutIdentifier.getter()
{
  return dispatch thunk of FavoriteItem.shortcutIdentifier.getter();
}

uint64_t dispatch thunk of FavoriteItem.shortcutIdentifier.setter()
{
  return dispatch thunk of FavoriteItem.shortcutIdentifier.setter();
}

uint64_t dispatch thunk of FavoriteItem.fetchContactHandles()()
{
  return dispatch thunk of FavoriteItem.fetchContactHandles()();
}

uint64_t dispatch thunk of FavoriteItem.originatingAddressString.getter()
{
  return dispatch thunk of FavoriteItem.originatingAddressString.getter();
}

uint64_t dispatch thunk of FavoriteItem.originatingAddressString.setter()
{
  return dispatch thunk of FavoriteItem.originatingAddressString.setter();
}

uint64_t dispatch thunk of FavoriteItem.muid.getter()
{
  return dispatch thunk of FavoriteItem.muid.getter();
}

uint64_t dispatch thunk of FavoriteItem.type.getter()
{
  return dispatch thunk of FavoriteItem.type.getter();
}

uint64_t dispatch thunk of FavoriteItem.type.setter()
{
  return dispatch thunk of FavoriteItem.type.setter();
}

uint64_t dispatch thunk of FavoriteItem.hidden.getter()
{
  return dispatch thunk of FavoriteItem.hidden.getter();
}

uint64_t dispatch thunk of FavoriteItem.hidden.setter()
{
  return dispatch thunk of FavoriteItem.hidden.setter();
}

uint64_t dispatch thunk of FavoriteItem.source.getter()
{
  return dispatch thunk of FavoriteItem.source.getter();
}

uint64_t dispatch thunk of FavoriteItem.version.getter()
{
  return dispatch thunk of FavoriteItem.version.getter();
}

uint64_t dispatch thunk of FavoriteItem.version.setter()
{
  return dispatch thunk of FavoriteItem.version.setter();
}

uint64_t dispatch thunk of FavoriteItem.latitude.getter()
{
  return dispatch thunk of FavoriteItem.latitude.getter();
}

uint64_t dispatch thunk of FavoriteItem.longitude.getter()
{
  return dispatch thunk of FavoriteItem.longitude.getter();
}

uint64_t type metadata accessor for FavoriteItem()
{
  return type metadata accessor for FavoriteItem();
}

uint64_t dispatch thunk of CollectionItem.fetchCollections()()
{
  return dispatch thunk of CollectionItem.fetchCollections()();
}

uint64_t FavoriteItemType.rawValue.getter()
{
  return FavoriteItemType.rawValue.getter();
}

uint64_t UserRouteRequest.__allocating_init()()
{
  return UserRouteRequest.__allocating_init()();
}

uint64_t type metadata accessor for UserRouteRequest()
{
  return type metadata accessor for UserRouteRequest();
}

uint64_t CollectionRequest.__allocating_init()()
{
  return CollectionRequest.__allocating_init()();
}

uint64_t type metadata accessor for CollectionRequest()
{
  return type metadata accessor for CollectionRequest();
}

uint64_t dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter()
{
  return dispatch thunk of CuratedCollection.curatedCollectionIdentifier.getter();
}

uint64_t dispatch thunk of CuratedCollection.resultProviderIdentifier.getter()
{
  return dispatch thunk of CuratedCollection.resultProviderIdentifier.getter();
}

uint64_t type metadata accessor for CuratedCollection()
{
  return type metadata accessor for CuratedCollection();
}

uint64_t CommunityIDRequest.__allocating_init()()
{
  return CommunityIDRequest.__allocating_init()();
}

uint64_t type metadata accessor for CommunityIDRequest()
{
  return type metadata accessor for CommunityIDRequest();
}

uint64_t dispatch thunk of CollectionPlaceItem.mapItemStorage.getter()
{
  return dispatch thunk of CollectionPlaceItem.mapItemStorage.getter();
}

uint64_t dispatch thunk of CollectionPlaceItem.mapItemStorage.setter()
{
  return dispatch thunk of CollectionPlaceItem.mapItemStorage.setter();
}

uint64_t dispatch thunk of CollectionPlaceItem.placeItemNote.getter()
{
  return dispatch thunk of CollectionPlaceItem.placeItemNote.getter();
}

uint64_t dispatch thunk of CollectionPlaceItem.placeItemNote.setter()
{
  return dispatch thunk of CollectionPlaceItem.placeItemNote.setter();
}

uint64_t dispatch thunk of CollectionPlaceItem.customName.getter()
{
  return dispatch thunk of CollectionPlaceItem.customName.getter();
}

uint64_t dispatch thunk of CollectionPlaceItem.customName.setter()
{
  return dispatch thunk of CollectionPlaceItem.customName.setter();
}

uint64_t dispatch thunk of CollectionPlaceItem.originalIdentifier.getter()
{
  return dispatch thunk of CollectionPlaceItem.originalIdentifier.getter();
}

uint64_t dispatch thunk of CollectionPlaceItem.originalIdentifier.setter()
{
  return dispatch thunk of CollectionPlaceItem.originalIdentifier.setter();
}

uint64_t dispatch thunk of CollectionPlaceItem.type.getter()
{
  return dispatch thunk of CollectionPlaceItem.type.getter();
}

uint64_t dispatch thunk of CollectionPlaceItem.type.setter()
{
  return dispatch thunk of CollectionPlaceItem.type.setter();
}

uint64_t type metadata accessor for CollectionPlaceItem()
{
  return type metadata accessor for CollectionPlaceItem();
}

uint64_t dispatch thunk of FavoriteItemRequest.fetchSync(options:)()
{
  return dispatch thunk of FavoriteItemRequest.fetchSync(options:)();
}

uint64_t FavoriteItemRequest.__allocating_init()()
{
  return FavoriteItemRequest.__allocating_init()();
}

uint64_t type metadata accessor for FavoriteItemRequest()
{
  return type metadata accessor for FavoriteItemRequest();
}

uint64_t dispatch thunk of CollectionTransitItem.transitLineStorage.setter()
{
  return dispatch thunk of CollectionTransitItem.transitLineStorage.setter();
}

uint64_t dispatch thunk of CollectionTransitItem.muid.getter()
{
  return dispatch thunk of CollectionTransitItem.muid.getter();
}

uint64_t dispatch thunk of CollectionTransitItem.muid.setter()
{
  return dispatch thunk of CollectionTransitItem.muid.setter();
}

uint64_t type metadata accessor for CollectionTransitItem()
{
  return type metadata accessor for CollectionTransitItem();
}

uint64_t FavoriteItemSourceType.rawValue.getter()
{
  return FavoriteItemSourceType.rawValue.getter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter()
{
  return dispatch thunk of ServerEvaluationStatus.reliabilityStatus.getter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter()
{
  return dispatch thunk of ServerEvaluationStatus.reliabilityStatus.setter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.arpStatus.getter()
{
  return dispatch thunk of ServerEvaluationStatus.arpStatus.getter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.arpStatus.setter()
{
  return dispatch thunk of ServerEvaluationStatus.arpStatus.setter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.rapStatus.getter()
{
  return dispatch thunk of ServerEvaluationStatus.rapStatus.getter();
}

uint64_t dispatch thunk of ServerEvaluationStatus.rapStatus.setter()
{
  return dispatch thunk of ServerEvaluationStatus.rapStatus.setter();
}

uint64_t dispatch thunk of CachedCuratedCollection.curatedCollectionIdentifier.getter()
{
  return dispatch thunk of CachedCuratedCollection.curatedCollectionIdentifier.getter();
}

uint64_t dispatch thunk of CachedCuratedCollection.resultProviderIdentifier.getter()
{
  return dispatch thunk of CachedCuratedCollection.resultProviderIdentifier.getter();
}

uint64_t type metadata accessor for CachedCuratedCollection()
{
  return type metadata accessor for CachedCuratedCollection();
}

uint64_t CuratedCollectionRequest.__allocating_init()()
{
  return CuratedCollectionRequest.__allocating_init()();
}

uint64_t type metadata accessor for CuratedCollectionRequest()
{
  return type metadata accessor for CuratedCollectionRequest();
}

uint64_t CollectionPlaceItemRequest.__allocating_init()()
{
  return CollectionPlaceItemRequest.__allocating_init()();
}

uint64_t type metadata accessor for CollectionPlaceItemRequest()
{
  return type metadata accessor for CollectionPlaceItemRequest();
}

uint64_t CollectionTransitItemRequest.__allocating_init()()
{
  return CollectionTransitItemRequest.__allocating_init()();
}

uint64_t type metadata accessor for CollectionTransitItemRequest()
{
  return type metadata accessor for CollectionTransitItemRequest();
}

uint64_t ServerEvaluationStatusRequest.__allocating_init()()
{
  return ServerEvaluationStatusRequest.__allocating_init()();
}

uint64_t type metadata accessor for ServerEvaluationStatusRequest()
{
  return type metadata accessor for ServerEvaluationStatusRequest();
}

uint64_t CachedCuratedCollectionRequest.__allocating_init()()
{
  return CachedCuratedCollectionRequest.__allocating_init()();
}

uint64_t type metadata accessor for CachedCuratedCollectionRequest()
{
  return type metadata accessor for CachedCuratedCollectionRequest();
}

uint64_t type metadata accessor for UserRoute()
{
  return type metadata accessor for UserRoute();
}

uint64_t WeatherConditionIcon.name.getter()
{
  return WeatherConditionIcon.name.getter();
}

uint64_t WeatherConditionIcon.palette.getter()
{
  return WeatherConditionIcon.palette.getter();
}

uint64_t type metadata accessor for WeatherConditionIcon()
{
  return type metadata accessor for WeatherConditionIcon();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.difference<A>(from:)()
{
  return BidirectionalCollection<>.difference<A>(from:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.> infix(_:_:)()
{
  return dispatch thunk of static Comparable.> infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

Swift::String __swiftcall String.init(_:)(NSString a1)
{
  uint64_t v1 = String.init(_:)(a1);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall String.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String._mapsui_nilIfEmpty.getter()
{
  return String._mapsui_nilIfEmpty.getter();
}

uint64_t String._mapsui_quotedForLocale.getter()
{
  return String._mapsui_quotedForLocale.getter();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignDistance(from:to:)()
{
  return String.UTF8View._foreignDistance(from:to:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t Sequence.sorted<A, B>(using:)()
{
  return Sequence.sorted<A, B>(using:)();
}

uint64_t Sequence.formatted<A>(_:)()
{
  return Sequence.formatted<A>(_:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._forceBridgeFromObjectiveC(_:result:)()
{
  return static Array._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t type metadata accessor for Bool.IntentDisplayName()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t type metadata accessor for CancellationError()
{
  return type metadata accessor for CancellationError();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return AsyncStream.makeAsyncIterator()();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

uint64_t ThrowingTaskGroup.makeAsyncIterator()()
{
  return ThrowingTaskGroup.makeAsyncIterator()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t RangeReplaceableCollection<>.remove(atOffsets:)()
{
  return RangeReplaceableCollection<>.remove(atOffsets:)();
}

uint64_t Range<>.init<A>(_:in:)()
{
  return Range<>.init<A>(_:in:)();
}

uint64_t Range<>.init(_:in:)()
{
  return Range<>.init(_:in:)();
}

uint64_t UITableViewHeaderFooterView.contentConfiguration.setter()
{
  return UITableViewHeaderFooterView.contentConfiguration.setter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t UITableViewCell.backgroundConfiguration.setter()
{
  return UITableViewCell.backgroundConfiguration.setter();
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t type metadata accessor for UICollectionView.CellRegistration()
{
  return type metadata accessor for UICollectionView.CellRegistration();
}

uint64_t UICollectionView.SupplementaryRegistration.init(elementKind:handler:)()
{
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t type metadata accessor for UICollectionView.SupplementaryRegistration()
{
  return type metadata accessor for UICollectionView.SupplementaryRegistration();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t UIViewController.registerForTraitChanges(_:action:)()
{
  return UIViewController.registerForTraitChanges(_:action:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t NSAttributedString.init(_:)()
{
  return NSAttributedString.init(_:)();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_source.suspend()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return UICollectionViewCell.backgroundConfiguration.setter();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return UICollectionViewListCell.accessories.setter();
}

uint64_t UICollectionViewListCell.defaultContentConfiguration()()
{
  return UICollectionViewListCell.defaultContentConfiguration()();
}

uint64_t static NSCollectionLayoutSection.list(using:layoutEnvironment:)()
{
  return static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.annotate(with:)()
{
  return UIView.annotate(with:)();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  return (UIColor)UIColor.init(hex:)(hex._countAndFlagsBits, hex._object);
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t UIButton.Configuration.title.setter()
{
  return UIButton.Configuration.title.setter();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return UIButton.init(configuration:primaryAction:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t OS_os_log.signpostsEnabled.getter()
{
  return OS_os_log.signpostsEnabled.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Substring.init<A>(_:)()
{
  return Substring.init<A>(_:)();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

NSNumber __swiftcall UInt._bridgeToObjectiveC()()
{
  return (NSNumber)UInt._bridgeToObjectiveC()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.uppercased(with:)()
{
  return StringProtocol.uppercased(with:)();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.localizedStandardCompare<A>(_:)()
{
  return StringProtocol.localizedStandardCompare<A>(_:)();
}

uint64_t StringProtocol.localizedCaseInsensitiveContains<A>(_:)()
{
  return StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

Swift::String __swiftcall BinaryInteger.formatted()()
{
  uint64_t v0 = BinaryInteger.formatted()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.insert(_:)()
{
  return dispatch thunk of SetAlgebra.insert(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init()()
{
  return dispatch thunk of SetAlgebra.init()();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

NSObject __swiftcall AnyHashable._bridgeToObjectiveC()()
{
  return (NSObject)AnyHashable._bridgeToObjectiveC()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.hash(into:)()
{
  return AnyHashable.hash(into:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts._slowWithCString<A>(_:)()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t Identifiable<>.id.getter()
{
  return Identifiable<>.id.getter();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContinuousClock.now.getter()
{
  return ContinuousClock.now.getter();
}

uint64_t ContinuousClock.Instant.advanced(by:)()
{
  return ContinuousClock.Instant.advanced(by:)();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t AsyncMapSequence.base.getter()
{
  return AsyncMapSequence.base.getter();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return AsyncMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return AsyncMapSequence.Iterator.transform.getter();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return AsyncMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return AsyncMapSequence.transform.getter();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t __CocoaDictionary.Iterator.nextKey()()
{
  return __CocoaDictionary.Iterator.nextKey()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t CollectionDifference<A>.inferringMoves()()
{
  return CollectionDifference<A>.inferringMoves()();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _getErrorEmbeddedNSError<A>(_:)()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t dispatch thunk of Error._code.getter()
{
  return dispatch thunk of Error._code.getter();
}

uint64_t dispatch thunk of Error._domain.getter()
{
  return dispatch thunk of Error._domain.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t type metadata accessor for Mirror.DisplayStyle()
{
  return type metadata accessor for Mirror.DisplayStyle();
}

uint64_t type metadata accessor for Mirror.AncestorRepresentation()
{
  return type metadata accessor for Mirror.AncestorRepresentation();
}

uint64_t Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)()
{
  return Mirror.init<A>(_:children:displayStyle:ancestorRepresentation:)();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

void AudioServicesPlaySystemSoundWithCompletion(SystemSoundID inSystemSoundID, void *inCompletionBlock)
{
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

CATransform3D *__cdecl CATransform3DConcat(CATransform3D *__return_ptr retstr, CATransform3D *a, CATransform3D *b)
{
  return _CATransform3DConcat(retstr, a, b);
}

BOOL CATransform3DEqualToTransform(CATransform3D *a, CATransform3D *b)
{
  return _CATransform3DEqualToTransform(a, b);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DMakeRotation(retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DMakeTranslation(retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return _CATransform3DRotate(retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return _CATransform3DTranslate(retstr, t, tx, ty, tz);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA1(data, len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return _CFAutorelease(arg);
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return _CFDateCreate(allocator, at);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreate(allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return _CFLocaleCopyCurrent();
}

CFTypeRef CFLocaleGetValue(CFLocaleRef locale, CFLocaleKey key)
{
  return _CFLocaleGetValue(locale, key);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return _CFNumberCreate(allocator, theType, valuePtr);
}

Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesAppValueIsForced(key, applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return _CFUserNotificationCancel(userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

BOOL CGAffineTransformEqualToTransform(CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformEqualToTransform(t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return _CGAffineTransformInvert(retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return _CGAffineTransformIsIdentity(t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return _CGAffineTransformRotate(retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformScale(retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformTranslate(retstr, t, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return _CGBitmapContextCreateImage(context);
}

uint64_t CGBitmapGetAlignedBytesPerRow()
{
  return _CGBitmapGetAlignedBytesPerRow();
}

CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return _CGColorCreateSRGB(red, green, blue, alpha);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return _CGColorGetComponents(color);
}

void CGColorRelease(CGColorRef color)
{
}

CGColorSpaceRef CGColorSpaceCreateDeviceGray(void)
{
  return _CGColorSpaceCreateDeviceGray();
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return _CGColorSpaceGetNumberOfComponents(space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

CGColorSpaceRef CGColorSpaceRetain(CGColorSpaceRef space)
{
  return _CGColorSpaceRetain(space);
}

void CGContextAddArc(CGContextRef c, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
{
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextClipToRect(CGContextRef c, CGRect rect)
{
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextEOClip(CGContextRef c)
{
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

uint64_t CGContextSetCompositeOperation()
{
  return _CGContextSetCompositeOperation();
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetInterpolationQuality(CGContextRef c, CGInterpolationQuality quality)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineDash(CGContextRef c, CGFloat phase, const CGFloat *lengths, size_t count)
{
}

void CGContextSetLineJoin(CGContextRef c, CGLineJoin join)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetRGBFillColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetRGBStrokeColor(CGContextRef c, CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetTextDrawingMode(CGContextRef c, CGTextDrawingMode mode)
{
}

void CGContextSetTextPosition(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextStrokeRect(CGContextRef c, CGRect rect)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

uint64_t CGFloatIsValid()
{
  return _CGFloatIsValid();
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithData(data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef image)
{
  return _CGImageGetAlphaInfo(image);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return _CGImageGetBitmapInfo(image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return _CGImageGetBitsPerComponent(image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return _CGImageGetBytesPerRow(image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return _CGImageGetColorSpace(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

void CGImageRelease(CGImageRef image)
{
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return _CGImageRetain(image);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateThumbnailAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithData(data, options);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return _CGImageSourceGetType(isrc);
}

void CGPathAddArc(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, BOOL clockwise)
{
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

CGPathRef CGPathCreateCopyByStrokingPath(CGPathRef path, const CGAffineTransform *transform, CGFloat lineWidth, CGLineCap lineCap, CGLineJoin lineJoin, CGFloat miterLimit)
{
  return _CGPathCreateCopyByStrokingPath(path, transform, lineWidth, lineCap, lineJoin, miterLimit);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return _CGPathCreateWithEllipseInRect(rect, transform);
}

CGRect CGPathGetPathBoundingBox(CGPathRef path)
{
  return _CGPathGetPathBoundingBox(path);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
}

void CGPathRelease(CGPathRef path)
{
}

CGPoint CGPointFromString(NSString *string)
{
  CGPoint v3 = _CGPointFromString(string);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  return _CGRectApplyAffineTransform(rect, t);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

BOOL CGRectIsNull(CGRect rect)
{
  return _CGRectIsNull(rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

uint64_t CLClientGetDistanceCoordinates()
{
  return _CLClientGetDistanceCoordinates();
}

uint64_t CLCoordinateEqualToCoordinateEpsilon()
{
  return _CLCoordinateEqualToCoordinateEpsilon();
}

uint64_t CLLocationCoordinate2DFromGEOLocationCoordinate2D()
{
  return _CLLocationCoordinate2DFromGEOLocationCoordinate2D();
}

uint64_t CLLocationCoordinate2DGetDistanceFrom()
{
  return _CLLocationCoordinate2DGetDistanceFrom();
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return _CLLocationCoordinate2DIsValid(coord);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  CLLocationCoordinate2D v4 = _CLLocationCoordinate2DMake(latitude, longitude);
  double v3 = v4.longitude;
  double v2 = v4.latitude;
  result.CLLocationDegrees longitude = v3;
  result.CLLocationDegrees latitude = v2;
  return result;
}

uint64_t CLLocationFromGEOLocationCoordinate2D()
{
  return _CLLocationFromGEOLocationCoordinate2D();
}

uint64_t CMFBlockListAddItemForAllServices()
{
  return _CMFBlockListAddItemForAllServices();
}

int32_t CMTimeCompare(CMTime *time1, CMTime *time2)
{
  return _CMTimeCompare(time1, time2);
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return _CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
}

uint64_t CTFontCreateCopyOfSystemUIFontWithGrade()
{
  return _CTFontCreateCopyOfSystemUIFontWithGrade();
}

CTFontRef CTFontCreateUIFontForLanguage(CTFontUIFontType uiType, CGFloat size, CFStringRef language)
{
  return _CTFontCreateUIFontForLanguage(uiType, size, language);
}

void CTFrameGetLineOrigins(CTFrameRef frame, CFRange range, CGPoint *origins)
{
}

CFArrayRef CTFrameGetLines(CTFrameRef frame)
{
  return _CTFrameGetLines(frame);
}

CFRange CTFrameGetStringRange(CTFrameRef frame)
{
  CFRange StringRange = _CTFrameGetStringRange(frame);
  CFIndex length = StringRange.length;
  CFIndex location = StringRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

CTFrameRef CTFramesetterCreateFrame(CTFramesetterRef framesetter, CFRange stringRange, CGPathRef path, CFDictionaryRef frameAttributes)
{
  return _CTFramesetterCreateFrame(framesetter, stringRange, path, frameAttributes);
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTFramesetterCreateWithAttributedString(attrString);
}

CTLineRef CTLineCreateTruncatedLine(CTLineRef line, double width, CTLineTruncationType truncationType, CTLineRef truncationToken)
{
  return _CTLineCreateTruncatedLine(line, width, truncationType, truncationToken);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTLineCreateWithAttributedString(attrString);
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
}

CGRect CTLineGetBoundsWithOptions(CTLineRef line, CTLineBoundsOptions options)
{
  return _CTLineGetBoundsWithOptions(line, options);
}

uint64_t CTLineGetDefaultBounds()
{
  return _CTLineGetDefaultBounds();
}

CFArrayRef CTLineGetGlyphRuns(CTLineRef line)
{
  return _CTLineGetGlyphRuns(line);
}

CFRange CTLineGetStringRange(CTLineRef line)
{
  CFRange StringRange = _CTLineGetStringRange(line);
  CFIndex length = StringRange.length;
  CFIndex location = StringRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

double CTLineGetTypographicBounds(CTLineRef line, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  return _CTLineGetTypographicBounds(line, ascent, descent, leading);
}

CFDictionaryRef CTRunGetAttributes(CTRunRef run)
{
  return _CTRunGetAttributes(run);
}

uint64_t CreateCMFItemFromString()
{
  return _CreateCMFItemFromString();
}

uint64_t DDResultGetCategory()
{
  return _DDResultGetCategory();
}

uint64_t DDResultGetMatchedString()
{
  return _DDResultGetMatchedString();
}

uint64_t DDScannerCopyResultsWithOptions()
{
  return _DDScannerCopyResultsWithOptions();
}

uint64_t DDScannerCreate()
{
  return _DDScannerCreate();
}

uint64_t DDScannerScanString()
{
  return _DDScannerScanString();
}

uint64_t DetailTextsForAdvisoryItem()
{
  return _DetailTextsForAdvisoryItem();
}

uint64_t DiagnosticLogSubmissionEnabled()
{
  return _DiagnosticLogSubmissionEnabled();
}

uint64_t FeatureStyleAttributesFind()
{
  return _FeatureStyleAttributesFind();
}

uint64_t GEOAlwaysUseV2PreambleForRequestKind()
{
  return _GEOAlwaysUseV2PreambleForRequestKind();
}

uint64_t GEOAngleDifferenceDegrees()
{
  return _GEOAngleDifferenceDegrees();
}

uint64_t GEOAppleMediaServicesMediaTypeForGeoSubtype()
{
  return _GEOAppleMediaServicesMediaTypeForGeoSubtype();
}

uint64_t GEOAssetURLForScaleFactor()
{
  return _GEOAssetURLForScaleFactor();
}

uint64_t GEOBZ2Compress()
{
  return _GEOBZ2Compress();
}

uint64_t GEOBZ2Uncompress()
{
  return _GEOBZ2Uncompress();
}

uint64_t GEOBearingFromCoordinateToCoordinate()
{
  return _GEOBearingFromCoordinateToCoordinate();
}

uint64_t GEOCalculateDistance()
{
  return _GEOCalculateDistance();
}

uint64_t GEOCanUserMakeLagunaBeachContributions()
{
  return _GEOCanUserMakeLagunaBeachContributions();
}

uint64_t GEOClosestCoordinateOnLineSegmentFromCoordinate()
{
  return _GEOClosestCoordinateOnLineSegmentFromCoordinate();
}

uint64_t GEOConfigGetArray()
{
  return _GEOConfigGetArray();
}

uint64_t GEOConfigGetBOOL()
{
  return _GEOConfigGetBOOL();
}

uint64_t GEOConfigGetDate()
{
  return _GEOConfigGetDate();
}

uint64_t GEOConfigGetDictionary()
{
  return _GEOConfigGetDictionary();
}

uint64_t GEOConfigGetDouble()
{
  return _GEOConfigGetDouble();
}

uint64_t GEOConfigGetInteger()
{
  return _GEOConfigGetInteger();
}

uint64_t GEOConfigGetPropertiesForKey()
{
  return _GEOConfigGetPropertiesForKey();
}

uint64_t GEOConfigGetSet()
{
  return _GEOConfigGetSet();
}

uint64_t GEOConfigGetString()
{
  return _GEOConfigGetString();
}

uint64_t GEOConfigGetUInteger()
{
  return _GEOConfigGetUInteger();
}

uint64_t GEOConfigGetUint64()
{
  return _GEOConfigGetUint64();
}

uint64_t GEOConfigGetValueWithSourceString()
{
  return _GEOConfigGetValueWithSourceString();
}

uint64_t GEOConfigRemoveBlockListener()
{
  return _GEOConfigRemoveBlockListener();
}

uint64_t GEOConfigRemoveDelegateListenerForAllKeys()
{
  return _GEOConfigRemoveDelegateListenerForAllKeys();
}

uint64_t GEOConfigRemoveDelegateListenerForKey()
{
  return _GEOConfigRemoveDelegateListenerForKey();
}

uint64_t GEOConfigSetArray()
{
  return _GEOConfigSetArray();
}

uint64_t GEOConfigSetBOOL()
{
  return _GEOConfigSetBOOL();
}

uint64_t GEOConfigSetDate()
{
  return _GEOConfigSetDate();
}

uint64_t GEOConfigSetDictionary()
{
  return _GEOConfigSetDictionary();
}

uint64_t GEOConfigSetDouble()
{
  return _GEOConfigSetDouble();
}

uint64_t GEOConfigSetInteger()
{
  return _GEOConfigSetInteger();
}

uint64_t GEOConfigSetSet()
{
  return _GEOConfigSetSet();
}

uint64_t GEOConfigSetString()
{
  return _GEOConfigSetString();
}

uint64_t GEOConfigSetSyncBOOL()
{
  return _GEOConfigSetSyncBOOL();
}

uint64_t GEOConfigSetSyncDate()
{
  return _GEOConfigSetSyncDate();
}

uint64_t GEOConfigSetSyncInteger()
{
  return _GEOConfigSetSyncInteger();
}

uint64_t GEOConfigSetUInteger()
{
  return _GEOConfigSetUInteger();
}

uint64_t GEOConfigSetUint64()
{
  return _GEOConfigSetUint64();
}

uint64_t GEOCoordinateRegionForMapRect()
{
  return _GEOCoordinateRegionForMapRect();
}

uint64_t GEOCoordinateRegionMakeWithDistance()
{
  return _GEOCoordinateRegionMakeWithDistance();
}

uint64_t GEOCreateBodyDataForProtocolBufferRequest()
{
  return _GEOCreateBodyDataForProtocolBufferRequest();
}

uint64_t GEODataRequestKindAsString()
{
  return _GEODataRequestKindAsString();
}

uint64_t GEODoesUserHaveValidAccountForMakingContributions()
{
  return _GEODoesUserHaveValidAccountForMakingContributions();
}

uint64_t GEOErrorDomain()
{
  return _GEOErrorDomain();
}

uint64_t GEOEvChargingConnectorTypeFromVGConnectorType()
{
  return _GEOEvChargingConnectorTypeFromVGConnectorType();
}

uint64_t GEOFindOrCreateLog()
{
  return _GEOFindOrCreateLog();
}

uint64_t GEOGetMapsProxyAuthLog()
{
  return _GEOGetMapsProxyAuthLog();
}

uint64_t GEOGetMonotonicTime()
{
  return _GEOGetMonotonicTime();
}

uint64_t GEOGetProxyAuthFromResourceManifest()
{
  return _GEOGetProxyAuthFromResourceManifest();
}

uint64_t GEOGetURL()
{
  return _GEOGetURL();
}

uint64_t GEOGetUserPreferredTransportType()
{
  return _GEOGetUserPreferredTransportType();
}

uint64_t GEOGetUserTransportTypePreference()
{
  return _GEOGetUserTransportTypePreference();
}

uint64_t GEOLocationCoordinate2DFromCLLocationCoordinate2D()
{
  return _GEOLocationCoordinate2DFromCLLocationCoordinate2D();
}

uint64_t GEOLocationCoordinate2DFromOrientedPosition()
{
  return _GEOLocationCoordinate2DFromOrientedPosition();
}

uint64_t GEOLocationFloorOrdinalFromNSInteger()
{
  return _GEOLocationFloorOrdinalFromNSInteger();
}

uint64_t GEOMachAbsoluteTimeGetCurrent()
{
  return _GEOMachAbsoluteTimeGetCurrent();
}

uint64_t GEOMapDataSubscriptionDataTypeAsString()
{
  return _GEOMapDataSubscriptionDataTypeAsString();
}

uint64_t GEOMapDataSubscriptionPolicyAsString()
{
  return _GEOMapDataSubscriptionPolicyAsString();
}

uint64_t GEOMapItemFromMapsSuggestionsEntry()
{
  return _GEOMapItemFromMapsSuggestionsEntry();
}

uint64_t GEOMapItemHashForPurpose()
{
  return _GEOMapItemHashForPurpose();
}

uint64_t GEOMapItemIsEqualToMapItemForPurpose()
{
  return _GEOMapItemIsEqualToMapItemForPurpose();
}

uint64_t GEOMapItemIsEqualToMapItemForPurposeWithinDistance()
{
  return _GEOMapItemIsEqualToMapItemForPurposeWithinDistance();
}

uint64_t GEOMapPoint3DForCoordinate()
{
  return _GEOMapPoint3DForCoordinate();
}

uint64_t GEOMapPointForCoordinate()
{
  return _GEOMapPointForCoordinate();
}

uint64_t GEOMapRectBoundingMapPoints()
{
  return _GEOMapRectBoundingMapPoints();
}

uint64_t GEOMapRectContainsPoint()
{
  return _GEOMapRectContainsPoint();
}

uint64_t GEOMapRectForCoordinateRegion()
{
  return _GEOMapRectForCoordinateRegion();
}

uint64_t GEOMapRectForGEOTileKey()
{
  return _GEOMapRectForGEOTileKey();
}

uint64_t GEOMapRectForMapRegion()
{
  return _GEOMapRectForMapRegion();
}

uint64_t GEOMapRectFractionCoveredByMapRects()
{
  return _GEOMapRectFractionCoveredByMapRects();
}

uint64_t GEOMapRectIntersection()
{
  return _GEOMapRectIntersection();
}

uint64_t GEOMapRectIsEmpty()
{
  return _GEOMapRectIsEmpty();
}

uint64_t GEOMapRectIsNull()
{
  return _GEOMapRectIsNull();
}

uint64_t GEOMapRectMakeWithRadialDistance()
{
  return _GEOMapRectMakeWithRadialDistance();
}

uint64_t GEOMapRegionUnion()
{
  return _GEOMapRegionUnion();
}

uint64_t GEOMaximumAutomaticUpdateOfflineDataSize()
{
  return _GEOMaximumAutomaticUpdateOfflineDataSize();
}

uint64_t GEOOfflineModeAsString()
{
  return _GEOOfflineModeAsString();
}

uint64_t GEOOnce()
{
  return _GEOOnce();
}

uint64_t GEOPolylineCoordinateAsFullString()
{
  return _GEOPolylineCoordinateAsFullString();
}

uint64_t GEOPolylineCoordinateCompare()
{
  return _GEOPolylineCoordinateCompare();
}

uint64_t GEOPolylineCoordinateEqual()
{
  return _GEOPolylineCoordinateEqual();
}

uint64_t GEOPolylineCoordinateInRange()
{
  return _GEOPolylineCoordinateInRange();
}

uint64_t GEOPolylineCoordinateIsABeforeB()
{
  return _GEOPolylineCoordinateIsABeforeB();
}

uint64_t GEOPolylineCoordinateIsABeforeOrEqualToB()
{
  return _GEOPolylineCoordinateIsABeforeOrEqualToB();
}

uint64_t GEOPolylineCoordinateIsInvalid()
{
  return _GEOPolylineCoordinateIsInvalid();
}

uint64_t GEOPolylineCoordinateIsValid()
{
  return _GEOPolylineCoordinateIsValid();
}

uint64_t GEOPolylineCoordinateRangeAsString()
{
  return _GEOPolylineCoordinateRangeAsString();
}

uint64_t GEOProtocolBufferRequestPreamble()
{
  return _GEOProtocolBufferRequestPreamble();
}

uint64_t GEORegisterNetworkDefaults()
{
  return _GEORegisterNetworkDefaults();
}

uint64_t GEORequestCounterInterfaceTypesToStrings()
{
  return _GEORequestCounterInterfaceTypesToStrings();
}

uint64_t GEOResetAllDefaults()
{
  return _GEOResetAllDefaults();
}

uint64_t GEOResourceFilterScaleForScale()
{
  return _GEOResourceFilterScaleForScale();
}

uint64_t GEORoundedDistanceMeasurement()
{
  return _GEORoundedDistanceMeasurement();
}

uint64_t GEORoundedMeasurementForDistance()
{
  return _GEORoundedMeasurementForDistance();
}

uint64_t GEOServerFormatTokenEqual()
{
  return _GEOServerFormatTokenEqual();
}

uint64_t GEOSessionIDEquals()
{
  return _GEOSessionIDEquals();
}

uint64_t GEOSetUserTransportTypePreference()
{
  return _GEOSetUserTransportTypePreference();
}

uint64_t GEOShouldWatermark()
{
  return _GEOShouldWatermark();
}

uint64_t GEOStringForDistance()
{
  return _GEOStringForDistance();
}

uint64_t GEOStringForDuration()
{
  return _GEOStringForDuration();
}

uint64_t GEOStringForError()
{
  return _GEOStringForError();
}

uint64_t GEOStringForRequestCounterInfoResult()
{
  return _GEOStringForRequestCounterInfoResult();
}

uint64_t GEOSupportsOfflineMaps()
{
  return _GEOSupportsOfflineMaps();
}

uint64_t GEOTransitDepartureIsImminentDepartureTimeInterval()
{
  return _GEOTransitDepartureIsImminentDepartureTimeInterval();
}

uint64_t GEOTransitDepartureIsNearFutureDepartureTimeInterval()
{
  return _GEOTransitDepartureIsNearFutureDepartureTimeInterval();
}

uint64_t GEOTransitDepartureNearFuturePeriod()
{
  return _GEOTransitDepartureNearFuturePeriod();
}

uint64_t GEOTransitPaymentMethodTypeAsString()
{
  return _GEOTransitPaymentMethodTypeAsString();
}

uint64_t GEOTransportTypeFromGEOTransportTypePreference()
{
  return _GEOTransportTypeFromGEOTransportTypePreference();
}

uint64_t GEOURLConfigKey()
{
  return _GEOURLConfigKey();
}

uint64_t GEOURLNeedsAuthForURLType()
{
  return _GEOURLNeedsAuthForURLType();
}

uint64_t GEOURLString()
{
  return _GEOURLString();
}

uint64_t GEOURLStringIgnoringManifest()
{
  return _GEOURLStringIgnoringManifest();
}

uint64_t GEOURLStringWithSource()
{
  return _GEOURLStringWithSource();
}

uint64_t GEOURLWorldDefaultURLString()
{
  return _GEOURLWorldDefaultURLString();
}

uint64_t GEOVisualLocalizationCrowdsourcingIsAllowed()
{
  return _GEOVisualLocalizationCrowdsourcingIsAllowed();
}

uint64_t GEOVisualLocalizationCrowdsourcingIsEnabled()
{
  return _GEOVisualLocalizationCrowdsourcingIsEnabled();
}

uint64_t GEOVisualLocalizationCrowdsourcingIsSupported()
{
  return _GEOVisualLocalizationCrowdsourcingIsSupported();
}

uint64_t GEOVisualLocalizationCrowdsourcingLearnMoreURL()
{
  return _GEOVisualLocalizationCrowdsourcingLearnMoreURL();
}

uint64_t GEOWrapAngleDegrees()
{
  return _GEOWrapAngleDegrees();
}

uint64_t GSSendAppPreferencesChanged()
{
  return _GSSendAppPreferencesChanged();
}

uint64_t GeoCodecsFeatureStyleAttributesCompare()
{
  return _GeoCodecsFeatureStyleAttributesCompare();
}

uint64_t HTMLBodyWrapperStringWithFormat()
{
  return _HTMLBodyWrapperStringWithFormat();
}

uint64_t HTMLStringForAnnotatedSnapshotImageWithMapItems()
{
  return _HTMLStringForAnnotatedSnapshotImageWithMapItems();
}

uint64_t HTMLStringForMetadata()
{
  return _HTMLStringForMetadata();
}

uint64_t HTMLStringForPhoto()
{
  return _HTMLStringForPhoto();
}

uint64_t HTMLStringForURLWithLabel()
{
  return _HTMLStringForURLWithLabel();
}

uint64_t IDSCopyForDevice()
{
  return _IDSCopyForDevice();
}

uint64_t IDSCopyIDForAccount()
{
  return _IDSCopyIDForAccount();
}

uint64_t IOHIDEventGetFloatValue()
{
  return _IOHIDEventGetFloatValue();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return _IOHIDEventGetIntegerValue();
}

uint64_t IOHIDEventGetType()
{
  return _IOHIDEventGetType();
}

uint64_t IOHIDEventSystemClientCreateWithType()
{
  return _IOHIDEventSystemClientCreateWithType();
}

uint64_t IOHIDEventSystemClientRegisterEventCallback()
{
  return _IOHIDEventSystemClientRegisterEventCallback();
}

uint64_t IOHIDEventSystemClientScheduleWithRunLoop()
{
  return _IOHIDEventSystemClientScheduleWithRunLoop();
}

uint64_t IOHIDEventSystemClientSetMatching()
{
  return _IOHIDEventSystemClientSetMatching();
}

uint64_t IOHIDEventSystemClientUnregisterEventCallback()
{
  return _IOHIDEventSystemClientUnregisterEventCallback();
}

uint64_t IOHIDEventSystemClientUnscheduleWithRunLoop()
{
  return _IOHIDEventSystemClientUnscheduleWithRunLoop();
}

CFDictionaryRef IOPSCopyExternalPowerAdapterDetails(void)
{
  return _IOPSCopyExternalPowerAdapterDetails();
}

uint64_t IOPSCopyPowerSourcesByType()
{
  return _IOPSCopyPowerSourcesByType();
}

CFArrayRef IOPSCopyPowerSourcesList(CFTypeRef blob)
{
  return _IOPSCopyPowerSourcesList(blob);
}

CFDictionaryRef IOPSGetPowerSourceDescription(CFTypeRef blob, CFTypeRef ps)
{
  return _IOPSGetPowerSourceDescription(blob, ps);
}

uint64_t ImageForArtwork()
{
  return _ImageForArtwork();
}

uint64_t ImageForArtworkDataSource()
{
  return _ImageForArtworkDataSource();
}

uint64_t IsEVRoutingSupported()
{
  return _IsEVRoutingSupported();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetProductType()
{
  return _MGGetProductType();
}

uint64_t MGGetSInt32Answer()
{
  return _MGGetSInt32Answer();
}

uint64_t MKAddressStringForAddressDictionary()
{
  return _MKAddressStringForAddressDictionary();
}

uint64_t MKApplicationLayoutDirectionIsRightToLeft()
{
  return _MKApplicationLayoutDirectionIsRightToLeft();
}

uint64_t MKArrowAppendExitRoadLeftToPathInRect()
{
  return _MKArrowAppendExitRoadLeftToPathInRect();
}

uint64_t MKArrowAppendExitRoadRightToPathInRect()
{
  return _MKArrowAppendExitRoadRightToPathInRect();
}

uint64_t MKArrowAppendLeftTurnToPathInRect()
{
  return _MKArrowAppendLeftTurnToPathInRect();
}

uint64_t MKArrowAppendMergeLeftToPathInRect()
{
  return _MKArrowAppendMergeLeftToPathInRect();
}

uint64_t MKArrowAppendMergeRightToPathInRect()
{
  return _MKArrowAppendMergeRightToPathInRect();
}

uint64_t MKArrowAppendRightTurnToPathInRect()
{
  return _MKArrowAppendRightTurnToPathInRect();
}

uint64_t MKArrowAppendStraightArrowToPathInRect()
{
  return _MKArrowAppendStraightArrowToPathInRect();
}

uint64_t MKArrowAppendUTurnToPathInRect()
{
  return _MKArrowAppendUTurnToPathInRect();
}

uint64_t MKArrowCreateBezierPathsForArrivalWithSize()
{
  return _MKArrowCreateBezierPathsForArrivalWithSize();
}

uint64_t MKArrowCreateBezierPathsForProceedToRouteWithSize()
{
  return _MKArrowCreateBezierPathsForProceedToRouteWithSize();
}

uint64_t MKCGRectFittingImageWithinSize()
{
  return _MKCGRectFittingImageWithinSize();
}

uint64_t MKClosestMapPointInLineSegmentFromMapPoint()
{
  return _MKClosestMapPointInLineSegmentFromMapPoint();
}

uint64_t MKCompassPointFromLocationDirection()
{
  return _MKCompassPointFromLocationDirection();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

uint64_t MKCoordinateForTilePoint()
{
  return _MKCoordinateForTilePoint();
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  return _MKCoordinateRegionMakeWithDistance(centerCoordinate, latitudinalMeters, longitudinalMeters);
}

uint64_t MKCoordinateRegionMakeWithZoomLevel()
{
  return _MKCoordinateRegionMakeWithZoomLevel();
}

uint64_t MKCreateBezierPathsForLane()
{
  return _MKCreateBezierPathsForLane();
}

uint64_t MKCurrencySymbolForLocale()
{
  return _MKCurrencySymbolForLocale();
}

uint64_t MKCurrentNetworkConnectionFailureDiagnosis()
{
  return _MKCurrentNetworkConnectionFailureDiagnosis();
}

uint64_t MKDefaultCompactManeuverMetrics()
{
  return _MKDefaultCompactManeuverMetrics();
}

uint64_t MKDefaultGuidanceManeuverMetrics()
{
  return _MKDefaultGuidanceManeuverMetrics();
}

uint64_t MKDefaultJunctionManeuverMetrics()
{
  return _MKDefaultJunctionManeuverMetrics();
}

uint64_t MKFormattedStringOptionsMakeDefault()
{
  return _MKFormattedStringOptionsMakeDefault();
}

uint64_t MKGetHasUserConsentedToAddingContributions()
{
  return _MKGetHasUserConsentedToAddingContributions();
}

uint64_t MKGuidanceManeuverArrowMetricsApplyScale()
{
  return _MKGuidanceManeuverArrowMetricsApplyScale();
}

uint64_t MKGuidanceManeuverArrowMetricsApplyScaleForContent()
{
  return _MKGuidanceManeuverArrowMetricsApplyScaleForContent();
}

uint64_t MKGuidanceManeuverArrowMetricsEqualToArrowMetrics()
{
  return _MKGuidanceManeuverArrowMetricsEqualToArrowMetrics();
}

uint64_t MKLaneDirectionIsToTheLeft()
{
  return _MKLaneDirectionIsToTheLeft();
}

uint64_t MKLocalizedAbbreviationForCompassPoint()
{
  return _MKLocalizedAbbreviationForCompassPoint();
}

uint64_t MKLocalizedStringForApproximateLocation()
{
  return _MKLocalizedStringForApproximateLocation();
}

uint64_t MKLocalizedStringForCurrentLocation()
{
  return _MKLocalizedStringForCurrentLocation();
}

uint64_t MKLocalizedStringForUnknownLocation()
{
  return _MKLocalizedStringForUnknownLocation();
}

uint64_t MKManeuverArrowImage()
{
  return _MKManeuverArrowImage();
}

uint64_t MKMapItemIdentifierFromGEOTransitLine()
{
  return _MKMapItemIdentifierFromGEOTransitLine();
}

uint64_t MKMapItemIdentifiersArrayFromGEOMapItemIdentifiersArray()
{
  return _MKMapItemIdentifiersArrayFromGEOMapItemIdentifiersArray();
}

uint64_t MKMapItemIdentifiersArrayToGEOMapItemIdentifiersArray()
{
  return _MKMapItemIdentifiersArrayToGEOMapItemIdentifiersArray();
}

uint64_t MKMapItemIdentifiersToGEOMapItemIdentifier()
{
  return _MKMapItemIdentifiersToGEOMapItemIdentifier();
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

uint64_t MKMapRectBoundingMapPoints()
{
  return _MKMapRectBoundingMapPoints();
}

BOOL MKMapRectContainsPoint(MKMapRect rect, MKMapPoint point)
{
  return _MKMapRectContainsPoint(rect, point);
}

uint64_t MKMapRectForCoordinateRegion()
{
  return _MKMapRectForCoordinateRegion();
}

MKMapRect MKMapRectInset(MKMapRect rect, double dx, double dy)
{
  return _MKMapRectInset(rect, dx, dy);
}

MKMapRect MKMapRectIntersection(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersection(rect1, rect2);
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

uint64_t MKMapRectMakeWithRadialDistance()
{
  return _MKMapRectMakeWithRadialDistance();
}

uint64_t MKMapRectMakeWithZoomLevel()
{
  return _MKMapRectMakeWithZoomLevel();
}

MKMapRect MKMapRectOffset(MKMapRect rect, double dx, double dy)
{
  return _MKMapRectOffset(rect, dx, dy);
}

MKMapRect MKMapRectUnion(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectUnion(rect1, rect2);
}

CLLocationDistance MKMetersBetweenMapPoints(MKMapPoint a, MKMapPoint b)
{
  return _MKMetersBetweenMapPoints(a, b);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  return _MKRoadWidthAtZoomScale(zoomScale);
}

uint64_t MKServiceGapDescription()
{
  return _MKServiceGapDescription();
}

uint64_t MKSetHasUserConsentedToAddingContributions()
{
  return _MKSetHasUserConsentedToAddingContributions();
}

uint64_t MKTilePointForCoordinate()
{
  return _MKTilePointForCoordinate();
}

uint64_t MKTransitIncidentIcon()
{
  return _MKTransitIncidentIcon();
}

uint64_t MKTransitLiveDepartureColorForLiveStatus()
{
  return _MKTransitLiveDepartureColorForLiveStatus();
}

uint64_t MKTransitLiveDepartureColorForViewWithLiveStatus()
{
  return _MKTransitLiveDepartureColorForViewWithLiveStatus();
}

uint64_t MKZoomLevelForScaleF()
{
  return _MKZoomLevelForScaleF();
}

uint64_t MKZoomScaleForZoomLevelF()
{
  return _MKZoomScaleForZoomLevelF();
}

uint64_t MNClearStoredRoutesWithSubpathUsedBefore()
{
  return _MNClearStoredRoutesWithSubpathUsedBefore();
}

uint64_t MNGetRouteFromSubpathWithID()
{
  return _MNGetRouteFromSubpathWithID();
}

uint64_t MNHeadphonesAreInUse()
{
  return _MNHeadphonesAreInUse();
}

uint64_t MNInstructionsCalculateDistanceUnits()
{
  return _MNInstructionsCalculateDistanceUnits();
}

uint64_t MNInstructionsShortPromptTypeForManeuver()
{
  return _MNInstructionsShortPromptTypeForManeuver();
}

uint64_t MNLocaleDidChangeNotification()
{
  return _MNLocaleDidChangeNotification();
}

uint64_t MNNavigationServiceStateAsString()
{
  return _MNNavigationServiceStateAsString();
}

uint64_t MNNavigationServiceStateChangedFromNavigatingToStopped()
{
  return _MNNavigationServiceStateChangedFromNavigatingToStopped();
}

uint64_t MNNavigationServiceStateChangedToNavigating()
{
  return _MNNavigationServiceStateChangedToNavigating();
}

uint64_t MNNavigationServiceStateIsNavigating()
{
  return _MNNavigationServiceStateIsNavigating();
}

uint64_t MNRecommendedDateForClearingRoutes()
{
  return _MNRecommendedDateForClearingRoutes();
}

uint64_t MNSaveRouteWithSubpath()
{
  return _MNSaveRouteWithSubpath();
}

uint64_t MNTransportTypeSupportsTurnByTurn()
{
  return _MNTransportTypeSupportsTurnByTurn();
}

uint64_t MSPBundle()
{
  return _MSPBundle();
}

uint64_t MSPHistoryEntryGetStorage()
{
  return _MSPHistoryEntryGetStorage();
}

uint64_t MSPHistoryEntryMakeFromStorage()
{
  return _MSPHistoryEntryMakeFromStorage();
}

uint64_t MSPSharedTripReceiverDetailViewSupportedForTransportType()
{
  return _MSPSharedTripReceiverDetailViewSupportedForTransportType();
}

uint64_t MSPSharedTripReceivingAvailable()
{
  return _MSPSharedTripReceivingAvailable();
}

uint64_t MSPSharedTripServiceNameForRawServiceName()
{
  return _MSPSharedTripServiceNameForRawServiceName();
}

uint64_t MSPSharedTripSharingAvailable()
{
  return _MSPSharedTripSharingAvailable();
}

uint64_t MSPSharedTripSharingSupportedForTransportType()
{
  return _MSPSharedTripSharingSupportedForTransportType();
}

uint64_t MSPUGCFetchClientCertificate()
{
  return _MSPUGCFetchClientCertificate();
}

uint64_t MSPUGCFetchClientCertificateWithCompletion()
{
  return _MSPUGCFetchClientCertificateWithCompletion();
}

uint64_t MSPUGCPerformLogDiscardForCurrentSessionWithCompletion()
{
  return _MSPUGCPerformLogDiscardForCurrentSessionWithCompletion();
}

uint64_t MSPUGCPerformLogDiscardForSessionWithCompletion()
{
  return _MSPUGCPerformLogDiscardForSessionWithCompletion();
}

uint64_t MUButtonCellSeparatorInsets()
{
  return _MUButtonCellSeparatorInsets();
}

uint64_t MUPlaceSectionHeaderAccessoryButtonFont()
{
  return _MUPlaceSectionHeaderAccessoryButtonFont();
}

uint64_t MUPlaceSectionHeaderFont()
{
  return _MUPlaceSectionHeaderFont();
}

uint64_t MUPlaceSectionHeaderLeadingSpacingForInitialOffset()
{
  return _MUPlaceSectionHeaderLeadingSpacingForInitialOffset();
}

uint64_t MURegisterForButtonShapeEnablementChanges()
{
  return _MURegisterForButtonShapeEnablementChanges();
}

uint64_t MapKitIdiomIsMacCatalyst()
{
  return _MapKitIdiomIsMacCatalyst();
}

uint64_t MapsFeature_AddBlockListener()
{
  return _MapsFeature_AddBlockListener();
}

uint64_t MapsFeature_AddDelegateListener()
{
  return _MapsFeature_AddDelegateListener();
}

uint64_t MapsFeature_IsAvailable()
{
  return _MapsFeature_IsAvailable();
}

uint64_t MapsFeature_IsAvailable_PedestrianAR()
{
  return _MapsFeature_IsAvailable_PedestrianAR();
}

uint64_t MapsFeature_IsAvailable_SSAO()
{
  return _MapsFeature_IsAvailable_SSAO();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedLighting()
{
  return _MapsFeature_IsAvailable_ShelbyvilleAdvancedLighting();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleAdvancedWater()
{
  return _MapsFeature_IsAvailable_ShelbyvilleAdvancedWater();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleBuildingHeights()
{
  return _MapsFeature_IsAvailable_ShelbyvilleBuildingHeights();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleColorizedBuildings()
{
  return _MapsFeature_IsAvailable_ShelbyvilleColorizedBuildings();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleGlobe()
{
  return _MapsFeature_IsAvailable_ShelbyvilleGlobe();
}

uint64_t MapsFeature_IsAvailable_ShelbyvilleRoundedBuildings()
{
  return _MapsFeature_IsAvailable_ShelbyvilleRoundedBuildings();
}

uint64_t MapsFeature_IsAvailable_VisualLocalizationCrowdsourcing()
{
  return _MapsFeature_IsAvailable_VisualLocalizationCrowdsourcing();
}

uint64_t MapsFeature_IsEnabled()
{
  return _MapsFeature_IsEnabled();
}

uint64_t MapsFeature_IsEnabled_ARPCommunityID()
{
  return _MapsFeature_IsEnabled_ARPCommunityID();
}

uint64_t MapsFeature_IsEnabled_Alberta()
{
  return _MapsFeature_IsEnabled_Alberta();
}

uint64_t MapsFeature_IsEnabled_Bakersfield()
{
  return _MapsFeature_IsEnabled_Bakersfield();
}

uint64_t MapsFeature_IsEnabled_DrivingMultiWaypointRoutes()
{
  return _MapsFeature_IsEnabled_DrivingMultiWaypointRoutes();
}

uint64_t MapsFeature_IsEnabled_EVRouting()
{
  return _MapsFeature_IsEnabled_EVRouting();
}

uint64_t MapsFeature_IsEnabled_EVRoutingEnhancements()
{
  return _MapsFeature_IsEnabled_EVRoutingEnhancements();
}

uint64_t MapsFeature_IsEnabled_FCLShowETA()
{
  return _MapsFeature_IsEnabled_FCLShowETA();
}

uint64_t MapsFeature_IsEnabled_FrenchClimateLaw()
{
  return _MapsFeature_IsEnabled_FrenchClimateLaw();
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegration()
{
  return _MapsFeature_IsEnabled_GuidesMediaIntegration();
}

uint64_t MapsFeature_IsEnabled_GuidesMediaIntegrationThirdPartyLinks()
{
  return _MapsFeature_IsEnabled_GuidesMediaIntegrationThirdPartyLinks();
}

uint64_t MapsFeature_IsEnabled_HikingWatch()
{
  return _MapsFeature_IsEnabled_HikingWatch();
}

uint64_t MapsFeature_IsEnabled_HikingiOS()
{
  return _MapsFeature_IsEnabled_HikingiOS();
}

uint64_t MapsFeature_IsEnabled_LagunaBeach()
{
  return _MapsFeature_IsEnabled_LagunaBeach();
}

uint64_t MapsFeature_IsEnabled_Maps182()
{
  return _MapsFeature_IsEnabled_Maps182();
}

uint64_t MapsFeature_IsEnabled_Maps269()
{
  return _MapsFeature_IsEnabled_Maps269();
}

uint64_t MapsFeature_IsEnabled_Maps357RoutePlanning()
{
  return _MapsFeature_IsEnabled_Maps357RoutePlanning();
}

uint64_t MapsFeature_IsEnabled_Maps420()
{
  return _MapsFeature_IsEnabled_Maps420();
}

uint64_t MapsFeature_IsEnabled_MapsWally()
{
  return _MapsFeature_IsEnabled_MapsWally();
}

uint64_t MapsFeature_IsEnabled_MyPlacesFeatures()
{
  return _MapsFeature_IsEnabled_MyPlacesFeatures();
}

uint64_t MapsFeature_IsEnabled_OptimizeSearchResultComponents()
{
  return _MapsFeature_IsEnabled_OptimizeSearchResultComponents();
}

uint64_t MapsFeature_IsEnabled_PedestrianAR()
{
  return _MapsFeature_IsEnabled_PedestrianAR();
}

uint64_t MapsFeature_IsEnabled_PlaceCardShowcase()
{
  return _MapsFeature_IsEnabled_PlaceCardShowcase();
}

uint64_t MapsFeature_IsEnabled_PlaceCardWebView()
{
  return _MapsFeature_IsEnabled_PlaceCardWebView();
}

uint64_t MapsFeature_IsEnabled_RAPCommunityID()
{
  return _MapsFeature_IsEnabled_RAPCommunityID();
}

uint64_t MapsFeature_IsEnabled_RAPSydney()
{
  return _MapsFeature_IsEnabled_RAPSydney();
}

uint64_t MapsFeature_IsEnabled_RealTimeEVCharger()
{
  return _MapsFeature_IsEnabled_RealTimeEVCharger();
}

uint64_t MapsFeature_IsEnabled_SearchAndDiscovery()
{
  return _MapsFeature_IsEnabled_SearchAndDiscovery();
}

uint64_t MapsFeature_IsEnabled_SearchResultsImpressions()
{
  return _MapsFeature_IsEnabled_SearchResultsImpressions();
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleAdvancedLighting()
{
  return _MapsFeature_IsEnabled_ShelbyvilleAdvancedLighting();
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleSearch()
{
  return _MapsFeature_IsEnabled_ShelbyvilleSearch();
}

uint64_t MapsFeature_IsEnabled_ShelbyvilleTerrain()
{
  return _MapsFeature_IsEnabled_ShelbyvilleTerrain();
}

uint64_t MapsFeature_IsEnabled_StandaloneWatchOffline()
{
  return _MapsFeature_IsEnabled_StandaloneWatchOffline();
}

uint64_t MapsFeature_IsEnabled_SydneyARP()
{
  return _MapsFeature_IsEnabled_SydneyARP();
}

uint64_t MapsFeature_IsEnabled_TransitPay()
{
  return _MapsFeature_IsEnabled_TransitPay();
}

uint64_t MapsFeature_RemoveBlockListener()
{
  return _MapsFeature_RemoveBlockListener();
}

uint64_t MapsFeature_RemoveDelegateListenerForAllKeys()
{
  return _MapsFeature_RemoveDelegateListenerForAllKeys();
}

uint64_t MapsFeature_SetEnabled()
{
  return _MapsFeature_SetEnabled();
}

uint64_t MapsSuggestionsConfidenceDontKnow()
{
  return _MapsSuggestionsConfidenceDontKnow();
}

uint64_t MapsSuggestionsCurrentBestLocation()
{
  return _MapsSuggestionsCurrentBestLocation();
}

uint64_t MapsSuggestionsDefaultCacheDirectory()
{
  return _MapsSuggestionsDefaultCacheDirectory();
}

uint64_t MapsSuggestionsDispatchSyncIfDifferent()
{
  return _MapsSuggestionsDispatchSyncIfDifferent();
}

uint64_t MapsSuggestionsDistanceBetweenEntries()
{
  return _MapsSuggestionsDistanceBetweenEntries();
}

uint64_t MapsSuggestionsDistanceFromHereToEntry()
{
  return _MapsSuggestionsDistanceFromHereToEntry();
}

uint64_t MapsSuggestionsEntryFromShortcut()
{
  return _MapsSuggestionsEntryFromShortcut();
}

uint64_t MapsSuggestionsEntryIsNearbyTransit()
{
  return _MapsSuggestionsEntryIsNearbyTransit();
}

uint64_t MapsSuggestionsEntryTypeEnumerate()
{
  return _MapsSuggestionsEntryTypeEnumerate();
}

uint64_t MapsSuggestionsGetTransportationModeDebugPanelSetting()
{
  return _MapsSuggestionsGetTransportationModeDebugPanelSetting();
}

uint64_t MapsSuggestionsIsInCoarseLocation()
{
  return _MapsSuggestionsIsInCoarseLocation();
}

uint64_t MapsSuggestionsIsInTheFuture()
{
  return _MapsSuggestionsIsInTheFuture();
}

uint64_t MapsSuggestionsIsValidLocation()
{
  return _MapsSuggestionsIsValidLocation();
}

uint64_t MapsSuggestionsIsValidVisit()
{
  return _MapsSuggestionsIsValidVisit();
}

uint64_t MapsSuggestionsLocalizedAddShortcutString()
{
  return _MapsSuggestionsLocalizedAddShortcutString();
}

uint64_t MapsSuggestionsLocalizedMyTitleForShortcutType()
{
  return _MapsSuggestionsLocalizedMyTitleForShortcutType();
}

uint64_t MapsSuggestionsLocalizedNearbyTransitFullString()
{
  return _MapsSuggestionsLocalizedNearbyTransitFullString();
}

uint64_t MapsSuggestionsLocalizedNearbyTransitFullSubtitleString()
{
  return _MapsSuggestionsLocalizedNearbyTransitFullSubtitleString();
}

uint64_t MapsSuggestionsLocalizedNearbyTransitShortString()
{
  return _MapsSuggestionsLocalizedNearbyTransitShortString();
}

uint64_t MapsSuggestionsLocalizedNearbyTransitShortSubtitleString()
{
  return _MapsSuggestionsLocalizedNearbyTransitShortSubtitleString();
}

uint64_t MapsSuggestionsLocalizedResumeRouteString()
{
  return _MapsSuggestionsLocalizedResumeRouteString();
}

uint64_t MapsSuggestionsLocalizedShortcutSubString()
{
  return _MapsSuggestionsLocalizedShortcutSubString();
}

uint64_t MapsSuggestionsLocalizedTitleForShortcutType()
{
  return _MapsSuggestionsLocalizedTitleForShortcutType();
}

uint64_t MapsSuggestionsLocationForMapItem()
{
  return _MapsSuggestionsLocationForMapItem();
}

uint64_t MapsSuggestionsLogPredictedTransportMode()
{
  return _MapsSuggestionsLogPredictedTransportMode();
}

uint64_t MapsSuggestionsLoggingIsVerbose()
{
  return _MapsSuggestionsLoggingIsVerbose();
}

uint64_t MapsSuggestionsMapItemCityName()
{
  return _MapsSuggestionsMapItemCityName();
}

uint64_t MapsSuggestionsMapItemConvertIfNeeded()
{
  return _MapsSuggestionsMapItemConvertIfNeeded();
}

uint64_t MapsSuggestionsMapItemShortAddress()
{
  return _MapsSuggestionsMapItemShortAddress();
}

uint64_t MapsSuggestionsMapItemStreetWithNumber()
{
  return _MapsSuggestionsMapItemStreetWithNumber();
}

uint64_t MapsSuggestionsMostRecentLocation()
{
  return _MapsSuggestionsMostRecentLocation();
}

uint64_t MapsSuggestionsNonNilString()
{
  return _MapsSuggestionsNonNilString();
}

uint64_t MapsSuggestionsNow()
{
  return _MapsSuggestionsNow();
}

uint64_t MapsSuggestionsNowWithOffset()
{
  return _MapsSuggestionsNowWithOffset();
}

uint64_t MapsSuggestionsRemovalBehaviorEnumerate()
{
  return _MapsSuggestionsRemovalBehaviorEnumerate();
}

uint64_t MapsSuggestionsRoutineLocalizedLabelLOIType()
{
  return _MapsSuggestionsRoutineLocalizedLabelLOIType();
}

uint64_t MapsSuggestionsShortcutSplit()
{
  return _MapsSuggestionsShortcutSplit();
}

uint64_t MapsSuggestionsShortcutTypeFromEntryType()
{
  return _MapsSuggestionsShortcutTypeFromEntryType();
}

uint64_t MapsSuggestionsShortcutTypeStyleAttributes()
{
  return _MapsSuggestionsShortcutTypeStyleAttributes();
}

uint64_t MapsSuggestionsShortcutUniqueIdentifier()
{
  return _MapsSuggestionsShortcutUniqueIdentifier();
}

uint64_t MapsSuggestionsStringFromDate()
{
  return _MapsSuggestionsStringFromDate();
}

uint64_t MapsSuggestionsTimeZone()
{
  return _MapsSuggestionsTimeZone();
}

uint64_t MapsSuggestionsTransportModeForOriginAndDestination()
{
  return _MapsSuggestionsTransportModeForOriginAndDestination();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

uint64_t NSIntegerIsValidFloorOrdinal()
{
  return _NSIntegerIsValidFloorOrdinal();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSIntersectionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

void NSLog(NSString *format, ...)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

uint64_t NSStringFromARGeoTrackingAccuracy()
{
  return _NSStringFromARGeoTrackingAccuracy();
}

uint64_t NSStringFromARGeoTrackingState()
{
  return _NSStringFromARGeoTrackingState();
}

uint64_t NSStringFromARGeoTrackingStateReason()
{
  return _NSStringFromARGeoTrackingStateReason();
}

uint64_t NSStringFromARReplayMode()
{
  return _NSStringFromARReplayMode();
}

uint64_t NSStringFromBOOL()
{
  return _NSStringFromBOOL();
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return _NSStringFromCGPoint(point);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return _NSStringFromCGRect(rect);
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return _NSStringFromCGSize(size);
}

uint64_t NSStringFromCLLocationCoordinate()
{
  return _NSStringFromCLLocationCoordinate();
}

uint64_t NSStringFromCPGuidanceState()
{
  return _NSStringFromCPGuidanceState();
}

uint64_t NSStringFromCPJunctionType()
{
  return _NSStringFromCPJunctionType();
}

uint64_t NSStringFromCPManeuverState()
{
  return _NSStringFromCPManeuverState();
}

uint64_t NSStringFromCPManeuverType()
{
  return _NSStringFromCPManeuverType();
}

uint64_t NSStringFromCPTrafficSide()
{
  return _NSStringFromCPTrafficSide();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromMapsSuggestionsCurrentBestLocation()
{
  return _NSStringFromMapsSuggestionsCurrentBestLocation();
}

uint64_t NSStringFromMapsSuggestionsEntryType()
{
  return _NSStringFromMapsSuggestionsEntryType();
}

uint64_t NSStringFromMapsSuggestionsRemovalBehavior()
{
  return _NSStringFromMapsSuggestionsRemovalBehavior();
}

uint64_t NSStringFromMapsSuggestionsShortcutType()
{
  return _NSStringFromMapsSuggestionsShortcutType();
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return _NSStringFromProtocol(proto);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *__cdecl NSStringFromSize(NSSize aSize)
{
  return _NSStringFromSize(aSize);
}

NSString *__cdecl NSStringFromUIEdgeInsets(UIEdgeInsets insets)
{
  return _NSStringFromUIEdgeInsets(insets);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t PBDataWriterPlaceMark()
{
  return _PBDataWriterPlaceMark();
}

uint64_t PBDataWriterRecallMark()
{
  return _PBDataWriterRecallMark();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteFixed32Field()
{
  return _PBDataWriterWriteFixed32Field();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return _PBDataWriterWriteInt64Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return _PBDataWriterWriteSubmessage();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBHashBytes()
{
  return _PBHashBytes();
}

uint64_t PBReaderPlaceMark()
{
  return _PBReaderPlaceMark();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderRecallMark()
{
  return _PBReaderRecallMark();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PBRepeatedUInt32Add()
{
  return _PBRepeatedUInt32Add();
}

uint64_t PBRepeatedUInt32Clear()
{
  return _PBRepeatedUInt32Clear();
}

uint64_t PBRepeatedUInt32Copy()
{
  return _PBRepeatedUInt32Copy();
}

uint64_t PBRepeatedUInt32Hash()
{
  return _PBRepeatedUInt32Hash();
}

uint64_t PBRepeatedUInt32IsEqual()
{
  return _PBRepeatedUInt32IsEqual();
}

uint64_t PBRepeatedUInt32NSArray()
{
  return _PBRepeatedUInt32NSArray();
}

uint64_t PKLegacyTransitNetworkIdentifierForCredentialType()
{
  return _PKLegacyTransitNetworkIdentifierForCredentialType();
}

uint64_t PLLogRegisteredEvent()
{
  return _PLLogRegisteredEvent();
}

uint64_t RPTContentSizeInDirection()
{
  return _RPTContentSizeInDirection();
}

uint64_t RPTGetBoundsForView()
{
  return _RPTGetBoundsForView();
}

uint64_t SBGetScreenLockStatus()
{
  return _SBGetScreenLockStatus();
}

uint64_t SBSGetScreenLockStatus()
{
  return _SBSGetScreenLockStatus();
}

uint64_t SBSIsSystemApertureAvailable()
{
  return _SBSIsSystemApertureAvailable();
}

uint64_t SBSLockDevice()
{
  return _SBSLockDevice();
}

uint64_t SBSSetAlertSuppressionContexts()
{
  return _SBSSetAlertSuppressionContexts();
}

uint64_t SBSSpringBoardServerPort()
{
  return _SBSSpringBoardServerPort();
}

uint64_t SBSUndimScreen()
{
  return _SBSUndimScreen();
}

uint64_t SBUIIsSystemApertureEnabled()
{
  return _SBUIIsSystemApertureEnabled();
}

BOOL UIAccessibilityButtonShapesEnabled(void)
{
  return _UIAccessibilityButtonShapesEnabled();
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _UIAccessibilityIsInvertColorsEnabled();
}

BOOL UIAccessibilityIsOnOffSwitchLabelsEnabled(void)
{
  return _UIAccessibilityIsOnOffSwitchLabelsEnabled();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

uint64_t UICeilToScale()
{
  return _UICeilToScale();
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return _UIContentSizeCategoryCompareToCategory(lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

uint64_t UIDistanceBetweenPoints()
{
  return _UIDistanceBetweenPoints();
}

uint64_t UIEdgeInsetsAdd()
{
  return _UIEdgeInsetsAdd();
}

uint64_t UIEdgeInsetsMakeWithEdges()
{
  return _UIEdgeInsetsMakeWithEdges();
}

uint64_t UIEdgeInsetsRotate()
{
  return _UIEdgeInsetsRotate();
}

uint64_t UIFloorToViewScale()
{
  return _UIFloorToViewScale();
}

UIFontWeight UIFontWeightForImageSymbolWeight(UIImageSymbolWeight symbolWeight)
{
  return _UIFontWeightForImageSymbolWeight(symbolWeight);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

uint64_t UIImageDataWriteToSavedPhotosAlbum()
{
  return _UIImageDataWriteToSavedPhotosAlbum();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIKeyboardForceOrderOutAutomaticAnimated()
{
  return _UIKeyboardForceOrderOutAutomaticAnimated();
}

uint64_t UIKeyboardInputModeGetBaseLanguage()
{
  return _UIKeyboardInputModeGetBaseLanguage();
}

uint64_t UIRectCenteredAboutPointScale()
{
  return _UIRectCenteredAboutPointScale();
}

void UIRectFill(CGRect rect)
{
}

uint64_t UIRectInset()
{
  return _UIRectInset();
}

uint64_t UIRectIntegralWithScale()
{
  return _UIRectIntegralWithScale();
}

uint64_t UIRectRoundToViewScale()
{
  return _UIRectRoundToViewScale();
}

uint64_t UIRoundToScale()
{
  return _UIRoundToScale();
}

uint64_t UIRoundToScreenScale()
{
  return _UIRoundToScreenScale();
}

uint64_t UIRoundToViewScale()
{
  return _UIRoundToViewScale();
}

void UISaveVideoAtPathToSavedPhotosAlbum(NSString *videoPath, id completionTarget, SEL completionSelector, void *contextInfo)
{
}

uint64_t UISystemRootDirectory()
{
  return _UISystemRootDirectory();
}

uint64_t VGChargingConnectorTypeOptionsList()
{
  return _VGChargingConnectorTypeOptionsList();
}

uint64_t VGChargingConnectorTypeOptionsPacked()
{
  return _VGChargingConnectorTypeOptionsPacked();
}

uint64_t VGChargingConnectorTypeOptionsUnpacked()
{
  return _VGChargingConnectorTypeOptionsUnpacked();
}

uint64_t VKLocationCoordinate2DIsValid()
{
  return _VKLocationCoordinate2DIsValid();
}

uint64_t VKLocationCoordinate2DMake()
{
  return _VKLocationCoordinate2DMake();
}

uint64_t VKLocationCoordinate3DMake()
{
  return _VKLocationCoordinate3DMake();
}

uint64_t VKStringForAnnotationTrackingBehavior()
{
  return _VKStringForAnnotationTrackingBehavior();
}

uint64_t VLECEFFromCoordinate()
{
  return _VLECEFFromCoordinate();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFLocaleCopyNumberingSystemForLocaleIdentifier()
{
  return __CFLocaleCopyNumberingSystemForLocaleIdentifier();
}

uint64_t _CFPreferencesCopyAppValueWithContainer()
{
  return __CFPreferencesCopyAppValueWithContainer();
}

uint64_t _CFPreferencesCopyValueWithContainer()
{
  return __CFPreferencesCopyValueWithContainer();
}

uint64_t _CFPreferencesGetAppBooleanValueWithContainer()
{
  return __CFPreferencesGetAppBooleanValueWithContainer();
}

uint64_t _CFPreferencesSetAppValueWithContainer()
{
  return __CFPreferencesSetAppValueWithContainer();
}

uint64_t _CFPreferencesSetValueWithContainer()
{
  return __CFPreferencesSetValueWithContainer();
}

uint64_t _CFPreferencesSynchronizeWithContainer()
{
  return __CFPreferencesSynchronizeWithContainer();
}

uint64_t _CTServerConnectionCopyCellularUsagePolicy()
{
  return __CTServerConnectionCopyCellularUsagePolicy();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return __CTServerConnectionCreateOnTargetQueue();
}

uint64_t _CTServerConnectionDataActivationPopupAssertionCreate()
{
  return __CTServerConnectionDataActivationPopupAssertionCreate();
}

uint64_t _GEOConfigAddBlockListenerForKey()
{
  return __GEOConfigAddBlockListenerForKey();
}

uint64_t _GEOConfigAddDelegateListenerForKey()
{
  return __GEOConfigAddDelegateListenerForKey();
}

uint64_t _GEOConfigGetDecodedValueWithSource()
{
  return __GEOConfigGetDecodedValueWithSource();
}

uint64_t _GEOConfigHasValue()
{
  return __GEOConfigHasValue();
}

uint64_t _GEOConfigRemoveValue()
{
  return __GEOConfigRemoveValue();
}

uint64_t _GEOConfigRemoveValueSync()
{
  return __GEOConfigRemoveValueSync();
}

uint64_t _GEOConfigSetEncodedValue()
{
  return __GEOConfigSetEncodedValue();
}

uint64_t _MKCartographicConfigurationDefault()
{
  return __MKCartographicConfigurationDefault();
}

uint64_t _MKMapRectThatFits()
{
  return __MKMapRectThatFits();
}

uint64_t _MKPlaceCardUseSmallerFont()
{
  return __MKPlaceCardUseSmallerFont();
}

uint64_t _MKRAPIsAvailable()
{
  return __MKRAPIsAvailable();
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

uint64_t _PDRAPFlowTypeForMapItemRAPFlowType()
{
  return __PDRAPFlowTypeForMapItemRAPFlowType();
}

uint64_t _UIContentSizeCategoryIsAccessibilityContentSizeCategory()
{
  return __UIContentSizeCategoryIsAccessibilityContentSizeCategory();
}

uint64_t _UICreateScreenUIImage()
{
  return __UICreateScreenUIImage();
}

uint64_t _UISheetMinimumTopInset()
{
  return __UISheetMinimumTopInset();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t MSg::jsonFor(MSg *this, CLLocation *a2)
{
  return MSg::jsonFor(this, a2);
}

uint64_t MSg::jsonFor()
{
  return MSg::jsonFor();
}

{
  return MSg::jsonFor();
}

{
  return MSg::jsonFor();
}

uint64_t MSg::jsonFor(MSg *this, NSDateInterval *a2)
{
  return MSg::jsonFor(this, a2);
}

uint64_t MSg::jsonFor(MSg *this, NSDate *a2)
{
  return MSg::jsonFor(this, a2);
}

uint64_t MSg::jsonFor(MSg *this, BOOL a2)
{
  return MSg::jsonFor(this, a2);
}

void std::terminate(void)
{
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

__double2 __sincos_stret(double a1)
{
  __double2 v3 = ___sincos_stret(a1);
  double cosval = v3.__cosval;
  double sinval = v3.__sinval;
  result.__double cosval = cosval;
  result.__double sinval = sinval;
  return result;
}

uint64_t _geo_NSErrorDictionaryRepresentationCopy()
{
  return __geo_NSErrorDictionaryRepresentationCopy();
}

uint64_t _geo_NSErrorFromDictionaryRepresentationCopy()
{
  return __geo_NSErrorFromDictionaryRepresentationCopy();
}

uint64_t _geo_NSErrorXPCSafeRepresentationCopy()
{
  return __geo_NSErrorXPCSafeRepresentationCopy();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return __os_activity_create(dso, description, activity, flags);
}

void _os_activity_label_useraction(void *dso, const char *name)
{
}

uint64_t _os_crash()
{
  return __os_crash();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return __swift_stdlib_strtod_clocale();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

uint64_t annotatedSnapshotImageWithMapItems()
{
  return _annotatedSnapshotImageWithMapItems();
}

uint32_t arc4random(void)
{
  return _arc4random();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

uint64_t archive_entry_free()
{
  return _archive_entry_free();
}

uint64_t archive_entry_new()
{
  return _archive_entry_new();
}

uint64_t archive_entry_set_filetype()
{
  return _archive_entry_set_filetype();
}

uint64_t archive_entry_set_pathname()
{
  return _archive_entry_set_pathname();
}

uint64_t archive_entry_set_perm()
{
  return _archive_entry_set_perm();
}

uint64_t archive_entry_set_size()
{
  return _archive_entry_set_size();
}

uint64_t archive_write_add_filter_gzip()
{
  return _archive_write_add_filter_gzip();
}

uint64_t archive_write_close()
{
  return _archive_write_close();
}

uint64_t archive_write_data()
{
  return _archive_write_data();
}

uint64_t archive_write_free()
{
  return _archive_write_free();
}

uint64_t archive_write_header()
{
  return _archive_write_header();
}

uint64_t archive_write_new()
{
  return _archive_write_new();
}

uint64_t archive_write_open_filename()
{
  return _archive_write_open_filename();
}

uint64_t archive_write_set_format_v7tar()
{
  return _archive_write_set_format_v7tar();
}

long double atan2(long double __y, long double __x)
{
  return _atan2(__y, __x);
}

char *__cdecl basename(char *a1)
{
  return _basename(a1);
}

void bzero(void *a1, size_t a2)
{
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

Class class_getSuperclass(Class cls)
{
  return _class_getSuperclass(cls);
}

long double cos(long double __x)
{
  return _cos(__x);
}

uint64_t ct_green_tea_logger_create_static()
{
  return _ct_green_tea_logger_create_static();
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_assert_queue_not_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_block_cancel(dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return _dispatch_block_create(flags, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return _dispatch_get_specific(key);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return _dispatch_queue_get_label(queue);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return _dispatch_walltime(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void exit(int a1)
{
}

long double exp(long double __x)
{
  return _exp(__x);
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

uint64_t featureStyleAttributesHash()
{
  return _featureStyleAttributesHash();
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

float fmodf(float a1, float a2)
{
  return _fmodf(a1, a2);
}

void free(void *a1)
{
}

uint64_t geoLPRRegionsContainingPoint()
{
  return _geoLPRRegionsContainingPoint();
}

uint64_t geo_assert_isolated()
{
  return _geo_assert_isolated();
}

uint64_t geo_dispatch_async_qos()
{
  return _geo_dispatch_async_qos();
}

uint64_t geo_dispatch_queue_create()
{
  return _geo_dispatch_queue_create();
}

uint64_t geo_dispatch_queue_create_with_qos()
{
  return _geo_dispatch_queue_create_with_qos();
}

uint64_t geo_dispatch_timer_create_on_queue()
{
  return _geo_dispatch_timer_create_on_queue();
}

uint64_t geo_get_global_queue()
{
  return _geo_get_global_queue();
}

uint64_t geo_isolate_sync()
{
  return _geo_isolate_sync();
}

uint64_t geo_isolate_sync_data()
{
  return _geo_isolate_sync_data();
}

uint64_t geo_isolater_create()
{
  return _geo_isolater_create();
}

uint64_t getCTGreenTeaOsLogHandle()
{
  return _getCTGreenTeaOsLogHandle();
}

pid_t getpid(void)
{
  return _getpid();
}

uint64_t imageWithPlaceholderAndLoadHandler()
{
  return _imageWithPlaceholderAndLoadHandler();
}

uint64_t isExtensionHidden()
{
  return _isExtensionHidden();
}

uint64_t isExtensionLocked()
{
  return _isExtensionLocked();
}

uint64_t isLikelyMeetup()
{
  return _isLikelyMeetup();
}

uint64_t isLikelyMeetupThroughFindMy()
{
  return _isLikelyMeetupThroughFindMy();
}

uint64_t isLikelyMeetupThroughMessages()
{
  return _isLikelyMeetupThroughMessages();
}

uint64_t isRecentlyShared()
{
  return _isRecentlyShared();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

long double log(long double __x)
{
  return _log(__x);
}

long double log2(long double __x)
{
  return _log2(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void method_exchangeImplementations(Method m1, Method m2)
{
}

uint64_t navDisplayAddressForMapItem()
{
  return _navDisplayAddressForMapItem();
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

void objc_addLoadImageFunc(objc_func_loadImage func)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_log_with_args()
{
  return _os_log_with_args();
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return _os_signpost_id_make_with_pointer(log, ptr);
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  objc_method_description MethodDescription = _protocol_getMethodDescription(p, aSel, isRequiredMethod, isInstanceMethod);
  types = MethodDescription.types;
  name = MethodDescription.name;
  result.types = types;
  result.name = name;
  return result;
}

int pthread_main_np(void)
{
  return _pthread_main_np();
}

int rand(void)
{
  return _rand();
}

const char *__cdecl sel_getName(SEL sel)
{
  return _sel_getName(sel);
}

SEL sel_getUid(const char *str)
{
  return _sel_getUid(str);
}

long double sin(long double __x)
{
  return _sin(__x);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeMetadata()
{
  return _swift_getTupleTypeMetadata();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

int system(const char *a1)
{
  return _system(a1);
}

uint64_t tcc_identity_create()
{
  return _tcc_identity_create();
}

vImage_Error vImageBoxConvolve_ARGB8888(const vImage_Buffer *src, const vImage_Buffer *dest, void *tempBuffer, vImagePixelCount srcOffsetToROI_X, vImagePixelCount srcOffsetToROI_Y, uint32_t kernel_height, uint32_t kernel_width, const Pixel_8888 backgroundColor, vImage_Flags flags)
{
  return _vImageBoxConvolve_ARGB8888(src, dest, tempBuffer, srcOffsetToROI_X, srcOffsetToROI_Y, kernel_height, kernel_width, backgroundColor, flags);
}

vImage_Error vImageBuffer_InitWithCGImage(vImage_Buffer *buf, vImage_CGImageFormat *format, const CGFloat *backgroundColor, CGImageRef image, vImage_Flags flags)
{
  return _vImageBuffer_InitWithCGImage(buf, format, backgroundColor, image, flags);
}

CGImageRef vImageCreateCGImageFromBuffer(const vImage_Buffer *buf, const vImage_CGImageFormat *format, void (__cdecl *callback)(void *, void *), void *userData, vImage_Flags flags, vImage_Error *error)
{
  return _vImageCreateCGImageFromBuffer(buf, format, callback, userData, flags, error);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return _[a1 CGContext];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return _[a1 CGSizeValue];
}

id objc_msgSend_CTFrame(void *a1, const char *a2, ...)
{
  return _[a1 CTFrame];
}

id objc_msgSend_ETA(void *a1, const char *a2, ...)
{
  return _[a1 ETA];
}

id objc_msgSend_ETAView(void *a1, const char *a2, ...)
{
  return _[a1 ETAView];
}

id objc_msgSend_ETagForAssetType_(void *a1, const char *a2, ...)
{
  return [a1 ETagForAssetType];
}

id objc_msgSend_GEOConfigNamespaceName(void *a1, const char *a2, ...)
{
  return _[a1 GEOConfigNamespaceName];
}

id objc_msgSend_GEOErrorWithCode_reason_(void *a1, const char *a2, ...)
{
  return [a1 GEOErrorWithCode:reason:];
}

id objc_msgSend_GEOManeuverTypeForGEOLaneDirection_(void *a1, const char *a2, ...)
{
  return [a1 GEOManeuverTypeForGEOLaneDirection:];
}

id objc_msgSend_ID(void *a1, const char *a2, ...)
{
  return _[a1 ID];
}

id objc_msgSend_ISOCountryCodes(void *a1, const char *a2, ...)
{
  return _[a1 ISOCountryCodes];
}

id objc_msgSend_ISOCurrencyCodes(void *a1, const char *a2, ...)
{
  return _[a1 ISOCurrencyCodes];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_MKCoordinateSpanValue(void *a1, const char *a2, ...)
{
  return _[a1 MKCoordinateSpanValue];
}

id objc_msgSend_MKCoordinateValue(void *a1, const char *a2, ...)
{
  return _[a1 MKCoordinateValue];
}

id objc_msgSend_MKMapItem(void *a1, const char *a2, ...)
{
  return _[a1 MKMapItem];
}

id objc_msgSend_NavBarChromeHeaderTopYOffset(void *a1, const char *a2, ...)
{
  return _[a1 NavBarChromeHeaderTopYOffset];
}

id objc_msgSend_PDFDataWithActions_(void *a1, const char *a2, ...)
{
  return [a1 PDFDataWithActions:];
}

id objc_msgSend_RAPDirectionsStepsList_shouldShowFlagForStep_listItem_(void *a1, const char *a2, ...)
{
  return [a1 RAPDirectionsStepsList:shouldShowFlagForStep:listItem:];
}

id objc_msgSend_RAPHomeReportMenu(void *a1, const char *a2, ...)
{
  return _[a1 RAPHomeReportMenu];
}

id objc_msgSend_RAPLocationStyleAttributes(void *a1, const char *a2, ...)
{
  return _[a1 RAPLocationStyleAttributes];
}

id objc_msgSend_RAPTitle(void *a1, const char *a2, ...)
{
  return _[a1 RAPTitle];
}

id objc_msgSend_RAPTransitDirectionsStepsList_shouldShowFlagForStep_listItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "RAPTransitDirectionsStepsList:shouldShowFlagForStep:listItem:");
}

id objc_msgSend_RapStateIconAsString_(void *a1, const char *a2, ...)
{
  return [a1 RapStateIconAsString:];
}

id objc_msgSend_RideBookingPlanningSession_didFinishResolvingWaypointSet_(void *a1, const char *a2, ...)
{
  return [a1 RideBookingPlanningSession:didFinishResolvingWaypointSet:];
}

id objc_msgSend_RideBookingPlanningSession_rideOptionStateDidChange_(void *a1, const char *a2, ...)
{
  return [a1 RideBookingPlanningSession:rideOptionStateDidChange:];
}

id objc_msgSend_SBUISA_systemApertureLeadingConcentricContentLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureLeadingConcentricContentLayoutGuide];
}

id objc_msgSend_SBUISA_systemApertureObstructedAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureObstructedAreaLayoutGuide];
}

id objc_msgSend_SBUISA_systemApertureTrailingConcentricContentLayoutGuide(void *a1, const char *a2, ...)
{
  return [a1 SBUISA_systemApertureTrailingConcentricContentLayoutGuide];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 URLAtIndex:];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:isDirectory:];
}

id objc_msgSend_URLByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathExtension:];
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByResolvingSymlinksInPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByResolvingSymlinksInPath];
}

id objc_msgSend_URLContexts(void *a1, const char *a2, ...)
{
  return _[a1 URLContexts];
}

id objc_msgSend_URLForCameraAt_altitude_rotation_tilt_roll_(void *a1, const char *a2, ...)
{
  return [a1 URLForCameraAt:altitude:rotation:tilt:roll:];
}

id objc_msgSend_URLForCollectionStorage_(void *a1, const char *a2, ...)
{
  return [a1 URLForCollectionStorage:];
}

id objc_msgSend_URLForDirectionsFromHereTo_label_muid_provider_transport_(void *a1, const char *a2, ...)
{
  return [a1 URLForDirectionsFromHereTo:label:muid:provider:transport:];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return [a1 URLForDirectory:inDomain:appropriateForURL:create:error:];
}

id objc_msgSend_URLForInternalBusiness_id_provider_(void *a1, const char *a2, ...)
{
  return [a1 URLForInternalBusiness:id:provider:];
}

id objc_msgSend_URLForInternalBusiness_id_provider_coordinate_address_(void *a1, const char *a2, ...)
{
  return [a1 URLForInternalBusiness:id:provider:coordinate:address:];
}

id objc_msgSend_URLForKey_(void *a1, const char *a2, ...)
{
  return [a1 URLForKey:];
}

id objc_msgSend_URLForSearch_(void *a1, const char *a2, ...)
{
  return [a1 URLForSearch:];
}

id objc_msgSend_URLHandler_didFinishAsynchronousHandlingWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLHandler:didFinishAsynchronousHandlingWithError:");
}

id objc_msgSend_URLHandler_launchIntoSearchWithMapItems_options_context_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:launchIntoSearchWithMapItems:options:context:];
}

id objc_msgSend_URLHandler_launchWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:launchWithOptions:];
}

id objc_msgSend_URLHandler_setRegion_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:setRegion:];
}

id objc_msgSend_URLHandler_setRegionWithCamera_pitch_yaw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLHandler:setRegionWithCamera:pitch:yaw:");
}

id objc_msgSend_URLHandler_setRegionWithCenter_zoomLevel_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:setRegionWithCenter:zoomLevel:];
}

id objc_msgSend_URLHandler_showDirectionsFrom_to_using_muid_providerId_showLabel_directionsOptions_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:showDirectionsFrom:to:using:muid:providerId:showLabel:directionsOptions:];
}

id objc_msgSend_URLHandler_showDirectionsFrom_toDestinations_using_directionsOptions_(void *a1, const char *a2, ...)
{
  return [a1 URLHandler:showDirectionsFrom:toDestinations:using:directionsOptions:];
}

id objc_msgSend_URLHandlerWillStartAsynchronousHandling_(void *a1, const char *a2, ...)
{
  return [a1 URLHandlerWillStartAsynchronousHandling:];
}

id objc_msgSend_URLQueryAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLQueryAllowedCharacterSet];
}

id objc_msgSend_URLString(void *a1, const char *a2, ...)
{
  return _[a1 URLString];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_URLsForDirectory_inDomains_(void *a1, const char *a2, ...)
{
  return [a1 URLsForDirectory:inDomains:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_VIOEnabledHintLabel(void *a1, const char *a2, ...)
{
  return _[a1 VIOEnabledHintLabel];
}

id objc_msgSend_VKApplicationUILayoutForStyle_(void *a1, const char *a2, ...)
{
  return [a1 VKApplicationUILayoutForStyle:];
}

id objc_msgSend_VLFSessionLocalizationFailedWithError_(void *a1, const char *a2, ...)
{
  return [a1 VLFSessionLocalizationFailedWithError:];
}

id objc_msgSend_VLFSessionLocalizationSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 VLFSessionLocalizationSucceeded];
}

id objc_msgSend__Car_cancelUpdateETA(void *a1, const char *a2, ...)
{
  return [a1 _Car_cancelUpdateETA];
}

id objc_msgSend__Car_etaAge(void *a1, const char *a2, ...)
{
  return [a1 _Car_etaAge];
}

id objc_msgSend__Car_isPrimaryRefreshQueue(void *a1, const char *a2, ...)
{
  return [a1 _Car_isPrimaryRefreshQueue];
}

id objc_msgSend__Car_isVisible(void *a1, const char *a2, ...)
{
  return [a1 _Car_isVisible];
}

id objc_msgSend__Car_queueUpdateETA(void *a1, const char *a2, ...)
{
  return [_Car_queueUpdateETA];
}

id objc_msgSend__Car_refreshOperation(void *a1, const char *a2, ...)
{
  return [_Car_refreshOperation];
}

id objc_msgSend__Car_shouldDelayOperation(void *a1, const char *a2, ...)
{
  return [a1 _Car_shouldDelayOperation];
}

id objc_msgSend__FBSScene(void *a1, const char *a2, ...)
{
  return _[a1 _FBSScene];
}

id objc_msgSend__GEOTrafficFeedbackTypeForAction_(void *a1, const char *a2, ...)
{
  return [a1 _GEOTrafficFeedbackTypeForAction];
}

id objc_msgSend__MapsCarPlay_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_MapsCarPlay_isEqual:");
}

id objc_msgSend__RAPFlowType(void *a1, const char *a2, ...)
{
  return _[a1 _RAPFlowType];
}

id objc_msgSend__URLHandler_addFindMyStopWithHandleIdentifier_coordinate_(void *a1, const char *a2, ...)
{
  return [_URLHandler:addFindMyStopWithHandleIdentifier:coordinate:];
}

id objc_msgSend__URLHandler_addStopWithMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_URLHandler:addStopWithMapItem:");
}

id objc_msgSend__VKTrafficIncidentFeatureForIncidentReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_VKTrafficIncidentFeatureForIncidentReport:");
}

id objc_msgSend___debug_fakeHomeEntry(void *a1, const char *a2, ...)
{
  return [a1 __debug_fakeHomeEntry];
}

id objc_msgSend___mapsEventRecorder_sendEvent_(void *a1, const char *a2, ...)
{
  return [a1 __mapsEventRecorder_sendEvent:];
}

id objc_msgSend___maps_groupUserDefaults(void *a1, const char *a2, ...)
{
  return [a1 __maps_groupUserDefaults];
}

id objc_msgSend__accNavManeuverRoadClass(void *a1, const char *a2, ...)
{
  return _[a1 _accNavManeuverRoadClass];
}

id objc_msgSend__accNavManeuverStateForGEONavigationAnnouncementStage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accNavManeuverStateForGEONavigationAnnouncementStage:");
}

id objc_msgSend__accNavManeuverTypeForGEOManeuverType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accNavManeuverTypeForGEOManeuverType:");
}

id objc_msgSend__accNavRouteGuidanceStateForGEONavigationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accNavRouteGuidanceStateForGEONavigationState:");
}

id objc_msgSend__accNavUnitType(void *a1, const char *a2, ...)
{
  return _[a1 _accNavUnitType];
}

id objc_msgSend__acceptsApplePay(void *a1, const char *a2, ...)
{
  return _[a1 _acceptsApplePay];
}

id objc_msgSend__accessibilityIdenfifierPrefixForAudioType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIdenfifierPrefixForAudioType:");
}

id objc_msgSend__accessibilityIdenfifierPrefixForVolumeOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIdenfifierPrefixForVolumeOption:");
}

id objc_msgSend__accessibilitySetInterfaceStyleIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetInterfaceStyleIntent:");
}

id objc_msgSend__accessibilityTextForAudioType_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityTextForAudioType:];
}

id objc_msgSend__accessibilityTextForVolumeOption_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityTextForVolumeOption:];
}

id objc_msgSend__accessibilityUserInputLabelsForAudioType_(void *a1, const char *a2, ...)
{
  return [a1 _accessibilityUserInputLabelsForAudioType:];
}

id objc_msgSend__accessoryButtonTapped_(void *a1, const char *a2, ...)
{
  return [a1 _accessoryButtonTapped:];
}

id objc_msgSend__accessoryButtonTapped_accessoryModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryButtonTapped:accessoryModel:");
}

id objc_msgSend__accessoryDidConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryDidConnect:");
}

id objc_msgSend__accessoryDidDisconnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryDidDisconnect:");
}

id objc_msgSend__accessoryDidUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryDidUpdate:");
}

id objc_msgSend__accessoryDidUpdateVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryDidUpdateVehicle:");
}

id objc_msgSend__accessoryVisibilityForCollection_withAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryVisibilityForCollection:withAccessoryType:");
}

id objc_msgSend__accessoryVisiblityForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryVisiblityForEntry:");
}

id objc_msgSend__accessoryVisiblityForFavorite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessoryVisiblityForFavorite:");
}

id objc_msgSend__acquireAnimationSuppressionTokenForReason_(void *a1, const char *a2, ...)
{
  return [a1 _acquireAnimationSuppressionTokenForReason:];
}

id objc_msgSend__acquireDoubleHeightStatusBarAssertionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _acquireDoubleHeightStatusBarAssertionIfNeeded];
}

id objc_msgSend__acquireProcessAssertionForTurnByTurn_(void *a1, const char *a2, ...)
{
  return [a1 _acquireProcessAssertionForTurnByTurn];
}

id objc_msgSend__acquireSecureAppAssertion(void *a1, const char *a2, ...)
{
  return _[a1 _acquireSecureAppAssertion];
}

id objc_msgSend__actionFontWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionFontWithTraitCollection:");
}

id objc_msgSend__actionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _actionTitle];
}

id objc_msgSend__actionWithContentViewController_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionWithContentViewController:style:handler:");
}

id objc_msgSend__actionWithTitle_image_style_handler_shouldDismissHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionWithTitle:image:style:handler:shouldDismissHandler:");
}

id objc_msgSend__actions(void *a1, const char *a2, ...)
{
  return _[a1 _actions];
}

id objc_msgSend__actionsForPromptOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_actionsForPromptOptions:");
}

id objc_msgSend__actionsSectionIndex(void *a1, const char *a2, ...)
{
  return _[a1 _actionsSectionIndex];
}

id objc_msgSend__activateHosting(void *a1, const char *a2, ...)
{
  return _[a1 _activateHosting];
}

id objc_msgSend__activateMapInspector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateMapInspector:");
}

id objc_msgSend__activationDelay(void *a1, const char *a2, ...)
{
  return _[a1 _activationDelay];
}

id objc_msgSend__activeItem(void *a1, const char *a2, ...)
{
  return _[a1 _activeItem];
}

id objc_msgSend__activePairedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 _activePairedDeviceID];
}

id objc_msgSend__activityURL(void *a1, const char *a2, ...)
{
  return _[a1 _activityURL];
}

id objc_msgSend__adaptivePresentationStyle(void *a1, const char *a2, ...)
{
  return _[a1 _adaptivePresentationStyle];
}

id objc_msgSend__addAccessoryModels_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAccessoryModels:");
}

id objc_msgSend__addAfterUpdateBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAfterUpdateBlock:");
}

id objc_msgSend__addAnalyticsEventToCombinedUserPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAnalyticsEventToCombinedUserPath:");
}

id objc_msgSend__addAnalyticsInfo(void *a1, const char *a2, ...)
{
  return _[a1 _addAnalyticsInfo];
}

id objc_msgSend__addArrangedSubview_horizontalSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addArrangedSubview:horizontalSpacing:");
}

id objc_msgSend__addArrangedSubview_layoutPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addArrangedSubview:layoutPriority:");
}

id objc_msgSend__addArrival(void *a1, const char *a2, ...)
{
  return _[a1 _addArrival];
}

id objc_msgSend__addArrivalRegionOverlay_fillColor_strokeColor_lineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addArrivalRegionOverlay:fillColor:strokeColor:lineWidth:");
}

id objc_msgSend__addAudioSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addAudioSettings];
}

id objc_msgSend__addAuthTokenSectionTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addAuthTokenSectionTo:");
}

id objc_msgSend__addAutohideGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _addAutohideGestureRecognizer];
}

id objc_msgSend__addBuildInfoSection(void *a1, const char *a2, ...)
{
  return _[a1 _addBuildInfoSection];
}

id objc_msgSend__addButtonsToStackView(void *a1, const char *a2, ...)
{
  return _[a1 _addButtonsToStackView];
}

id objc_msgSend__addCachedCuratedCollections_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCachedCuratedCollections:completion:");
}

id objc_msgSend__addCancelationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCancelationHandler:");
}

id objc_msgSend__addCarPlayConnectionToTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCarPlayConnectionToTraits:");
}

id objc_msgSend__addCarPlayInfoToTraits_(void *a1, const char *a2, ...)
{
  return [a1 _addCarPlayInfoToTraits];
}

id objc_msgSend__addCardWithConfig_(void *a1, const char *a2, ...)
{
  return [a1 _addCardWithConfig:];
}

id objc_msgSend__addChildQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addChildQuestion:");
}

id objc_msgSend__addCollisionGuideAlongAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCollisionGuideAlongAxis:");
}

id objc_msgSend__addCompletionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _addCompletionIfNeeded];
}

id objc_msgSend__addContact(void *a1, const char *a2, ...)
{
  return _[a1 _addContact];
}

id objc_msgSend__addContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addContact:");
}

id objc_msgSend__addContainee_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addContainee:animated:completion:");
}

id objc_msgSend__addContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addContentView:");
}

id objc_msgSend__addControlIfNotDuplicate_(void *a1, const char *a2, ...)
{
  return [a1 _addControlIfNotDuplicate:];
}

id objc_msgSend__addCoordinatorWithMapItem_entryPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCoordinatorWithMapItem:entryPoint:");
}

id objc_msgSend__addCopyDiagnosticsToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCopyDiagnosticsToSection:");
}

id objc_msgSend__addCustomFeatureDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addCustomFeatureDataSource:");
}

id objc_msgSend__addCustomRoutesSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addCustomRoutesSettings:];
}

id objc_msgSend__addDebugView(void *a1, const char *a2, ...)
{
  return _[a1 _addDebugView];
}

id objc_msgSend__addDimmingEffect(void *a1, const char *a2, ...)
{
  return _[a1 _addDimmingEffect];
}

id objc_msgSend__addETAUpdatesSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addETAUpdatesSettings:");
}

id objc_msgSend__addEVRoutingSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addEVRoutingSettings:");
}

id objc_msgSend__addFeatureFlagsSettingsToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addFeatureFlagsSettingsToSection:");
}

id objc_msgSend__addFooterView(void *a1, const char *a2, ...)
{
  return _[a1 _addFooterView];
}

id objc_msgSend__addGeoServicesSettingsToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addGeoServicesSettingsToSection:");
}

id objc_msgSend__addGestureRecognizersForMapView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addGestureRecognizersForMapView:");
}

id objc_msgSend__addGuidance(void *a1, const char *a2, ...)
{
  return _[a1 _addGuidance];
}

id objc_msgSend__addGuideForEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addGuideForEdge:");
}

id objc_msgSend__addHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _addHeaderView];
}

id objc_msgSend__addHighlightForStepView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addHighlightForStepView:");
}

id objc_msgSend__addInVehicleInfoToTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addInVehicleInfoToTraits:");
}

id objc_msgSend__addItemsFromACToCollection(void *a1, const char *a2, ...)
{
  return _[a1 _addItemsFromACToCollection];
}

id objc_msgSend__addLicensePlateRestrictionsSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLicensePlateRestrictionsSettings:");
}

id objc_msgSend__addLocationAnnotation_history_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLocationAnnotation:history:");
}

id objc_msgSend__addLocationsSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLocationsSettings:");
}

id objc_msgSend__addLoggingEntriesToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addLoggingEntriesToSection:");
}

id objc_msgSend__addManeuverArrowSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addManeuverArrowSettings:");
}

id objc_msgSend__addMapItemSnapshotToFavorites_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMapItemSnapshotToFavorites:");
}

id objc_msgSend__addMapsBundleInfoSection(void *a1, const char *a2, ...)
{
  return _[a1 _addMapsBundleInfoSection];
}

id objc_msgSend__addMapsSuggestionsSettingsToDebugVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addMapsSuggestionsSettingsToDebugVC:");
}

id objc_msgSend__addMiscellaneousSection(void *a1, const char *a2, ...)
{
  return _[a1 _addMiscellaneousSection];
}

id objc_msgSend__addNavigationObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addNavigationObservers];
}

id objc_msgSend__addNavigationRowWithTitle_section_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addNavigationRowWithTitle:section:handler:");
}

id objc_msgSend__addNavigationServiceSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addNavigationServiceSettings:];
}

id objc_msgSend__addNearbyTransitToFavorites(void *a1, const char *a2, ...)
{
  return _[a1 _addNearbyTransitToFavorites];
}

id objc_msgSend__addNoContentView(void *a1, const char *a2, ...)
{
  return _[a1 _addNoContentView];
}

id objc_msgSend__addObserver_(void *a1, const char *a2, ...)
{
  return [a1 _addObserver:];
}

id objc_msgSend__addOrEditReviewedPlace_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOrEditReviewedPlace:completion:");
}

id objc_msgSend__addOrEditVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOrEditVehicle:");
}

id objc_msgSend__addOrRemoveObjectsInMutableArray_toMatchCount_addBlock_removeBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addOrRemoveObjectsInMutableArray:toMatchCount:addBlock:removeBlock:");
}

id objc_msgSend__addOriginDestinationToPlan_(void *a1, const char *a2, ...)
{
  return [a1 _addOriginDestinationToPlan:];
}

id objc_msgSend__addParkingNavigationSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addParkingNavigationSettings:");
}

id objc_msgSend__addPersistentVectorOverlay_(void *a1, const char *a2, ...)
{
  return [a1 _addPersistentVectorOverlay:];
}

id objc_msgSend__addPersonAction(void *a1, const char *a2, ...)
{
  return _[a1 _addPersonAction];
}

id objc_msgSend__addPhoto_(void *a1, const char *a2, ...)
{
  return [a1 _addPhoto:];
}

id objc_msgSend__addPhotosToEditorController(void *a1, const char *a2, ...)
{
  return _[a1 _addPhotosToEditorController];
}

id objc_msgSend__addPhotosUsingSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPhotosUsingSourceType:");
}

id objc_msgSend__addPhotosWithEntryPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPhotosWithEntryPoint:");
}

id objc_msgSend__addPhotosWithMetadataToEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPhotosWithMetadataToEditor:");
}

id objc_msgSend__addPlaceToCollection_editCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPlaceToCollection:editCollection:");
}

id objc_msgSend__addPlacesToCollectionSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPlacesToCollectionSnapshot:");
}

id objc_msgSend__addPreloadingSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addPreloadingSettings];
}

id objc_msgSend__addRAPButton(void *a1, const char *a2, ...)
{
  return _[a1 _addRAPButton];
}

id objc_msgSend__addRAPRecord_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRAPRecord:completion:");
}

id objc_msgSend__addRadarEntriesToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRadarEntriesToSection:");
}

id objc_msgSend__addRecentPlaceForSearchResult_(void *a1, const char *a2, ...)
{
  return [a1 _addRecentPlaceForSearchResult:];
}

id objc_msgSend__addRefinementsBar(void *a1, const char *a2, ...)
{
  return _[a1 _addRefinementsBar];
}

id objc_msgSend__addReport_(void *a1, const char *a2, ...)
{
  return [a1 _addReport:];
}

id objc_msgSend__addRestoreTaskForSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRestoreTaskForSession:");
}

id objc_msgSend__addRoundedCornerWithTrueCorner_radius_corner_clockwise_leadInIsContinuous_leadOutIsContinuous_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:leadInIsContinuous:leadOutIsContinuous:");
}

id objc_msgSend__addRoutePlanningRefreshingSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addRoutePlanningRefreshingSettings];
}

id objc_msgSend__addRoutingSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addRoutingSettings:];
}

id objc_msgSend__addRowContent(void *a1, const char *a2, ...)
{
  return _[a1 _addRowContent];
}

id objc_msgSend__addSample_(void *a1, const char *a2, ...)
{
  return [a1 _addSample:];
}

id objc_msgSend__addScrollViewScrollObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addScrollViewScrollObserver:");
}

id objc_msgSend__addSearchCategoriesView(void *a1, const char *a2, ...)
{
  return _[a1 _addSearchCategoriesView];
}

id objc_msgSend__addSecondaryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSecondaryView:");
}

id objc_msgSend__addSection_toSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSection:toSnapshot:");
}

id objc_msgSend__addSectionWithTitle_forMapsSharing_defaultName_contactBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSectionWithTitle:forMapsSharing:defaultName:contactBuilder:");
}

id objc_msgSend__addSections(void *a1, const char *a2, ...)
{
  return _[a1 _addSections];
}

id objc_msgSend__addServerConfigSettingsToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addServerConfigSettingsToSection:");
}

id objc_msgSend__addShadows(void *a1, const char *a2, ...)
{
  return _[a1 _addShadows];
}

id objc_msgSend__addShortcutAction(void *a1, const char *a2, ...)
{
  return _[a1 _addShortcutAction];
}

id objc_msgSend__addShortcutsView(void *a1, const char *a2, ...)
{
  return _[a1 _addShortcutsView];
}

id objc_msgSend__addSimpleEnvironmentFor_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSimpleEnvironmentFor:atIndexPath:");
}

id objc_msgSend__addStateSnapshotToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addStateSnapshotToSection:");
}

id objc_msgSend__addStepOrManeuverOverlayForCoordinate_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addStepOrManeuverOverlayForCoordinate:color:");
}

id objc_msgSend__addSubViewsWithTextSearchSupport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubViewsWithTextSearchSupport:");
}

id objc_msgSend__addSubscriptionForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscriptionForMapItem:");
}

id objc_msgSend__addSubview_withConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubview:withConstraints:");
}

id objc_msgSend__addSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _addSubviews];
}

id objc_msgSend__addTapToRadarAllowAttachmentsOptionToSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTapToRadarAllowAttachmentsOptionToSection:");
}

id objc_msgSend__addTask_(void *a1, const char *a2, ...)
{
  return [a1 _addTask:];
}

id objc_msgSend__addThermalMitigationsSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addThermalMitigationsSettings:");
}

id objc_msgSend__addTimeToLeaveSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTimeToLeaveSettings:");
}

id objc_msgSend__addTimepointIfNeededToRouteAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTimepointIfNeededToRouteAttributes:");
}

id objc_msgSend__addTimingToPlan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTimingToPlan:");
}

id objc_msgSend__addToContact(void *a1, const char *a2, ...)
{
  return _[a1 _addToContact];
}

id objc_msgSend__addTracesAndSimulationSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTracesAndSimulationSettings:");
}

id objc_msgSend__addTrafficIncidentReport_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTrafficIncidentReport:completion:");
}

id objc_msgSend__addTrafficOverrideSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addTrafficOverrideSettings];
}

id objc_msgSend__addTransitOptionsToPlan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addTransitOptionsToPlan:");
}

id objc_msgSend__addTransitSettings_(void *a1, const char *a2, ...)
{
  return [a1 _addTransitSettings:];
}

id objc_msgSend__addVKTrafficIncidentFeatureItemToCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVKTrafficIncidentFeatureItemToCache:");
}

id objc_msgSend__addVenueObserver(void *a1, const char *a2, ...)
{
  return _[a1 _addVenueObserver];
}

id objc_msgSend__addVibrancyIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _addVibrancyIfNeeded];
}

id objc_msgSend__addViewForArtwork_inContainer_constraints_previousViewInSegment_leadingSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addViewForArtwork:inContainer:constraints:previousViewInSegment:leadingSpacing:");
}

id objc_msgSend__addViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addViewModel:");
}

id objc_msgSend__addVisualFeaturesSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVisualFeaturesSettings:");
}

id objc_msgSend__addVisualizationSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addVisualizationSettings:");
}

id objc_msgSend__addWatermarkView(void *a1, const char *a2, ...)
{
  return _[a1 _addWatermarkView];
}

id objc_msgSend__additionalMinimumTopInset(void *a1, const char *a2, ...)
{
  return _[a1 _additionalMinimumTopInset];
}

id objc_msgSend__additionalSelectionIndexPathsForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_additionalSelectionIndexPathsForIndexPath:");
}

id objc_msgSend__addressBookAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _addressBookAttributes];
}

id objc_msgSend__addressFormattedAsCity(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsCity];
}

id objc_msgSend__addressFormattedAsMultilineAddress(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsMultilineAddress];
}

id objc_msgSend__addressFormattedAsName(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsName];
}

id objc_msgSend__addressFormattedAsShortenedAddress(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsShortenedAddress];
}

id objc_msgSend__addressFormattedAsSinglelineAddress(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsSinglelineAddress];
}

id objc_msgSend__addressFormattedAsStreetOnly(void *a1, const char *a2, ...)
{
  return _[a1 _addressFormattedAsStreetOnly];
}

id objc_msgSend__addressFormattedAsTitlesForMapRect_(void *a1, const char *a2, ...)
{
  return [a1 _addressFormattedAsTitlesForMapRect:];
}

id objc_msgSend__addressResolutionQueue(void *a1, const char *a2, ...)
{
  return _[a1 _addressResolutionQueue];
}

id objc_msgSend__adjustEmailButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _adjustEmailButtonState];
}

id objc_msgSend__adjustIndexesForCollapsedStopsBeforeBoardingIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustIndexesForCollapsedStopsBeforeBoardingIndex:");
}

id objc_msgSend__adjustedColor_forState_(void *a1, const char *a2, ...)
{
  return [_adjustedColor:forState:];
}

id objc_msgSend__adjustedContentViewFrame_cell_rowWidth_accessoryViewFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustedContentViewFrame:cell:rowWidth:accessoryViewFrame:");
}

id objc_msgSend__adjustedItemToSelectFromIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustedItemToSelectFromIndexPath:");
}

id objc_msgSend__adjustedSignIndex_adjustForRTL_(void *a1, const char *a2, ...)
{
  return [a1 _adjustedSignIndex:adjustForRTL:];
}

id objc_msgSend__airQualityConditionsPunchOutURL(void *a1, const char *a2, ...)
{
  return _[a1 _airQualityConditionsPunchOutURL];
}

id objc_msgSend__airQualityIndex(void *a1, const char *a2, ...)
{
  return _[a1 _airQualityIndex];
}

id objc_msgSend__alertDidFinishProcessing(void *a1, const char *a2, ...)
{
  return _[a1 _alertDidFinishProcessing];
}

id objc_msgSend__alertRequiresOptIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertRequiresOptIn:");
}

id objc_msgSend__alertVotable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_alertVotable:");
}

id objc_msgSend__allDataProviders(void *a1, const char *a2, ...)
{
  return _[a1 _allDataProviders];
}

id objc_msgSend__allDescriptions(void *a1, const char *a2, ...)
{
  return _[a1 _allDescriptions];
}

id objc_msgSend__allIdentifiersAreInteroperable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allIdentifiersAreInteroperable:");
}

id objc_msgSend__allItemIdentifiersByCreationDateSortedAscending_dates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allItemIdentifiersByCreationDateSortedAscending:dates:");
}

id objc_msgSend__allMenuElementsForMediaIntegration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allMenuElementsForMediaIntegration:");
}

id objc_msgSend__allObjects(void *a1, const char *a2, ...)
{
  return _[a1 _allObjects];
}

id objc_msgSend__allPhotoAttributions(void *a1, const char *a2, ...)
{
  return _[a1 _allPhotoAttributions];
}

id objc_msgSend__allPossibleBulletTypesForCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allPossibleBulletTypesForCountryCode:");
}

id objc_msgSend__allStepViewsForSection_(void *a1, const char *a2, ...)
{
  return [_allStepViewsForSection:];
}

id objc_msgSend__allStepViewsInSectionForStepView_(void *a1, const char *a2, ...)
{
  return [_allStepViewsInSectionForStepView:];
}

id objc_msgSend__allowToShowTip(void *a1, const char *a2, ...)
{
  return _[a1 _allowToShowTip];
}

id objc_msgSend__allowsCardDrag(void *a1, const char *a2, ...)
{
  return _[a1 _allowsCardDrag];
}

id objc_msgSend__allowsMultipleSelection(void *a1, const char *a2, ...)
{
  return _[a1 _allowsMultipleSelection];
}

id objc_msgSend__alphaForCurrentNavigationState(void *a1, const char *a2, ...)
{
  return _[a1 _alphaForCurrentNavigationState];
}

id objc_msgSend__alternateAuxiliaryControlsRecording(void *a1, const char *a2, ...)
{
  return _[a1 _alternateAuxiliaryControlsRecording];
}

id objc_msgSend__alternateButtonTypeContains_(void *a1, const char *a2, ...)
{
  return [a1 _alternateButtonTypeContains:];
}

id objc_msgSend__alternateDirectionsRecording(void *a1, const char *a2, ...)
{
  return _[a1 _alternateDirectionsRecording];
}

id objc_msgSend__alternateMapViewContext(void *a1, const char *a2, ...)
{
  return _[a1 _alternateMapViewContext];
}

id objc_msgSend__alternatePlaceContext(void *a1, const char *a2, ...)
{
  return _[a1 _alternatePlaceContext];
}

id objc_msgSend__alternateSearchableNames(void *a1, const char *a2, ...)
{
  return _[a1 _alternateSearchableNames];
}

id objc_msgSend__alwaysShowCompass(void *a1, const char *a2, ...)
{
  return _[a1 _alwaysShowCompass];
}

id objc_msgSend__analyticTargetForMapPicker(void *a1, const char *a2, ...)
{
  return _[a1 _analyticTargetForMapPicker];
}

id objc_msgSend__analyticsPipelineTransportModeForMSPTransportType_(void *a1, const char *a2, ...)
{
  return [a1 _analyticsPipelineTransportModeForMSPTransportType:];
}

id objc_msgSend__analyticsTarget(void *a1, const char *a2, ...)
{
  return _[a1 _analyticsTarget];
}

id objc_msgSend__analyticsTargetForTransportType_(void *a1, const char *a2, ...)
{
  return [a1 _analyticsTargetForTransportType:];
}

id objc_msgSend__analyticsValue(void *a1, const char *a2, ...)
{
  return _[a1 _analyticsValue];
}

id objc_msgSend__anchorFromWhichToPositionPrimaryLabelFirstBaseline(void *a1, const char *a2, ...)
{
  return _[a1 _anchorFromWhichToPositionPrimaryLabelFirstBaseline];
}

id objc_msgSend__anchorNearCoordinate_(void *a1, const char *a2, ...)
{
  return [a1 _anchorNearCoordinate:];
}

id objc_msgSend__anchorNearMapItem_(void *a1, const char *a2, ...)
{
  return [a1 _anchorNearMapItem:];
}

id objc_msgSend__anchorNearPoint_(void *a1, const char *a2, ...)
{
  return [a1 _anchorNearPoint:];
}

id objc_msgSend__anchorPointNearMapItem_inAnchorPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anchorPointNearMapItem:inAnchorPoints:");
}

id objc_msgSend__angleForGeoLaneDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_angleForGeoLaneDirection:");
}

id objc_msgSend__angleFromLaneDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_angleFromLaneDirection:");
}

id objc_msgSend__animateChanges_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateChanges:completion:");
}

id objc_msgSend__animateContentUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _animateContentUpdate];
}

id objc_msgSend__animateInCompassIfNeededWithTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateInCompassIfNeededWithTimeout:");
}

id objc_msgSend__animateMoveOfShortcut_toIndex_dropCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateMoveOfShortcut:toIndex:dropCoordinator:");
}

id objc_msgSend__animateOutCompassIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _animateOutCompassIfNeeded];
}

id objc_msgSend__animateProgressWithDuration_startValue_(void *a1, const char *a2, ...)
{
  return [a1 _animateProgressWithDuration:];
}

id objc_msgSend__animateShowingLaneGuidanceView(void *a1, const char *a2, ...)
{
  return _[a1 _animateShowingLaneGuidanceView];
}

id objc_msgSend__animateShowingSearchResults_selectedSearchResult_historyItem_suggestedMapRegion_minZoom_maxZoom_disableAdditionalViewportPadding_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateShowingSearchResults:selectedSearchResult:historyItem:suggestedMapRegion:minZoom:maxZoom:disableAdditionalViewportPadding:completion:");
}

id objc_msgSend__animateSpeedLimitViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateSpeedLimitViewAnimated:");
}

id objc_msgSend__animateToDesiredDetentIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateToDesiredDetentIdentifier:completion:");
}

id objc_msgSend__animateTransitionForPop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTransitionForPop:");
}

id objc_msgSend__animateTransitionForPush_(void *a1, const char *a2, ...)
{
  return [a1 _animateTransitionForPush:];
}

id objc_msgSend__animateTransitioningFromOldLaneGuidance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTransitioningFromOldLaneGuidance:");
}

id objc_msgSend__animateUpdatingHeightForSingleTrip(void *a1, const char *a2, ...)
{
  return _[a1 _animateUpdatingHeightForSingleTrip];
}

id objc_msgSend__animateUsingDefaultDampedSpringWithDelay_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend__animateUsingDefaultTimingWithOptions_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingDefaultTimingWithOptions:animations:completion:");
}

id objc_msgSend__animateUsingSpringWithDuration_delay_options_mass_stiffness_damping_initialVelocity_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingSpringWithDuration:delay:options:mass:stiffness:damping:initialVelocity:animations:completion:");
}

id objc_msgSend__animateWithDuration_delay_options_animations_start_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithDuration:delay:options:animations:start:completion:");
}

id objc_msgSend__animationDurationFromMapRect_toMapRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animationDurationFromMapRect:toMapRect:");
}

id objc_msgSend__animationToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animationToIndex:");
}

id objc_msgSend__animteProgressViewWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animteProgressViewWithCompletion:");
}

id objc_msgSend__annotationAtPoint_avoidCurrent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_annotationAtPoint:avoidCurrent:");
}

id objc_msgSend__annotationTitle(void *a1, const char *a2, ...)
{
  return _[a1 _annotationTitle];
}

id objc_msgSend__annotationWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return [_annotationWithLatitude:longitude:];
}

id objc_msgSend__anonymizeDirectionsRequestsAndResponsesIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anonymizeDirectionsRequestsAndResponsesIfNeeded:");
}

id objc_msgSend__anonymizeLocations_traits_(void *a1, const char *a2, ...)
{
  return [_anonymizeLocations:traits:];
}

id objc_msgSend__anonymizePhotos_(void *a1, const char *a2, ...)
{
  return [a1 _anonymizePhotos];
}

id objc_msgSend__anonymizeScreenshots_(void *a1, const char *a2, ...)
{
  return [_anonymizeScreenshots:];
}

id objc_msgSend__anticipateRoutesWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anticipateRoutesWithRequest:");
}

id objc_msgSend__anyDownloadedRegionContainsCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_anyDownloadedRegionContainsCoordinate:");
}

id objc_msgSend__anyNavUIForeground(void *a1, const char *a2, ...)
{
  return _[a1 _anyNavUIForeground];
}

id objc_msgSend__appDataForStoreRow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appDataForStoreRow:");
}

id objc_msgSend__appIdsStringWithApplicationProxies_(void *a1, const char *a2, ...)
{
  return [a1 _appIdsStringWithApplicationProxies:];
}

id objc_msgSend__appearState(void *a1, const char *a2, ...)
{
  return _[a1 _appearState];
}

id objc_msgSend__appendAnchorPoint_(void *a1, const char *a2, ...)
{
  return [a1 _appendAnchorPoint:];
}

id objc_msgSend__appendCoordinate_isCurrentLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendCoordinate:isCurrentLocation:");
}

id objc_msgSend__appendItem_toArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendItem:toArray:");
}

id objc_msgSend__appendMapItem_isCurrentLocation_isCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendMapItem:isCurrentLocation:isCoordinate:");
}

id objc_msgSend__appendRowViewWithViews_topAnchor_topInset_rowContentWidth_availableRowWidth_rowHeight_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appendRowViewWithViews:topAnchor:topInset:rowContentWidth:availableRowWidth:rowHeight:constraints:");
}

id objc_msgSend__appleRatings(void *a1, const char *a2, ...)
{
  return _[a1 _appleRatings];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_(void *a1, const char *a2, ...)
{
  return [a1 _applicationIconImageForBundleIdentifier:format:];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return [a1 _applicationIconImageForBundleIdentifier:format:scale:];
}

id objc_msgSend__applicationIconImageForFormat_precomposed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForFormat:precomposed:");
}

id objc_msgSend__applicationState(void *a1, const char *a2, ...)
{
  return _[a1 _applicationState];
}

id objc_msgSend__applicationsAfterFilteringOutInstalledApplicationsFromApplications_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationsAfterFilteringOutInstalledApplicationsFromApplications:");
}

id objc_msgSend__applyActivity_assumedSourceFidelity_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyActivity:assumedSourceFidelity:source:");
}

id objc_msgSend__applyAndPerformLayoutForConfigurations_allowAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyAndPerformLayoutForConfigurations:allowAnimations:");
}

id objc_msgSend__applyAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _applyAppearance];
}

id objc_msgSend__applyBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _applyBackgroundColor];
}

id objc_msgSend__applyConnectedToCarPlayAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _applyConnectedToCarPlayAnimated:];
}

id objc_msgSend__applyCornerMask(void *a1, const char *a2, ...)
{
  return _[a1 _applyCornerMask];
}

id objc_msgSend__applyDynamicScaling(void *a1, const char *a2, ...)
{
  return _[a1 _applyDynamicScaling];
}

id objc_msgSend__applyHorizontalCameraOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyHorizontalCameraOffset:animated:");
}

id objc_msgSend__applyOffsetCameraForOverlay_animated_forced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyOffsetCameraForOverlay:animated:forced:");
}

id objc_msgSend__applyRefinements(void *a1, const char *a2, ...)
{
  return _[a1 _applyRefinements];
}

id objc_msgSend__applyRouteETA_toCell_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyRouteETA:toCell:animated:");
}

id objc_msgSend__applySnapshotUpdateAndAnimateCells_animateTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applySnapshotUpdateAndAnimateCells:animateTableView:");
}

id objc_msgSend__applySnapshotUpdatesInSectionControllers_animateCells_animateCollectionView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applySnapshotUpdatesInSectionControllers:animateCells:animateCollectionView:completion:");
}

id objc_msgSend__applySnapshotWithFilterText_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applySnapshotWithFilterText:animated:");
}

id objc_msgSend__applyToCardView(void *a1, const char *a2, ...)
{
  return _[a1 _applyToCardView];
}

id objc_msgSend__applyUpdatedInfoViewsIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyUpdatedInfoViewsIfNeeded:");
}

id objc_msgSend__applyViewPropertiesForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyViewPropertiesForState:");
}

id objc_msgSend__approachingPickupCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _approachingPickupCardSubtitle];
}

id objc_msgSend__approachingPickupTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _approachingPickupTemplatedViewSubtitle];
}

id objc_msgSend__approachingPickupTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _approachingPickupTemplatedViewTitle];
}

id objc_msgSend__approachingPickupTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _approachingPickupTrayTitle];
}

id objc_msgSend__archiveMapsActivity(void *a1, const char *a2, ...)
{
  return _[a1 _archiveMapsActivity];
}

id objc_msgSend__areAccessoriesHiddenForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_areAccessoriesHiddenForContext:");
}

id objc_msgSend__areAccessoriesHiddenForCurrentContext(void *a1, const char *a2, ...)
{
  return _[a1 _areAccessoriesHiddenForCurrentContext];
}

id objc_msgSend__areWaypointsInCountryCode_(void *a1, const char *a2, ...)
{
  return [a1 _areWaypointsInCountryCode:];
}

id objc_msgSend__areaHighlightId(void *a1, const char *a2, ...)
{
  return _[a1 _areaHighlightId];
}

id objc_msgSend__arrivalEndTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _arrivalEndTimerFired];
}

id objc_msgSend__arrivalIcon(void *a1, const char *a2, ...)
{
  return _[a1 _arrivalIcon];
}

id objc_msgSend__arrivalInstructionStringForStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrivalInstructionStringForStep:");
}

id objc_msgSend__arrivalTimeStringForEtaDate_timeZone_includingAMPMSymbols_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrivalTimeStringForEtaDate:timeZone:includingAMPMSymbols:");
}

id objc_msgSend__arrivedContinueGuidanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _arrivedContinueGuidanceInfo];
}

id objc_msgSend__arrivedManeuverGuidanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _arrivedManeuverGuidanceInfo];
}

id objc_msgSend__arrivingAroundStringWithETATimeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrivingAroundStringWithETATimeString:");
}

id objc_msgSend__arrowImageView(void *a1, const char *a2, ...)
{
  return _[a1 _arrowImageView];
}

id objc_msgSend__artworkWithUIImage_(void *a1, const char *a2, ...)
{
  return [a1 _artworkWithUIImage:];
}

id objc_msgSend__asMapsSyncObjectOrNil_(void *a1, const char *a2, ...)
{
  return [_asMapsSyncObjectOrNil:];
}

id objc_msgSend__assertNotInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 _assertNotInvalidated];
}

id objc_msgSend__assertRange_isIncludedInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_assertRange:isIncludedInRange:");
}

id objc_msgSend__assertValidValue(void *a1, const char *a2, ...)
{
  return _[a1 _assertValidValue];
}

id objc_msgSend__assertionReasonString(void *a1, const char *a2, ...)
{
  return _[a1 _assertionReasonString];
}

id objc_msgSend__assetView(void *a1, const char *a2, ...)
{
  return _[a1 _assetView];
}

id objc_msgSend__asyncUpdateForApplicationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_asyncUpdateForApplicationState:");
}

id objc_msgSend__attachDefaultTitleView(void *a1, const char *a2, ...)
{
  return _[a1 _attachDefaultTitleView];
}

id objc_msgSend__attachDisclosureViewToCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attachDisclosureViewToCell:");
}

id objc_msgSend__attachDisclosureViewToCell_routeStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attachDisclosureViewToCell:routeStep:");
}

id objc_msgSend__attachLoadingView(void *a1, const char *a2, ...)
{
  return _[a1 _attachLoadingView];
}

id objc_msgSend__attemptToStartShareWithContact_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attemptToStartShareWithContact:");
}

id objc_msgSend__attestKeyId_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attestKeyId:completionHandler:");
}

id objc_msgSend__attributedBatteryChargeStringForBatteryPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedBatteryChargeStringForBatteryPercentage:");
}

id objc_msgSend__attributedInstructionVariantsForGuidanceEvent_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedInstructionVariantsForGuidanceEvent:route:");
}

id objc_msgSend__attributedStringFromServerString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringFromServerString:");
}

id objc_msgSend__attributedStringKeyForString_font_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringKeyForString:font:");
}

id objc_msgSend__attributedTitleForVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedTitleForVehicle:");
}

id objc_msgSend__attributedTitleTextForWaypointAtIndex_withInfoProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedTitleTextForWaypointAtIndex:withInfoProvider:");
}

id objc_msgSend__attributesForPlainSubtitleString(void *a1, const char *a2, ...)
{
  return _[a1 _attributesForPlainSubtitleString];
}

id objc_msgSend__attributionAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributionAtIndex:");
}

id objc_msgSend__attributionCell(void *a1, const char *a2, ...)
{
  return _[a1 _attributionCell];
}

id objc_msgSend__attributionInsets(void *a1, const char *a2, ...)
{
  return _[a1 _attributionInsets];
}

id objc_msgSend__augmentMutableVehicleInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_augmentMutableVehicleInfo:");
}

id objc_msgSend__augmentVehicleInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_augmentVehicleInfo:");
}

id objc_msgSend__autoUpdateDisclaimerText(void *a1, const char *a2, ...)
{
  return _[a1 _autoUpdateDisclaimerText];
}

id objc_msgSend__autocompleteTopSectionIsQuerySuggestions(void *a1, const char *a2, ...)
{
  return _[a1 _autocompleteTopSectionIsQuerySuggestions];
}

id objc_msgSend__autohidingBehaviorForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autohidingBehaviorForContext:");
}

id objc_msgSend__autohidingContentIsHiddenForContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autohidingContentIsHiddenForContext:");
}

id objc_msgSend__autolayoutConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _autolayoutConstraints];
}

id objc_msgSend__automaticUpdatesModel(void *a1, const char *a2, ...)
{
  return _[a1 _automaticUpdatesModel];
}

id objc_msgSend__autosaveIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _autosaveIfNeeded];
}

id objc_msgSend__auxiliaryControlsRecording(void *a1, const char *a2, ...)
{
  return _[a1 _auxiliaryControlsRecording];
}

id objc_msgSend__availableButtons(void *a1, const char *a2, ...)
{
  return _[a1 _availableButtons];
}

id objc_msgSend__availableWidth(void *a1, const char *a2, ...)
{
  return _[a1 _availableWidth];
}

id objc_msgSend__availableWidthForInstructionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_availableWidthForInstructionType:");
}

id objc_msgSend__axisDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _axisDidChange];
}

id objc_msgSend__backgroundArrivalTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundArrivalTimerFired];
}

id objc_msgSend__backgroundImageTintColorForAction_(void *a1, const char *a2, ...)
{
  return [a1 _backgroundImageTintColorForAction:];
}

id objc_msgSend__backlightLuminance(void *a1, const char *a2, ...)
{
  return _[a1 _backlightLuminance];
}

id objc_msgSend__backlightSceneEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 _backlightSceneEnvironment];
}

id objc_msgSend__backoutLastState(void *a1, const char *a2, ...)
{
  return _[a1 _backoutLastState];
}

id objc_msgSend__badgeLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _badgeLabelFont];
}

id objc_msgSend__balanceIsLessThanRouteCost_forPass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_balanceIsLessThanRouteCost:forPass:");
}

id objc_msgSend__bannerActionShouldDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _bannerActionShouldDisplay];
}

id objc_msgSend__bannerItemForType_guidanceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bannerItemForType:guidanceState:");
}

id objc_msgSend__bannerPresentableForBannerItem_inTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bannerPresentableForBannerItem:inTarget:");
}

id objc_msgSend__bannerViewForBannerItem_inTarget_(void *a1, const char *a2, ...)
{
  return [_bannerViewForBannerItem:inTarget:];
}

id objc_msgSend__barHairlineShadowColor(void *a1, const char *a2, ...)
{
  return _[a1 _barHairlineShadowColor];
}

id objc_msgSend__baseActionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 _baseActionCoordinator];
}

id objc_msgSend__baseFont(void *a1, const char *a2, ...)
{
  return _[a1 _baseFont];
}

id objc_msgSend__baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _[a1 _baselineOffsetFromBottom];
}

id objc_msgSend__basicButtonSetupAddedToContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_basicButtonSetupAddedToContentView:");
}

id objc_msgSend__batchedUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _batchedUpdates];
}

id objc_msgSend__becomeTopContextInChromeViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_becomeTopContextInChromeViewController:");
}

id objc_msgSend__becomeTopContextInChromeViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_becomeTopContextInChromeViewController:animated:");
}

id objc_msgSend__beginAnimatingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _beginAnimatingIfNeeded];
}

id objc_msgSend__beginDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginDeletion:");
}

id objc_msgSend__beginImpulseInDirection_withMagnitude_(void *a1, const char *a2, ...)
{
  return [a1 _beginImpulseInDirection:withMagnitude:];
}

id objc_msgSend__beginTraceIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _beginTraceIfNecessary];
}

id objc_msgSend__beginUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _beginUpdates];
}

id objc_msgSend__behaviorForDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_behaviorForDirection:");
}

id objc_msgSend__belowSignTopPosition(void *a1, const char *a2, ...)
{
  return _[a1 _belowSignTopPosition];
}

id objc_msgSend__bestAvailableCountryCode(void *a1, const char *a2, ...)
{
  return _[a1 _bestAvailableCountryCode];
}

id objc_msgSend__bestAvatarBrandIconURLForSize_allowSmaller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bestAvatarBrandIconURLForSize:allowSmaller:");
}

id objc_msgSend__bestCellStyleForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _bestCellStyleForCurrentState];
}

id objc_msgSend__bestContentType(void *a1, const char *a2, ...)
{
  return _[a1 _bestContentType];
}

id objc_msgSend__bestModelForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _bestModelForCurrentState];
}

id objc_msgSend__blockTransferImageOffsetFromPrimaryLabelBaseline(void *a1, const char *a2, ...)
{
  return _[a1 _blockTransferImageOffsetFromPrimaryLabelBaseline];
}

id objc_msgSend__blockTransferItemFromStep_withBoardItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_blockTransferItemFromStep:withBoardItem:");
}

id objc_msgSend__blurView(void *a1, const char *a2, ...)
{
  return _[a1 _blurView];
}

id objc_msgSend__blurViewBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 _blurViewBottomPadding];
}

id objc_msgSend__boardingInfoItemForStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_boardingInfoItemForStep:");
}

id objc_msgSend__bodyContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyContentView:");
}

id objc_msgSend__bodyLeading(void *a1, const char *a2, ...)
{
  return _[a1 _bodyLeading];
}

id objc_msgSend__bodyView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bodyView:");
}

id objc_msgSend__bookingIsValid_(void *a1, const char *a2, ...)
{
  return [a1 _bookingIsValid:];
}

id objc_msgSend__bottomConstraintForAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomConstraintForAccessoryView:");
}

id objc_msgSend__bottomLinkExtensionHeight(void *a1, const char *a2, ...)
{
  return _[a1 _bottomLinkExtensionHeight];
}

id objc_msgSend__bottomPaddingUsingFont_metrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bottomPaddingUsingFont:metrics:");
}

id objc_msgSend__boundingRect(void *a1, const char *a2, ...)
{
  return _[a1 _boundingRect];
}

id objc_msgSend__bringNavigationBarToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bringNavigationBarToFront:");
}

id objc_msgSend__broadcastIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _broadcastIfNeeded];
}

id objc_msgSend__broadcastRequestRideStatusDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _broadcastRequestRideStatusDidChange];
}

id objc_msgSend__broadcastRideOptionStateDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _broadcastRideOptionStateDidChange];
}

id objc_msgSend__broadcastRideStatusDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _broadcastRideStatusDidChange];
}

id objc_msgSend__browseCategories(void *a1, const char *a2, ...)
{
  return _[a1 _browseCategories];
}

id objc_msgSend__browseCategory_isVenueItem(void *a1, const char *a2, ...)
{
  return [a1 _browseCategory_isVenueItem];
}

id objc_msgSend__bucketHasOnlyMissedStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bucketHasOnlyMissedStep:");
}

id objc_msgSend__bucketHasOnlyStoredSteps_(void *a1, const char *a2, ...)
{
  return [a1 _bucketHasOnlyStoredSteps];
}

id objc_msgSend__buildAllowedLocationSignalEnvironments(void *a1, const char *a2, ...)
{
  return _[a1 _buildAllowedLocationSignalEnvironments];
}

id objc_msgSend__buildAllowedLocationTypes(void *a1, const char *a2, ...)
{
  return _[a1 _buildAllowedLocationTypes];
}

id objc_msgSend__buildAnnotationsWithDictFromDeserializedJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildAnnotationsWithDictFromDeserializedJson:");
}

id objc_msgSend__buildContent(void *a1, const char *a2, ...)
{
  return _[a1 _buildContent];
}

id objc_msgSend__buildContents(void *a1, const char *a2, ...)
{
  return _[a1 _buildContents];
}

id objc_msgSend__buildDataSourceForRoute_displayedStepIndices_missedStepIndex_includeOrigin_includeDestination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildDataSourceForRoute:displayedStepIndices:missedStepIndex:includeOrigin:includeDestination:");
}

id objc_msgSend__buildDataSourceItems(void *a1, const char *a2, ...)
{
  return _[a1 _buildDataSourceItems];
}

id objc_msgSend__buildDeferredMenuElementForMediaIntegration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildDeferredMenuElementForMediaIntegration:");
}

id objc_msgSend__buildErrorStringsFromError_transportType_origin_destination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildErrorStringsFromError:transportType:origin:destination:");
}

id objc_msgSend__buildFocusGuidesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _buildFocusGuidesIfNeeded];
}

id objc_msgSend__buildItems(void *a1, const char *a2, ...)
{
  return _[a1 _buildItems];
}

id objc_msgSend__buildLinksWithDictFromDeserializedJson_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildLinksWithDictFromDeserializedJson:");
}

id objc_msgSend__buildMapRegionForLatitude_longitude_handler_(void *a1, const char *a2, ...)
{
  return [a1 _buildMapRegionForLatitude:longitude:handler:];
}

id objc_msgSend__buildMapsSyncRAPRecord_communityID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildMapsSyncRAPRecord:communityID:completion:");
}

id objc_msgSend__buildMapsSyncReviewedPlace_communityID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildMapsSyncReviewedPlace:communityID:completion:");
}

id objc_msgSend__buildMenuElementForViewModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildMenuElementForViewModel:");
}

id objc_msgSend__buildModels(void *a1, const char *a2, ...)
{
  return _[a1 _buildModels];
}

id objc_msgSend__buildOutOfCoverageErrorStringsForError_transportType_origin_destination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildOutOfCoverageErrorStringsForError:transportType:origin:destination:");
}

id objc_msgSend__buildRecents(void *a1, const char *a2, ...)
{
  return _[a1 _buildRecents];
}

id objc_msgSend__buildReportHistoryContent(void *a1, const char *a2, ...)
{
  return _[a1 _buildReportHistoryContent];
}

id objc_msgSend__buildRequestParamsWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildRequestParamsWithError:");
}

id objc_msgSend__buildRequestParamsWithRapId_responseId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildRequestParamsWithRapId:responseId:");
}

id objc_msgSend__buildSections(void *a1, const char *a2, ...)
{
  return _[a1 _buildSections];
}

id objc_msgSend__buildSnapshotFromCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _buildSnapshotFromCurrentState];
}

id objc_msgSend__buildStepItems(void *a1, const char *a2, ...)
{
  return _[a1 _buildStepItems];
}

id objc_msgSend__buildUserInfoWithRequestParams_CompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildUserInfoWithRequestParams:CompletionHandler:");
}

id objc_msgSend__buildingAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildingAtIndex:");
}

id objc_msgSend__businessHours(void *a1, const char *a2, ...)
{
  return _[a1 _businessHours];
}

id objc_msgSend__buttonConstraintsController(void *a1, const char *a2, ...)
{
  return _[a1 _buttonConstraintsController];
}

id objc_msgSend__buttonFont(void *a1, const char *a2, ...)
{
  return _[a1 _buttonFont];
}

id objc_msgSend__buttonForDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonForDirection:");
}

id objc_msgSend__buttonForVolumeOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonForVolumeOption:");
}

id objc_msgSend__buttonLabelVerticalMarginForTrait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonLabelVerticalMarginForTrait:");
}

id objc_msgSend__buttonSize(void *a1, const char *a2, ...)
{
  return _[a1 _buttonSize];
}

id objc_msgSend__buttonSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _buttonSpacing];
}

id objc_msgSend__buttonTintColorForExpanded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonTintColorForExpanded:");
}

id objc_msgSend__buttonViewModelForViewMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonViewModelForViewMode:");
}

id objc_msgSend__buttonWithAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonWithAction:");
}

id objc_msgSend__buttonWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 _buttonWithTitle:];
}

id objc_msgSend__buttonWithTitle_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonWithTitle:imageNamed:");
}

id objc_msgSend__buttonWithTitle_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonWithTitle:index:");
}

id objc_msgSend__cacheAndHandleSearchResult_identifier_completionHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheAndHandleSearchResult:identifier:completionHandlers:");
}

id objc_msgSend__cacheEVChargersTemplates(void *a1, const char *a2, ...)
{
  return _[a1 _cacheEVChargersTemplates];
}

id objc_msgSend__cacheKeyForRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheKeyForRoutes:");
}

id objc_msgSend__cacheSyncedCollections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheSyncedCollections:");
}

id objc_msgSend__cachedImageForCategory_scale_traits_isCarplay_outputCategoryKey_(void *a1, const char *a2, ...)
{
  return [a1 _cachedImageForCategory:scale:traits:isCarplay:outputCategoryKey:];
}

id objc_msgSend__cachedImageForDownloadIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _cachedImageForDownloadIdentifier:];
}

id objc_msgSend__cachedMapsActivityDataDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _cachedMapsActivityDataDictionary];
}

id objc_msgSend__calculateAverageSample(void *a1, const char *a2, ...)
{
  return _[a1 _calculateAverageSample];
}

id objc_msgSend__calculateBestFittingString(void *a1, const char *a2, ...)
{
  return _[a1 _calculateBestFittingString];
}

id objc_msgSend__calculateCameraFeaturesForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateCameraFeaturesForRoute:");
}

id objc_msgSend__calculateHeight(void *a1, const char *a2, ...)
{
  return _[a1 _calculateHeight];
}

id objc_msgSend__calculateInterLabelConstraintConstant(void *a1, const char *a2, ...)
{
  return _[a1 _calculateInterLabelConstraintConstant];
}

id objc_msgSend__calculateItems(void *a1, const char *a2, ...)
{
  return _[a1 _calculateItems];
}

id objc_msgSend__calculateLeadingInstructionMarginForTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateLeadingInstructionMarginForTableView:");
}

id objc_msgSend__calculateMapEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _calculateMapEdgeInsets];
}

id objc_msgSend__calculatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 _calculatePreferredContentSize];
}

id objc_msgSend__calculateRoadTileGroupedManeuversWithUpdateHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateRoadTileGroupedManeuversWithUpdateHandler:");
}

id objc_msgSend__calculateRouteGroupedManeuvers(void *a1, const char *a2, ...)
{
  return _[a1 _calculateRouteGroupedManeuvers];
}

id objc_msgSend__calculateState(void *a1, const char *a2, ...)
{
  return _[a1 _calculateState];
}

id objc_msgSend__calculateStrings(void *a1, const char *a2, ...)
{
  return _[a1 _calculateStrings];
}

id objc_msgSend__calculateTotalSizeOfOfflineSubscriptionsWithCallbackQueue_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateTotalSizeOfOfflineSubscriptionsWithCallbackQueue:completionHandler:");
}

id objc_msgSend__calculateTransitionProgress(void *a1, const char *a2, ...)
{
  return _[a1 _calculateTransitionProgress];
}

id objc_msgSend__calculateWidthForCachedRowHeights(void *a1, const char *a2, ...)
{
  return _[a1 _calculateWidthForCachedRowHeights];
}

id objc_msgSend__calculatedAuxViewHeightFrom_to_progress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculatedAuxViewHeightFrom:to:progress:");
}

id objc_msgSend__calculatedRouteCellsHeight(void *a1, const char *a2, ...)
{
  return _[a1 _calculatedRouteCellsHeight];
}

id objc_msgSend__calculatedSignToPageControlBaselineHeightFrom_to_progress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculatedSignToPageControlBaselineHeightFrom:to:progress:");
}

id objc_msgSend__callDestination(void *a1, const char *a2, ...)
{
  return _[a1 _callDestination];
}

id objc_msgSend__callEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _callEnabled];
}

id objc_msgSend__callbackQueueIsMainQueue(void *a1, const char *a2, ...)
{
  return _[a1 _callbackQueueIsMainQueue];
}

id objc_msgSend__calloutFixedFontWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calloutFixedFontWithSymbolicTraits:");
}

id objc_msgSend__calloutShowAnimationGroup(void *a1, const char *a2, ...)
{
  return _[a1 _calloutShowAnimationGroup];
}

id objc_msgSend__calloutView(void *a1, const char *a2, ...)
{
  return _[a1 _calloutView];
}

id objc_msgSend__cameraLookingAtMapRect_forViewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraLookingAtMapRect:forViewSize:");
}

id objc_msgSend__cameraSnapshotComparator(void *a1, const char *a2, ...)
{
  return _[a1 _cameraSnapshotComparator];
}

id objc_msgSend__cameraStyleRequiresCameraMotion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraStyleRequiresCameraMotion:");
}

id objc_msgSend__canAddPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _canAddPhotos];
}

id objc_msgSend__canAddWaypoints(void *a1, const char *a2, ...)
{
  return _[a1 _canAddWaypoints];
}

id objc_msgSend__canCancelDownloadOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canCancelDownloadOperation:");
}

id objc_msgSend__canCaptureSearchStateForCardItem_previousItemInStack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canCaptureSearchStateForCardItem:previousItemInStack:");
}

id objc_msgSend__canDeleteWaypoints(void *a1, const char *a2, ...)
{
  return _[a1 _canDeleteWaypoints];
}

id objc_msgSend__canDisplayForContext_selection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canDisplayForContext:selection:");
}

id objc_msgSend__canDisplayForContext_transportMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canDisplayForContext:transportMode:");
}

id objc_msgSend__canDisplaySuggestionsEntry_(void *a1, const char *a2, ...)
{
  return [a1 _canDisplaySuggestionsEntry:];
}

id objc_msgSend__canDroppedPinBeVisibleInVenue(void *a1, const char *a2, ...)
{
  return _[a1 _canDroppedPinBeVisibleInVenue];
}

id objc_msgSend__canEnter3DMode(void *a1, const char *a2, ...)
{
  return _[a1 _canEnter3DMode];
}

id objc_msgSend__canEnter3DModeFlyover(void *a1, const char *a2, ...)
{
  return _[a1 _canEnter3DModeFlyover];
}

id objc_msgSend__canGetDirections(void *a1, const char *a2, ...)
{
  return _[a1 _canGetDirections];
}

id objc_msgSend__canHostOverlays(void *a1, const char *a2, ...)
{
  return _[a1 _canHostOverlays];
}

id objc_msgSend__canItemIdentifierBeSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canItemIdentifierBeSelected:");
}

id objc_msgSend__canRate(void *a1, const char *a2, ...)
{
  return _[a1 _canRate];
}

id objc_msgSend__canRunNavigationForRoute_(void *a1, const char *a2, ...)
{
  return [a1 _canRunNavigationForRoute:];
}

id objc_msgSend__canSafelyRequestFocusUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _canSafelyRequestFocusUpdate];
}

id objc_msgSend__canSelectAlternateRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _canSelectAlternateRoutes];
}

id objc_msgSend__canSelectPOIs(void *a1, const char *a2, ...)
{
  return _[a1 _canSelectPOIs];
}

id objc_msgSend__canShowLookAroundButton(void *a1, const char *a2, ...)
{
  return _[a1 _canShowLookAroundButton];
}

id objc_msgSend__canShowWeather(void *a1, const char *a2, ...)
{
  return _[a1 _canShowWeather];
}

id objc_msgSend__canStartLocationUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _canStartLocationUpdates];
}

id objc_msgSend__canTableViewSelectIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canTableViewSelectIndexPath:");
}

id objc_msgSend__canUpdateContainee_withLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_canUpdateContainee:withLayout:");
}

id objc_msgSend__canZoomIn(void *a1, const char *a2, ...)
{
  return _[a1 _canZoomIn];
}

id objc_msgSend__canZoomOut(void *a1, const char *a2, ...)
{
  return _[a1 _canZoomOut];
}

id objc_msgSend__cancelAddressCollectionTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAddressCollectionTimerIfNeeded];
}

id objc_msgSend__cancelAlertDismissTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAlertDismissTimer];
}

id objc_msgSend__cancelBrandIconDownload(void *a1, const char *a2, ...)
{
  return _[a1 _cancelBrandIconDownload];
}

id objc_msgSend__cancelButtonWithSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelButtonWithSelector:");
}

id objc_msgSend__cancelConfirmationAlertControllerForApp_withFee_threshold_continueBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelConfirmationAlertControllerForApp:withFee:threshold:continueBlock:");
}

id objc_msgSend__cancelDeferredAddressResolutionTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDeferredAddressResolutionTimerIfNeeded];
}

id objc_msgSend__cancelDismiss(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDismiss];
}

id objc_msgSend__cancelDismissTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDismissTimer];
}

id objc_msgSend__cancelExpirationTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelExpirationTimer];
}

id objc_msgSend__cancelFetchingCapabilitiesSharingContacts(void *a1, const char *a2, ...)
{
  return _[a1 _cancelFetchingCapabilitiesSharingContacts];
}

id objc_msgSend__cancelImpressionTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelImpressionTimer];
}

id objc_msgSend__cancelMapItemTicket(void *a1, const char *a2, ...)
{
  return _[a1 _cancelMapItemTicket];
}

id objc_msgSend__cancelPageLoadTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelPageLoadTimerIfNeeded];
}

id objc_msgSend__cancelRequestIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelRequestIfNeeded];
}

id objc_msgSend__cancelScheduleETAUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _cancelScheduleETAUpdate];
}

id objc_msgSend__cancelStopSuggestingTurnCardTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelStopSuggestingTurnCardTimerIfNeeded];
}

id objc_msgSend__cancelTapped_exitRoutePlanning_(void *a1, const char *a2, ...)
{
  return [a1 _cancelTapped:exitRoutePlanning:];
}

id objc_msgSend__cancelTicket(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTicket];
}

id objc_msgSend__cancelUserInteractions(void *a1, const char *a2, ...)
{
  return _[a1 _cancelUserInteractions];
}

id objc_msgSend__cancelWithAnalyticsTarget_(void *a1, const char *a2, ...)
{
  return [a1 _cancelWithAnalyticsTarget:];
}

id objc_msgSend__candidateVehicle(void *a1, const char *a2, ...)
{
  return _[a1 _candidateVehicle];
}

id objc_msgSend__capabilityForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_capabilityForKey:");
}

id objc_msgSend__captionedPhotoAlbums(void *a1, const char *a2, ...)
{
  return _[a1 _captionedPhotoAlbums];
}

id objc_msgSend__captureActivityCardAnalyticsForUserAction_onTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureActivityCardAnalyticsForUserAction:onTarget:");
}

id objc_msgSend__captureAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 _captureAnalytics];
}

id objc_msgSend__captureAnalyticsForRemovedNetwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureAnalyticsForRemovedNetwork:");
}

id objc_msgSend__captureArrivalAtWaypoint_(void *a1, const char *a2, ...)
{
  return [a1 _captureArrivalAtWaypoint:];
}

id objc_msgSend__captureAvailableActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureAvailableActions:");
}

id objc_msgSend__captureCloseAction(void *a1, const char *a2, ...)
{
  return _[a1 _captureCloseAction];
}

id objc_msgSend__captureCollectionViewEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureCollectionViewEvent:");
}

id objc_msgSend__captureCuratedCollectionAction_withCollectionHandler_verticalIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureCuratedCollectionAction:withCollectionHandler:verticalIndex:");
}

id objc_msgSend__captureCuratedCuratedCollectionAction_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureCuratedCuratedCollectionAction:indexPath:");
}

id objc_msgSend__captureCurrentNavigationModeState(void *a1, const char *a2, ...)
{
  return _[a1 _captureCurrentNavigationModeState];
}

id objc_msgSend__captureCurrentNavigationState(void *a1, const char *a2, ...)
{
  return _[a1 _captureCurrentNavigationState];
}

id objc_msgSend__captureDeleteActionWithObject_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureDeleteActionWithObject:indexPath:");
}

id objc_msgSend__captureDisplayDownloadMapsAlertWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureDisplayDownloadMapsAlertWithType:");
}

id objc_msgSend__captureHeaderActionWithHomeSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureHeaderActionWithHomeSection:");
}

id objc_msgSend__captureInitialEVRouteState(void *a1, const char *a2, ...)
{
  return _[a1 _captureInitialEVRouteState];
}

id objc_msgSend__captureInsetContraintsFromConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 _captureInsetContraintsFromConfigurations];
}

id objc_msgSend__captureLookAroundUserAction_onTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureLookAroundUserAction:onTarget:");
}

id objc_msgSend__capturePrivacyBackActionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _capturePrivacyBackActionIfNeeded];
}

id objc_msgSend__captureRAPUserAction_target_value_report_requestParameters_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureRAPUserAction:target:value:report:requestParameters:duration:");
}

id objc_msgSend__captureSession(void *a1, const char *a2, ...)
{
  return _[a1 _captureSession];
}

id objc_msgSend__captureSessionlessEVRouteMessageIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _captureSessionlessEVRouteMessageIfNeeded];
}

id objc_msgSend__captureShareActionWithObject_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureShareActionWithObject:indexPath:");
}

id objc_msgSend__captureStatusIndicatorViewTapAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureStatusIndicatorViewTapAction:");
}

id objc_msgSend__captureSuggestionDeleteActionWithEntry_behaviour_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureSuggestionDeleteActionWithEntry:behaviour:");
}

id objc_msgSend__captureTapActionForFavoriteItem_(void *a1, const char *a2, ...)
{
  return [a1 _captureTapActionForFavoriteItem:];
}

id objc_msgSend__captureTapActionWithFavoriteItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureTapActionWithFavoriteItem:");
}

id objc_msgSend__captureTapActionWithModel_(void *a1, const char *a2, ...)
{
  return [a1 _captureTapActionWithModel:];
}

id objc_msgSend__captureTapActionWithObject_indexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureTapActionWithObject:indexPath:");
}

id objc_msgSend__captureTapActionWithSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureTapActionWithSearchResult:");
}

id objc_msgSend__captureTapActionWithShortcut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureTapActionWithShortcut:");
}

id objc_msgSend__captureTelemetricEventWithOldKey_newKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureTelemetricEventWithOldKey:newKey:");
}

id objc_msgSend__captureUserAction_(void *a1, const char *a2, ...)
{
  return [a1 _captureUserAction:];
}

id objc_msgSend__captureUserAction_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureUserAction:atIndex:");
}

id objc_msgSend__captureUserAction_index_(void *a1, const char *a2, ...)
{
  return [a1 _captureUserAction:index:];
}

id objc_msgSend__captureUserAction_onTarget_eventValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureUserAction:onTarget:eventValue:");
}

id objc_msgSend__captureUserAction_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureUserAction:value:");
}

id objc_msgSend__captureUserAction_withValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_captureUserAction:withValue:");
}

id objc_msgSend__captureUserActionBackToContext_(void *a1, const char *a2, ...)
{
  return [a1 _captureUserActionBackToContext:];
}

id objc_msgSend__captureView(void *a1, const char *a2, ...)
{
  return _[a1 _captureView];
}

id objc_msgSend__captureVirtualGarageAnalytics_(void *a1, const char *a2, ...)
{
  return [a1 _captureVirtualGarageAnalytics];
}

id objc_msgSend__carMeCardTitle(void *a1, const char *a2, ...)
{
  return _[a1 _carMeCardTitle];
}

id objc_msgSend__carScreen(void *a1, const char *a2, ...)
{
  return _[a1 _carScreen];
}

id objc_msgSend__carSessionController_updateNavigationHostingState(void *a1, const char *a2, ...)
{
  return [_carSessionController_updateNavigationHostingState];
}

id objc_msgSend__carSystemFocusColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusColor];
}

id objc_msgSend__carSystemFocusLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusLabelColor];
}

id objc_msgSend__carSystemFocusPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemFocusPrimaryColor];
}

id objc_msgSend__carSystemPrimaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemPrimaryColor];
}

id objc_msgSend__carSystemQuaternaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemQuaternaryColor];
}

id objc_msgSend__carSystemSecondaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemSecondaryColor];
}

id objc_msgSend__carSystemTertiaryColor(void *a1, const char *a2, ...)
{
  return _[a1 _carSystemTertiaryColor];
}

id objc_msgSend__car_addressFormattedAsStreetOnly(void *a1, const char *a2, ...)
{
  return [a1 _car_addressFormattedAsStreetOnly];
}

id objc_msgSend__car_baselineETATrayPixelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineETATrayPixelHeight");
}

id objc_msgSend__car_baselineETATrayPointHeight(void *a1, const char *a2, ...)
{
  return [a1 _car_baselineETATrayPointHeight];
}

id objc_msgSend__car_baselineManeuverPixelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineManeuverPixelHeight");
}

id objc_msgSend__car_baselineManeuverPixelWidth(void *a1, const char *a2, ...)
{
  return [a1 _car_baselineManeuverPixelWidth];
}

id objc_msgSend__car_baselineManeuverPointHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineManeuverPointHeight");
}

id objc_msgSend__car_baselineManeuverPointWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineManeuverPointWidth");
}

id objc_msgSend__car_baselinePixelSize(void *a1, const char *a2, ...)
{
  return [a1 _car_baselinePixelSize];
}

id objc_msgSend__car_baselineScaledETATrayPixelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineScaledETATrayPixelHeight");
}

id objc_msgSend__car_baselineScaledManeuverPixelHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineScaledManeuverPixelHeight");
}

id objc_msgSend__car_baselineScaledManeuverPixelWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_baselineScaledManeuverPixelWidth");
}

id objc_msgSend__car_debugDescription(void *a1, const char *a2, ...)
{
  return [a1 _car_debugDescription];
}

id objc_msgSend__car_dynamicPixelScaleValue(void *a1, const char *a2, ...)
{
  return [a1 _car_dynamicPixelScaleValue];
}

id objc_msgSend__car_dynamicPointScaleValue(void *a1, const char *a2, ...)
{
  return [a1 _car_dynamicPointScaleValue];
}

id objc_msgSend__car_hasDebugPhysicalSizeOverride(void *a1, const char *a2, ...)
{
  return [a1 _car_hasDebugPhysicalSizeOverride];
}

id objc_msgSend__car_hasScreenInfo(void *a1, const char *a2, ...)
{
  return [a1 _car_hasScreenInfo];
}

id objc_msgSend__car_hybridInstrumentClusterAlignment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_hybridInstrumentClusterAlignment");
}

id objc_msgSend__car_hybridInstrumentClusterAlignmentStyle(void *a1, const char *a2, ...)
{
  return [a1 _car_hybridInstrumentClusterAlignmentStyle];
}

id objc_msgSend__car_hybridInstrumentClusterLayout(void *a1, const char *a2, ...)
{
  return [a1 _car_hybridInstrumentClusterLayout];
}

id objc_msgSend__car_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_indexPathsForVisibleRows");
}

id objc_msgSend__car_isHybridInstrumentCluster(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_isHybridInstrumentCluster");
}

id objc_msgSend__car_physicalPixelSize(void *a1, const char *a2, ...)
{
  return [a1 _car_physicalPixelSize];
}

id objc_msgSend__car_physicalPointSize(void *a1, const char *a2, ...)
{
  return [a1 _car_physicalPointSize];
}

id objc_msgSend__car_physicalSize(void *a1, const char *a2, ...)
{
  return [a1 _car_physicalSize];
}

id objc_msgSend__car_pixelSize(void *a1, const char *a2, ...)
{
  return [a1 _car_pixelSize];
}

id objc_msgSend__car_screenInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_screenInfo");
}

id objc_msgSend__car_shieldImageWithSize_scale_displayedInDashboard_nightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_shieldImageWithSize:scale:displayedInDashboard:nightMode:");
}

id objc_msgSend__car_shouldHorizontallyCenterMapInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_car_shouldHorizontallyCenterMapInsets");
}

id objc_msgSend__car_smallWidgetName(void *a1, const char *a2, ...)
{
  return [a1 _car_smallWidgetName];
}

id objc_msgSend__car_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return [a1 _car_userInterfaceStyle];
}

id objc_msgSend__car_visibleCells(void *a1, const char *a2, ...)
{
  return [a1 _car_visibleCells];
}

id objc_msgSend__cardBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 _cardBackgroundView];
}

id objc_msgSend__cardButtonForActionButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardButtonForActionButton:");
}

id objc_msgSend__cardButtonForUnderlyingButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cardButtonForUnderlyingButton:");
}

id objc_msgSend__cardButtonTypeAsString_(void *a1, const char *a2, ...)
{
  return [a1 _cardButtonTypeAsString:];
}

id objc_msgSend__cardDidUpdateVisibleCells(void *a1, const char *a2, ...)
{
  return _[a1 _cardDidUpdateVisibleCells];
}

id objc_msgSend__cardHeightForComputingBottomMapEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _cardHeightForComputingBottomMapEdgeInsets];
}

id objc_msgSend__cardHeightMinusTableViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 _cardHeightMinusTableViewHeight];
}

id objc_msgSend__cardTitle(void *a1, const char *a2, ...)
{
  return _[a1 _cardTitle];
}

id objc_msgSend__cardToContainerLayoutConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _cardToContainerLayoutConstraints];
}

id objc_msgSend__cardView(void *a1, const char *a2, ...)
{
  return _[a1 _cardView];
}

id objc_msgSend__carryOverTransitDisplayInformationFromCurrentItemToNewFetchedResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_carryOverTransitDisplayInformationFromCurrentItemToNewFetchedResult:");
}

id objc_msgSend__cartographicConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _cartographicConfiguration];
}

id objc_msgSend__categoryForName_(void *a1, const char *a2, ...)
{
  return [a1 _categoryForName:];
}

id objc_msgSend__categoryNameSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_categoryNameSelected:");
}

id objc_msgSend__cellBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _cellBackgroundColor];
}

id objc_msgSend__cellClassForItemType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellClassForItemType:");
}

id objc_msgSend__cellContentWidth(void *a1, const char *a2, ...)
{
  return _[a1 _cellContentWidth];
}

id objc_msgSend__cellContent_subtitleWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellContent_subtitleWithTitle:");
}

id objc_msgSend__cellForAddress(void *a1, const char *a2, ...)
{
  return _[a1 _cellForAddress];
}

id objc_msgSend__cellForCollection_inTableView_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForCollection:inTableView:atIndexPath:");
}

id objc_msgSend__cellForContactsAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForContactsAtIndexPath:");
}

id objc_msgSend__cellForLabel(void *a1, const char *a2, ...)
{
  return _[a1 _cellForLabel];
}

id objc_msgSend__cellForMapItem_inTableView_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForMapItem:inTableView:atIndexPath:");
}

id objc_msgSend__cellForMapModeSelector(void *a1, const char *a2, ...)
{
  return _[a1 _cellForMapModeSelector];
}

id objc_msgSend__cellForMenuItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForMenuItem:");
}

id objc_msgSend__cellForOpenMeCard(void *a1, const char *a2, ...)
{
  return _[a1 _cellForOpenMeCard];
}

id objc_msgSend__cellForTransitLine_inTableView_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForTransitLine:inTableView:atIndexPath:");
}

id objc_msgSend__cellForTypeAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForTypeAtIndexPath:");
}

id objc_msgSend__cellForWriteToMeCard(void *a1, const char *a2, ...)
{
  return _[a1 _cellForWriteToMeCard];
}

id objc_msgSend__cellMetricsForIdiom_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellMetricsForIdiom:context:");
}

id objc_msgSend__cellModelForComposedWaypointToRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForComposedWaypointToRoute:");
}

id objc_msgSend__cellModelForHistoryEntryCuratedCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForHistoryEntryCuratedCollection:");
}

id objc_msgSend__cellModelForHistoryEntryPlace_showAutocompleteClientSource_showPlaceContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForHistoryEntryPlace:showAutocompleteClientSource:showPlaceContext:");
}

id objc_msgSend__cellModelForHistoryEntryRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForHistoryEntryRoute:");
}

id objc_msgSend__cellModelForHistoryEntrySearch_showAutocompleteClientSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForHistoryEntrySearch:showAutocompleteClientSource:");
}

id objc_msgSend__cellModelForHistoryEntryTransitLineItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForHistoryEntryTransitLineItem:");
}

id objc_msgSend__cellModelForRouteName_persistentData_thirdLineViewModel_menuProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellModelForRouteName:persistentData:thirdLineViewModel:menuProvider:");
}

id objc_msgSend__cellNavStateForItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellNavStateForItem:atIndexPath:");
}

id objc_msgSend__cellRequestsRemoveImageForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellRequestsRemoveImageForIdentifier:");
}

id objc_msgSend__cellSize(void *a1, const char *a2, ...)
{
  return _[a1 _cellSize];
}

id objc_msgSend__cellSizeUsingCompactLayout_(void *a1, const char *a2, ...)
{
  return [a1 _cellSizeUsingCompactLayout:];
}

id objc_msgSend__cellStyleDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _cellStyleDidChange];
}

id objc_msgSend__cellWithIdentifier_setupBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellWithIdentifier:setupBlock:");
}

id objc_msgSend__centerOnCurrentRouteAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _centerOnCurrentRouteAnimated:];
}

id objc_msgSend__cgImageFromContext_toFit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cgImageFromContext:toFit:");
}

id objc_msgSend__cgPointApplyAffineTransform__::(void *a1, const char *a2, ...)
{
  return [a1 _cgPointApplyAffineTransform];
}

id objc_msgSend__changeReasonWithNewLayout_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeReasonWithNewLayout:context:");
}

id objc_msgSend__changeVisualEffect(void *a1, const char *a2, ...)
{
  return _[a1 _changeVisualEffect];
}

id objc_msgSend__chargeImageAttachmentWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_chargeImageAttachmentWithFont:");
}

id objc_msgSend__chargerNumberString(void *a1, const char *a2, ...)
{
  return _[a1 _chargerNumberString];
}

id objc_msgSend__chargingState(void *a1, const char *a2, ...)
{
  return _[a1 _chargingState];
}

id objc_msgSend__chartStyle(void *a1, const char *a2, ...)
{
  return _[a1 _chartStyle];
}

id objc_msgSend__checkAndPropagateSpecificCallbacksForAnnotationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndPropagateSpecificCallbacksForAnnotationView:");
}

id objc_msgSend__checkAndPropagateSpecificCallbacksForMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndPropagateSpecificCallbacksForMarker:");
}

id objc_msgSend__checkAnimationsForAndromeda_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAnimationsForAndromeda:");
}

id objc_msgSend__checkAnimationsMitigation(void *a1, const char *a2, ...)
{
  return _[a1 _checkAnimationsMitigation];
}

id objc_msgSend__checkBatteryStateWithGarage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkBatteryStateWithGarage:");
}

id objc_msgSend__checkETAUpdatesMitigation(void *a1, const char *a2, ...)
{
  return _[a1 _checkETAUpdatesMitigation];
}

id objc_msgSend__checkForBadTrip(void *a1, const char *a2, ...)
{
  return _[a1 _checkForBadTrip];
}

id objc_msgSend__checkForNearbyPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _checkForNearbyPhotos];
}

id objc_msgSend__checkForRecentMovement(void *a1, const char *a2, ...)
{
  return _[a1 _checkForRecentMovement];
}

id objc_msgSend__checkForStatusChangeNotificationsNeededForRapInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForStatusChangeNotificationsNeededForRapInfos:");
}

id objc_msgSend__checkForVisitAndPhotosIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _checkForVisitAndPhotosIfNeeded];
}

id objc_msgSend__checkHikingCoordinate_(void *a1, const char *a2, ...)
{
  return [a1 _checkHikingCoordinate:];
}

id objc_msgSend__checkIfAnyConstraints_match_(void *a1, const char *a2, ...)
{
  return [a1 _checkIfAnyConstraints:match:];
}

id objc_msgSend__checkIfFiltersAreSelected(void *a1, const char *a2, ...)
{
  return _[a1 _checkIfFiltersAreSelected];
}

id objc_msgSend__checkIfLockScreenMitigationShouldActivate(void *a1, const char *a2, ...)
{
  return _[a1 _checkIfLockScreenMitigationShouldActivate];
}

id objc_msgSend__checkIfPinnedLine(void *a1, const char *a2, ...)
{
  return _[a1 _checkIfPinnedLine];
}

id objc_msgSend__checkMapViewMitigation(void *a1, const char *a2, ...)
{
  return _[a1 _checkMapViewMitigation];
}

id objc_msgSend__checkModernMapMitigation(void *a1, const char *a2, ...)
{
  return _[a1 _checkModernMapMitigation];
}

id objc_msgSend__checkRouteProximityForManualFraming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkRouteProximityForManualFraming:");
}

id objc_msgSend__checkScreenOwnershipIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkScreenOwnershipIfNeeded:");
}

id objc_msgSend__childAnimationsDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 _childAnimationsDidComplete];
}

id objc_msgSend__childItems(void *a1, const char *a2, ...)
{
  return _[a1 _childItems];
}

id objc_msgSend__childItemsInCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childItemsInCollection:");
}

id objc_msgSend__childItemsInCollection_excludeDeletions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_childItemsInCollection:excludeDeletions:");
}

id objc_msgSend__childItemsInVenueSearchResult_(void *a1, const char *a2, ...)
{
  return [a1 _childItemsInVenueSearchResult:];
}

id objc_msgSend__chromeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _chromeEnabled];
}

id objc_msgSend__chromeViewControllerPresent_(void *a1, const char *a2, ...)
{
  return [_chromeViewControllerPresent:];
}

id objc_msgSend__clampedRectFromRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clampedRectFromRect:");
}

id objc_msgSend__classForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_classForState:");
}

id objc_msgSend__cleanArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanArray:");
}

id objc_msgSend__cleanDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanDictionary:");
}

id objc_msgSend__cleanDirectionsCache(void *a1, const char *a2, ...)
{
  return _[a1 _cleanDirectionsCache];
}

id objc_msgSend__cleanRequestLocationNames(void *a1, const char *a2, ...)
{
  return _[a1 _cleanRequestLocationNames];
}

id objc_msgSend__cleanState(void *a1, const char *a2, ...)
{
  return _[a1 _cleanState];
}

id objc_msgSend__cleanUp(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUp];
}

id objc_msgSend__cleanUpOnDismiss(void *a1, const char *a2, ...)
{
  return _[a1 _cleanUpOnDismiss];
}

id objc_msgSend__cleanUpType_onTarget_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpType:onTarget:animated:");
}

id objc_msgSend__cleanUpVenuesStackForNonVenuePlaceCardItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanUpVenuesStackForNonVenuePlaceCardItem:");
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _[a1 _cleanup];
}

id objc_msgSend__cleanupAfterLocationServicesAlertController(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupAfterLocationServicesAlertController];
}

id objc_msgSend__cleanupNavigationDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupNavigationDisplay];
}

id objc_msgSend__cleanupRoutePlanningIfNeededAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupRoutePlanningIfNeededAnimated:");
}

id objc_msgSend__cleanupSharedTripIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupSharedTripIfNeeded];
}

id objc_msgSend__cleanupStepCountdowns(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupStepCountdowns];
}

id objc_msgSend__cleanupWithRideStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupWithRideStatus:");
}

id objc_msgSend__clear(void *a1, const char *a2, ...)
{
  return _[a1 _clear];
}

id objc_msgSend__clearAllControlTargetsForReuse(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllControlTargetsForReuse];
}

id objc_msgSend__clearAllDebugAnnotations(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllDebugAnnotations];
}

id objc_msgSend__clearAllSettings(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllSettings];
}

id objc_msgSend__clearAllUserData(void *a1, const char *a2, ...)
{
  return _[a1 _clearAllUserData];
}

id objc_msgSend__clearAlternateRouteManeuverArrows(void *a1, const char *a2, ...)
{
  return _[a1 _clearAlternateRouteManeuverArrows];
}

id objc_msgSend__clearAnnotations(void *a1, const char *a2, ...)
{
  return _[a1 _clearAnnotations];
}

id objc_msgSend__clearBulletin(void *a1, const char *a2, ...)
{
  return _[a1 _clearBulletin];
}

id objc_msgSend__clearButton(void *a1, const char *a2, ...)
{
  return _[a1 _clearButton];
}

id objc_msgSend__clearContent(void *a1, const char *a2, ...)
{
  return _[a1 _clearContent];
}

id objc_msgSend__clearControllerIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearControllerIfNeeded:");
}

id objc_msgSend__clearCurrentSelection(void *a1, const char *a2, ...)
{
  return _[a1 _clearCurrentSelection];
}

id objc_msgSend__clearCustomSearchResult(void *a1, const char *a2, ...)
{
  return _[a1 _clearCustomSearchResult];
}

id objc_msgSend__clearDepartures(void *a1, const char *a2, ...)
{
  return _[a1 _clearDepartures];
}

id objc_msgSend__clearDoubleHeightStatusBar(void *a1, const char *a2, ...)
{
  return _[a1 _clearDoubleHeightStatusBar];
}

id objc_msgSend__clearEndPins(void *a1, const char *a2, ...)
{
  return _[a1 _clearEndPins];
}

id objc_msgSend__clearExistingTimeoutAssertionIfNeededAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearExistingTimeoutAssertionIfNeededAfterDelay:");
}

id objc_msgSend__clearFields(void *a1, const char *a2, ...)
{
  return _[a1 _clearFields];
}

id objc_msgSend__clearFocusableItems(void *a1, const char *a2, ...)
{
  return _[a1 _clearFocusableItems];
}

id objc_msgSend__clearFormatters(void *a1, const char *a2, ...)
{
  return _[a1 _clearFormatters];
}

id objc_msgSend__clearFrameRateLimits(void *a1, const char *a2, ...)
{
  return _[a1 _clearFrameRateLimits];
}

id objc_msgSend__clearGesture_(void *a1, const char *a2, ...)
{
  return [a1 _clearGesture:];
}

id objc_msgSend__clearGestureRecognizersInFlight(void *a1, const char *a2, ...)
{
  return _[a1 _clearGestureRecognizersInFlight];
}

id objc_msgSend__clearGesturesAndAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _clearGesturesAndAnimations];
}

id objc_msgSend__clearHighlight(void *a1, const char *a2, ...)
{
  return _[a1 _clearHighlight];
}

id objc_msgSend__clearHighlightForStepView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearHighlightForStepView:");
}

id objc_msgSend__clearIdleTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _clearIdleTimerIfNeeded];
}

id objc_msgSend__clearImage(void *a1, const char *a2, ...)
{
  return _[a1 _clearImage];
}

id objc_msgSend__clearImagePicker(void *a1, const char *a2, ...)
{
  return _[a1 _clearImagePicker];
}

id objc_msgSend__clearLeachedLocations(void *a1, const char *a2, ...)
{
  return _[a1 _clearLeachedLocations];
}

id objc_msgSend__clearModel(void *a1, const char *a2, ...)
{
  return _[a1 _clearModel];
}

id objc_msgSend__clearOfflineDownloadTipIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _clearOfflineDownloadTipIfNeeded];
}

id objc_msgSend__clearPartsAndSections(void *a1, const char *a2, ...)
{
  return _[a1 _clearPartsAndSections];
}

id objc_msgSend__clearPendingCollection(void *a1, const char *a2, ...)
{
  return _[a1 _clearPendingCollection];
}

id objc_msgSend__clearPreloadingIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _clearPreloadingIfNecessary];
}

id objc_msgSend__clearRouteContext(void *a1, const char *a2, ...)
{
  return _[a1 _clearRouteContext];
}

id objc_msgSend__clearRoutePreviews(void *a1, const char *a2, ...)
{
  return _[a1 _clearRoutePreviews];
}

id objc_msgSend__clearSection_inSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearSection:inSnapshot:");
}

id objc_msgSend__clearShowSearchResultsAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _clearShowSearchResultsAnimation];
}

id objc_msgSend__clearStaleVehiclePositionAnnotations(void *a1, const char *a2, ...)
{
  return _[a1 _clearStaleVehiclePositionAnnotations];
}

id objc_msgSend__clearStartPin(void *a1, const char *a2, ...)
{
  return _[a1 _clearStartPin];
}

id objc_msgSend__clearStepAndManeuverOverlays(void *a1, const char *a2, ...)
{
  return _[a1 _clearStepAndManeuverOverlays];
}

id objc_msgSend__clearSteppingRouteParameters(void *a1, const char *a2, ...)
{
  return _[a1 _clearSteppingRouteParameters];
}

id objc_msgSend__clearSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _clearSubviews];
}

id objc_msgSend__clearTableIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _clearTableIfNeeded];
}

id objc_msgSend__clearTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearTimer];
}

id objc_msgSend__clearTransitLineSelectionDeactivate_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearTransitLineSelectionDeactivate:context:");
}

id objc_msgSend__clearUpdateTimer(void *a1, const char *a2, ...)
{
  return _[a1 _clearUpdateTimer];
}

id objc_msgSend__clearUserLocationOnLocationReset(void *a1, const char *a2, ...)
{
  return _[a1 _clearUserLocationOnLocationReset];
}

id objc_msgSend__clearVehicles(void *a1, const char *a2, ...)
{
  return _[a1 _clearVehicles];
}

id objc_msgSend__clickableAdvisoryDescriptionForRoute_(void *a1, const char *a2, ...)
{
  return [a1 _clickableAdvisoryDescriptionForRoute];
}

id objc_msgSend__clientAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _clientAttributes];
}

id objc_msgSend__clientAttributesForAddress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clientAttributesForAddress:");
}

id objc_msgSend__clientDataHash(void *a1, const char *a2, ...)
{
  return _[a1 _clientDataHash];
}

id objc_msgSend__clientRankingFunction(void *a1, const char *a2, ...)
{
  return _[a1 _clientRankingFunction];
}

id objc_msgSend__clientRankingModel(void *a1, const char *a2, ...)
{
  return _[a1 _clientRankingModel];
}

id objc_msgSend__close(void *a1, const char *a2, ...)
{
  return _[a1 _close];
}

id objc_msgSend__closeButtonTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closeButtonTapped:");
}

id objc_msgSend__closeLocationRefinement(void *a1, const char *a2, ...)
{
  return _[a1 _closeLocationRefinement];
}

id objc_msgSend__closeResultsController(void *a1, const char *a2, ...)
{
  return _[a1 _closeResultsController];
}

id objc_msgSend__closestViewToPoint_fromEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_closestViewToPoint:fromEdge:");
}

id objc_msgSend__cnPostalAddress(void *a1, const char *a2, ...)
{
  return _[a1 _cnPostalAddress];
}

id objc_msgSend__collapseButtonTitleByVehicleType(void *a1, const char *a2, ...)
{
  return _[a1 _collapseButtonTitleByVehicleType];
}

id objc_msgSend__collapseItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collapseItem:");
}

id objc_msgSend__collapsedPreviewTransform(void *a1, const char *a2, ...)
{
  return _[a1 _collapsedPreviewTransform];
}

id objc_msgSend__collapsedSignHeight(void *a1, const char *a2, ...)
{
  return _[a1 _collapsedSignHeight];
}

id objc_msgSend__collectAttachmentsWithRadarDraft_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectAttachmentsWithRadarDraft:completion:");
}

id objc_msgSend__collectionContainingIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectionContainingIdentifierPath:");
}

id objc_msgSend__collectionContainingIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectionContainingIndexPath:");
}

id objc_msgSend__collectionItemImage(void *a1, const char *a2, ...)
{
  return _[a1 _collectionItemImage];
}

id objc_msgSend__collectionPickerDismissedAfterSelectingCollection_parentVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collectionPickerDismissedAfterSelectingCollection:parentVC:");
}

id objc_msgSend__collectionViewContentOffsetIndex(void *a1, const char *a2, ...)
{
  return _[a1 _collectionViewContentOffsetIndex];
}

id objc_msgSend__collectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 _collectionViewLayout];
}

id objc_msgSend__collectionsCount(void *a1, const char *a2, ...)
{
  return _[a1 _collectionsCount];
}

id objc_msgSend__collectionsNeedingResolution(void *a1, const char *a2, ...)
{
  return _[a1 _collectionsNeedingResolution];
}

id objc_msgSend__collisionConstraintsForHost_(void *a1, const char *a2, ...)
{
  return [a1 _collisionConstraintsForHost];
}

id objc_msgSend__collisionLayoutGuidesForHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_collisionLayoutGuidesForHost:");
}

id objc_msgSend__colorBlendedWithColor_(void *a1, const char *a2, ...)
{
  return [a1 _colorBlendedWithColor:];
}

id objc_msgSend__colorBlendedWithColor_compositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorBlendedWithColor:compositingFilter:");
}

id objc_msgSend__colorConfigurationForAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_colorConfigurationForAction:");
}

id objc_msgSend__colorForDirection_(void *a1, const char *a2, ...)
{
  return [a1 _colorForDirection:];
}

id objc_msgSend__combineAccessoryLabels(void *a1, const char *a2, ...)
{
  return _[a1 _combineAccessoryLabels];
}

id objc_msgSend__combineRecents(void *a1, const char *a2, ...)
{
  return _[a1 _combineRecents];
}

id objc_msgSend__combinedTertiaryTextForStepWithChargingStation_font_color_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combinedTertiaryTextForStepWithChargingStation:font:color:");
}

id objc_msgSend__commentCell(void *a1, const char *a2, ...)
{
  return _[a1 _commentCell];
}

id objc_msgSend__commentsHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _commentsHeaderView];
}

id objc_msgSend__commentsPlaceholderText(void *a1, const char *a2, ...)
{
  return _[a1 _commentsPlaceholderText];
}

id objc_msgSend__commitPendingShares(void *a1, const char *a2, ...)
{
  return _[a1 _commitPendingShares];
}

id objc_msgSend__commitSelectedVehicle(void *a1, const char *a2, ...)
{
  return _[a1 _commitSelectedVehicle];
}

id objc_msgSend__commitShareForCellAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _commitShareForCellAtIndexPath:];
}

id objc_msgSend__commitTraceSnapshotsDictionaryToArchive(void *a1, const char *a2, ...)
{
  return _[a1 _commitTraceSnapshotsDictionaryToArchive];
}

id objc_msgSend__commitUsesPreferredNetworksForRouting(void *a1, const char *a2, ...)
{
  return _[a1 _commitUsesPreferredNetworksForRouting];
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _[a1 _commonInit];
}

id objc_msgSend__commonInitWithBlurType_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithBlurType:];
}

id objc_msgSend__commonInitWithCuratedCollectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInitWithCuratedCollectionIdentifier:");
}

id objc_msgSend__commonInitWithCuratedCollectionProvider_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInitWithCuratedCollectionProvider:identifier:");
}

id objc_msgSend__commonInitWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithOptions:];
}

id objc_msgSend__commonInitWithPresentingViewController_delegate_presentationStyle_shortcut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInitWithPresentingViewController:delegate:presentationStyle:shortcut:");
}

id objc_msgSend__commonInitWithStars_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithStars:];
}

id objc_msgSend__commonInitWithTableView_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithTableView:];
}

id objc_msgSend__commonInitWithURL_(void *a1, const char *a2, ...)
{
  return [a1 _commonInitWithURL:];
}

id objc_msgSend__commonUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _commonUpdate];
}

id objc_msgSend__commontInit(void *a1, const char *a2, ...)
{
  return _[a1 _commontInit];
}

id objc_msgSend__comparisonInfoForRouteWithRemainingMinutes_comparedToRouteWithRemainingMinutes_tollCurrency_styleAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_comparisonInfoForRouteWithRemainingMinutes:comparedToRouteWithRemainingMinutes:tollCurrency:styleAttributes:");
}

id objc_msgSend__compassDiameter(void *a1, const char *a2, ...)
{
  return _[a1 _compassDiameter];
}

id objc_msgSend__compassInsets(void *a1, const char *a2, ...)
{
  return _[a1 _compassInsets];
}

id objc_msgSend__compassViewAlpha(void *a1, const char *a2, ...)
{
  return _[a1 _compassViewAlpha];
}

id objc_msgSend__completeCurrentStepFeedback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeCurrentStepFeedback:");
}

id objc_msgSend__completeFocusAfterScrollingWithSuccess_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeFocusAfterScrollingWithSuccess:");
}

id objc_msgSend__completeOperation(void *a1, const char *a2, ...)
{
  return _[a1 _completeOperation];
}

id objc_msgSend__completeShowSearchResultsAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _completeShowSearchResultsAnimation];
}

id objc_msgSend__completeStateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _completeStateIfNeeded];
}

id objc_msgSend__completeWithLocation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeWithLocation:error:");
}

id objc_msgSend__completedCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedCardSubtitle];
}

id objc_msgSend__completedCardTertiaryTitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedCardTertiaryTitle];
}

id objc_msgSend__completedTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedTemplatedViewSubtitle];
}

id objc_msgSend__completedTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedTemplatedViewTitle];
}

id objc_msgSend__completedTraySubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedTraySubtitle];
}

id objc_msgSend__completedTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _completedTrayTitle];
}

id objc_msgSend__completerWasThrottled_queryFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completerWasThrottled:queryFragment:");
}

id objc_msgSend__completionOperationForPhotoInfo_downloadToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completionOperationForPhotoInfo:downloadToken:");
}

id objc_msgSend__completionQueue(void *a1, const char *a2, ...)
{
  return _[a1 _completionQueue];
}

id objc_msgSend__completionsByAddress(void *a1, const char *a2, ...)
{
  return _[a1 _completionsByAddress];
}

id objc_msgSend__composedRoute(void *a1, const char *a2, ...)
{
  return _[a1 _composedRoute];
}

id objc_msgSend__composedRouteToDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _composedRouteToDisplay];
}

id objc_msgSend__compositeImageFromImage_paddedToWidth_badge_badgeOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compositeImageFromImage:paddedToWidth:badge:badgeOffset:");
}

id objc_msgSend__computeContent(void *a1, const char *a2, ...)
{
  return _[a1 _computeContent];
}

id objc_msgSend__computeDistanceProperties(void *a1, const char *a2, ...)
{
  return _[a1 _computeDistanceProperties];
}

id objc_msgSend__computeJustifiedRowWithViews_itemWidth_rowView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeJustifiedRowWithViews:itemWidth:rowView:constraints:");
}

id objc_msgSend__computeLayout(void *a1, const char *a2, ...)
{
  return _[a1 _computeLayout];
}

id objc_msgSend__computeLayoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _computeLayoutIfNeeded];
}

id objc_msgSend__computeLeadingRowWithViews_rowView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeLeadingRowWithViews:rowView:constraints:");
}

id objc_msgSend__computeMaximumRowWithViews_interItemSpace_rowView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeMaximumRowWithViews:interItemSpace:rowView:constraints:");
}

id objc_msgSend__computeOnQueueAstronomicalConditionForTime_currentLocation_isBeforeSolarTransit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeOnQueueAstronomicalConditionForTime:currentLocation:isBeforeSolarTransit:");
}

id objc_msgSend__computeSections(void *a1, const char *a2, ...)
{
  return _[a1 _computeSections];
}

id objc_msgSend__computeSelectedTiming(void *a1, const char *a2, ...)
{
  return _[a1 _computeSelectedTiming];
}

id objc_msgSend__computeTimeProperties(void *a1, const char *a2, ...)
{
  return _[a1 _computeTimeProperties];
}

id objc_msgSend__computeTrailingRowWithViews_rowView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeTrailingRowWithViews:rowView:constraints:");
}

id objc_msgSend__computedLightLevel(void *a1, const char *a2, ...)
{
  return _[a1 _computedLightLevel];
}

id objc_msgSend__concatenateAttributedStrings_(void *a1, const char *a2, ...)
{
  return [a1 _concatenateAttributedStrings];
}

id objc_msgSend__configurationByModifyingTransportTypeInfoDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationByModifyingTransportTypeInfoDictionary:");
}

id objc_msgSend__configurationForKey_createIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurationForKey:createIfNeeded:");
}

id objc_msgSend__configurations_getVisible_hidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurations:getVisible:hidden:");
}

id objc_msgSend__configureActionButton(void *a1, const char *a2, ...)
{
  return _[a1 _configureActionButton];
}

id objc_msgSend__configureAnimator(void *a1, const char *a2, ...)
{
  return _[a1 _configureAnimator];
}

id objc_msgSend__configureArtworkForFirstUse(void *a1, const char *a2, ...)
{
  return _[a1 _configureArtworkForFirstUse];
}

id objc_msgSend__configureButton_withImage_pointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureButton:withImage:pointSize:weight:");
}

id objc_msgSend__configureButton_withSymbolImageName_pointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureButton:withSymbolImageName:pointSize:weight:");
}

id objc_msgSend__configureCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCell:");
}

id objc_msgSend__configureCell_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCell:forIndexPath:");
}

id objc_msgSend__configureCell_withCameraSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCell:withCameraSnapshot:");
}

id objc_msgSend__configureCellForAddSharingContactAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCellForAddSharingContactAction:");
}

id objc_msgSend__configureCellForCheckedValue_(void *a1, const char *a2, ...)
{
  return [a1 _configureCellForCheckedValue:];
}

id objc_msgSend__configureCollectionViewCellForCheckedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCollectionViewCellForCheckedValue:");
}

id objc_msgSend__configureConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _configureConstraints];
}

id objc_msgSend__configureContainer_withElement_preferredEdgeLocation_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureContainer:withElement:preferredEdgeLocation:priority:");
}

id objc_msgSend__configureContainerWithBackgroundIfNeeded_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureContainerWithBackgroundIfNeeded:constraints:");
}

id objc_msgSend__configureEnvironmentCell(void *a1, const char *a2, ...)
{
  return _[a1 _configureEnvironmentCell];
}

id objc_msgSend__configureFeatureCell(void *a1, const char *a2, ...)
{
  return _[a1 _configureFeatureCell];
}

id objc_msgSend__configureFloatingButtonHighlightIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _configureFloatingButtonHighlightIfNecessary];
}

id objc_msgSend__configureFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureFooterView:");
}

id objc_msgSend__configureForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _configureForCurrentState];
}

id objc_msgSend__configureForForceWindshield(void *a1, const char *a2, ...)
{
  return _[a1 _configureForForceWindshield];
}

id objc_msgSend__configureForUnforceWindshield(void *a1, const char *a2, ...)
{
  return _[a1 _configureForUnforceWindshield];
}

id objc_msgSend__configureForceTouchIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _configureForceTouchIfNeeded];
}

id objc_msgSend__configureHeaderView_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureHeaderView:inSection:");
}

id objc_msgSend__configureIncomingConnection_(void *a1, const char *a2, ...)
{
  return [a1 _configureIncomingConnection:];
}

id objc_msgSend__configureLabelForInstruction_(void *a1, const char *a2, ...)
{
  return [a1 _configureLabelForInstruction:];
}

id objc_msgSend__configureLabels(void *a1, const char *a2, ...)
{
  return _[a1 _configureLabels];
}

id objc_msgSend__configureNavItemsForEditMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureNavItemsForEditMode:");
}

id objc_msgSend__configureReservationDetails(void *a1, const char *a2, ...)
{
  return _[a1 _configureReservationDetails];
}

id objc_msgSend__configureReservationDetailsDateAndPartySize(void *a1, const char *a2, ...)
{
  return _[a1 _configureReservationDetailsDateAndPartySize];
}

id objc_msgSend__configureReservationDetailsError(void *a1, const char *a2, ...)
{
  return _[a1 _configureReservationDetailsError];
}

id objc_msgSend__configureReservationDetailsLoadingIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _configureReservationDetailsLoadingIndicator];
}

id objc_msgSend__configureRideOptionsSources_(void *a1, const char *a2, ...)
{
  return [a1 _configureRideOptionsSources];
}

id objc_msgSend__configureRouteBadge(void *a1, const char *a2, ...)
{
  return _[a1 _configureRouteBadge];
}

id objc_msgSend__configureSearchBarIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _configureSearchBarIfNeeded];
}

id objc_msgSend__configureSeparatorForCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureSeparatorForCell:forRowAtIndexPath:");
}

id objc_msgSend__configureSign_forSteppingWithStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureSign:forSteppingWithStep:");
}

id objc_msgSend__configureSign_withStep_(void *a1, const char *a2, ...)
{
  return [a1 _configureSign:withStep:];
}

id objc_msgSend__configureSpacerIfNeeded_layoutPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureSpacerIfNeeded:layoutPriority:");
}

id objc_msgSend__configureStartEndCell_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureStartEndCell:forIndexPath:");
}

id objc_msgSend__configureStepCell_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureStepCell:forIndexPath:");
}

id objc_msgSend__configureStepView_forItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureStepView:forItem:atIndexPath:");
}

id objc_msgSend__configureSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _configureSubviews];
}

id objc_msgSend__configureTapGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTapGesture:");
}

id objc_msgSend__configureTapGestureOnLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTapGestureOnLabel:");
}

id objc_msgSend__configureTips(void *a1, const char *a2, ...)
{
  return _[a1 _configureTips];
}

id objc_msgSend__configureTokenView(void *a1, const char *a2, ...)
{
  return _[a1 _configureTokenView];
}

id objc_msgSend__configureTransitDirectionsCollectionViewCell_withItem_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTransitDirectionsCollectionViewCell:withItem:atIndexPath:");
}

id objc_msgSend__configureViews(void *a1, const char *a2, ...)
{
  return _[a1 _configureViews];
}

id objc_msgSend__configureViewsForMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureViewsForMode:");
}

id objc_msgSend__configureVisibleHeaders(void *a1, const char *a2, ...)
{
  return _[a1 _configureVisibleHeaders];
}

id objc_msgSend__configureWeatherOrbSupport(void *a1, const char *a2, ...)
{
  return _[a1 _configureWeatherOrbSupport];
}

id objc_msgSend__configureWithDisplayHints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWithDisplayHints:");
}

id objc_msgSend__configureWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWithRoute:");
}

id objc_msgSend__configuredCellForSubscriptionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configuredCellForSubscriptionIdentifier:");
}

id objc_msgSend__confirmFlushDB(void *a1, const char *a2, ...)
{
  return _[a1 _confirmFlushDB];
}

id objc_msgSend__confirmedCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _confirmedCardSubtitle];
}

id objc_msgSend__confirmedTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _confirmedTemplatedViewSubtitle];
}

id objc_msgSend__confirmedTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _confirmedTemplatedViewTitle];
}

id objc_msgSend__confirmedTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _confirmedTrayTitle];
}

id objc_msgSend__connectOrDisconnectFromMapView(void *a1, const char *a2, ...)
{
  return _[a1 _connectOrDisconnectFromMapView];
}

id objc_msgSend__connectionWithIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_connectionWithIntent:");
}

id objc_msgSend__console(void *a1, const char *a2, ...)
{
  return _[a1 _console];
}

id objc_msgSend__constraints(void *a1, const char *a2, ...)
{
  return _[a1 _constraints];
}

id objc_msgSend__constraintsForBackgroundView_foregroundViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForBackgroundView:foregroundViews:");
}

id objc_msgSend__constraintsForCellStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForCellStyle:");
}

id objc_msgSend__constraintsForFeatureDiscoveryView_centeredInContentView_withIdiom_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForFeatureDiscoveryView:centeredInContentView:withIdiom:context:");
}

id objc_msgSend__constraintsForStackingButtonViews_inRowLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constraintsForStackingButtonViews:inRowLayoutGuide:");
}

id objc_msgSend__constraintsForStackingRows(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForStackingRows];
}

id objc_msgSend__consumeTransitTripSegment(void *a1, const char *a2, ...)
{
  return _[a1 _consumeTransitTripSegment];
}

id objc_msgSend__consumeUpdatedGarage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_consumeUpdatedGarage:");
}

id objc_msgSend__consumeUpdatedUnpairedVehicles_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_consumeUpdatedUnpairedVehicles:");
}

id objc_msgSend__consumeUpdatedVirtualGarage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_consumeUpdatedVirtualGarage:");
}

id objc_msgSend__consumeWalkingSegment(void *a1, const char *a2, ...)
{
  return _[a1 _consumeWalkingSegment];
}

id objc_msgSend__contactNameStringFromContact_(void *a1, const char *a2, ...)
{
  return [a1 _contactNameStringFromContact:];
}

id objc_msgSend__contactValuesSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contactValuesSelected:");
}

id objc_msgSend__contactWithCacheIdentifier_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contactWithCacheIdentifier:predicate:");
}

id objc_msgSend__contactsAuthorizationDismissed(void *a1, const char *a2, ...)
{
  return _[a1 _contactsAuthorizationDismissed];
}

id objc_msgSend__containedPlace(void *a1, const char *a2, ...)
{
  return _[a1 _containedPlace];
}

id objc_msgSend__containingAppIdentifer(void *a1, const char *a2, ...)
{
  return _[a1 _containingAppIdentifer];
}

id objc_msgSend__containsFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 _containsFirstResponder];
}

id objc_msgSend__contentAlphaForCurrentLayout(void *a1, const char *a2, ...)
{
  return _[a1 _contentAlphaForCurrentLayout];
}

id objc_msgSend__contentBottomAnchorAdjustment(void *a1, const char *a2, ...)
{
  return _[a1 _contentBottomAnchorAdjustment];
}

id objc_msgSend__contentFilteredIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _contentFilteredIfNeeded];
}

id objc_msgSend__contentHeight(void *a1, const char *a2, ...)
{
  return _[a1 _contentHeight];
}

id objc_msgSend__contentLayoutGroup(void *a1, const char *a2, ...)
{
  return _[a1 _contentLayoutGroup];
}

id objc_msgSend__contentMargin(void *a1, const char *a2, ...)
{
  return _[a1 _contentMargin];
}

id objc_msgSend__contentNeedsRefreshingForUpdatedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentNeedsRefreshingForUpdatedLocation:");
}

id objc_msgSend__contentSizeCategoryDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _contentSizeCategoryDidChange];
}

id objc_msgSend__contentSizeChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentSizeChanged:");
}

id objc_msgSend__contentSizeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _contentSizeDidChange];
}

id objc_msgSend__contentView(void *a1, const char *a2, ...)
{
  return _[a1 _contentView];
}

id objc_msgSend__contentViewClass(void *a1, const char *a2, ...)
{
  return _[a1 _contentViewClass];
}

id objc_msgSend__context(void *a1, const char *a2, ...)
{
  return _[a1 _context];
}

id objc_msgSend__contextCoordinatedScheduler(void *a1, const char *a2, ...)
{
  return _[a1 _contextCoordinatedScheduler];
}

id objc_msgSend__contextFromProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextFromProvider:");
}

id objc_msgSend__contextFromQuestionWithLocales_withReplyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextFromQuestionWithLocales:withReplyHandler:");
}

id objc_msgSend__contextMenuForCollectionSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForCollectionSnapshot:");
}

id objc_msgSend__contextMenuForMapItemSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForMapItemSnapshot:");
}

id objc_msgSend__contextMenuForTransitLineSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForTransitLineSnapshot:");
}

id objc_msgSend__contextMenuInteractionShouldBegin_(void *a1, const char *a2, ...)
{
  return [a1 _contextMenuInteractionShouldBegin:];
}

id objc_msgSend__contextWithDiameter_(void *a1, const char *a2, ...)
{
  return [a1 _contextWithDiameter:];
}

id objc_msgSend__continueGuidanceInfos(void *a1, const char *a2, ...)
{
  return _[a1 _continueGuidanceInfos];
}

id objc_msgSend__continuePushNavigationWithRoute_navigationMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continuePushNavigationWithRoute:navigationMode:completion:");
}

id objc_msgSend__continueUpdateTrafficWithInitialTrafficFeatures_sharedTrafficFeatures_routes_includeAlternateRoutes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_continueUpdateTrafficWithInitialTrafficFeatures:sharedTrafficFeatures:routes:includeAlternateRoutes:");
}

id objc_msgSend__controlContainerDimmingBehaviour(void *a1, const char *a2, ...)
{
  return _[a1 _controlContainerDimmingBehaviour];
}

id objc_msgSend__convertIconToImageWithBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertIconToImageWithBackground:");
}

id objc_msgSend__convertSymbolToIconImage_RAPType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertSymbolToIconImage:RAPType:");
}

id objc_msgSend__coordinate(void *a1, const char *a2, ...)
{
  return _[a1 _coordinate];
}

id objc_msgSend__coordinatePickingMapRect(void *a1, const char *a2, ...)
{
  return _[a1 _coordinatePickingMapRect];
}

id objc_msgSend__copyPropertiesTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyPropertiesTo:");
}

id objc_msgSend__copyStateWithFidelity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_copyStateWithFidelity:");
}

id objc_msgSend__cornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 _cornerRadius];
}

id objc_msgSend__cornerRadiusForTraitCollection_size_(void *a1, const char *a2, ...)
{
  return [a1 _cornerRadiusForTraitCollection:size:];
}

id objc_msgSend__correctionforComposedRouteStep_listItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_correctionforComposedRouteStep:listItem:");
}

id objc_msgSend__countAdjustmentForCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countAdjustmentForCategory:");
}

id objc_msgSend__countStopsStringClientFallback(void *a1, const char *a2, ...)
{
  return _[a1 _countStopsStringClientFallback];
}

id objc_msgSend__countStopsStringFromServer(void *a1, const char *a2, ...)
{
  return _[a1 _countStopsStringFromServer];
}

id objc_msgSend__countryCode(void *a1, const char *a2, ...)
{
  return _[a1 _countryCode];
}

id objc_msgSend__cpConnectorTypeForConnectorType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cpConnectorTypeForConnectorType:");
}

id objc_msgSend__cpLaneGuidanceForGuidanceEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cpLaneGuidanceForGuidanceEvent:");
}

id objc_msgSend__cpManeuverForGuidanceEvent_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cpManeuverForGuidanceEvent:route:");
}

id objc_msgSend__cpTravelEstimatesForGuidanceEvent_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cpTravelEstimatesForGuidanceEvent:route:");
}

id objc_msgSend__createAccessoryButtonViewForAccessory_(void *a1, const char *a2, ...)
{
  return [a1 _createAccessoryButtonViewForAccessory:];
}

id objc_msgSend__createAccessoryTitleView(void *a1, const char *a2, ...)
{
  return _[a1 _createAccessoryTitleView];
}

id objc_msgSend__createAccessoryView(void *a1, const char *a2, ...)
{
  return _[a1 _createAccessoryView];
}

id objc_msgSend__createActionDetails(void *a1, const char *a2, ...)
{
  return _[a1 _createActionDetails];
}

id objc_msgSend__createActionMenu(void *a1, const char *a2, ...)
{
  return _[a1 _createActionMenu];
}

id objc_msgSend__createAlertController(void *a1, const char *a2, ...)
{
  return _[a1 _createAlertController];
}

id objc_msgSend__createAllAuxiliaryTasks(void *a1, const char *a2, ...)
{
  return _[a1 _createAllAuxiliaryTasks];
}

id objc_msgSend__createAndObserveStringOfKind_originalValue_(void *a1, const char *a2, ...)
{
  return [a1 _createAndObserveStringOfKind:originalValue:];
}

id objc_msgSend__createAndPresentAlertControllerWithTitle_descriptionText_cancelString_cancelHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndPresentAlertControllerWithTitle:descriptionText:cancelString:cancelHandler:");
}

id objc_msgSend__createAndSaveHistoryEntryFromOutgoingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndSaveHistoryEntryFromOutgoingSession:");
}

id objc_msgSend__createAndSaveHistoryEntryFromSession_selectedRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndSaveHistoryEntryFromSession:selectedRoute:");
}

id objc_msgSend__createAndSaveHistoryEntryFromUpdatedSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAndSaveHistoryEntryFromUpdatedSession:");
}

id objc_msgSend__createAutohidingTextlabelWithVerticalCompressionResistancePriority_(void *a1, const char *a2, ...)
{
  return [a1 _createAutohidingTextlabelWithVerticalCompressionResistancePriority:];
}

id objc_msgSend__createAutomaticUpdatesModel_(void *a1, const char *a2, ...)
{
  return [a1 _createAutomaticUpdatesModel:];
}

id objc_msgSend__createAuxiliaryTasksIfNecessaryForPreference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAuxiliaryTasksIfNecessaryForPreference:");
}

id objc_msgSend__createBaseEvent(void *a1, const char *a2, ...)
{
  return _[a1 _createBaseEvent];
}

id objc_msgSend__createBulletsFromBulletTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBulletsFromBulletTypes:");
}

id objc_msgSend__createButtonConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 _createButtonConfigurations];
}

id objc_msgSend__createCollectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 _createCollectionViewLayout];
}

id objc_msgSend__createCompanionRoutesConnection(void *a1, const char *a2, ...)
{
  return _[a1 _createCompanionRoutesConnection];
}

id objc_msgSend__createCompanionRoutesConnectionOnIsolationQueue(void *a1, const char *a2, ...)
{
  return _[a1 _createCompanionRoutesConnectionOnIsolationQueue];
}

id objc_msgSend__createConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _createConstraints];
}

id objc_msgSend__createConstraintsSpecificToConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _createConstraintsSpecificToConfiguration];
}

id objc_msgSend__createContainee(void *a1, const char *a2, ...)
{
  return _[a1 _createContainee];
}

id objc_msgSend__createContentStackView(void *a1, const char *a2, ...)
{
  return _[a1 _createContentStackView];
}

id objc_msgSend__createContentView(void *a1, const char *a2, ...)
{
  return _[a1 _createContentView];
}

id objc_msgSend__createDataProviders(void *a1, const char *a2, ...)
{
  return _[a1 _createDataProviders];
}

id objc_msgSend__createDetailsViewInView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDetailsViewInView:constraints:");
}

id objc_msgSend__createEVChargingViewModel(void *a1, const char *a2, ...)
{
  return _[a1 _createEVChargingViewModel];
}

id objc_msgSend__createEtaLabelTrailingConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _createEtaLabelTrailingConstraint];
}

id objc_msgSend__createExpirationTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createExpirationTimerIfNeeded];
}

id objc_msgSend__createFakeButton(void *a1, const char *a2, ...)
{
  return _[a1 _createFakeButton];
}

id objc_msgSend__createFakeLanes(void *a1, const char *a2, ...)
{
  return _[a1 _createFakeLanes];
}

id objc_msgSend__createFocusRingLayer(void *a1, const char *a2, ...)
{
  return _[a1 _createFocusRingLayer];
}

id objc_msgSend__createFocusShapeLayer(void *a1, const char *a2, ...)
{
  return _[a1 _createFocusShapeLayer];
}

id objc_msgSend__createFooterBlurView(void *a1, const char *a2, ...)
{
  return _[a1 _createFooterBlurView];
}

id objc_msgSend__createForceOfflineModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createForceOfflineModel:");
}

id objc_msgSend__createIconImageView(void *a1, const char *a2, ...)
{
  return _[a1 _createIconImageView];
}

id objc_msgSend__createImageForCategory_scale_traits_isCarplay_nightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createImageForCategory:scale:traits:isCarplay:nightMode:");
}

id objc_msgSend__createImageView(void *a1, const char *a2, ...)
{
  return _[a1 _createImageView];
}

id objc_msgSend__createInitialNavigationRapStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createInitialNavigationRapStateWithCompletion:");
}

id objc_msgSend__createLayout(void *a1, const char *a2, ...)
{
  return _[a1 _createLayout];
}

id objc_msgSend__createLayoutGuidesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createLayoutGuidesIfNeeded];
}

id objc_msgSend__createMainImageView(void *a1, const char *a2, ...)
{
  return _[a1 _createMainImageView];
}

id objc_msgSend__createMapsSuggestionEngine(void *a1, const char *a2, ...)
{
  return _[a1 _createMapsSuggestionEngine];
}

id objc_msgSend__createMapsSuggestionEngineWithCallBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMapsSuggestionEngineWithCallBack:");
}

id objc_msgSend__createMapsThemeButtonWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMapsThemeButtonWithTitle:");
}

id objc_msgSend__createMapsThemeLabelWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createMapsThemeLabelWithTitle:");
}

id objc_msgSend__createMenuForSortButton(void *a1, const char *a2, ...)
{
  return _[a1 _createMenuForSortButton];
}

id objc_msgSend__createModelForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createModelForType:");
}

id objc_msgSend__createMonitors(void *a1, const char *a2, ...)
{
  return _[a1 _createMonitors];
}

id objc_msgSend__createNewCollectionAction(void *a1, const char *a2, ...)
{
  return _[a1 _createNewCollectionAction];
}

id objc_msgSend__createNewContactCard(void *a1, const char *a2, ...)
{
  return _[a1 _createNewContactCard];
}

id objc_msgSend__createNewMultilineShieldView(void *a1, const char *a2, ...)
{
  return _[a1 _createNewMultilineShieldView];
}

id objc_msgSend__createOkButton(void *a1, const char *a2, ...)
{
  return _[a1 _createOkButton];
}

id objc_msgSend__createOrReuseLookAroundView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createOrReuseLookAroundView:completion:");
}

id objc_msgSend__createOverlaysIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 _createOverlaysIfNeeded:];
}

id objc_msgSend__createPOIEnrichmentFormWithContext(void *a1, const char *a2, ...)
{
  return _[a1 _createPOIEnrichmentFormWithContext];
}

id objc_msgSend__createPOIsForItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPOIsForItems:");
}

id objc_msgSend__createPartAndSectionArraysIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createPartAndSectionArraysIfNeeded];
}

id objc_msgSend__createPlaceCardItemFromMapItem_isMarkedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPlaceCardItemFromMapItem:isMarkedLocation:");
}

id objc_msgSend__createPrimaryLabelWithEmail_location_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createPrimaryLabelWithEmail:location:");
}

id objc_msgSend__createPrimaryLabelWithText_(void *a1, const char *a2, ...)
{
  return [a1 _createPrimaryLabelWithText:];
}

id objc_msgSend__createProgressViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createProgressViewIfNeeded];
}

id objc_msgSend__createQuestionsFromShortcuts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createQuestionsFromShortcuts:");
}

id objc_msgSend__createRAPContext(void *a1, const char *a2, ...)
{
  return _[a1 _createRAPContext];
}

id objc_msgSend__createRapAppStateWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createRapAppStateWithCompletion:");
}

id objc_msgSend__createResultOnIsolationQueueWithRoutes_error_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createResultOnIsolationQueueWithRoutes:error:completionHandler:");
}

id objc_msgSend__createRichMapsActivity(void *a1, const char *a2, ...)
{
  return _[a1 _createRichMapsActivity];
}

id objc_msgSend__createRouteSectionsForCurrentRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _createRouteSectionsForCurrentRoutes];
}

id objc_msgSend__createSatelliteMenu(void *a1, const char *a2, ...)
{
  return _[a1 _createSatelliteMenu];
}

id objc_msgSend__createSecondaryLabelWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSecondaryLabelWithText:");
}

id objc_msgSend__createSectionsForQuestion_withSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSectionsForQuestion:withSelection:");
}

id objc_msgSend__createSectionsWithObjects_searchSectionList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSectionsWithObjects:searchSectionList:");
}

id objc_msgSend__createSendButton(void *a1, const char *a2, ...)
{
  return _[a1 _createSendButton];
}

id objc_msgSend__createSizeConstraintsForArtworkViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSizeConstraintsForArtworkViews:");
}

id objc_msgSend__createSkipButton(void *a1, const char *a2, ...)
{
  return _[a1 _createSkipButton];
}

id objc_msgSend__createSliderForIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSliderForIdiom:");
}

id objc_msgSend__createSpinnerView(void *a1, const char *a2, ...)
{
  return _[a1 _createSpinnerView];
}

id objc_msgSend__createStyleSpecificConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createStyleSpecificConstraintsIfNeeded];
}

id objc_msgSend__createSubviews(void *a1, const char *a2, ...)
{
  return _[a1 _createSubviews];
}

id objc_msgSend__createSwitchViewInView_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSwitchViewInView:constraints:");
}

id objc_msgSend__createSyncToWatchModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createSyncToWatchModel:");
}

id objc_msgSend__createTitleLabel(void *a1, const char *a2, ...)
{
  return _[a1 _createTitleLabel];
}

id objc_msgSend__createToggleForIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createToggleForIdiom:");
}

id objc_msgSend__createUIActionForSortType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createUIActionForSortType:");
}

id objc_msgSend__createUserInfoLabelWithEmail_location_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createUserInfoLabelWithEmail:location:");
}

id objc_msgSend__createVideoPlayer(void *a1, const char *a2, ...)
{
  return _[a1 _createVideoPlayer];
}

id objc_msgSend__createVideoView(void *a1, const char *a2, ...)
{
  return _[a1 _createVideoView];
}

id objc_msgSend__createViews(void *a1, const char *a2, ...)
{
  return _[a1 _createViews];
}

id objc_msgSend__createViewsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createViewsIfNeeded];
}

id objc_msgSend__credentialsForPrimaryICloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 _credentialsForPrimaryICloudAccount];
}

id objc_msgSend__curatedCollectionSpecialization(void *a1, const char *a2, ...)
{
  return _[a1 _curatedCollectionSpecialization];
}

id objc_msgSend__currencySymbolForCode_(void *a1, const char *a2, ...)
{
  return [a1 _currencySymbolForCode:];
}

id objc_msgSend__currentAccessibilityLabel(void *a1, const char *a2, ...)
{
  return _[a1 _currentAccessibilityLabel];
}

id objc_msgSend__currentAlertDidFinish(void *a1, const char *a2, ...)
{
  return _[a1 _currentAlertDidFinish];
}

id objc_msgSend__currentAnalyticsTarget(void *a1, const char *a2, ...)
{
  return _[a1 _currentAnalyticsTarget];
}

id objc_msgSend__currentBackgroundColorMode(void *a1, const char *a2, ...)
{
  return _[a1 _currentBackgroundColorMode];
}

id objc_msgSend__currentCacheKey(void *a1, const char *a2, ...)
{
  return _[a1 _currentCacheKey];
}

id objc_msgSend__currentCardContaineeController(void *a1, const char *a2, ...)
{
  return _[a1 _currentCardContaineeController];
}

id objc_msgSend__currentContainerViewController(void *a1, const char *a2, ...)
{
  return _[a1 _currentContainerViewController];
}

id objc_msgSend__currentContainerViewControllerWithContext_(void *a1, const char *a2, ...)
{
  return [_currentContainerViewControllerWithContext:];
}

id objc_msgSend__currentDownloadOperationForPhotoInfo_(void *a1, const char *a2, ...)
{
  return [_currentDownloadOperationForPhotoInfo:];
}

id objc_msgSend__currentFlyoverAnimationID(void *a1, const char *a2, ...)
{
  return _[a1 _currentFlyoverAnimationID];
}

id objc_msgSend__currentFont(void *a1, const char *a2, ...)
{
  return _[a1 _currentFont];
}

id objc_msgSend__currentFrameRateLimit(void *a1, const char *a2, ...)
{
  return _[a1 _currentFrameRateLimit];
}

id objc_msgSend__currentGeneration(void *a1, const char *a2, ...)
{
  return _[a1 _currentGeneration];
}

id objc_msgSend__currentGuidanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _currentGuidanceInfo];
}

id objc_msgSend__currentGuidanceStateMessageWithGuidanceCausedVibration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentGuidanceStateMessageWithGuidanceCausedVibration:");
}

id objc_msgSend__currentInterruptionHandle(void *a1, const char *a2, ...)
{
  return _[a1 _currentInterruptionHandle];
}

id objc_msgSend__currentNavStateDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _currentNavStateDictionary];
}

id objc_msgSend__currentOpenApplicationEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 _currentOpenApplicationEndpoint];
}

id objc_msgSend__currentPlaySpeedIndex(void *a1, const char *a2, ...)
{
  return _[a1 _currentPlaySpeedIndex];
}

id objc_msgSend__currentPresentedViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _currentPresentedViewFrame];
}

id objc_msgSend__currentRouteHandleStorage(void *a1, const char *a2, ...)
{
  return _[a1 _currentRouteHandleStorage];
}

id objc_msgSend__currentRouteID(void *a1, const char *a2, ...)
{
  return _[a1 _currentRouteID];
}

id objc_msgSend__currentRouteSearchViewController(void *a1, const char *a2, ...)
{
  return _[a1 _currentRouteSearchViewController];
}

id objc_msgSend__currentSceneActivationState(void *a1, const char *a2, ...)
{
  return _[a1 _currentSceneActivationState];
}

id objc_msgSend__currentSign(void *a1, const char *a2, ...)
{
  return _[a1 _currentSign];
}

id objc_msgSend__currentStateFromService(void *a1, const char *a2, ...)
{
  return _[a1 _currentStateFromService];
}

id objc_msgSend__currentTiming(void *a1, const char *a2, ...)
{
  return _[a1 _currentTiming];
}

id objc_msgSend__currentTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 _currentTraitCollection];
}

id objc_msgSend__currentTransportType(void *a1, const char *a2, ...)
{
  return _[a1 _currentTransportType];
}

id objc_msgSend__currentUsageTarget(void *a1, const char *a2, ...)
{
  return _[a1 _currentUsageTarget];
}

id objc_msgSend__currentUserInterfaceIdiomString(void *a1, const char *a2, ...)
{
  return _[a1 _currentUserInterfaceIdiomString];
}

id objc_msgSend__currentVehicleEntries(void *a1, const char *a2, ...)
{
  return _[a1 _currentVehicleEntries];
}

id objc_msgSend__currentlySelectedAnnotation(void *a1, const char *a2, ...)
{
  return _[a1 _currentlySelectedAnnotation];
}

id objc_msgSend__currentlySelectedIndexForAddStop(void *a1, const char *a2, ...)
{
  return _[a1 _currentlySelectedIndexForAddStop];
}

id objc_msgSend__customComposedStringForCurrentGuidanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _customComposedStringForCurrentGuidanceInfo];
}

id objc_msgSend__customIconID(void *a1, const char *a2, ...)
{
  return _[a1 _customIconID];
}

id objc_msgSend__customInit(void *a1, const char *a2, ...)
{
  return _[a1 _customInit];
}

id objc_msgSend__customInitForSecondButton(void *a1, const char *a2, ...)
{
  return _[a1 _customInitForSecondButton];
}

id objc_msgSend__customSelectedRouteTextFromIncidentAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_customSelectedRouteTextFromIncidentAlert:");
}

id objc_msgSend__customVariableOverridesForCurrentGuidanceInfo(void *a1, const char *a2, ...)
{
  return _[a1 _customVariableOverridesForCurrentGuidanceInfo];
}

id objc_msgSend__cyclingSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _cyclingSectionTitle];
}

id objc_msgSend__dataChanged(void *a1, const char *a2, ...)
{
  return _[a1 _dataChanged];
}

id objc_msgSend__dataProviderContainsCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataProviderContainsCollection:");
}

id objc_msgSend__dataProviderForAlbumIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dataProviderForAlbumIndex:");
}

id objc_msgSend__dataSource(void *a1, const char *a2, ...)
{
  return _[a1 _dataSource];
}

id objc_msgSend__dataSourceClass(void *a1, const char *a2, ...)
{
  return _[a1 _dataSourceClass];
}

id objc_msgSend__dataValue(void *a1, const char *a2, ...)
{
  return _[a1 _dataValue];
}

id objc_msgSend__daysBetweenDates_currentDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_daysBetweenDates:currentDate:");
}

id objc_msgSend__daysSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 _daysSinceDate:];
}

id objc_msgSend__deactivate(void *a1, const char *a2, ...)
{
  return _[a1 _deactivate];
}

id objc_msgSend__deactivateHosting(void *a1, const char *a2, ...)
{
  return _[a1 _deactivateHosting];
}

id objc_msgSend__debugConsole(void *a1, const char *a2, ...)
{
  return _[a1 _debugConsole];
}

id objc_msgSend__debugDescriptionForProperty_withValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:withValue:");
}

id objc_msgSend__debugHighlightLaneView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugHighlightLaneView:");
}

id objc_msgSend__debugPrintHierarchy(void *a1, const char *a2, ...)
{
  return _[a1 _debugPrintHierarchy];
}

id objc_msgSend__debug_addParkedCarAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_addParkedCarAtLocation:");
}

id objc_msgSend__debug_bucketId(void *a1, const char *a2, ...)
{
  return [a1 _debug_bucketId];
}

id objc_msgSend__debug_configurationDate(void *a1, const char *a2, ...)
{
  return [a1 _debug_configurationDate];
}

id objc_msgSend__debug_customQuerySubstringForType_dispatcherRequestType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_customQuerySubstringForType:dispatcherRequestType:");
}

id objc_msgSend__debug_datasetId(void *a1, const char *a2, ...)
{
  return [a1 _debug_datasetId];
}

id objc_msgSend__debug_fetchAllAvailableExperiments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_fetchAllAvailableExperiments:");
}

id objc_msgSend__debug_fetchDiagnosticsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_fetchDiagnosticsString:");
}

id objc_msgSend__debug_fetchServerConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _debug_fetchServerConfiguration:];
}

id objc_msgSend__debug_forEachExperimentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_forEachExperimentType:");
}

id objc_msgSend__debug_forceUpdate(void *a1, const char *a2, ...)
{
  return [a1 _debug_forceUpdate];
}

id objc_msgSend__debug_laneWithDirections_good_preferred_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_laneWithDirections:good:preferred:");
}

id objc_msgSend__debug_setActiveExperimentBranch_(void *a1, const char *a2, ...)
{
  return [a1 _debug_setActiveExperimentBranch:];
}

id objc_msgSend__debug_setBucketIdDictionaryRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_setBucketIdDictionaryRepresentation:");
}

id objc_msgSend__debug_setCustomQuerySubstring_forExperimentType_dispatcherRequestType_(void *a1, const char *a2, ...)
{
  return [a1 _debug_setCustomQuerySubstring:forExperimentType:dispatcherRequestType:];
}

id objc_msgSend__debug_shouldSkipSendingMergedRichMapsActivity(void *a1, const char *a2, ...)
{
  return [a1 _debug_shouldSkipSendingMergedRichMapsActivity];
}

id objc_msgSend__debug_showParkedCarNotification(void *a1, const char *a2, ...)
{
  return [a1 _debug_showParkedCarNotification];
}

id objc_msgSend__debug_showParkedCarReplacementNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debug_showParkedCarReplacementNotification");
}

id objc_msgSend__debug_straightLane(void *a1, const char *a2, ...)
{
  return [a1 _debug_straightLane];
}

id objc_msgSend__defaultArrowMetricsForStyle_(void *a1, const char *a2, ...)
{
  return [_defaultArrowMetricsForStyle:];
}

id objc_msgSend__defaultClassesBySessionState(void *a1, const char *a2, ...)
{
  return _[a1 _defaultClassesBySessionState];
}

id objc_msgSend__defaultFont(void *a1, const char *a2, ...)
{
  return _[a1 _defaultFont];
}

id objc_msgSend__defaultInvalidArrowColor(void *a1, const char *a2, ...)
{
  return _[a1 _defaultInvalidArrowColor];
}

id objc_msgSend__defaultJunctionArrowMetricsForStyle_(void *a1, const char *a2, ...)
{
  return [_defaultJunctionArrowMetricsForStyle:];
}

id objc_msgSend__defaultMessage(void *a1, const char *a2, ...)
{
  return _[a1 _defaultMessage];
}

id objc_msgSend__defaultMetrics(void *a1, const char *a2, ...)
{
  return _[a1 _defaultMetrics];
}

id objc_msgSend__defaultPaymentCardExpressStatuses_(void *a1, const char *a2, ...)
{
  return [a1 _defaultPaymentCardExpressStatuses:];
}

id objc_msgSend__defaultPaymentCardsFromLibrary_(void *a1, const char *a2, ...)
{
  return [_defaultPaymentCardsFromLibrary:];
}

id objc_msgSend__defaultPreferredStatusBarStyle(void *a1, const char *a2, ...)
{
  return _[a1 _defaultPreferredStatusBarStyle];
}

id objc_msgSend__defaultPrefersStatusBarHidden(void *a1, const char *a2, ...)
{
  return _[a1 _defaultPrefersStatusBarHidden];
}

id objc_msgSend__defaultRAPUserContentLabelText(void *a1, const char *a2, ...)
{
  return _[a1 _defaultRAPUserContentLabelText];
}

id objc_msgSend__defaultRAPUserContentLinkText(void *a1, const char *a2, ...)
{
  return _[a1 _defaultRAPUserContentLinkText];
}

id objc_msgSend__defaultSettings(void *a1, const char *a2, ...)
{
  return _[a1 _defaultSettings];
}

id objc_msgSend__defaultShouldShowBottomHairline(void *a1, const char *a2, ...)
{
  return _[a1 _defaultShouldShowBottomHairline];
}

id objc_msgSend__defaultSignLayoutDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _defaultSignLayoutDelegate];
}

id objc_msgSend__defaultStatusBarBackgroundViewStyle(void *a1, const char *a2, ...)
{
  return _[a1 _defaultStatusBarBackgroundViewStyle];
}

id objc_msgSend__defaultTitle(void *a1, const char *a2, ...)
{
  return _[a1 _defaultTitle];
}

id objc_msgSend__defaultTitleViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _defaultTitleViewConstraints];
}

id objc_msgSend__defaultsKeysForType_(void *a1, const char *a2, ...)
{
  return [_defaultsKeysForType:];
}

id objc_msgSend__delayTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _delayTimerFired];
}

id objc_msgSend__delegate(void *a1, const char *a2, ...)
{
  return _[a1 _delegate];
}

id objc_msgSend__deleteAtIndexPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteAtIndexPath:completion:");
}

id objc_msgSend__deleteCachedFiles(void *a1, const char *a2, ...)
{
  return _[a1 _deleteCachedFiles];
}

id objc_msgSend__deleteCardUUID_(void *a1, const char *a2, ...)
{
  return [a1 _deleteCardUUID];
}

id objc_msgSend__deleteCollection(void *a1, const char *a2, ...)
{
  return _[a1 _deleteCollection];
}

id objc_msgSend__deleteCollection_atIndexPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteCollection:atIndexPath:completion:");
}

id objc_msgSend__deleteCollectionItemSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteCollectionItemSnapshot:");
}

id objc_msgSend__deleteCollectionSnapshot_(void *a1, const char *a2, ...)
{
  return [a1 _deleteCollectionSnapshot];
}

id objc_msgSend__deleteCollections_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteCollections:completion:");
}

id objc_msgSend__deleteContact_(void *a1, const char *a2, ...)
{
  return [a1 _deleteContact:];
}

id objc_msgSend__deleteDirectionsCacheFile(void *a1, const char *a2, ...)
{
  return _[a1 _deleteDirectionsCacheFile];
}

id objc_msgSend__deleteExpiredReports(void *a1, const char *a2, ...)
{
  return _[a1 _deleteExpiredReports];
}

id objc_msgSend__deleteFirstAnchorPointMatchingAnchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteFirstAnchorPointMatchingAnchorPoint:");
}

id objc_msgSend__deleteIDFromLocalListWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteIDFromLocalListWithRoute:");
}

id objc_msgSend__deleteLastAnchorPointMatchingAnchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteLastAnchorPointMatchingAnchorPoint:");
}

id objc_msgSend__deleteMarkedLocationSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteMarkedLocationSnapshot:");
}

id objc_msgSend__deleteRecentsSnapshots_deleteAll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteRecentsSnapshots:deleteAll:");
}

id objc_msgSend__deleteRouteData_completion_(void *a1, const char *a2, ...)
{
  return [a1 _deleteRouteData:completion:];
}

id objc_msgSend__deleteSelectedMapsAndPerformBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSelectedMapsAndPerformBlock:");
}

id objc_msgSend__deleteSharedTripWithSummary_atIndexPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteSharedTripWithSummary:atIndexPath:completion:");
}

id objc_msgSend__deleteSnapshot_(void *a1, const char *a2, ...)
{
  return [a1 _deleteSnapshot];
}

id objc_msgSend__delimiterLabel(void *a1, const char *a2, ...)
{
  return _[a1 _delimiterLabel];
}

id objc_msgSend__delimiterString(void *a1, const char *a2, ...)
{
  return _[a1 _delimiterString];
}

id objc_msgSend__departureSequenceContainingTripIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_departureSequenceContainingTripIdentifier:");
}

id objc_msgSend__departuresHeaderStyle(void *a1, const char *a2, ...)
{
  return _[a1 _departuresHeaderStyle];
}

id objc_msgSend__deregisterObservers(void *a1, const char *a2, ...)
{
  return _[a1 _deregisterObservers];
}

id objc_msgSend__description(void *a1, const char *a2, ...)
{
  return _[a1 _description];
}

id objc_msgSend__descriptionComponentsForSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionComponentsForSettings:");
}

id objc_msgSend__descriptionFont(void *a1, const char *a2, ...)
{
  return _[a1 _descriptionFont];
}

id objc_msgSend__descriptionForSimulationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_descriptionForSimulationType:");
}

id objc_msgSend__descriptionLabelDidExpand(void *a1, const char *a2, ...)
{
  return _[a1 _descriptionLabelDidExpand];
}

id objc_msgSend__deselectItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectItemAtIndexPath:");
}

id objc_msgSend__deselectLabelMarkerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deselectLabelMarkerAnimated:");
}

id objc_msgSend__deselectTransitLineMarker(void *a1, const char *a2, ...)
{
  return _[a1 _deselectTransitLineMarker];
}

id objc_msgSend__desiredCards(void *a1, const char *a2, ...)
{
  return _[a1 _desiredCards];
}

id objc_msgSend__desiredCompressionStage(void *a1, const char *a2, ...)
{
  return _[a1 _desiredCompressionStage];
}

id objc_msgSend__desiredFloatingControlsForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _desiredFloatingControlsForCurrentState];
}

id objc_msgSend__destinationAddress(void *a1, const char *a2, ...)
{
  return _[a1 _destinationAddress];
}

id objc_msgSend__destinationDirectionsURL(void *a1, const char *a2, ...)
{
  return _[a1 _destinationDirectionsURL];
}

id objc_msgSend__destinationHandoffErrorWithReason_(void *a1, const char *a2, ...)
{
  return [a1 _destinationHandoffErrorWithReason:];
}

id objc_msgSend__destinationHandoffTestingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _destinationHandoffTestingEnabled];
}

id objc_msgSend__destinationItem(void *a1, const char *a2, ...)
{
  return _[a1 _destinationItem];
}

id objc_msgSend__destinationPhoneNumbersForWaypoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationPhoneNumbersForWaypoint:");
}

id objc_msgSend__destinationTextForEndSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_destinationTextForEndSearchResult:");
}

id objc_msgSend__destinationTimeZoneOffsetMinutes(void *a1, const char *a2, ...)
{
  return _[a1 _destinationTimeZoneOffsetMinutes];
}

id objc_msgSend__destinationTitle(void *a1, const char *a2, ...)
{
  return _[a1 _destinationTitle];
}

id objc_msgSend__destroyChrome(void *a1, const char *a2, ...)
{
  return _[a1 _destroyChrome];
}

id objc_msgSend__destroyCurrentSceneIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _destroyCurrentSceneIfNeeded];
}

id objc_msgSend__destroyVideoPlayer(void *a1, const char *a2, ...)
{
  return _[a1 _destroyVideoPlayer];
}

id objc_msgSend__detachFromMapView(void *a1, const char *a2, ...)
{
  return _[a1 _detachFromMapView];
}

id objc_msgSend__detailCardTitle(void *a1, const char *a2, ...)
{
  return _[a1 _detailCardTitle];
}

id objc_msgSend__detailTextForSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailTextForSnapshot:");
}

id objc_msgSend__detailsUpdateLabels(void *a1, const char *a2, ...)
{
  return _[a1 _detailsUpdateLabels];
}

id objc_msgSend__detentIdentifierForContaineeLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detentIdentifierForContaineeLayout:");
}

id objc_msgSend__detentIndexForContaineeLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detentIndexForContaineeLayout:");
}

id objc_msgSend__detentValues(void *a1, const char *a2, ...)
{
  return _[a1 _detentValues];
}

id objc_msgSend__detentWithContainerViewBlock_(void *a1, const char *a2, ...)
{
  return [a1 _detentWithContainerViewBlock:];
}

id objc_msgSend__determineAssetCategory(void *a1, const char *a2, ...)
{
  return _[a1 _determineAssetCategory];
}

id objc_msgSend__determineOfflineRegionInfo(void *a1, const char *a2, ...)
{
  return _[a1 _determineOfflineRegionInfo];
}

id objc_msgSend__determineShieldsFromLines(void *a1, const char *a2, ...)
{
  return _[a1 _determineShieldsFromLines];
}

id objc_msgSend__detourDistanceString(void *a1, const char *a2, ...)
{
  return _[a1 _detourDistanceString];
}

id objc_msgSend__detourDistanceToMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detourDistanceToMapItem:");
}

id objc_msgSend__detourInfo(void *a1, const char *a2, ...)
{
  return _[a1 _detourInfo];
}

id objc_msgSend__dictFromJSONString_(void *a1, const char *a2, ...)
{
  return [a1 _dictFromJSONString:];
}

id objc_msgSend__dictionaryValueFromData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryValueFromData:");
}

id objc_msgSend__didArrive(void *a1, const char *a2, ...)
{
  return _[a1 _didArrive];
}

id objc_msgSend__didBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 _didBecomeActive];
}

id objc_msgSend__didChange(void *a1, const char *a2, ...)
{
  return _[a1 _didChange];
}

id objc_msgSend__didChangeCenterCoordinate_fromEditLocationMapView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didChangeCenterCoordinate:fromEditLocationMapView:");
}

id objc_msgSend__didCompleteInitialUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _didCompleteInitialUpdate];
}

id objc_msgSend__didConfirmDeleteCollection_deletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didConfirmDeleteCollection:deletion:");
}

id objc_msgSend__didDismiss(void *a1, const char *a2, ...)
{
  return _[a1 _didDismiss];
}

id objc_msgSend__didDisplayModelForPreference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didDisplayModelForPreference:");
}

id objc_msgSend__didEndMovingLookAroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didEndMovingLookAroundView:");
}

id objc_msgSend__didEnterBackground(void *a1, const char *a2, ...)
{
  return _[a1 _didEnterBackground];
}

id objc_msgSend__didFinishAnimatingListView(void *a1, const char *a2, ...)
{
  return _[a1 _didFinishAnimatingListView];
}

id objc_msgSend__didFinishJumpingForCapture(void *a1, const char *a2, ...)
{
  return _[a1 _didFinishJumpingForCapture];
}

id objc_msgSend__didModifyExistingReport_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didModifyExistingReport:");
}

id objc_msgSend__didResolveMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didResolveMapItem:");
}

id objc_msgSend__didSelectModel(void *a1, const char *a2, ...)
{
  return _[a1 _didSelectModel];
}

id objc_msgSend__didSelectModelWithVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didSelectModelWithVehicle:");
}

id objc_msgSend__didSelectWaypoint_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didSelectWaypoint:atIndex:");
}

id objc_msgSend__didStartManeuver(void *a1, const char *a2, ...)
{
  return _[a1 _didStartManeuver];
}

id objc_msgSend__didStopDownload(void *a1, const char *a2, ...)
{
  return _[a1 _didStopDownload];
}

id objc_msgSend__didTapAutomaticSharingButton(void *a1, const char *a2, ...)
{
  return _[a1 _didTapAutomaticSharingButton];
}

id objc_msgSend__didTapContent_(void *a1, const char *a2, ...)
{
  return [a1 _didTapContent:];
}

id objc_msgSend__didTapDoneButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didTapDoneButton:");
}

id objc_msgSend__didTapHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _didTapHeaderView];
}

id objc_msgSend__didTapPrimaryActionButton_(void *a1, const char *a2, ...)
{
  return [a1 _didTapPrimaryActionButton:];
}

id objc_msgSend__didTapTicketingSegmentInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didTapTicketingSegmentInfo:");
}

id objc_msgSend__didViewModel(void *a1, const char *a2, ...)
{
  return _[a1 _didViewModel];
}

id objc_msgSend__didViewModelWithVehicle_(void *a1, const char *a2, ...)
{
  return [a1 _didViewModelWithVehicle:];
}

id objc_msgSend__didVoteAlert_type_target_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didVoteAlert:type:target:");
}

id objc_msgSend__didVoteIncident_onTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didVoteIncident:onTarget:");
}

id objc_msgSend__dimAlpha(void *a1, const char *a2, ...)
{
  return _[a1 _dimAlpha];
}

id objc_msgSend__dimmingAlphaForUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 _dimmingAlphaForUserInterfaceStyle:];
}

id objc_msgSend__dimmingBehaviourForContainee_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dimmingBehaviourForContainee:");
}

id objc_msgSend__directionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _directionsEnabled];
}

id objc_msgSend__directionsOriginDestinationCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _directionsOriginDestinationCellClass];
}

id objc_msgSend__directionsOriginDestinationCollectionViewCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _directionsOriginDestinationCollectionViewCellClass];
}

id objc_msgSend__directionsRecording(void *a1, const char *a2, ...)
{
  return _[a1 _directionsRecording];
}

id objc_msgSend__directionsSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _directionsSectionTitle];
}

id objc_msgSend__directionsStepCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _directionsStepCellClass];
}

id objc_msgSend__directionsStepCollectionViewCellClass(void *a1, const char *a2, ...)
{
  return _[a1 _directionsStepCollectionViewCellClass];
}

id objc_msgSend__disableInteraction(void *a1, const char *a2, ...)
{
  return _[a1 _disableInteraction];
}

id objc_msgSend__disabledAutomaticUpdatesModel(void *a1, const char *a2, ...)
{
  return _[a1 _disabledAutomaticUpdatesModel];
}

id objc_msgSend__disabledForceOfflineModel(void *a1, const char *a2, ...)
{
  return _[a1 _disabledForceOfflineModel];
}

id objc_msgSend__disabledSyncToWatchModel(void *a1, const char *a2, ...)
{
  return _[a1 _disabledSyncToWatchModel];
}

id objc_msgSend__disabledUpdateAllModel(void *a1, const char *a2, ...)
{
  return _[a1 _disabledUpdateAllModel];
}

id objc_msgSend__disallowDetailsForAnyReason(void *a1, const char *a2, ...)
{
  return _[a1 _disallowDetailsForAnyReason];
}

id objc_msgSend__disambiguateSelectedLineForLabelMarker_onActivation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_disambiguateSelectedLineForLabelMarker:onActivation:");
}

id objc_msgSend__disambiguationRadiusMeters(void *a1, const char *a2, ...)
{
  return _[a1 _disambiguationRadiusMeters];
}

id objc_msgSend__disclosureButton(void *a1, const char *a2, ...)
{
  return _[a1 _disclosureButton];
}

id objc_msgSend__disclosureButtonFont(void *a1, const char *a2, ...)
{
  return _[a1 _disclosureButtonFont];
}

id objc_msgSend__disconnectFromVehicle(void *a1, const char *a2, ...)
{
  return _[a1 _disconnectFromVehicle];
}

id objc_msgSend__diskCachedCategories(void *a1, const char *a2, ...)
{
  return _[a1 _diskCachedCategories];
}

id objc_msgSend__dislikeButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 _dislikeButtonPressed];
}

id objc_msgSend__dismiss(void *a1, const char *a2, ...)
{
  return _[a1 _dismiss];
}

id objc_msgSend__dismissAfterDelay(void *a1, const char *a2, ...)
{
  return _[a1 _dismissAfterDelay];
}

id objc_msgSend__dismissAlertIfNeeded_withResponse_(void *a1, const char *a2, ...)
{
  return [_dismissAlertIfNeeded:withResponse:];
}

id objc_msgSend__dismissAlertViewController_animated_(void *a1, const char *a2, ...)
{
  return [_dismissAlertViewController:animated:];
}

id objc_msgSend__dismissBannerWithReason_(void *a1, const char *a2, ...)
{
  return [_dismissBannerWithReason:];
}

id objc_msgSend__dismissCurrentMenuViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [_dismissCurrentMenuViewControllerAnimated:];
}

id objc_msgSend__dismissDeleteConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 _dismissDeleteConfirmation];
}

id objc_msgSend__dismissDetailCard(void *a1, const char *a2, ...)
{
  return _[a1 _dismissDetailCard];
}

id objc_msgSend__dismissEditor(void *a1, const char *a2, ...)
{
  return _[a1 _dismissEditor];
}

id objc_msgSend__dismissMacToolTipIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _dismissMacToolTipIfNeeded];
}

id objc_msgSend__dismissMenuViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissMenuViewController:animated:");
}

id objc_msgSend__dismissModalCameraSnapshotPickerIfNeededAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _dismissModalCameraSnapshotPickerIfNeededAnimated:];
}

id objc_msgSend__dismissOnboarding(void *a1, const char *a2, ...)
{
  return _[a1 _dismissOnboarding];
}

id objc_msgSend__dismissPOIEnrichmentEditorWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPOIEnrichmentEditorWithCompletion:");
}

id objc_msgSend__dismissPhotoPicker(void *a1, const char *a2, ...)
{
  return _[a1 _dismissPhotoPicker];
}

id objc_msgSend__dismissPhotoPickerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPhotoPickerWithCompletion:");
}

id objc_msgSend__dismissPlaceCardAlertControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _dismissPlaceCardAlertControllerIfNeeded];
}

id objc_msgSend__dismissPlacecardWithCompletion_(void *a1, const char *a2, ...)
{
  return [_dismissPlacecardWithCompletion:];
}

id objc_msgSend__dismissPopoverViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPopoverViewController:animated:");
}

id objc_msgSend__dismissPresentedViewControllersIfNeededForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPresentedViewControllersIfNeededForViewController:");
}

id objc_msgSend__dismissReportComposerWithSender_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissReportComposerWithSender:completion:");
}

id objc_msgSend__dismissSender_withGesture_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissSender:withGesture:completion:");
}

id objc_msgSend__dismissTakePhotoController_(void *a1, const char *a2, ...)
{
  return [_dismissTakePhotoController:];
}

id objc_msgSend__dismissTip(void *a1, const char *a2, ...)
{
  return _[a1 _dismissTip];
}

id objc_msgSend__dismissTrafficAlert(void *a1, const char *a2, ...)
{
  return _[a1 _dismissTrafficAlert];
}

id objc_msgSend__dismissTrafficAlertWithActionType_target_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissTrafficAlertWithActionType:target:");
}

id objc_msgSend__dismissTrafficAlertWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissTrafficAlertWithResult:");
}

id objc_msgSend__dismissTrafficIncidentMapDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _dismissTrafficIncidentMapDisplay];
}

id objc_msgSend__dismissVLFUI(void *a1, const char *a2, ...)
{
  return _[a1 _dismissVLFUI];
}

id objc_msgSend__dismissViewController(void *a1, const char *a2, ...)
{
  return _[a1 _dismissViewController];
}

id objc_msgSend__dispatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatch:");
}

id objc_msgSend__dispatchAfterShortDelay_(void *a1, const char *a2, ...)
{
  return [a1 _dispatchAfterShortDelay:];
}

id objc_msgSend__dispatchCorrectionsUploadForSubmissionIdentifier_newRetryCount_isPOIEnrichment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchCorrectionsUploadForSubmissionIdentifier:newRetryCount:isPOIEnrichment:");
}

id objc_msgSend__dispatchIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _dispatchIfNeeded];
}

id objc_msgSend__dispatchImageUploadForImageURL_submissionIdentifier_clientImageIdentifier_httpType_newRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchImageUploadForImageURL:submissionIdentifier:clientImageIdentifier:httpType:newRetryCount:");
}

id objc_msgSend__dispatchOnManThread_(void *a1, const char *a2, ...)
{
  return [a1 _dispatchOnManThread:];
}

id objc_msgSend__dispatchSelector_toObserver_(void *a1, const char *a2, ...)
{
  return [_a1 _dispatchSelector:toObserver:];
}

id objc_msgSend__dispatchToWorkQueueWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dispatchToWorkQueueWithCompletion:");
}

id objc_msgSend__displayARElement(void *a1, const char *a2, ...)
{
  return _[a1 _displayARElement];
}

id objc_msgSend__displayActionButtonsForSmallLayout(void *a1, const char *a2, ...)
{
  return _[a1 _displayActionButtonsForSmallLayout];
}

id objc_msgSend__displayAlert(void *a1, const char *a2, ...)
{
  return _[a1 _displayAlert];
}

id objc_msgSend__displayContactResults_withTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayContactResults:withTitle:");
}

id objc_msgSend__displayDedicatedFixedProblemViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayDedicatedFixedProblemViewController:");
}

id objc_msgSend__displayEmptyState(void *a1, const char *a2, ...)
{
  return _[a1 _displayEmptyState];
}

id objc_msgSend__displayID(void *a1, const char *a2, ...)
{
  return _[a1 _displayID];
}

id objc_msgSend__displayIncompatibilityMessage(void *a1, const char *a2, ...)
{
  return _[a1 _displayIncompatibilityMessage];
}

id objc_msgSend__displayIndexPath(void *a1, const char *a2, ...)
{
  return _[a1 _displayIndexPath];
}

id objc_msgSend__displayInternalErrorAlert(void *a1, const char *a2, ...)
{
  return _[a1 _displayInternalErrorAlert];
}

id objc_msgSend__displayKeyboardSearchWithInteractionModel_resultsProvider_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayKeyboardSearchWithInteractionModel:resultsProvider:animated:");
}

id objc_msgSend__displayLaunchAlertsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _displayLaunchAlertsIfNecessary];
}

id objc_msgSend__displayMapRegion(void *a1, const char *a2, ...)
{
  return _[a1 _displayMapRegion];
}

id objc_msgSend__displayMaxZoom(void *a1, const char *a2, ...)
{
  return _[a1 _displayMaxZoom];
}

id objc_msgSend__displayModeForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayModeForItem:");
}

id objc_msgSend__displayPlaceCardForSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayPlaceCardForSearchResult:");
}

id objc_msgSend__displayRouteOptions(void *a1, const char *a2, ...)
{
  return _[a1 _displayRouteOptions];
}

id objc_msgSend__displaySearchAlongTheRouteForSearchSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displaySearchAlongTheRouteForSearchSession:");
}

id objc_msgSend__displaySiriSearch(void *a1, const char *a2, ...)
{
  return _[a1 _displaySiriSearch];
}

id objc_msgSend__displayStepIndex(void *a1, const char *a2, ...)
{
  return _[a1 _displayStepIndex];
}

id objc_msgSend__displayableSectionsInTableView(void *a1, const char *a2, ...)
{
  return _[a1 _displayableSectionsInTableView];
}

id objc_msgSend__displayedItem(void *a1, const char *a2, ...)
{
  return _[a1 _displayedItem];
}

id objc_msgSend__displayedSearchResultsType(void *a1, const char *a2, ...)
{
  return _[a1 _displayedSearchResultsType];
}

id objc_msgSend__distanceFont(void *a1, const char *a2, ...)
{
  return _[a1 _distanceFont];
}

id objc_msgSend__distanceFromOrigin(void *a1, const char *a2, ...)
{
  return _[a1 _distanceFromOrigin];
}

id objc_msgSend__distanceTextForStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_distanceTextForStep:");
}

id objc_msgSend__distanceTextForStep_distance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_distanceTextForStep:distance:");
}

id objc_msgSend__distanceToCurrentARFeature(void *a1, const char *a2, ...)
{
  return _[a1 _distanceToCurrentARFeature];
}

id objc_msgSend__distanceToImageCenterForImageSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_distanceToImageCenterForImageSource:");
}

id objc_msgSend__distanceToManeuver(void *a1, const char *a2, ...)
{
  return _[a1 _distanceToManeuver];
}

id objc_msgSend__distanceToPositionPrimaryLabelFirstBaseline(void *a1, const char *a2, ...)
{
  return _[a1 _distanceToPositionPrimaryLabelFirstBaseline];
}

id objc_msgSend__distanceToRoute(void *a1, const char *a2, ...)
{
  return _[a1 _distanceToRoute];
}

id objc_msgSend__distancesSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _distancesSectionTitle];
}

id objc_msgSend__doAfterSubTestForShowingSign(void *a1, const char *a2, ...)
{
  return _[a1 _doAfterSubTestForShowingSign];
}

id objc_msgSend__doAppleConnectAuthentication(void *a1, const char *a2, ...)
{
  return _[a1 _doAppleConnectAuthentication];
}

id objc_msgSend__doPromptsAndStartNavForRouteCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doPromptsAndStartNavForRouteCollection:");
}

id objc_msgSend__documentCSS(void *a1, const char *a2, ...)
{
  return _[a1 _documentCSS];
}

id objc_msgSend__documentHTMLWithInnerBodyHTML_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_documentHTMLWithInnerBodyHTML:");
}

id objc_msgSend__done(void *a1, const char *a2, ...)
{
  return _[a1 _done];
}

id objc_msgSend__doneBarItem(void *a1, const char *a2, ...)
{
  return _[a1 _doneBarItem];
}

id objc_msgSend__doneEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _doneEnabled];
}

id objc_msgSend__doubleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _doubleTapGestureRecognizer];
}

id objc_msgSend__downloadCompleteWithNewDirectory_withError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadCompleteWithNewDirectory:withError:");
}

id objc_msgSend__downloadManifestWithForce_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadManifestWithForce:completion:");
}

id objc_msgSend__downloadNewMapModel(void *a1, const char *a2, ...)
{
  return _[a1 _downloadNewMapModel];
}

id objc_msgSend__downloadSettingsModel(void *a1, const char *a2, ...)
{
  return _[a1 _downloadSettingsModel];
}

id objc_msgSend__downloadWebBundleFileWithPath_inDirectory_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_downloadWebBundleFileWithPath:inDirectory:withCompletion:");
}

id objc_msgSend__downloadWebBundleWithForce_(void *a1, const char *a2, ...)
{
  return [a1 _downloadWebBundleWithForce:];
}

id objc_msgSend__drawAddressWithPin_address_inRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawAddressWithPin:address:inRect:");
}

id objc_msgSend__drawBottomMarginContentInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawBottomMarginContentInRect:");
}

id objc_msgSend__drawPinInRect_zoomLevel_(void *a1, const char *a2, ...)
{
  return [a1 _drawPinInRect:zoomLevel:];
}

id objc_msgSend__drawPinsInRect_zoomLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawPinsInRect:zoomLevel:");
}

id objc_msgSend__drawRingInContext_withProgress_isSecondRing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawRingInContext:withProgress:isSecondRing:");
}

id objc_msgSend__drawRouteLineInRect_zoomLevel_transform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_drawRouteLineInRect:zoomLevel:transform:");
}

id objc_msgSend__drawSecondarySign(void *a1, const char *a2, ...)
{
  return _[a1 _drawSecondarySign];
}

id objc_msgSend__drawSign(void *a1, const char *a2, ...)
{
  return _[a1 _drawSign];
}

id objc_msgSend__drawWithRefinement(void *a1, const char *a2, ...)
{
  return _[a1 _drawWithRefinement];
}

id objc_msgSend__driveOrWalkDirectionsListViewController(void *a1, const char *a2, ...)
{
  return _[a1 _driveOrWalkDirectionsListViewController];
}

id objc_msgSend__driverName(void *a1, const char *a2, ...)
{
  return _[a1 _driverName];
}

id objc_msgSend__drivingSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _drivingSectionTitle];
}

id objc_msgSend__drivingSide(void *a1, const char *a2, ...)
{
  return _[a1 _drivingSide];
}

id objc_msgSend__dropPastDepartures(void *a1, const char *a2, ...)
{
  return _[a1 _dropPastDepartures];
}

id objc_msgSend__dummyArtwork(void *a1, const char *a2, ...)
{
  return _[a1 _dummyArtwork];
}

id objc_msgSend__dummyLockup(void *a1, const char *a2, ...)
{
  return _[a1 _dummyLockup];
}

id objc_msgSend__dummyVehicles(void *a1, const char *a2, ...)
{
  return _[a1 _dummyVehicles];
}

id objc_msgSend__duplicateCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_duplicateCollection:");
}

id objc_msgSend__duplicateCollectionSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_duplicateCollectionSnapshot:");
}

id objc_msgSend__dynamicColorWithColorsByTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dynamicColorWithColorsByTraitCollection:");
}

id objc_msgSend__dynamicIndexOfHomeSection_(void *a1, const char *a2, ...)
{
  return [a1 _dynamicIndexOfHomeSection:];
}

id objc_msgSend__eachGuidanceOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eachGuidanceOutput:");
}

id objc_msgSend__eachGuidanceOutput_ignorePaused_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eachGuidanceOutput:ignorePaused:");
}

id objc_msgSend__ebikeSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _ebikeSectionTitle];
}

id objc_msgSend__edgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _edgeInsets];
}

id objc_msgSend__edgeInsetsLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 _edgeInsetsLayoutGuide];
}

id objc_msgSend__editBundleId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editBundleId:completion:");
}

id objc_msgSend__editCollection_(void *a1, const char *a2, ...)
{
  return [a1 _editCollection:];
}

id objc_msgSend__editCollectionSnapshot_(void *a1, const char *a2, ...)
{
  return [a1 _editCollectionSnapshot:];
}

id objc_msgSend__editCorrectionsQuestion_(void *a1, const char *a2, ...)
{
  return [a1 _editCorrectionsQuestion];
}

id objc_msgSend__editEntrySnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editEntrySnapshot:");
}

id objc_msgSend__editShortcutTypeForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editShortcutTypeForIndex:");
}

id objc_msgSend__editStatusOfRAPRecordWithReportID_status_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editStatusOfRAPRecordWithReportID:status:completion:");
}

id objc_msgSend__effectForInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectForInterfaceStyle:");
}

id objc_msgSend__effectiveContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 _effectiveContentSizeCategory];
}

id objc_msgSend__effectiveContentSizeCategoryDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveContentSizeCategoryDidChange:");
}

id objc_msgSend__effectiveJunctionForSign_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveJunctionForSign:");
}

id objc_msgSend__effectiveTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 _effectiveTraitCollection];
}

id objc_msgSend__effectiveTraitCollectionWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectiveTraitCollectionWithTraitCollection:");
}

id objc_msgSend__elevatedGroundIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _elevatedGroundIsAvailable];
}

id objc_msgSend__elevatedGroundIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _elevatedGroundIsEnabled];
}

id objc_msgSend__elevationCellForIndexPath_inCollectionView_(void *a1, const char *a2, ...)
{
  return [_elevationCellForIndexPath:inCollectionView:];
}

id objc_msgSend__emptySection(void *a1, const char *a2, ...)
{
  return _[a1 _emptySection];
}

id objc_msgSend__enableManualPrintPage_(void *a1, const char *a2, ...)
{
  return [a1 _enableManualPrintPage:];
}

id objc_msgSend__enableShadow_imageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableShadow:imageView:");
}

id objc_msgSend__enableStructuredRAPAffordance(void *a1, const char *a2, ...)
{
  return _[a1 _enableStructuredRAPAffordance];
}

id objc_msgSend__enableTextFieldNotification_(void *a1, const char *a2, ...)
{
  return [a1 _enableTextFieldNotification:];
}

id objc_msgSend__enableZoomGesture_(void *a1, const char *a2, ...)
{
  return [a1 _enableZoomGesture:];
}

id objc_msgSend__endDeletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endDeletion:");
}

id objc_msgSend__endEditSession(void *a1, const char *a2, ...)
{
  return _[a1 _endEditSession];
}

id objc_msgSend__endImpulseDown(void *a1, const char *a2, ...)
{
  return _[a1 _endImpulseDown];
}

id objc_msgSend__endImpulseLeft(void *a1, const char *a2, ...)
{
  return _[a1 _endImpulseLeft];
}

id objc_msgSend__endImpulseRight(void *a1, const char *a2, ...)
{
  return _[a1 _endImpulseRight];
}

id objc_msgSend__endImpulseUp(void *a1, const char *a2, ...)
{
  return _[a1 _endImpulseUp];
}

id objc_msgSend__endPicking(void *a1, const char *a2, ...)
{
  return _[a1 _endPicking];
}

id objc_msgSend__endTransaction(void *a1, const char *a2, ...)
{
  return _[a1 _endTransaction];
}

id objc_msgSend__endUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _endUpdates];
}

id objc_msgSend__enhancedPlacement(void *a1, const char *a2, ...)
{
  return _[a1 _enhancedPlacement];
}

id objc_msgSend__enqueue_forTarget_(void *a1, const char *a2, ...)
{
  return [a1 _enqueue:forTarget:];
}

id objc_msgSend__enqueueNewState_(void *a1, const char *a2, ...)
{
  return [a1 _enqueueNewState:];
}

id objc_msgSend__enrichmentInfo(void *a1, const char *a2, ...)
{
  return _[a1 _enrichmentInfo];
}

id objc_msgSend__enter3DMode(void *a1, const char *a2, ...)
{
  return _[a1 _enter3DMode];
}

id objc_msgSend__enterARModeWithLocation_(void *a1, const char *a2, ...)
{
  return [a1 _enterARModeWithLocation:];
}

id objc_msgSend__enterCompletionWaitDispatchGroupWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterCompletionWaitDispatchGroupWithReason:");
}

id objc_msgSend__enterFlyover(void *a1, const char *a2, ...)
{
  return _[a1 _enterFlyover];
}

id objc_msgSend__enterItemForStep_passStop_previouslySkippedPassStops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterItemForStep:passStop:previouslySkippedPassStops:");
}

id objc_msgSend__enterRouteCreation(void *a1, const char *a2, ...)
{
  return _[a1 _enterRouteCreation];
}

id objc_msgSend__enterRoutePlanningForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterRoutePlanningForRequest:");
}

id objc_msgSend__enterRoutePlanningOverviewAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterRoutePlanningOverviewAnimated:completion:");
}

id objc_msgSend__enterRoutePlanningOverviewAnimated_saveMapCamera_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enterRoutePlanningOverviewAnimated:saveMapCamera:completion:");
}

id objc_msgSend__entries(void *a1, const char *a2, ...)
{
  return _[a1 _entries];
}

id objc_msgSend__entriesLegacy(void *a1, const char *a2, ...)
{
  return _[a1 _entriesLegacy];
}

id objc_msgSend__entryPointWithCoordinates_entryPointType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_entryPointWithCoordinates:entryPointType:");
}

id objc_msgSend__enumProperties(void *a1, const char *a2, ...)
{
  return _[a1 _enumProperties];
}

id objc_msgSend__enumerateContactsWithAddress_ofType_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateContactsWithAddress:ofType:handler:");
}

id objc_msgSend__enumerateItemsForPreferredMaxLayoutWidth_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateItemsForPreferredMaxLayoutWidth:block:");
}

id objc_msgSend__enumerateLinesForPreferredMaxLayoutWidth_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateLinesForPreferredMaxLayoutWidth:block:");
}

id objc_msgSend__enumeratePixelsWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 _enumeratePixelsWithBlock:];
}

id objc_msgSend__environmentForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_environmentForIndexPath:");
}

id objc_msgSend__environmentInfoCell(void *a1, const char *a2, ...)
{
  return _[a1 _environmentInfoCell];
}

id objc_msgSend__environmnentNotification(void *a1, const char *a2, ...)
{
  return _[a1 _environmnentNotification];
}

id objc_msgSend__errorMessageForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorMessageForError:");
}

id objc_msgSend__errorMessageForError_directionsError_request_isOffline_shouldBackoutEdit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorMessageForError:directionsError:request:isOffline:shouldBackoutEdit:");
}

id objc_msgSend__errorMessageForUnsupportedCountry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorMessageForUnsupportedCountry:");
}

id objc_msgSend__errorMessageForValue_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorMessageForValue:error:");
}

id objc_msgSend__errorString(void *a1, const char *a2, ...)
{
  return _[a1 _errorString];
}

id objc_msgSend__errorWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorWithCode:userInfo:");
}

id objc_msgSend__errorsInResponse_(void *a1, const char *a2, ...)
{
  return [a1 _errorsInResponse:];
}

id objc_msgSend__estimatedElevationAxisWidth(void *a1, const char *a2, ...)
{
  return _[a1 _estimatedElevationAxisWidth];
}

id objc_msgSend__etaString(void *a1, const char *a2, ...)
{
  return _[a1 _etaString];
}

id objc_msgSend__evChargerConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_evChargerConstraints:");
}

id objc_msgSend__evaluatedStringForInstructionString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_evaluatedStringForInstructionString:");
}

id objc_msgSend__eventDirectionForButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_eventDirectionForButtonType:");
}

id objc_msgSend__eventValueForMediaType_(void *a1, const char *a2, ...)
{
  return [a1 _eventValueForMediaType:];
}

id objc_msgSend__exclamationMarkImage(void *a1, const char *a2, ...)
{
  return _[a1 _exclamationMarkImage];
}

id objc_msgSend__excludedContentForPlaceCardItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_excludedContentForPlaceCardItem:");
}

id objc_msgSend__existingCell(void *a1, const char *a2, ...)
{
  return _[a1 _existingCell];
}

id objc_msgSend__exit3DMode(void *a1, const char *a2, ...)
{
  return _[a1 _exit3DMode];
}

id objc_msgSend__exitARMode(void *a1, const char *a2, ...)
{
  return _[a1 _exitARMode];
}

id objc_msgSend__exitItemForAlightStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exitItemForAlightStep:");
}

id objc_msgSend__exitRoutePlanningIfNeededAnimated_restoreStashedMapSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exitRoutePlanningIfNeededAnimated:restoreStashedMapSelection:");
}

id objc_msgSend__expandButtonTitleFromServer(void *a1, const char *a2, ...)
{
  return _[a1 _expandButtonTitleFromServer];
}

id objc_msgSend__expandCardIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _expandCardIfNeeded];
}

id objc_msgSend__expandItem_(void *a1, const char *a2, ...)
{
  return [a1 _expandItem:];
}

id objc_msgSend__expandItemsAtIndices_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expandItemsAtIndices:");
}

id objc_msgSend__expandedButtonTransform(void *a1, const char *a2, ...)
{
  return _[a1 _expandedButtonTransform];
}

id objc_msgSend__expandedItemsIndices(void *a1, const char *a2, ...)
{
  return _[a1 _expandedItemsIndices];
}

id objc_msgSend__expansionCellIndex(void *a1, const char *a2, ...)
{
  return _[a1 _expansionCellIndex];
}

id objc_msgSend__expirationTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _expirationTimerFired];
}

id objc_msgSend__expireRequestRideStatus(void *a1, const char *a2, ...)
{
  return _[a1 _expireRequestRideStatus];
}

id objc_msgSend__expiredMapsModel(void *a1, const char *a2, ...)
{
  return _[a1 _expiredMapsModel];
}

id objc_msgSend__externalSystemSuperDarkGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 _externalSystemSuperDarkGrayColor];
}

id objc_msgSend__extraBottomPadding(void *a1, const char *a2, ...)
{
  return _[a1 _extraBottomPadding];
}

id objc_msgSend__extraHeight(void *a1, const char *a2, ...)
{
  return _[a1 _extraHeight];
}

id objc_msgSend__extraSpacingAboveView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extraSpacingAboveView:");
}

id objc_msgSend__extractLayoutFormFromResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractLayoutFormFromResponse:");
}

id objc_msgSend__failLookupWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failLookupWithError:");
}

id objc_msgSend__failWithError_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_failWithError:range:");
}

id objc_msgSend__fallbackBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _fallbackBackgroundColor];
}

id objc_msgSend__fareAndOperatingHoursItemForBlockTransferStep_lineColor_alternateLineColor_parentItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fareAndOperatingHoursItemForBlockTransferStep:lineColor:alternateLineColor:parentItem:");
}

id objc_msgSend__fareItemsFromRideOption_(void *a1, const char *a2, ...)
{
  return [a1 _fareItemsFromRideOption:];
}

id objc_msgSend__favoriteWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _favoriteWithIdentifier:];
}

id objc_msgSend__featureDiscoveryModelWithPrecedence(void *a1, const char *a2, ...)
{
  return _[a1 _featureDiscoveryModelWithPrecedence];
}

id objc_msgSend__featureForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _featureForIndexPath:];
}

id objc_msgSend__featureTipModelWithPrecedence(void *a1, const char *a2, ...)
{
  return _[a1 _featureTipModelWithPrecedence];
}

id objc_msgSend__feedbackActionTypeFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_feedbackActionTypeFor:");
}

id objc_msgSend__feedbackRequired(void *a1, const char *a2, ...)
{
  return _[a1 _feedbackRequired];
}

id objc_msgSend__feedbackUploaderForUploadPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_feedbackUploaderForUploadPolicy:");
}

id objc_msgSend__fetchAirportArrivalModelDataFromFlightEntry_usingCurrentLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAirportArrivalModelDataFromFlightEntry:usingCurrentLocation:completion:");
}

id objc_msgSend__fetchAllAvailablePassesFromWallet(void *a1, const char *a2, ...)
{
  return _[a1 _fetchAllAvailablePassesFromWallet];
}

id objc_msgSend__fetchAllHistoryObjectsFromStorageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllHistoryObjectsFromStorageWithCompletion:");
}

id objc_msgSend__fetchAllHistoryObjectsWithPhotosFromStorageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllHistoryObjectsWithPhotosFromStorageWithCompletion:");
}

id objc_msgSend__fetchAllRAPRecordsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllRAPRecordsWithCompletion:");
}

id objc_msgSend__fetchAllTrafficIncidentReportsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAllTrafficIncidentReportsWithCompletion:");
}

id objc_msgSend__fetchAndUpdateRAPStatusWithOffset_batchSize_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAndUpdateRAPStatusWithOffset:batchSize:completion:");
}

id objc_msgSend__fetchAppDataForAppIDs_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAppDataForAppIDs:withCompletion:");
}

id objc_msgSend__fetchAppIDsForSource_destination_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchAppIDsForSource:destination:withCompletion:");
}

id objc_msgSend__fetchCategoryResults(void *a1, const char *a2, ...)
{
  return _[a1 _fetchCategoryResults];
}

id objc_msgSend__fetchChildContainmentWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _fetchChildContainmentWithCompletion:];
}

id objc_msgSend__fetchCollectionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchCollectionsWithCompletion:");
}

id objc_msgSend__fetchContainmentItems_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchContainmentItems:withCompletion:");
}

id objc_msgSend__fetchCount(void *a1, const char *a2, ...)
{
  return _[a1 _fetchCount];
}

id objc_msgSend__fetchExpiredSubscriptionsAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchExpiredSubscriptionsAnimated:");
}

id objc_msgSend__fetchHomeAreaModelDataFromEntry_onQueue_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchHomeAreaModelDataFromEntry:onQueue:completionHandler:");
}

id objc_msgSend__fetchImageForLabelMarkerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImageForLabelMarkerWithCompletion:");
}

id objc_msgSend__fetchImageWithImageCount_retryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImageWithImageCount:retryCount:");
}

id objc_msgSend__fetchInsightsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchInsightsWithCompletion:");
}

id objc_msgSend__fetchLastUpdatedDateAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchLastUpdatedDateAnimated:");
}

id objc_msgSend__fetchLibrary_(void *a1, const char *a2, ...)
{
  return [a1 _fetchLibrary:];
}

id objc_msgSend__fetchListenerEndpoints(void *a1, const char *a2, ...)
{
  return _[a1 _fetchListenerEndpoints];
}

id objc_msgSend__fetchMSReviewedPlaceWithMuids_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMSReviewedPlaceWithMuids:error:");
}

id objc_msgSend__fetchMapItemsForRAPHistoryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _fetchMapItemsForRAPHistoryIfNeeded];
}

id objc_msgSend__fetchMapItemsForReviewedPlaces_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMapItemsForReviewedPlaces:completion:");
}

id objc_msgSend__fetchMapsSyncTransitLineItemWithCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMapsSyncTransitLineItemWithCallback:");
}

id objc_msgSend__fetchMissingImages(void *a1, const char *a2, ...)
{
  return _[a1 _fetchMissingImages];
}

id objc_msgSend__fetchNewScheduleDataForDate_tripIdentifier_withHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchNewScheduleDataForDate:tripIdentifier:withHandler:");
}

id objc_msgSend__fetchParentContainmentWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _fetchParentContainmentWithCompletion:];
}

id objc_msgSend__fetchPhotoAttributionPreferencesWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPhotoAttributionPreferencesWithCompletion:");
}

id objc_msgSend__fetchPlaceCacheReults(void *a1, const char *a2, ...)
{
  return _[a1 _fetchPlaceCacheReults];
}

id objc_msgSend__fetchRAPRecordsMatchingProblemId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchRAPRecordsMatchingProblemId:completion:");
}

id objc_msgSend__fetchRepeatedRecentTransportType(void *a1, const char *a2, ...)
{
  return _[a1 _fetchRepeatedRecentTransportType];
}

id objc_msgSend__fetchReviewedPlaceForMUID_withIdentifierHistory_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchReviewedPlaceForMUID:withIdentifierHistory:completion:");
}

id objc_msgSend__fetchReviewedPlaces(void *a1, const char *a2, ...)
{
  return _[a1 _fetchReviewedPlaces];
}

id objc_msgSend__fetchSavedRoutesWithStorageID_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSavedRoutesWithStorageID:handler:");
}

id objc_msgSend__fetchShouldDisplayAlertWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchShouldDisplayAlertWithHandler:");
}

id objc_msgSend__fetchSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSuggestions];
}

id objc_msgSend__fetchSuggestionsFromStorageFile(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSuggestionsFromStorageFile];
}

id objc_msgSend__fetchSuggestionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchSuggestionsWithCompletion:");
}

id objc_msgSend__fetchTransitInfoFromReportedLine_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchTransitInfoFromReportedLine:withCompletion:");
}

id objc_msgSend__fetchTransitInfoFromStation_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchTransitInfoFromStation:withCompletion:");
}

id objc_msgSend__fetchUnresolvedRAPRecordsWithLimit_offset_oldestDate_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchUnresolvedRAPRecordsWithLimit:offset:oldestDate:completion:");
}

id objc_msgSend__fetchUserAttribution(void *a1, const char *a2, ...)
{
  return _[a1 _fetchUserAttribution];
}

id objc_msgSend__fieldDidChangeValue_(void *a1, const char *a2, ...)
{
  return [a1 _fieldDidChangeValue:];
}

id objc_msgSend__fileHashForFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fileHashForFile:");
}

id objc_msgSend__fileHashesInFiles_areEqualToFilesInDirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fileHashesInFiles:areEqualToFilesInDirectory:error:");
}

id objc_msgSend__filePath(void *a1, const char *a2, ...)
{
  return _[a1 _filePath];
}

id objc_msgSend__fillInScorecard_hasBeenEdited_(void *a1, const char *a2, ...)
{
  return [a1 _fillInScorecard:hasBeenEdited:];
}

id objc_msgSend__fillNewTraitsWithMapViewRelatedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillNewTraitsWithMapViewRelatedData:");
}

id objc_msgSend__fillScorecardUpdateWithAddType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillScorecardUpdateWithAddType:");
}

id objc_msgSend__fillScorecardUpdateWithDeleteType_(void *a1, const char *a2, ...)
{
  return [a1 _fillScorecardUpdateWithDeleteType:];
}

id objc_msgSend__fillScorecardUpdateWithEditType_(void *a1, const char *a2, ...)
{
  return [a1 _fillScorecardUpdateWithEditType:];
}

id objc_msgSend__fillSubmissionFields_(void *a1, const char *a2, ...)
{
  return [a1 _fillSubmissionFields:];
}

id objc_msgSend__fillSubmissionFieldsForAddOrEdit_(void *a1, const char *a2, ...)
{
  return [a1 _fillSubmissionFieldsForAddOrEdit];
}

id objc_msgSend__fillSubmissionFieldsForDelete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fillSubmissionFieldsForDelete:");
}

id objc_msgSend__fillSubmissionParameters_(void *a1, const char *a2, ...)
{
  return [a1 _fillSubmissionParameters:];
}

id objc_msgSend__filterEntriesWithOverLappingRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filterEntriesWithOverLappingRects:");
}

id objc_msgSend__filteredClosedLoopIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _filteredClosedLoopIdentifiers];
}

id objc_msgSend__filteredFeaturesFromTransitSystems_allFeatures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_filteredFeaturesFromTransitSystems:allFeatures:");
}

id objc_msgSend__filteredHeadingReset(void *a1, const char *a2, ...)
{
  return _[a1 _filteredHeadingReset];
}

id objc_msgSend__filteredHeadingWithHeading_(void *a1, const char *a2, ...)
{
  return [a1 _filteredHeadingWithHeading:];
}

id objc_msgSend__finalizeDirectionsFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _finalizeDirectionsFeedback];
}

id objc_msgSend__finalizeDirectionsFeedbackWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeDirectionsFeedbackWithReason:");
}

id objc_msgSend__findAnnotationEquivalentToUnserializedJSON_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findAnnotationEquivalentToUnserializedJSON:");
}

id objc_msgSend__findLastEmptyWaypointCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findLastEmptyWaypointCell:");
}

id objc_msgSend__finish(void *a1, const char *a2, ...)
{
  return _[a1 _finish];
}

id objc_msgSend__finishConfiguringVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishConfiguringVehicle:");
}

id objc_msgSend__finishResolvingWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishResolvingWithBlock:");
}

id objc_msgSend__finishWithPreferences_serverError_errorAsString_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finishWithPreferences:serverError:errorAsString:callback:");
}

id objc_msgSend__finishedResolvingItems(void *a1, const char *a2, ...)
{
  return _[a1 _finishedResolvingItems];
}

id objc_msgSend__fireStateUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fireStateUpdate:");
}

id objc_msgSend__firstBaselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return _[a1 _firstBaselineOffsetFromTop];
}

id objc_msgSend__firstDisplayedStepIndex(void *a1, const char *a2, ...)
{
  return _[a1 _firstDisplayedStepIndex];
}

id objc_msgSend__firstLineString(void *a1, const char *a2, ...)
{
  return _[a1 _firstLineString];
}

id objc_msgSend__firstLocalizedCategoryName(void *a1, const char *a2, ...)
{
  return _[a1 _firstLocalizedCategoryName];
}

id objc_msgSend__firstRelatedPlaceListForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstRelatedPlaceListForType:");
}

id objc_msgSend__firstUpcomingTripOfflineSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstUpcomingTripOfflineSuggestion:");
}

id objc_msgSend__firstValidMoveIndexForFavorites_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_firstValidMoveIndexForFavorites:");
}

id objc_msgSend__firstVisibleDeparture(void *a1, const char *a2, ...)
{
  return _[a1 _firstVisibleDeparture];
}

id objc_msgSend__fitsMaxNumberOfLines_bounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fitsMaxNumberOfLines:bounds:");
}

id objc_msgSend__fittingHeightForMediumLayout(void *a1, const char *a2, ...)
{
  return _[a1 _fittingHeightForMediumLayout];
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return [a1 _flatImageWithColor:];
}

id objc_msgSend__flatIndexFromIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _flatIndexFromIndexPath:];
}

id objc_msgSend__flipState(void *a1, const char *a2, ...)
{
  return _[a1 _flipState];
}

id objc_msgSend__flushCompletedRideIdentifiersAndDatesMap(void *a1, const char *a2, ...)
{
  return _[a1 _flushCompletedRideIdentifiersAndDatesMap];
}

id objc_msgSend__flushModalitiesFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _flushModalitiesFeedback];
}

id objc_msgSend__flushStepFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _flushStepFeedback];
}

id objc_msgSend__flyover(void *a1, const char *a2, ...)
{
  return _[a1 _flyover];
}

id objc_msgSend__flyoverAnnouncementMessage(void *a1, const char *a2, ...)
{
  return _[a1 _flyoverAnnouncementMessage];
}

id objc_msgSend__flyoverAnnouncementMessageWithDefaultTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flyoverAnnouncementMessageWithDefaultTitle:");
}

id objc_msgSend__focusAfterScrollingCellWillDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _focusAfterScrollingCellWillDisplay];
}

id objc_msgSend__focusCellAtVisibleSelectedIdentifierPath_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_focusCellAtVisibleSelectedIdentifierPath:completion:");
}

id objc_msgSend__focusRingImage(void *a1, const char *a2, ...)
{
  return _[a1 _focusRingImage];
}

id objc_msgSend__focusShapeLayer(void *a1, const char *a2, ...)
{
  return _[a1 _focusShapeLayer];
}

id objc_msgSend__focusedIdentifierPath(void *a1, const char *a2, ...)
{
  return _[a1 _focusedIdentifierPath];
}

id objc_msgSend__followupQuestionsAreDirectionsRelated(void *a1, const char *a2, ...)
{
  return _[a1 _followupQuestionsAreDirectionsRelated];
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _[a1 _font];
}

id objc_msgSend__fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:];
}

id objc_msgSend__fontForInstructionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontForInstructionType:");
}

id objc_msgSend__fontProviderForMessageLabel(void *a1, const char *a2, ...)
{
  return _[a1 _fontProviderForMessageLabel];
}

id objc_msgSend__fontScaledByScaleFactor_(void *a1, const char *a2, ...)
{
  return [a1 _fontScaledByScaleFactor:];
}

id objc_msgSend__fontWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontWithTraitCollection:");
}

id objc_msgSend__footerButtonWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerButtonWithTitle:");
}

id objc_msgSend__footerCellForIndexPath_inCollectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerCellForIndexPath:inCollectionView:");
}

id objc_msgSend__footerCellForIndexPath_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footerCellForIndexPath:inTableView:");
}

id objc_msgSend__footerCommands(void *a1, const char *a2, ...)
{
  return _[a1 _footerCommands];
}

id objc_msgSend__footerHeight(void *a1, const char *a2, ...)
{
  return _[a1 _footerHeight];
}

id objc_msgSend__footerLinkHandler(void *a1, const char *a2, ...)
{
  return _[a1 _footerLinkHandler];
}

id objc_msgSend__footerLinkText(void *a1, const char *a2, ...)
{
  return _[a1 _footerLinkText];
}

id objc_msgSend__footerString90Days(void *a1, const char *a2, ...)
{
  return _[a1 _footerString90Days];
}

id objc_msgSend__footerStringActionsSection(void *a1, const char *a2, ...)
{
  return _[a1 _footerStringActionsSection];
}

id objc_msgSend__footerStringForShortcutType_(void *a1, const char *a2, ...)
{
  return [a1 _footerStringForShortcutType:];
}

id objc_msgSend__footerStringReviewedSection(void *a1, const char *a2, ...)
{
  return _[a1 _footerStringReviewedSection];
}

id objc_msgSend__footerText(void *a1, const char *a2, ...)
{
  return _[a1 _footerText];
}

id objc_msgSend__forEachKeyAndValueWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forEachKeyAndValueWithBlock:");
}

id objc_msgSend__forWalkingNavigation(void *a1, const char *a2, ...)
{
  return _[a1 _forWalkingNavigation];
}

id objc_msgSend__forceChangeOrigin(void *a1, const char *a2, ...)
{
  return _[a1 _forceChangeOrigin];
}

id objc_msgSend__forceFrame(void *a1, const char *a2, ...)
{
  return _[a1 _forceFrame];
}

id objc_msgSend__forceOfflineModel(void *a1, const char *a2, ...)
{
  return _[a1 _forceOfflineModel];
}

id objc_msgSend__forceUpdateStackViewAlignment(void *a1, const char *a2, ...)
{
  return _[a1 _forceUpdateStackViewAlignment];
}

id objc_msgSend__forcedViewMode(void *a1, const char *a2, ...)
{
  return _[a1 _forcedViewMode];
}

id objc_msgSend__foregroundColorForButtonType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_foregroundColorForButtonType:");
}

id objc_msgSend__formattedAddress(void *a1, const char *a2, ...)
{
  return _[a1 _formattedAddress];
}

id objc_msgSend__formattedTimeStringSinceDirectionsWereTaken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formattedTimeStringSinceDirectionsWereTaken:");
}

id objc_msgSend__formatter(void *a1, const char *a2, ...)
{
  return _[a1 _formatter];
}

id objc_msgSend__formatterForStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_formatterForStyle:");
}

id objc_msgSend__forwardGeocodeAddress_addressString_addressBookAddress_label_defaultSearchResultType_traits_source_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forwardGeocodeAddress:addressString:addressBookAddress:label:defaultSearchResultType:traits:source:");
}

id objc_msgSend__frameForRoute_offset_(void *a1, const char *a2, ...)
{
  return [a1 _frameForRoute:offset:];
}

id objc_msgSend__frameForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForType:");
}

id objc_msgSend__frameNotVisibleLabelMarker_edgeInsets_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameNotVisibleLabelMarker:edgeInsets:completion:");
}

id objc_msgSend__frameRouteAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameRouteAnimated:");
}

id objc_msgSend__frameSearchResult_minZoom_maxZoom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameSearchResult:minZoom:maxZoom:completion:");
}

id objc_msgSend__frameVenueLabelMarker_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameVenueLabelMarker:completion:");
}

id objc_msgSend__frameVisibleLabelMarker_edgeInsets_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameVisibleLabelMarker:edgeInsets:completion:");
}

id objc_msgSend__fullAddressWithMultiline_(void *a1, const char *a2, ...)
{
  return [a1 _fullAddressWithMultiline:];
}

id objc_msgSend__fullHeight(void *a1, const char *a2, ...)
{
  return _[a1 _fullHeight];
}

id objc_msgSend__fullHeightFixed(void *a1, const char *a2, ...)
{
  return _[a1 _fullHeightFixed];
}

id objc_msgSend__gatherItemsWithShouldCancel_completion_(void *a1, const char *a2, ...)
{
  return [_gatherItemsWithShouldCancel:completion:];
}

id objc_msgSend__generateAssertionKeyId_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateAssertionKeyId:completionHandler:");
}

id objc_msgSend__generateAvailableActionsForAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 _generateAvailableActionsForAnalytics];
}

id objc_msgSend__generateCompanionRouteFromComposedRoute_(void *a1, const char *a2, ...)
{
  return [a1 _generateCompanionRouteFromComposedRoute:];
}

id objc_msgSend__generateCompanionRoutesFromComposedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _generateCompanionRoutesFromComposedRoutes];
}

id objc_msgSend__generateEntryPointForAnalytics_(void *a1, const char *a2, ...)
{
  return [a1 _generateEntryPointForAnalytics];
}

id objc_msgSend__generateKey_(void *a1, const char *a2, ...)
{
  return [a1 _generateKey:];
}

id objc_msgSend__generatePlainTextDescriptions(void *a1, const char *a2, ...)
{
  return _[a1 _generatePlainTextDescriptions];
}

id objc_msgSend__generateRequestParams(void *a1, const char *a2, ...)
{
  return _[a1 _generateRequestParams];
}

id objc_msgSend__generateRequestParamsForFormType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateRequestParamsForFormType:");
}

id objc_msgSend__generateRichTextDescriptionsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateRichTextDescriptionsWithCompletion:");
}

id objc_msgSend__generateUIImageFromView_withWatermark_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateUIImageFromView:withWatermark:size:");
}

id objc_msgSend__generateWalkingSubSteps(void *a1, const char *a2, ...)
{
  return _[a1 _generateWalkingSubSteps];
}

id objc_msgSend__geoAddress(void *a1, const char *a2, ...)
{
  return _[a1 _geoAddress];
}

id objc_msgSend__geoBusinessHours(void *a1, const char *a2, ...)
{
  return _[a1 _geoBusinessHours];
}

id objc_msgSend__geoCoordinateFromUserCorrections(void *a1, const char *a2, ...)
{
  return _[a1 _geoCoordinateFromUserCorrections];
}

id objc_msgSend__geoFormTypeForOptions(void *a1, const char *a2, ...)
{
  return _[a1 _geoFormTypeForOptions];
}

id objc_msgSend__geoMapItem(void *a1, const char *a2, ...)
{
  return _[a1 _geoMapItem];
}

id objc_msgSend__geoMapItemOpeningHoursOptionsForBusinessHours_compareDate_timeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geoMapItemOpeningHoursOptionsForBusinessHours:compareDate:timeZone:");
}

id objc_msgSend__geoMapItemStorageForPersistence(void *a1, const char *a2, ...)
{
  return _[a1 _geoMapItemStorageForPersistence];
}

id objc_msgSend__geo_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geo_compactMap:");
}

id objc_msgSend__geo_directionsErrorInfo(void *a1, const char *a2, ...)
{
  return [a1 _geo_directionsErrorInfo];
}

id objc_msgSend__geo_distanceMeasurementForMeters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geo_distanceMeasurementForMeters:");
}

id objc_msgSend__geo_etaTrafficUpdateErrorInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geo_etaTrafficUpdateErrorInfo");
}

id objc_msgSend__geo_filtered_(void *a1, const char *a2, ...)
{
  return [a1 _geo_filtered];
}

id objc_msgSend__geo_firstPhotoOfAtLeastSize_(void *a1, const char *a2, ...)
{
  return [a1 _geo_firstPhotoOfAtLeastSize:];
}

id objc_msgSend__geo_formattedString(void *a1, const char *a2, ...)
{
  return [a1 _geo_formattedString];
}

id objc_msgSend__geo_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_geo_map:");
}

id objc_msgSend__geo_serverFormattedString(void *a1, const char *a2, ...)
{
  return [a1 _geo_serverFormattedString];
}

id objc_msgSend__geocodedMapItemsByAddress(void *a1, const char *a2, ...)
{
  return _[a1 _geocodedMapItemsByAddress];
}

id objc_msgSend__getAlertObjectOfType_(void *a1, const char *a2, ...)
{
  return [a1 _getAlertObjectOfType:];
}

id objc_msgSend__getBackgroundView_selectedBackgroundView_forCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getBackgroundView:selectedBackgroundView:forCell:");
}

id objc_msgSend__getContextsLeaving_entering_fromPrevious_incoming_(void *a1, const char *a2, ...)
{
  return [_a1 _getContextsLeaving:entering:fromPrevious:incoming:];
}

id objc_msgSend__getCurrentSignIndexesAdjustedForRTL_from_to_closest_progressBetweenSigns_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCurrentSignIndexesAdjustedForRTL:from:to:closest:progressBetweenSigns:");
}

id objc_msgSend__getEntryMuninMarkerAtCoordinate_shouldWait_andContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getEntryMuninMarkerAtCoordinate:shouldWait:andContinue:");
}

id objc_msgSend__getEntryMuninMarkerWithMapViewOrMapItem_shouldWait_andContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getEntryMuninMarkerWithMapViewOrMapItem:shouldWait:andContinue:");
}

id objc_msgSend__getEvent(void *a1, const char *a2, ...)
{
  return _[a1 _getEvent];
}

id objc_msgSend__getMapPoints_count_startIndex_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMapPoints:count:startIndex:limit:");
}

id objc_msgSend__getMuninMarkerAtCoordinate_shouldWait_andContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMuninMarkerAtCoordinate:shouldWait:andContinue:");
}

id objc_msgSend__getMuninMarkerWithMapViewOrMapItem_shouldWait_andContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getMuninMarkerWithMapViewOrMapItem:shouldWait:andContinue:");
}

id objc_msgSend__getRatioControls_scale_forContentHeightValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getRatioControls:scale:forContentHeightValue:");
}

id objc_msgSend__getRecentsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getRecentsWithCompletion:");
}

id objc_msgSend__getScrollY_forTableHeight_(void *a1, const char *a2, ...)
{
  return [a1 _getScrollY:forTableHeight:];
}

id objc_msgSend__getSearchButtonTitle(void *a1, const char *a2, ...)
{
  return _[a1 _getSearchButtonTitle];
}

id objc_msgSend__getTicketsMenuProvider(void *a1, const char *a2, ...)
{
  return _[a1 _getTicketsMenuProvider];
}

id objc_msgSend__getTimeoutTimerProgress_timeRemaining_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTimeoutTimerProgress:timeRemaining:");
}

id objc_msgSend__globeIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _globeIsEnabled];
}

id objc_msgSend__glyphColor(void *a1, const char *a2, ...)
{
  return _[a1 _glyphColor];
}

id objc_msgSend__goButtonShouldBeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _goButtonShouldBeEnabled];
}

id objc_msgSend__goButtonShouldBeHidden(void *a1, const char *a2, ...)
{
  return _[a1 _goButtonShouldBeHidden];
}

id objc_msgSend__gotoNextStepAfterDelay_(void *a1, const char *a2, ...)
{
  return [a1 _gotoNextStepAfterDelay:];
}

id objc_msgSend__graphTopPosition(void *a1, const char *a2, ...)
{
  return _[a1 _graphTopPosition];
}

id objc_msgSend__greyScaleImageIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_greyScaleImageIfNeeded:");
}

id objc_msgSend__groundAltitudeAtLocation_(void *a1, const char *a2, ...)
{
  return [a1 _groundAltitudeAtLocation:];
}

id objc_msgSend__guidanceAffectsDimming(void *a1, const char *a2, ...)
{
  return _[a1 _guidanceAffectsDimming];
}

id objc_msgSend__guidanceETAFromEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_guidanceETAFromEntry:");
}

id objc_msgSend__guidanceInfos(void *a1, const char *a2, ...)
{
  return _[a1 _guidanceInfos];
}

id objc_msgSend__guidanceLevel_supportingTransportType_(void *a1, const char *a2, ...)
{
  return [a1 _guidanceLevel:supportingTransportType:];
}

id objc_msgSend__guidanceUpdate_isDifferentFromGuidanceUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_guidanceUpdate:isDifferentFromGuidanceUpdate:");
}

id objc_msgSend__handleAddFromCameraWithImageData_mediaInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddFromCameraWithImageData:mediaInfo:");
}

id objc_msgSend__handleAddFromLibraryWithEditingInfoList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddFromLibraryWithEditingInfoList:");
}

id objc_msgSend__handleAddFromSuggestionImage_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAddFromSuggestionImage:atIndexPath:");
}

id objc_msgSend__handleArrivalAtEndOfLegIndex_forced_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleArrivalAtEndOfLegIndex:forced:service:");
}

id objc_msgSend__handleArrivalAtEndOfLegIndex_service_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleArrivalAtEndOfLegIndex:service:");
}

id objc_msgSend__handleArrivalAtWaypoint_endOfLegIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleArrivalAtWaypoint:endOfLegIndex:");
}

id objc_msgSend__handleAvailabilityChange(void *a1, const char *a2, ...)
{
  return _[a1 _handleAvailabilityChange];
}

id objc_msgSend__handleClientResolvedResultForSearchSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleClientResolvedResultForSearchSession:");
}

id objc_msgSend__handleCompletionWithWaypoints_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCompletionWithWaypoints:error:");
}

id objc_msgSend__handleConnectionInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 _handleConnectionInvalidated];
}

id objc_msgSend__handleContactSearchResults_query_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleContactSearchResults:query:");
}

id objc_msgSend__handleCorrectionsResponse_withData_withTaskDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCorrectionsResponse:withData:withTaskDescription:");
}

id objc_msgSend__handleCorrectionsResubmissionWithSubmissionIdentifier_newRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCorrectionsResubmissionWithSubmissionIdentifier:newRetryCount:");
}

id objc_msgSend__handleCorrectionsUploadTask_withSessionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCorrectionsUploadTask:withSessionError:");
}

id objc_msgSend__handleDismissActionWithHeaderView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleDismissActionWithHeaderView:");
}

id objc_msgSend__handleEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleEvent:");
}

id objc_msgSend__handleGenericIDSMessage_(void *a1, const char *a2, ...)
{
  return [a1 _handleGenericIDSMessage:];
}

id objc_msgSend__handleGeocoderError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleGeocoderError:");
}

id objc_msgSend__handleIOHIDEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIOHIDEvent:");
}

id objc_msgSend__handleImageResubmissionWithUploadURL_submissionIdentifier_imageIdentifier_httpType_newRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleImageResubmissionWithUploadURL:submissionIdentifier:imageIdentifier:httpType:newRetryCount:");
}

id objc_msgSend__handleImageUploadResponse_withData_withTaskDescription_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleImageUploadResponse:withData:withTaskDescription:");
}

id objc_msgSend__handleImageUploadTask_withSessionError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleImageUploadTask:withSessionError:");
}

id objc_msgSend__handleIncomingSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleIncomingSession:");
}

id objc_msgSend__handleInitialRouteLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleInitialRouteLoaded:");
}

id objc_msgSend__handleLeechedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLeechedLocation:");
}

id objc_msgSend__handleLocation_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLocation:error:");
}

id objc_msgSend__handleLookupSubmissionCompletion_lookupError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLookupSubmissionCompletion:lookupError:");
}

id objc_msgSend__handleMapView_didDidChangeLookAroundAvailability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapView:didDidChangeLookAroundAvailability:");
}

id objc_msgSend__handleMapViewDidResumeIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewDidResumeIfNeeded:");
}

id objc_msgSend__handleMapViewOneFingerPanWithZoomDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewOneFingerPanWithZoomDirection:");
}

id objc_msgSend__handleMapViewPanStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewPanStart:");
}

id objc_msgSend__handleMapViewPanStop_shouldMoveLookAroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewPanStop:shouldMoveLookAroundView:");
}

id objc_msgSend__handleMapViewPanningIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewPanningIfNeeded:");
}

id objc_msgSend__handleMapViewPinchWithZoomDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewPinchWithZoomDirection:");
}

id objc_msgSend__handleMapViewRotateStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewRotateStart:");
}

id objc_msgSend__handleMapViewRotateStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewRotateStop:");
}

id objc_msgSend__handleMapViewRotatingIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewRotatingIfNeeded:");
}

id objc_msgSend__handleMapViewTap_atPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewTap:atPoint:");
}

id objc_msgSend__handleMapViewZoomStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewZoomStart:");
}

id objc_msgSend__handleMapViewZoomStop_zoomGestureType_zoomDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMapViewZoomStop:zoomGestureType:zoomDirection:");
}

id objc_msgSend__handleMenuAction_entryPoint_sceneDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMenuAction:entryPoint:sceneDelegate:");
}

id objc_msgSend__handleNavigationErrors(void *a1, const char *a2, ...)
{
  return _[a1 _handleNavigationErrors];
}

id objc_msgSend__handleNewOrModifiedCustomSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewOrModifiedCustomSearchResult:");
}

id objc_msgSend__handleNewRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewRoute:");
}

id objc_msgSend__handleNewRoute_fromStepIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNewRoute:fromStepIndex:");
}

id objc_msgSend__handleNilNavdTicketOnIsolationQueueWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNilNavdTicketOnIsolationQueueWithCompletionHandler:");
}

id objc_msgSend__handleNotifyCallback(void *a1, const char *a2, ...)
{
  return _[a1 _handleNotifyCallback];
}

id objc_msgSend__handleReceivedWaypointSetResult(void *a1, const char *a2, ...)
{
  return _[a1 _handleReceivedWaypointSetResult];
}

id objc_msgSend__handleResolvedAddress_geocodedMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResolvedAddress:geocodedMapItem:");
}

id objc_msgSend__handleResponseForTicket_mapItems_error_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResponseForTicket:mapItems:error:completion:");
}

id objc_msgSend__handleResponseWithHandler_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResponseWithHandler:result:");
}

id objc_msgSend__handleResult_error_cacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResult:error:cacheKey:");
}

id objc_msgSend__handleResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResults:");
}

id objc_msgSend__handleResults_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResults:error:");
}

id objc_msgSend__handleScrollDown(void *a1, const char *a2, ...)
{
  return _[a1 _handleScrollDown];
}

id objc_msgSend__handleScrollUp(void *a1, const char *a2, ...)
{
  return _[a1 _handleScrollUp];
}

id objc_msgSend__handleSearchAlongRouteSearchSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchAlongRouteSearchSession:");
}

id objc_msgSend__handleSearchResultError_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSearchResultError:error:");
}

id objc_msgSend__handleSelectedMenuItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSelectedMenuItem:");
}

id objc_msgSend__handleSelectionAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleSelectionAtPoint:");
}

id objc_msgSend__handleShiftedCoordinate_fromClientLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleShiftedCoordinate:fromClientLocation:");
}

id objc_msgSend__handleString_nearCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleString:nearCoordinate:");
}

id objc_msgSend__handleSuperDoAfterSubTestForShowingSign(void *a1, const char *a2, ...)
{
  return _[a1 _handleSuperDoAfterSubTestForShowingSign];
}

id objc_msgSend__handleTimer(void *a1, const char *a2, ...)
{
  return _[a1 _handleTimer];
}

id objc_msgSend__handleTransportType_(void *a1, const char *a2, ...)
{
  return [a1 _handleTransportType:];
}

id objc_msgSend__handleUpdateSearchFieldWithSearchFieldItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleUpdateSearchFieldWithSearchFieldItem:");
}

id objc_msgSend__hasActionButtons(void *a1, const char *a2, ...)
{
  return _[a1 _hasActionButtons];
}

id objc_msgSend__hasAppleRatings(void *a1, const char *a2, ...)
{
  return _[a1 _hasAppleRatings];
}

id objc_msgSend__hasAreaHighlightId(void *a1, const char *a2, ...)
{
  return _[a1 _hasAreaHighlightId];
}

id objc_msgSend__hasBuildingID(void *a1, const char *a2, ...)
{
  return _[a1 _hasBuildingID];
}

id objc_msgSend__hasBusinessHours(void *a1, const char *a2, ...)
{
  return _[a1 _hasBusinessHours];
}

id objc_msgSend__hasCaptionedPhotoAlbum(void *a1, const char *a2, ...)
{
  return _[a1 _hasCaptionedPhotoAlbum];
}

id objc_msgSend__hasChargerNumberString(void *a1, const char *a2, ...)
{
  return _[a1 _hasChargerNumberString];
}

id objc_msgSend__hasCorrectedHomeWorkCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 _hasCorrectedHomeWorkCoordinate];
}

id objc_msgSend__hasDisambiguationRadiusMeters(void *a1, const char *a2, ...)
{
  return _[a1 _hasDisambiguationRadiusMeters];
}

id objc_msgSend__hasDisplayMaxZoom(void *a1, const char *a2, ...)
{
  return _[a1 _hasDisplayMaxZoom];
}

id objc_msgSend__hasEVCharger(void *a1, const char *a2, ...)
{
  return _[a1 _hasEVCharger];
}

id objc_msgSend__hasExpandedStepsForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasExpandedStepsForRoute:");
}

id objc_msgSend__hasFlyover(void *a1, const char *a2, ...)
{
  return _[a1 _hasFlyover];
}

id objc_msgSend__hasHeadsignSection(void *a1, const char *a2, ...)
{
  return _[a1 _hasHeadsignSection];
}

id objc_msgSend__hasHikeInfo(void *a1, const char *a2, ...)
{
  return _[a1 _hasHikeInfo];
}

id objc_msgSend__hasIconForIncidentType_(void *a1, const char *a2, ...)
{
  return [a1 _hasIconForIncidentType:];
}

id objc_msgSend__hasIncidentDetailsContent(void *a1, const char *a2, ...)
{
  return _[a1 _hasIncidentDetailsContent];
}

id objc_msgSend__hasItemsForActivityItemsConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _hasItemsForActivityItemsConfiguration];
}

id objc_msgSend__hasLookAroundStorefront(void *a1, const char *a2, ...)
{
  return _[a1 _hasLookAroundStorefront];
}

id objc_msgSend__hasMUID(void *a1, const char *a2, ...)
{
  return _[a1 _hasMUID];
}

id objc_msgSend__hasMapsCoarseLocationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _hasMapsCoarseLocationEnabled];
}

id objc_msgSend__hasModalViewControllerInTransition(void *a1, const char *a2, ...)
{
  return _[a1 _hasModalViewControllerInTransition];
}

id objc_msgSend__hasMuninViewState(void *a1, const char *a2, ...)
{
  return _[a1 _hasMuninViewState];
}

id objc_msgSend__hasNearbyPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _hasNearbyPhotos];
}

id objc_msgSend__hasPaymentAndSuggestionsData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasPaymentAndSuggestionsData:error:");
}

id objc_msgSend__hasPrepared(void *a1, const char *a2, ...)
{
  return _[a1 _hasPrepared];
}

id objc_msgSend__hasPriceDescription(void *a1, const char *a2, ...)
{
  return _[a1 _hasPriceDescription];
}

id objc_msgSend__hasPriceRange(void *a1, const char *a2, ...)
{
  return _[a1 _hasPriceRange];
}

id objc_msgSend__hasRealTimeChargerInfo_(void *a1, const char *a2, ...)
{
  return [a1 _hasRealTimeChargerInfo:];
}

id objc_msgSend__hasReceivedAllExpectedRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _hasReceivedAllExpectedRoutes];
}

id objc_msgSend__hasResolvablePartialInformation(void *a1, const char *a2, ...)
{
  return _[a1 _hasResolvablePartialInformation];
}

id objc_msgSend__hasResultProviderID(void *a1, const char *a2, ...)
{
  return _[a1 _hasResultProviderID];
}

id objc_msgSend__hasSearchRelatedFollowupQuestion(void *a1, const char *a2, ...)
{
  return _[a1 _hasSearchRelatedFollowupQuestion];
}

id objc_msgSend__hasSelectedTransitLines(void *a1, const char *a2, ...)
{
  return _[a1 _hasSelectedTransitLines];
}

id objc_msgSend__hasSubmission(void *a1, const char *a2, ...)
{
  return _[a1 _hasSubmission];
}

id objc_msgSend__hasTelephone(void *a1, const char *a2, ...)
{
  return _[a1 _hasTelephone];
}

id objc_msgSend__hasTrailingContent(void *a1, const char *a2, ...)
{
  return _[a1 _hasTrailingContent];
}

id objc_msgSend__hasTransit(void *a1, const char *a2, ...)
{
  return _[a1 _hasTransit];
}

id objc_msgSend__hasTransitDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 _hasTransitDisplayName];
}

id objc_msgSend__hasTransitLabels(void *a1, const char *a2, ...)
{
  return _[a1 _hasTransitLabels];
}

id objc_msgSend__hasUnsavedChanges(void *a1, const char *a2, ...)
{
  return _[a1 _hasUnsavedChanges];
}

id objc_msgSend__hasUserRatingScore(void *a1, const char *a2, ...)
{
  return _[a1 _hasUserRatingScore];
}

id objc_msgSend__hasValidRerouteTimer(void *a1, const char *a2, ...)
{
  return _[a1 _hasValidRerouteTimer];
}

id objc_msgSend__hasVehicleDepartedStation(void *a1, const char *a2, ...)
{
  return _[a1 _hasVehicleDepartedStation];
}

id objc_msgSend__hasVenueFeatureType(void *a1, const char *a2, ...)
{
  return _[a1 _hasVenueFeatureType];
}

id objc_msgSend__hasVenueID(void *a1, const char *a2, ...)
{
  return _[a1 _hasVenueID];
}

id objc_msgSend__hasVisited(void *a1, const char *a2, ...)
{
  return _[a1 _hasVisited];
}

id objc_msgSend__headerAndFooterViewsFloat(void *a1, const char *a2, ...)
{
  return _[a1 _headerAndFooterViewsFloat];
}

id objc_msgSend__headerLabelTextFromMapItem_searchCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerLabelTextFromMapItem:searchCategory:");
}

id objc_msgSend__headerNodeCount(void *a1, const char *a2, ...)
{
  return _[a1 _headerNodeCount];
}

id objc_msgSend__headerStringActionsSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringActionsSection];
}

id objc_msgSend__headerStringInReviewSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringInReviewSection];
}

id objc_msgSend__headerStringIncidentsReportedSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringIncidentsReportedSection];
}

id objc_msgSend__headerStringIssuesReportedSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringIssuesReportedSection];
}

id objc_msgSend__headerStringReviewedSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringReviewedSection];
}

id objc_msgSend__headerStringTellUsMoreSection(void *a1, const char *a2, ...)
{
  return _[a1 _headerStringTellUsMoreSection];
}

id objc_msgSend__headerSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _headerSubtitle];
}

id objc_msgSend__headerTapGesture(void *a1, const char *a2, ...)
{
  return _[a1 _headerTapGesture];
}

id objc_msgSend__headerTitle(void *a1, const char *a2, ...)
{
  return _[a1 _headerTitle];
}

id objc_msgSend__headerViewForSectionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_headerViewForSectionType:");
}

id objc_msgSend__height(void *a1, const char *a2, ...)
{
  return _[a1 _height];
}

id objc_msgSend__heightForAttributedText_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForAttributedText:width:");
}

id objc_msgSend__heightForAuxViewAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForAuxViewAtIndex:");
}

id objc_msgSend__heightForCompressionStage_isMaximumCompression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForCompressionStage:isMaximumCompression:");
}

id objc_msgSend__heightForFullLayout(void *a1, const char *a2, ...)
{
  return _[a1 _heightForFullLayout];
}

id objc_msgSend__heightForRoadDescriptionViewWithStep_forWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForRoadDescriptionViewWithStep:forWidth:");
}

id objc_msgSend__heightForText_width_fontProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightForText:width:fontProvider:");
}

id objc_msgSend__heightOfFinalRow(void *a1, const char *a2, ...)
{
  return _[a1 _heightOfFinalRow];
}

id objc_msgSend__heroImageGradientAlphaForLayout_transitionFraction_(void *a1, const char *a2, ...)
{
  return [_heroImageGradientAlphaForLayout:transitionFraction:];
}

id objc_msgSend__heroImageJoeAlphaForLayout_transitionFraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heroImageJoeAlphaForLayout:transitionFraction:");
}

id objc_msgSend__hideAdvisories(void *a1, const char *a2, ...)
{
  return _[a1 _hideAdvisories];
}

id objc_msgSend__hideFailureWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideFailureWithCompletion:");
}

id objc_msgSend__hideSearchHereControl(void *a1, const char *a2, ...)
{
  return _[a1 _hideSearchHereControl];
}

id objc_msgSend__hideStatusBanner(void *a1, const char *a2, ...)
{
  return _[a1 _hideStatusBanner];
}

id objc_msgSend__hideTip(void *a1, const char *a2, ...)
{
  return _[a1 _hideTip];
}

id objc_msgSend__hideViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideViews:");
}

id objc_msgSend__hidingLayoutConstraintsForHost_withLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidingLayoutConstraintsForHost:withLayoutGuide:");
}

id objc_msgSend__highlightFirstDirection(void *a1, const char *a2, ...)
{
  return _[a1 _highlightFirstDirection];
}

id objc_msgSend__highlightMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightMapItem:");
}

id objc_msgSend__highlightSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightSearchResult:");
}

id objc_msgSend__highlightType(void *a1, const char *a2, ...)
{
  return _[a1 _highlightType];
}

id objc_msgSend__highlightedLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _highlightedLabelColor];
}

id objc_msgSend__highlightedStepIndex(void *a1, const char *a2, ...)
{
  return _[a1 _highlightedStepIndex];
}

id objc_msgSend__hikeAssociatedInfo(void *a1, const char *a2, ...)
{
  return _[a1 _hikeAssociatedInfo];
}

id objc_msgSend__hikingToken(void *a1, const char *a2, ...)
{
  return _[a1 _hikingToken];
}

id objc_msgSend__historyResultsForSearchQuery_searchMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_historyResultsForSearchQuery:searchMode:");
}

id objc_msgSend__homeAreaTipWasDismissed(void *a1, const char *a2, ...)
{
  return _[a1 _homeAreaTipWasDismissed];
}

id objc_msgSend__homeSectionAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _homeSectionAtIndexPath:];
}

id objc_msgSend__homeSectionWithType_(void *a1, const char *a2, ...)
{
  return [a1 _homeSectionWithType:];
}

id objc_msgSend__homeViewController(void *a1, const char *a2, ...)
{
  return _[a1 _homeViewController];
}

id objc_msgSend__horizontalCameraOffset(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalCameraOffset];
}

id objc_msgSend__horizontalCarouselLayout(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalCarouselLayout];
}

id objc_msgSend__horizontalConstraintForAccessoryView_isLeadingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_horizontalConstraintForAccessoryView:isLeadingView:");
}

id objc_msgSend__horizontalGridLayout(void *a1, const char *a2, ...)
{
  return _[a1 _horizontalGridLayout];
}

id objc_msgSend__horizontalStackViewWithViews_spacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_horizontalStackViewWithViews:spacing:");
}

id objc_msgSend__humanPresenceDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _humanPresenceDidChange];
}

id objc_msgSend__iOSMapView(void *a1, const char *a2, ...)
{
  return _[a1 _iOSMapView];
}

id objc_msgSend__icon(void *a1, const char *a2, ...)
{
  return _[a1 _icon];
}

id objc_msgSend__iconSideLengthForArrival_(void *a1, const char *a2, ...)
{
  return [a1 _iconSideLengthForArrival];
}

id objc_msgSend__iconWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconWithFormat:");
}

id objc_msgSend__iconWithStyleAttributes_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconWithStyleAttributes:scale:");
}

id objc_msgSend__identifier(void *a1, const char *a2, ...)
{
  return _[a1 _identifier];
}

id objc_msgSend__identifierForDeparture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForDeparture:");
}

id objc_msgSend__identifierForDepartureSequence_(void *a1, const char *a2, ...)
{
  return [a1 _identifierForDepartureSequence:];
}

id objc_msgSend__identifierForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForItem:");
}

id objc_msgSend__identifierForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForMapItem:");
}

id objc_msgSend__identifierForVenueCardItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForVenueCardItem:");
}

id objc_msgSend__identifierHistory(void *a1, const char *a2, ...)
{
  return _[a1 _identifierHistory];
}

id objc_msgSend__identifierPathForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierPathForIndexPath:");
}

id objc_msgSend__identifiersForSecurePasses_(void *a1, const char *a2, ...)
{
  return [a1 _identifiersForSecurePasses];
}

id objc_msgSend__idiom(void *a1, const char *a2, ...)
{
  return _[a1 _idiom];
}

id objc_msgSend__idleTimeoutFired_(void *a1, const char *a2, ...)
{
  return [a1 _idleTimeoutFired:];
}

id objc_msgSend__idleTimerReasonPermittedInBackground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_idleTimerReasonPermittedInBackground:");
}

id objc_msgSend__imageData(void *a1, const char *a2, ...)
{
  return _[a1 _imageData];
}

id objc_msgSend__imageDimension(void *a1, const char *a2, ...)
{
  return _[a1 _imageDimension];
}

id objc_msgSend__imageForAction_(void *a1, const char *a2, ...)
{
  return [a1 _imageForAction:];
}

id objc_msgSend__imageForAudioType_(void *a1, const char *a2, ...)
{
  return [a1 _imageForAudioType:];
}

id objc_msgSend__imageForStyleAttributes_screenScale_isNightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageForStyleAttributes:screenScale:isNightMode:");
}

id objc_msgSend__imageForVolumeOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageForVolumeOption:");
}

id objc_msgSend__imageProcessingQueue(void *a1, const char *a2, ...)
{
  return _[a1 _imageProcessingQueue];
}

id objc_msgSend__imageSize(void *a1, const char *a2, ...)
{
  return _[a1 _imageSize];
}

id objc_msgSend__imageSizeForCurrentContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 _imageSizeForCurrentContentSizeCategory];
}

id objc_msgSend__imageTintColorForAction_(void *a1, const char *a2, ...)
{
  return [a1 _imageTintColorForAction:];
}

id objc_msgSend__imageToTextSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _imageToTextSpacing];
}

id objc_msgSend__imageViewPositionConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _imageViewPositionConstraints];
}

id objc_msgSend__imageWidth(void *a1, const char *a2, ...)
{
  return _[a1 _imageWidth];
}

id objc_msgSend__imageWithManeuverType_inRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageWithManeuverType:inRect:");
}

id objc_msgSend__immediatelyUpdateRecording_withAuxiliaryControlsRecording_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_immediatelyUpdateRecording:withAuxiliaryControlsRecording:");
}

id objc_msgSend__inKorea(void *a1, const char *a2, ...)
{
  return _[a1 _inKorea];
}

id objc_msgSend__incidentItem(void *a1, const char *a2, ...)
{
  return _[a1 _incidentItem];
}

id objc_msgSend__incidentItemWithIncidentMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incidentItemWithIncidentMessage:");
}

id objc_msgSend__incidentQuestionsFromLayoutItems_(void *a1, const char *a2, ...)
{
  return [a1 _incidentQuestionsFromLayoutItems:];
}

id objc_msgSend__incidentTypeAsString(void *a1, const char *a2, ...)
{
  return _[a1 _incidentTypeAsString];
}

id objc_msgSend__incidentTypeForAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_incidentTypeForAlert:");
}

id objc_msgSend__incidentUserPath(void *a1, const char *a2, ...)
{
  return _[a1 _incidentUserPath];
}

id objc_msgSend__incidentsDetailsRow(void *a1, const char *a2, ...)
{
  return _[a1 _incidentsDetailsRow];
}

id objc_msgSend__incidentsOverviewRow(void *a1, const char *a2, ...)
{
  return _[a1 _incidentsOverviewRow];
}

id objc_msgSend__incrementCountOfRideOptionsBooked(void *a1, const char *a2, ...)
{
  return _[a1 _incrementCountOfRideOptionsBooked];
}

id objc_msgSend__incrementImpressionCount(void *a1, const char *a2, ...)
{
  return _[a1 _incrementImpressionCount];
}

id objc_msgSend__incrementSessionCount(void *a1, const char *a2, ...)
{
  return _[a1 _incrementSessionCount];
}

id objc_msgSend__incrementStep(void *a1, const char *a2, ...)
{
  return _[a1 _incrementStep];
}

id objc_msgSend__incrementSubmissionCount(void *a1, const char *a2, ...)
{
  return _[a1 _incrementSubmissionCount];
}

id objc_msgSend__indentsLinkMap(void *a1, const char *a2, ...)
{
  return _[a1 _indentsLinkMap];
}

id objc_msgSend__indexForNextIncomingDeparture(void *a1, const char *a2, ...)
{
  return _[a1 _indexForNextIncomingDeparture];
}

id objc_msgSend__indexForSelectedTripIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _indexForSelectedTripIdentifier];
}

id objc_msgSend__indexForTripIdentifier_scheduledDepartureDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexForTripIdentifier:scheduledDepartureDate:");
}

id objc_msgSend__indexOfFirstNonPlaceCardInHand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexOfFirstNonPlaceCardInHand:");
}

id objc_msgSend__indexPathForIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForIdentifierPath:");
}

id objc_msgSend__indexPathForStepView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForStepView:");
}

id objc_msgSend__indexPathFromFlatIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _indexPathFromFlatIndexPath:];
}

id objc_msgSend__indexPathOfCellToShowAtMediumLayout(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathOfCellToShowAtMediumLayout];
}

id objc_msgSend__indexedContentSubviewOrNullArray(void *a1, const char *a2, ...)
{
  return _[a1 _indexedContentSubviewOrNullArray];
}

id objc_msgSend__indicatorsTopPosition(void *a1, const char *a2, ...)
{
  return _[a1 _indicatorsTopPosition];
}

id objc_msgSend__indicatorsTrailingInset(void *a1, const char *a2, ...)
{
  return _[a1 _indicatorsTrailingInset];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initAuxView_forIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initAuxView:forIndex:");
}

id objc_msgSend__initComingledVendorPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _initComingledVendorPhotos];
}

id objc_msgSend__initCorrectableFields(void *a1, const char *a2, ...)
{
  return _[a1 _initCorrectableFields];
}

id objc_msgSend__initDateAndPartySizeContainerView(void *a1, const char *a2, ...)
{
  return _[a1 _initDateAndPartySizeContainerView];
}

id objc_msgSend__initErrorContainerView(void *a1, const char *a2, ...)
{
  return _[a1 _initErrorContainerView];
}

id objc_msgSend__initLoadingIndicatorContainerView(void *a1, const char *a2, ...)
{
  return _[a1 _initLoadingIndicatorContainerView];
}

id objc_msgSend__initMapView(void *a1, const char *a2, ...)
{
  return _[a1 _initMapView];
}

id objc_msgSend__initOfflinePlaceHolderWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initOfflinePlaceHolderWithCompletion:");
}

id objc_msgSend__initOfflinePlaceHolderWithTicket(void *a1, const char *a2, ...)
{
  return _[a1 _initOfflinePlaceHolderWithTicket];
}

id objc_msgSend__initPageControl(void *a1, const char *a2, ...)
{
  return _[a1 _initPageControl];
}

id objc_msgSend__initPageMarkerLabel(void *a1, const char *a2, ...)
{
  return _[a1 _initPageMarkerLabel];
}

id objc_msgSend__initPhotoPicker(void *a1, const char *a2, ...)
{
  return _[a1 _initPhotoPicker];
}

id objc_msgSend__initPlaceholderWithSubmitTicketIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 _initPlaceholderWithSubmitTicketIfNeeded:];
}

id objc_msgSend__initSingleVendorPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _initSingleVendorPhotos];
}

id objc_msgSend__initSubcategories(void *a1, const char *a2, ...)
{
  return _[a1 _initSubcategories];
}

id objc_msgSend__initSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 _initSuggestion];
}

id objc_msgSend__initTimeSelectionCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _initTimeSelectionCollectionView];
}

id objc_msgSend__initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithActivityItems:applicationActivities:");
}

id objc_msgSend__initWithCause_application_activity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithCause:application:activity:");
}

id objc_msgSend__initWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _initWithConfiguration:];
}

id objc_msgSend__initWithData_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithData:scale:");
}

id objc_msgSend__initWithDelegate_onQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithDelegate:onQueue:");
}

id objc_msgSend__initWithFrame_gestureRecognizerHostView_showsAttribution_showsAppleLogo_allowsAntialiasing_carDisplayType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithFrame:gestureRecognizerHostView:showsAttribution:showsAppleLogo:allowsAntialiasing:carDisplayType:");
}

id objc_msgSend__initWithHeldRows(void *a1, const char *a2, ...)
{
  return _[a1 _initWithHeldRows];
}

id objc_msgSend__initWithKind_localizedName_(void *a1, const char *a2, ...)
{
  return [a1 _initWithKind:localizedName:];
}

id objc_msgSend__initWithLabelMarker_(void *a1, const char *a2, ...)
{
  return [a1 _initWithLabelMarker:];
}

id objc_msgSend__initWithMapItem_(void *a1, const char *a2, ...)
{
  return [a1 _initWithMapItem:];
}

id objc_msgSend__initWithName_systemName_artworkData_lineFeatureID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithName:systemName:artworkData:lineFeatureID:");
}

id objc_msgSend__initWithStreet_subPremise_city_state_zipCode_country_addressFormattingLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithStreet:subPremise:city:state:zipCode:country:addressFormattingLocaleIdentifier:");
}

id objc_msgSend__initWithTitle_details_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initWithTitle:details:");
}

id objc_msgSend__initWithTransitLine_(void *a1, const char *a2, ...)
{
  return [a1 _initWithTransitLine:];
}

id objc_msgSend__initialConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _initialConstraints];
}

id objc_msgSend__initialConstraintsForContentView_(void *a1, const char *a2, ...)
{
  return [a1 _initialConstraintsForContentView:];
}

id objc_msgSend__initialCoordinatePickingMapRect(void *a1, const char *a2, ...)
{
  return _[a1 _initialCoordinatePickingMapRect];
}

id objc_msgSend__initialScrollViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _initialScrollViewConstraints];
}

id objc_msgSend__initialize(void *a1, const char *a2, ...)
{
  return _[a1 _initialize];
}

id objc_msgSend__initializeDirectionsFeedbackWithNavigationState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_initializeDirectionsFeedbackWithNavigationState:");
}

id objc_msgSend__initializeEVRecording(void *a1, const char *a2, ...)
{
  return _[a1 _initializeEVRecording];
}

id objc_msgSend__initializeGoButtonState(void *a1, const char *a2, ...)
{
  return _[a1 _initializeGoButtonState];
}

id objc_msgSend__initializePrintingController(void *a1, const char *a2, ...)
{
  return _[a1 _initializePrintingController];
}

id objc_msgSend__initiateCardDragIfNeededWithInitialVerticalTranslation_(void *a1, const char *a2, ...)
{
  return [a1 _initiateCardDragIfNeededWithInitialVerticalTranslation:];
}

id objc_msgSend__inlineRatingsDisclosureStringWithFont_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inlineRatingsDisclosureStringWithFont:attributes:");
}

id objc_msgSend__insertAppropriateCardStateForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertAppropriateCardStateForRoute:");
}

id objc_msgSend__insertBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 _insertBackgroundView];
}

id objc_msgSend__insertCompassView(void *a1, const char *a2, ...)
{
  return _[a1 _insertCompassView];
}

id objc_msgSend__insertEditStackButtons(void *a1, const char *a2, ...)
{
  return _[a1 _insertEditStackButtons];
}

id objc_msgSend__insertEmptyStateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _insertEmptyStateIfNeeded];
}

id objc_msgSend__insertFillViewIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _insertFillViewIfNecessary];
}

id objc_msgSend__insertGraphView(void *a1, const char *a2, ...)
{
  return _[a1 _insertGraphView];
}

id objc_msgSend__insertInHistory(void *a1, const char *a2, ...)
{
  return _[a1 _insertInHistory];
}

id objc_msgSend__insertItem_atIndex_inArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertItem:atIndex:inArray:");
}

id objc_msgSend__insertProgressBarViewIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _insertProgressBarViewIfNecessary];
}

id objc_msgSend__insertPuckViewIntoMapView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertPuckViewIntoMapView:");
}

id objc_msgSend__insertRecenterButton(void *a1, const char *a2, ...)
{
  return _[a1 _insertRecenterButton];
}

id objc_msgSend__insertRecenterButtonIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _insertRecenterButtonIfNeeded];
}

id objc_msgSend__insertRippleAnnotationAtCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertRippleAnnotationAtCoordinate:");
}

id objc_msgSend__insertRouteCardIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _insertRouteCardIfNeeded];
}

id objc_msgSend__insertSubviewBelowAnnotationContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertSubviewBelowAnnotationContainerView:");
}

id objc_msgSend__insertTaskAtFirstIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertTaskAtFirstIndex:");
}

id objc_msgSend__insetsByAddingCompassPaddingToInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insetsByAddingCompassPaddingToInsets:");
}

id objc_msgSend__installGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 _installGestureRecognizers];
}

id objc_msgSend__installInContentView_(void *a1, const char *a2, ...)
{
  return [a1 _installInContentView:];
}

id objc_msgSend__installInContentView_layoutGuide_(void *a1, const char *a2, ...)
{
  return [a1 _installInContentView:layoutGuide:];
}

id objc_msgSend__installMapReplacementView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_installMapReplacementView:");
}

id objc_msgSend__installedApps(void *a1, const char *a2, ...)
{
  return _[a1 _installedApps];
}

id objc_msgSend__instructionHorizontalPrimaryConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _instructionHorizontalPrimaryConstraint];
}

id objc_msgSend__instructionVariables(void *a1, const char *a2, ...)
{
  return _[a1 _instructionVariables];
}

id objc_msgSend__instructionVariantsForGuidanceEvent_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instructionVariantsForGuidanceEvent:route:");
}

id objc_msgSend__instructionsContext(void *a1, const char *a2, ...)
{
  return _[a1 _instructionsContext];
}

id objc_msgSend__instructionsLabelToTrailingLayoutGuideDistance(void *a1, const char *a2, ...)
{
  return _[a1 _instructionsLabelToTrailingLayoutGuideDistance];
}

id objc_msgSend__instrumentHeaderButtonAction_withFeedbackType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentHeaderButtonAction:withFeedbackType:");
}

id objc_msgSend__instrumentSaveOrRemoveFromCollectionWithMapItem_instrumentSave_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentSaveOrRemoveFromCollectionWithMapItem:instrumentSave:");
}

id objc_msgSend__instrumentSelectedSearch(void *a1, const char *a2, ...)
{
  return _[a1 _instrumentSelectedSearch];
}

id objc_msgSend__instrumentSelectingLabel(void *a1, const char *a2, ...)
{
  return _[a1 _instrumentSelectingLabel];
}

id objc_msgSend__instrumentSelectingRoute(void *a1, const char *a2, ...)
{
  return _[a1 _instrumentSelectingRoute];
}

id objc_msgSend__integerValueForDefaultsKey_networkDefaultsKey_(void *a1, const char *a2, ...)
{
  return [a1 _integerValueForDefaultsKey:networkDefaultsKey:];
}

id objc_msgSend__integersKeyed(void *a1, const char *a2, ...)
{
  return _[a1 _integersKeyed];
}

id objc_msgSend__internalViewDidAppear(void *a1, const char *a2, ...)
{
  return _[a1 _internalViewDidAppear];
}

id objc_msgSend__internalViewDidDisappear(void *a1, const char *a2, ...)
{
  return _[a1 _internalViewDidDisappear];
}

id objc_msgSend__internalViewWillAppear(void *a1, const char *a2, ...)
{
  return _[a1 _internalViewWillAppear];
}

id objc_msgSend__internalViewWillDisappear(void *a1, const char *a2, ...)
{
  return _[a1 _internalViewWillDisappear];
}

id objc_msgSend__internal_ensurePresentationsMatchContaineeStackAllowingFault_allowingAnimations_skipUnlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_internal_ensurePresentationsMatchContaineeStackAllowingFault:allowingAnimations:skipUnlock:");
}

id objc_msgSend__internal_isChromeDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_internal_isChromeDisabled");
}

id objc_msgSend__internal_topContextWantsCompassLayoutControl(void *a1, const char *a2, ...)
{
  return [a1 _internal_topContextWantsCompassLayoutControl];
}

id objc_msgSend__interruptAndSaveHistoryEntry_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_interruptAndSaveHistoryEntry:completion:");
}

id objc_msgSend__interruptionKindForCurrentRoute(void *a1, const char *a2, ...)
{
  return _[a1 _interruptionKindForCurrentRoute];
}

id objc_msgSend__intersectLineWithPoint1_point2_withRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_intersectLineWithPoint1:point2:withRect:");
}

id objc_msgSend__invalidateButtonConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateButtonConstraints];
}

id objc_msgSend__invalidateCachedLayoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateCachedLayoutIfNeeded];
}

id objc_msgSend__invalidateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateConstraints];
}

id objc_msgSend__invalidateDrawingPaths(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateDrawingPaths];
}

id objc_msgSend__invalidateFilteredContent(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateFilteredContent];
}

id objc_msgSend__invalidateFrameSize(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateFrameSize];
}

id objc_msgSend__invalidateFrequencyString(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateFrequencyString];
}

id objc_msgSend__invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateIntrinsicContentSize];
}

id objc_msgSend__invalidateLayout(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateLayout];
}

id objc_msgSend__invalidateMediumHeightCache(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateMediumHeightCache];
}

id objc_msgSend__invalidateOperatingHours(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateOperatingHours];
}

id objc_msgSend__invalidateResults(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateResults];
}

id objc_msgSend__invalidateSearchSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateSearchSession:");
}

id objc_msgSend__invalidateTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateTimer];
}

id objc_msgSend__invalidateTimers(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateTimers];
}

id objc_msgSend__invocationWithSelector_argument_(void *a1, const char *a2, ...)
{
  return [a1 _invocationWithSelector:argument:];
}

id objc_msgSend__invokeChangeHandler(void *a1, const char *a2, ...)
{
  return _[a1 _invokeChangeHandler];
}

id objc_msgSend__invokeChangeHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _invokeChangeHandlers];
}

id objc_msgSend__invokeCompletionBlocksWithFinishedFlag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeCompletionBlocksWithFinishedFlag:");
}

id objc_msgSend__invokeCompletionHandlerWithShouldSubmit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeCompletionHandlerWithShouldSubmit:");
}

id objc_msgSend__invokeCompletionWithOutcome_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeCompletionWithOutcome:");
}

id objc_msgSend__invokeSelectionWithSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invokeSelectionWithSourceType:");
}

id objc_msgSend__ios_meContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ios_meContactWithKeysToFetch:error:");
}

id objc_msgSend__isAccessoryCarPlayConnected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAccessoryCarPlayConnected:");
}

id objc_msgSend__isActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isActive:");
}

id objc_msgSend__isAnimatingToCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 _isAnimatingToCoordinate];
}

id objc_msgSend__isArrivalState(void *a1, const char *a2, ...)
{
  return _[a1 _isArrivalState];
}

id objc_msgSend__isAuthorizedForPreciseLocation(void *a1, const char *a2, ...)
{
  return _[a1 _isAuthorizedForPreciseLocation];
}

id objc_msgSend__isBackgroundNavigationLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isBackgroundNavigationLaunch:");
}

id objc_msgSend__isBuildingMultipointRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isBuildingMultipointRoute];
}

id objc_msgSend__isCamera_equalToCamera_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCamera:equalToCamera:");
}

id objc_msgSend__isCarInstrumentsScreen(void *a1, const char *a2, ...)
{
  return _[a1 _isCarInstrumentsScreen];
}

id objc_msgSend__isCarPlayHumanPresenceInRange(void *a1, const char *a2, ...)
{
  return _[a1 _isCarPlayHumanPresenceInRange];
}

id objc_msgSend__isCarPlayMapView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCarPlayMapView:");
}

id objc_msgSend__isCarPlaySessionActive(void *a1, const char *a2, ...)
{
  return _[a1 _isCarPlaySessionActive];
}

id objc_msgSend__isChargingWaypoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isChargingWaypoint:");
}

id objc_msgSend__isCheckingForVisitAndPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _isCheckingForVisitAndPhotos];
}

id objc_msgSend__isChinaCountryCode_(void *a1, const char *a2, ...)
{
  return [a1 _isChinaCountryCode:];
}

id objc_msgSend__isClosestToFullHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isClosestToFullHeight:");
}

id objc_msgSend__isCollectionEmpty(void *a1, const char *a2, ...)
{
  return _[a1 _isCollectionEmpty];
}

id objc_msgSend__isCoordinateVisibleInContainerViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCoordinateVisibleInContainerViewController:");
}

id objc_msgSend__isCopyOperationWithDropSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCopyOperationWithDropSession:");
}

id objc_msgSend__isCopyOperationWithDropSession_destinationIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCopyOperationWithDropSession:destinationIndexPath:");
}

id objc_msgSend__isCorrectionCategory_(void *a1, const char *a2, ...)
{
  return [a1 _isCorrectionCategory:];
}

id objc_msgSend__isCurrentStateEqualLastPostedState(void *a1, const char *a2, ...)
{
  return _[a1 _isCurrentStateEqualLastPostedState];
}

id objc_msgSend__isDarkMode(void *a1, const char *a2, ...)
{
  return _[a1 _isDarkMode];
}

id objc_msgSend__isDeferringMapPopovers(void *a1, const char *a2, ...)
{
  return _[a1 _isDeferringMapPopovers];
}

id objc_msgSend__isDeviceAngleAboveTopBound(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceAngleAboveTopBound];
}

id objc_msgSend__isDeviceAngleBelowBottomBound(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceAngleBelowBottomBound];
}

id objc_msgSend__isDimmedStepAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDimmedStepAtIndex:");
}

id objc_msgSend__isDisplayedInWidget(void *a1, const char *a2, ...)
{
  return _[a1 _isDisplayedInWidget];
}

id objc_msgSend__isDisplayingAssociatedTrailsOrTrailheads(void *a1, const char *a2, ...)
{
  return _[a1 _isDisplayingAssociatedTrailsOrTrailheads];
}

id objc_msgSend__isDisplayingStartManeuver(void *a1, const char *a2, ...)
{
  return _[a1 _isDisplayingStartManeuver];
}

id objc_msgSend__isDragging(void *a1, const char *a2, ...)
{
  return _[a1 _isDragging];
}

id objc_msgSend__isDynamicIslandTarget_(void *a1, const char *a2, ...)
{
  return [a1 _isDynamicIslandTarget:];
}

id objc_msgSend__isEligibleToShowFindMyButton(void *a1, const char *a2, ...)
{
  return _[a1 _isEligibleToShowFindMyButton];
}

id objc_msgSend__isEligibleToShowWalkingButton(void *a1, const char *a2, ...)
{
  return _[a1 _isEligibleToShowWalkingButton];
}

id objc_msgSend__isEmpty(void *a1, const char *a2, ...)
{
  return _[a1 _isEmpty];
}

id objc_msgSend__isEmptySection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmptySection:");
}

id objc_msgSend__isEquivalentURLRepresentationTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEquivalentURLRepresentationTo:");
}

id objc_msgSend__isExpansionCellIndex_(void *a1, const char *a2, ...)
{
  return [a1 _isExpansionCellIndex:];
}

id objc_msgSend__isFavorite(void *a1, const char *a2, ...)
{
  return _[a1 _isFavorite];
}

id objc_msgSend__isFirstArrowPosition(void *a1, const char *a2, ...)
{
  return _[a1 _isFirstArrowPosition];
}

id objc_msgSend__isFocusMovementValidInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isFocusMovementValidInContext:");
}

id objc_msgSend__isForDisplayingUnavailableRoutes(void *a1, const char *a2, ...)
{
  return _[a1 _isForDisplayingUnavailableRoutes];
}

id objc_msgSend__isGarage_significantlyDifferentFromGarage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isGarage:significantlyDifferentFromGarage:");
}

id objc_msgSend__isGeneratingAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _isGeneratingAnimations];
}

id objc_msgSend__isGoButtonFocusable(void *a1, const char *a2, ...)
{
  return _[a1 _isGoButtonFocusable];
}

id objc_msgSend__isHidden(void *a1, const char *a2, ...)
{
  return _[a1 _isHidden];
}

id objc_msgSend__isHomeCorrectionsCategory_(void *a1, const char *a2, ...)
{
  return [a1 _isHomeCorrectionsCategory:];
}

id objc_msgSend__isHomeOrWorkSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isHomeOrWorkSuggestion:");
}

id objc_msgSend__isHomeWorkSchoolShortcut(void *a1, const char *a2, ...)
{
  return _[a1 _isHomeWorkSchoolShortcut];
}

id objc_msgSend__isInAnimationBlock(void *a1, const char *a2, ...)
{
  return _[a1 _isInAnimationBlock];
}

id objc_msgSend__isInAnimationBlockWithAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isInAnimationBlockWithAnimationsEnabled];
}

id objc_msgSend__isInBackground(void *a1, const char *a2, ...)
{
  return _[a1 _isInBackground];
}

id objc_msgSend__isInEditLocationMode(void *a1, const char *a2, ...)
{
  return _[a1 _isInEditLocationMode];
}

id objc_msgSend__isInLinkedPlaceRelationship(void *a1, const char *a2, ...)
{
  return _[a1 _isInLinkedPlaceRelationship];
}

id objc_msgSend__isInPocket(void *a1, const char *a2, ...)
{
  return _[a1 _isInPocket];
}

id objc_msgSend__isInPopoverPresentation(void *a1, const char *a2, ...)
{
  return _[a1 _isInPopoverPresentation];
}

id objc_msgSend__isIndexPathOfAddNewCarCell_(void *a1, const char *a2, ...)
{
  return [a1 _isIndexPathOfAddNewCarCell:];
}

id objc_msgSend__isInternalInstall(void *a1, const char *a2, ...)
{
  return _[a1 _isInternalInstall];
}

id objc_msgSend__isItemVenue_(void *a1, const char *a2, ...)
{
  return [a1 _isItemVenue:];
}

id objc_msgSend__isKeyWindowScene(void *a1, const char *a2, ...)
{
  return _[a1 _isKeyWindowScene];
}

id objc_msgSend__isKoreaCountryCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isKoreaCountryCode:");
}

id objc_msgSend__isLandscape(void *a1, const char *a2, ...)
{
  return _[a1 _isLandscape];
}

id objc_msgSend__isLoading(void *a1, const char *a2, ...)
{
  return _[a1 _isLoading];
}

id objc_msgSend__isLoadingSubmission(void *a1, const char *a2, ...)
{
  return _[a1 _isLoadingSubmission];
}

id objc_msgSend__isLocationGoodEnough_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isLocationGoodEnough:");
}

id objc_msgSend__isLocationPropagationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isLocationPropagationEnabled];
}

id objc_msgSend__isLocationPulseEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isLocationPulseEnabled];
}

id objc_msgSend__isLocationStationary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isLocationStationary:");
}

id objc_msgSend__isMACPlaceCardViewController_tryingToPresent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMACPlaceCardViewController:tryingToPresent:");
}

id objc_msgSend__isMainScreenMapView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMainScreenMapView:");
}

id objc_msgSend__isMapItemTypeAddress(void *a1, const char *a2, ...)
{
  return _[a1 _isMapItemTypeAddress];
}

id objc_msgSend__isMapItemTypeBrand(void *a1, const char *a2, ...)
{
  return _[a1 _isMapItemTypeBrand];
}

id objc_msgSend__isMapItemTypeBusiness(void *a1, const char *a2, ...)
{
  return _[a1 _isMapItemTypeBusiness];
}

id objc_msgSend__isMapItemTypeSettlement(void *a1, const char *a2, ...)
{
  return _[a1 _isMapItemTypeSettlement];
}

id objc_msgSend__isMapItemTypeTransit(void *a1, const char *a2, ...)
{
  return _[a1 _isMapItemTypeTransit];
}

id objc_msgSend__isMapUserShortcut(void *a1, const char *a2, ...)
{
  return _[a1 _isMapUserShortcut];
}

id objc_msgSend__isMapsActiveInLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMapsActiveInLayout:");
}

id objc_msgSend__isMapsForegroundOnCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 _isMapsForegroundOnCarPlay];
}

id objc_msgSend__isMapsForegroundOnMainWindow(void *a1, const char *a2, ...)
{
  return _[a1 _isMapsForegroundOnMainWindow];
}

id objc_msgSend__isMapsForegroundOnlyOnHybridIC(void *a1, const char *a2, ...)
{
  return _[a1 _isMapsForegroundOnlyOnHybridIC];
}

id objc_msgSend__isMapsOffline(void *a1, const char *a2, ...)
{
  return _[a1 _isMapsOffline];
}

id objc_msgSend__isMinimumViableVehicle(void *a1, const char *a2, ...)
{
  return _[a1 _isMinimumViableVehicle];
}

id objc_msgSend__isMonitoring(void *a1, const char *a2, ...)
{
  return _[a1 _isMonitoring];
}

id objc_msgSend__isMoveOperationWithDropSession_(void *a1, const char *a2, ...)
{
  return [a1 _isMoveOperationWithDropSession:];
}

id objc_msgSend__isMoveOperationWithDropSession_destinationIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMoveOperationWithDropSession:destinationIndexPath:");
}

id objc_msgSend__isNavigationMode(void *a1, const char *a2, ...)
{
  return _[a1 _isNavigationMode];
}

id objc_msgSend__isNearbyLocation(void *a1, const char *a2, ...)
{
  return _[a1 _isNearbyLocation];
}

id objc_msgSend__isNightMode(void *a1, const char *a2, ...)
{
  return _[a1 _isNightMode];
}

id objc_msgSend__isNoGoodCellIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isNoGoodCellIndex:");
}

id objc_msgSend__isNoNetworkError_(void *a1, const char *a2, ...)
{
  return [a1 _isNoNetworkError:];
}

id objc_msgSend__isNowComplete(void *a1, const char *a2, ...)
{
  return _[a1 _isNowComplete];
}

id objc_msgSend__isOtherCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isOtherCategory:");
}

id objc_msgSend__isParentQuestionKindOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isParentQuestionKindOfClass:");
}

id objc_msgSend__isParkingRouteState(void *a1, const char *a2, ...)
{
  return _[a1 _isParkingRouteState];
}

id objc_msgSend__isPartiallyClientized(void *a1, const char *a2, ...)
{
  return _[a1 _isPartiallyClientized];
}

id objc_msgSend__isPastDeparture_(void *a1, const char *a2, ...)
{
  return [a1 _isPastDeparture:];
}

id objc_msgSend__isPersonalizedMapsCategory_(void *a1, const char *a2, ...)
{
  return [a1 _isPersonalizedMapsCategory:];
}

id objc_msgSend__isPinned(void *a1, const char *a2, ...)
{
  return _[a1 _isPinned];
}

id objc_msgSend__isPitched(void *a1, const char *a2, ...)
{
  return _[a1 _isPitched];
}

id objc_msgSend__isPointNearLeftEdge_(void *a1, const char *a2, ...)
{
  return [a1 _isPointNearLeftEdge:];
}

id objc_msgSend__isPointNearRightEdge_(void *a1, const char *a2, ...)
{
  return [a1 _isPointNearRightEdge:];
}

id objc_msgSend__isPresented(void *a1, const char *a2, ...)
{
  return _[a1 _isPresented];
}

id objc_msgSend__isPresentingOverlappingContainee(void *a1, const char *a2, ...)
{
  return _[a1 _isPresentingOverlappingContainee];
}

id objc_msgSend__isProminentItemType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isProminentItemType:");
}

id objc_msgSend__isRAPNewUI(void *a1, const char *a2, ...)
{
  return _[a1 _isRAPNewUI];
}

id objc_msgSend__isRTL(void *a1, const char *a2, ...)
{
  return _[a1 _isRTL];
}

id objc_msgSend__isReadyToRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isReadyToRoute];
}

id objc_msgSend__isRectFullyVisible_(void *a1, const char *a2, ...)
{
  return [a1 _isRectFullyVisible:];
}

id objc_msgSend__isRecursivelyComplete(void *a1, const char *a2, ...)
{
  return _[a1 _isRecursivelyComplete];
}

id objc_msgSend__isRegionDownloaded_requireFullyDownloaded_coverageRequirement_forSubscriptionInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRegionDownloaded:requireFullyDownloaded:coverageRequirement:forSubscriptionInfos:");
}

id objc_msgSend__isResumeRouteState(void *a1, const char *a2, ...)
{
  return _[a1 _isResumeRouteState];
}

id objc_msgSend__isSceneForeground_(void *a1, const char *a2, ...)
{
  return [a1 _isSceneForeground:];
}

id objc_msgSend__isSceneOccluded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSceneOccluded:");
}

id objc_msgSend__isSchoolCorrectionsCategory_(void *a1, const char *a2, ...)
{
  return [a1 _isSchoolCorrectionsCategory:];
}

id objc_msgSend__isSecondarySignVisible(void *a1, const char *a2, ...)
{
  return _[a1 _isSecondarySignVisible];
}

id objc_msgSend__isSectionForEnvironments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSectionForEnvironments:");
}

id objc_msgSend__isSharingTrip(void *a1, const char *a2, ...)
{
  return _[a1 _isSharingTrip];
}

id objc_msgSend__isShieldListViewOverlappingWithBadge(void *a1, const char *a2, ...)
{
  return _[a1 _isShieldListViewOverlappingWithBadge];
}

id objc_msgSend__isShowingAttributionBadge(void *a1, const char *a2, ...)
{
  return _[a1 _isShowingAttributionBadge];
}

id objc_msgSend__isShowingCuratedElevatedGround(void *a1, const char *a2, ...)
{
  return _[a1 _isShowingCuratedElevatedGround];
}

id objc_msgSend__isShowingLocationServicesAuthorizationPrompt(void *a1, const char *a2, ...)
{
  return _[a1 _isShowingLocationServicesAuthorizationPrompt];
}

id objc_msgSend__isSimulating(void *a1, const char *a2, ...)
{
  return _[a1 _isSimulating];
}

id objc_msgSend__isSpanningTwoLines(void *a1, const char *a2, ...)
{
  return _[a1 _isSpanningTwoLines];
}

id objc_msgSend__isStartWaypoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStartWaypoint:");
}

id objc_msgSend__isStepOnTransitLine_(void *a1, const char *a2, ...)
{
  return [a1 _isStepOnTransitLine:];
}

id objc_msgSend__isStreetRAP(void *a1, const char *a2, ...)
{
  return _[a1 _isStreetRAP];
}

id objc_msgSend__isStructuredAddressType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStructuredAddressType:");
}

id objc_msgSend__isSuppressed(void *a1, const char *a2, ...)
{
  return _[a1 _isSuppressed];
}

id objc_msgSend__isTableViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 _isTableViewHidden:];
}

id objc_msgSend__isTracking(void *a1, const char *a2, ...)
{
  return _[a1 _isTracking];
}

id objc_msgSend__isTrackingLocation(void *a1, const char *a2, ...)
{
  return _[a1 _isTrackingLocation];
}

id objc_msgSend__isTransitDisplayFeature(void *a1, const char *a2, ...)
{
  return _[a1 _isTransitDisplayFeature];
}

id objc_msgSend__isTurnByTurn_(void *a1, const char *a2, ...)
{
  return [a1 _isTurnByTurn:];
}

id objc_msgSend__isTurnByTurnSupportedForCurrentRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isTurnByTurnSupportedForCurrentRoute];
}

id objc_msgSend__isUUIDValid(void *a1, const char *a2, ...)
{
  return _[a1 _isUUIDValid];
}

id objc_msgSend__isUserEligibleForNotification(void *a1, const char *a2, ...)
{
  return _[a1 _isUserEligibleForNotification];
}

id objc_msgSend__isUsingDevResourceStyleSheet(void *a1, const char *a2, ...)
{
  return _[a1 _isUsingDevResourceStyleSheet];
}

id objc_msgSend__isValidImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidImageSize:");
}

id objc_msgSend__isValidLabelMarkerForDragging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidLabelMarkerForDragging:");
}

id objc_msgSend__isValidLabelMarkerForInitiatingOrbGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidLabelMarkerForInitiatingOrbGesture:");
}

id objc_msgSend__isValidRoute(void *a1, const char *a2, ...)
{
  return _[a1 _isValidRoute];
}

id objc_msgSend__isValidURLForWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidURLForWebView:");
}

id objc_msgSend__isValidURLToOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValidURLToOpen:");
}

id objc_msgSend__isValue_equalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isValue:equalTo:");
}

id objc_msgSend__isVersion_newerThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isVersion:newerThan:");
}

id objc_msgSend__isWaypointRemovable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWaypointRemovable:");
}

id objc_msgSend__isWorkCorrectionsCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isWorkCorrectionsCategory:");
}

id objc_msgSend__itemAfterSubItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemAfterSubItem:");
}

id objc_msgSend__itemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemAtIndexPath:");
}

id objc_msgSend__itemAtIndexPath_currentPosition_inItems_includingHiddenSubitems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemAtIndexPath:currentPosition:inItems:includingHiddenSubitems:");
}

id objc_msgSend__itemBeforeSubItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemBeforeSubItem:");
}

id objc_msgSend__itemIndexPathForStepIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemIndexPathForStepIndex:");
}

id objc_msgSend__itemSelectedAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 _itemSelectedAtIndex:];
}

id objc_msgSend__itemSelectedCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemSelectedCategory:");
}

id objc_msgSend__itemSnapshotsWithStack_items_hidden_itemIdentifierBlock_viewModelBlock_childItemsBlock_expandedBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemSnapshotsWithStack:items:hidden:itemIdentifierBlock:viewModelBlock:childItemsBlock:expandedBlock:");
}

id objc_msgSend__itemURLForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _itemURLForIdentifier];
}

id objc_msgSend__itemWithContact_geoMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemWithContact:geoMapItem:");
}

id objc_msgSend__itemWithGeoMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemWithGeoMapItem:");
}

id objc_msgSend__itemsFilteredBySearchableString_predicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemsFilteredBySearchableString:predicate:");
}

id objc_msgSend__itemsForRouteRequest(void *a1, const char *a2, ...)
{
  return _[a1 _itemsForRouteRequest];
}

id objc_msgSend__iterateAllItemIdentifiersIncludingURLPropertiesForKeys_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iterateAllItemIdentifiersIncludingURLPropertiesForKeys:usingBlock:");
}

id objc_msgSend__iterateAllItemIdentifiersUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iterateAllItemIdentifiersUsingBlock:");
}

id objc_msgSend__joeColor(void *a1, const char *a2, ...)
{
  return _[a1 _joeColor];
}

id objc_msgSend__junctionViewTopPosition(void *a1, const char *a2, ...)
{
  return _[a1 _junctionViewTopPosition];
}

id objc_msgSend__justifiedLayoutWouldCrushWhenAddingView_toRowViews_availableRowWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_justifiedLayoutWouldCrushWhenAddingView:toRowViews:availableRowWidth:");
}

id objc_msgSend__keyId(void *a1, const char *a2, ...)
{
  return _[a1 _keyId];
}

id objc_msgSend__keyPathsToObserve(void *a1, const char *a2, ...)
{
  return _[a1 _keyPathsToObserve];
}

id objc_msgSend__keys(void *a1, const char *a2, ...)
{
  return _[a1 _keys];
}

id objc_msgSend__kindTracksLabelMarkerSelection(void *a1, const char *a2, ...)
{
  return _[a1 _kindTracksLabelMarkerSelection];
}

id objc_msgSend__knownCountryCodes(void *a1, const char *a2, ...)
{
  return _[a1 _knownCountryCodes];
}

id objc_msgSend__labelColor(void *a1, const char *a2, ...)
{
  return _[a1 _labelColor];
}

id objc_msgSend__labelCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 _labelCoordinate];
}

id objc_msgSend__labelEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _labelEdgeInsets];
}

id objc_msgSend__labelEdgeWidths(void *a1, const char *a2, ...)
{
  return _[a1 _labelEdgeWidths];
}

id objc_msgSend__labelFont(void *a1, const char *a2, ...)
{
  return _[a1 _labelFont];
}

id objc_msgSend__labelForRoutingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelForRoutingMode:");
}

id objc_msgSend__labelForRoutingModeKeys_intendedTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelForRoutingModeKeys:intendedTransportType:");
}

id objc_msgSend__labelForVolumeOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelForVolumeOption:");
}

id objc_msgSend__labelGeometry(void *a1, const char *a2, ...)
{
  return _[a1 _labelGeometry];
}

id objc_msgSend__labelItems(void *a1, const char *a2, ...)
{
  return _[a1 _labelItems];
}

id objc_msgSend__labelListViewClassForRoute_step_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelListViewClassForRoute:step:");
}

id objc_msgSend__labelMarker(void *a1, const char *a2, ...)
{
  return _[a1 _labelMarker];
}

id objc_msgSend__labelMarkerAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 _labelMarkerAtPoint:];
}

id objc_msgSend__labelMarkerForCustomFeatureAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelMarkerForCustomFeatureAnnotation:");
}

id objc_msgSend__labelVerticalSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _labelVerticalSpacing];
}

id objc_msgSend__labelViewForInstructionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelViewForInstructionType:");
}

id objc_msgSend__labelWithText_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_labelWithText:size:");
}

id objc_msgSend__laneViewForLane_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_laneViewForLane:");
}

id objc_msgSend__lastKnownETAForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastKnownETAForIndexPath:");
}

id objc_msgSend__lastKnownETAForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastKnownETAForItem:");
}

id objc_msgSend__lastSelectionDates(void *a1, const char *a2, ...)
{
  return _[a1 _lastSelectionDates];
}

id objc_msgSend__lastSignHeight(void *a1, const char *a2, ...)
{
  return _[a1 _lastSignHeight];
}

id objc_msgSend__lastUpdatedStringWithElapsedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastUpdatedStringWithElapsedTime:");
}

id objc_msgSend__lastUpdatedTextAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _lastUpdatedTextAttributes];
}

id objc_msgSend__latestETA(void *a1, const char *a2, ...)
{
  return _[a1 _latestETA];
}

id objc_msgSend__launchRouteGeniusIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _launchRouteGeniusIfNeeded];
}

id objc_msgSend__launchTapToRadarKitWithDisplayReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_launchTapToRadarKitWithDisplayReason:");
}

id objc_msgSend__launchURLScheme(void *a1, const char *a2, ...)
{
  return _[a1 _launchURLScheme];
}

id objc_msgSend__layoutDottedLineForCell_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutDottedLineForCell:atIndexPath:");
}

id objc_msgSend__layoutDottedLines(void *a1, const char *a2, ...)
{
  return _[a1 _layoutDottedLines];
}

id objc_msgSend__layoutFrameForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutFrameForSection:");
}

id objc_msgSend__layoutItemForInstructionType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutItemForInstructionType:");
}

id objc_msgSend__layoutRouteStepCalloutAtIndex_depth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutRouteStepCalloutAtIndex:depth:");
}

id objc_msgSend__layoutSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutSubviews:");
}

id objc_msgSend__layoutURLForType_(void *a1, const char *a2, ...)
{
  return [a1 _layoutURLForType:];
}

id objc_msgSend__layoutforDetentIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutforDetentIdentifier:");
}

id objc_msgSend__leaveCompletionWaitDispatchGroupWithReason_(void *a1, const char *a2, ...)
{
  return [a1 _leaveCompletionWaitDispatchGroupWithReason:];
}

id objc_msgSend__leftSecondLineString(void *a1, const char *a2, ...)
{
  return _[a1 _leftSecondLineString];
}

id objc_msgSend__leftmostVisibleLaneIndex(void *a1, const char *a2, ...)
{
  return _[a1 _leftmostVisibleLaneIndex];
}

id objc_msgSend__legalDisclosureString(void *a1, const char *a2, ...)
{
  return _[a1 _legalDisclosureString];
}

id objc_msgSend__legendStringForDistanceString_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_legendStringForDistanceString:index:");
}

id objc_msgSend__lengthUnitFromUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lengthUnitFromUnit:");
}

id objc_msgSend__libraryBadgeTypeFromPlaceItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_libraryBadgeTypeFromPlaceItem:");
}

id objc_msgSend__likeButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 _likeButtonPressed];
}

id objc_msgSend__limitFrameRate_forReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_limitFrameRate:forReason:");
}

id objc_msgSend__lineColorViewWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lineColorViewWithStyle:");
}

id objc_msgSend__lineHeight(void *a1, const char *a2, ...)
{
  return _[a1 _lineHeight];
}

id objc_msgSend__lineSegmentsIntersectLineAPoint1_lineAPoint2_lineBPoint1_lineBPoint2_outIntersectionPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lineSegmentsIntersectLineAPoint1:lineAPoint2:lineBPoint1:lineBPoint2:outIntersectionPoint:");
}

id objc_msgSend__linearFocusMovementSequences(void *a1, const char *a2, ...)
{
  return _[a1 _linearFocusMovementSequences];
}

id objc_msgSend__linkButtonWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_linkButtonWithTitle:");
}

id objc_msgSend__linkColorTypeForStopAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_linkColorTypeForStopAtIndex:");
}

id objc_msgSend__listInstructionForStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_listInstructionForStep:");
}

id objc_msgSend__listInstructionStringForStep_(void *a1, const char *a2, ...)
{
  return [a1 _listInstructionStringForStep:];
}

id objc_msgSend__loadActions(void *a1, const char *a2, ...)
{
  return _[a1 _loadActions];
}

id objc_msgSend__loadAsset(void *a1, const char *a2, ...)
{
  return _[a1 _loadAsset];
}

id objc_msgSend__loadCachedWebBundleVersion(void *a1, const char *a2, ...)
{
  return _[a1 _loadCachedWebBundleVersion];
}

id objc_msgSend__loadCompanyLogoForSize_authorError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadCompanyLogoForSize:authorError:completion:");
}

id objc_msgSend__loadContent(void *a1, const char *a2, ...)
{
  return _[a1 _loadContent];
}

id objc_msgSend__loadContentAndSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 _loadContentAndSuggestions];
}

id objc_msgSend__loadContentAndSuggestionsOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadContentAndSuggestionsOfType:");
}

id objc_msgSend__loadData(void *a1, const char *a2, ...)
{
  return _[a1 _loadData];
}

id objc_msgSend__loadDataSource(void *a1, const char *a2, ...)
{
  return _[a1 _loadDataSource];
}

id objc_msgSend__loadExpandedIdentifierPaths(void *a1, const char *a2, ...)
{
  return _[a1 _loadExpandedIdentifierPaths];
}

id objc_msgSend__loadFromUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _loadFromUserDefaults];
}

id objc_msgSend__loadGarage(void *a1, const char *a2, ...)
{
  return _[a1 _loadGarage];
}

id objc_msgSend__loadGarageWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadGarageWithCompletion:");
}

id objc_msgSend__loadImageIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadImageIfNeeded];
}

id objc_msgSend__loadInternalDebugSetting(void *a1, const char *a2, ...)
{
  return _[a1 _loadInternalDebugSetting];
}

id objc_msgSend__loadLookAroundContainerView(void *a1, const char *a2, ...)
{
  return _[a1 _loadLookAroundContainerView];
}

id objc_msgSend__loadMapsForWindowScene_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadMapsForWindowScene:withCompletion:");
}

id objc_msgSend__loadMenuActionImages(void *a1, const char *a2, ...)
{
  return _[a1 _loadMenuActionImages];
}

id objc_msgSend__loadOrder(void *a1, const char *a2, ...)
{
  return _[a1 _loadOrder];
}

id objc_msgSend__loadPOIImage(void *a1, const char *a2, ...)
{
  return _[a1 _loadPOIImage];
}

id objc_msgSend__loadParkedCarViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadParkedCarViewControllerIfNeeded];
}

id objc_msgSend__loadPhotoFromAsset_shouldDegrade_scale_progressHandler_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadPhotoFromAsset:shouldDegrade:scale:progressHandler:completion:");
}

id objc_msgSend__loadReportHistoryContent(void *a1, const char *a2, ...)
{
  return _[a1 _loadReportHistoryContent];
}

id objc_msgSend__loadReports(void *a1, const char *a2, ...)
{
  return _[a1 _loadReports];
}

id objc_msgSend__loadReportsAndIncidents(void *a1, const char *a2, ...)
{
  return _[a1 _loadReportsAndIncidents];
}

id objc_msgSend__loadSettingsTipView(void *a1, const char *a2, ...)
{
  return _[a1 _loadSettingsTipView];
}

id objc_msgSend__loadSortType(void *a1, const char *a2, ...)
{
  return _[a1 _loadSortType];
}

id objc_msgSend__loadStackViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadStackViewIfNeeded];
}

id objc_msgSend__loadSuggestionViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _loadSuggestionViewIfNeeded];
}

id objc_msgSend__loadUnpairedVehicles(void *a1, const char *a2, ...)
{
  return _[a1 _loadUnpairedVehicles];
}

id objc_msgSend__loadUpairedVehicles(void *a1, const char *a2, ...)
{
  return _[a1 _loadUpairedVehicles];
}

id objc_msgSend__loadWaypointWithAddress_handler_traits_networkActivityHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWaypointWithAddress:handler:traits:networkActivityHandler:");
}

id objc_msgSend__loadWaypointWithCorrectedMapItem_coordinate_handler_traits_networkActivityHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWaypointWithCorrectedMapItem:coordinate:handler:traits:networkActivityHandler:");
}

id objc_msgSend__loadWaypointWithMapItem_handler_traits_networkActivityHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWaypointWithMapItem:handler:traits:networkActivityHandler:");
}

id objc_msgSend__loadingAndErrorViewFrame(void *a1, const char *a2, ...)
{
  return _[a1 _loadingAndErrorViewFrame];
}

id objc_msgSend__loadingDataProviders(void *a1, const char *a2, ...)
{
  return _[a1 _loadingDataProviders];
}

id objc_msgSend__loadingSection(void *a1, const char *a2, ...)
{
  return _[a1 _loadingSection];
}

id objc_msgSend__loadingString(void *a1, const char *a2, ...)
{
  return _[a1 _loadingString];
}

id objc_msgSend__localSearchViewConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _localSearchViewConstraints];
}

id objc_msgSend__localSearchViewControllerDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localSearchViewControllerDidChange:");
}

id objc_msgSend__localSearchViewHeight(void *a1, const char *a2, ...)
{
  return _[a1 _localSearchViewHeight];
}

id objc_msgSend__localSectionForGlobalSectionIndex_forSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localSectionForGlobalSectionIndex:forSection:");
}

id objc_msgSend__localeForCode_(void *a1, const char *a2, ...)
{
  return [a1 _localeForCode:];
}

id objc_msgSend__localizedCashFaresLabel(void *a1, const char *a2, ...)
{
  return _[a1 _localizedCashFaresLabel];
}

id objc_msgSend__localizedCategoryNamesForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedCategoryNamesForType:");
}

id objc_msgSend__localizedHours(void *a1, const char *a2, ...)
{
  return _[a1 _localizedHours];
}

id objc_msgSend__localizedICFaresLabel(void *a1, const char *a2, ...)
{
  return _[a1 _localizedICFaresLabel];
}

id objc_msgSend__localizedInformationTitle(void *a1, const char *a2, ...)
{
  return _[a1 _localizedInformationTitle];
}

id objc_msgSend__localizedMessage(void *a1, const char *a2, ...)
{
  return _[a1 _localizedMessage];
}

id objc_msgSend__localizedMoreInformationTitle(void *a1, const char *a2, ...)
{
  return _[a1 _localizedMoreInformationTitle];
}

id objc_msgSend__localizedNameForPrioritizationOption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedNameForPrioritizationOption:");
}

id objc_msgSend__localizedOptionalInformationTitle(void *a1, const char *a2, ...)
{
  return _[a1 _localizedOptionalInformationTitle];
}

id objc_msgSend__localizedReasonForHandoffError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_localizedReasonForHandoffError:");
}

id objc_msgSend__localizedStringForAddressCorrectionOutcome_(void *a1, const char *a2, ...)
{
  return [a1 _localizedStringForAddressCorrectionOutcome:];
}

id objc_msgSend__localizedTitle(void *a1, const char *a2, ...)
{
  return _[a1 _localizedTitle];
}

id objc_msgSend__locallyCachedReviewedPlaceForMUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_locallyCachedReviewedPlaceForMUID:");
}

id objc_msgSend__location_isEquivalentToLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_location:isEquivalentToLocation:");
}

id objc_msgSend__locationAccuracyInScreenPoints(void *a1, const char *a2, ...)
{
  return _[a1 _locationAccuracyInScreenPoints];
}

id objc_msgSend__locationExpirationTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _locationExpirationTimerFired];
}

id objc_msgSend__lockAndStartIdleTimer(void *a1, const char *a2, ...)
{
  return _[a1 _lockAndStartIdleTimer];
}

id objc_msgSend__lockMergeActivities(void *a1, const char *a2, ...)
{
  return _[a1 _lockMergeActivities];
}

id objc_msgSend__lockupByAddingRoutingModes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lockupByAddingRoutingModes:");
}

id objc_msgSend__lockupWithAppProxy_appIcon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lockupWithAppProxy:appIcon:");
}

id objc_msgSend__lockupWithAppStoreApp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lockupWithAppStoreApp:");
}

id objc_msgSend__logAnalyticsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _logAnalyticsIfNeeded];
}

id objc_msgSend__logCurrentNavState_(void *a1, const char *a2, ...)
{
  return [a1 _logCurrentNavState:];
}

id objc_msgSend__logDiscardIfNeededForFeedback_userInfo_feedbackObjectToUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logDiscardIfNeededForFeedback:userInfo:feedbackObjectToUpdate:");
}

id objc_msgSend__logResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logResponse:");
}

id objc_msgSend__logUGCAction_withIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logUGCAction:withIndex:");
}

id objc_msgSend__longPressGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _longPressGestureRecognizer];
}

id objc_msgSend__lookAroundAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _lookAroundAvailability];
}

id objc_msgSend__lookAroundButtonPlaceCardItem(void *a1, const char *a2, ...)
{
  return _[a1 _lookAroundButtonPlaceCardItem];
}

id objc_msgSend__lookupKeyForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lookupKeyForEntry:");
}

id objc_msgSend__lookupPolicyForAllExtensions(void *a1, const char *a2, ...)
{
  return _[a1 _lookupPolicyForAllExtensions];
}

id objc_msgSend__lookupPolicyWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 _lookupPolicyWithBlock:];
}

id objc_msgSend__lowFuelImageDataForEngineType_isCarPlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lowFuelImageDataForEngineType:isCarPlay:");
}

id objc_msgSend__luminance(void *a1, const char *a2, ...)
{
  return _[a1 _luminance];
}

id objc_msgSend__macBaseActionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 _macBaseActionCoordinator];
}

id objc_msgSend__majorLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _majorLabelColor];
}

id objc_msgSend__maneuver(void *a1, const char *a2, ...)
{
  return _[a1 _maneuver];
}

id objc_msgSend__maneuverArtworkForDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maneuverArtworkForDirection:");
}

id objc_msgSend__maneuverDescriptionForGuidanceEvent_routeStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maneuverDescriptionForGuidanceEvent:routeStep:");
}

id objc_msgSend__maneuverGuidanceInfos(void *a1, const char *a2, ...)
{
  return _[a1 _maneuverGuidanceInfos];
}

id objc_msgSend__maneuverID(void *a1, const char *a2, ...)
{
  return _[a1 _maneuverID];
}

id objc_msgSend__maneuverIsDrawnByDrawRect(void *a1, const char *a2, ...)
{
  return _[a1 _maneuverIsDrawnByDrawRect];
}

id objc_msgSend__maneuverStateForLocation_distanceToManeuver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maneuverStateForLocation:distanceToManeuver:");
}

id objc_msgSend__maneuverTypeRequiresDrawingPaths_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maneuverTypeRequiresDrawingPaths:");
}

id objc_msgSend__maneuverVerticalPrimaryConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _maneuverVerticalPrimaryConstraint];
}

id objc_msgSend__manuallyFrameStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manuallyFrameStep:");
}

id objc_msgSend__mapAndWeatherAttribution(void *a1, const char *a2, ...)
{
  return _[a1 _mapAndWeatherAttribution];
}

id objc_msgSend__mapContext(void *a1, const char *a2, ...)
{
  return _[a1 _mapContext];
}

id objc_msgSend__mapControlGutterWidth(void *a1, const char *a2, ...)
{
  return _[a1 _mapControlGutterWidth];
}

id objc_msgSend__mapInsetsConstraintsForHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapInsetsConstraintsForHost:");
}

id objc_msgSend__mapIsSprMap_(void *a1, const char *a2, ...)
{
  return [a1 _mapIsSprMap:];
}

id objc_msgSend__mapItemAppleRatings(void *a1, const char *a2, ...)
{
  return _[a1 _mapItemAppleRatings];
}

id objc_msgSend__mapItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapItemAtIndex:");
}

id objc_msgSend__mapItemBackedByURL_(void *a1, const char *a2, ...)
{
  return [a1 _mapItemBackedByURL];
}

id objc_msgSend__mapItemBySettingIsTransitDisplayFeature_(void *a1, const char *a2, ...)
{
  return [a1 _mapItemBySettingIsTransitDisplayFeature:];
}

id objc_msgSend__mapItemByStrippingOptionalData(void *a1, const char *a2, ...)
{
  return _[a1 _mapItemByStrippingOptionalData];
}

id objc_msgSend__mapItemFromHandle_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapItemFromHandle:completionHandler:");
}

id objc_msgSend__mapKitZoomLevelForVectorKitTileZoomLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapKitZoomLevelForVectorKitTileZoomLevel:");
}

id objc_msgSend__mapLayer(void *a1, const char *a2, ...)
{
  return _[a1 _mapLayer];
}

id objc_msgSend__mapModeAXIdentifierForCurrentMapType(void *a1, const char *a2, ...)
{
  return _[a1 _mapModeAXIdentifierForCurrentMapType];
}

id objc_msgSend__mapModeButtonImageNameForCurrentMapType(void *a1, const char *a2, ...)
{
  return _[a1 _mapModeButtonImageNameForCurrentMapType];
}

id objc_msgSend__mapModeButtonPointSizeForCurrentMapType(void *a1, const char *a2, ...)
{
  return _[a1 _mapModeButtonPointSizeForCurrentMapType];
}

id objc_msgSend__mapModeSelector(void *a1, const char *a2, ...)
{
  return _[a1 _mapModeSelector];
}

id objc_msgSend__mapPitchRadians(void *a1, const char *a2, ...)
{
  return _[a1 _mapPitchRadians];
}

id objc_msgSend__mapRectApproximatingRouteFromStartPOIShape_toEndPOIShapes_includePadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapRectApproximatingRouteFromStartPOIShape:toEndPOIShapes:includePadding:");
}

id objc_msgSend__mapRectForRouteLines_includePadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapRectForRouteLines:includePadding:");
}

id objc_msgSend__mapRectForRoutes_includeCompassInset_startPOIShape_endPOIShapes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapRectForRoutes:includeCompassInset:startPOIShape:endPOIShapes:");
}

id objc_msgSend__mapRectForRoutes_includeCompassInset_waypoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapRectForRoutes:includeCompassInset:waypoints:");
}

id objc_msgSend__mapRotationRadians(void *a1, const char *a2, ...)
{
  return _[a1 _mapRotationRadians];
}

id objc_msgSend__mapSnapshotImage(void *a1, const char *a2, ...)
{
  return _[a1 _mapSnapshotImage];
}

id objc_msgSend__mapType(void *a1, const char *a2, ...)
{
  return _[a1 _mapType];
}

id objc_msgSend__mapTypeFromMapView_(void *a1, const char *a2, ...)
{
  return [a1 _mapTypeFromMapView:];
}

id objc_msgSend__mapView(void *a1, const char *a2, ...)
{
  return _[a1 _mapView];
}

id objc_msgSend__mapViewFitsLabelMarker_withEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapViewFitsLabelMarker:withEdgeInsets:");
}

id objc_msgSend__mapViewIfCurrent(void *a1, const char *a2, ...)
{
  return _[a1 _mapViewIfCurrent];
}

id objc_msgSend__mapWidgetChromeViewController(void *a1, const char *a2, ...)
{
  return _[a1 _mapWidgetChromeViewController];
}

id objc_msgSend__mapkit_addPointerInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_addPointerInteraction");
}

id objc_msgSend__mapkit_addPointerInteractionWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_addPointerInteractionWithDelegate:];
}

id objc_msgSend__mapkit_attributedLiveTransitStringFromDepartureString_departure_textAttributes_darkMode_symbolOverrideColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedLiveTransitStringFromDepartureString:departure:textAttributes:darkMode:symbolOverrideColor:");
}

id objc_msgSend__mapkit_attributedStringByApplyingBindingFormatReplacements_defaultReplacementAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedStringByApplyingBindingFormatReplacements:defaultReplacementAttributes:");
}

id objc_msgSend__mapkit_attributedStringForComposedString_defaultAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedStringForComposedString:defaultAttributes:");
}

id objc_msgSend__mapkit_attributedStringForComposedString_defaultAttributes_argumentOverrideHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedStringForComposedString:defaultAttributes:argumentOverrideHandler:");
}

id objc_msgSend__mapkit_attributedStringWithBindingFormat_replacements_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedStringWithBindingFormat:replacements:attributes:");
}

id objc_msgSend__mapkit_attributedTransitStringForServerFormattedString_defaultAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_attributedTransitStringForServerFormattedString:defaultAttributes:");
}

id objc_msgSend__mapkit_clearMapItemDonationFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_clearMapItemDonationFields");
}

id objc_msgSend__mapkit_colorForTransitLine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_colorForTransitLine:");
}

id objc_msgSend__mapkit_colorNamed_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_colorNamed:];
}

id objc_msgSend__mapkit_colorNamed_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_colorNamed:compatibleWithTraitCollection:");
}

id objc_msgSend__mapkit_componentsJoinedInCommaDelimitedList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_componentsJoinedInCommaDelimitedList");
}

id objc_msgSend__mapkit_contentCompressionResistancePriorityForAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_contentCompressionResistancePriorityForAxis:");
}

id objc_msgSend__mapkit_contentHuggingPriorityForAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_contentHuggingPriorityForAxis:");
}

id objc_msgSend__mapkit_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_dequeueReusableCellWithIdentifier:");
}

id objc_msgSend__mapkit_descriptionForTimeSinceDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_descriptionForTimeSinceDate:");
}

id objc_msgSend__mapkit_descriptionForTimeSinceDate_referenceDate_smallestUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_descriptionForTimeSinceDate:referenceDate:smallestUnit:");
}

id objc_msgSend__mapkit_descriptionForTimeSinceDate_referenceDate_smallestUnit_timeUntilNextUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_descriptionForTimeSinceDate:referenceDate:smallestUnit:timeUntilNextUpdate:");
}

id objc_msgSend__mapkit_errorWithDirectionsError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_errorWithDirectionsError:");
}

id objc_msgSend__mapkit_errorWithDirectionsError_stringTokens_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_errorWithDirectionsError:stringTokens:");
}

id objc_msgSend__mapkit_fittingSize(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_fittingSize];
}

id objc_msgSend__mapkit_fontByAddingFeaturesForTabularFigures(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_fontByAddingFeaturesForTabularFigures];
}

id objc_msgSend__mapkit_fontByAddingFeaturesForTimeDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_fontByAddingFeaturesForTimeDisplay");
}

id objc_msgSend__mapkit_fontDescriptorByAddingFeaturesForTabularFigures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_fontDescriptorByAddingFeaturesForTabularFigures");
}

id objc_msgSend__mapkit_fontDescriptorByAddingFeaturesForTimeDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_fontDescriptorByAddingFeaturesForTimeDisplay");
}

id objc_msgSend__mapkit_fontDescriptorByAddingFeaturesForTimeDisplayUseMonospace_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_fontDescriptorByAddingFeaturesForTimeDisplayUseMonospace];
}

id objc_msgSend__mapkit_fontWithWeight_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_fontWithWeight:];
}

id objc_msgSend__mapkit_forceSeparatorFrameToCGRectZero(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_forceSeparatorFrameToCGRectZero");
}

id objc_msgSend__mapkit_formattedStringForCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_formattedStringForCoordinate:");
}

id objc_msgSend__mapkit_hasMUID(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_hasMUID];
}

id objc_msgSend__mapkit_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_imageNamed:];
}

id objc_msgSend__mapkit_imageWithAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_imageWithAlpha:");
}

id objc_msgSend__mapkit_isCLDenied(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_isCLDenied];
}

id objc_msgSend__mapkit_isCLLocationUnknown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_isCLLocationUnknown");
}

id objc_msgSend__mapkit_isDarkModeEnabled(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_isDarkModeEnabled];
}

id objc_msgSend__mapkit_isDirectionsError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_isDirectionsError");
}

id objc_msgSend__mapkit_isRTL(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_isRTL];
}

id objc_msgSend__mapkit_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_layoutIfNeeded");
}

id objc_msgSend__mapkit_lineHeight(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_lineHeight];
}

id objc_msgSend__mapkit_localizedDistanceStringWithMeters_abbreviated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_localizedDistanceStringWithMeters:abbreviated:");
}

id objc_msgSend__mapkit_locationErrorSettingsURL(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_locationErrorSettingsURL];
}

id objc_msgSend__mapkit_mapRegionEnclosingAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_mapRegionEnclosingAnnotations:");
}

id objc_msgSend__mapkit_mapRegionForCoordinateRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_mapRegionForCoordinateRegion:");
}

id objc_msgSend__mapkit_multiPartAttributedStringForComposedStrings_defaultAttributes_repeatedSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_multiPartAttributedStringForComposedStrings:defaultAttributes:repeatedSeparator:");
}

id objc_msgSend__mapkit_populateFieldsForDonationOfMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_populateFieldsForDonationOfMapItem:");
}

id objc_msgSend__mapkit_preferredFirstPhotoVendor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFirstPhotoVendor");
}

id objc_msgSend__mapkit_preferredFontForTextStyleInTableViewCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFontForTextStyleInTableViewCell:");
}

id objc_msgSend__mapkit_preferredFontForTextStyleInTableViewCell_addingSymbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFontForTextStyleInTableViewCell:addingSymbolicTraits:");
}

id objc_msgSend__mapkit_preferredFontForTextStyleInTableViewCell_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFontForTextStyleInTableViewCell:weight:");
}

id objc_msgSend__mapkit_preferredFontForTextStyleInTableViewCell_weight_contentSizeCategory_symbolicTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFontForTextStyleInTableViewCell:weight:contentSizeCategory:symbolicTraits:");
}

id objc_msgSend__mapkit_preferredFontForTextStyleInTableViewCell_weight_grade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_preferredFontForTextStyleInTableViewCell:weight:grade:");
}

id objc_msgSend__mapkit_resolvedFlatPhotoList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_resolvedFlatPhotoList");
}

id objc_msgSend__mapkit_scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_scaledValueForValue:];
}

id objc_msgSend__mapkit_scaledValueForValue_scalingForMacIdiom_respectingTraitEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_scaledValueForValue:scalingForMacIdiom:respectingTraitEnvironment:");
}

id objc_msgSend__mapkit_setArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_setArrangedSubviews:");
}

id objc_msgSend__mapkit_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend__mapkit_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_setContentHuggingPriority:forAxis:");
}

id objc_msgSend__mapkit_setNeedsLayout(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_setNeedsLayout];
}

id objc_msgSend__mapkit_sharedLocationContactIdentifer(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_sharedLocationContactIdentifer];
}

id objc_msgSend__mapkit_supportsFullScreenExperience(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_supportsFullScreenExperience");
}

id objc_msgSend__mapkit_timeToExpire(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_timeToExpire];
}

id objc_msgSend__mapkit_transitArtworkImageWithDataSource_size_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_transitArtworkImageWithDataSource:size:scale:");
}

id objc_msgSend__mapkit_transitArtworkImageWithDataSource_size_scale_nightMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_transitArtworkImageWithDataSource:size:scale:nightMode:");
}

id objc_msgSend__mapkit_transitIncident(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapkit_transitIncident");
}

id objc_msgSend__mapkit_voiceOverLocalizedDistanceStringWithMeters_(void *a1, const char *a2, ...)
{
  return [a1 _mapkit_voiceOverLocalizedDistanceStringWithMeters:];
}

id objc_msgSend__mapsAppStateCreateActivity_(void *a1, const char *a2, ...)
{
  return [a1 _mapsAppStateCreateActivity:];
}

id objc_msgSend__mapsAppStateRestoreActivity_withAssumedSourceFidelity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsAppStateRestoreActivity:withAssumedSourceFidelity:");
}

id objc_msgSend__mapsCarPlay_connectApplicationSceneIfNeededForSession_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCarPlay_connectApplicationSceneIfNeededForSession:completion:");
}

id objc_msgSend__mapsCar_fontForTextStyle_traits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_fontForTextStyle:traits:");
}

id objc_msgSend__mapsCar_fontForTextStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_fontForTextStyle:weight:");
}

id objc_msgSend__mapsCar_fontForTextStyle_weight_grade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_fontForTextStyle:weight:grade:");
}

id objc_msgSend__mapsCar_injectBlurView(void *a1, const char *a2, ...)
{
  return [a1 _mapsCar_injectBlurView];
}

id objc_msgSend__mapsCar_insertFocusContainerGuide(void *a1, const char *a2, ...)
{
  return [a1 _mapsCar_insertFocusContainerGuide];
}

id objc_msgSend__mapsCar_insertFocusGuideWithOriginView_toDestinationFocusEnvironments_forDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_insertFocusGuideWithOriginView:toDestinationFocusEnvironments:forDirection:");
}

id objc_msgSend__mapsCar_privateSystemImageNamed_textStyle_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_privateSystemImageNamed:textStyle:scale:");
}

id objc_msgSend__mapsCar_rebuildContextsForCurrentAppState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_rebuildContextsForCurrentAppState");
}

id objc_msgSend__mapsCar_recursiveSubviewsWithClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_recursiveSubviewsWithClass:");
}

id objc_msgSend__mapsCar_scene_willConnectToSession_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_scene:willConnectToSession:options:");
}

id objc_msgSend__mapsCar_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_systemImageNamed:");
}

id objc_msgSend__mapsCar_systemImageNamed_pointSize_(void *a1, const char *a2, ...)
{
  return [a1 _mapsCar_systemImageNamed:pointSize:];
}

id objc_msgSend__mapsCar_systemImageNamed_pointSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_systemImageNamed:pointSize:weight:");
}

id objc_msgSend__mapsCar_systemImageNamed_textStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_systemImageNamed:textStyle:");
}

id objc_msgSend__mapsCar_systemImageNamed_textStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_systemImageNamed:textStyle:weight:");
}

id objc_msgSend__mapsCar_updateShadow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsCar_updateShadow");
}

id objc_msgSend__mapsCategoryId(void *a1, const char *a2, ...)
{
  return _[a1 _mapsCategoryId];
}

id objc_msgSend__mapsDefaultTraits(void *a1, const char *a2, ...)
{
  return _[a1 _mapsDefaultTraits];
}

id objc_msgSend__mapsDescriptionWithInstructionString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsDescriptionWithInstructionString:");
}

id objc_msgSend__mapsThemeStyleKey_(void *a1, const char *a2, ...)
{
  return [a1 _mapsThemeStyleKey:];
}

id objc_msgSend__mapsUserActivity(void *a1, const char *a2, ...)
{
  return _[a1 _mapsUserActivity];
}

id objc_msgSend__maps_HStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_HStack");
}

id objc_msgSend__maps_Spacer_(void *a1, const char *a2, ...)
{
  return [a1 _maps_Spacer:];
}

id objc_msgSend__maps_Spacer_visibilityModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_Spacer:visibilityModel:");
}

id objc_msgSend__maps_UUIDWithData_(void *a1, const char *a2, ...)
{
  return [a1 _maps_UUIDWithData:];
}

id objc_msgSend__maps_UUIDWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_UUIDWithUUIDString:];
}

id objc_msgSend__maps_VStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_VStack");
}

id objc_msgSend__maps_abbreviatedDateStringWithoutYearForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_abbreviatedDateStringWithoutYearForDate:");
}

id objc_msgSend__maps_addArrangedContentHuggingSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addArrangedContentHuggingSubview:");
}

id objc_msgSend__maps_addArrangedContentHuggingSubview_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addArrangedContentHuggingSubview:padding:");
}

id objc_msgSend__maps_addArrangedExpandingSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addArrangedExpandingSubview:");
}

id objc_msgSend__maps_addArrangedExpandingSubview_padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addArrangedExpandingSubview:padding:");
}

id objc_msgSend__maps_addHairlineAtBottomWithLeadingMargin_trailingMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addHairlineAtBottomWithLeadingMargin:trailingMargin:");
}

id objc_msgSend__maps_addHairlineAtBottomWithMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addHairlineAtBottomWithMargin:");
}

id objc_msgSend__maps_addHairlineAtTopWithMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addHairlineAtTopWithMargin:");
}

id objc_msgSend__maps_addHairlineAtTrailingWithMargin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addHairlineAtTrailingWithMargin:");
}

id objc_msgSend__maps_addTrafficIncidentsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addTrafficIncidentsObserver:");
}

id objc_msgSend__maps_addressBookAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_addressBookAllowed");
}

id objc_msgSend__maps_alertActionsForTransitLines_selectionHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_alertActionsForTransitLines:selectionHandlers:");
}

id objc_msgSend__maps_alertActionsForTransitLinesWithNames_artworks_selectionHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_alertActionsForTransitLinesWithNames:artworks:selectionHandlers:");
}

id objc_msgSend__maps_alertControllerForTicketedSegments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_alertControllerForTicketedSegments:");
}

id objc_msgSend__maps_alignTopToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_alignTopToView:");
}

id objc_msgSend__maps_analyticsEventValue(void *a1, const char *a2, ...)
{
  return [a1 _maps_analyticsEventValue];
}

id objc_msgSend__maps_animateForAndromeda_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_animateForAndromeda:animations:");
}

id objc_msgSend__maps_animateForAndromeda_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_animateForAndromeda:animations:completion:");
}

id objc_msgSend__maps_annotateViewWithPlaceCardViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_annotateViewWithPlaceCardViewController:");
}

id objc_msgSend__maps_appendIdentifiersForSection_items_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_appendIdentifiersForSection:items:");
}

id objc_msgSend__maps_appendIdentifiersForSection_items_reloadingChangesFromPreviousItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_appendIdentifiersForSection:items:reloadingChangesFromPreviousItems:");
}

id objc_msgSend__maps_applicationScenes(void *a1, const char *a2, ...)
{
  return [a1 _maps_applicationScenes];
}

id objc_msgSend__maps_applyChangesWithNewRootSnapshot_oldRootSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_applyChangesWithNewRootSnapshot:oldRootSnapshot:");
}

id objc_msgSend__maps_artworkListFromStepBadges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_artworkListFromStepBadges:");
}

id objc_msgSend__maps_attributedStringByAppendingRidesharingSpecialPricingBadge_representativeContentFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_attributedStringByAppendingRidesharingSpecialPricingBadge:representativeContentFont:");
}

id objc_msgSend__maps_attributedStringByReplacingWhitespaceToAvoidOrphanWords(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_attributedStringByReplacingWhitespaceToAvoidOrphanWords");
}

id objc_msgSend__maps_attributedStringWithExcessiveHeightCharacterSupport_(void *a1, const char *a2, ...)
{
  return [a1 _maps_attributedStringWithExcessiveHeightCharacterSupport];
}

id objc_msgSend__maps_autoCompletePerson(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_autoCompletePerson");
}

id objc_msgSend__maps_blurredImage_scale_(void *a1, const char *a2, ...)
{
  return [a1 _maps_blurredImage:scale:];
}

id objc_msgSend__maps_bodyScaledValueForValue_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_bodyScaledValueForValue:compatibleWithTraitCollection:");
}

id objc_msgSend__maps_boldSystemFontWithFixedSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_boldSystemFontWithFixedSize:];
}

id objc_msgSend__maps_boldSystemFontWithFixedSize_adaptiveFont_(void *a1, const char *a2, ...)
{
  return [a1 _maps_boldSystemFontWithFixedSize:adaptiveFont:];
}

id objc_msgSend__maps_boldSystemFontWithSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_boldSystemFontWithSize:];
}

id objc_msgSend__maps_boundingMapRect(void *a1, const char *a2, ...)
{
  return [a1 _maps_boundingMapRect];
}

id objc_msgSend__maps_boundingRectForStep_(void *a1, const char *a2, ...)
{
  return [a1 _maps_boundingRectForStep];
}

id objc_msgSend__maps_boundingRectForStep_fromPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_boundingRectForStep:fromPoint:");
}

id objc_msgSend__maps_buildDescriptionWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_buildDescriptionWithBlock:");
}

id objc_msgSend__maps_canAddShortcutForMapItem_(void *a1, const char *a2, ...)
{
  return [a1 _maps_canAddShortcutForMapItem:];
}

id objc_msgSend__maps_canAddToCollections(void *a1, const char *a2, ...)
{
  return [a1 _maps_canAddToCollections];
}

id objc_msgSend__maps_canRenameCollectionItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_canRenameCollectionItem");
}

id objc_msgSend__maps_cappedFont_withMaxPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_cappedFont:withMaxPoint:");
}

id objc_msgSend__maps_carPlayApplicationSceneDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_carPlayApplicationSceneDelegate");
}

id objc_msgSend__maps_carPlayScenes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_carPlayScenes");
}

id objc_msgSend__maps_carSceneDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_carSceneDelegate");
}

id objc_msgSend__maps_cardFooterActionButtonConfigurationWithBaseConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_cardFooterActionButtonConfigurationWithBaseConfiguration:");
}

id objc_msgSend__maps_cardFooterActionButtonConfigurationWithBaseConfiguration_isSecondary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_cardFooterActionButtonConfigurationWithBaseConfiguration:isSecondary:");
}

id objc_msgSend__maps_centeringFrameForView_size_inRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_centeringFrameForView:size:inRect:");
}

id objc_msgSend__maps_closestMapPointToMapPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_closestMapPointToMapPoint:");
}

id objc_msgSend__maps_colorFromHexRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 _maps_colorFromHexRepresentation];
}

id objc_msgSend__maps_colorFromHexString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_colorFromHexString];
}

id objc_msgSend__maps_colorMonochromeImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_colorMonochromeImageWithColor:");
}

id objc_msgSend__maps_colorNamed_(void *a1, const char *a2, ...)
{
  return [a1 _maps_colorNamed:];
}

id objc_msgSend__maps_colorizedImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_colorizedImageWithColor:");
}

id objc_msgSend__maps_commandWithEnableFeatureTitle_disableFeatureTitle_action_(void *a1, const char *a2, ...)
{
  return [a1 _maps_commandWithEnableFeatureTitle:disableFeatureTitle:action:];
}

id objc_msgSend__maps_commandWithEnableFeatureTitle_disableFeatureTitle_action_input_modifierFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_commandWithEnableFeatureTitle:disableFeatureTitle:action:input:modifierFlags:");
}

id objc_msgSend__maps_commitUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_commitUpdates");
}

id objc_msgSend__maps_commonInit(void *a1, const char *a2, ...)
{
  return [a1 _maps_commonInit];
}

id objc_msgSend__maps_compactMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_compactMap:");
}

id objc_msgSend__maps_composedImageScale_isRTL_(void *a1, const char *a2, ...)
{
  return [a1 _maps_composedImageScale:isRTL:];
}

id objc_msgSend__maps_composedRouteWithPersistentData_(void *a1, const char *a2, ...)
{
  return [a1 _maps_composedRouteWithPersistentData];
}

id objc_msgSend__maps_compressedSizeForWidth_withBlock_(void *a1, const char *a2, ...)
{
  return [a1 _maps_compressedSizeForWidth:withBlock:];
}

id objc_msgSend__maps_confirmationAlertControllerForBlockingTrip_userInterfaceIdiom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_confirmationAlertControllerForBlockingTrip:userInterfaceIdiom:completion:");
}

id objc_msgSend__maps_confirmationAlertControllerForBlockingTripInSummary_userInterfaceIdiom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_confirmationAlertControllerForBlockingTripInSummary:userInterfaceIdiom:completion:");
}

id objc_msgSend__maps_confirmationAlertControllerForDeletingCollections_userInterfaceIdiom_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_confirmationAlertControllerForDeletingCollections:userInterfaceIdiom:completion:");
}

id objc_msgSend__maps_constraintWithRHDAnchor_relation_constant_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintWithRHDAnchor:relation:constant:priority:");
}

id objc_msgSend__maps_constraintsEqualToEdgesOfLayoutGuide_insets_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsEqualToEdgesOfLayoutGuide:insets:priority:");
}

id objc_msgSend__maps_constraintsEqualToEdgesOfLayoutGuide_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsEqualToEdgesOfLayoutGuide:priority:");
}

id objc_msgSend__maps_constraintsEqualToEdgesOfView_insets_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsEqualToEdgesOfView:insets:priority:");
}

id objc_msgSend__maps_constraintsEqualToEdgesOfView_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsEqualToEdgesOfView:priority:");
}

id objc_msgSend__maps_constraintsForCenteringInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsForCenteringInView:");
}

id objc_msgSend__maps_constraintsForCenteringInView_edgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsForCenteringInView:edgeInsets:");
}

id objc_msgSend__maps_constraintsForCenteringInView_edgeInsets_priorities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsForCenteringInView:edgeInsets:priorities:");
}

id objc_msgSend__maps_constraintsForCenteringInView_priorities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_constraintsForCenteringInView:priorities:");
}

id objc_msgSend__maps_contactsMatchingQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_contactsMatchingQuery:");
}

id objc_msgSend__maps_containsExcessiveHeightCharacters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_containsExcessiveHeightCharacters");
}

id objc_msgSend__maps_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_containsObject:");
}

id objc_msgSend__maps_containsSearchResultEqualToResult_forPurpose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_containsSearchResultEqualToResult:forPurpose:");
}

id objc_msgSend__maps_contentSize(void *a1, const char *a2, ...)
{
  return [a1 _maps_contentSize];
}

id objc_msgSend__maps_convertToNavigableRouteWithTraits_errorHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_convertToNavigableRouteWithTraits:errorHandler:completionHandler:");
}

id objc_msgSend__maps_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_copy");
}

id objc_msgSend__maps_customPOIAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_customPOIAnnotation");
}

id objc_msgSend__maps_data(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_data");
}

id objc_msgSend__maps_dateDescriptionShort_timeZone_bookingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_dateDescriptionShort:timeZone:bookingDate:");
}

id objc_msgSend__maps_dateStringWithoutYearForDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_dateStringWithoutYearForDate:");
}

id objc_msgSend__maps_dayDescriptionStringShortDescription_timeZone_bookingDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_dayDescriptionStringShortDescription:timeZone:bookingDate:");
}

id objc_msgSend__maps_deepArrangedSubviews(void *a1, const char *a2, ...)
{
  return [a1 _maps_deepArrangedSubviews];
}

id objc_msgSend__maps_deepArrangedSubviewsExcluding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_deepArrangedSubviewsExcluding:");
}

id objc_msgSend__maps_defaultCollectionItemTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_defaultCollectionItemTitle");
}

id objc_msgSend__maps_description(void *a1, const char *a2, ...)
{
  return [a1 _maps_description];
}

id objc_msgSend__maps_detourTextForIdiom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_detourTextForIdiom:");
}

id objc_msgSend__maps_detourTextForIdiom_travelTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_detourTextForIdiom:travelTime:");
}

id objc_msgSend__maps_diffableDataSourceIdentifier(void *a1, const char *a2, ...)
{
  return [a1 _maps_diffableDataSourceIdentifier];
}

id objc_msgSend__maps_directionsWaypoints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_directionsWaypoints");
}

id objc_msgSend__maps_discreteSizeForSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_discreteSizeForSize:];
}

id objc_msgSend__maps_displayScaleOrMainScreenScale(void *a1, const char *a2, ...)
{
  return [a1 _maps_displayScaleOrMainScreenScale];
}

id objc_msgSend__maps_distanceStringFromDetourInformation(void *a1, const char *a2, ...)
{
  return [a1 _maps_distanceStringFromDetourInformation];
}

id objc_msgSend__maps_drawAtPoint_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_drawAtPoint:withFont:");
}

id objc_msgSend__maps_drawInRect_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_drawInRect:withFont:");
}

id objc_msgSend__maps_edgesObscuringContentIncludingContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_edgesObscuringContentIncludingContentInsets:");
}

id objc_msgSend__maps_effectiveDetentValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_effectiveDetentValues");
}

id objc_msgSend__maps_euclideanDistanceFromColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_euclideanDistanceFromColor:");
}

id objc_msgSend__maps_expiryDateForRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_expiryDateForRoute:");
}

id objc_msgSend__maps_externalDeviceDictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_externalDeviceDictionaryRepresentation");
}

id objc_msgSend__maps_findMyHandle(void *a1, const char *a2, ...)
{
  return [a1 _maps_findMyHandle];
}

id objc_msgSend__maps_firstContextOfClass_(void *a1, const char *a2, ...)
{
  return [a1 _maps_firstContextOfClass:];
}

id objc_msgSend__maps_firstValidMoveIndex(void *a1, const char *a2, ...)
{
  return [a1 _maps_firstValidMoveIndex];
}

id objc_msgSend__maps_fontProviderWeight_minimumPointSize_minimumSizeCategory_maximumPointSize_maximumSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_fontProviderWeight:minimumPointSize:minimumSizeCategory:maximumPointSize:maximumSizeCategory:");
}

id objc_msgSend__maps_fontWithMonospacedNumbers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_fontWithMonospacedNumbers");
}

id objc_msgSend__maps_fontWithTextStyle_weight_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_fontWithTextStyle:weight:compatibleWithTraitCollection:");
}

id objc_msgSend__maps_footerViewWithTitle_linkText_target_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_footerViewWithTitle:linkText:target:selector:");
}

id objc_msgSend__maps_formattedStringWithDefaultShortFormatStrings(void *a1, const char *a2, ...)
{
  return [a1 _maps_formattedStringWithDefaultShortFormatStrings];
}

id objc_msgSend__maps_getMapPoints_count_(void *a1, const char *a2, ...)
{
  return [a1 _maps_getMapPoints:count:];
}

id objc_msgSend__maps_getMapPoints_count_forStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_getMapPoints:count:forStep:");
}

id objc_msgSend__maps_globalCachesURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_globalCachesURL");
}

id objc_msgSend__maps_groupedHeaderViewWithTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_groupedHeaderViewWithTitle:");
}

id objc_msgSend__maps_groupedHeaderViewWithTitle_buttonTitle_target_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_groupedHeaderViewWithTitle:buttonTitle:target:selector:");
}

id objc_msgSend__maps_hasCustomPOIAnnotation(void *a1, const char *a2, ...)
{
  return [a1 _maps_hasCustomPOIAnnotation];
}

id objc_msgSend__maps_hexRepresentation(void *a1, const char *a2, ...)
{
  return [a1 _maps_hexRepresentation];
}

id objc_msgSend__maps_hexString(void *a1, const char *a2, ...)
{
  return [a1 _maps_hexString];
}

id objc_msgSend__maps_hydrateGeoMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_hydrateGeoMapItem:");
}

id objc_msgSend__maps_imageForNoContactWithDiameter_scale_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_imageForNoContactWithDiameter:scale:completion:");
}

id objc_msgSend__maps_imageIconWithBackgroundConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_imageIconWithBackgroundConfiguration:");
}

id objc_msgSend__maps_imageWithAspectFitScalingForMaximumSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_imageWithAspectFitScalingForMaximumSize:");
}

id objc_msgSend__maps_indexOfFirstNonEmptySection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_indexOfFirstNonEmptySection");
}

id objc_msgSend__maps_initializeRAPAppearance(void *a1, const char *a2, ...)
{
  return [a1 _maps_initializeRAPAppearance];
}

id objc_msgSend__maps_initializeRAPAppearanceWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_initializeRAPAppearanceWithStyle:");
}

id objc_msgSend__maps_intentsRestaurant(void *a1, const char *a2, ...)
{
  return [a1 _maps_intentsRestaurant];
}

id objc_msgSend__maps_interfaceStyle(void *a1, const char *a2, ...)
{
  return [a1 _maps_interfaceStyle];
}

id objc_msgSend__maps_internal_recursiveDescriptionOfItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_internal_recursiveDescriptionOfItem:");
}

id objc_msgSend__maps_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_intrinsicContentSize");
}

id objc_msgSend__maps_invertedImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_invertedImage");
}

id objc_msgSend__maps_isAnyApplicationOrCarPlayApplicationSceneConnected(void *a1, const char *a2, ...)
{
  return [a1 _maps_isAnyApplicationOrCarPlayApplicationSceneConnected];
}

id objc_msgSend__maps_isAnyApplicationOrCarPlayApplicationSceneForeground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isAnyApplicationOrCarPlayApplicationSceneForeground");
}

id objc_msgSend__maps_isAnyCarPlayApplicationSceneForeground(void *a1, const char *a2, ...)
{
  return [a1 _maps_isAnyCarPlayApplicationSceneForeground];
}

id objc_msgSend__maps_isAnySceneConnectedForRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isAnySceneConnectedForRole:");
}

id objc_msgSend__maps_isAnySceneForeground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isAnySceneForeground");
}

id objc_msgSend__maps_isAnySceneForegroundForRole_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isAnySceneForegroundForRole:");
}

id objc_msgSend__maps_isCarPlayApplicationScene_(void *a1, const char *a2, ...)
{
  return [a1 _maps_isCarPlayApplicationScene:];
}

id objc_msgSend__maps_isCarPlayWidgetScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isCarPlayWidgetScene:");
}

id objc_msgSend__maps_isEVChargingStation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isEVChargingStation");
}

id objc_msgSend__maps_isEqualToComposedRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isEqualToComposedRoute:");
}

id objc_msgSend__maps_isEqualToSearchStringForCurrentLocationSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isEqualToSearchStringForCurrentLocationSearchResult");
}

id objc_msgSend__maps_isFileNotFoundError_(void *a1, const char *a2, ...)
{
  return [a1 _maps_isFileNotFoundError:];
}

id objc_msgSend__maps_isHome(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isHome");
}

id objc_msgSend__maps_isHomeWorkOrSchool(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isHomeWorkOrSchool");
}

id objc_msgSend__maps_isHovering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isHovering");
}

id objc_msgSend__maps_isIncompleteVenueSearchResult(void *a1, const char *a2, ...)
{
  return [a1 _maps_isIncompleteVenueSearchResult];
}

id objc_msgSend__maps_isLargeAreaPlace(void *a1, const char *a2, ...)
{
  return [a1 _maps_isLargeAreaPlace];
}

id objc_msgSend__maps_isOfflineAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isOfflineAnnotation");
}

id objc_msgSend__maps_isOfflineClusterAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isOfflineClusterAnnotation");
}

id objc_msgSend__maps_isParkedCar(void *a1, const char *a2, ...)
{
  return [a1 _maps_isParkedCar];
}

id objc_msgSend__maps_isPrefixOfArray_(void *a1, const char *a2, ...)
{
  return [a1 _maps_isPrefixOfArray:];
}

id objc_msgSend__maps_isSchool(void *a1, const char *a2, ...)
{
  return [a1 _maps_isSchool];
}

id objc_msgSend__maps_isVenueOrBuilding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isVenueOrBuilding");
}

id objc_msgSend__maps_isVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_isVisible");
}

id objc_msgSend__maps_isWork(void *a1, const char *a2, ...)
{
  return [a1 _maps_isWork];
}

id objc_msgSend__maps_keyColor(void *a1, const char *a2, ...)
{
  return [a1 _maps_keyColor];
}

id objc_msgSend__maps_keyMapsSceneDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_keyMapsSceneDelegate");
}

id objc_msgSend__maps_keyMapsWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_keyMapsWindow");
}

id objc_msgSend__maps_keyMapsWindowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_keyMapsWindowScene");
}

id objc_msgSend__maps_lastContextOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_lastContextOfClass:");
}

id objc_msgSend__maps_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_lastObject");
}

id objc_msgSend__maps_layoutGuideInsideEdgesWithPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_layoutGuideInsideEdgesWithPriority:");
}

id objc_msgSend__maps_leftRHDAnchor(void *a1, const char *a2, ...)
{
  return [a1 _maps_leftRHDAnchor];
}

id objc_msgSend__maps_lightLevelPriority(void *a1, const char *a2, ...)
{
  return [a1 _maps_lightLevelPriority];
}

id objc_msgSend__maps_lineIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_lineIdentifiers");
}

id objc_msgSend__maps_lineShouldZoomMapRegionOnSelection(void *a1, const char *a2, ...)
{
  return [a1 _maps_lineShouldZoomMapRegionOnSelection];
}

id objc_msgSend__maps_lineSpacing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_lineSpacing");
}

id objc_msgSend__maps_loadLineInfoUsingTraits_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_loadLineInfoUsingTraits:withCompletion:");
}

id objc_msgSend__maps_loadedLineItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_loadedLineItems");
}

id objc_msgSend__maps_lockScreenSceneDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_lockScreenSceneDelegate");
}

id objc_msgSend__maps_logResponderChain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_logResponderChain");
}

id objc_msgSend__maps_map_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_map:");
}

id objc_msgSend__maps_mapItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapItem");
}

id objc_msgSend__maps_mapsCompanionDaemonXPCClientInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsCompanionDaemonXPCClientInterface");
}

id objc_msgSend__maps_mapsCompanionDaemonXPCInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsCompanionDaemonXPCInterface");
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointConsumerInterface(void *a1, const char *a2, ...)
{
  return [a1 _maps_mapsConnectionBrokerEndpointConsumerInterface];
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointProviderConnection(void *a1, const char *a2, ...)
{
  return [a1 _maps_mapsConnectionBrokerEndpointProviderConnection];
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointProviderInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsConnectionBrokerEndpointProviderInterface");
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointRecorderConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsConnectionBrokerEndpointRecorderConnection");
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointRecorderInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsConnectionBrokerEndpointRecorderInterface");
}

id objc_msgSend__maps_mapsConnectionBrokerEndpointSourceInterface(void *a1, const char *a2, ...)
{
  return [a1 _maps_mapsConnectionBrokerEndpointSourceInterface];
}

id objc_msgSend__maps_mapsPushDaemonXPCClientInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsPushDaemonXPCClientInterface");
}

id objc_msgSend__maps_mapsPushDaemonXPCInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsPushDaemonXPCInterface");
}

id objc_msgSend__maps_mapsSceneDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsSceneDelegate");
}

id objc_msgSend__maps_mapsSiriXPCClientInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsSiriXPCClientInterface");
}

id objc_msgSend__maps_mapsSiriXPCInterface(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_mapsSiriXPCInterface");
}

id objc_msgSend__maps_markerImageForMapItem_scale_size_useMarkerFallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_markerImageForMapItem:scale:size:useMarkerFallback:");
}

id objc_msgSend__maps_maxConstraintConstantForAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_maxConstraintConstantForAxis:");
}

id objc_msgSend__maps_maximumDateForRoutePlanning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_maximumDateForRoutePlanning");
}

id objc_msgSend__maps_maximumHeightWithFont_numberOfLines_displayScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_maximumHeightWithFont:numberOfLines:displayScale:");
}

id objc_msgSend__maps_minSideLengthForShieldSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_minSideLengthForShieldSize:];
}

id objc_msgSend__maps_minimumDateForRoutePlanningWithTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_minimumDateForRoutePlanningWithTimeZone:");
}

id objc_msgSend__maps_mostCommonColor(void *a1, const char *a2, ...)
{
  return [a1 _maps_mostCommonColor];
}

id objc_msgSend__maps_moveObjectAtIndex_toIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_moveObjectAtIndex:toIndex:");
}

id objc_msgSend__maps_moveOrAddObjectToTop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_moveOrAddObjectToTop:");
}

id objc_msgSend__maps_navHeadingFontWithPreferredSize_diameter_desiredPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_navHeadingFontWithPreferredSize:diameter:desiredPadding:");
}

id objc_msgSend__maps_needsUpdateWithSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_needsUpdateWithSelector:");
}

id objc_msgSend__maps_nextDayAtHour_timeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_nextDayAtHour:timeZone:");
}

id objc_msgSend__maps_nextWeekday_atHour_timeZone_(void *a1, const char *a2, ...)
{
  return [a1 _maps_nextWeekday:atHour:timeZone:];
}

id objc_msgSend__maps_numLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_numLines");
}

id objc_msgSend__maps_numberOfApplicationScenes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_numberOfApplicationScenes");
}

id objc_msgSend__maps_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_numberOfRowsInSection:");
}

id objc_msgSend__maps_numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_numberOfSections");
}

id objc_msgSend__maps_numericMonthDayString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_numericMonthDayString];
}

id objc_msgSend__maps_offlineCoverageRegionForRouteBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_offlineCoverageRegionForRouteBounds:");
}

id objc_msgSend__maps_offlineDownloadRegionForRouteBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_offlineDownloadRegionForRouteBounds:");
}

id objc_msgSend__maps_openApplicationSceneSuspendedWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_openApplicationSceneSuspendedWithCompletion:");
}

id objc_msgSend__maps_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 _maps_openURL:options:completionHandler:];
}

id objc_msgSend__maps_overridePreferredLayoutAttributesWithCompressedSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_overridePreferredLayoutAttributesWithCompressedSize");
}

id objc_msgSend__maps_paragraphStyleForHandlingExcessiveHeightString_withHyphenationFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_paragraphStyleForHandlingExcessiveHeightString:withHyphenationFactor:");
}

id objc_msgSend__maps_pillButtonConfigurationWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_pillButtonConfigurationWithImage:");
}

id objc_msgSend__maps_pillButtonConfigurationWithImage_scalingImageForDynamicText_scalingTitleForDynamicText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_pillButtonConfigurationWithImage:scalingImageForDynamicText:scalingTitleForDynamicText:");
}

id objc_msgSend__maps_placeAreaNameWithDefaultName_(void *a1, const char *a2, ...)
{
  return [a1 _maps_placeAreaNameWithDefaultName];
}

id objc_msgSend__maps_placeTitleWithDefaultTitle_(void *a1, const char *a2, ...)
{
  return [a1 _maps_placeTitleWithDefaultTitle];
}

id objc_msgSend__maps_platformController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_platformController");
}

id objc_msgSend__maps_preferredBookingDateWithTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 _maps_preferredBookingDateWithTimeZone:];
}

id objc_msgSend__maps_prefixMatchesForSearchString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_prefixMatchesForSearchString];
}

id objc_msgSend__maps_prepareForFirstUse(void *a1, const char *a2, ...)
{
  return [a1 _maps_prepareForFirstUse];
}

id objc_msgSend__maps_presentSimpleAlertWithTitle_message_dismissalActionTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_presentSimpleAlertWithTitle:message:dismissalActionTitle:");
}

id objc_msgSend__maps_primaryCardFooterActionButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_primaryCardFooterActionButtonConfiguration");
}

id objc_msgSend__maps_primaryScreen(void *a1, const char *a2, ...)
{
  return [a1 _maps_primaryScreen];
}

id objc_msgSend__maps_radar_symbolCircleFilled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_radar_symbolCircleFilled");
}

id objc_msgSend__maps_radar_symbolFilled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_radar_symbolFilled");
}

id objc_msgSend__maps_rectForHeaderInSection_(void *a1, const char *a2, ...)
{
  return [a1 _maps_rectForHeaderInSection:];
}

id objc_msgSend__maps_rectForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_rectForRowAtIndexPath:");
}

id objc_msgSend__maps_recursivelySetAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_recursivelySetAllowsGroupOpacity:");
}

id objc_msgSend__maps_refreshTrafficIncidentsOnRoute(void *a1, const char *a2, ...)
{
  return [a1 _maps_refreshTrafficIncidentsOnRoute];
}

id objc_msgSend__maps_registerEventTap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_registerEventTap:");
}

id objc_msgSend__maps_registerGroupedHeaderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_registerGroupedHeaderView");
}

id objc_msgSend__maps_registerSelectableFooterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_registerSelectableFooterView");
}

id objc_msgSend__maps_reloadCellHeights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_reloadCellHeights");
}

id objc_msgSend__maps_reloadDataWithoutFocus(void *a1, const char *a2, ...)
{
  return [a1 _maps_reloadDataWithoutFocus];
}

id objc_msgSend__maps_removeArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_removeArrangedSubview:");
}

id objc_msgSend__maps_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_removeObject:");
}

id objc_msgSend__maps_removeTrafficIncidentsObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_removeTrafficIncidentsObserver:");
}

id objc_msgSend__maps_responseIsValid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_responseIsValid:");
}

id objc_msgSend__maps_ridesharingETA_partySize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_ridesharingETA:partySize:];
}

id objc_msgSend__maps_ridesharingIntentClassesForUIInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_ridesharingIntentClassesForUIInteraction");
}

id objc_msgSend__maps_ridesharingPairDetailString_withPartySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_ridesharingPairDetailString:withPartySize:");
}

id objc_msgSend__maps_ridesharingPartySizeString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_ridesharingPartySizeString];
}

id objc_msgSend__maps_ridesharingRequiredIntentClassesForNonUIHandling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_ridesharingRequiredIntentClassesForNonUIHandling");
}

id objc_msgSend__maps_ridesharingScheduledPickupWindowStart_partySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_ridesharingScheduledPickupWindowStart:partySize:");
}

id objc_msgSend__maps_rightRHDAnchor(void *a1, const char *a2, ...)
{
  return [a1 _maps_rightRHDAnchor];
}

id objc_msgSend__maps_routeCollection(void *a1, const char *a2, ...)
{
  return [a1 _maps_routeCollection];
}

id objc_msgSend__maps_routeCollectionOnly_Clear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_routeCollectionOnly_Clear");
}

id objc_msgSend__maps_routeCollectionOnly_setRouteCollectionWhenNil_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_routeCollectionOnly_setRouteCollectionWhenNil:");
}

id objc_msgSend__maps_routeIndex(void *a1, const char *a2, ...)
{
  return [a1 _maps_routeIndex];
}

id objc_msgSend__maps_safeSetFocusableViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_safeSetFocusableViews:");
}

id objc_msgSend__maps_sanitizedResponseForResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_sanitizedResponseForResponse:");
}

id objc_msgSend__maps_scaleToFill_size_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_scaleToFill:size:scale:");
}

id objc_msgSend__maps_scaleToFillRoundedImage_size_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_scaleToFillRoundedImage:size:scale:");
}

id objc_msgSend__maps_scaledFontForScaleFactor_(void *a1, const char *a2, ...)
{
  return [a1 _maps_scaledFontForScaleFactor:];
}

id objc_msgSend__maps_sceneForIdentifierString_(void *a1, const char *a2, ...)
{
  return [a1 _maps_sceneForIdentifierString];
}

id objc_msgSend__maps_scheduledTimerWithFireDate_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_scheduledTimerWithFireDate:block:");
}

id objc_msgSend__maps_scrollContentToOriginalPosition(void *a1, const char *a2, ...)
{
  return [a1 _maps_scrollContentToOriginalPosition];
}

id objc_msgSend__maps_scrollTextViewSelectedRangeVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_scrollTextViewSelectedRangeVisible:");
}

id objc_msgSend__maps_searchResultMemberEqualToResult_forPurpose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_searchResultMemberEqualToResult:forPurpose:");
}

id objc_msgSend__maps_secondaryCardFooterActionButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_secondaryCardFooterActionButtonConfiguration");
}

id objc_msgSend__maps_selectableRouteAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_selectableRouteAnnotations");
}

id objc_msgSend__maps_setAllContentHuggingAndCompressionResistancePriorities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setAllContentHuggingAndCompressionResistancePriorities:");
}

id objc_msgSend__maps_setArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setArrangedSubviews:");
}

id objc_msgSend__maps_setArrangedSubviews_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setArrangedSubviews:animated:completion:");
}

id objc_msgSend__maps_setCollectionViewCellBackgroundConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setCollectionViewCellBackgroundConfiguration");
}

id objc_msgSend__maps_setDoesNotTranslateAutoresizingConstraintsForViewsDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setDoesNotTranslateAutoresizingConstraintsForViewsDictionary:");
}

id objc_msgSend__maps_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setItems:");
}

id objc_msgSend__maps_setNeedsUpdate_withSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setNeedsUpdate:withSelector:");
}

id objc_msgSend__maps_setNeedsUpdateWithSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setNeedsUpdateWithSelector:");
}

id objc_msgSend__maps_setTableViewCellBackgroundConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_setTableViewCellBackgroundConfiguration");
}

id objc_msgSend__maps_setTraceRecordingData_(void *a1, const char *a2, ...)
{
  return [a1 _maps_setTraceRecordingData:];
}

id objc_msgSend__maps_setUseDisableFeatureTitle_(void *a1, const char *a2, ...)
{
  return [a1 _maps_setUseDisableFeatureTitle:];
}

id objc_msgSend__maps_sha1Hash(void *a1, const char *a2, ...)
{
  return [a1 _maps_sha1Hash];
}

id objc_msgSend__maps_shortcutForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shortcutForMapItem:");
}

id objc_msgSend__maps_shortcutForMapItem_fromShortcuts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shortcutForMapItem:fromShortcuts:");
}

id objc_msgSend__maps_shortcutForSuggestionsEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shortcutForSuggestionsEntry:");
}

id objc_msgSend__maps_shortcutIncludingHiddenForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shortcutIncludingHiddenForMapItem:");
}

id objc_msgSend__maps_shortcutOrderedEntries_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shortcutOrderedEntries:");
}

id objc_msgSend__maps_shouldAdoptImplicitAnimationParameters(void *a1, const char *a2, ...)
{
  return [a1 _maps_shouldAdoptImplicitAnimationParameters];
}

id objc_msgSend__maps_shouldBeDisplayed(void *a1, const char *a2, ...)
{
  return [a1 _maps_shouldBeDisplayed];
}

id objc_msgSend__maps_shouldIgnoreActivationStateForScene_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_shouldIgnoreActivationStateForScene:");
}

id objc_msgSend__maps_shouldShowTopHairline(void *a1, const char *a2, ...)
{
  return [a1 _maps_shouldShowTopHairline];
}

id objc_msgSend__maps_singleSectionSnapshotWithIdentifiersForItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_singleSectionSnapshotWithIdentifiersForItems:");
}

id objc_msgSend__maps_singleSectionSnapshotWithIdentifiersForItems_reloadingChangesFromPreviousItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_singleSectionSnapshotWithIdentifiersForItems:reloadingChangesFromPreviousItems:");
}

id objc_msgSend__maps_sizeWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_sizeWithFont:");
}

id objc_msgSend__maps_sizeWithFont_constrainedToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_sizeWithFont:constrainedToSize:");
}

id objc_msgSend__maps_sizeWithFont_constrainedToSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_sizeWithFont:constrainedToSize:options:");
}

id objc_msgSend__maps_splitViewControllerDidChangePrimaryColumnWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_splitViewControllerDidChangePrimaryColumnWidth:");
}

id objc_msgSend__maps_spokenNameForNavigation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_spokenNameForNavigation");
}

id objc_msgSend__maps_stateAndCountry(void *a1, const char *a2, ...)
{
  return [a1 _maps_stateAndCountry];
}

id objc_msgSend__maps_stringByTrimmingLeadingWhitespace(void *a1, const char *a2, ...)
{
  return [a1 _maps_stringByTrimmingLeadingWhitespace];
}

id objc_msgSend__maps_stringLongFromTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 _maps_stringLongFromTimeInterval:];
}

id objc_msgSend__maps_stringWithRemainingTime_(void *a1, const char *a2, ...)
{
  return [a1 _maps_stringWithRemainingTime];
}

id objc_msgSend__maps_styleAttributesForMapItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_styleAttributesForMapItem");
}

id objc_msgSend__maps_subarrayFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_subarrayFromIndex:");
}

id objc_msgSend__maps_subarrayToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_subarrayToIndex:");
}

id objc_msgSend__maps_systemFontWithFixedSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_systemFontWithFixedSize:];
}

id objc_msgSend__maps_systemFontWithFixedSize_adaptiveFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_systemFontWithFixedSize:adaptiveFont:");
}

id objc_msgSend__maps_systemFontWithSize_(void *a1, const char *a2, ...)
{
  return [a1 _maps_systemFontWithSize:];
}

id objc_msgSend__maps_systemFontWithSize_weight_grade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_systemFontWithSize:weight:grade:");
}

id objc_msgSend__maps_testFitSegmentTitlesToWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_testFitSegmentTitlesToWidth:");
}

id objc_msgSend__maps_textStyleForSize_useAdaptiveIfNeeded_effectivePointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_textStyleForSize:useAdaptiveIfNeeded:effectivePointSize:");
}

id objc_msgSend__maps_ticketForSearchHistoryEntry_source_traits_isRedoOrAutoRedoSearch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_ticketForSearchHistoryEntry:source:traits:isRedoOrAutoRedoSearch:");
}

id objc_msgSend__maps_timeForDate_(void *a1, const char *a2, ...)
{
  return [a1 _maps_timeForDate];
}

id objc_msgSend__maps_topMostPresentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_topMostPresentViewController:animated:completion:");
}

id objc_msgSend__maps_traceRecordingData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_traceRecordingData");
}

id objc_msgSend__maps_trafficIncidentsObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_trafficIncidentsObservers:");
}

id objc_msgSend__maps_trafficIncidentsOnRoute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_trafficIncidentsOnRoute");
}

id objc_msgSend__maps_traitCollectionByClampingContentSizeCategoryWithMinimumContentSizeCategory_maximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_traitCollectionByClampingContentSizeCategoryWithMinimumContentSizeCategory:maximumContentSizeCategory:");
}

id objc_msgSend__maps_traitCollectionWithMaximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 _maps_traitCollectionWithMaximumContentSizeCategory:];
}

id objc_msgSend__maps_transformScaledToLeadingAtScale_(void *a1, const char *a2, ...)
{
  return [a1 _maps_transformScaledToLeadingAtScale:];
}

id objc_msgSend__maps_transformScaledToTopAndLeadingAtScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_transformScaledToTopAndLeadingAtScale:");
}

id objc_msgSend__maps_transformScaledToTopAndTrailingAtScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_transformScaledToTopAndTrailingAtScale:");
}

id objc_msgSend__maps_transformScaledToTopAtScale_(void *a1, const char *a2, ...)
{
  return [a1 _maps_transformScaledToTopAtScale:];
}

id objc_msgSend__maps_uiScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_uiScene");
}

id objc_msgSend__maps_unlockApplicationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_unlockApplicationWithCompletion:");
}

id objc_msgSend__maps_updateHairlineAlpha_animated_getter_setter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_updateHairlineAlpha:animated:getter:setter:");
}

id objc_msgSend__maps_updateRideBookingExtensions_(void *a1, const char *a2, ...)
{
  return [a1 _maps_updateRideBookingExtensions:];
}

id objc_msgSend__maps_updateTopHairlineAlpha_animated_getter_setter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_updateTopHairlineAlpha:animated:getter:setter:");
}

id objc_msgSend__maps_updateWithNodeSnapshot_previousNodeSnapshot_reloadedItems_insertedItems_deletedItems_movedItems_expandedItems_collapsedItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_updateWithNodeSnapshot:previousNodeSnapshot:reloadedItems:insertedItems:deletedItems:movedItems:expandedItems:collapsedItems:");
}

id objc_msgSend__maps_viewControllerForRenamingMapItem_saveHandler_cancelHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maps_viewControllerForRenamingMapItem:saveHandler:cancelHandler:");
}

id objc_msgSend__maps_weekdayForDate_(void *a1, const char *a2, ...)
{
  return [a1 _maps_weekdayForDate:];
}

id objc_msgSend__maps_withIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _maps_withIdentifier];
}

id objc_msgSend__maps_writeBinaryPlist_error_(void *a1, const char *a2, ...)
{
  return [a1 _maps_writeBinaryPlist:error:];
}

id objc_msgSend__mapstest_VKLocationCoordinate2D(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_VKLocationCoordinate2D");
}

id objc_msgSend__mapstest_altitude(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_altitude];
}

id objc_msgSend__mapstest_animationDurationWithDefault_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_animationDurationWithDefault:");
}

id objc_msgSend__mapstest_arrayWithJSONForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_arrayWithJSONForKey:");
}

id objc_msgSend__mapstest_customDepartureDate(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_customDepartureDate];
}

id objc_msgSend__mapstest_destinationString(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_destinationString];
}

id objc_msgSend__mapstest_directionIntentType(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_directionIntentType];
}

id objc_msgSend__mapstest_directionsPlan(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_directionsPlan];
}

id objc_msgSend__mapstest_directionsPlanWithResolvedDestination_(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_directionsPlanWithResolvedDestination];
}

id objc_msgSend__mapstest_doubleValueForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_doubleValueForKey:defaultValue:];
}

id objc_msgSend__mapstest_duration(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_duration];
}

id objc_msgSend__mapstest_endPoint(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_endPoint];
}

id objc_msgSend__mapstest_flyoverTourId(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_flyoverTourId];
}

id objc_msgSend__mapstest_getSelectedFeatures_disabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_getSelectedFeatures:disabled:");
}

id objc_msgSend__mapstest_guidanceStepSwipeCount(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_guidanceStepSwipeCount];
}

id objc_msgSend__mapstest_hasAltitude(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_hasAltitude];
}

id objc_msgSend__mapstest_hasLatitudeAndLongitude(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_hasLatitudeAndLongitude];
}

id objc_msgSend__mapstest_hasMapRegion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_hasMapRegion");
}

id objc_msgSend__mapstest_hasMapType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_hasMapType");
}

id objc_msgSend__mapstest_hasMidPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_hasMidPoint");
}

id objc_msgSend__mapstest_hasViewMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_hasViewMode");
}

id objc_msgSend__mapstest_integerValueForKey_defaultValue_(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_integerValueForKey:defaultValue:];
}

id objc_msgSend__mapstest_isCurrentLocationString(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_isCurrentLocationString];
}

id objc_msgSend__mapstest_isUsingSampleProactiveData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_isUsingSampleProactiveData");
}

id objc_msgSend__mapstest_jumpPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_jumpPoint");
}

id objc_msgSend__mapstest_jumpToBayArea(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_jumpToBayArea");
}

id objc_msgSend__mapstest_jumpToCoords_pitch_yaw_altitudeIsRegionSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_jumpToCoords:pitch:yaw:altitudeIsRegionSize:");
}

id objc_msgSend__mapstest_jumpToCupertino(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_jumpToCupertino");
}

id objc_msgSend__mapstest_jumpToTokyo(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_jumpToTokyo];
}

id objc_msgSend__mapstest_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_location");
}

id objc_msgSend__mapstest_locationCoordinate2D(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_locationCoordinate2D];
}

id objc_msgSend__mapstest_mapRegion(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_mapRegion];
}

id objc_msgSend__mapstest_mapRegionAtCenterLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_mapRegionAtCenterLocation:");
}

id objc_msgSend__mapstest_mapRegionWithCenterLatitude_longitude_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_mapRegionWithCenterLatitude:longitude:size:");
}

id objc_msgSend__mapstest_mapType(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_mapType];
}

id objc_msgSend__mapstest_mapTypeWithDefaultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_mapTypeWithDefaultType:");
}

id objc_msgSend__mapstest_midPoint(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_midPoint];
}

id objc_msgSend__mapstest_originString(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_originString];
}

id objc_msgSend__mapstest_pitch(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_pitch];
}

id objc_msgSend__mapstest_pointWithKeys_(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_pointWithKeys:];
}

id objc_msgSend__mapstest_readSubTestsFromTestSerial(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_readSubTestsFromTestSerial");
}

id objc_msgSend__mapstest_rptTestActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_rptTestActions");
}

id objc_msgSend__mapstest_searchTestACMode(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_searchTestACMode];
}

id objc_msgSend__mapstest_serialSubTests(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_serialSubTests];
}

id objc_msgSend__mapstest_startPoint(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_startPoint];
}

id objc_msgSend__mapstest_transportType(void *a1, const char *a2, ...)
{
  return [a1 _mapstest_transportType];
}

id objc_msgSend__mapstest_viewMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_viewMode");
}

id objc_msgSend__mapstest_waitSecondsForMapViewSetup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_waitSecondsForMapViewSetup");
}

id objc_msgSend__mapstest_waypointStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_waypointStrings");
}

id objc_msgSend__mapstest_yaw(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapstest_yaw");
}

id objc_msgSend__mapsui_accentColor(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_accentColor];
}

id objc_msgSend__mapsui_activateLayouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_activateLayouts:");
}

id objc_msgSend__mapsui_activateLayouts_constraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_activateLayouts:constraints:");
}

id objc_msgSend__mapsui_addSelectGestureRecognizerWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_addSelectGestureRecognizerWithTarget:action:");
}

id objc_msgSend__mapsui_associatedHikingItemType(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_associatedHikingItemType];
}

id objc_msgSend__mapsui_deactivateLayouts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_deactivateLayouts:");
}

id objc_msgSend__mapsui_filledButtonConfiguration(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_filledButtonConfiguration];
}

id objc_msgSend__mapsui_grayButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_grayButtonConfiguration");
}

id objc_msgSend__mapsui_isRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_isRTL");
}

id objc_msgSend__mapsui_primaryHeaderActionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_primaryHeaderActionConfiguration];
}

id objc_msgSend__mapsui_resetLayoutMargins(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_resetLayoutMargins];
}

id objc_msgSend__mapsui_resetLayoutMarginsWithPreservesSuperview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_resetLayoutMarginsWithPreservesSuperview:");
}

id objc_msgSend__mapsui_resetViewLayoutMargins(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_resetViewLayoutMargins];
}

id objc_msgSend__mapsui_resetViewLayoutMarginsWithPreservesSuperview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_resetViewLayoutMarginsWithPreservesSuperview:");
}

id objc_msgSend__mapsui_secondaryHeaderActionConfiguration(void *a1, const char *a2, ...)
{
  return [a1 _mapsui_secondaryHeaderActionConfiguration];
}

id objc_msgSend__mapsui_trailSelectionInfoForMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mapsui_trailSelectionInfoForMap");
}

id objc_msgSend__maptest_lookAroundNavigationAmountToTurnInDegrees(void *a1, const char *a2, ...)
{
  return [a1 _maptest_lookAroundNavigationAmountToTurnInDegrees];
}

id objc_msgSend__maptest_lookAroundNavigationTaps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maptest_lookAroundNavigationTaps");
}

id objc_msgSend__maptest_lookAroundOffsetTapPositionX(void *a1, const char *a2, ...)
{
  return [a1 _maptest_lookAroundOffsetTapPositionX];
}

id objc_msgSend__maptest_lookAroundOffsetTapPositionY(void *a1, const char *a2, ...)
{
  return [a1 _maptest_lookAroundOffsetTapPositionY];
}

id objc_msgSend__marginForRowWith_(void *a1, const char *a2, ...)
{
  return [a1 _marginForRowWith:];
}

id objc_msgSend__markAllQuickRouteManagersNotVisible(void *a1, const char *a2, ...)
{
  return _[a1 _markAllQuickRouteManagersNotVisible];
}

id objc_msgSend__markAsEditing(void *a1, const char *a2, ...)
{
  return _[a1 _markAsEditing];
}

id objc_msgSend__markAsNotEditingAndUpdateContent(void *a1, const char *a2, ...)
{
  return _[a1 _markAsNotEditingAndUpdateContent];
}

id objc_msgSend__markAsShown(void *a1, const char *a2, ...)
{
  return _[a1 _markAsShown];
}

id objc_msgSend__markConfigurations_asTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markConfigurations:asTransitioning:");
}

id objc_msgSend__markCurrentVehicleCombinationAsViewed(void *a1, const char *a2, ...)
{
  return _[a1 _markCurrentVehicleCombinationAsViewed];
}

id objc_msgSend__markFeatureDiscoveryShown(void *a1, const char *a2, ...)
{
  return _[a1 _markFeatureDiscoveryShown];
}

id objc_msgSend__markFirstDirectionAsValid(void *a1, const char *a2, ...)
{
  return _[a1 _markFirstDirectionAsValid];
}

id objc_msgSend__markVehicleAsViewed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markVehicleAsViewed:");
}

id objc_msgSend__markVisibleQuickRouteManagersVisible(void *a1, const char *a2, ...)
{
  return _[a1 _markVisibleQuickRouteManagersVisible];
}

id objc_msgSend__markWelcomeScreenAsDisplayed(void *a1, const char *a2, ...)
{
  return _[a1 _markWelcomeScreenAsDisplayed];
}

id objc_msgSend__matchedLocationForLocation_(void *a1, const char *a2, ...)
{
  return [a1 _matchedLocationForLocation:];
}

id objc_msgSend__maxAvailableHeightForJunctionView(void *a1, const char *a2, ...)
{
  return _[a1 _maxAvailableHeightForJunctionView];
}

id objc_msgSend__maximumContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 _maximumContentSizeCategory];
}

id objc_msgSend__maximumEdgeToEdgeDistanceBetweenCurrentAndTargetMapRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maximumEdgeToEdgeDistanceBetweenCurrentAndTargetMapRect:");
}

id objc_msgSend__maximumIconHeight(void *a1, const char *a2, ...)
{
  return _[a1 _maximumIconHeight];
}

id objc_msgSend__maximumIconWidth(void *a1, const char *a2, ...)
{
  return _[a1 _maximumIconWidth];
}

id objc_msgSend__maximumMediumCardHeight(void *a1, const char *a2, ...)
{
  return _[a1 _maximumMediumCardHeight];
}

id objc_msgSend__maximumNumberOfDots_(void *a1, const char *a2, ...)
{
  return [a1 _maximumNumberOfDots:];
}

id objc_msgSend__maximumNumberOfLinesWithMinimumOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maximumNumberOfLinesWithMinimumOverride:");
}

id objc_msgSend__maximumScenePollCount(void *a1, const char *a2, ...)
{
  return _[a1 _maximumScenePollCount];
}

id objc_msgSend__maximumZoomLevel(void *a1, const char *a2, ...)
{
  return _[a1 _maximumZoomLevel];
}

id objc_msgSend__maxiumizePlaceCard(void *a1, const char *a2, ...)
{
  return _[a1 _maxiumizePlaceCard];
}

id objc_msgSend__meCardTextForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_meCardTextForType:");
}

id objc_msgSend__measureRectsUntilRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_measureRectsUntilRowAtIndexPath:");
}

id objc_msgSend__measureShieldWidthForListWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_measureShieldWidthForListWidth:");
}

id objc_msgSend__measurementForDistanceInMeters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_measurementForDistanceInMeters:");
}

id objc_msgSend__mediumizePlaceCard(void *a1, const char *a2, ...)
{
  return _[a1 _mediumizePlaceCard];
}

id objc_msgSend__mediumizePlaceCardFromBig(void *a1, const char *a2, ...)
{
  return _[a1 _mediumizePlaceCardFromBig];
}

id objc_msgSend__menuItemsInSection_(void *a1, const char *a2, ...)
{
  return [a1 _menuItemsInSection:];
}

id objc_msgSend__menuItemsPerSections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemsPerSections:");
}

id objc_msgSend__mergeActivities(void *a1, const char *a2, ...)
{
  return _[a1 _mergeActivities];
}

id objc_msgSend__mergeActivitiesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _mergeActivitiesIfNeeded];
}

id objc_msgSend__mergeCollections_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeCollections:error:");
}

id objc_msgSend__mergeOriginalItems_withServerOverrideItems_withServerDisabledItemTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeOriginalItems:withServerOverrideItems:withServerDisabledItemTypes:");
}

id objc_msgSend__mergeRichTextCollectionDescription_itemDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeRichTextCollectionDescription:itemDescriptions:");
}

id objc_msgSend__mergeTasks(void *a1, const char *a2, ...)
{
  return _[a1 _mergeTasks];
}

id objc_msgSend__mergeTransitRoutingIncidentsForSteps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mergeTransitRoutingIncidentsForSteps:");
}

id objc_msgSend__messageAttributedString(void *a1, const char *a2, ...)
{
  return _[a1 _messageAttributedString];
}

id objc_msgSend__messageAttributedStringSmallText(void *a1, const char *a2, ...)
{
  return _[a1 _messageAttributedStringSmallText];
}

id objc_msgSend__messageAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _messageAttributes];
}

id objc_msgSend__messageAttributesSmallText(void *a1, const char *a2, ...)
{
  return _[a1 _messageAttributesSmallText];
}

id objc_msgSend__messageFromBalance_passName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageFromBalance:passName:");
}

id objc_msgSend__metrics(void *a1, const char *a2, ...)
{
  return _[a1 _metrics];
}

id objc_msgSend__metricsForIdiom_(void *a1, const char *a2, ...)
{
  return [a1 _metricsForIdiom:];
}

id objc_msgSend__metricsForStyle_scaledToMatchReferenceSize_contentScale_baseMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metricsForStyle:scaledToMatchReferenceSize:contentScale:baseMetrics:");
}

id objc_msgSend__migrateDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _migrateDefaults];
}

id objc_msgSend__migrateDeprecatedSettings(void *a1, const char *a2, ...)
{
  return _[a1 _migrateDeprecatedSettings];
}

id objc_msgSend__migrateFiles(void *a1, const char *a2, ...)
{
  return _[a1 _migrateFiles];
}

id objc_msgSend__migrateOrphanedWatchResources(void *a1, const char *a2, ...)
{
  return _[a1 _migrateOrphanedWatchResources];
}

id objc_msgSend__migratePathsIntoContainer(void *a1, const char *a2, ...)
{
  return _[a1 _migratePathsIntoContainer];
}

id objc_msgSend__migratePreCrystalFavorites(void *a1, const char *a2, ...)
{
  return _[a1 _migratePreCrystalFavorites];
}

id objc_msgSend__migrateTracesInLegacyDirectory(void *a1, const char *a2, ...)
{
  return _[a1 _migrateTracesInLegacyDirectory];
}

id objc_msgSend__migrateVolumeSettings(void *a1, const char *a2, ...)
{
  return _[a1 _migrateVolumeSettings];
}

id objc_msgSend__migratedMutedValue(void *a1, const char *a2, ...)
{
  return _[a1 _migratedMutedValue];
}

id objc_msgSend__minPlatformArtworkBottomToBottomDistance(void *a1, const char *a2, ...)
{
  return _[a1 _minPlatformArtworkBottomToBottomDistance];
}

id objc_msgSend__minScrolledHeight(void *a1, const char *a2, ...)
{
  return _[a1 _minScrolledHeight];
}

id objc_msgSend__minimizePlaceCard(void *a1, const char *a2, ...)
{
  return _[a1 _minimizePlaceCard];
}

id objc_msgSend__minimumLinesOverridePointSizeThreshold(void *a1, const char *a2, ...)
{
  return _[a1 _minimumLinesOverridePointSizeThreshold];
}

id objc_msgSend__minimumLinkHeight(void *a1, const char *a2, ...)
{
  return _[a1 _minimumLinkHeight];
}

id objc_msgSend__minimumMediumCardHeight(void *a1, const char *a2, ...)
{
  return _[a1 _minimumMediumCardHeight];
}

id objc_msgSend__minimumZoomLevel(void *a1, const char *a2, ...)
{
  return _[a1 _minimumZoomLevel];
}

id objc_msgSend__minorLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _minorLabelColor];
}

id objc_msgSend__minuteStringForSeconds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_minuteStringForSeconds:");
}

id objc_msgSend__minutesText(void *a1, const char *a2, ...)
{
  return _[a1 _minutesText];
}

id objc_msgSend__mkCoordAt_(void *a1, const char *a2, ...)
{
  return [a1 _mkCoordAt:];
}

id objc_msgSend__modeForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _modeForIndexPath:];
}

id objc_msgSend__modelAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _modelAtIndexPath:];
}

id objc_msgSend__modelDataForOpenLoop(void *a1, const char *a2, ...)
{
  return _[a1 _modelDataForOpenLoop];
}

id objc_msgSend__modelDataForPaymentMethodIdentifiers_actionTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelDataForPaymentMethodIdentifiers:actionTitle:");
}

id objc_msgSend__modelForEVRouting(void *a1, const char *a2, ...)
{
  return _[a1 _modelForEVRouting];
}

id objc_msgSend__modelForNearbyTransit(void *a1, const char *a2, ...)
{
  return _[a1 _modelForNearbyTransit];
}

id objc_msgSend__modelForOfflineMapsTip(void *a1, const char *a2, ...)
{
  return _[a1 _modelForOfflineMapsTip];
}

id objc_msgSend__modelForPreferredNetworks(void *a1, const char *a2, ...)
{
  return _[a1 _modelForPreferredNetworks];
}

id objc_msgSend__modelForRatingAndPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _modelForRatingAndPhotos];
}

id objc_msgSend__modelForTransitPay(void *a1, const char *a2, ...)
{
  return _[a1 _modelForTransitPay];
}

id objc_msgSend__modelFromData_(void *a1, const char *a2, ...)
{
  return [a1 _modelFromData];
}

id objc_msgSend__moreString(void *a1, const char *a2, ...)
{
  return _[a1 _moreString];
}

id objc_msgSend__mostRecentlyAddedAnchor(void *a1, const char *a2, ...)
{
  return _[a1 _mostRecentlyAddedAnchor];
}

id objc_msgSend__moveContextMenuToPoint_anchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveContextMenuToPoint:anchorPoint:");
}

id objc_msgSend__moveItemAtPathIfExists_toPathCreatingIntermediateDirectories_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveItemAtPathIfExists:toPathCreatingIntermediateDirectories:");
}

id objc_msgSend__moveLookAroundViewIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _moveLookAroundViewIfNeeded];
}

id objc_msgSend__moveLookAroundViewToCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveLookAroundViewToCoordinate:");
}

id objc_msgSend__moveLookAroundViewToMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveLookAroundViewToMapItem:");
}

id objc_msgSend__moveMapItem_fromCollection_toCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveMapItem:fromCollection:toCollection:");
}

id objc_msgSend__moveMapItemSnapshot_toCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_moveMapItemSnapshot:toCollection:");
}

id objc_msgSend__moveToCenterCoordinate_(void *a1, const char *a2, ...)
{
  return [a1 _moveToCenterCoordinate:];
}

id objc_msgSend__muid(void *a1, const char *a2, ...)
{
  return _[a1 _muid];
}

id objc_msgSend__multiPartAttributedStringForRoadDescriptionsInStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_multiPartAttributedStringForRoadDescriptionsInStep:");
}

id objc_msgSend__muninViewState(void *a1, const char *a2, ...)
{
  return _[a1 _muninViewState];
}

id objc_msgSend__nameForType_(void *a1, const char *a2, ...)
{
  return [a1 _nameForType:];
}

id objc_msgSend__namesOfCountriesWithKnownCodes(void *a1, const char *a2, ...)
{
  return _[a1 _namesOfCountriesWithKnownCodes];
}

id objc_msgSend__navCameraController(void *a1, const char *a2, ...)
{
  return _[a1 _navCameraController];
}

id objc_msgSend__navRecenterButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 _navRecenterButtonPressed];
}

id objc_msgSend__navSignBottomPosition(void *a1, const char *a2, ...)
{
  return _[a1 _navSignBottomPosition];
}

id objc_msgSend__navigationChromeVisibilityChanged(void *a1, const char *a2, ...)
{
  return _[a1 _navigationChromeVisibilityChanged];
}

id objc_msgSend__navigationControllerWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationControllerWithRootViewController:");
}

id objc_msgSend__navigationModeTypeForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationModeTypeForState:");
}

id objc_msgSend__navigationSession_didChangeState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationSession:didChangeState:");
}

id objc_msgSend__navigationSessionDidChangeState_(void *a1, const char *a2, ...)
{
  return [a1 _navigationSessionDidChangeState:];
}

id objc_msgSend__navigationSessionStopped_movingToSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationSessionStopped:movingToSession:");
}

id objc_msgSend__navigationSettings(void *a1, const char *a2, ...)
{
  return _[a1 _navigationSettings];
}

id objc_msgSend__navigationStarted(void *a1, const char *a2, ...)
{
  return _[a1 _navigationStarted];
}

id objc_msgSend__navigationStateForServiceState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationStateForServiceState:");
}

id objc_msgSend__navigation_distanceLevenshtein_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_distanceLevenshtein:");
}

id objc_msgSend__navigation_distanceUsesMetricSystem(void *a1, const char *a2, ...)
{
  return [a1 _navigation_distanceUsesMetricSystem];
}

id objc_msgSend__navigation_formattedDescriptionForFrequency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_formattedDescriptionForFrequency:");
}

id objc_msgSend__navigation_formattedDescriptionForLiveStatus_updatedDepartureTimeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_formattedDescriptionForLiveStatus:updatedDepartureTimeString:");
}

id objc_msgSend__navigation_formattedStringForHourRanges_timeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_formattedStringForHourRanges:timeZone:");
}

id objc_msgSend__navigation_formattedStringForPriceValueWithAmount_currencyCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_formattedStringForPriceValueWithAmount:currencyCode:");
}

id objc_msgSend__navigation_formattedStringForPriceValueWithAmount_currencyCode_showsCurrencySymbol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_formattedStringForPriceValueWithAmount:currencyCode:showsCurrencySymbol:");
}

id objc_msgSend__navigation_hasMatch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_hasMatch");
}

id objc_msgSend__navigation_hasSameOffsetFromGMTAsTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_hasSameOffsetFromGMTAsTimeZone:");
}

id objc_msgSend__navigation_hasValidCourse(void *a1, const char *a2, ...)
{
  return [a1 _navigation_hasValidCourse];
}

id objc_msgSend__navigation_isCJK(void *a1, const char *a2, ...)
{
  return [a1 _navigation_isCJK];
}

id objc_msgSend__navigation_isDateInToday_inTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_isDateInToday:inTimeZone:");
}

id objc_msgSend__navigation_isEquivalentToTimeZone_forDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_isEquivalentToTimeZone:forDate:");
}

id objc_msgSend__navigation_isStale(void *a1, const char *a2, ...)
{
  return [a1 _navigation_isStale];
}

id objc_msgSend__navigation_localizedStringForDistance_context_extraDetail_(void *a1, const char *a2, ...)
{
  return [a1 _navigation_localizedStringForDistance:context:extraDetail:];
}

id objc_msgSend__navigation_localizedStringForDistance_detail_unitFormat_locale_useMetric_useYards_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_localizedStringForDistance:detail:unitFormat:locale:useMetric:useYards:");
}

id objc_msgSend__navigation_localizedTimestampStringForDepartureArrivalDate_inTimeZone_canIncludeDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_localizedTimestampStringForDepartureArrivalDate:inTimeZone:canIncludeDate:");
}

id objc_msgSend__navigation_localizedTimestampStringForDepartureArrivalDate_inTimeZone_canIncludeDate_showTimeZone_useShortFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_localizedTimestampStringForDepartureArrivalDate:inTimeZone:canIncludeDate:showTimeZone:useShortFormat:");
}

id objc_msgSend__navigation_localizedTimestampStringForDepartureArrivalDate_inTimeZone_canIncludeDate_suppressTimeZoneDisplay_useShortFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_localizedTimestampStringForDepartureArrivalDate:inTimeZone:canIncludeDate:suppressTimeZoneDisplay:useShortFormat:");
}

id objc_msgSend__navigation_newArrayWithDefaultValue_withCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_newArrayWithDefaultValue:withCapacity:");
}

id objc_msgSend__navigation_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 _navigation_objectForKey:];
}

id objc_msgSend__navigation_offsetDate_toTimeZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_offsetDate:toTimeZone:");
}

id objc_msgSend__navigation_overrideDistanceUnit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_overrideDistanceUnit:");
}

id objc_msgSend__navigation_routeMatch(void *a1, const char *a2, ...)
{
  return [a1 _navigation_routeMatch];
}

id objc_msgSend__navigation_sanitizedStringForDisplayInHTML(void *a1, const char *a2, ...)
{
  return [a1 _navigation_sanitizedStringForDisplayInHTML];
}

id objc_msgSend__navigation_stringForExpectedTravelTime_dateUnitStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_stringForExpectedTravelTime:dateUnitStyle:");
}

id objc_msgSend__navigation_stringForServerFormattedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_stringForServerFormattedString:");
}

id objc_msgSend__navigation_stringForServerFormattedString_options_overrideVariables_(void *a1, const char *a2, ...)
{
  return [a1 _navigation_stringForServerFormattedString:options:overrideVariables:];
}

id objc_msgSend__navigation_stringTokensForDirectionsError_waypoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_stringTokensForDirectionsError:waypoints:");
}

id objc_msgSend__navigation_stringWithMinutes_andAbbreviationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_stringWithMinutes:andAbbreviationType:");
}

id objc_msgSend__navigation_stringWithSeconds_abbreviated_(void *a1, const char *a2, ...)
{
  return [a1 _navigation_stringWithSeconds:abbreviated:];
}

id objc_msgSend__navigation_stringWithSeconds_andAbbreviationType_(void *a1, const char *a2, ...)
{
  return [a1 _navigation_stringWithSeconds:andAbbreviationType:];
}

id objc_msgSend__navigation_transitRelativeDateStringForDate_context_inTimeZone_outUsedFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigation_transitRelativeDateStringForDate:context:inTimeZone:outUsedFormat:");
}

id objc_msgSend__navigation_useYardsForShortDistances(void *a1, const char *a2, ...)
{
  return [a1 _navigation_useYardsForShortDistances];
}

id objc_msgSend__nearestMuninMarkerWithCompleteMarkerHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nearestMuninMarkerWithCompleteMarkerHandler:");
}

id objc_msgSend__nearestStationEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _nearestStationEnabled];
}

id objc_msgSend__nearestTrafficCameraInFeatures_onRoute_ofType_fromCoordinate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nearestTrafficCameraInFeatures:onRoute:ofType:fromCoordinate:");
}

id objc_msgSend__needsCardUpdateForTransitionFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needsCardUpdateForTransitionFromState:toState:");
}

id objc_msgSend__needsRefreshWithTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needsRefreshWithTraits:");
}

id objc_msgSend__needsSnapshotUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _needsSnapshotUpdate];
}

id objc_msgSend__needsViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 _needsViewLayout];
}

id objc_msgSend__newConfiguredWebView(void *a1, const char *a2, ...)
{
  return _[a1 _newConfiguredWebView];
}

id objc_msgSend__newGradientLayerWithFrame_forLeftEdge_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newGradientLayerWithFrame:forLeftEdge:");
}

id objc_msgSend__newLabelWithNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newLabelWithNumberOfLines:");
}

id objc_msgSend__newMenuItemWithFollowUpQuestionCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newMenuItemWithFollowUpQuestionCategory:");
}

id objc_msgSend__newPlaceCardViewControllerForReuse(void *a1, const char *a2, ...)
{
  return _[a1 _newPlaceCardViewControllerForReuse];
}

id objc_msgSend__nextLeaveStopStepAfterStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextLeaveStopStepAfterStep:");
}

id objc_msgSend__nextStepAfterStep_withManeuvers_beforeManeuvers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextStepAfterStep:withManeuvers:beforeManeuvers:");
}

id objc_msgSend__nextUpdateDate(void *a1, const char *a2, ...)
{
  return _[a1 _nextUpdateDate];
}

id objc_msgSend__noBookmarksCell(void *a1, const char *a2, ...)
{
  return _[a1 _noBookmarksCell];
}

id objc_msgSend__noResultsString(void *a1, const char *a2, ...)
{
  return _[a1 _noResultsString];
}

id objc_msgSend__nodeSnapshotAtIdentifierPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nodeSnapshotAtIdentifierPath:");
}

id objc_msgSend__nodeSnapshotAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nodeSnapshotAtIndexPath:");
}

id objc_msgSend__nonZeroTotalsForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nonZeroTotalsForSection:");
}

id objc_msgSend__nonselectingTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _nonselectingTapGestureRecognizer];
}

id objc_msgSend__normalizedUserRatingScore(void *a1, const char *a2, ...)
{
  return _[a1 _normalizedUserRatingScore];
}

id objc_msgSend__noteGuidanceStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 _noteGuidanceStateChanged];
}

id objc_msgSend__noteWillSelectWithoutScroll(void *a1, const char *a2, ...)
{
  return _[a1 _noteWillSelectWithoutScroll];
}

id objc_msgSend__notificationsRowTitle(void *a1, const char *a2, ...)
{
  return _[a1 _notificationsRowTitle];
}

id objc_msgSend__notifyAfterChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAfterChanges:");
}

id objc_msgSend__notifyAllObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyAllObservers:");
}

id objc_msgSend__notifyCellHoverObservers(void *a1, const char *a2, ...)
{
  return _[a1 _notifyCellHoverObservers];
}

id objc_msgSend__notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegate];
}

id objc_msgSend__notifyDelegateOfDisplayRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateOfDisplayRate:");
}

id objc_msgSend__notifyDelegateOfUpdatedActiveStep(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateOfUpdatedActiveStep];
}

id objc_msgSend__notifyDelegateOfUpdatedDisplayedStep(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDelegateOfUpdatedDisplayedStep];
}

id objc_msgSend__notifyDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidChange];
}

id objc_msgSend__notifyDidChangeFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidChangeFromState:toState:");
}

id objc_msgSend__notifyDidLoadStartPOIShape_endPOIShapes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidLoadStartPOIShape:endPOIShapes:");
}

id objc_msgSend__notifyDidUpdateCyclePreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateCyclePreferences:");
}

id objc_msgSend__notifyDidUpdateDrivePreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateDrivePreferences:");
}

id objc_msgSend__notifyDidUpdateOriginDestinationNames(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidUpdateOriginDestinationNames];
}

id objc_msgSend__notifyDidUpdateOriginDestinationWaypointRequest(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidUpdateOriginDestinationWaypointRequest];
}

id objc_msgSend__notifyDidUpdateRequestState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateRequestState:");
}

id objc_msgSend__notifyDidUpdateRouteCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateRouteCollection:");
}

id objc_msgSend__notifyDidUpdateTiming(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidUpdateTiming];
}

id objc_msgSend__notifyDidUpdateTransitPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateTransitPreferences:");
}

id objc_msgSend__notifyDidUpdateTransportType(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidUpdateTransportType];
}

id objc_msgSend__notifyDidUpdateVirtualGarage(void *a1, const char *a2, ...)
{
  return _[a1 _notifyDidUpdateVirtualGarage];
}

id objc_msgSend__notifyDidUpdateWalkPreferences_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDidUpdateWalkPreferences:");
}

id objc_msgSend__notifyObservers(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObservers];
}

id objc_msgSend__notifyObservers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObservers:");
}

id objc_msgSend__notifyObservers_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObservers:block:");
}

id objc_msgSend__notifyObserversAboutError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversAboutError:");
}

id objc_msgSend__notifyObserversAboutLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversAboutLocation:");
}

id objc_msgSend__notifyObserversAboutPrecision(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversAboutPrecision];
}

id objc_msgSend__notifyObserversDidUpdateRouteCollectionResult_forTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversDidUpdateRouteCollectionResult:forTransportType:");
}

id objc_msgSend__notifyObserversItemsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversItemsDidChange];
}

id objc_msgSend__notifyObserversOfChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversOfChange];
}

id objc_msgSend__notifyObserversStackDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversStackDidChange];
}

id objc_msgSend__notifyObserversWillChangeVisibleRect(void *a1, const char *a2, ...)
{
  return _[a1 _notifyObserversWillChangeVisibleRect];
}

id objc_msgSend__notifyObserversWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversWithBlock:");
}

id objc_msgSend__notifyObserversWithReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyObserversWithReason:");
}

id objc_msgSend__notifyResizingObserversWithValue_onlyIfDragging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyResizingObserversWithValue:onlyIfDragging:");
}

id objc_msgSend__notifyResultRouteCollectionChangeForCurrentTransportType(void *a1, const char *a2, ...)
{
  return _[a1 _notifyResultRouteCollectionChangeForCurrentTransportType];
}

id objc_msgSend__notifySessionDidFail(void *a1, const char *a2, ...)
{
  return _[a1 _notifySessionDidFail];
}

id objc_msgSend__notifySessionDidStartLoading(void *a1, const char *a2, ...)
{
  return _[a1 _notifySessionDidStartLoading];
}

id objc_msgSend__notifySessionDidUpdateResponse(void *a1, const char *a2, ...)
{
  return _[a1 _notifySessionDidUpdateResponse];
}

id objc_msgSend__notifyShouldUndim(void *a1, const char *a2, ...)
{
  return _[a1 _notifyShouldUndim];
}

id objc_msgSend__nudgeHandlesPress_(void *a1, const char *a2, ...)
{
  return [a1 _nudgeHandlesPress:];
}

id objc_msgSend__numberOfBarsForCurrentWidth(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfBarsForCurrentWidth];
}

id objc_msgSend__numberOfDeparturesInSnapshot(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfDeparturesInSnapshot];
}

id objc_msgSend__numberOfItems(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfItems];
}

id objc_msgSend__numberOfLinesForContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfLinesForContentSizeCategory];
}

id objc_msgSend__numberOfRAPsInReview(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfRAPsInReview];
}

id objc_msgSend__numberOfRows(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfRows];
}

id objc_msgSend__numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfRowsInSection:");
}

id objc_msgSend__numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfSections];
}

id objc_msgSend__numberOfSectionsWhenNotEditing(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfSectionsWhenNotEditing];
}

id objc_msgSend__numberOfSelectedPhotos(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfSelectedPhotos];
}

id objc_msgSend__obViewController(void *a1, const char *a2, ...)
{
  return _[a1 _obViewController];
}

id objc_msgSend__objectsInSectionAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_objectsInSectionAtIndexPath:");
}

id objc_msgSend__observationWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _observationWithIdentifier:];
}

id objc_msgSend__observations(void *a1, const char *a2, ...)
{
  return _[a1 _observations];
}

id objc_msgSend__observeHeaderFlagForController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeHeaderFlagForController:");
}

id objc_msgSend__observers(void *a1, const char *a2, ...)
{
  return _[a1 _observers];
}

id objc_msgSend__observersOfMitigationNamed_(void *a1, const char *a2, ...)
{
  return [_observersOfMitigationNamed:];
}

id objc_msgSend__offerVehicleDisambiguationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _offerVehicleDisambiguationIfNeeded];
}

id objc_msgSend__offlineRegionVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _offlineRegionVisibility];
}

id objc_msgSend__offlineSuggestionsUsingLocation_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offlineSuggestionsUsingLocation:withCompletion:");
}

id objc_msgSend__offsetAccessoryViewFrame_forCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_offsetAccessoryViewFrame:forCell:");
}

id objc_msgSend__offsetCoordinate_(void *a1, const char *a2, ...)
{
  return [a1 _offsetCoordinate:];
}

id objc_msgSend__onSuccess_setLookAroundViewEntryPointWithMapItem_orMuninMarker_andContinue_(void *a1, const char *a2, ...)
{
  return [_onSuccess:setLookAroundViewEntryPointWithMapItem:orMuninMarker:andContinue:];
}

id objc_msgSend__onSuccess_synchronizeMapViewCenterToLookAroundViewCenterAndContinue_(void *a1, const char *a2, ...)
{
  return [_onSuccess:synchronizeMapViewCenterToLookAroundViewCenterAndContinue:];
}

id objc_msgSend__onSuccess_waitForLookAroundViewToBecomeAdequatelyDrawnIfNeededAndContinue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_onSuccess:waitForLookAroundViewToBecomeAdequatelyDrawnIfNeededAndContinue:");
}

id objc_msgSend__onSuccessProceedToEnterLookArounPIP_(void *a1, const char *a2, ...)
{
  return [_onSuccessProceedToEnterLookArounPIP:];
}

id objc_msgSend__onboardVehicles_(void *a1, const char *a2, ...)
{
  return [_onboardVehicles:];
}

id objc_msgSend__oneHandedZoomGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _oneHandedZoomGestureRecognizer];
}

id objc_msgSend__ongoingCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _ongoingCardSubtitle];
}

id objc_msgSend__ongoingTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _ongoingTemplatedViewSubtitle];
}

id objc_msgSend__ongoingTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _ongoingTemplatedViewTitle];
}

id objc_msgSend__ongoingTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _ongoingTrayTitle];
}

id objc_msgSend__openApp(void *a1, const char *a2, ...)
{
  return _[a1 _openApp];
}

id objc_msgSend__openAppTapped(void *a1, const char *a2, ...)
{
  return _[a1 _openAppTapped];
}

id objc_msgSend__openContact(void *a1, const char *a2, ...)
{
  return _[a1 _openContact];
}

id objc_msgSend__openNewStepFeedbackWithRoute_step_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openNewStepFeedbackWithRoute:step:");
}

id objc_msgSend__openSharedTrip_(void *a1, const char *a2, ...)
{
  return [a1 _openSharedTrip:];
}

id objc_msgSend__openSnapshot_inNewTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openSnapshot:inNewTab:");
}

id objc_msgSend__openURL_(void *a1, const char *a2, ...)
{
  return [a1 _openURL:];
}

id objc_msgSend__openURL_originatingView_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURL:originatingView:options:completionHandler:");
}

id objc_msgSend__openURL_referringURL_sourceApplication_session_sceneOptions_mkOptions_windowSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURL:referringURL:sourceApplication:session:sceneOptions:mkOptions:windowSize:");
}

id objc_msgSend__openWeatherPunchOutURL(void *a1, const char *a2, ...)
{
  return _[a1 _openWeatherPunchOutURL];
}

id objc_msgSend__openingHoursOptions(void *a1, const char *a2, ...)
{
  return _[a1 _openingHoursOptions];
}

id objc_msgSend__operatingHoursDescriptionFromDepartureSequence(void *a1, const char *a2, ...)
{
  return _[a1 _operatingHoursDescriptionFromDepartureSequence];
}

id objc_msgSend__operatingHoursDescriptionFromTransitLine(void *a1, const char *a2, ...)
{
  return _[a1 _operatingHoursDescriptionFromTransitLine];
}

id objc_msgSend__operatingHoursStringForTimeRanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_operatingHoursStringForTimeRanges:");
}

id objc_msgSend__oppositeCameraStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_oppositeCameraStyle:");
}

id objc_msgSend__optimizeRecordingData(void *a1, const char *a2, ...)
{
  return _[a1 _optimizeRecordingData];
}

id objc_msgSend__optimizeStorageModel(void *a1, const char *a2, ...)
{
  return _[a1 _optimizeStorageModel];
}

id objc_msgSend__optionsFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_optionsFromDictionary:");
}

id objc_msgSend__orderedCurrentSearchResults(void *a1, const char *a2, ...)
{
  return _[a1 _orderedCurrentSearchResults];
}

id objc_msgSend__orderedObjects(void *a1, const char *a2, ...)
{
  return _[a1 _orderedObjects];
}

id objc_msgSend__orderedUpdateKinds(void *a1, const char *a2, ...)
{
  return _[a1 _orderedUpdateKinds];
}

id objc_msgSend__originItem(void *a1, const char *a2, ...)
{
  return _[a1 _originItem];
}

id objc_msgSend__originTitle(void *a1, const char *a2, ...)
{
  return _[a1 _originTitle];
}

id objc_msgSend__originalRoute(void *a1, const char *a2, ...)
{
  return _[a1 _originalRoute];
}

id objc_msgSend__originatingBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _originatingBundleIdentifier];
}

id objc_msgSend__osUpdateRequiredAlert(void *a1, const char *a2, ...)
{
  return _[a1 _osUpdateRequiredAlert];
}

id objc_msgSend__overriddenUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 _overriddenUserInterfaceStyle];
}

id objc_msgSend__overviewAffineTransformForRect_zoomLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_overviewAffineTransformForRect:zoomLevel:");
}

id objc_msgSend__overviewTitleForWaypoint_route_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_overviewTitleForWaypoint:route:");
}

id objc_msgSend__paddingForItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_paddingForItem:");
}

id objc_msgSend__pageLoadFailureOccurred(void *a1, const char *a2, ...)
{
  return _[a1 _pageLoadFailureOccurred];
}

id objc_msgSend__panWithMomentum(void *a1, const char *a2, ...)
{
  return _[a1 _panWithMomentum];
}

id objc_msgSend__panningGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _panningGestureRecognizer];
}

id objc_msgSend__parentQuestionOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_parentQuestionOfClass:");
}

id objc_msgSend__parseComponents(void *a1, const char *a2, ...)
{
  return _[a1 _parseComponents];
}

id objc_msgSend__parseHTMLSnippet_group_completion_(void *a1, const char *a2, ...)
{
  return [a1 _parseHTMLSnippet:group:completion:];
}

id objc_msgSend__parseSubtitutes(void *a1, const char *a2, ...)
{
  return _[a1 _parseSubtitutes];
}

id objc_msgSend__passForTopUpWithTransitPasses_forRouteTNIs_routeCost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passForTopUpWithTransitPasses:forRouteTNIs:routeCost:");
}

id objc_msgSend__passKitLibraryMayHaveChanged(void *a1, const char *a2, ...)
{
  return _[a1 _passKitLibraryMayHaveChanged];
}

id objc_msgSend__passStopSubItemForSteps_boardStep_previousPassStop_currentRideDuration_fromLineColor_toLineColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passStopSubItemForSteps:boardStep:previousPassStop:currentRideDuration:fromLineColor:toLineColor:");
}

id objc_msgSend__passengersChoiceFromAvailablePartySizeOptions_optionPriceRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_passengersChoiceFromAvailablePartySizeOptions:optionPriceRange:");
}

id objc_msgSend__pasteStateWithAssumedSourceFidelity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pasteStateWithAssumedSourceFidelity:");
}

id objc_msgSend__pauseFlyoverAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _pauseFlyoverAnimation];
}

id objc_msgSend__pauseNavigationCameraMotion(void *a1, const char *a2, ...)
{
  return _[a1 _pauseNavigationCameraMotion];
}

id objc_msgSend__pauseOrResumeRealtimeUpdatesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _pauseOrResumeRealtimeUpdatesIfNeeded];
}

id objc_msgSend__perceivedSize(void *a1, const char *a2, ...)
{
  return _[a1 _perceivedSize];
}

id objc_msgSend__percentCollapsedFullToMedium(void *a1, const char *a2, ...)
{
  return _[a1 _percentCollapsedFullToMedium];
}

id objc_msgSend__performAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAction:");
}

id objc_msgSend__performAnalyticsForTappingOnAnnotationView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAnalyticsForTappingOnAnnotationView:");
}

id objc_msgSend__performAnalyticsForTappingOnLabelMarker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAnalyticsForTappingOnLabelMarker:");
}

id objc_msgSend__performBatchUpdates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBatchUpdates:completion:");
}

id objc_msgSend__performBatchUpdates_withAnimation_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBatchUpdates:withAnimation:animated:completion:");
}

id objc_msgSend__performBlockOnCallbackQueue_(void *a1, const char *a2, ...)
{
  return [a1 _performBlockOnCallbackQueue:];
}

id objc_msgSend__performButtonAction_(void *a1, const char *a2, ...)
{
  return [a1 _performButtonAction:];
}

id objc_msgSend__performCopyWithDropCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 _performCopyWithDropCoordinator:];
}

id objc_msgSend__performDTMActionWithPreference_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performDTMActionWithPreference:");
}

id objc_msgSend__performFlyoverAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performFlyoverAnimation:");
}

id objc_msgSend__performLayoutAllowingAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performLayoutAllowingAnimations:");
}

id objc_msgSend__performMapUpdateToUserInterfaceStyle_animation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performMapUpdateToUserInterfaceStyle:animation:");
}

id objc_msgSend__performMoveWithDropCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performMoveWithDropCoordinator:");
}

id objc_msgSend__performNextTestAfterShowingPlacecard(void *a1, const char *a2, ...)
{
  return _[a1 _performNextTestAfterShowingPlacecard];
}

id objc_msgSend__performOnCallbackQueue_(void *a1, const char *a2, ...)
{
  return [a1 _performOnCallbackQueue:];
}

id objc_msgSend__performPendingCollectionOperationIfAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _performPendingCollectionOperationIfAvailable];
}

id objc_msgSend__performPunchoutWithPhoto_index_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPunchoutWithPhoto:index:presentingViewController:");
}

id objc_msgSend__performRTTest(void *a1, const char *a2, ...)
{
  return _[a1 _performRTTest];
}

id objc_msgSend__performRemovalForTransportType(void *a1, const char *a2, ...)
{
  return _[a1 _performRemovalForTransportType];
}

id objc_msgSend__performRepeatableUpdateForKey_onEachGuidanceOutput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performRepeatableUpdateForKey:onEachGuidanceOutput:");
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performScrollTest_iterations_delta_length_scrollAxis_extraResultsBlock_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:length:scrollAxis:extraResultsBlock:completionBlock:");
}

id objc_msgSend__performScrollTestOfScrollView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTestOfScrollView:completion:");
}

id objc_msgSend__performScrollTestWithParameters_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTestWithParameters:completionBlock:");
}

id objc_msgSend__performSearch(void *a1, const char *a2, ...)
{
  return _[a1 _performSearch];
}

id objc_msgSend__performSearchIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _performSearchIfNeeded];
}

id objc_msgSend__performViewWillAppear(void *a1, const char *a2, ...)
{
  return _[a1 _performViewWillAppear];
}

id objc_msgSend__performWhenTrayPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhenTrayPresented:");
}

id objc_msgSend__performWithoutDeferringTransitions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithoutDeferringTransitions:");
}

id objc_msgSend__permitCompassShowing(void *a1, const char *a2, ...)
{
  return _[a1 _permitCompassShowing];
}

id objc_msgSend__persistData(void *a1, const char *a2, ...)
{
  return _[a1 _persistData];
}

id objc_msgSend__persistenceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _persistenceIdentifier];
}

id objc_msgSend__photoCarouselControllerRequestsPhotoCreditEditor(void *a1, const char *a2, ...)
{
  return _[a1 _photoCarouselControllerRequestsPhotoCreditEditor];
}

id objc_msgSend__photoCreditDidUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _photoCreditDidUpdate];
}

id objc_msgSend__photoCreditNameValidationErrorMessage(void *a1, const char *a2, ...)
{
  return _[a1 _photoCreditNameValidationErrorMessage];
}

id objc_msgSend__photoCreditSectionTitle(void *a1, const char *a2, ...)
{
  return _[a1 _photoCreditSectionTitle];
}

id objc_msgSend__photoForClientImageIdentifier_inPhotoList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_photoForClientImageIdentifier:inPhotoList:");
}

id objc_msgSend__photoPickerAnchoringViewForBoundingBox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_photoPickerAnchoringViewForBoundingBox:");
}

id objc_msgSend__photoPickerReplyHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_photoPickerReplyHandler:");
}

id objc_msgSend__photoTableViewCell(void *a1, const char *a2, ...)
{
  return _[a1 _photoTableViewCell];
}

id objc_msgSend__photos(void *a1, const char *a2, ...)
{
  return _[a1 _photos];
}

id objc_msgSend__pickupAddress(void *a1, const char *a2, ...)
{
  return _[a1 _pickupAddress];
}

id objc_msgSend__pickupCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _pickupCardSubtitle];
}

id objc_msgSend__pickupTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _pickupTemplatedViewSubtitle];
}

id objc_msgSend__pickupTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _pickupTemplatedViewTitle];
}

id objc_msgSend__pickupTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _pickupTrayTitle];
}

id objc_msgSend__pinchGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _pinchGestureRecognizer];
}

id objc_msgSend__pinnedScrollY(void *a1, const char *a2, ...)
{
  return _[a1 _pinnedScrollY];
}

id objc_msgSend__pipHugsLeading(void *a1, const char *a2, ...)
{
  return _[a1 _pipHugsLeading];
}

id objc_msgSend__pipLayout(void *a1, const char *a2, ...)
{
  return _[a1 _pipLayout];
}

id objc_msgSend__place(void *a1, const char *a2, ...)
{
  return _[a1 _place];
}

id objc_msgSend__placeCardContact(void *a1, const char *a2, ...)
{
  return _[a1 _placeCardContact];
}

id objc_msgSend__placeCardViewController(void *a1, const char *a2, ...)
{
  return _[a1 _placeCardViewController];
}

id objc_msgSend__placeCategoryType(void *a1, const char *a2, ...)
{
  return _[a1 _placeCategoryType];
}

id objc_msgSend__placeCollections(void *a1, const char *a2, ...)
{
  return _[a1 _placeCollections];
}

id objc_msgSend__placeData(void *a1, const char *a2, ...)
{
  return _[a1 _placeData];
}

id objc_msgSend__placeDataAsData(void *a1, const char *a2, ...)
{
  return _[a1 _placeDataAsData];
}

id objc_msgSend__placePhotoGalleryDidSelectDeleteImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placePhotoGalleryDidSelectDeleteImage:");
}

id objc_msgSend__placeQuestionnaire(void *a1, const char *a2, ...)
{
  return _[a1 _placeQuestionnaire];
}

id objc_msgSend__placeSummaryLayoutMetadata(void *a1, const char *a2, ...)
{
  return _[a1 _placeSummaryLayoutMetadata];
}

id objc_msgSend__placeType(void *a1, const char *a2, ...)
{
  return _[a1 _placeType];
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderLabel];
}

id objc_msgSend__platformArtworkHorizontalPositioningConstraint(void *a1, const char *a2, ...)
{
  return _[a1 _platformArtworkHorizontalPositioningConstraint];
}

id objc_msgSend__poiCategory(void *a1, const char *a2, ...)
{
  return _[a1 _poiCategory];
}

id objc_msgSend__poiShapeAnchorPointMarkersFromRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_poiShapeAnchorPointMarkersFromRoute:");
}

id objc_msgSend__poiShapeWaypointMarkersFromRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_poiShapeWaypointMarkersFromRoute:");
}

id objc_msgSend__pointsForDistance_(void *a1, const char *a2, ...)
{
  return [a1 _pointsForDistance:];
}

id objc_msgSend__pop(void *a1, const char *a2, ...)
{
  return _[a1 _pop];
}

id objc_msgSend__popCurrentPopoverViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popCurrentPopoverViewControllerAnimated:");
}

id objc_msgSend__popEditStack(void *a1, const char *a2, ...)
{
  return _[a1 _popEditStack];
}

id objc_msgSend__popIfTopModeIsInvalidAfterReconnection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popIfTopModeIsInvalidAfterReconnection:");
}

id objc_msgSend__popNavModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popNavModeWithCompletion:");
}

id objc_msgSend__popPalette_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popPalette:completion:");
}

id objc_msgSend__popSteppingModeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popSteppingModeWithCompletion:");
}

id objc_msgSend__popToHomeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popToHomeWithCompletion:");
}

id objc_msgSend__popoverController(void *a1, const char *a2, ...)
{
  return _[a1 _popoverController];
}

id objc_msgSend__populateAccessPointArtworkForItem_fromStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateAccessPointArtworkForItem:fromStep:");
}

id objc_msgSend__populateAccessPointArtworkForItem_fromStepsInPreferedOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateAccessPointArtworkForItem:fromStepsInPreferedOrder:");
}

id objc_msgSend__populateActionSection(void *a1, const char *a2, ...)
{
  return _[a1 _populateActionSection];
}

id objc_msgSend__populateCopy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateCopy:");
}

id objc_msgSend__populateExternalDevice(void *a1, const char *a2, ...)
{
  return _[a1 _populateExternalDevice];
}

id objc_msgSend__populateIncidentsSection(void *a1, const char *a2, ...)
{
  return _[a1 _populateIncidentsSection];
}

id objc_msgSend__populateLayoutFields_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateLayoutFields:");
}

id objc_msgSend__populateMenuSection(void *a1, const char *a2, ...)
{
  return _[a1 _populateMenuSection];
}

id objc_msgSend__populateRouteAttributes_forTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateRouteAttributes:forTransportType:");
}

id objc_msgSend__populateSessionAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 _populateSessionAnalytics];
}

id objc_msgSend__populateStationArtworkForItem_fromStepsInPreferedOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateStationArtworkForItem:fromStepsInPreferedOrder:");
}

id objc_msgSend__populateWithDictFromJSONDeserialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateWithDictFromJSONDeserialization:");
}

id objc_msgSend__positionOfSection_(void *a1, const char *a2, ...)
{
  return [a1 _positionOfSection:];
}

id objc_msgSend__postNotificationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _postNotificationIfNeeded];
}

id objc_msgSend__postWeakLocationNotification(void *a1, const char *a2, ...)
{
  return _[a1 _postWeakLocationNotification];
}

id objc_msgSend__powerLogLightLevelValue(void *a1, const char *a2, ...)
{
  return _[a1 _powerLogLightLevelValue];
}

id objc_msgSend__powerLogNavAppStateValue(void *a1, const char *a2, ...)
{
  return _[a1 _powerLogNavAppStateValue];
}

id objc_msgSend__powerLogNavTransportTypeValue(void *a1, const char *a2, ...)
{
  return _[a1 _powerLogNavTransportTypeValue];
}

id objc_msgSend__powerTitleAtRow_(void *a1, const char *a2, ...)
{
  return [a1 _powerTitleAtRow:];
}

id objc_msgSend__pptChromeTrayCoordinatorForCurrentMode(void *a1, const char *a2, ...)
{
  return _[a1 _pptChromeTrayCoordinatorForCurrentMode];
}

id objc_msgSend__ppt_notityETATrayUpdateCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_notityETATrayUpdateCompleted");
}

id objc_msgSend__ppt_numberOfDataFetchers(void *a1, const char *a2, ...)
{
  return [a1 _ppt_numberOfDataFetchers];
}

id objc_msgSend__ppt_selectBrowseCities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectBrowseCities");
}

id objc_msgSend__ppt_selectCategoryAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectCategoryAtIndex:");
}

id objc_msgSend__ppt_selectExploreGuides(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectExploreGuides");
}

id objc_msgSend__ppt_selectFirstCarplayBrowseCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectFirstCarplayBrowseCategory");
}

id objc_msgSend__ppt_selectFirstCuratedGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectFirstCuratedGuide");
}

id objc_msgSend__ppt_selectFirstGuidePublisher(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectFirstGuidePublisher");
}

id objc_msgSend__ppt_selectKeyboardMode(void *a1, const char *a2, ...)
{
  return [a1 _ppt_selectKeyboardMode];
}

id objc_msgSend__ppt_selectSeeAllCuratedCollections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ppt_selectSeeAllCuratedCollections");
}

id objc_msgSend__preciseLocationOffAdvisory(void *a1, const char *a2, ...)
{
  return _[a1 _preciseLocationOffAdvisory];
}

id objc_msgSend__preconditioningInfo(void *a1, const char *a2, ...)
{
  return _[a1 _preconditioningInfo];
}

id objc_msgSend__predicateToRemoveAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_predicateToRemoveAction:");
}

id objc_msgSend__preferredArrowColor(void *a1, const char *a2, ...)
{
  return _[a1 _preferredArrowColor];
}

id objc_msgSend__preferredButtonStackOrientation(void *a1, const char *a2, ...)
{
  return _[a1 _preferredButtonStackOrientation];
}

id objc_msgSend__preferredContentSizeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _preferredContentSizeDidChange];
}

id objc_msgSend__preferredDirectionForLaneGuidance(void *a1, const char *a2, ...)
{
  return _[a1 _preferredDirectionForLaneGuidance];
}

id objc_msgSend__preferredDisplayedSearchResultTypeWithItems_(void *a1, const char *a2, ...)
{
  return [a1 _preferredDisplayedSearchResultTypeWithItems:];
}

id objc_msgSend__preferredFontForTextStyle_maximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 _preferredFontForTextStyle:maximumContentSizeCategory:];
}

id objc_msgSend__preferredFontForTextStyle_maximumContentSizeCategory_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:maximumContentSizeCategory:compatibleWithTraitCollection:");
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return [a1 _preferredFontForTextStyle:variant:];
}

id objc_msgSend__preferredFontForTextStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:weight:");
}

id objc_msgSend__preferredHeightUsingCompactLayout_(void *a1, const char *a2, ...)
{
  return [a1 _preferredHeightUsingCompactLayout:];
}

id objc_msgSend__preferredModesForTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredModesForTransportType:");
}

id objc_msgSend__preferredStyle(void *a1, const char *a2, ...)
{
  return _[a1 _preferredStyle];
}

id objc_msgSend__preloadedTransitInfo(void *a1, const char *a2, ...)
{
  return _[a1 _preloadedTransitInfo];
}

id objc_msgSend__prepareActions(void *a1, const char *a2, ...)
{
  return _[a1 _prepareActions];
}

id objc_msgSend__prepareChromeForFirstUse(void *a1, const char *a2, ...)
{
  return _[a1 _prepareChromeForFirstUse];
}

id objc_msgSend__prepareConstraintsForHost_withLayoutGuide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareConstraintsForHost:withLayoutGuide:");
}

id objc_msgSend__prepareData(void *a1, const char *a2, ...)
{
  return _[a1 _prepareData];
}

id objc_msgSend__prepareForActiveNavigationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForActiveNavigationIfNeeded];
}

id objc_msgSend__prepareForCycling(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForCycling];
}

id objc_msgSend__prepareForDrive(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForDrive];
}

id objc_msgSend__prepareForFirstUse(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForFirstUse];
}

id objc_msgSend__prepareForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareForRequest:");
}

id objc_msgSend__prepareForSubmission(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForSubmission];
}

id objc_msgSend__prepareForSuggestionsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForSuggestionsIfNeeded];
}

id objc_msgSend__prepareForTransit(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForTransit];
}

id objc_msgSend__prepareForUpdatedRoute(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForUpdatedRoute];
}

id objc_msgSend__prepareForWalk(void *a1, const char *a2, ...)
{
  return _[a1 _prepareForWalk];
}

id objc_msgSend__prepareImageThumbnailWithOriginalImage_targetSize_scale_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareImageThumbnailWithOriginalImage:targetSize:scale:completion:");
}

id objc_msgSend__prepareLayoutMonitor(void *a1, const char *a2, ...)
{
  return _[a1 _prepareLayoutMonitor];
}

id objc_msgSend__prepareManeuverView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareManeuverView:");
}

id objc_msgSend__prepareNavigationDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _prepareNavigationDisplay];
}

id objc_msgSend__prepareNearby(void *a1, const char *a2, ...)
{
  return _[a1 _prepareNearby];
}

id objc_msgSend__preparePeriodicRouteRefreshTimerWithError_(void *a1, const char *a2, ...)
{
  return [a1 _preparePeriodicRouteRefreshTimerWithError:];
}

id objc_msgSend__prepareQuickRouteETAsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _prepareQuickRouteETAsIfNeeded];
}

id objc_msgSend__prepareRequestParametersForSubmission_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareRequestParametersForSubmission:");
}

id objc_msgSend__prepareRideBookingForFirstUse(void *a1, const char *a2, ...)
{
  return _[a1 _prepareRideBookingForFirstUse];
}

id objc_msgSend__prepareRouteSearchControllers(void *a1, const char *a2, ...)
{
  return _[a1 _prepareRouteSearchControllers];
}

id objc_msgSend__prepareSubviewsForReuse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareSubviewsForReuse:");
}

id objc_msgSend__prepareToReceiveDrop(void *a1, const char *a2, ...)
{
  return _[a1 _prepareToReceiveDrop];
}

id objc_msgSend__presentActivityControllerForDestination_searchResult_dictionary_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentActivityControllerForDestination:searchResult:dictionary:completion:");
}

id objc_msgSend__presentActivityViewController_sourceView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentActivityViewController:sourceView:completion:");
}

id objc_msgSend__presentAddAPlaceFromEntryPoint_withEditingBlock_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAddAPlaceFromEntryPoint:withEditingBlock:completion:");
}

id objc_msgSend__presentAddPhotosControllerWithSourceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAddPhotosControllerWithSourceType:");
}

id objc_msgSend__presentAddressUI(void *a1, const char *a2, ...)
{
  return _[a1 _presentAddressUI];
}

id objc_msgSend__presentAlertForError_(void *a1, const char *a2, ...)
{
  return [a1 _presentAlertForError:];
}

id objc_msgSend__presentAlertUI(void *a1, const char *a2, ...)
{
  return _[a1 _presentAlertUI];
}

id objc_msgSend__presentAlertUIWithStatus_repeatPrompt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAlertUIWithStatus:repeatPrompt:");
}

id objc_msgSend__presentAlertViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAlertViewController:animated:");
}

id objc_msgSend__presentAnyPendingAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAnyPendingAlert:");
}

id objc_msgSend__presentAutocompleteViewController_forItemKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentAutocompleteViewController:forItemKind:");
}

id objc_msgSend__presentCardForSharedTrip_(void *a1, const char *a2, ...)
{
  return [a1 _presentCardForSharedTrip];
}

id objc_msgSend__presentChooseAPlaceWithAppState_entryPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentChooseAPlaceWithAppState:entryPoint:");
}

id objc_msgSend__presentContactVC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentContactVC:");
}

id objc_msgSend__presentContainmentUIIsParentContainment_currentlySelectedMUIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentContainmentUIIsParentContainment:currentlySelectedMUIDs:");
}

id objc_msgSend__presentCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 _presentCoordinate];
}

id objc_msgSend__presentCurrentMenuViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentCurrentMenuViewControllerAnimated:completion:");
}

id objc_msgSend__presentCurrentPopoverAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentCurrentPopoverAnimated:completion:");
}

id objc_msgSend__presentDeletionConfirmationFor_inCollection_sourceView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDeletionConfirmationFor:inCollection:sourceView:completion:");
}

id objc_msgSend__presentDirectionDetailsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDirectionDetailsWithCompletion:");
}

id objc_msgSend__presentDismissTrayTestWithLatencySubTestName_animationSubTestName_presenter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDismissTrayTestWithLatencySubTestName:animationSubTestName:presenter:completion:");
}

id objc_msgSend__presentDismissTrayTestWithNumberOfRounds_latencySubTestName_animationSubTestName_presenter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentDismissTrayTestWithNumberOfRounds:latencySubTestName:animationSubTestName:presenter:completion:");
}

id objc_msgSend__presentEVOnboardingHintForVehicle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentEVOnboardingHintForVehicle:");
}

id objc_msgSend__presentEbikeOptions(void *a1, const char *a2, ...)
{
  return _[a1 _presentEbikeOptions];
}

id objc_msgSend__presentElevationGraphForRoute_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentElevationGraphForRoute:fromView:");
}

id objc_msgSend__presentEntryPointEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentEntryPointEditor:");
}

id objc_msgSend__presentFailedToSubmitAlertForResponse_withPresentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentFailedToSubmitAlertForResponse:withPresentingViewController:");
}

id objc_msgSend__presentInternalErrorAlert_onViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentInternalErrorAlert:onViewController:");
}

id objc_msgSend__presentInternalInstallRadarPromptAlertForUserInfo_response_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentInternalInstallRadarPromptAlertForUserInfo:response:");
}

id objc_msgSend__presentLightweightFeedbackAcknowledgmentScreen(void *a1, const char *a2, ...)
{
  return _[a1 _presentLightweightFeedbackAcknowledgmentScreen];
}

id objc_msgSend__presentLoadingResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLoadingResults:");
}

id objc_msgSend__presentLocationServicesAlertController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentLocationServicesAlertController:");
}

id objc_msgSend__presentMacRouteEditingWithEditRequired_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentMacRouteEditingWithEditRequired:index:");
}

id objc_msgSend__presentMenuViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentMenuViewController:animated:completion:");
}

id objc_msgSend__presentMoreOptions(void *a1, const char *a2, ...)
{
  return _[a1 _presentMoreOptions];
}

id objc_msgSend__presentPOIEnrichmentCoordinator_presentingViewController_progressObserver_dismissalDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPOIEnrichmentCoordinator:presentingViewController:progressObserver:dismissalDelegate:");
}

id objc_msgSend__presentPOIEnrichmentCoordinator_withProgressObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPOIEnrichmentCoordinator:withProgressObserver:");
}

id objc_msgSend__presentPOIEnrichmentViewController(void *a1, const char *a2, ...)
{
  return _[a1 _presentPOIEnrichmentViewController];
}

id objc_msgSend__presentPhotoOptions(void *a1, const char *a2, ...)
{
  return _[a1 _presentPhotoOptions];
}

id objc_msgSend__presentPlaceCardForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPlaceCardForMapItem:");
}

id objc_msgSend__presentPlaceCardViewControllerForMapItem_modally_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPlaceCardViewControllerForMapItem:modally:");
}

id objc_msgSend__presentPlacecardImageryCommentViewControllerWithReport_question_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPlacecardImageryCommentViewControllerWithReport:question:completion:");
}

id objc_msgSend__presentPopoverViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPopoverViewController:animated:completion:");
}

id objc_msgSend__presentPopupViewForMessage_timeout_isError_ignoreChromeTransitioning_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPopupViewForMessage:timeout:isError:ignoreChromeTransitioning:");
}

id objc_msgSend__presentPrivacyController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentPrivacyController:");
}

id objc_msgSend__presentPrivacyView(void *a1, const char *a2, ...)
{
  return _[a1 _presentPrivacyView];
}

id objc_msgSend__presentPushNotificationPromptIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _presentPushNotificationPromptIfNecessary];
}

id objc_msgSend__presentQueuedInterruptionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _presentQueuedInterruptionIfNeeded];
}

id objc_msgSend__presentReportComposerWithAppState_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentReportComposerWithAppState:completion:");
}

id objc_msgSend__presentReportComposerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentReportComposerWithCompletion:");
}

id objc_msgSend__presentRouteOptions(void *a1, const char *a2, ...)
{
  return _[a1 _presentRouteOptions];
}

id objc_msgSend__presentSceneWithRootViewController_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentSceneWithRootViewController:delegate:");
}

id objc_msgSend__presentSearchRefinementWithUserInfo_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentSearchRefinementWithUserInfo:completionHandler:");
}

id objc_msgSend__presentThirdPartyPhotoSharePromptIfNecessaryForReviewedPlace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentThirdPartyPhotoSharePromptIfNecessaryForReviewedPlace:");
}

id objc_msgSend__presentTrayWithDefaultLayout_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentTrayWithDefaultLayout:animated:");
}

id objc_msgSend__presentUnavailableRoutesList(void *a1, const char *a2, ...)
{
  return _[a1 _presentUnavailableRoutesList];
}

id objc_msgSend__presentVenuesPlaceCardItem_shouldSaveSelectionState_source_resetPlaceCardViewControllerBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentVenuesPlaceCardItem:shouldSaveSelectionState:source:resetPlaceCardViewControllerBlock:");
}

id objc_msgSend__presentViewController_(void *a1, const char *a2, ...)
{
  return [a1 _presentViewController:];
}

id objc_msgSend__presentViewController_sourceView_sourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentViewController:sourceView:sourceRect:");
}

id objc_msgSend__presentWebBundleWithReport_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentWebBundleWithReport:completion:");
}

id objc_msgSend__presentWebBundleWithReport_withOutcomeCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _presentWebBundleWithReport:withOutcomeCompletion:];
}

id objc_msgSend__presentationCoordinate(void *a1, const char *a2, ...)
{
  return _[a1 _presentationCoordinate];
}

id objc_msgSend__presentationCourse(void *a1, const char *a2, ...)
{
  return _[a1 _presentationCourse];
}

id objc_msgSend__preserveAutosharingContacts_inHistoryEntry_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preserveAutosharingContacts:inHistoryEntry:completion:");
}

id objc_msgSend__preserveFocusedItemFromContext_toContext_(void *a1, const char *a2, ...)
{
  return [a1 _preserveFocusedItemFromContext:toContext:];
}

id objc_msgSend__pressedDelete(void *a1, const char *a2, ...)
{
  return _[a1 _pressedDelete];
}

id objc_msgSend__pressedDetails(void *a1, const char *a2, ...)
{
  return _[a1 _pressedDetails];
}

id objc_msgSend__pressedDirections(void *a1, const char *a2, ...)
{
  return _[a1 _pressedDirections];
}

id objc_msgSend__pressedDownload(void *a1, const char *a2, ...)
{
  return _[a1 _pressedDownload];
}

id objc_msgSend__pressedEdit(void *a1, const char *a2, ...)
{
  return _[a1 _pressedEdit];
}

id objc_msgSend__pressedOfflineDownloadButton(void *a1, const char *a2, ...)
{
  return _[a1 _pressedOfflineDownloadButton];
}

id objc_msgSend__pressedOtherStations(void *a1, const char *a2, ...)
{
  return _[a1 _pressedOtherStations];
}

id objc_msgSend__pressedReport(void *a1, const char *a2, ...)
{
  return _[a1 _pressedReport];
}

id objc_msgSend__pressedSAR(void *a1, const char *a2, ...)
{
  return _[a1 _pressedSAR];
}

id objc_msgSend__pressedShareETAInTray(void *a1, const char *a2, ...)
{
  return _[a1 _pressedShareETAInTray];
}

id objc_msgSend__pressedVoiceVolume(void *a1, const char *a2, ...)
{
  return _[a1 _pressedVoiceVolume];
}

id objc_msgSend__previewSize(void *a1, const char *a2, ...)
{
  return _[a1 _previewSize];
}

id objc_msgSend__previousContext(void *a1, const char *a2, ...)
{
  return _[a1 _previousContext];
}

id objc_msgSend__previousStepBeforeStep_withManeuvers_afterManeuver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previousStepBeforeStep:withManeuvers:afterManeuver:");
}

id objc_msgSend__previousSubmission(void *a1, const char *a2, ...)
{
  return _[a1 _previousSubmission];
}

id objc_msgSend__priceDescription(void *a1, const char *a2, ...)
{
  return _[a1 _priceDescription];
}

id objc_msgSend__priceRangeString(void *a1, const char *a2, ...)
{
  return _[a1 _priceRangeString];
}

id objc_msgSend__primaryColorForAction_(void *a1, const char *a2, ...)
{
  return [a1 _primaryColorForAction:];
}

id objc_msgSend__primaryLabelLineSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _primaryLabelLineSpacing];
}

id objc_msgSend__primaryManeuverViewVariant(void *a1, const char *a2, ...)
{
  return _[a1 _primaryManeuverViewVariant];
}

id objc_msgSend__printControllerForRoute_searchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_printControllerForRoute:searchString:");
}

id objc_msgSend__printControllerForSearchString_searchResults_title_subTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_printControllerForSearchString:searchResults:title:subTitle:");
}

id objc_msgSend__printInfoForSearchString_route_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_printInfoForSearchString:route:title:");
}

id objc_msgSend__priorityForMessageOfType_(void *a1, const char *a2, ...)
{
  return [_priorityForMessageOfType:];
}

id objc_msgSend__priorityFunction(void *a1, const char *a2, ...)
{
  return _[a1 _priorityFunction];
}

id objc_msgSend__proceedToFavorites(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToFavorites];
}

id objc_msgSend__proceedToIncidentsQuestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_proceedToIncidentsQuestion:");
}

id objc_msgSend__proceedToLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToLibrary];
}

id objc_msgSend__proceedToMyGuides(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToMyGuides];
}

id objc_msgSend__proceedToNextState(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToNextState];
}

id objc_msgSend__proceedToOfflineMaps(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToOfflineMaps];
}

id objc_msgSend__proceedToRatings(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToRatings];
}

id objc_msgSend__proceedToReports(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToReports];
}

id objc_msgSend__proceedToTravelPreferences(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToTravelPreferences];
}

id objc_msgSend__proceedToVirtualGarage(void *a1, const char *a2, ...)
{
  return _[a1 _proceedToVirtualGarage];
}

id objc_msgSend__processARInfosUpdate_(void *a1, const char *a2, ...)
{
  return [a1 _processARInfosUpdate:];
}

id objc_msgSend__processDeletion_forMapsSuggestionsEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processDeletion:forMapsSuggestionsEntry:");
}

id objc_msgSend__processDeletion_forSharedTripSummary_(void *a1, const char *a2, ...)
{
  return [a1 _processDeletion:forSharedTripSummary:];
}

id objc_msgSend__processHideJunctionViewInfo(void *a1, const char *a2, ...)
{
  return _[a1 _processHideJunctionViewInfo];
}

id objc_msgSend__processHideLaneInfo(void *a1, const char *a2, ...)
{
  return _[a1 _processHideLaneInfo];
}

id objc_msgSend__processIncomingRoutes_error_directionsError_fromTicket_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processIncomingRoutes:error:directionsError:fromTicket:");
}

id objc_msgSend__processLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processLocations:");
}

id objc_msgSend__processMKOptions_(void *a1, const char *a2, ...)
{
  return [a1 _processMKOptions:];
}

id objc_msgSend__processPendingDeletions(void *a1, const char *a2, ...)
{
  return _[a1 _processPendingDeletions];
}

id objc_msgSend__processRecents(void *a1, const char *a2, ...)
{
  return _[a1 _processRecents];
}

id objc_msgSend__processResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processResult:");
}

id objc_msgSend__processResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processResults:");
}

id objc_msgSend__processSceneChange_(void *a1, const char *a2, ...)
{
  return [a1 _processSceneChange:];
}

id objc_msgSend__processShowJunctionViewInfo_(void *a1, const char *a2, ...)
{
  return [a1 _processShowJunctionViewInfo:];
}

id objc_msgSend__processShowLaneInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processShowLaneInfo:");
}

id objc_msgSend__processSignInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processSignInfo:");
}

id objc_msgSend__processSignUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _processSignUpdate];
}

id objc_msgSend__processTaskFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processTaskFinished:");
}

id objc_msgSend__processTopSuggestions_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processTopSuggestions:error:");
}

id objc_msgSend__processTopSuggestions_error_wasFromStorageFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processTopSuggestions:error:wasFromStorageFile:");
}

id objc_msgSend__processUpcomingInfoViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processUpcomingInfoViews:");
}

id objc_msgSend__processUpdatedSyncVehicles_(void *a1, const char *a2, ...)
{
  return [a1 _processUpdatedSyncVehicles:];
}

id objc_msgSend__processUsePersistentDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _processUsePersistentDisplay];
}

id objc_msgSend__processVLDebugInfo_(void *a1, const char *a2, ...)
{
  return [a1 _processVLDebugInfo:];
}

id objc_msgSend__processWindowScene_willConnect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processWindowScene:willConnect:");
}

id objc_msgSend__progressAlongRouteWithDistanceInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_progressAlongRouteWithDistanceInfo:");
}

id objc_msgSend__progressView(void *a1, const char *a2, ...)
{
  return _[a1 _progressView];
}

id objc_msgSend__promptForCurrentLocationConfirmationWithDirectionItem_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptForCurrentLocationConfirmationWithDirectionItem:userInfo:");
}

id objc_msgSend__promptForEditRequired_forWaypointAtIndex_inDirectionItem_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptForEditRequired:forWaypointAtIndex:inDirectionItem:userInfo:");
}

id objc_msgSend__promptForRestart(void *a1, const char *a2, ...)
{
  return _[a1 _promptForRestart];
}

id objc_msgSend__promptForSimulationAndStartNavigationForRouteCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptForSimulationAndStartNavigationForRouteCollection:");
}

id objc_msgSend__promptToEndNavigationAccepted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptToEndNavigationAccepted:");
}

id objc_msgSend__propagateDidSelectInvocation_(void *a1, const char *a2, ...)
{
  return [a1 _propagateDidSelectInvocation:];
}

id objc_msgSend__propagateShouldSelectInvocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propagateShouldSelectInvocation:");
}

id objc_msgSend__propertyIsEnum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propertyIsEnum:");
}

id objc_msgSend__protocolForSelector_(void *a1, const char *a2, ...)
{
  return [a1 _protocolForSelector:];
}

id objc_msgSend__provideAbandonmentFeedback(void *a1, const char *a2, ...)
{
  return _[a1 _provideAbandonmentFeedback];
}

id objc_msgSend__provideFeedbackForContact_(void *a1, const char *a2, ...)
{
  return [a1 _provideFeedbackForContact:];
}

id objc_msgSend__providerNameAndPriceAttributedStringForMapItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_providerNameAndPriceAttributedStringForMapItem:");
}

id objc_msgSend__providerNames(void *a1, const char *a2, ...)
{
  return _[a1 _providerNames];
}

id objc_msgSend__pruneLeachedLocations(void *a1, const char *a2, ...)
{
  return _[a1 _pruneLeachedLocations];
}

id objc_msgSend__pruneOldResults(void *a1, const char *a2, ...)
{
  return _[a1 _pruneOldResults];
}

id objc_msgSend__publisherLogoSize(void *a1, const char *a2, ...)
{
  return _[a1 _publisherLogoSize];
}

id objc_msgSend__publisherLogoTapped(void *a1, const char *a2, ...)
{
  return _[a1 _publisherLogoTapped];
}

id objc_msgSend__publisherSpecialization(void *a1, const char *a2, ...)
{
  return _[a1 _publisherSpecialization];
}

id objc_msgSend__punchoutToViewModel_(void *a1, const char *a2, ...)
{
  return [a1 _punchoutToViewModel];
}

id objc_msgSend__pushEditState_shouldRecenterOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushEditState:shouldRecenterOnCompletion:");
}

id objc_msgSend__pushGuidanceState(void *a1, const char *a2, ...)
{
  return _[a1 _pushGuidanceState];
}

id objc_msgSend__pushGuidanceStateIfChangedWithVibration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushGuidanceStateIfChangedWithVibration:");
}

id objc_msgSend__pushItem_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushItem:index:");
}

id objc_msgSend__pushPalette_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pushPalette:animated:completion:");
}

id objc_msgSend__pushSaveContaineeWithKeyboard_(void *a1, const char *a2, ...)
{
  return [a1 _pushSaveContaineeWithKeyboard:];
}

id objc_msgSend__query(void *a1, const char *a2, ...)
{
  return _[a1 _query];
}

id objc_msgSend__questionDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_questionDidChange:");
}

id objc_msgSend__questionsFromLayoutItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_questionsFromLayoutItems:");
}

id objc_msgSend__quickLinks(void *a1, const char *a2, ...)
{
  return _[a1 _quickLinks];
}

id objc_msgSend__quickRouteManagerForIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 _quickRouteManagerForIndexPath:];
}

id objc_msgSend__rapDisclosureViewForCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rapDisclosureViewForCell:");
}

id objc_msgSend__rapDisclosureViewForCell_routeStep_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rapDisclosureViewForCell:routeStep:");
}

id objc_msgSend__rap_charactersCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rap_charactersCount");
}

id objc_msgSend__rap_substringWithNumberOfCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rap_substringWithNumberOfCharacters:");
}

id objc_msgSend__ratingKeyForAppleRating_(void *a1, const char *a2, ...)
{
  return [a1 _ratingKeyForAppleRating:];
}

id objc_msgSend__ratingKeyForCategory_(void *a1, const char *a2, ...)
{
  return [a1 _ratingKeyForCategory:];
}

id objc_msgSend__reactivateChromeAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reactivateChromeAfterDelay:");
}

id objc_msgSend__readFromDefaults(void *a1, const char *a2, ...)
{
  return _[a1 _readFromDefaults];
}

id objc_msgSend__readFromUserDefaultsWithKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readFromUserDefaultsWithKeys:");
}

id objc_msgSend__readObjectFromKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readObjectFromKey:");
}

id objc_msgSend__realTimeAvailableEVCharger(void *a1, const char *a2, ...)
{
  return _[a1 _realTimeAvailableEVCharger];
}

id objc_msgSend__reapplySignCountdown(void *a1, const char *a2, ...)
{
  return _[a1 _reapplySignCountdown];
}

id objc_msgSend__reasonString(void *a1, const char *a2, ...)
{
  return _[a1 _reasonString];
}

id objc_msgSend__rebuildAuthSections(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildAuthSections];
}

id objc_msgSend__rebuildButtons(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildButtons];
}

id objc_msgSend__rebuildContent(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildContent];
}

id objc_msgSend__rebuildDB(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildDB];
}

id objc_msgSend__rebuildExpectedEVInfos(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildExpectedEVInfos];
}

id objc_msgSend__rebuildGrid(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildGrid];
}

id objc_msgSend__rebuildItems(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildItems];
}

id objc_msgSend__rebuildListView(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildListView];
}

id objc_msgSend__rebuildStopsSection(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildStopsSection];
}

id objc_msgSend__rebuildSubItems(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildSubItems];
}

id objc_msgSend__rebuildTableSections(void *a1, const char *a2, ...)
{
  return _[a1 _rebuildTableSections];
}

id objc_msgSend__recalculateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _recalculateIfNeeded];
}

id objc_msgSend__recalculateSectionCounts(void *a1, const char *a2, ...)
{
  return _[a1 _recalculateSectionCounts];
}

id objc_msgSend__recalculateShadowAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _recalculateShadowAttributes];
}

id objc_msgSend__recalculateState(void *a1, const char *a2, ...)
{
  return _[a1 _recalculateState];
}

id objc_msgSend__receivedCardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _receivedCardSubtitle];
}

id objc_msgSend__receivedNewRoute_traffic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_receivedNewRoute:traffic:");
}

id objc_msgSend__receivedTemplatedViewSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 _receivedTemplatedViewSubtitle];
}

id objc_msgSend__receivedTemplatedViewTitle(void *a1, const char *a2, ...)
{
  return _[a1 _receivedTemplatedViewTitle];
}

id objc_msgSend__receivedTrayTitle(void *a1, const char *a2, ...)
{
  return _[a1 _receivedTrayTitle];
}

id objc_msgSend__recentAutocompleteSessionData(void *a1, const char *a2, ...)
{
  return _[a1 _recentAutocompleteSessionData];
}

id objc_msgSend__recentByUnmappingCuratedCollectionsForRecents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recentByUnmappingCuratedCollectionsForRecents:");
}

id objc_msgSend__recentPlaceDisplayWithSupersededStorageIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recentPlaceDisplayWithSupersededStorageIdentifier:");
}

id objc_msgSend__recentWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recentWithIdentifier:");
}

id objc_msgSend__recenterButton(void *a1, const char *a2, ...)
{
  return _[a1 _recenterButton];
}

id objc_msgSend__recenterOnRouteAnimated_(void *a1, const char *a2, ...)
{
  return [a1 _recenterOnRouteAnimated:];
}

id objc_msgSend__recentsByMappingCuratedCollectionsForRecents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recentsByMappingCuratedCollectionsForRecents:");
}

id objc_msgSend__recentsEngine(void *a1, const char *a2, ...)
{
  return _[a1 _recentsEngine];
}

id objc_msgSend__recentsFromHistoryQuery(void *a1, const char *a2, ...)
{
  return _[a1 _recentsFromHistoryQuery];
}

id objc_msgSend__recommendedContactsForDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _recommendedContactsForDisplay];
}

id objc_msgSend__reconfigureSnapshot_updatedModels_(void *a1, const char *a2, ...)
{
  return [a1 _reconfigureSnapshot:updatedModels:];
}

id objc_msgSend__recordAutohidingContentIsHidden_forContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordAutohidingContentIsHidden:forContext:");
}

id objc_msgSend__recordChangeToLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordChangeToLayout:");
}

id objc_msgSend__recordDismissalForTransportType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordDismissalForTransportType:");
}

id objc_msgSend__recordEVAnalyticsWithResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recordEVAnalyticsWithResult:");
}

id objc_msgSend__recordLeechedLocation_(void *a1, const char *a2, ...)
{
  return [a1 _recordLeechedLocation:];
}