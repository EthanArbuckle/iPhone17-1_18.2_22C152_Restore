uint64_t sub_100164964()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t v3;

  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001649C8()
{
  swift_task_dealloc();
  v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100164A34(uint64_t a1)
{
  v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_100164AB8()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EAF8);
  v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Preheating offline translation engine", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v12 = Locale._bridgeToObjectiveC()().super.isa;
  id v13 = [v10 initWithSourceLocale:isa targetLocale:v12];

  id v14 = [objc_allocWithZone((Class)_LTSpeechTranslationRequest) initWithLocalePair:v13];
  [v14 setForcedOfflineTranslation:1];
  [v14 setCensorSpeech:byte_10030EB88];
  v15 = self;
  id v16 = [v13 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class v17 = Locale._bridgeToObjectiveC()().super.isa;
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v5, v2);
  id v19 = [v13 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class v20 = Locale._bridgeToObjectiveC()().super.isa;
  v18(v5, v2);
  v27 = sub_1001655A8;
  uint64_t v28 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  v25 = sub_100164A34;
  v26 = &unk_1002D0260;
  v21 = _Block_copy(&aBlock);
  [v15 configInfoForLocale:v17 otherLocale:v20 completion:v21];
  _Block_release(v21);

  v27 = sub_10008E9D4;
  uint64_t v28 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  v25 = sub_100230FBC;
  v26 = &unk_1002D0288;
  v22 = _Block_copy(&aBlock);
  [v1 preheatForRequest:v14 completion:v22];
  _Block_release(v22);
}

id sub_100164E80(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F8598);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1001654B8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100094728;
  aBlock[3] = &unk_1002D0238;
  v11 = _Block_copy(aBlock);
  swift_release();
  [a2 setCompletionHandler:v11];
  _Block_release(v11);
  return [a3 translate:a2];
}

id sub_100165040(uint64_t a1)
{
  return sub_100164E80(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100165048(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1002EE650 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100011554(v2, (uint64_t)qword_10030EAF8);
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)v5 = 138412290;
      uint64_t v19 = _convertErrorToNSError(_:)();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v6 = v19;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Text translation handler returned error: %@", v5, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
    }

LABEL_21:
    sub_100007620(&qword_1002F8598);
    return CheckedContinuation.resume(throwing:)();
  }
  if (!a1)
  {
LABEL_16:
    if (qword_1002EE650 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100011554(v15, (uint64_t)qword_10030EAF8);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Text translation handler returned no text", v18, 2u);
      swift_slowDealloc();
    }

    sub_100165554();
    swift_allocError();
    goto LABEL_21;
  }
  id v7 = a1;
  id v8 = [v7 translatedText];
  id v9 = [v8 length];

  if ((uint64_t)v9 <= 0)
  {

    goto LABEL_16;
  }
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030EAF8);
  v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Text translation handler returned _LTCombinedTranslationResult", v13, 2u);
    swift_slowDealloc();
  }

  sub_10000B0CC(0, &qword_1002F8368);
  sub_10016577C();
  sub_100007620(&qword_1002F8598);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_100165424()
{
  uint64_t v1 = sub_100007620(&qword_1002F8598);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001654B8(void *a1, uint64_t a2)
{
  sub_100007620(&qword_1002F8598);

  return sub_100165048(a1, a2);
}

uint64_t sub_10016553C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016554C()
{
  return swift_release();
}

unint64_t sub_100165554()
{
  unint64_t result = qword_1002F85A0;
  if (!qword_1002F85A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F85A0);
  }
  return result;
}

void sub_1001655A8()
{
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EAF8);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = Dictionary.description.getter();
    sub_100202FD4(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished preheating asset updating if needed with config info: %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_10016577C()
{
  unint64_t result = qword_1002F85A8;
  if (!qword_1002F85A8)
  {
    sub_10000B0CC(255, &qword_1002F8368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F85A8);
  }
  return result;
}

unsigned char *_s6ErrorsOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100165880);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s6ErrorsOMa()
{
  return &_s6ErrorsON;
}

ValueMetadata *type metadata accessor for RequestOptions()
{
  return &type metadata for RequestOptions;
}

unint64_t sub_1001658CC()
{
  unint64_t result = qword_1002F85B0;
  if (!qword_1002F85B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F85B0);
  }
  return result;
}

uint64_t sub_100165930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  id v74 = a3;
  uint64_t v75 = a4;
  uint64_t v8 = type metadata accessor for TranslationTaskHint();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a5 = swift_getKeyPath();
  *(unsigned char *)(a5 + 8) = 0;
  os_log_type_t v12 = (int *)type metadata accessor for MainLayoutView();
  id v13 = (uint64_t *)(a5 + v12[5]);
  *id v13 = swift_getKeyPath();
  sub_100007620(&qword_1002F3598);
  swift_storeEnumTagMultiPayload();
  id v14 = (uint64_t *)(a5 + v12[6]);
  type metadata accessor for SceneContext();
  sub_100168B24((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  *id v14 = EnvironmentObject.init()();
  v14[1] = v15;
  id v16 = (uint64_t *)(a5 + v12[7]);
  type metadata accessor for ConversationContext(0);
  sub_100168B24(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  *id v16 = EnvironmentObject.init()();
  v16[1] = v17;
  uint64_t v68 = v12[12];
  *(void *)(a5 + v68) = a1;
  *(void *)(a5 + v12[10]) = a2;
  id v18 = objc_allocWithZone((Class)_LTTranslator);
  uint64_t v77 = a1;
  swift_retain();
  uint64_t v69 = a2;
  swift_retain();
  id v19 = [v18 init];
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for TranslationTaskHint.speech(_:), v8);
  type metadata accessor for LanguagesService();
  swift_allocObject();
  Class v20 = (void *)LanguagesService.init(task:)();
  type metadata accessor for DeviceHelper();
  swift_allocObject();
  v21 = sub_1000BAA9C();
  id v22 = objc_allocWithZone((Class)type metadata accessor for RecordingHelper());
  uint64_t v23 = swift_retain();
  id v24 = sub_10018C43C(v23);
  v73 = v21;
  swift_release();
  type metadata accessor for TTSManager();
  swift_allocObject();
  id v25 = v19;
  id v26 = v24;
  uint64_t v27 = sub_1002311F8(v25, v26);
  v76 = v12;
  uint64_t v67 = v12[11];
  uint64_t v70 = a5;
  *(void *)(a5 + v67) = v27;
  type metadata accessor for ErrorStateContext();
  swift_allocObject();
  uint64_t v28 = sub_1000D1B4C();
  uint64_t v29 = *(void *)(a1 + 64);
  uint64_t v64 = type metadata accessor for ComposeTranslationViewModel(0);
  swift_allocObject();
  id v30 = v25;
  id v31 = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = v74;
  uint64_t v33 = v75;
  swift_retain();
  uint64_t v34 = sub_10006A5E4(v30, (uint64_t)v20, v29, v28, v27, v31, v32, v33);
  id v66 = v30;

  id v74 = v20;
  swift_release();
  swift_release();
  uint64_t v72 = v28;
  swift_release();
  swift_release();
  v35 = v31;

  id v65 = v32;
  swift_release();
  v36 = (void **)(v77 + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager_selfLoggingInvocationsHolders);
  swift_beginAccess();
  v37 = *v36;
  swift_retain();
  uint64_t v71 = v34;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v36 = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_100202F58(0, v37[2] + 1, 1, v37);
    *v36 = v37;
  }
  unint64_t v40 = v37[2];
  unint64_t v39 = v37[3];
  if (v40 >= v39 >> 1)
  {
    v37 = sub_100202F58((void *)(v39 > 1), v40 + 1, 1, v37);
    *v36 = v37;
  }
  uint64_t v79 = v64;
  v80 = &off_1002CB3F8;
  uint64_t v41 = v71;
  *(void *)&long long v78 = v71;
  v37[2] = v40 + 1;
  sub_100048DE4(&v78, (uint64_t)&v37[5 * v40 + 4]);
  swift_endAccess();
  uint64_t v42 = v77;
  swift_release();
  uint64_t v43 = v70;
  uint64_t v44 = v70 + v76[8];
  *(void *)uint64_t v44 = sub_100167758;
  *(void *)(v44 + 8) = v41;
  *(unsigned char *)(v44 + 16) = 0;
  uint64_t v45 = *(void *)(v42 + 72);
  uint64_t v46 = *(void *)(v43 + v67);
  uint64_t v67 = type metadata accessor for ConversationViewModel();
  id v47 = objc_allocWithZone((Class)v67);
  uint64_t v48 = (uint64_t)v73;
  swift_retain();
  id v49 = v66;
  id v50 = v35;
  uint64_t v51 = (uint64_t)v74;
  swift_retain();
  uint64_t v52 = v72;
  swift_retain();
  id v53 = v65;
  swift_retain();
  swift_retain();
  swift_retain();
  v54 = sub_1000A854C(v49, v51, v45, v48, v50, v46, v52, v53);
  v55 = (void **)(*(void *)(v43 + v68)
                  + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager_selfLoggingInvocationsHolders);
  swift_beginAccess();
  v56 = *v55;
  id v57 = v54;
  swift_retain();
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  *v55 = v56;
  if ((v58 & 1) == 0)
  {
    v56 = sub_100202F58(0, v56[2] + 1, 1, v56);
    *v55 = v56;
  }
  unint64_t v60 = v56[2];
  unint64_t v59 = v56[3];
  if (v60 >= v59 >> 1)
  {
    v56 = sub_100202F58((void *)(v59 > 1), v60 + 1, 1, v56);
    *v55 = v56;
  }
  uint64_t v79 = v67;
  v80 = &off_1002CCA50;
  *(void *)&long long v78 = v57;
  v56[2] = v60 + 1;
  sub_100048DE4(&v78, (uint64_t)&v56[5 * v60 + 4]);
  swift_endAccess();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v57;
  uint64_t v62 = v70 + v76[9];
  *(void *)uint64_t v62 = sub_100167798;
  *(void *)(v62 + 8) = result;
  *(unsigned char *)(v62 + 16) = 0;
  return result;
}

uint64_t sub_100166060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v62 = type metadata accessor for UUID();
  uint64_t v55 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  v54 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MainLayoutView();
  uint64_t v5 = v4 - 8;
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v66 = *(void *)(v67 + 64);
  __chkstk_darwin(v4);
  uint64_t v70 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for ScenePhase();
  uint64_t v52 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v51 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100007620(&qword_1002F8668);
  uint64_t v53 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F8670);
  uint64_t v60 = *(void *)(v9 - 8);
  uint64_t v61 = v9;
  __chkstk_darwin(v9);
  char v58 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100007620(&qword_1002F8678);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  v56 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100166AB8(v1, (uint64_t)&v84);
  long long v65 = v84;
  long long v49 = v86;
  long long v50 = v85;
  long long v47 = v88;
  long long v48 = v87;
  uint64_t v46 = v89;
  char v12 = BYTE8(v89);
  type metadata accessor for ConversationViewModel();
  sub_100168B24(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  id v13 = (void *)StateObject.wrappedValue.getter();
  type metadata accessor for ConversationContext(0);
  sub_100168B24(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  id v14 = v13;
  uint64_t v15 = EnvironmentObject.init()();
  uint64_t v44 = v16;
  uint64_t v45 = v15;
  v82[0] = 0;
  State.init(wrappedValue:)();

  char v17 = v72;
  uint64_t v18 = *((void *)&v72 + 1);
  char v83 = v12;
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_100168B24(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  uint64_t v19 = v64;
  uint64_t v20 = *(void *)(StateObject.wrappedValue.getter()
                  + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_ttsManager);
  swift_retain();
  swift_release();
  *(_DWORD *)((char *)&v77 + 9) = *(_DWORD *)v82;
  HIDWORD(v77) = *(_DWORD *)&v82[3];
  *(_DWORD *)((char *)&v79 + 9) = *(_DWORD *)v81;
  HIDWORD(v79) = *(_DWORD *)&v81[3];
  long long v72 = v65;
  long long v73 = v50;
  long long v74 = v49;
  long long v75 = v48;
  long long v76 = v47;
  *(void *)&long long v77 = v46;
  BYTE8(v77) = v83;
  *(void *)&long long v78 = v45;
  *((void *)&v78 + 1) = v44;
  *(void *)&long long v79 = v14;
  BYTE8(v79) = v17;
  *(void *)&long long v80 = v18;
  *((void *)&v80 + 1) = v20;
  uint64_t v21 = v51;
  sub_10010045C(v51);
  uint64_t v22 = v70;
  sub_1001684C0(v2, v70);
  uint64_t v23 = *(unsigned __int8 *)(v67 + 80);
  uint64_t v24 = (v23 + 16) & ~v23;
  v66 += v24;
  *(void *)&long long v65 = v23 | 7;
  uint64_t v25 = swift_allocObject();
  uint64_t v67 = v24;
  sub_100168528(v22, v25 + v24);
  uint64_t v26 = sub_100007620(&qword_1002F8680);
  unint64_t v27 = sub_10016860C();
  uint64_t v28 = sub_100168B24(&qword_1002F3700, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v21, v19);
  long long v89 = v77;
  long long v90 = v78;
  long long v91 = v79;
  long long v92 = v80;
  long long v86 = v74;
  long long v87 = v75;
  long long v88 = v76;
  long long v84 = v72;
  long long v85 = v73;
  sub_100168944((uint64_t)&v84);
  uint64_t v52 = v2 + *(int *)(v5 + 32);
  if (!*(void *)v52) {
    goto LABEL_4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v29 = v54;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v70;
  sub_1001684C0(v2, v70);
  uint64_t v31 = swift_allocObject();
  sub_100168528(v30, v31 + v67);
  *(void *)&long long v72 = v26;
  *((void *)&v72 + 1) = v64;
  *(void *)&long long v73 = v27;
  *((void *)&v73 + 1) = v28;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v33 = sub_100168B24((unint64_t *)&qword_1002F43B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v34 = v58;
  v35 = v68;
  uint64_t v36 = v69;
  uint64_t v37 = v62;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v37);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v36);
  if (*(void *)v52)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    char v71 = v72;
    uint64_t v38 = v70;
    sub_1001684C0(v2, v70);
    uint64_t v39 = swift_allocObject();
    sub_100168528(v38, v39 + v67);
    *(void *)&long long v72 = v69;
    *((void *)&v72 + 1) = v37;
    *(void *)&long long v73 = OpaqueTypeConformance2;
    *((void *)&v73 + 1) = v33;
    swift_getOpaqueTypeConformance2();
    unint64_t v40 = v56;
    uint64_t v41 = v61;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v41);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v57 + 32))(v63, v40, v59);
  }
  else
  {
LABEL_4:
    type metadata accessor for SceneContext();
    sub_100168B24((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

double sub_100166AB8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  char v4 = *(unsigned char *)(a1 + 8);
  sub_1000247E8(*(void *)a1, v4);
  char v5 = sub_100100D38(v3, v4);
  sub_10002485C(v3, v4);
  type metadata accessor for MainLayoutView();
  type metadata accessor for ConversationContext(0);
  sub_100168B24(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_100168B24(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  swift_retain();
  swift_retain();
  StateObject.wrappedValue.getter();
  type metadata accessor for ConversationViewModel();
  sub_100168B24(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  StateObject.wrappedValue.getter();
  if (v5)
  {
    EnvironmentObject.init()();
    sub_100112390((uint64_t)&off_1002C8AC8);
    swift_arrayDestroy();
  }
  sub_1001687F4();
  sub_100168848();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v7;
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v8;
  *(_OWORD *)(a2 + 32) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 64) = v11;
  *(void *)(a2 + 80) = v12;
  *(unsigned char *)(a2 + 88) = v13;
  return result;
}

void sub_100166F04()
{
  uint64_t v0 = type metadata accessor for ScenePhase();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ScenePhase.background(_:), v0);
  char v4 = static ScenePhase.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    type metadata accessor for MainLayoutView();
    type metadata accessor for ComposeTranslationViewModel(0);
    sub_100168B24(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
    StateObject.wrappedValue.getter();
    sub_100062A78();
    swift_release();
    type metadata accessor for ConversationViewModel();
    sub_100168B24(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
    char v5 = (void *)StateObject.wrappedValue.getter();
    sub_1000AEFA4();
  }
}

void sub_100167100()
{
  if (!*(void *)(v0 + *(int *)(type metadata accessor for MainLayoutView() + 28)))
  {
    type metadata accessor for ConversationContext(0);
    sub_100168B24(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    EnvironmentObject.error()();
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (!v9)
  {
    type metadata accessor for ComposeTranslationViewModel(0);
    sub_100168B24(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
    StateObject.wrappedValue.getter();
    sub_10006373C();
    swift_release();
    uint64_t v6 = v8;
    unint64_t v7 = 0;
    goto LABEL_13;
  }
  if (v9 == 2)
  {
    type metadata accessor for ConversationViewModel();
    sub_100168B24(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
    char v5 = (void *)StateObject.wrappedValue.getter();
    sub_1000AE538();

    uint64_t v6 = v8;
    unint64_t v7 = 2;
LABEL_13:
    sub_10005477C(v6, v7);
    return;
  }
  if (v9 != 5) {
    sub_10005477C(v8, v9);
  }
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAF8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "There was a connection issue with translationd; this issue is not surfaced in the app because the current tab does"
      "n't have a handler",
      v4,
      2u);
    swift_slowDealloc();
  }
}

void sub_1001673D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainLayoutView();
  type metadata accessor for ConversationViewModel();
  sub_100168B24(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  uint64_t v3 = StateObject.wrappedValue.getter();
  if (*(void *)(a1 + *(int *)(v2 + 24)))
  {
    char v4 = (unsigned char *)v3;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    v4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible] = v5;
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_100168B24((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10016755C()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100167580(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScenePhase();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.scenePhase.setter();
}

uint64_t sub_100167648@<X0>(unsigned char *a1@<X8>)
{
  sub_1000D10D8();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100167698()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t type metadata accessor for MainLayoutView()
{
  uint64_t result = qword_1002F8610;
  if (!qword_1002F8610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100167730()
{
  return EnvironmentValues.scenePhase.getter();
}

uint64_t sub_100167758()
{
  return swift_retain();
}

uint64_t sub_100167760()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100167798()
{
  return *(id *)(v0 + 16);
}

uint64_t *sub_1001677A0(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_1000247E8(*(void *)a2, v8);
    *uint64_t v4 = v7;
    *((unsigned char *)v4 + 8) = v8;
    uint64_t v9 = a3[5];
    long long v10 = (uint64_t *)((char *)v4 + v9);
    long long v11 = (void *)(a2 + v9);
    sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *long long v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)v4 + v14);
    char v17 = (uint64_t *)(a2 + v14);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
    uint64_t v20 = (uint64_t *)((char *)v4 + v15);
    uint64_t v21 = (uint64_t *)(a2 + v15);
    uint64_t v23 = *v21;
    uint64_t v22 = v21[1];
    *uint64_t v20 = v23;
    v20[1] = v22;
    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (uint64_t *)(a2 + v24);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    char v29 = *((unsigned char *)v26 + 16);
    swift_retain();
    swift_retain();
    sub_100101C14();
    *(void *)uint64_t v25 = v27;
    *((void *)v25 + 1) = v28;
    v25[16] = v29;
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = a2 + v30;
    uint64_t v33 = *(void *)v32;
    uint64_t v34 = *(void **)(v32 + 8);
    LOBYTE(v28) = *(unsigned char *)(v32 + 16);
    sub_100167998(*(void *)v32, v34, v28);
    *(void *)uint64_t v31 = v33;
    *((void *)v31 + 1) = v34;
    v31[16] = v28;
    uint64_t v35 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(void *)(a2 + a3[10]);
    *(uint64_t *)((char *)v4 + v35) = *(void *)(a2 + v35);
    *(uint64_t *)((char *)v4 + a3[12]) = *(void *)(a2 + a3[12]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

id sub_100167998(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_1001679A8(uint64_t a1, uint64_t a2)
{
  sub_10002485C(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  sub_100101E28();
  sub_100167ABC(*(void *)(a1 + *(int *)(a2 + 36)), *(void *)(a1 + *(int *)(a2 + 36) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 36) + 16));
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100167ABC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return _objc_release_x1();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_100167ACC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  long long v10 = (void *)(a2 + v8);
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *uint64_t v14 = v16;
  v14[1] = v17;
  uint64_t v18 = (void *)(a1 + v13);
  uint64_t v19 = (uint64_t *)(a2 + v13);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  void *v18 = v21;
  v18[1] = v20;
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  char v27 = *((unsigned char *)v24 + 16);
  swift_retain();
  swift_retain();
  sub_100101C14();
  *(void *)uint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  *(unsigned char *)(v23 + 16) = v27;
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  uint64_t v32 = *(void **)(v30 + 8);
  LOBYTE(v26) = *(unsigned char *)(v30 + 16);
  sub_100167998(*(void *)v30, v32, v26);
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  *(unsigned char *)(v29 + 16) = v26;
  uint64_t v33 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100167C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10002485C(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100167EA0(a1 + v10);
    sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_retain();
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_retain();
  swift_release();
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  LOBYTE(v19) = *((unsigned char *)v22 + 16);
  sub_100101C14();
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(unsigned char *)(v21 + 16) = v19;
  sub_100101E28();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  uint64_t v29 = *(void **)(v27 + 8);
  LOBYTE(v19) = *(unsigned char *)(v27 + 16);
  sub_100167998(*(void *)v27, v29, v19);
  uint64_t v30 = *(void *)v26;
  uint64_t v31 = *(void *)(v26 + 8);
  char v32 = *(unsigned char *)(v26 + 16);
  *(void *)uint64_t v26 = v28;
  *(void *)(v26 + 8) = v29;
  *(unsigned char *)(v26 + 16) = v19;
  sub_100167ABC(v30, v31, v32);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100167EA0(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F3598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100167F00(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_100168054(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10002485C(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100167EA0(a1 + v10);
    uint64_t v13 = sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t)a2 + v15;
  *(void *)(a1 + v15) = *(uint64_t *)((char *)a2 + v15);
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t)a2 + v18;
  *(void *)(a1 + v18) = *(uint64_t *)((char *)a2 + v18);
  swift_release();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = (uint64_t)a2 + v21;
  char v24 = *(unsigned char *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = v24;
  sub_100101E28();
  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (uint64_t)a2 + v25;
  char v28 = *(unsigned char *)(v27 + 16);
  uint64_t v29 = *(void *)v26;
  uint64_t v30 = *(void *)(v26 + 8);
  char v31 = *(unsigned char *)(v26 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *(unsigned char *)(v26 + 16) = v28;
  sub_100167ABC(v29, v30, v31);
  *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  swift_release();
  *(void *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
  swift_release();
  *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  swift_release();
  return a1;
}

uint64_t sub_100168230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100168244);
}

uint64_t sub_100168244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F35A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10016830C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100168320);
}

uint64_t sub_100168320(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F35A0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
  return result;
}

void sub_1001683E4()
{
  sub_1000A027C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1001684A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001684C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainLayoutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100168528(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainLayoutView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10016858C()
{
  type metadata accessor for MainLayoutView();

  sub_100166F04();
}

unint64_t sub_10016860C()
{
  unint64_t result = qword_1002F8688;
  if (!qword_1002F8688)
  {
    sub_100007928(&qword_1002F8680);
    sub_100168688();
    sub_1001688F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8688);
  }
  return result;
}

unint64_t sub_100168688()
{
  unint64_t result = qword_1002F8690;
  if (!qword_1002F8690)
  {
    sub_100007928(&qword_1002F8698);
    sub_100168704();
    sub_10016889C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8690);
  }
  return result;
}

unint64_t sub_100168704()
{
  unint64_t result = qword_1002F86A0;
  if (!qword_1002F86A0)
  {
    sub_100007928(&qword_1002F86A8);
    sub_100168778();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F86A0);
  }
  return result;
}

unint64_t sub_100168778()
{
  unint64_t result = qword_1002F86B0;
  if (!qword_1002F86B0)
  {
    sub_100007928(&qword_1002F86B8);
    sub_1001687F4();
    sub_100168848();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F86B0);
  }
  return result;
}

unint64_t sub_1001687F4()
{
  unint64_t result = qword_1002F86C0;
  if (!qword_1002F86C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F86C0);
  }
  return result;
}

unint64_t sub_100168848()
{
  unint64_t result = qword_1002F86C8;
  if (!qword_1002F86C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F86C8);
  }
  return result;
}

unint64_t sub_10016889C()
{
  unint64_t result = qword_1002F86D0;
  if (!qword_1002F86D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F86D0);
  }
  return result;
}

unint64_t sub_1001688F0()
{
  unint64_t result = qword_1002F86D8[0];
  if (!qword_1002F86D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1002F86D8);
  }
  return result;
}

uint64_t sub_100168944(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 112);
  sub_1001689D8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));

  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1001689D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, char a12)
{
  swift_release();
  swift_release();
  sub_10005477C(a3, a4);
  if (a12)
  {
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

void sub_100168AC8()
{
}

uint64_t sub_100168B24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100168B78()
{
  uint64_t v1 = type metadata accessor for MainLayoutView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_10002485C(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  sub_100101E28();
  sub_100167ABC(*(void *)(v0 + v3 + *(int *)(v1 + 36)), *(void *)(v0 + v3 + *(int *)(v1 + 36) + 8), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 36) + 16));
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100168D0C()
{
  uint64_t v1 = *(void *)(type metadata accessor for MainLayoutView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001673D8(v2);
}

uint64_t sub_100168D74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100168EE0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100168F80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_10016906C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

void *sub_1001690A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100169118(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100169188(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1001691F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_100169268(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1001693E4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x100169618);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 8] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t type metadata accessor for MinHeightAnimatingView()
{
  return sub_1000BA700();
}

void *sub_100169658()
{
  return &protocol witness table for Double;
}

uint64_t sub_100169668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

double sub_1001696A0()
{
  return *(double *)v0;
}

void sub_1001696A8(double a1)
{
  double *v1 = a1;
}

uint64_t sub_1001696B0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ModifiedContent();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  BOOL v10 = (char *)v15 - v9;
  static Alignment.center.getter();
  uint64_t v14 = *(void *)(a1 + 24);
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v15[0] = v14;
  v15[1] = &protocol witness table for _FlexFrameLayout;
  swift_getWitnessTable();
  unsigned int v11 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v11(v10, v8, v4);
  int v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v11(a2, v10, v4);
  return ((uint64_t (*)(char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_100169898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static View<>._makeView(view:inputs:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_10016991C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static View<>._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable, a4);
}

void sub_1001699A4(double *a1@<X8>)
{
  *a1 = sub_1001696A0();
}

void sub_1001699CC(double *a1)
{
}

void (*sub_1001699D4(uint64_t a1, uint64_t a2))(double *a1)
{
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = a2;
  *(double *)a1 = sub_1001696A0();
  return sub_100169A1C;
}

void sub_100169A1C(double *a1)
{
}

uint64_t sub_100169A44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100169A88()
{
  return swift_getWitnessTable();
}

char *sub_100169AEC(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_paddingDefault] = 0x4028000000000000;
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_moreHistoryView;
  id v10 = objc_allocWithZone((Class)type metadata accessor for MoreHistoryView());
  unsigned int v11 = v4;
  *(void *)&v4[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  v47.receiver = v11;
  v47.super_class = (Class)type metadata accessor for MoreHistoryCollectionViewCell();
  int v12 = (char *)[super initWithFrame:a1 a2:a2 a3:a3 a4:a4];
  uint64_t v13 = OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_moreHistoryView;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_moreHistoryView];
  unsigned int v15 = v12;
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v15 contentView];
  [v16 addSubview:v14];

  id v17 = [v15 contentView];
  id v18 = [v17 trailingAnchor];

  id v19 = [*(id *)&v12[v13] trailingAnchor];
  uint64_t v44 = OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_paddingDefault;
  id v20 = [v18 constraintEqualToAnchor:v19 constant:*(double *)&v15[OBJC_IVAR____TtC17SequoiaTranslator29MoreHistoryCollectionViewCell_paddingDefault]];

  LODWORD(v21) = 1148829696;
  [v20 setPriority:v21];
  id v22 = [*(id *)&v12[v13] heightAnchor];
  id v45 = [v22 constraintGreaterThanOrEqualToConstant:48.0];

  LODWORD(v23) = 1148829696;
  [v45 setPriority:v23];
  id v46 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10024BD70;
  id v25 = [*(id *)&v12[v13] topAnchor];
  id v26 = [v15 contentView];
  id v27 = [v26 topAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27];
  *(void *)(v24 + 32) = v28;
  id v29 = [*(id *)&v12[v13] leadingAnchor];
  id v30 = [v15 contentView];
  id v31 = [v30 leadingAnchor];

  id v32 = [v29 constraintEqualToAnchor:v31 constant:*(double *)&v15[v44]];
  *(void *)(v24 + 40) = v32;
  *(void *)(v24 + 48) = v20;
  uint64_t v33 = *(void **)&v12[v13];
  id v34 = v20;
  id v35 = [v33 bottomAnchor];
  id v36 = [v15 contentView];
  id v37 = [v36 bottomAnchor];

  id v38 = [v35 constraintEqualToAnchor:v37 constant:-*(double *)&v15[v44]];
  *(void *)(v24 + 56) = v38;
  *(void *)(v24 + 64) = v45;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  id v39 = v45;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v46 activateConstraints:isa];

  id v41 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v15 action:"tapped:"];
  [v41 setNumberOfTapsRequired:1];
  [v15 addGestureRecognizer:v41];
  id v42 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v15 action:"gestureUpdated:"];
  [v42 setMinimumPressDuration:0.5];
  [v15 addGestureRecognizer:v42];

  return v15;
}

id sub_10016A2E8()
{
  return sub_10016AD04(type metadata accessor for MoreHistoryCollectionViewCell);
}

uint64_t type metadata accessor for MoreHistoryCollectionViewCell()
{
  return self;
}

id sub_10016A370()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [self mainBundle];
  v8._object = (void *)0x80000001002604D0;
  v2._object = (void *)0x80000001002604B0;
  v2._countAndFlagsBits = 0xD000000000000011;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  v8._countAndFlagsBits = 0xD000000000000011;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v8);

  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v4];

  id v5 = [self boldSystemFontOfSize:16.0];
  [v0 setFont:v5];

  id v6 = [self secondaryLabelColor];
  [v0 setTextColor:v6];

  return v0;
}

id sub_10016A4F4()
{
  id v0 = [objc_allocWithZone((Class)UIImageView) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  [v0 setImage:v2];
  id v3 = [self secondarySystemFillColor];
  [v0 setTintColor:v3];

  return v0;
}

char *sub_10016A5F0(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_paddingDefault] = 0x4028000000000000;
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_moreHistoryLabel;
  id v10 = v4;
  *(void *)&v4[v9] = sub_10016A370();
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_disclosureIndictor;
  id v12 = [objc_allocWithZone((Class)UIImageView) init];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self systemImageNamed:v13];

  [v12 setImage:v14];
  unsigned int v15 = self;
  id v16 = [v15 secondarySystemFillColor];
  [v12 setTintColor:v16];

  *(void *)&v10[v11] = v12;
  id v17 = (objc_class *)type metadata accessor for MoreHistoryView();
  v45.receiver = v10;
  v45.super_class = v17;
  id v18 = [super initWithFrame:a1, a2, a3, a4];
  id v19 = [v15 secondarySystemGroupedBackgroundColor];
  [v18 setBackgroundColor:v19];

  id v20 = [v18 layer];
  [v20 setCornerRadius:10.0];

  uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_moreHistoryLabel;
  id v22 = *(void **)&v18[OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_moreHistoryLabel];
  [v18 addSubview:v22];
  uint64_t v23 = OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_disclosureIndictor;
  [v18 addSubview:*(void *)&v18[OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_disclosureIndictor]];
  id v40 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100249A60;
  id v25 = [v22 leadingAnchor];
  id v26 = [v18 leadingAnchor];
  uint64_t v27 = OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_paddingDefault;
  id v28 = [v25 constraintEqualToAnchor:v26 constant:*(double *)&v18[OBJC_IVAR____TtC17SequoiaTranslator15MoreHistoryView_paddingDefault]];

  *(void *)(v24 + 32) = v28;
  id v29 = [v18 trailingAnchor];
  id v30 = [*(id *)&v18[v23] trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:*(double *)&v18[v27]];

  *(void *)(v24 + 40) = v31;
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  id v32 = *(void **)&v18[v21];
  uint64_t v44 = sub_10000B0CC(0, &qword_1002F87E0);
  id v42 = v17;
  v43[0] = v32;
  v41[0] = v18;
  uint64_t v33 = v18;
  id v34 = v32;
  *(void *)(v24 + 48) = sub_10016AA58(v43, 10, 0, v41, 10, 1.0, 0.0);
  id v35 = *(void **)&v18[v23];
  uint64_t v44 = sub_10000B0CC(0, &qword_1002F87E8);
  id v42 = v17;
  v43[0] = v35;
  v41[0] = v33;
  id v36 = v33;
  id v37 = v35;
  *(void *)(v24 + 56) = sub_10016AA58(v43, 10, 0, v41, 10, 1.0, 0.0);
  v43[0] = v24;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v40 activateConstraints:isa];

  return v36;
}

id sub_10016AA58(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7)
{
  sub_100029624(a1, a1[3]);
  uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
  uint64_t v15 = a4[3];
  if (v15)
  {
    id v16 = sub_100029624(a4, a4[3]);
    uint64_t v24 = a5;
    uint64_t v25 = a2;
    uint64_t v17 = a3;
    uint64_t v18 = *(void *)(v15 - 8);
    __chkstk_darwin(v16);
    id v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
    a3 = v17;
    a5 = v24;
    a2 = v25;
    sub_10000AB68((uint64_t)a4);
  }
  else
  {
    uint64_t v21 = 0;
  }
  id v22 = [(id)swift_getObjCClassFromMetadata() constraintWithItem:v14 attribute:a2 relatedBy:a3 toItem:v21 attribute:a5 multiplier:a6 constant:a7];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_10000AB68((uint64_t)a1);
  return v22;
}

id sub_10016ACEC()
{
  return sub_10016AD04(type metadata accessor for MoreHistoryView);
}

id sub_10016AD04(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for MoreHistoryView()
{
  return self;
}

uint64_t sub_10016ADAC()
{
  [v0 setHighlighted:1];
  NSString v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  v6[4] = sub_10016AF10;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10008BA1C;
  v6[3] = &unk_1002D04E8;
  objc_super v3 = _Block_copy(v6);
  id v4 = v0;
  swift_release();
  [v1 animateWithDuration:0x20000 delay:v3 options:0 animations:0.3 completion:0.0];
  _Block_release(v3);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10016AED8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10016AF10()
{
  return [*(id *)(v0 + 16) setHighlighted:0];
}

uint64_t sub_10016AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10016AF34()
{
  return swift_release();
}

char *sub_10016AF3C(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
  }
  else
  {
    Swift::String v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = a2[3];
    uint64_t v9 = a2 + 4;
    unint64_t v10 = (unint64_t)a2[5];
    uint64_t v11 = v5;
    swift_retain();
    if (v10 >= 5)
    {
      *((void *)a1 + 4) = *v9;
      *((void *)a1 + 5) = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
    }
    a1[48] = *((unsigned char *)a2 + 48);
    *(_WORD *)(a1 + 49) = *(_WORD *)((char *)a2 + 49);
    uint64_t v12 = a3[10];
    NSString v13 = &a1[v12];
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = type metadata accessor for Locale();
    id v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v13, v14, v15);
    v16(&a1[a3[11]], (uint64_t)a2 + a3[11], v15);
    uint64_t v17 = a3[12];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)(v19 + 8);
    if (v20)
    {
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      uint64_t v21 = *(void *)(v19 + 24);
      *((void *)v18 + 2) = *(void *)(v19 + 16);
      *((void *)v18 + 3) = v21;
      uint64_t v22 = *(void *)(v19 + 40);
      *((void *)v18 + 4) = *(void *)(v19 + 32);
      *((void *)v18 + 5) = v22;
      *((_OWORD *)v18 + 3) = *(_OWORD *)(v19 + 48);
      v18[64] = *(unsigned char *)(v19 + 64);
      uint64_t v23 = *(void **)(v19 + 72);
      uint64_t v24 = *(void **)(v19 + 80);
      *((void *)v18 + 9) = v23;
      *((void *)v18 + 10) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v25 = v23;
      id v26 = v24;
    }
    else
    {
      long long v27 = *(_OWORD *)(v19 + 48);
      *((_OWORD *)v18 + 2) = *(_OWORD *)(v19 + 32);
      *((_OWORD *)v18 + 3) = v27;
      *((_OWORD *)v18 + 4) = *(_OWORD *)(v19 + 64);
      *((void *)v18 + 10) = *(void *)(v19 + 80);
      long long v28 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v28;
    }
    uint64_t v29 = a3[14];
    *(void *)&a1[a3[13]] = *(char **)((char *)a2 + a3[13]);
    id v30 = &a1[v29];
    uint64_t v31 = (uint64_t)a2 + v29;
    uint64_t v32 = *(uint64_t *)((char *)a2 + v29);
    swift_bridgeObjectRetain();
    if (v32)
    {
      uint64_t v33 = *(void *)(v31 + 8);
      *(void *)id v30 = v32;
      *((void *)v30 + 1) = v33;
      swift_retain();
    }
    else
    {
      *(_OWORD *)id v30 = *(_OWORD *)v31;
    }
    uint64_t v34 = a3[15];
    id v35 = &a1[v34];
    uint64_t v36 = (uint64_t)a2 + v34;
    char *v35 = *(unsigned char *)v36;
    *((void *)v35 + 1) = *(void *)(v36 + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_10016B16C(uint64_t a1, int *a2)
{
  swift_release();
  if (*(void *)(a1 + 40) >= 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for Locale();
  id v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[11], v5);
  uint64_t v7 = a1 + a2[12];
  if (*(void *)(v7 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[14])) {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10016B290(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = (void *)(a2 + 32);
  unint64_t v10 = *(void *)(a2 + 40);
  id v11 = v6;
  swift_retain();
  if (v10 >= 5)
  {
    *(void *)(a1 + 32) = *v9;
    *(void *)(a1 + 40) = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Locale();
  id v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(a1 + a3[11], a2 + a3[11], v15);
  uint64_t v17 = a3[12];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(v19 + 8);
  if (v20)
  {
    *(void *)uint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = v20;
    uint64_t v21 = *(void *)(v19 + 24);
    *(void *)(v18 + 16) = *(void *)(v19 + 16);
    *(void *)(v18 + 24) = v21;
    uint64_t v22 = *(void *)(v19 + 40);
    *(void *)(v18 + 32) = *(void *)(v19 + 32);
    *(void *)(v18 + 40) = v22;
    *(_OWORD *)(v18 + 48) = *(_OWORD *)(v19 + 48);
    *(unsigned char *)(v18 + 64) = *(unsigned char *)(v19 + 64);
    uint64_t v23 = *(void **)(v19 + 72);
    uint64_t v24 = *(void **)(v19 + 80);
    *(void *)(v18 + 72) = v23;
    *(void *)(v18 + 80) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = v23;
    id v26 = v24;
  }
  else
  {
    long long v27 = *(_OWORD *)(v19 + 48);
    *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
    *(_OWORD *)(v18 + 48) = v27;
    *(_OWORD *)(v18 + 64) = *(_OWORD *)(v19 + 64);
    *(void *)(v18 + 80) = *(void *)(v19 + 80);
    long long v28 = *(_OWORD *)(v19 + 16);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *(_OWORD *)(v18 + 16) = v28;
  }
  uint64_t v29 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  id v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a2 + v29);
  swift_bridgeObjectRetain();
  if (v32)
  {
    uint64_t v33 = *(void *)(v31 + 8);
    *id v30 = v32;
    v30[1] = v33;
    swift_retain();
  }
  else
  {
    *(_OWORD *)id v30 = *(_OWORD *)v31;
  }
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  swift_retain();
  return a1;
}

uint64_t sub_10016B474(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) < 5uLL)
  {
    if (v9 >= 5)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 < 5)
  {
    sub_10016B80C(a1 + 32);
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[11], a2 + a3[11], v13);
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a1 + v15 + 8);
  uint64_t v19 = *(void *)(a2 + v15 + 8);
  if (v18)
  {
    if (v19)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *(void *)(v17 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      *(void *)(v16 + 24) = *(void *)(v17 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
      *(void *)(v16 + 40) = *(void *)(v17 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v16 + 48) = *(void *)(v17 + 48);
      *(void *)(v16 + 56) = *(void *)(v17 + 56);
      *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
      uint64_t v20 = *(void **)(v17 + 72);
      uint64_t v21 = *(void **)(v16 + 72);
      *(void *)(v16 + 72) = v20;
      id v22 = v20;

      uint64_t v23 = *(void **)(v17 + 80);
      uint64_t v24 = *(void **)(v16 + 80);
      *(void *)(v16 + 80) = v23;
      id v25 = v23;
    }
    else
    {
      sub_100015FC8(v16);
      long long v30 = *(_OWORD *)(v17 + 16);
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      *(_OWORD *)(v16 + 16) = v30;
      long long v32 = *(_OWORD *)(v17 + 48);
      long long v31 = *(_OWORD *)(v17 + 64);
      long long v33 = *(_OWORD *)(v17 + 32);
      *(void *)(v16 + 80) = *(void *)(v17 + 80);
      *(_OWORD *)(v16 + 48) = v32;
      *(_OWORD *)(v16 + 64) = v31;
      *(_OWORD *)(v16 + 32) = v33;
    }
  }
  else if (v19)
  {
    *(void *)uint64_t v16 = *(void *)v17;
    *(void *)(v16 + 8) = *(void *)(v17 + 8);
    *(void *)(v16 + 16) = *(void *)(v17 + 16);
    *(void *)(v16 + 24) = *(void *)(v17 + 24);
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    *(void *)(v16 + 40) = *(void *)(v17 + 40);
    *(void *)(v16 + 48) = *(void *)(v17 + 48);
    *(void *)(v16 + 56) = *(void *)(v17 + 56);
    *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
    id v26 = *(void **)(v17 + 72);
    *(void *)(v16 + 72) = v26;
    long long v27 = *(void **)(v17 + 80);
    *(void *)(v16 + 80) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v28 = v26;
    id v29 = v27;
  }
  else
  {
    long long v34 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v34;
    long long v35 = *(_OWORD *)(v17 + 32);
    long long v36 = *(_OWORD *)(v17 + 48);
    long long v37 = *(_OWORD *)(v17 + 64);
    *(void *)(v16 + 80) = *(void *)(v17 + 80);
    *(_OWORD *)(v16 + 48) = v36;
    *(_OWORD *)(v16 + 64) = v37;
    *(_OWORD *)(v16 + 32) = v35;
  }
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[14];
  id v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(a1 + v38);
  uint64_t v42 = *(void *)(a2 + v38);
  if (!v41)
  {
    if (v42)
    {
      uint64_t v44 = *(void *)(v40 + 8);
      *id v39 = v42;
      v39[1] = v44;
      swift_retain();
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)id v39 = *(_OWORD *)v40;
    goto LABEL_22;
  }
  if (!v42)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v43 = *(void *)(v40 + 8);
  *id v39 = v42;
  v39[1] = v43;
  swift_retain();
  swift_release();
LABEL_22:
  uint64_t v45 = a3[15];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)v47;
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10016B80C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10016B860(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  uint64_t v7 = a3[10];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[11], a2 + a3[11], v10);
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)(v14 + 80) = *(void *)(v15 + 80);
  long long v16 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v15 + 64);
  long long v17 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v17;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v18 = a3[14];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = v20[1];
    *uint64_t v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  *(_OWORD *)(a1 + a3[15]) = *(_OWORD *)(a2 + a3[15]);
  return a1;
}

uint64_t sub_10016B994(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  if (*(void *)(a1 + 40) < 5uLL) {
    goto LABEL_4;
  }
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 < 5)
  {
    sub_10016B80C(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v8;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)v8;
  *(void *)(a1 + 40) = v9;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(a1 + a3[11], a2 + a3[11], v13);
  uint64_t v15 = a3[12];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  if (*(void *)(a1 + v15 + 8))
  {
    uint64_t v18 = *(void *)(v17 + 8);
    if (v18)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v18;
      swift_bridgeObjectRelease();
      uint64_t v19 = *(void *)(v17 + 24);
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      *(void *)(v16 + 24) = v19;
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v17 + 40);
      *(void *)(v16 + 32) = *(void *)(v17 + 32);
      *(void *)(v16 + 40) = v20;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v16 + 48) = *(_OWORD *)(v17 + 48);
      *(unsigned char *)(v16 + 64) = *(unsigned char *)(v17 + 64);
      uint64_t v21 = *(void **)(v16 + 72);
      *(void *)(v16 + 72) = *(void *)(v17 + 72);

      uint64_t v22 = *(void **)(v16 + 80);
      *(void *)(v16 + 80) = *(void *)(v17 + 80);

      goto LABEL_11;
    }
    sub_100015FC8(v16);
  }
  long long v23 = *(_OWORD *)(v17 + 48);
  *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 48) = v23;
  *(_OWORD *)(v16 + 64) = *(_OWORD *)(v17 + 64);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  long long v24 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v24;
LABEL_11:
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[14];
  id v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a1 + v25);
  uint64_t v29 = *(void *)(a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = *(void *)(v27 + 8);
      void *v26 = v29;
      v26[1] = v31;
      goto LABEL_18;
    }
LABEL_17:
    *(_OWORD *)id v26 = *(_OWORD *)v27;
    goto LABEL_18;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)(v27 + 8);
  void *v26 = v29;
  v26[1] = v30;
  swift_release();
LABEL_18:
  uint64_t v32 = a3[15];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  swift_release();
  return a1;
}

uint64_t sub_10016BBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10016BC00);
}

uint64_t sub_10016BC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 40);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 52));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10016BCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10016BCD8);
}

uint64_t sub_10016BCD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 40);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MoreOptionsMenu()
{
  uint64_t result = qword_1002F8848;
  if (!qword_1002F8848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10016BDE4()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10016BEB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10016BECC()
{
  uint64_t v1 = type metadata accessor for MoreOptionsMenu();
  __chkstk_darwin(v1 - 8);
  objc_super v3 = (void **)&v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v4 = *(unsigned char *)(v0 + 48);
  sub_10016E054(v0, (uint64_t)v3);
  if (v4)
  {
    char v5 = 1;
LABEL_5:
    sub_10016E3B4((uint64_t)v3);
    return v5 & 1;
  }
  uint64_t v6 = *v3;
  if (*v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    char v5 = v9[15] ^ 1;
    goto LABEL_5;
  }
  type metadata accessor for SharedTranslationOptions();
  sub_10016E58C(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10016C01C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for MoreOptionsMenu();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v34 = v2 - 8;
  uint64_t v38 = v3;
  uint64_t v37 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MenuOrder();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F88A8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F88B0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  uint64_t v31 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100007620(&qword_1002F88B8);
  __chkstk_darwin(v35);
  uint64_t v28 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v1;
  sub_100007620(&qword_1002F88C0);
  sub_100007620(&qword_1002F88C8);
  sub_10016DFB4();
  sub_100014894(&qword_1002F88D8, &qword_1002F88C8);
  Menu.init(content:label:)();
  static MenuOrder.fixed.getter();
  uint64_t v17 = sub_100014894(&qword_1002F88E0, &qword_1002F88A8);
  View.menuOrder(_:)();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v33);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v43 = v8;
  uint64_t v44 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = (uint64_t)v28;
  uint64_t v19 = v30;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v19);
  uint64_t v20 = v29;
  uint64_t v21 = v29 + *(int *)(v34 + 68);
  char v22 = *(unsigned char *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  char v41 = v22;
  uint64_t v42 = v23;
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  uint64_t v24 = v36;
  sub_10016E054(v20, v36);
  unint64_t v25 = (*(unsigned __int8 *)(v38 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v26 = swift_allocObject();
  sub_10016E0BC(v24, v26 + v25);
  type metadata accessor for AudioRoutingMenu();
  sub_10016E190();
  sub_10016E58C(&qword_1002F88F0, (void (*)(uint64_t))type metadata accessor for AudioRoutingMenu);
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  return sub_10000B070(v18, &qword_1002F88B8);
}

uint64_t sub_10016C570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v131 = a2;
  uint64_t v128 = sub_100007620(&qword_1002F88F8);
  __chkstk_darwin(v128);
  uint64_t v4 = &v103[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v129 = sub_100007620(&qword_1002F8900);
  __chkstk_darwin(v129);
  uint64_t v6 = &v103[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007620(&qword_1002F22B0);
  __chkstk_darwin(v7 - 8);
  v110 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = sub_100007620(&qword_1002EEF60);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  v111 = &v103[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v116 = sub_100007620(&qword_1002EEF78);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  v109 = &v103[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100007620(&qword_1002F8908);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v103[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  v132 = &v103[-v15];
  uint64_t v16 = sub_100007620(&qword_1002F8910);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v130 = &v103[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  v140 = &v103[-v19];
  uint64_t v20 = type metadata accessor for Divider();
  uint64_t v141 = *(void *)(v20 - 8);
  uint64_t v142 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  v139 = &v103[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  v125 = &v103[-v24];
  __chkstk_darwin(v23);
  v143 = &v103[-v25];
  uint64_t v26 = type metadata accessor for MoreOptionsMenu();
  uint64_t v107 = *(void *)(v26 - 8);
  uint64_t v27 = *(void *)(v107 + 64);
  uint64_t v28 = __chkstk_darwin(v26);
  v108 = &v103[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v29 = __chkstk_darwin(v28);
  uint64_t v31 = &v103[-v30];
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v34 = &v103[-v33];
  __chkstk_darwin(v32);
  uint64_t v36 = &v103[-v35];
  v149 = &type metadata for TranslateFeatures;
  unint64_t v150 = sub_10000AB14();
  LOBYTE(v146) = 8;
  char v37 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v146);
  sub_10016E054(a1, (uint64_t)v36);
  v136 = v14;
  if ((v37 & 1) == 0)
  {
    sub_10016E3B4((uint64_t)v36);
    sub_10016E054(a1, (uint64_t)v34);
    goto LABEL_8;
  }
  int v38 = v36[50];
  sub_10016E3B4((uint64_t)v36);
  sub_10016E054(a1, (uint64_t)v34);
  if (v38 != 1)
  {
LABEL_8:
    sub_10016E3B4((uint64_t)v34);
    sub_10016E054(a1, (uint64_t)v31);
    goto LABEL_9;
  }
  uint64_t v39 = *((void *)v34 + 5);
  sub_10016E3B4((uint64_t)v34);
  sub_10016E054(a1, (uint64_t)v31);
  if (v39 != 2)
  {
LABEL_9:
    sub_10016E3B4((uint64_t)v31);
LABEL_10:
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    int v46 = 0;
    goto LABEL_11;
  }
  if (!*((void *)v31 + 2)) {
    goto LABEL_32;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  char v40 = v146;
  sub_10016E3B4((uint64_t)v31);
  if (v40) {
    goto LABEL_10;
  }
  uint64_t v41 = a1 + *(int *)(v26 + 60);
  char v42 = *(unsigned char *)v41;
  uint64_t v43 = *(void *)(v41 + 8);
  char v144 = v42;
  uint64_t v145 = v43;
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  uint64_t v44 = v146;
  uint64_t v45 = v147;
  int v46 = v148;
LABEL_11:
  Divider.init()();
  uint64_t v47 = *(void *)(a1 + 40);
  uint64_t v138 = v44;
  uint64_t v127 = v45;
  int v126 = v46;
  if (v47 != 2)
  {
    if ([self isGenderDisambiguationEnabled])
    {
      unsigned __int8 v50 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      if (v47 != 1 && v47 != 4)
      {
        type metadata accessor for SharedTranslationOptions();
        sub_10016E58C(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
        v54 = (void *)EnvironmentObject.projectedValue.getter();
        swift_getKeyPath();
        EnvironmentObject.Wrapper.subscript.getter();
        swift_release();

        uint64_t v52 = v146;
        uint64_t v53 = v147;
        uint64_t v51 = 3;
        unsigned __int8 v50 = v148;
      }
    }
    else
    {
      uint64_t v51 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      unsigned __int8 v50 = 0;
    }
    *(void *)uint64_t v4 = v51;
    *((void *)v4 + 1) = v52;
    *((void *)v4 + 2) = v53;
    v4[24] = v50;
    swift_storeEnumTagMultiPayload();
    sub_100007620(&qword_1002F8918);
    sub_100014894(&qword_1002F8920, &qword_1002F8900);
    sub_10016E410();
    uint64_t v60 = v140;
    _ConditionalContent<>.init(storage:)();
    uint64_t v61 = v141;
    uint64_t v62 = v142;
    goto LABEL_31;
  }
  v105 = v6;
  type metadata accessor for SharedTranslationOptions();
  sub_10016E58C(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  long long v48 = (void *)EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();

  uint64_t v124 = v146;
  uint64_t v135 = v147;
  unsigned __int8 v49 = v148;
  if (sub_10016BECC())
  {
    char v144 = 0;
    static Binding.constant(_:)();
  }
  else
  {
    uint64_t v55 = (void *)EnvironmentObject.projectedValue.getter();
    swift_getKeyPath();
    EnvironmentObject.Wrapper.subscript.getter();
    swift_release();
  }
  uint64_t v123 = v146;
  uint64_t v122 = v147;
  int v104 = v148;
  char v56 = sub_10016BECC();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v120 = swift_allocObject();
  *(unsigned char *)(v120 + 16) = v56 & 1;
  if (*(void *)(a1 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    v106 = v4;
    unsigned __int8 v57 = v49;
    if (v146)
    {
      uint64_t v58 = 0;
      uint64_t v121 = 0;
      uint64_t v133 = 0;
      uint64_t v117 = 0;
      uint64_t v119 = 0;
      v137 = 0;
      uint64_t v118 = 0;
      uint64_t v59 = v141;
    }
    else
    {
      uint64_t v59 = v141;
      if (*(unsigned char *)(a1 + 48) == 1)
      {
        char v144 = 0;
        static Binding.constant(_:)();
      }
      else
      {
        uint64_t v63 = (void *)EnvironmentObject.projectedValue.getter();
        swift_getKeyPath();
        EnvironmentObject.Wrapper.subscript.getter();
        swift_release();
      }
      uint64_t v121 = v146;
      uint64_t v133 = v147;
      unsigned int v64 = v148;
      char v65 = *(unsigned char *)(a1 + 48);
      uint64_t v119 = swift_getKeyPath();
      uint64_t v118 = swift_allocObject();
      *(unsigned char *)(v118 + 16) = v65;
      uint64_t v117 = v64;
      v137 = sub_10005675C;
      uint64_t v58 = 2;
    }
    uint64_t v66 = v139;
    uint64_t v67 = v125;
    Divider.init()();
    uint64_t v68 = 1;
    if (*(unsigned char *)(a1 + 49) == 1)
    {
      uint64_t v69 = v110;
      static ButtonRole.destructive.getter();
      uint64_t v70 = type metadata accessor for ButtonRole();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v70);
      char v71 = v108;
      sub_10016E054(a1, (uint64_t)v108);
      unint64_t v72 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
      uint64_t v73 = swift_allocObject();
      sub_10016E0BC((uint64_t)v71, v73 + v72);
      sub_100007620(&qword_1002EED40);
      sub_100014894(&qword_1002EED78, &qword_1002EED40);
      long long v74 = v111;
      Button.init(role:action:label:)();
      sub_100014894(&qword_1002EEF68, &qword_1002EEF60);
      uint64_t v75 = (uint64_t)v109;
      uint64_t v76 = v113;
      View.accessibilityIdentifier(_:)();
      (*(void (**)(unsigned char *, uint64_t))(v112 + 8))(v74, v76);
      sub_10016E8C4(v75, (uint64_t)v132);
      uint64_t v68 = 0;
    }
    long long v77 = v132;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v132, v68, 1, v116);
    LOBYTE(v146) = v57;
    char v144 = v104;
    long long v78 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 16);
    uint64_t v79 = v142;
    v78(v66, v67, v142);
    sub_10000C3A4((uint64_t)v77, (uint64_t)v136, &qword_1002F8908);
    char v80 = v146;
    uint64_t v81 = (uint64_t)v105;
    unsigned char *v105 = 0;
    uint64_t v82 = v135;
    *(void *)(v81 + 8) = v124;
    *(void *)(v81 + 16) = v82;
    *(unsigned char *)(v81 + 24) = v80;
    char v83 = v144;
    *(unsigned char *)(v81 + 32) = 1;
    uint64_t v84 = v123;
    *(void *)(v81 + 40) = v123;
    uint64_t v85 = v84;
    *(void *)(v81 + 48) = v122;
    *(unsigned char *)(v81 + 56) = v83;
    *(void *)(v81 + 64) = KeyPath;
    *(void *)(v81 + 72) = sub_100054D5C;
    *(void *)(v81 + 80) = v120;
    *(void *)(v81 + 88) = v58;
    uint64_t v114 = v58;
    uint64_t v86 = v121;
    uint64_t v87 = v133;
    *(void *)(v81 + 96) = v121;
    *(void *)(v81 + 104) = v87;
    uint64_t v133 = v87;
    uint64_t v88 = v119;
    *(void *)(v81 + 112) = v117;
    *(void *)(v81 + 120) = v88;
    uint64_t v89 = v118;
    *(void *)(v81 + 128) = v137;
    *(void *)(v81 + 136) = v89;
    uint64_t v90 = sub_100007620(&qword_1002F8940);
    v78((unsigned char *)(v81 + *(int *)(v90 + 80)), v66, v79);
    sub_10000C3A4((uint64_t)v136, v81 + *(int *)(v90 + 96), &qword_1002F8908);
    uint64_t v123 = v85;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v91 = v114;
    sub_10016E5F4(v114, v86, v87);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v121 = v86;
    uint64_t v92 = v133;
    sub_10016E5F4(v91, v86, v133);
    sub_10000B070((uint64_t)v136, &qword_1002F8908);
    v93 = *(void (**)(unsigned char *, uint64_t))(v141 + 8);
    v136 = (unsigned char *)(v141 + 8);
    v93(v139, v142);
    sub_10016E658(v91, v86, v92);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_10000C3A4(v81, (uint64_t)v106, &qword_1002F8900);
    swift_storeEnumTagMultiPayload();
    sub_100007620(&qword_1002F8918);
    sub_100014894(&qword_1002F8920, &qword_1002F8900);
    sub_10016E410();
    uint64_t v62 = v142;
    uint64_t v60 = v140;
    _ConditionalContent<>.init(storage:)();
    sub_10016E658(v114, v121, v133);
    sub_10000B070(v81, &qword_1002F8900);
    sub_10000B070((uint64_t)v132, &qword_1002F8908);
    v93(v125, v62);
    uint64_t v61 = v141;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_31:
    v94 = v139;
    uint64_t v95 = v131;
    v96 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v61 + 16);
    v96(v139, v143, v62);
    v97 = v130;
    sub_10000C3A4((uint64_t)v60, (uint64_t)v130, &qword_1002F8910);
    uint64_t v98 = v127;
    *(void *)uint64_t v95 = v138;
    *(void *)(v95 + 8) = v98;
    *(unsigned char *)(v95 + 16) = v126;
    uint64_t v99 = sub_100007620(&qword_1002F8938);
    v96((unsigned char *)(v95 + *(int *)(v99 + 64)), v94, v62);
    sub_10000C3A4((uint64_t)v97, v95 + *(int *)(v99 + 80), &qword_1002F8910);
    uint64_t v100 = v138;
    sub_10016E4D8(v138, v98);
    sub_10000B070((uint64_t)v140, &qword_1002F8910);
    v101 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
    v101(v143, v62);
    sub_10000B070((uint64_t)v97, &qword_1002F8910);
    v101(v94, v62);
    return sub_10016E518(v100, v98);
  }
LABEL_32:
  type metadata accessor for SceneContext();
  sub_10016E58C((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_10016D7D0(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_10016E58C((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10016D8A4()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10016D8F8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10016D970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_internalSystemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10016D9A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100007620(&qword_1002EFF38);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Image.Scale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 36), v9, v6);
  uint64_t *v5 = KeyPath;
  uint64_t v12 = sub_100007620(&qword_1002F88C0);
  sub_10000C3A4((uint64_t)v5, (uint64_t)a1 + *(int *)(v12 + 36), &qword_1002EFF38);
  *a1 = v10;
  swift_retain();
  sub_10000B070((uint64_t)v5, &qword_1002EFF38);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return swift_release();
}

uint64_t sub_10016DB94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v61 = *(void *)(v3 - 8);
  uint64_t v4 = v61;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v7;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v62 = (char *)&v53 - v8;
  uint64_t v10 = (int *)type metadata accessor for MoreOptionsMenu();
  uint64_t v11 = a1 + v10[10];
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v60 = v3;
  v12(v9, v11, v3);
  v12(v7, a1 + v10[11], v3);
  uint64_t v13 = v10[13];
  uint64_t v14 = (uint64_t *)(a1 + v10[12]);
  uint64_t v15 = *v14;
  uint64_t v57 = v14[1];
  uint64_t v16 = v57;
  uint64_t v17 = v14[3];
  uint64_t v53 = v14[2];
  uint64_t v56 = v14[4];
  uint64_t v18 = v56;
  uint64_t v64 = v14[5];
  uint64_t v54 = v14[6];
  uint64_t v65 = v14[7];
  uint64_t v19 = (void *)v14[9];
  uint64_t v66 = v14[8];
  uint64_t v58 = (uint64_t)v19;
  uint64_t v59 = v14[10];
  uint64_t v20 = (void *)v59;
  uint64_t v67 = *(void *)(a1 + v13);
  uint64_t v21 = (uint64_t *)(a1 + v10[14]);
  uint64_t v22 = *v21;
  uint64_t v68 = v21[1];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = v55;
  *uint64_t v55 = KeyPath;
  sub_100007620(&qword_1002EEF88);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (int *)type metadata accessor for AudioRoutingMenu();
  uint64_t v26 = (_OWORD *)((char *)v24 + v25[5]);
  uint64_t v74 = 0;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v71 = 0u;
  long long v70 = 0u;
  long long v69 = 0u;
  uint64_t v51 = v19;
  uint64_t v52 = v20;
  uint64_t v27 = v53;
  uint64_t v28 = v54;
  sub_10001959C(v15, v16, v53, v17, v18, v64, v54, v65, v66, v51, v52);
  swift_bridgeObjectRetain();
  uint64_t v29 = v22;
  sub_100019614(v22);
  sub_100007620(&qword_1002EF048);
  State.init(wrappedValue:)();
  long long v30 = v76;
  long long v31 = v77;
  long long v32 = v78;
  long long v33 = v79;
  long long v34 = v80;
  _OWORD *v26 = v75;
  v26[1] = v30;
  v26[2] = v31;
  v26[3] = v32;
  v26[4] = v33;
  v26[5] = v34;
  uint64_t v35 = (_OWORD *)((char *)v24 + v25[6]);
  uint64_t v74 = 0;
  long long v72 = 0u;
  long long v73 = 0u;
  long long v71 = 0u;
  long long v70 = 0u;
  long long v69 = 0u;
  State.init(wrappedValue:)();
  long long v36 = v76;
  long long v37 = v77;
  long long v38 = v78;
  long long v39 = v79;
  long long v40 = v80;
  _OWORD *v35 = v75;
  v35[1] = v36;
  v35[2] = v37;
  v35[3] = v38;
  v35[4] = v39;
  v35[5] = v40;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v42 = v60;
  v41((char *)v24 + v25[7], v62, v60);
  uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v41)((char *)v24 + v25[8], v63, v42);
  uint64_t v44 = (uint64_t *)((char *)v24 + v25[9]);
  uint64_t v45 = v57;
  *uint64_t v44 = v15;
  v44[1] = v45;
  v44[2] = v27;
  v44[3] = v17;
  uint64_t v46 = v64;
  v44[4] = v56;
  v44[5] = v46;
  uint64_t v47 = v65;
  v44[6] = v28;
  v44[7] = v47;
  uint64_t v48 = v58;
  v44[8] = v66;
  v44[9] = v48;
  v44[10] = v59;
  *(uint64_t *)((char *)v24 + v25[10]) = v67;
  unsigned __int8 v49 = (uint64_t *)((char *)v24 + v25[11]);
  uint64_t v50 = v68;
  *unsigned __int8 v49 = v29;
  v49[1] = v50;
  return result;
}

uint64_t sub_10016DFAC@<X0>(uint64_t a1@<X8>)
{
  return sub_10016C570(*(void *)(v1 + 16), a1);
}

unint64_t sub_10016DFB4()
{
  unint64_t result = qword_1002F88D0;
  if (!qword_1002F88D0)
  {
    sub_100007928(&qword_1002F88C0);
    sub_100014894(&qword_1002EFF60, &qword_1002EFF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F88D0);
  }
  return result;
}

uint64_t sub_10016E054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoreOptionsMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016E0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoreOptionsMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016E120@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for MoreOptionsMenu() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10016DB94(v4, a1);
}

unint64_t sub_10016E190()
{
  unint64_t result = qword_1002F88E8;
  if (!qword_1002F88E8)
  {
    sub_100007928(&qword_1002F88B8);
    sub_100007928(&qword_1002F88A8);
    sub_100014894(&qword_1002F88E0, &qword_1002F88A8);
    swift_getOpaqueTypeConformance2();
    sub_10016E58C((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F88E8);
  }
  return result;
}

uint64_t sub_10016E2A0()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10016E2C4()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_10016E2E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_10016E3B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoreOptionsMenu();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10016E410()
{
  unint64_t result = qword_1002F8928;
  if (!qword_1002F8928)
  {
    sub_100007928(&qword_1002F8918);
    sub_10016E484();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8928);
  }
  return result;
}

unint64_t sub_10016E484()
{
  unint64_t result = qword_1002F8930;
  if (!qword_1002F8930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8930);
  }
  return result;
}

uint64_t sub_10016E4D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10016E518(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10016E57C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10016E58C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10016E5E4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10016E5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10016E658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10016E6C0()
{
  uint64_t v1 = (int *)type metadata accessor for MoreOptionsMenu();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  swift_release();
  if (*(void *)(v0 + v3 + 40) >= 5uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = v5 + v1[10];
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v5 + v1[11], v7);
  uint64_t v9 = v5 + v1[12];
  if (*(void *)(v9 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[14])) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10016E864()
{
  uint64_t v1 = *(void *)(type metadata accessor for MoreOptionsMenu() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10016D7D0(v2);
}

uint64_t sub_10016E8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EEF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10016E934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for MoreOptionsToggle()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for MoreOptionsToggle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MoreOptionsToggle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for MoreOptionsToggle(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MoreOptionsToggle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreOptionsToggle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MoreOptionsToggle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoreOptionsToggle()
{
  return &type metadata for MoreOptionsToggle;
}

uint64_t sub_10016EBD4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10016EBF0@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      unint64_t v10 = 0xD000000000000012;
      uint64_t result = LocalizedStringKey.init(stringLiteral:)();
      unint64_t v7 = 0xD000000000000013;
      unint64_t v8 = 0x8000000100260620;
      uint64_t v11 = "mic.badge.infinity";
      goto LABEL_6;
    case 2:
      unint64_t v10 = 0xD000000000000012;
      uint64_t result = LocalizedStringKey.init(stringLiteral:)();
      unint64_t v7 = 0xD000000000000014;
      unint64_t v8 = 0x80000001002605C0;
      uint64_t v11 = "globe.and.sparkles";
LABEL_6:
      unint64_t v9 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      break;
    case 3:
      uint64_t result = LocalizedStringKey.init(stringLiteral:)();
      unint64_t v7 = 0xD00000000000001ALL;
      unint64_t v8 = 0x8000000100260560;
      unint64_t v9 = 0xED0000656C626275;
      unint64_t v10 = 0x622E6E6F73726570;
      break;
    default:
      uint64_t result = LocalizedStringKey.init(stringLiteral:)();
      unint64_t v7 = 0xD000000000000016;
      unint64_t v8 = 0x8000000100260640;
      unint64_t v9 = 0xE400000000000000;
      unint64_t v10 = 2036427888;
      break;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  return result;
}

uint64_t sub_10016ED88@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v14[1] = a5;
  uint64_t v9 = sub_100007620(&qword_1002F8948);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[8] = a2;
  v19[9] = a3;
  char v20 = a4;
  sub_100007620(&qword_1002FAF70);
  Binding.projectedValue.getter();
  char v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  char v18 = a4;
  sub_100007620(&qword_1002EED40);
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  Toggle.init(isOn:label:)();
  sub_10016EBF0(a1, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100014894(&qword_1002F8950, &qword_1002F8948);
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10016EF90()
{
  return Label.init(title:icon:)();
}

uint64_t sub_10016F018@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  sub_10016EBF0(a1, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_10016F0B8@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  sub_10016EBF0(a1, (uint64_t)&v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = Image.init(_internalSystemName:)();
  *a2 = result;
  return result;
}

uint64_t sub_10016F12C@<X0>(uint64_t a1@<X8>)
{
  return sub_10016ED88(*(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_10016F13C()
{
  return sub_10016EF90();
}

uint64_t sub_10016F14C@<X0>(uint64_t a1@<X8>)
{
  return sub_10016F018(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_10016F15C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10016F0B8(*(unsigned char *)(v1 + 16), a1);
}

unsigned char *storeEnumTagSinglePayload for MoreOptionsToggle.Function(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016F238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MoreOptionsToggle.Function()
{
  return &type metadata for MoreOptionsToggle.Function;
}

unint64_t sub_10016F274()
{
  unint64_t result = qword_1002F8958;
  if (!qword_1002F8958)
  {
    sub_100007928(&qword_1002F8960);
    sub_100014894(&qword_1002F8950, &qword_1002F8948);
    sub_100015068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8958);
  }
  return result;
}

unint64_t sub_10016F318()
{
  unint64_t result = qword_1002F8968;
  if (!qword_1002F8968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8968);
  }
  return result;
}

uint64_t sub_10016F370()
{
  return swift_initClassMetadata2();
}

unint64_t sub_10016F420(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100007620(qword_1002F8BF8);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unsigned int v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  uint64_t v11 = &type metadata for Bool;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_100011710();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100048EC8(v6, v7);
    sub_100048EC8(v7, v40);
    sub_100048EC8(v40, &v38);
    unint64_t result = sub_1002036A8(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      char v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      unsigned int v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      char v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_10000AB68((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100048EC8(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100048EC8(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_10016F77C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100007620((uint64_t *)&unk_1002F8BB0);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v11 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v11 >= v27) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v11);
  int64_t v13 = i + 1;
  if (!v12)
  {
    int64_t v13 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    if (!v12)
    {
      int64_t v13 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v14 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v12 = *(void *)(v28 + 8 * v14);
            if (v12)
            {
              int64_t v13 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_36;
              }
              if (v13 >= v27) {
                break;
              }
              unint64_t v12 = *(void *)(v28 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_100011710();
          return;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v12 - 1) & v12;
  unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
  for (i = v13; ; unint64_t v10 = v9 | (i << 6))
  {
    char v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    char v18 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    id v19 = v18;
    unint64_t v20 = sub_1002036A8(v17, v16);
    unint64_t v21 = v20;
    if (v22)
    {
      uint64_t v7 = (uint64_t *)(v2[6] + 16 * v20);
      swift_bridgeObjectRelease();
      uint64_t *v7 = v17;
      v7[1] = v16;
      uint64_t v8 = v2[7];

      *(void *)(v8 + 8 * v21) = v19;
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v20;
    int64_t v23 = (uint64_t *)(v2[6] + 16 * v20);
    *int64_t v23 = v17;
    v23[1] = v16;
    *(void *)(v2[7] + 8 * v20) = v19;
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

NSString sub_10016FA20()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030EB40 = (uint64_t)result;
  return result;
}

void sub_10016FA58()
{
  qword_10030EB48 = 0x4069600000000000;
}

void sub_10016FA6C()
{
  qword_10030EB50 = 0x4024000000000000;
}

BOOL sub_10016FA7C(char a1, char a2)
{
  return a1 == a2;
}

void sub_10016FA8C(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int sub_10016FAB4(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

BOOL sub_10016FAFC(char *a1, char *a2)
{
  return sub_10016FA7C(*a1, *a2);
}

Swift::Int sub_10016FB08()
{
  return sub_10016FAB4(*v0);
}

void sub_10016FB10(uint64_t a1)
{
  sub_10016FA8C(a1, *v1);
}

Swift::Int sub_10016FB18()
{
  Hasher.init(_seed:)();
  sub_10016FA8C((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

BOOL sub_10016FB58(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 == 3) {
    return a2 == 3;
  }
  if (a1 == 4) {
    return a2 == 4;
  }
  if (a2 - 3 < 2) {
    return 0;
  }
  return a1 == a2;
}

BOOL sub_10016FBB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10016FB58(*a1, *a2);
}

id sub_10016FBBC()
{
  return sub_10016FFBC(&qword_1002F8970, (uint64_t (*)(uint64_t))sub_10016FBDC);
}

id sub_10016FBDC(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)UIPanGestureRecognizer);
  type metadata accessor for NewTranslationController();
  id v3 = [v2 initWithTarget:_bridgeAnythingToObjectiveC<A>(_:)() action:"textCardPanWithRecognizer:"];
  swift_unknownObjectRelease();
  [v3 setDelegate:a1];
  return v3;
}

id sub_10016FCCC()
{
  return sub_10016FFBC(&qword_1002F8978, (uint64_t (*)(uint64_t))sub_10016FCEC);
}

id sub_10016FCEC()
{
  uint64_t v0 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TranslateInputCard();
  id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v8 = sub_1001F522C();
  [v8 setTag:202];

  swift_unknownObjectWeakAssign();
  id v9 = sub_10016FBBC();
  [v7 addGestureRecognizer:v9];

  id v10 = sub_1001F522C();
  sub_1001F5D4C();
  id v11 = sub_1001E74EC();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v12];

  id v13 = sub_1001F522C();
  sub_10009A8D8((uint64_t)v7 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    static Locale.current.getter();
    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  Swift::Bool v14 = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v14) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 0;
  }
  [v13 setTextAlignment:v15];

  return v7;
}

id sub_10016FF9C()
{
  return sub_10016FFBC(&qword_1002F8980, (uint64_t (*)(uint64_t))sub_100170020);
}

id sub_10016FFBC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    unsigned int v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

char *sub_100170020()
{
  uint64_t v0 = [objc_allocWithZone((Class)type metadata accessor for LegacyInlineTranslationTabErrorView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_languageDownloadPresenter + 8] = &off_1002D07E8;
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_100170094(uint64_t a1)
{
  *(void *)(v1 + qword_1002F8988) = a1;
  return _objc_release_x1();
}

uint64_t sub_1001700A8(uint64_t a1)
{
  *(void *)(v1 + qword_1002F8990) = a1;
  return _objc_release_x1();
}

uint64_t sub_1001700BC()
{
  return *(unsigned __int8 *)(v0 + qword_1002F8998);
}

uint64_t sub_1001700CC(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1002F8998) = result;
  return result;
}

BOOL sub_1001700DC()
{
  if (!*(void *)(v0 + qword_1002F89B0)) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v1 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v1 != 0;
}

uint64_t sub_1001701CC()
{
  return *(unsigned __int8 *)(v0 + qword_1002F89E8);
}

uint64_t sub_1001701DC(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1002F89E8) = result;
  return result;
}

uint64_t sub_1001701EC()
{
  return *(unsigned __int8 *)(v0 + qword_1002F89F0);
}

BOOL sub_1001701FC()
{
  return *(unsigned char *)(v0 + qword_1002F89F0) == 0;
}

uint64_t sub_100170214(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)(v2 + qword_1002F8A00);
  *unint64_t v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_100170230(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_100178810();
}

void sub_100170258()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for NewTranslationController();
  [super viewDidLoad];
  *((unsigned char *)v0 + qword_1002F8998) = sub_100171EC8();
  sub_100170B28();
  sub_100170E50();
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 addObserver:v0 selector:"keyboardWillChangeFrame:" name:UIKeyboardWillChangeFrameNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"keyboardWillAppear" name:UIKeyboardWillShowNotification object:0];

  id v4 = [v1 defaultCenter];
  [v4 addObserver:v0 selector:"keyboardWillDisappear" name:UIKeyboardWillHideNotification object:0];

  id v5 = [v1 defaultCenter];
  if (qword_1002EE558 != -1) {
    swift_once();
  }
  [v5 addObserver:v0 selector:"cardListFirstAppear:" name:qword_10030E6B8 object:0];

  id v6 = [objc_allocWithZone((Class)UIScribbleInteraction) initWithDelegate:v0];
  id v7 = sub_10016FCCC();
  id v8 = sub_1001F522C();

  [v8 addInteraction:v6];
}

void sub_1001704A8(void *a1)
{
  id v1 = a1;
  sub_100170258();
}

void sub_1001704F0()
{
  *(unsigned char *)(v0 + qword_1002F89E8) = 1;
}

void sub_100170504()
{
}

void sub_100170528()
{
  *(unsigned char *)(v0 + qword_1002F89E8) = 0;
}

void sub_100170538()
{
}

void sub_10017055C(char a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for NewTranslationController();
  [super viewWillAppear:a1 & 1];
  if (*(void *)&v1[qword_1002F89B8]) {
    swift_unknownObjectWeakAssign();
  }
  if (v1[qword_1002F89F0]) {
    sub_10017203C(v1[qword_1002F89F0]);
  }
}

void sub_100170624(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10017055C(a3);
}

void sub_100170678(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for NewTranslationController();
  [super viewWillDisappear:a1 & 1];
  sub_100177584();
  objc_super v3 = *(void **)&v1[qword_1002F89A0];
  if (v3)
  {
    id v4 = v3;
    sub_10018A180();
    if (*(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData])
    {
      self;
      id v5 = (void *)swift_dynamicCastObjCClass();
      if (v5) {
        [v5 endAudio];
      }
    }
  }
}

void sub_100170790(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_100170678(a3);
}

id sub_1001707E4()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for NewTranslationController();
  [super viewDidLayoutSubviews];
  if (qword_1002EE670 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_10030EB48;
  id v2 = [v0 traitCollection];
  id v3 = [v2 horizontalSizeClass];

  double v4 = 0.0;
  if (v3 == (id)2)
  {
    if (qword_1002EE678 != -1) {
      swift_once();
    }
    double v4 = *(double *)&qword_10030EB50;
  }
  return [*(id *)&v0[qword_1002F89F8] setAdditionalSafeAreaInsets:0.0, 0.0, v1 + 8.0 - v4, 0.0];
}

void sub_100170960(void *a1)
{
  id v1 = a1;
  sub_1001707E4();
}

uint64_t sub_1001709A8(uint64_t a1)
{
  *(void *)(v1 + qword_1002F8A10) = a1;
  return _objc_release_x1();
}

void sub_1001709BC(void *a1, uint64_t a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for NewTranslationController();
  [super willTransitionToTraitCollection:a1 withTransitionCoordinator:a2];
  id v5 = *(void **)&v2[qword_1002F8A10];
  if (v5)
  {
    id v6 = v5;
    objc_msgSend(v6, "setActive:", objc_msgSend(a1, "horizontalSizeClass") != (id)1);
  }
}

void sub_100170AA8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  sub_1001709BC(v6, a4);

  swift_unknownObjectRelease();
}

void sub_100170B28()
{
  uint64_t v1 = *(void **)&v0[qword_1002F89F8];
  [v0 addChildViewController:v1];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v3 = v2;
  id v4 = [v1 view];
  if (!v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  id v5 = v4;
  [v3 addSubview:v4];

  [v1 didMoveToParentViewController:v0];
  id v6 = [v0 view];
  if (!v6)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v7 = v6;
  id v8 = sub_10016FCCC();
  [v7 addSubview:v8];

  id v9 = sub_10016FF9C();
  [v9 setHidden:1];

  id v10 = [v0 view];
  if (!v10)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v11 = v10;
  id v12 = sub_10016FF9C();
  [v11 addSubview:v12];
}

id sub_100170C9C()
{
  id v17 = *(id *)(v0 + qword_1002F89F8);
  id v1 = v17;
  sub_100007620(&qword_1002F8BE0);
  if (swift_dynamicCast())
  {
    sub_100048DE4(v15, (uint64_t)v18);
    uint64_t v2 = v19;
    uint64_t v3 = v20;
    sub_100029624(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
    id result = [v1 view];
    if (result)
    {
      id v5 = result;
      [result frame];
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v21.origin.x = v7;
      v21.origin.y = v9;
      v21.size.width = v11;
      v21.size.height = v13;
      CGRectGetMinY(v21);
      id result = [v1 view];
      if (result)
      {
        Swift::Bool v14 = result;
        [result safeAreaInsets];

        return (id)sub_10000AB68((uint64_t)v18);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    return (id)sub_10000B070((uint64_t)v15, (uint64_t *)&unk_1002F8BE8);
  }
  return result;
}

void sub_100170E50()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[qword_1002F89F8];
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_30;
  }
  id v4 = v3;
  id v137 = v2;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v5 = sub_10016FCCC();
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v6 = sub_10016FF9C();
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = sub_10016FCCC();
  id v8 = [v7 topAnchor];

  id v9 = [v1 view];
  if (!v9)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  double v10 = v9;
  id v11 = [v9 safeAreaLayoutGuide];

  id v12 = [v11 topAnchor];
  id v13 = [v8 constraintEqualToAnchor:v12 constant:0.0];

  Swift::Bool v14 = *(void **)&v1[qword_1002F8988];
  *(void *)&v1[qword_1002F8988] = v13;

  uint64_t v15 = *(void **)&v1[qword_1002F8988];
  if (v15)
  {
    type metadata accessor for UILayoutPriority(0);
    sub_100178ABC((unint64_t *)&qword_1002F0428, type metadata accessor for UILayoutPriority);
    id v16 = v15;
    static _UIKitNumericRawRepresentable.+ infix(_:_:)();
    LODWORD(v17) = v138;
    [v16 setPriority:v17];
  }
  id v18 = [v1 view];
  if (!v18) {
    goto LABEL_31;
  }
  uint64_t v19 = v18;
  id v20 = [v18 safeAreaLayoutGuide];

  id v21 = [v20 bottomAnchor];
  id v22 = sub_10016FCCC();
  id v23 = [v22 topAnchor];

  if (qword_1002EE670 != -1) {
    swift_once();
  }
  id v24 = [v21 constraintEqualToAnchor:v23 constant:*(double *)&qword_10030EB48];

  BOOL v25 = *(void **)&v1[qword_1002F8990];
  *(void *)&v1[qword_1002F8990] = v24;

  int64_t v27 = *(void **)&v1[qword_1002F8990];
  if (v27)
  {
    LODWORD(v26) = 1144750080;
    [v27 setPriority:v26];
  }
  id v28 = sub_10016FF9C();
  id v29 = [v28 topAnchor];

  id v30 = sub_10016FCCC();
  id v31 = [v30 topAnchor];

  id v32 = [v29 constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:v31 multiplier:3.0];
  id v33 = sub_10016FF9C();
  id v34 = [v33 centerYAnchor];

  id v35 = [v1 view];
  if (!v35) {
    goto LABEL_32;
  }
  uint64_t v36 = v35;
  uint64_t v135 = v32;
  id v37 = [v35 centerYAnchor];

  id v38 = [v34 constraintEqualToAnchor:v37];
  LODWORD(v39) = 1132068864;
  v134 = v38;
  [v38 setPriority:v39];
  id v40 = sub_10016FCCC();
  id v41 = [v40 centerXAnchor];

  id v42 = [v1 view];
  if (!v42)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v43 = v42;
  id v44 = [v42 centerXAnchor];

  id v45 = [v41 constraintEqualToAnchor:v44];
  type metadata accessor for UILayoutPriority(0);
  sub_100178ABC((unint64_t *)&qword_1002F0428, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v46) = v138;
  [v45 setPriority:v46];
  id v47 = sub_10016FCCC();
  id v48 = [v47 widthAnchor];

  id v49 = [v1 view];
  if (!v49)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v50 = v49;
  id v51 = [v49 readableContentGuide];

  id v52 = [v51 widthAnchor];
  id v53 = [v48 constraintEqualToAnchor:v52 multiplier:1.0];

  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v54) = v138;
  [v53 setPriority:v54];
  id v55 = [v1 traitCollection];
  id v56 = [v55 horizontalSizeClass];

  [v53 setActive:v56 != (id)1];
  uint64_t v57 = *(void **)&v1[qword_1002F8A10];
  *(void *)&v1[qword_1002F8A10] = v53;
  id v58 = v53;

  id v59 = sub_10016FCCC();
  id v60 = [v59 leadingAnchor];

  id v61 = [v1 view];
  if (!v61)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v62 = v61;
  uint64_t v133 = v58;
  id v63 = [v61 leadingAnchor];

  id v64 = [v60 constraintEqualToAnchor:v63];
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v65) = v138;
  [v64 setPriority:v65];
  id v66 = sub_10016FCCC();
  id v67 = [v66 trailingAnchor];

  id v68 = [v1 view];
  if (!v68)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  long long v69 = v68;
  id v70 = [v68 trailingAnchor];

  id v71 = [v67 constraintEqualToAnchor:v70];
  LODWORD(v72) = 1144750080;
  [v71 setPriority:v72];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1002546D0;
  *(void *)(v73 + 32) = v64;
  *(void *)(v73 + 40) = v71;
  *(void *)(v73 + 48) = v45;
  id v132 = v64;
  id v131 = v71;
  id v130 = v45;
  id v74 = sub_10016FCCC();
  id v75 = [v74 bottomAnchor];

  id v76 = sub_100171C68(v1);
  id v77 = [v75 constraintEqualToAnchor:v76];

  *(void *)(v73 + 56) = v77;
  *(void *)(v73 + 64) = v135;
  *(void *)(v73 + 72) = v134;
  id v136 = v135;
  id v78 = v134;
  id v79 = sub_10016FF9C();
  id v80 = [v79 bottomAnchor];

  id v81 = [v1 view];
  if (!v81)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v82 = v81;
  id v83 = [v81 safeAreaLayoutGuide];

  id v84 = [v83 bottomAnchor];
  id v85 = [v80 constraintLessThanOrEqualToAnchor:v84];

  *(void *)(v73 + 80) = v85;
  id v86 = sub_10016FF9C();
  id v87 = [v86 leadingAnchor];

  id v88 = sub_10016FCCC();
  id v89 = [v88 leadingAnchor];

  id v90 = [v87 constraintEqualToSystemSpacingAfterAnchor:v89 multiplier:3.0];
  *(void *)(v73 + 88) = v90;
  id v91 = sub_10016FCCC();
  id v92 = [v91 trailingAnchor];

  id v93 = sub_10016FF9C();
  id v94 = [v93 trailingAnchor];

  id v95 = [v92 constraintEqualToSystemSpacingAfterAnchor:v94 multiplier:3.0];
  *(void *)(v73 + 96) = v95;
  id v96 = [v137 view];
  if (!v96)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v97 = v96;
  id v98 = [v96 bottomAnchor];

  id v99 = [v1 view];
  if (!v99)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v100 = v99;
  id v101 = [v99 safeAreaLayoutGuide];

  id v102 = [v101 bottomAnchor];
  id v103 = [v1 traitCollection];
  id v104 = [v103 horizontalSizeClass];

  double v105 = 0.0;
  if (v104 == (id)2)
  {
    if (qword_1002EE678 != -1) {
      swift_once();
    }
    double v105 = -*(double *)&qword_10030EB50;
  }
  id v106 = [v98 constraintEqualToAnchor:v102 constant:v105];

  *(void *)(v73 + 104) = v106;
  id v107 = [v137 view];
  if (!v107) {
    goto LABEL_40;
  }
  v108 = v107;
  id v109 = [v107 topAnchor];

  id v110 = [v1 view];
  if (!v110)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v111 = v110;
  id v112 = [v110 topAnchor];

  id v113 = [v109 constraintEqualToAnchor:v112];
  *(void *)(v73 + 112) = v113;
  id v114 = [v137 view];
  if (!v114)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v115 = v114;
  id v116 = [v114 trailingAnchor];

  id v117 = [v1 view];
  if (!v117)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v118 = v117;
  id v119 = [v117 trailingAnchor];

  id v120 = [v116 constraintEqualToAnchor:v119];
  *(void *)(v73 + 120) = v120;
  id v121 = [v137 view];
  if (!v121)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v122 = v121;
  id v123 = [v121 leadingAnchor];

  id v124 = [v1 view];
  if (v124)
  {
    v125 = v124;
    int v126 = self;
    id v127 = [v125 leadingAnchor];

    id v128 = [v123 constraintEqualToAnchor:v127];
    *(void *)(v73 + 128) = v128;
    specialized Array._endMutation()();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v126 activateConstraints:isa];

    return;
  }
LABEL_45:
  __break(1u);
}

id sub_100171C68(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 horizontalSizeClass];

  id result = [a1 view];
  id v5 = result;
  if (v3 == (id)1)
  {
    if (result)
    {
      id v6 = [result bottomAnchor];
LABEL_6:
      id v8 = v6;

      return v8;
    }
    __break(1u);
  }
  else if (result)
  {
    id v7 = [result safeAreaLayoutGuide];

    id v6 = [v7 bottomAnchor];
    id v5 = v7;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100171D50(char a1)
{
  if (a1 == 3)
  {
    id v2 = [v1 view];
    if (v2)
    {
      id v3 = v2;
      [v2 frame];
      CGFloat v5 = v4;
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;

      v17.origin.x = v5;
      v17.origin.y = v7;
      v17.size.width = v9;
      v17.size.height = v11;
      CGRectGetHeight(v17);
      id v12 = [v1 view];
      if (v12)
      {
        id v13 = v12;
        [v12 safeAreaInsets];

        if (qword_1002EE670 != -1) {
          swift_once();
        }
        id v14 = [v1 view];
        if (v14)
        {
          uint64_t v15 = v14;
          [v14 safeAreaInsets];

          return;
        }
LABEL_15:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  if (a1 != 4)
  {
    sub_100170C9C();
  }
}

uint64_t sub_100171EC8()
{
  if (!*(void *)(v0 + qword_1002F89B0)) {
    return 0;
  }
  swift_retain();
  id v1 = sub_10016FCCC();
  id v2 = sub_1001F522C();

  id v3 = [v2 text];
  if (v3)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v8 = v7 != 0;
  }
  else
  {
    BOOL v8 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v10 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (v10) {
    int v11 = v8;
  }
  else {
    int v11 = 1;
  }
  if (v11) {
    return 0;
  }
  else {
    return 3;
  }
}

void sub_10017203C(char a1)
{
  id v2 = *(void **)(v1 + qword_1002F89A0);
  if (!v2) {
    return;
  }
  uint64_t v3 = v1;
  id v5 = v2;
  id v44 = sub_10008CD5C();

  unint64_t v6 = &off_1002F8000;
  if (!a1)
  {
    id v14 = sub_10016FF9C();
    [v14 setHidden:1];
LABEL_10:

    id v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
LABEL_12:
    UIViewController.contentUnavailableConfiguration.setter();
LABEL_13:
    if (*(void *)((char *)v6[311] + v3))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v46) = 1;
      swift_retain();
      static Published.subscript.setter();
    }
    id v18 = sub_10016FCCC();
    v18[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_uiVisible] = 0;
    uint64_t v19 = &v18[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible];
    v18[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible] = 0;
    id v20 = sub_1001F5FB8();
    [v20 setHidden:(*v19 & 1) == 0];

    id v21 = sub_1001F522C();
    [v21 setHidden:1];

    if (*(unsigned __int8 *)(v3 + qword_1002F8998) - 1 <= 1)
    {
      uint64_t v22 = sub_100171EC8();
      sub_100173DF4(v22, 1, 0.0);
    }

    return;
  }
  if (a1 == 1)
  {
    BOOL v7 = sub_1001700DC();
    BOOL v8 = (char *)sub_10016FF9C();
    CGFloat v9 = v8;
    if (!v7)
    {
      [v8 setHidden:1];

      *((void *)&v47 + 1) = type metadata accessor for UIContentUnavailableConfiguration();
      id v48 = &protocol witness table for UIContentUnavailableConfiguration;
      CGRect v17 = sub_100014830((uint64_t *)&v46);
      sub_1000CFA70(v44, (uint64_t)v17);
      goto LABEL_12;
    }
    uint64_t v10 = &v8[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType];
    int v11 = *(void **)&v8[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType];
    unint64_t v12 = v44;
    *(void *)uint64_t v10 = v44;
    char v13 = v10[8];
    v10[8] = 0;
    goto LABEL_9;
  }
  if (sub_1001700DC())
  {
    CGFloat v9 = (char *)sub_10016FF9C();
    uint64_t v15 = &v9[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType];
    int v11 = *(void **)&v9[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType];
    unint64_t v12 = v44;
    *(void *)uint64_t v15 = v44;
    char v13 = v15[8];
    v15[8] = 1;
LABEL_9:
    id v16 = v12;
    sub_10010D860(v11, v13);
    sub_1001345BC();

    id v14 = sub_10016FF9C();
    [v14 setHidden:0];
    goto LABEL_10;
  }
  if (*(void *)(v3 + qword_1002F89B8))
  {
    swift_retain();
    id v23 = sub_10016FF9C();
    [v23 setHidden:1];

    *((void *)&v47 + 1) = type metadata accessor for UIContentUnavailableConfiguration();
    id v48 = &protocol witness table for UIContentUnavailableConfiguration;
    sub_100014830((uint64_t *)&v46);
    static UIContentUnavailableConfiguration.empty()();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [self _systemImageNamed:v24];

    UIContentUnavailableConfiguration.image.setter();
    double v26 = self;
    id v27 = [v26 mainBundle];
    v50._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0x43495645445F4E4FLL;
    v28._object = (void *)0xEF454C5449545F45;
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v50._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v50);

    UIContentUnavailableConfiguration.text.setter();
    id v30 = [v26 mainBundle];
    v51._object = (void *)0xE000000000000000;
    v31._object = (void *)0x800000010025F9D0;
    v31._countAndFlagsBits = 0xD000000000000015;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v51._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v51);

    UIContentUnavailableConfiguration.secondaryText.setter();
    id v33 = [v26 mainBundle];
    v52._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0x43495645445F4E4FLL;
    v34._object = (void *)0xEE004B4E494C5F45;
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v52._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v52);

    uint64_t v36 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
    UIButton.Configuration.title.setter();
    v36(v45, 0);
    sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
    static UIColor.translateAccentColor.getter();
    id v37 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
    UIButton.Configuration.baseForegroundColor.setter();
    v37(v45, 0);
    unint64_t v6 = &off_1002F8000;
    UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
    swift_retain();
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v38 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.buttonProperties.modify();
    UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
    v38(v45, 0);
    UIViewController.contentUnavailableConfiguration.setter();
    swift_release();
    goto LABEL_13;
  }
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v39 = type metadata accessor for Logger();
  sub_100011554(v39, (uint64_t)qword_10030E978);
  oslog = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v40))
  {
    id v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v40, "Error: Missing ConversationContext", v41, 2u);
    swift_slowDealloc();

    id v42 = oslog;
  }
  else
  {

    id v42 = v44;
  }
}

id sub_100172740()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = __chkstk_darwin(v1);
  id v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void **)(v0 + qword_1002F89A0);
  if (v6)
  {
    id v81 = v5;
    uint64_t v87 = v3;
    uint64_t v85 = v2;
    id v86 = v6;
    uint64_t v82 = v0;
    id v7 = sub_10016FCCC();
    id v8 = sub_1001F522C();

    id v9 = [v8 font];
    if (!v9)
    {
      id v10 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
      int v11 = self;
      [v10 pointSize];
      id v12 = [v11 systemFontOfSize:];
      id v13 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
      id v9 = [v13 scaledFontForFont:v12 maximumPointSize:1.79769313e308];
    }
    sub_100007620(&qword_1002FC3D0);
    uint64_t inited = swift_initStackObject();
    long long v83 = xmmword_100247140;
    *(_OWORD *)(inited + 16) = xmmword_100247140;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v15 = sub_10000B0CC(0, (unint64_t *)&qword_1002F02A0);
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 64) = v15;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    uint64_t v16 = qword_1002EE6C0;
    CGRect v17 = NSFontAttributeName;
    id v18 = v9;
    uint64_t v19 = NSForegroundColorAttributeName;
    if (v16 != -1) {
      swift_once();
    }
    id v20 = (void *)qword_10030EC30;
    uint64_t v21 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
    *(void *)(inited + 104) = v21;
    *(void *)(inited + 80) = v20;
    id v22 = v20;
    unint64_t v84 = sub_1001FF520(inited);
    uint64_t v23 = swift_initStackObject();
    *(_OWORD *)(v23 + 16) = v83;
    *(void *)(v23 + 32) = v17;
    *(void *)(v23 + 40) = v18;
    *(void *)(v23 + 64) = v15;
    *(void *)(v23 + 72) = v19;
    NSString v24 = (void *)qword_10030EC30;
    *(void *)(v23 + 104) = v21;
    *(void *)(v23 + 80) = v24;
    id v78 = v18;
    id v25 = v17;
    double v26 = v19;
    id v27 = v24;
    *(void *)&long long v83 = sub_1001FF520(v23);
    id v28 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
    [v28 setAlignment:2];
    swift_getKeyPath();
    swift_getKeyPath();
    Swift::String v29 = v81;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    LOBYTE(v23) = Locale.isRTL()();
    uint64_t v30 = v87 + 8;
    uint64_t v31 = v85;
    Swift::String v32 = *(void (**)(char *))(v87 + 8);
    v32(v29);
    if (v23)
    {
      uint64_t v91 = sub_10000B0CC(0, &qword_1002F2E20);
      *(void *)&long long v90 = v28;
      sub_100048EC8(&v90, v89);
      id v33 = NSParagraphStyleAttributeName;
      id v34 = v28;
      unint64_t v35 = v84;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v88 = v35;
      sub_100205D60(v89, v33, isUniquelyReferenced_nonNull_native);
      unint64_t v84 = v88;

      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Swift::Bool v38 = Locale.isRTL()();
    ((void (*)(char *, uint64_t))v32)(v29, v31);
    id v77 = v28;
    if (v38)
    {
      uint64_t v91 = sub_10000B0CC(0, &qword_1002F2E20);
      *(void *)&long long v90 = v28;
      sub_100048EC8(&v90, v89);
      id v39 = v28;
      os_log_type_t v40 = NSParagraphStyleAttributeName;
      unint64_t v41 = v83;
      char v42 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v88 = v41;
      sub_100205D60(v89, v40, v42);
      *(void *)&long long v83 = v88;

      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v43 = self;
    id v44 = [v43 mainBundle];
    v45._countAndFlagsBits = 0x4E494E455453494CLL;
    v45._object = (void *)0xE900000000000047;
    v46._countAndFlagsBits = 0x617A696C61636F4CLL;
    v46._object = (void *)0xEB00000000656C62;
    Locale.ltLocalizedAppString(_:table:bundle:)(v45, v46, (NSBundle)v44);

    id v80 = (void (*)(char *, uint64_t))v32;
    ((void (*)(char *, uint64_t))v32)(v29, v31);
    id v47 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    uint64_t v79 = v49;
    sub_100178ABC((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
    uint64_t v87 = v30;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v76 = [v47 initWithString:v48 attributes:isa];

    id v51 = v86;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v52 = [v43 mainBundle];
    v53._countAndFlagsBits = 0x4E494E455453494CLL;
    v53._object = (void *)0xE900000000000047;
    v54._countAndFlagsBits = 0x617A696C61636F4CLL;
    v54._object = (void *)0xEB00000000656C62;
    Locale.ltLocalizedAppString(_:table:bundle:)(v53, v54, (NSBundle)v52);

    v80(v29, v85);
    id v55 = objc_allocWithZone((Class)NSAttributedString);
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
    id v58 = v51;
    swift_bridgeObjectRelease();
    id v59 = [v55 initWithString:v56 attributes:v57];

    id v60 = objc_allocWithZone((Class)NSAttributedString);
    NSString v61 = String._bridgeToObjectiveC()();
    Class v62 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v63 = [v60 initWithString:v61 attributes:v62];

    if (*(void *)(v82 + qword_1002F89B8))
    {
      swift_retain();
      id v64 = sub_10008CD5C();
      char v65 = sub_10007641C(v64);

      if (v65)
      {
        id v66 = objc_allocWithZone((Class)NSMutableAttributedString);
        id v67 = v76;
        id v37 = [v66 initWithAttributedString:v76];
        [v37 appendAttributedString:v63];
        [v37 appendAttributedString:v59];

        swift_release();
        id v68 = v59;
        long long v69 = v67;
        id v70 = v77;
        id v71 = v78;
LABEL_18:

        return v37;
      }
      swift_release();
    }
    char v72 = sub_10008B7A0();
    id v73 = objc_allocWithZone((Class)NSMutableAttributedString);
    if (v72)
    {
      id v71 = v76;
      id v37 = [v73 initWithAttributedString:v76];

      id v68 = v59;
      long long v69 = v77;
      id v70 = v78;
    }
    else
    {
      id v37 = [v73 initWithAttributedString:v59];

      id v68 = v63;
      id v63 = v76;
      long long v69 = v77;
      id v70 = v78;
      id v71 = v59;
    }
    goto LABEL_18;
  }
  return 0;
}

void sub_1001730F4(uint64_t a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = __chkstk_darwin(v8);
  int v11 = (char *)&v64 - v10;
  __chkstk_darwin(v9);
  id v14 = (char *)&v64 - v13;
  uint64_t v15 = *(void **)&v1[qword_1002F89A0];
  if (v15)
  {
    uint64_t v65 = v12;
    id v67 = v5;
    uint64_t v69 = a1;
    uint64_t v16 = v1;
    id v17 = v15;
    id v18 = (char *)sub_10016FCCC();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v19 = objc_allocWithZone((Class)_LTLocalePair);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v21 = Locale._bridgeToObjectiveC()().super.isa;
    id v22 = [v19 initWithSourceLocale:isa targetLocale:v21];

    uint64_t v68 = v7;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v11, v6);
    id v66 = (void (*)(uint64_t, uint64_t))v23;
    v23(v14, v6);
    NSString v24 = *(void **)&v18[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_editingPair];
    *(void *)&v18[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_editingPair] = v22;

    id v25 = sub_10016FCCC();
    id v26 = sub_1001F555C();

    p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
    [v26 setHidden:1];

    swift_getKeyPath();
    swift_getKeyPath();
    id v28 = v17;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v75 == 2)
    {

      id v29 = sub_100172740();
      id v30 = sub_10016FCCC();
      id v31 = sub_1001F522C();

      Swift::String v32 = v16;
      if (v29)
      {
        id v33 = sub_1001E74EC();
        [v33 setAttributedText:v29];
      }
      else
      {
        id v48 = [self mainBundle];
        v76._object = (void *)0x8000000100260910;
        v49._countAndFlagsBits = 0x4E494E455453494CLL;
        v49._object = (void *)0xE900000000000047;
        v50._countAndFlagsBits = 0;
        v50._object = (void *)0xE000000000000000;
        v76._countAndFlagsBits = 0xD000000000000016;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v76);

        id v33 = sub_1001E74EC();
        id v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v33 setText:v29];
      }

      id v51 = sub_10016FCCC();
      id v47 = sub_1001F522C();

      [v47 setUserInteractionEnabled:0];
    }
    else
    {
      sub_10008B9C0((uint64_t)&aBlock);
      id v34 = sub_10016FCCC();
      id v35 = sub_1001F522C();

      id v36 = sub_10016FCCC();
      sub_1001F5D4C();

      id v37 = sub_1001E74EC();
      NSString v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v37 setText:v38];

      id v39 = sub_10016FCCC();
      id v40 = sub_1001F522C();

      id v41 = sub_10016FCCC();
      uint64_t v42 = (uint64_t)v67;
      sub_10009A8D8((uint64_t)v41 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale, (uint64_t)v67);
      Swift::String v32 = v16;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v42, 1, v6) == 1)
      {
        uint64_t v43 = v65;
        static Locale.current.getter();
        sub_10000B070(v42, (uint64_t *)&unk_1002F4110);
      }
      else
      {
        uint64_t v43 = v65;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v65, v42, v6);
      }
      Swift::Bool v44 = Locale.isRTL()();
      v66(v43, v6);

      if (v44) {
        uint64_t v45 = 2;
      }
      else {
        uint64_t v45 = 0;
      }
      [v40 setTextAlignment:v45];

      id v46 = sub_10016FCCC();
      id v47 = sub_1001F522C();

      [v47 setUserInteractionEnabled:1];
      p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
    }

    switch((char)v69)
    {
      case 1:
      case 2:
        id v52 = sub_10016FCCC();
        Swift::String v53 = &v52[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible];
        v52[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible] = 1;
        id v54 = sub_1001F5FB8();
        [v54 setNeedsLayout:(*v53 & 1) == 0];

        id v55 = self;
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v32;
        id v74 = sub_100178A2C;
        uint64_t v75 = v56;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = 1107296256;
        Class v57 = &unk_1002D0A28;
        goto LABEL_22;
      case 3:
        id v60 = sub_10016FCCC();
        sub_1001F6F18();

        if (*(void *)&v32[qword_1002F89B8])
        {
          swift_getKeyPath();
          swift_getKeyPath();
          LOBYTE(aBlock) = 0;
          swift_retain();
          static Published.subscript.setter();
        }
        id v55 = self;
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v32;
        id v74 = sub_100179758;
        uint64_t v75 = v61;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = 1107296256;
        Class v57 = &unk_1002D0AC8;
        goto LABEL_22;
      case 4:

        return;
      default:
        id v58 = sub_10016FCCC();
        sub_1001F6F18();

        if (*(void *)&v32[qword_1002F89B8])
        {
          swift_getKeyPath();
          swift_getKeyPath();
          LOBYTE(aBlock) = 0;
          swift_retain();
          static Published.subscript.setter();
        }
        id v55 = self;
        uint64_t v59 = swift_allocObject();
        *(void *)(v59 + 16) = v32;
        id v74 = sub_100178A4C;
        uint64_t v75 = v59;
        aBlock = _NSConcreteStackBlock;
        uint64_t v71 = 1107296256;
        Class v57 = &unk_1002D0A78;
LABEL_22:
        char v72 = sub_10008BA1C;
        id v73 = v57;
        Class v62 = _Block_copy(&aBlock);
        id v63 = v32;
        swift_release();
        [v55 animateWithDuration:v62 animations:0.25];

        _Block_release(v62);
        break;
    }
  }
}

void sub_100173A10(void *a1, double a2)
{
  id v3 = [a1 tabBarController];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 tabBar];

    [v5 setAlpha:a2];
  }
}

void sub_100173AB4(char a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v19 - v8;
  __chkstk_darwin(v7);
  int v11 = (char *)&v19 - v10;
  uint64_t v12 = *(void **)(v1 + qword_1002F89A0);
  if (v12)
  {
    switch(a1)
    {
      case 2:
        swift_getKeyPath();
        swift_getKeyPath();
        id v15 = v12;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v16 = type metadata accessor for Locale();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v16) == 1)
        {
          sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4110);
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10009A8D8((uint64_t)v11, (uint64_t)v9);
          id v18 = v15;
          static Published.subscript.setter();
          sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4110);
        }
        else
        {

          sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4110);
        }
        break;
      case 4:
        return;
      default:
        uint64_t v13 = type metadata accessor for Locale();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A8D8((uint64_t)v11, (uint64_t)v9);
        id v14 = v12;
        static Published.subscript.setter();
        sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4110);

        break;
    }
  }
}

void sub_100173DF4(uint64_t a1, char a2, double a3)
{
  sub_100175204();
  uint64_t v7 = *(void **)&v3[qword_1002F8988];
  if (v7) {
    [v7 setActive:0];
  }
  uint64_t v8 = *(void **)&v3[qword_1002F8990];
  if (v8) {
    [v8 setActive:0];
  }
  if (a1 == 3)
  {
    uint64_t v9 = *(void **)&v3[qword_1002F8990];
    if (v9) {
      [v9 setActive:1];
    }
  }
  else
  {
    uint64_t v10 = *(void **)&v3[qword_1002F8988];
    if (v10)
    {
      [v10 setActive:1];
      int v11 = *(void **)&v3[qword_1002F8988];
      if (v11)
      {
        id v12 = v11;
        sub_100171D50(a1);
        [v12 setConstant:];
      }
    }
  }
  uint64_t v13 = (char *)sub_10016FCCC();
  id v14 = *(id *)&v13[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor];

  double v15 = 0.0;
  if (((a1 - 1) & 0xFE) == 0) {
    double v15 = 20.0;
  }
  [v14 setConstant:v15];

  sub_1001730F4(a1);
  int v16 = v3[qword_1002F8998];
  if (v16 == 3)
  {
    if (a1 == 3) {
      return;
    }
  }
  else if (v16 == 4)
  {
    if (a1 == 4) {
      return;
    }
  }
  else if ((a1 - 5) <= 0xFDu && v16 == a1)
  {
    return;
  }
  sub_100173AB4(a1);
  v3[qword_1002F8998] = a1;
  if (a2)
  {
    id v17 = sub_10016FCCC();
    [v17 frame];
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    CGFloat v25 = v24;

    v49.origin.x = v19;
    v49.origin.y = v21;
    v49.size.width = v23;
    v49.size.height = v25;
    double MinY = CGRectGetMinY(v49);
    sub_100171D50(v3[qword_1002F8998]);
    if (vabdd_f64(v27, MinY) >= 0.01) {
      double v28 = a3 / (v27 - MinY);
    }
    else {
      double v28 = 0.0;
    }
    id v29 = [objc_allocWithZone((Class)CASpringAnimation) init];
    [v29 setStiffness:333.333333];
    [v29 stiffness];
    double v31 = sqrt(v30);
    [v29 setDamping:(v31 + v31) * 4.56435465];
    [v29 setInitialVelocity:v28];
    [v29 settlingDuration];
    double v33 = v32;
    id v34 = [v3 view];
    if (v34)
    {
      id v35 = v34;
      [v34 _removeAllAnimations:1];

      id v36 = self;
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v3;
      id v47 = sub_1001789D8;
      uint64_t v48 = v37;
      uint64_t v43 = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      uint64_t v45 = sub_10008BA1C;
      id v46 = &unk_1002D0988;
      NSString v38 = _Block_copy(&v43);
      id v39 = v3;
      swift_release();
      uint64_t v40 = swift_allocObject();
      *(unsigned char *)(v40 + 16) = a1;
      *(void *)(v40 + 24) = v39;
      id v47 = sub_100178A18;
      uint64_t v48 = v40;
      uint64_t v43 = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      uint64_t v45 = sub_100218350;
      id v46 = &unk_1002D09D8;
      id v41 = _Block_copy(&v43);
      uint64_t v42 = v39;
      swift_release();
      [v36 animateWithDuration:2 delay:v38 usingSpringWithDamping:v41 initialSpringVelocity:v33 options:0.0 animations:4.56435465 completion:v28];
      _Block_release(v41);
      _Block_release(v38);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10017424C(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    id v2 = v1;
    [v1 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001742A8(char a1, unsigned __int8 a2)
{
  if ((a1 & 1) != 0 && a2 - 5 <= 0xFFFFFFFD && a2 == 2)
  {
    id v4 = sub_10016FCCC();
    id v5 = sub_1001F522C();

    [v5 becomeFirstResponder];
  }
}

double sub_100174324()
{
  return *(double *)(v0 + qword_1002F8A20);
}

void sub_100174334(double a1)
{
  *(double *)(v1 + qword_1002F8A20) = a1;
}

uint64_t sub_100174344()
{
  return *(unsigned __int8 *)(v0 + qword_1002F8A28);
}

uint64_t sub_100174354(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1002F8A28) = result;
  return result;
}

void sub_100174364(void *a1)
{
  uint64_t v2 = v1;
  if (*(void *)&v1[qword_1002F89B0])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v4 < 1)
    {
LABEL_33:
      swift_release();
      return;
    }
    id v5 = [v2 view];
    [a1 translationInView:v5];
    double v7 = v6;

    id v8 = [v2 view];
    [a1 velocityInView:v8];
    double v10 = v9;

    switch((unint64_t)[a1 state])
    {
      case 1uLL:
        v2[qword_1002F8A28] = v2[qword_1002F8998];
        v2[qword_1002F8998] = 4;
        int v11 = *(void **)&v2[qword_1002F8990];
        if (v11) {
          [v11 setActive:0];
        }
        id v12 = *(void **)&v2[qword_1002F8988];
        if (v12) {
          [v12 setActive:1];
        }
        id v13 = sub_10016FCCC();
        [v13 frame];
        CGFloat v15 = v14;
        CGFloat v17 = v16;
        CGFloat v19 = v18;
        CGFloat v21 = v20;

        v39.origin.x = v15;
        v39.origin.y = v17;
        v39.size.width = v19;
        v39.size.height = v21;
        *(CGFloat *)&v2[qword_1002F8A20] = CGRectGetMinY(v39);
        id v22 = sub_10016FCCC();
        id v23 = sub_1001F522C();

        [v23 resignFirstResponder];
        goto LABEL_33;
      case 2uLL:
        double v24 = *(void **)&v2[qword_1002F8988];
        if (!v24) {
          goto LABEL_33;
        }
        double v25 = v7 + *(double *)&v2[qword_1002F8A20];
        id v26 = v24;
        sub_100170C9C();
        if (v27 > v25) {
          double v25 = v27;
        }
        sub_100171D50(3);
        if (v28 >= v25) {
          double v28 = v25;
        }
        [v26 setConstant:v28];
        swift_release();

        return;
      case 3uLL:
        sub_100171D50(3);
        double v30 = v29;
        sub_100170C9C();
        double v32 = v30 - v31;
        int v33 = v2[qword_1002F8A28];
        if ((v33 - 3) >= 2)
        {
          if (fabs(v7) >= v32 * 0.25)
          {
LABEL_20:
            if (v10 <= 500.0 && v10 < -500.0)
            {
LABEL_22:
              uint64_t v34 = sub_100171EC8();
              switch(v2[qword_1002F8A28])
              {
                case 1:
                  uint64_t v34 = 1;
                  break;
                case 2:
                case 3:
                  uint64_t v34 = 2;
                  break;
                default:
                  goto LABEL_32;
              }
              goto LABEL_32;
            }
LABEL_27:
            id v35 = &v2[qword_1002F8A00];
            *(void *)id v35 = 0;
            *((void *)v35 + 1) = 0;
            swift_bridgeObjectRelease();
            if (*(void *)&v2[qword_1002F89B8])
            {
              swift_getKeyPath();
              swift_getKeyPath();
              swift_retain();
              static Published.subscript.setter();
            }
            id v36 = *(void **)&v2[qword_1002F89A0];
            if (v36)
            {
              id v37 = v36;
              sub_10009073C(0, 0, 0);
            }
            uint64_t v34 = sub_100171EC8();
LABEL_32:
            sub_100173DF4(v34, 1, v10);
            goto LABEL_33;
          }
        }
        else if (v33 != 3 || v32 * 0.25 >= fabs(v7))
        {
          goto LABEL_20;
        }
        if (v10 <= 500.0) {
          goto LABEL_22;
        }
        goto LABEL_27;
      case 4uLL:
        uint64_t v34 = v2[qword_1002F8A28];
        goto LABEL_32;
      default:
        goto LABEL_33;
    }
  }
}

void sub_100174808(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100174364(v4);
}

void sub_100174870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v45 = a4;
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v46 = (char *)&v39 - v13;
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  double v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  double v20 = (char *)&v39 - v19;
  sub_100173DF4(2, 1, 0.0);
  CGFloat v21 = *(void **)(v4 + qword_1002F89A0);
  if (v21)
  {
    id v41 = v12;
    uint64_t v43 = a1;
    id v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v22(v20, a3, v14);
    swift_getKeyPath();
    uint64_t v40 = a3;
    swift_getKeyPath();
    uint64_t v44 = a2;
    v22(v18, (uint64_t)v20, v14);
    id v23 = v21;
    static Published.subscript.setter();
    sub_10008C964();
    uint64_t v42 = v5;
    CGRect v39 = *(void (**)(char *, uint64_t))(v15 + 8);
    v39(v20, v14);
    v22(v20, v45, v14);
    swift_getKeyPath();
    swift_getKeyPath();
    v22(v18, (uint64_t)v20, v14);
    id v24 = v23;
    static Published.subscript.setter();
    sub_10008C99C();
    v39(v20, v14);
    uint64_t v5 = v42;
    uint64_t v25 = (uint64_t)v46;
    v22(v46, v40, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v25, 0, 1, v14);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A8D8(v25, (uint64_t)v41);
    id v26 = v24;
    static Published.subscript.setter();
    sub_10000B070(v25, (uint64_t *)&unk_1002F4110);
  }
  id v27 = sub_10016FCCC();
  id v28 = sub_1001F522C();

  NSString v29 = String._bridgeToObjectiveC()();
  [v28 setText:v29];

  id v30 = sub_10016FCCC();
  id v31 = sub_1001F522C();

  id v32 = [v31 text];
  if (v32)
  {
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  id v36 = (uint64_t *)(v5 + qword_1002F8A00);
  *id v36 = v33;
  v36[1] = v35;
  swift_bridgeObjectRelease();
  id v37 = sub_10016FCCC();
  id v38 = sub_1001F522C();

  [v38 setSelectedRange:0, String.count.getter()];
}

uint64_t sub_100174CC8(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  double v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v15 - v7;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a1;
  sub_100174870(v9, v11, (uint64_t)v8, (uint64_t)v6);

  swift_bridgeObjectRelease();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v13)(v8, v2);
}

uint64_t sub_100174E2C(uint64_t a1)
{
  *(void *)(v1 + qword_1002F8A30) = a1;
  return _objc_release_x1();
}

void sub_100174E40(void *a1)
{
  if (!*(void *)&v1[qword_1002F8A30])
  {
    uint64_t v2 = v1;
    *(void *)&v1[qword_1002F8A30] = a1;
    id v3 = a1;
    id v4 = [v1 parentViewController];
    [v4 addChildViewController:v3];

    id v5 = [v3 view];
    if (v5)
    {
      double v6 = v5;
      [v5 setAlpha:0.0];

      id v7 = [v2 parentViewController];
      if (v7)
      {
        id v8 = v7;
        id v9 = [v7 view];

        if (!v9)
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        id v10 = [v3 view];
        if (!v10)
        {
LABEL_17:
          __break(1u);
          goto LABEL_18;
        }
        uint64_t v11 = v10;
        [v9 addSubview:v10];
      }
      id v12 = [v3 view];
      if (v12)
      {
        uint64_t v13 = v12;
        [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

        id v14 = [v2 parentViewController];
        if (!v14)
        {
LABEL_12:
          uint64_t v19 = self;
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v3;
          id v31 = sub_100178B7C;
          uint64_t v32 = v20;
          id v27 = _NSConcreteStackBlock;
          uint64_t v28 = 1107296256;
          NSString v29 = sub_10008BA1C;
          id v30 = &unk_1002D0B18;
          CGFloat v21 = _Block_copy(&v27);
          id v22 = v3;
          swift_release();
          uint64_t v23 = swift_allocObject();
          *(void *)(v23 + 16) = v22;
          *(void *)(v23 + 24) = v2;
          id v31 = sub_100178BDC;
          uint64_t v32 = v23;
          id v27 = _NSConcreteStackBlock;
          uint64_t v28 = 1107296256;
          NSString v29 = sub_100218350;
          id v30 = &unk_1002D0B68;
          id v24 = _Block_copy(&v27);
          id v25 = v22;
          id v26 = v2;
          swift_release();
          [v19 animateWithDuration:v21 animations:v24 completion:0.4];
          _Block_release(v24);
          _Block_release(v21);
          return;
        }
        uint64_t v15 = v14;
        id v16 = [v14 view];

        if (v16)
        {
          id v17 = [v3 view];
          if (v17)
          {
            double v18 = v17;
            sub_10023B960(v17);

            goto LABEL_12;
          }
LABEL_19:
          __break(1u);
          return;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_100175174(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a4)
  {
    id v6 = a3;
    id v7 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    id v8 = a3;
    id v9 = a1;
  }
  sub_100174E40(a3);

  return sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F02C0);
}

void sub_100175204()
{
  uint64_t v1 = *(void **)&v0[qword_1002F8A30];
  if (v1)
  {
    id v2 = v1;
    [v2 willMoveToParentViewController:0];
    id v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    uint64_t v15 = sub_1001789A8;
    uint64_t v16 = v4;
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_10008BA1C;
    id v14 = &unk_1002D08E8;
    id v5 = _Block_copy(&v11);
    id v6 = v2;
    swift_release();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = v0;
    uint64_t v15 = sub_1001789C8;
    uint64_t v16 = v7;
    uint64_t v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    uint64_t v13 = sub_100218350;
    id v14 = &unk_1002D0938;
    id v8 = _Block_copy(&v11);
    id v9 = v6;
    id v10 = v0;
    swift_release();
    [v3 animateWithDuration:v5 animations:v8 completion:0.4];
    _Block_release(v8);
    _Block_release(v5);
  }
}

void sub_1001753C8(void *a1, double a2)
{
  id v3 = [a1 view];
  if (v3)
  {
    id v4 = v3;
    [v3 setAlpha:a2];
  }
  else
  {
    __break(1u);
  }
}

void sub_100175434(int a1, id a2, uint64_t a3)
{
  id v5 = [a2 view];
  if (v5)
  {
    id v6 = v5;
    [v5 removeFromSuperview];

    [a2 removeFromParentViewController];
    uint64_t v7 = *(void **)(a3 + qword_1002F8A30);
    *(void *)(a3 + qword_1002F8A30) = 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_1001754C4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v23 = 0u;
    long long v24 = 0u;
LABEL_10:
    sub_10000B070((uint64_t)&v23, (uint64_t *)&unk_1002F02C0);
    return;
  }
  uint64_t v1 = v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10020384C((uint64_t)v22), (v3 & 1) != 0))
  {
    sub_10000B170(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v23);
  }
  else
  {
    long long v23 = 0u;
    long long v24 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v22);
  if (!*((void *)&v24 + 1)) {
    goto LABEL_10;
  }
  sub_10000B0CC(0, (unint64_t *)&unk_1002F8BC0);
  if (swift_dynamicCast())
  {
    id v4 = (void *)v22[0];
    id v5 = sub_10016FCCC();
    id v6 = sub_1001F522C();

    [v6 frame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    v25.origin.x = v8;
    v25.origin.y = v10;
    v25.size.width = v12;
    v25.size.height = v14;
    double Height = CGRectGetHeight(v25);
    id v16 = sub_10016FCCC();
    id v17 = sub_1001F522C();

    [v4 CGRectValue];
    [v17 convertRect:0 fromView:];
    double v19 = v18;

    id v20 = sub_10016FCCC();
    id v21 = sub_1001F522C();

    [v21 setContentInset:0.0, 0.0, Height - v19 + 20.0, 0.0];
  }
}

uint64_t sub_1001756C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001766D0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Notification, (void (*)(uint64_t))&static Notification._unconditionallyBridgeFromObjectiveC(_:), (void (*)(char *))sub_1001754C4);
}

void sub_100175708()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_10:
    sub_10000B070((uint64_t)&v10, (uint64_t *)&unk_1002F02C0);
    return;
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10020384C((uint64_t)v9), (v3 & 1) != 0))
  {
    sub_10000B170(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v9);
  if (!*((void *)&v11 + 1)) {
    goto LABEL_10;
  }
  type metadata accessor for CGSize(0);
  if (swift_dynamicCast())
  {
    uint64_t v4 = v9[0];
    uint64_t v5 = v9[1];
    id v6 = sub_10016FCCC();
    double v7 = (char *)sub_1001F522C();

    CGFloat v8 = &v7[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_minSourceTextSize];
    *(void *)CGFloat v8 = v4;
    *((void *)v8 + 1) = v5;
  }
}

uint64_t sub_100175844(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001766D0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Notification, (void (*)(uint64_t))&static Notification._unconditionallyBridgeFromObjectiveC(_:), (void (*)(char *))sub_100175708);
}

Class sub_100175884(void *a1)
{
  id v1 = a1;
  unint64_t v2 = sub_1001758F4();

  if (v2)
  {
    type metadata accessor for Locale();
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.Class isa = 0;
  }

  return v3.super.isa;
}

void *sub_1001758F4()
{
  id v1 = *(void **)(v0 + qword_1002F89A0);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100007620((uint64_t *)&unk_1002F6870);
  type metadata accessor for Locale();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100247140;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  return (void *)v2;
}

BOOL sub_100175A5C()
{
  return sub_100178B04();
}

uint64_t sub_100175A84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  uint64_t v5 = type metadata accessor for Locale();
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 2, v5);
  if (v6)
  {
    if (v6 == 1) {
      return 0x7373696D736964;
    }
    else {
      return 0x6B61657073;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
    return 0x6769626D61736964;
  }
}

void sub_100175BEC(uint64_t a1)
{
  uint64_t v38 = a1;
  uint64_t v2 = *(void *)((swift_isaMask & *v1) + 0x50);
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0x58);
  uint64_t v4 = *(void *)((swift_isaMask & *v1) + 0x60);
  uint64_t v39 = type metadata accessor for NewTranslationController.LIDAction();
  uint64_t v5 = *(void *)(v39 - 8);
  uint64_t v36 = *(void *)(v5 + 64);
  __chkstk_darwin(v39);
  id v37 = (char *)&v32 - v6;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v13 = (char *)&v32 - v12;
  CGFloat v14 = *(void **)((char *)v1 + qword_1002F89A0);
  if (v14)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v35 = v2;
    id v15 = v14;
    uint64_t v34 = v4;
    id v16 = v15;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v17 = objc_allocWithZone((Class)_LTLocalePair);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    v19.super.Class isa = Locale._bridgeToObjectiveC()().super.isa;
    uint64_t v33 = v3;
    Class v20 = v19.super.isa;
    id v21 = [v17 initWithSourceLocale:isa targetLocale:v19.super.isa];

    id v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v11, v7);
    v22(v13, v7);
    NSString v23 = String._bridgeToObjectiveC()();
    long long v24 = v37;
    uint64_t v25 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v37, v38, v39);
    unint64_t v26 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    id v27 = (char *)swift_allocObject();
    uint64_t v28 = v33;
    *((void *)v27 + 2) = v35;
    *((void *)v27 + 3) = v28;
    *((void *)v27 + 4) = v34;
    *((void *)v27 + 5) = v16;
    *((void *)v27 + 6) = v21;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v27[v26], v24, v25);
    aBlock[4] = sub_10017877C;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001BB31C;
    aBlock[3] = &unk_1002D0898;
    NSString v29 = _Block_copy(aBlock);
    id v30 = v16;
    id v31 = v21;
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v29);
  }
}

uint64_t sub_100176004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v35 = a2;
  uint64_t v34 = type metadata accessor for NewTranslationController.LIDAction();
  uint64_t v36 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v4 = (char *)&v32 - v3;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v6 = v33;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v32 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)&v32 - v10;
  __chkstk_darwin(v9);
  double v13 = (char *)&v32 - v12;
  sub_100007620(&qword_1002F8BA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100248B60;
  strcpy((char *)(inited + 32), "sourceLocale");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  id v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v13, v5);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v16;
  strcpy((char *)(inited + 56), "targetLocale");
  *(unsigned char *)(inited + 69) = 0;
  *(_WORD *)(inited + 70) = -5120;
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v4;
  uint64_t v18 = v34;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  v15(v11, v5);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v19;
  *(void *)(inited + 80) = 0x6150656C61636F6CLL;
  *(void *)(inited + 88) = 0xEA00000000007269;
  sub_100006274();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v20;
  *(void *)(inited + 104) = 0x6E6F69746361;
  *(void *)(inited + 112) = 0xE600000000000000;
  swift_getWitnessTable();
  uint64_t v21 = v37;
  dispatch thunk of CustomStringConvertible.description.getter();
  NSString v22 = String._bridgeToObjectiveC()();
  uint64_t v23 = v36;
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = v22;
  uint64_t v24 = v33;
  unint64_t v25 = sub_1001FF8D4(inited);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v17, v21, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v17, 2, v5))
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v18);
  }
  else
  {
    unint64_t v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v17, v5);
    Locale.ltIdentifier.getter();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v25;
    sub_100205EA4((uint64_t)v27, 0x6F4C6E65736F6863, 0xEC000000656C6163, isUniquelyReferenced_nonNull_native);
    unint64_t v25 = v38;
    swift_bridgeObjectRelease();
    v15(v26, v5);
  }
  sub_10016F77C(v25);
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  return v30;
}

void sub_1001764D0(unsigned char *a1)
{
  uint64_t v3 = type metadata accessor for NewTranslationController.LIDAction();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 2, v7);
  sub_100175BEC((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100175204();
  uint64_t v9 = *(void **)(v1 + qword_1002F89A0);
  if (v9)
  {
    id v10 = v9;
    sub_10008EDE4(a1);
  }
}

uint64_t sub_100176690(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1001766D0(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Locale, (void (*)(uint64_t))&static Locale._unconditionallyBridgeFromObjectiveC(_:), sub_1001764D0);
}

uint64_t sub_1001766D0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t), void (*a6)(char *))
{
  uint64_t v10 = a4(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v16 - v12;
  a5(a3);
  id v14 = a1;
  a6(v13);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_1001767D0()
{
  uint64_t v1 = type metadata accessor for NewTranslationController.LIDAction();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v8 - v3;
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 2, v5);
  sub_100175BEC((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100175204();
  uint64_t v6 = *(void **)(v0 + qword_1002F89A0);
  if (v6)
  {
    id v7 = v6;
    sub_10009073C(0, 0, 0);
  }
}

void sub_10017694C(void *a1)
{
  id v1 = a1;
  sub_1001767D0();
}

void sub_100176994()
{
  if (*(void *)(v0 + qword_1002F89B8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  sub_100173DF4(2, 1, 0.0);
}

void sub_100176A24(void *a1)
{
  id v1 = a1;
  sub_100176994();
}

void sub_100176A6C()
{
  if (*(void *)(v0 + qword_1002F89B8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  uint64_t v1 = sub_100171EC8();
  sub_100173DF4(v1, 1, 0.0);
}

void sub_100176AF8(void *a1)
{
  id v1 = a1;
  sub_100176A6C();
}

void sub_100176B40(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v43 = a3;
  uint64_t v6 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v3;
  NSString v19 = *(void **)(v3 + qword_1002F89A0);
  if (v19)
  {
    uint64_t v41 = a1;
    uint64_t v42 = a2;
    swift_getKeyPath();
    swift_getKeyPath();
    id v20 = v19;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {

      sub_10000B070((uint64_t)v14, (uint64_t *)&unk_1002F4110);
    }
    else
    {
      id v40 = v20;
      (*(void (**)(unsigned char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      Date.init()();
      uint64_t v21 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
      NSString v22 = v43;
      uint64_t v23 = (uint64_t)&v43[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_start];
      swift_beginAccess();
      sub_1000344BC((uint64_t)v8, v23, &qword_1002F8BA0);
      swift_endAccess();
      uint64_t v24 = v44;
      if (*(void *)(v44 + qword_1002F89B8))
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_release();
        char v25 = (char)v46;
      }
      else
      {
        char v25 = 0;
      }
      v22[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_airplaneModeEnabled] = v25;
      sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
      unint64_t v26 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
      char v27 = NSUserDefaults.onDeviceOnly.getter();

      v22[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_onDeviceModeEnabled] = v27 & 1;
      (*(void (**)(char *, unsigned char *, uint64_t))(v16 + 16))(v12, v18, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      uint64_t v28 = (uint64_t)&v22[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_sourceLocale];
      swift_beginAccess();
      sub_1000344BC((uint64_t)v12, v28, (uint64_t *)&unk_1002F4110);
      swift_endAccess();
      uint64_t v29 = *(void *)(v24 + qword_1002F89B8);
      if (v29)
      {
        char v31 = *(unsigned char *)(v29 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autoplayTTS + 16);
        id v46 = *(void **)(v29 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autoplayTTS);
        uint64_t v30 = v46;
        swift_retain();
        id v32 = v30;
        uint64_t v24 = v44;
        id v33 = v32;
        swift_retain();
        swift_retain();
        swift_getAtKeyPath();
        swift_release();
        swift_release();
        swift_release();

        char v34 = v45;
        if (v45 == 2) {
          char v34 = v31;
        }
        NSString v22 = v43;
        if (v34) {
          uint64_t v29 = 8;
        }
        else {
          uint64_t v29 = 0;
        }
      }
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v22;
      uint64_t v36 = v22;
      uint64_t v37 = v29;
      unint64_t v38 = v40;
      sub_10008F6EC(v41, v42, 0, 0, v18, v37, (uint64_t)sub_1001785DC, v35);
      swift_release();
      if (*(void *)(v24 + qword_1002F89B8))
      {
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v46) = 0;
        swift_retain_n();
        static Published.subscript.setter();
        swift_release();

        (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
      }
    }
  }
}

void sub_1001770D4(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t v8 = (uint64_t)a2 + OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_start;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v6, v8, &qword_1002F8BA0);
  swift_endAccess();
  sub_100235868(a1);
  NSString v9 = String._bridgeToObjectiveC()();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  aBlock[4] = sub_1001785E4;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB31C;
  aBlock[3] = &unk_1002D0848;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a2;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v11);
}

uint64_t sub_1001772AC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  NSString v9 = a4;
  id v10 = a1;
  sub_100176B40(v6, v8, v9);

  return swift_bridgeObjectRelease();
}

void sub_100177324()
{
  uint64_t v1 = v0;
  id v2 = sub_10016FCCC();
  id v3 = sub_1001F522C();

  id v4 = [v3 text];
  if (!v4)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v8)
  {
    id v9 = objc_allocWithZone((Class)type metadata accessor for TypedInputInstrumentation());
    id v10 = sub_100237654(0);
    id v11 = sub_10016FCCC();
    id v12 = sub_1001F522C();

    id v13 = [v12 text];
    if (v13)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v14 = String.count.getter();
      swift_bridgeObjectRelease();
      *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_characterCount] = v14;
      uint64_t v15 = *(void **)(v1 + qword_1002F89A0);
      if (v15)
      {
        id v16 = v15;
        id v17 = sub_10008CD5C();
      }
      else
      {
        id v17 = 0;
      }
      uint64_t v18 = *(void **)&v10[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair];
      *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair] = v17;

      id v19 = sub_10016FCCC();
      id v20 = sub_1001F522C();

      id v21 = [v20 text];
      if (v21)
      {
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        sub_100176B40(v22, v24, v10);
        swift_bridgeObjectRelease();
        return;
      }
LABEL_18:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  sub_100176A6C();
}

void sub_10017753C(void *a1)
{
  id v1 = a1;
  sub_100177324();
}

void sub_100177584()
{
  uint64_t v1 = v0;
  id v2 = (void *)(v0 + qword_1002F8A00);
  *id v2 = 0;
  v2[1] = 0;
  swift_bridgeObjectRelease();
  id v3 = *(void **)(v0 + qword_1002F89A0);
  if (v3)
  {
    id v4 = v3;
    sub_10009073C(0, 0, 0);
  }
  id v5 = sub_10016FCCC();
  sub_1001F6D10();

  if (*(void *)(v1 + qword_1002F89B8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  uint64_t v6 = sub_100171EC8();
  sub_100173DF4(v6, 1, 0.0);
}

void sub_100177670(void *a1)
{
  id v1 = a1;
  sub_100177584();
}

BOOL sub_1001776B8()
{
  id v1 = *(void **)(v0 + qword_1002F89A0);
  if (v1)
  {
    id v2 = v1;
    sub_10018A180();
    if (*(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData])
    {
      self;
      id v3 = (void *)swift_dynamicCastObjCClass();
      if (v3) {
        [v3 endAudio];
      }
    }
  }
  return v1 != 0;
}

BOOL sub_100177760(void *a1)
{
  id v1 = a1;
  BOOL v2 = sub_1001776B8();

  return v2;
}

void sub_100177794(uint64_t a1, double a2, double a3)
{
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for NewTranslationController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2 a3];
  id v7 = sub_10016FCCC();
  [v7 endEditing:1];
}

void sub_100177860(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  sub_100177794(a5, a2, a3);
  swift_unknownObjectRelease();
}

void sub_1001778E0(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1002EE620 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030EA68);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    objc_super v8 = (uint8_t *)swift_slowAlloc();
    id v9 = (void *)swift_slowAlloc();
    *(_DWORD *)objc_super v8 = 138543362;
    id v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "scribbleInteractionDidFinishWriting %{public}@", v8, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (*(void *)(v2 + qword_1002F89B8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
}

void sub_100177AD4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1001778E0(v4);
}

void sub_100177B3C(void *a1)
{
  if (*(void *)&v1[qword_1002F89B8])
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    if (*(void *)&v1[qword_1002F89B8])
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
    }
  }
  if (v1[qword_1002F89E8] == 1)
  {
    id v3 = [v1 view];
    if (!v3)
    {
      __break(1u);
      return;
    }
    id v4 = v3;
    [v3 endEditing:1];
  }
  if (qword_1002EE620 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EA68);
  uint64_t v6 = a1;
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    *(_DWORD *)id v9 = 138543362;
    id v11 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v10 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "scribbleInteractionWillBeginWriting %{public}@", v9, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    os_log_type_t v7 = v6;
  }
}

void sub_100177DC4(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_100177B3C(v4);
}

BOOL sub_100177E2C()
{
  return sub_100178B34();
}

void sub_100177E54(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_100178B4C();
}

id sub_100177EE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NewTranslationController();
  return [super dealloc];
}

void sub_100177F70(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + qword_1002F8A30);
}

uint64_t type metadata accessor for NewTranslationController()
{
  return sub_1000BA700();
}

uint64_t sub_1001780E8(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100178198);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001781AC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *id result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100178280);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *id result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_1001782A8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001782BC(unsigned char *result, int a2)
{
  if (a2) {
    *id result = a2 + 2;
  }
  return result;
}

uint64_t type metadata accessor for NewTranslationController.CardState()
{
  return sub_1000BA700();
}

uint64_t sub_1001782E4()
{
  if (*(void *)(v0 + qword_1002F89B8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_100178368@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10017837C()
{
  return sub_1000694BC();
}

uint64_t sub_100178390@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001783A4()
{
  return sub_1000694BC();
}

uint64_t sub_1001783B8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001783CC()
{
  return sub_1000694BC();
}

uint64_t sub_1001783E0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001783F4()
{
  return sub_1000694BC();
}

uint64_t sub_100178408@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10017841C()
{
  return sub_1000694BC();
}

void *sub_100178430()
{
  return sub_100237BD8();
}

uint64_t sub_100178454@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10017847C()
{
  return sub_1000694BC();
}

uint64_t sub_1001784A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001784CC()
{
  return sub_1000694BC();
}

uint64_t sub_1001784F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10017851C()
{
  return sub_1000694BC();
}

uint64_t sub_100178544@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10017856C()
{
  return sub_1000694BC();
}

uint64_t sub_1001785A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001785DC(uint64_t a1)
{
  sub_1001770D4(a1, *(void **)(v1 + 16));
}

void *sub_1001785E4()
{
  return sub_100237BD8();
}

uint64_t sub_100178608(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100178618()
{
  return swift_release();
}

uint64_t type metadata accessor for NewTranslationController.LIDAction()
{
  return sub_1000BA700();
}

uint64_t sub_100178648()
{
  uint64_t v1 = *(void *)(type metadata accessor for NewTranslationController.LIDAction() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 2, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10017877C()
{
  uint64_t v1 = *(void *)(type metadata accessor for NewTranslationController.LIDAction() - 8);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100176004(v2, v3, v4);
}

void sub_100178810()
{
  *(void *)&v0[qword_1002F8970] = 0;
  *(void *)&v0[qword_1002F8978] = 0;
  *(void *)&v0[qword_1002F8980] = 0;
  *(void *)&v0[qword_1002F8988] = 0;
  *(void *)&v0[qword_1002F8990] = 0;
  v0[qword_1002F8998] = 3;
  *(void *)&v0[qword_1002F89A0] = 0;
  *(void *)&v0[qword_1002F89A8] = 0;
  *(void *)&v0[qword_1002F89B0] = 0;
  *(void *)&v0[qword_1002F89B8] = 0;
  *(void *)&v0[qword_1002F89C0] = 0;
  *(void *)&v0[qword_1002F89C8] = 0;
  *(void *)&v0[qword_1002F89D0] = 0;
  *(void *)&v0[qword_1002F89D8] = 0;
  *(void *)&v0[qword_1002F89E0] = 0;
  v0[qword_1002F89E8] = 0;
  v0[qword_1002F89F0] = 0;
  uint64_t v1 = &v0[qword_1002F8A00];
  void *v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[qword_1002F8A08];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  *(void *)&v0[qword_1002F8A10] = 0;
  *(void *)&v0[qword_1002F8A18] = 0;
  *(void *)&v0[qword_1002F8A20] = 0;
  v0[qword_1002F8A28] = 3;
  *(void *)&v0[qword_1002F8A30] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001789A8()
{
  sub_1001753C8(*(void **)(v0 + 16), 0.0);
}

void sub_1001789C8(int a1)
{
  sub_100175434(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1001789D8()
{
  sub_10017424C(*(void **)(v0 + 16));
}

uint64_t sub_1001789E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100178A18(char a1)
{
  sub_1001742A8(a1, *(unsigned char *)(v1 + 16));
}

void sub_100178A2C()
{
  sub_100173A10(*(void **)(v0 + 16), 0.0);
}

void sub_100178A4C()
{
  sub_100173A10(*(void **)(v0 + 16), 1.0);
}

uint64_t sub_100178A6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100178A94()
{
  return sub_1000694BC();
}

uint64_t sub_100178ABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_100178B04()
{
  return !*(unsigned char *)(v0 + qword_1002F89F0) && *(unsigned char *)(v0 + qword_1002F8998) != 4;
}

BOOL sub_100178B34()
{
  return *(unsigned char *)(v0 + qword_1002F8998) == 3;
}

void sub_100178B4C()
{
}

void sub_100178B7C()
{
  sub_1001753C8(*(void **)(v0 + 16), 1.0);
}

uint64_t sub_100178B9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100178BDC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = [*(id *)(v0 + 24) parentViewController];
  [v1 didMoveToParentViewController:v2];
}

uint64_t sub_100178C44()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100178CBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_100178E08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_100178ED8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_100178FE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_10017915C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_10017926C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1001793E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001793F4);
}

uint64_t sub_1001793F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_100179460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100179474);
}

uint64_t sub_100179474(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1001794F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_100179560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

unsigned char *sub_1001795D0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017969CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for NewTranslationController.CardState.ExpandedState()
{
  return sub_1000BA700();
}

uint64_t sub_1001796DC()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for NextActionButton()
{
  return &type metadata for NextActionButton;
}

uint64_t sub_10017977C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100179798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v25[1] = a1;
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for KeyboardShortcut();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v28 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ActionButtonStyle = type metadata accessor for NextActionButtonStyle();
  uint64_t v4 = __chkstk_darwin(ActionButtonStyle);
  unsigned int v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v25 - v7;
  uint64_t v9 = sub_100007620(&qword_1002EF0C8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F8D00);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F8D08);
  uint64_t v26 = *(void *)(v16 - 8);
  uint64_t v27 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  Button.init(action:label:)();
  sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)unsigned int v6 = swift_getKeyPath();
  v6[8] = 0;
  id v19 = (uint64_t *)&v6[*(int *)(ActionButtonStyle + 20)];
  *id v19 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F57A0);
  swift_storeEnumTagMultiPayload();
  sub_10017AA10((uint64_t)v6, (uint64_t)v8);
  unint64_t v20 = sub_10017AA74();
  uint64_t v21 = sub_10017B488(&qword_1002F8D18, (void (*)(uint64_t))type metadata accessor for NextActionButtonStyle);
  View.buttonStyle<A>(_:)();
  sub_10017B5EC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NextActionButtonStyle);
  sub_10000B070((uint64_t)v15, &qword_1002F8D00);
  uint64_t v22 = v28;
  static KeyboardShortcut.defaultAction.getter();
  uint64_t v32 = v13;
  uint64_t v33 = ActionButtonStyle;
  unint64_t v34 = v20;
  uint64_t v35 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v27;
  View.keyboardShortcut(_:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v18, v23);
}

uint64_t sub_100179C28@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100179C94@<X0>(uint64_t a1@<X8>)
{
  return sub_100179798(*v1, a1);
}

uint64_t type metadata accessor for NextActionButtonStyle()
{
  uint64_t result = qword_1002F8D80;
  if (!qword_1002F8D80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100179CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a1;
  uint64_t v105 = a2;
  uint64_t v3 = type metadata accessor for Capsule();
  __chkstk_darwin(v3 - 8);
  id v116 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100007620(&qword_1002F8DC0);
  __chkstk_darwin(v102);
  uint64_t v103 = (uint64_t)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100007620(&qword_1002F8DC8);
  __chkstk_darwin(v101);
  uint64_t v104 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100007620(&qword_1002EFF08);
  __chkstk_darwin(v98);
  id v113 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v8 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002EFF10);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002F8DD0);
  uint64_t v108 = *(void *)(v14 - 8);
  uint64_t v109 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100007620(&qword_1002F8DD8);
  __chkstk_darwin(v107);
  uint64_t v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100007620(&qword_1002F8DE0);
  __chkstk_darwin(v110);
  v111 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100007620(&qword_1002F8DE8);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  id v112 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100007620(&qword_1002F8DF0);
  __chkstk_darwin(v95);
  id v114 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100007620(&qword_1002F8DF8);
  __chkstk_darwin(v99);
  uint64_t v100 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for ColorScheme();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NextActionButtonStyle();
  uint64_t v115 = v2;
  sub_100100F48((uint64_t)v26);
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v26, v23);
  if (v27 == enum case for ColorScheme.light(_:))
  {
    if (ButtonStyleConfiguration.isPressed.getter()) {
      double v28 = 0.75;
    }
    else {
      double v28 = 1.0;
    }
    if (ButtonStyleConfiguration.isPressed.getter()) {
      double v29 = 0.65;
    }
    else {
      double v29 = 1.0;
    }
  }
  else
  {
    double v29 = 1.0;
    double v28 = 1.0;
    if (v27 != enum case for ColorScheme.dark(_:))
    {
      if (ButtonStyleConfiguration.isPressed.getter()) {
        double v28 = 0.75;
      }
      else {
        double v28 = 1.0;
      }
      if (ButtonStyleConfiguration.isPressed.getter()) {
        double v29 = 0.65;
      }
      else {
        double v29 = 1.0;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    }
  }
  ButtonStyleConfiguration.label.getter();
  uint64_t v30 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = v106;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v106);
  uint64_t v33 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *uint64_t v33 = KeyPath;
  v33[1] = v30;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v32);
  static Font.Weight.semibold.getter();
  sub_100026894();
  View.fontWeight(_:)();
  sub_10000B070((uint64_t)v13, &qword_1002EFF10);
  unsigned __int8 v34 = static Edge.Set.leading.getter();
  char v35 = static Edge.Set.trailing.getter();
  char v36 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v34) {
    char v36 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v37 = Edge.Set.init(rawValue:)();
  uint64_t v38 = (uint64_t)v116;
  uint64_t v39 = (uint64_t)v113;
  uint64_t v40 = (uint64_t)v114;
  uint64_t v42 = v110;
  uint64_t v41 = (uint64_t)v111;
  if (v37 != v35) {
    char v36 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v108;
  uint64_t v51 = v109;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v18, v16, v109);
  Swift::String v53 = &v18[*(int *)(v107 + 36)];
  *Swift::String v53 = v36;
  *((void *)v53 + 1) = v44;
  *((void *)v53 + 2) = v46;
  *((void *)v53 + 3) = v48;
  *((void *)v53 + 4) = v50;
  v53[40] = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v51);
  LOBYTE(v52) = static Edge.Set.top.getter();
  char v54 = static Edge.Set.bottom.getter();
  char v55 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v52) {
    char v55 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v56 = Edge.Set.init(rawValue:)();
  Class v57 = v112;
  if (v56 != v54) {
    char v55 = Edge.Set.init(rawValue:)();
  }
  uint64_t v58 = v115;
  EdgeInsets.init(_all:)();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  sub_10000C3A4((uint64_t)v18, v41, &qword_1002F8DD8);
  uint64_t v67 = v41 + *(int *)(v42 + 36);
  *(unsigned char *)uint64_t v67 = v55;
  *(void *)(v67 + 8) = v60;
  *(void *)(v67 + 16) = v62;
  *(void *)(v67 + 24) = v64;
  *(void *)(v67 + 32) = v66;
  *(unsigned char *)(v67 + 40) = 0;
  sub_10000B070((uint64_t)v18, &qword_1002F8DD8);
  uint64_t v68 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v69 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 104))(v39, v68, v69);
  sub_10017B488(&qword_1002EFF40, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_10017B690(&qword_1002F8E00, &qword_1002F8DE0, (void (*)(void))sub_10017B4D0);
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    View.dynamicTypeSize<A>(_:)();
    sub_10000B070(v39, &qword_1002EFF08);
    sub_10000B070(v41, &qword_1002F8DE0);
    uint64_t v71 = *(void *)v58;
    char v72 = *(unsigned char *)(v58 + 8);
    sub_1000247E8(*(void *)v58, v72);
    char v73 = sub_1000FFC98(v71, v72);
    sub_10002485C(v71, v72);
    if (v73) {
      uint64_t v74 = static Color.translateAccentColor.getter();
    }
    else {
      uint64_t v74 = static Color.quaternaryTranslateAccentColor.getter();
    }
    uint64_t v75 = v74;
    uint64_t v76 = swift_getKeyPath();
    uint64_t v77 = v96;
    uint64_t v78 = v97;
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v40, v57, v97);
    uint64_t v79 = (uint64_t *)(v40 + *(int *)(v95 + 36));
    *uint64_t v79 = v76;
    v79[1] = v75;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v57, v78);
    uint64_t v80 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v81 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v38, v80, v81);
    uint64_t v82 = *(void *)v58;
    LOBYTE(v76) = *(unsigned char *)(v58 + 8);
    sub_1000247E8(*(void *)v58, v76);
    LOBYTE(v78) = sub_1000FFC98(v82, v76);
    sub_10002485C(v82, v76);
    if (v78) {
      uint64_t v83 = static Color.enabledCardButtonFillColor.getter();
    }
    else {
      uint64_t v83 = static Color.disabledCardButtonFillColor.getter();
    }
    uint64_t v84 = v83;
    uint64_t v85 = v103;
    sub_10017B588(v38, v103);
    uint64_t v86 = v102;
    *(void *)(v85 + *(int *)(v102 + 52)) = v84;
    *(_WORD *)(v85 + *(int *)(v86 + 56)) = 256;
    sub_10017B5EC(v38, (uint64_t (*)(void))&type metadata accessor for Capsule);
    uint64_t v87 = v104;
    sub_10000C3A4(v85, v104, &qword_1002F8DC0);
    *(double *)(v87 + *(int *)(v101 + 36)) = v29;
    sub_10000B070(v85, &qword_1002F8DC0);
    uint64_t v88 = static Alignment.center.getter();
    uint64_t v90 = v89;
    uint64_t v91 = (uint64_t)v100;
    uint64_t v92 = (uint64_t)&v100[*(int *)(v99 + 36)];
    sub_10000C3A4(v87, v92, &qword_1002F8DC8);
    id v93 = (uint64_t *)(v92 + *(int *)(sub_100007620(&qword_1002F8E10) + 36));
    *id v93 = v88;
    v93[1] = v90;
    sub_10000C3A4(v40, v91, &qword_1002F8DF0);
    sub_10000B070(v87, &qword_1002F8DC8);
    sub_10000B070(v40, &qword_1002F8DF0);
    uint64_t v94 = v105;
    sub_10000C3A4(v91, v105, &qword_1002F8DF8);
    *(double *)(v94 + *(int *)(sub_100007620(&qword_1002F8E18) + 36)) = v28;
    return sub_10000B070(v91, &qword_1002F8DF8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10017A920()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_10017A944(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_10017AA10(uint64_t a1, uint64_t a2)
{
  uint64_t ActionButtonStyle = type metadata accessor for NextActionButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ActionButtonStyle - 8) + 32))(a2, a1, ActionButtonStyle);
  return a2;
}

unint64_t sub_10017AA74()
{
  unint64_t result = qword_1002F8D10;
  if (!qword_1002F8D10)
  {
    sub_100007928(&qword_1002F8D00);
    sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
    sub_10017B488((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8D10);
  }
  return result;
}

unint64_t sub_10017AB44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_1000247E8(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_100007620((uint64_t *)&unk_1002F57A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10017AC84(uint64_t a1, uint64_t a2)
{
  sub_10002485C(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100007620((uint64_t *)&unk_1002F57A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10017AD40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_100007620((uint64_t *)&unk_1002F57A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    void *v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10017AE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10002485C(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10000B070(a1 + v10, (uint64_t *)&unk_1002F57A0);
    sub_100007620((uint64_t *)&unk_1002F57A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10017AF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F57A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10017B010(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10002485C(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_10000B070(a1 + v10, (uint64_t *)&unk_1002F57A0);
    uint64_t v13 = sub_100007620((uint64_t *)&unk_1002F57A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10017B118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017B12C);
}

uint64_t sub_10017B12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F8D20);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017B1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017B1EC);
}

uint64_t sub_10017B1EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F8D20);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10017B294()
{
  sub_10017B32C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10017B32C()
{
  if (!qword_1002F8D90)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F8D90);
    }
  }
}

uint64_t sub_10017B384()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017B464()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10017B488(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10017B4D0()
{
  unint64_t result = qword_1002F8E08;
  if (!qword_1002F8E08)
  {
    sub_100007928(&qword_1002F8DD8);
    sub_100007928(&qword_1002EFF10);
    sub_100026894();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8E08);
  }
  return result;
}

uint64_t sub_10017B588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017B5EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10017B64C()
{
  return sub_10017B690(&qword_1002F8E20, &qword_1002F8E18, (void (*)(void))sub_10017B70C);
}

uint64_t sub_10017B690(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10017B70C()
{
  unint64_t result = qword_1002F8E28;
  if (!qword_1002F8E28)
  {
    sub_100007928(&qword_1002F8DF8);
    sub_10017B7AC();
    sub_100014894(&qword_1002F8E38, &qword_1002F8E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8E28);
  }
  return result;
}

unint64_t sub_10017B7AC()
{
  unint64_t result = qword_1002F8E30;
  if (!qword_1002F8E30)
  {
    sub_100007928(&qword_1002F8DF0);
    sub_100007928(&qword_1002F8DE0);
    sub_100007928(&qword_1002EFF08);
    sub_10017B690(&qword_1002F8E00, &qword_1002F8DE0, (void (*)(void))sub_10017B4D0);
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8E30);
  }
  return result;
}

id sub_10017B8FC(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)NSTextEncapsulation) init];
  [v3 setStyle:1];
  [v3 setColor:a1];
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100247140;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v5 = self;
  uint64_t v6 = NSForegroundColorAttributeName;
  id v7 = [v5 clearColor];
  uint64_t v8 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  *(void *)(inited + 40) = v7;
  uint64_t v9 = NSTextEncapsulationAttributeName;
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 104) = sub_10000B0CC(0, &qword_1002F8E40);
  *(void *)(inited + 80) = v3;
  id v10 = v9;
  id v11 = v3;
  sub_1001FF520(inited);
  id v12 = [v1 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v13 = objc_allocWithZone((Class)NSAttributedString);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100136748();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v13 initWithString:v14 attributes:isa];

  return v16;
}

unsigned char *storeEnumTagSinglePayload for TranslationOfflineAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10017BBC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslationOfflineAvailability()
{
  return &type metadata for TranslationOfflineAvailability;
}

unint64_t sub_10017BC04()
{
  unint64_t result = qword_1002F8E48;
  if (!qword_1002F8E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8E48);
  }
  return result;
}

uint64_t sub_10017BC58@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for LanguageState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v88 - v11;
  uint64_t v112 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v112 - 8);
  uint64_t v14 = __chkstk_darwin(v112);
  uint64_t v98 = (char *)v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v88 - v16;
  uint64_t v113 = type metadata accessor for LanguageModel();
  uint64_t v18 = __chkstk_darwin(v113);
  uint64_t v97 = (char *)v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)v88 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  __chkstk_darwin(v25);
  uint64_t result = *a1;
  uint64_t v32 = *(void *)(*a1 + 16);
  if (!v32)
  {
LABEL_24:
    char v87 = 0;
    goto LABEL_25;
  }
  uint64_t v96 = v26;
  uint64_t v93 = v30;
  uint64_t v94 = v28;
  uint64_t v104 = v7;
  uint64_t v105 = (char *)v88 - v27;
  uint64_t v99 = v12;
  uint64_t v100 = v10;
  uint64_t v101 = v6;
  uint64_t v102 = a3;
  uint64_t v33 = *a2;
  uint64_t v103 = v29;
  char v35 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
  uint64_t v34 = v29 + 16;
  unint64_t v36 = result + ((*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64));
  uint64_t v37 = *(void *)(v34 + 56);
  uint64_t v106 = result;
  uint64_t v107 = v37;
  uint64_t v38 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v110 = v34;
  id v111 = v33;
  uint64_t v108 = (void (**)(char *, uint64_t))(v34 - 8);
  uint64_t v109 = v35;
  swift_bridgeObjectRetain();
  unint64_t v95 = v36;
  uint64_t v39 = v113;
  while (1)
  {
    v109(v24, v36, v39);
    uint64_t v40 = LanguageModel.id.getter();
    uint64_t v42 = v41;
    id v43 = [v111 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = Locale.ltIdentifier.getter();
    uint64_t v46 = v45;
    uint64_t v47 = *v38;
    (*v38)(v17, v112);
    if (v40 == v44 && v42 == v46) {
      break;
    }
    char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48) {
      goto LABEL_9;
    }
    uint64_t v39 = v113;
    (*v108)(v24, v113);
    v36 += v107;
    if (!--v32)
    {
      uint64_t result = swift_bridgeObjectRelease();
LABEL_18:
      a3 = v102;
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v49 = v113;
  swift_bridgeObjectRelease();
  uint64_t v51 = v103 + 32;
  uint64_t v50 = *(char **)(v103 + 32);
  uint64_t v52 = v96;
  ((void (*)(char *, char *, uint64_t))v50)(v96, v24, v49);
  uint64_t v96 = v50;
  ((void (*)(char *, char *, uint64_t))v50)(v105, v52, v49);
  Swift::String v53 = v99;
  LanguageModel.state.getter();
  uint64_t v54 = v104;
  uint64_t v56 = v104 + 104;
  char v55 = *(void (**)(void))(v104 + 104);
  Class v57 = v100;
  unsigned int v92 = enum case for LanguageState.installed(_:);
  uint64_t v58 = v101;
  uint64_t v91 = (void (*)(char *, void, uint64_t))v55;
  v55(v100);
  LOBYTE(v52) = static LanguageState.== infix(_:_:)();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v59 = v54 + 8;
  uint64_t v60 = v61;
  v61(v57, v58);
  v61(v53, v58);
  if ((v52 & 1) == 0)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v108)(v105, v113);
    goto LABEL_18;
  }
  uint64_t v90 = v56;
  uint64_t v103 = v51;
  uint64_t v104 = v59;
  uint64_t v62 = *(void *)(v106 + 16);
  if (!v62)
  {
    uint64_t v75 = *v108;
    a3 = v102;
    uint64_t v76 = v113;
    uint64_t v77 = v105;
LABEL_20:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v75)(v77, v76);
    goto LABEL_24;
  }
  uint64_t v89 = v60;
  swift_bridgeObjectRetain();
  v88[1] = (unint64_t)v108 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v64 = v97;
  uint64_t v63 = v98;
  unint64_t v65 = v95;
  while (1)
  {
    unint64_t v66 = v65;
    ((void (*)(char *))v109)(v64);
    uint64_t v67 = LanguageModel.id.getter();
    uint64_t v69 = v68;
    id v70 = [v111 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v71 = Locale.ltIdentifier.getter();
    uint64_t v73 = v72;
    v47(v63, v112);
    if (v67 == v71 && v69 == v73) {
      break;
    }
    char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v74) {
      goto LABEL_22;
    }
    uint64_t v75 = *v108;
    uint64_t v76 = v113;
    (*v108)(v64, v113);
    unint64_t v65 = v66 + v107;
    if (!--v62)
    {
      swift_bridgeObjectRelease();
      a3 = v102;
      uint64_t v77 = v105;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v78 = v93;
  uint64_t v79 = v113;
  uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))v96;
  ((void (*)(uint64_t, char *, uint64_t))v96)(v93, v64, v113);
  uint64_t v81 = v94;
  v80(v94, v78, v79);
  uint64_t v82 = v99;
  LanguageModel.state.getter();
  uint64_t v84 = v100;
  uint64_t v83 = v101;
  v91(v100, v92, v101);
  LOBYTE(v78) = static LanguageState.== infix(_:_:)();
  uint64_t v85 = v89;
  v89(v84, v83);
  v85(v82, v83);
  uint64_t v86 = *v108;
  (*v108)(v81, v79);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v86)(v105, v79);
  a3 = v102;
  if ((v78 & 1) == 0) {
    goto LABEL_24;
  }
  char v87 = 1;
LABEL_25:
  *a3 = v87;
  return result;
}

unsigned char *sub_10017C40C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X2>, char *a4@<X8>)
{
  if (*a2 & 1 | ((*result & 1) == 0)) {
    char v4 = *a3 & ~*a2 & 1;
  }
  else {
    char v4 = 2;
  }
  *a4 = v4;
  return result;
}

void sub_10017C43C(void *a1@<X8>)
{
  id v2 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v4 = Locale._bridgeToObjectiveC()().super.isa;
  id v5 = [v2 initWithSourceLocale:isa targetLocale:v4];

  *a1 = v5;
}

uint64_t sub_10017C4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  uint64_t v6 = sub_100007620(&qword_1002F8E60);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  uint64_t v20 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F8E68);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  sub_100007620(&qword_1002F45F0);
  sub_100007620(&qword_1002F8E70);
  sub_100014894(&qword_1002F45F8, &qword_1002F45F0);
  sub_100014894(&qword_1002F8E78, &qword_1002F8E70);
  Publisher.combineLatest<A, B>(_:_:)();
  uint64_t v21 = v17;
  uint64_t v22 = v18;
  sub_100007620(&qword_1002F2C60);
  sub_100014894(&qword_1002F2C68, &qword_1002F2C60);
  sub_100014894(&qword_1002F8E80, &qword_1002F8E68);
  Publisher.combineLatest<A, B, C>(_:_:_:)();
  sub_100014894(&qword_1002F8E88, &qword_1002F8E60);
  uint64_t v14 = v19;
  uint64_t v15 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v14);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

uint64_t sub_10017C7CC(uint64_t a1, uint64_t a2)
{
  return sub_10017C81C(a1, a2, (uint64_t)&OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__deviceOwnerLocale, (uint64_t)&OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__partnerLocale, (uint64_t)sub_10017C438);
}

uint64_t sub_10017C7F4(uint64_t a1, uint64_t a2)
{
  return sub_10017C81C(a1, a2, (uint64_t)&OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__sourceLocale, (uint64_t)&OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__targetLocale, (uint64_t)sub_10017C438);
}

uint64_t sub_10017C81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a5;
  uint64_t v38 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v5 = sub_100007620(&qword_1002F20C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  uint64_t v45 = v6;
  __chkstk_darwin(v5);
  id v43 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002FAED0);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v34 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v13 = sub_100007620(&qword_1002F8E50);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  __chkstk_darwin(v13);
  uint64_t v33 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F2128);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_100007620((uint64_t *)&unk_1002FCB50);
  Published.projectedValue.getter();
  swift_endAccess();
  v32[1] = &protocol conformance descriptor for Published<A>.Publisher;
  sub_100014894(&qword_1002F2170, &qword_1002F2128);
  uint64_t v37 = Publisher.eraseToAnyPublisher()();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v17 + 8);
  v20(v19, v16);
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v21 = Publisher.eraseToAnyPublisher()();
  v20(v19, v16);
  swift_beginAccess();
  sub_100007620(&qword_1002F34A0);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v22 = v34;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10017CD90();
  sub_100014894(&qword_1002F31D8, &qword_1002FAED0);
  uint64_t v23 = v33;
  Publisher.combineLatest<A, B>(_:_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v41 + 8);
  v24(v22, v8);
  v24(v12, v8);
  sub_100014894(&qword_1002F8E58, &qword_1002F8E50);
  uint64_t v25 = v39;
  uint64_t v26 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v25);
  swift_retain();
  uint64_t v27 = v43;
  LanguagesService.$models.getter();
  swift_release();
  sub_100014894(&qword_1002F45E8, &qword_1002F20C0);
  uint64_t v28 = v44;
  uint64_t v29 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v28);
  uint64_t v30 = sub_10017C4C0(v37, v21, v26, v29);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v30;
}

unint64_t sub_10017CD90()
{
  unint64_t result = qword_1002F9760;
  if (!qword_1002F9760)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F9760);
  }
  return result;
}

id sub_10017CDD0(char a1)
{
  uint64_t v3 = type metadata accessor for TranslationTaskHint();
  __chkstk_darwin(v3);
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_languagesService;
  (*(void (**)(char *, void))(v6 + 104))((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for TranslationTaskHint.speech(_:));
  type metadata accessor for LanguagesService();
  swift_allocObject();
  uint64_t v7 = v1;
  *(void *)&v1[v5] = LanguagesService.init(task:)();
  *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController____lazy_storage___onBoardingController] = 0;
  *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_oBDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_whatsNew] = a1;

  uint64_t v8 = (objc_class *)type metadata accessor for OnBoardingController();
  v11.receiver = v7;
  v11.super_class = v8;
  [super initWithNibName:0 bundle:0];
  [v9 setModalPresentationStyle:2];
  return v9;
}

id sub_10017D0B0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController____lazy_storage___onBoardingController;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController____lazy_storage___onBoardingController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController____lazy_storage___onBoardingController);
  }
  else
  {
    id v4 = sub_10017D114(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10017D114(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_whatsNew);
  id v6 = [self mainBundle];
  if (v5 == 1)
  {
    unint64_t v7 = 0xD000000000000010;
    unint64_t v117 = 0x8000000100260E70;
    unint64_t v8 = 0x454E5F5354414857;
    unint64_t v9 = 0xEF454C5449545F57;
  }
  else
  {
    unint64_t v7 = 0xD000000000000011;
    unint64_t v8 = 0xD000000000000012;
    unint64_t v117 = 0x8000000100260A60;
    unint64_t v9 = 0x8000000100260A40;
  }
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v8, (Swift::String_optional)0, (NSBundle)v6, v10, *(Swift::String *)&v7);

  id v11 = objc_allocWithZone((Class)OBWelcomeController);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithTitle:v12 detailText:0 icon:0];

  uint64_t v123 = a1;
  id v124 = v13;
  if (v5)
  {
    id v122 = v4;
    uint64_t v14 = self;
    id v15 = [v14 mainBundle];
    v129._object = (void *)0x8000000100260C90;
    v16._object = (void *)0x8000000100260C70;
    v16._countAndFlagsBits = 0xD000000000000016;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v129._countAndFlagsBits = 0xD000000000000024;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v129);

    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [v14 mainBundle];
    v130._object = (void *)0x8000000100260CE0;
    v20._object = (void *)0x8000000100260CC0;
    v20._countAndFlagsBits = 0xD00000000000001BLL;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v130._countAndFlagsBits = 0xD00000000000002CLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v130);

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    uint64_t v24 = self;
    id v25 = [v24 _systemImageNamed:v23];

    if (!v25) {
      id v25 = [objc_allocWithZone((Class)UIImage) init];
    }
    [v124 addBulletedListItemWithTitle:v18 description:v22 image:v25];

    id v26 = [v14 mainBundle];
    v131._object = (void *)0x8000000100260D50;
    v27._object = (void *)0x8000000100260D30;
    v27._countAndFlagsBits = 0xD000000000000016;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v131._countAndFlagsBits = 0xD000000000000024;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v131);

    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [v14 mainBundle];
    v132._object = (void *)0x8000000100260DA0;
    v31._object = (void *)0x8000000100260D80;
    v31._countAndFlagsBits = 0xD00000000000001BLL;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v132._countAndFlagsBits = 0xD00000000000002CLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v132);

    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    id v121 = v24;
    id v35 = [v24 _systemImageNamed:v34];

    if (!v35) {
      id v35 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v36 = v124;
    [v124 addBulletedListItemWithTitle:v29 description:v33 image:v35];

    id v37 = [v14 mainBundle];
    v133._countAndFlagsBits = 0xD000000000000024;
    v133._object = (void *)0x8000000100260DF0;
    v38._object = (void *)0x8000000100260DD0;
    v38._countAndFlagsBits = 0xD000000000000016;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v133);

    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = [v14 mainBundle];
    v42._countAndFlagsBits = 0xD00000000000001BLL;
    v134._countAndFlagsBits = 0xD00000000000002CLL;
    v134._object = (void *)0x8000000100260E40;
    v42._object = (void *)0x8000000100260E20;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v134);

    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v45 = v122;
    Locale.init(identifier:)();
    uint64_t v46 = type metadata accessor for Locale();
    uint64_t v47 = *(void *)(v46 - 8);
    (*(void (**)(id, void, uint64_t, uint64_t))(v47 + 56))(v45, 0, 1, v46);
    Class isa = 0;
    if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46) != 1)
    {
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      (*(void (**)(id, uint64_t))(v47 + 8))(v45, v46);
    }
    id v49 = [self configurationWithLocale:isa];

    NSString v50 = String._bridgeToObjectiveC()();
    id v51 = [v121 systemImageNamed:v50 withConfiguration:v49];

    if (!v51) {
      id v51 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  else
  {
    uint64_t v52 = self;
    id v53 = [v52 currentDevice];
    id v54 = [v53 userInterfaceIdiom];

    id v55 = [v52 currentDevice];
    uint64_t v56 = v55;
    if (v54 == (id)1)
    {
      NSString v57 = String._bridgeToObjectiveC()();
      int v58 = MGGetSInt32Answer();

      if (v58) {
        uint64_t v59 = 1684107369;
      }
      else {
        uint64_t v59 = 0x6D6F682E64617069;
      }
      unint64_t v60 = 0xE400000000000000;
      if (!v58) {
        unint64_t v60 = 0xEF6E6F7474756265;
      }
      unint64_t v120 = v60;
      id v121 = (id)v59;
      id v122 = (id)0xD000000000000015;
      v119._countAndFlagsBits = 0xD000000000000016;
      v119._object = (void *)0x8000000100260C50;
    }
    else
    {
      id v61 = [v55 model];

      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;

      uint64_t v127 = v62;
      uint64_t v128 = v64;
      uint64_t v125 = 0x656E6F685069;
      unint64_t v126 = 0xE600000000000000;
      sub_10000C350();
      LOBYTE(v62) = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v62)
      {
        id v65 = [v52 currentDevice];
        NSString v66 = String._bridgeToObjectiveC()();
        int v67 = MGGetSInt32Answer();

        if (v67) {
          unint64_t v68 = 0x656E6F687069;
        }
        else {
          unint64_t v68 = 0xD000000000000011;
        }
        unint64_t v69 = 0x8000000100260C30;
        if (v67) {
          unint64_t v69 = 0xE600000000000000;
        }
        unint64_t v120 = v69;
        id v121 = (id)v68;
        id v122 = (id)0xD000000000000017;
        v119._countAndFlagsBits = 0xD000000000000018;
        v119._object = (void *)0x8000000100260BF0;
      }
      else
      {
        id v121 = 0;
        id v122 = 0;
        unint64_t v120 = 0xE000000000000000;
        v119._countAndFlagsBits = 0;
        v119._object = (void *)0xE000000000000000;
      }
    }
    id v70 = self;
    id v71 = [v70 mainBundle];
    v135._object = (void *)0x8000000100260A80;
    v72._countAndFlagsBits = 0x55544145465F424FLL;
    v72._object = (void *)0xEC000000315F4552;
    v73._countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    v135._countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v135);

    NSString v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v75 = [v70 mainBundle];
    v136._object = (void *)0x8000000100260AC0;
    v76._object = (void *)0x8000000100260AA0;
    v76._countAndFlagsBits = 0xD000000000000011;
    v77._countAndFlagsBits = 0;
    v77._object = (void *)0xE000000000000000;
    v136._countAndFlagsBits = 0xD000000000000021;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v76, (Swift::String_optional)0, (NSBundle)v75, v77, v136);

    NSString v78 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v79 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v80 = self;
    id v81 = [v80 _systemImageNamed:v79];

    if (!v81) {
      id v81 = [objc_allocWithZone((Class)UIImage) init];
    }
    [v124 addBulletedListItemWithTitle:v74 description:v78 image:v81];

    id v82 = [v70 mainBundle];
    v137._object = (void *)0x8000000100260AF0;
    v83._countAndFlagsBits = 0x55544145465F424FLL;
    v83._object = (void *)0xEC000000325F4552;
    v84._countAndFlagsBits = 0;
    v84._object = (void *)0xE000000000000000;
    v137._countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v83, (Swift::String_optional)0, (NSBundle)v82, v84, v137);

    NSString v85 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v86 = [v70 mainBundle];
    v138._object = (void *)0x8000000100260B30;
    v87._object = (void *)0x8000000100260B10;
    v87._countAndFlagsBits = 0xD000000000000011;
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    v138._countAndFlagsBits = 0xD000000000000021;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v138);

    NSString v89 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v90 = String._bridgeToObjectiveC()();
    id v91 = [v80 _systemImageNamed:v90];

    id v122 = v80;
    if (!v91) {
      id v91 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v36 = v124;
    [v124 addBulletedListItemWithTitle:v85 description:v89 image:v91];

    id v92 = [v70 mainBundle];
    v139._countAndFlagsBits = 0xD00000000000001BLL;
    v139._object = (void *)0x8000000100260B60;
    v93._countAndFlagsBits = 0x55544145465F424FLL;
    v93._object = (void *)0xEC000000335F4552;
    v94._countAndFlagsBits = 0;
    v94._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v93, (Swift::String_optional)0, (NSBundle)v92, v94, v139);

    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v95 = [v70 mainBundle];
    v140._countAndFlagsBits = 0xD000000000000021;
    v140._object = (void *)0x8000000100260B80;
    v96._countAndFlagsBits = 0;
    v96._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v119, (Swift::String_optional)0, (NSBundle)v95, v96, v140);
    swift_bridgeObjectRelease();

    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v97 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v51 = [v122 systemImageNamed:v97];

    if (!v51) {
      id v51 = [objc_allocWithZone((Class)UIImage) init];
    }
  }
  [v36 addBulletedListItemWithTitle:v40 description:v44 image:v51];

  id v98 = [v36 buttonTray];
  Class v99 = Array._bridgeToObjectiveC()().super.isa;
  [v98 setPrivacyLinkForBundles:v99];

  id v100 = [self boldButton];
  [v100 addTarget:v123 action:"continueButtonPressed" forControlEvents:0x2000];
  id v101 = [self mainBundle];
  v141._countAndFlagsBits = 0xD000000000000015;
  v141._object = (void *)0x8000000100260BB0;
  v102._countAndFlagsBits = 0x49544E4F435F424FLL;
  v102._object = (void *)0xEB0000000045554ELL;
  v103._countAndFlagsBits = 0;
  v103._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v101, v103, v141);

  NSString v104 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v100 setTitle:v104 forState:0];

  uint64_t v105 = self;
  id v106 = [v105 whiteColor];
  [v100 setTitleColor:v106 forState:0];

  id v107 = v100;
  NSString v108 = String._bridgeToObjectiveC()();
  id v109 = [v105 colorNamed:v108];

  [v107 setTintColor:v109];
  [v107 setRole:1];
  id v110 = v107;
  NSString v111 = String._bridgeToObjectiveC()();
  [v110 setAccessibilityIdentifier:v111];

  id v112 = [v36 buttonTray];
  [v112 addButton:v110];

  [v36 setModalInPresentation:1];
  id result = [v36 view];
  if (result)
  {
    id v114 = result;
    NSString v115 = String._bridgeToObjectiveC()();
    id v116 = [v105 colorNamed:v115];

    [v114 setTintColor:v116];
    return v36;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10017E510()
{
  id v1 = [v0 viewControllers];
  sub_10000B0CC(0, (unint64_t *)&unk_1002F96C0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1)
  {
    if ((*((unsigned char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_whatsNew) & 1) == 0) {
      sub_10017E714();
    }
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1001806A8(v0);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10017E714()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v50 - v5;
  uint64_t v59 = type metadata accessor for LocalePair();
  uint64_t v7 = *(void *)(v59 - 8);
  uint64_t v8 = __chkstk_darwin(v59);
  int v58 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)&v50 - v11;
  __chkstk_darwin(v10);
  id v13 = (char *)&v50 - v12;
  static Locale.preferredLanguages.getter();
  LanguagesService.models.getter();
  Array<A>.defaultPair(userLanguages:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = Strong;
    LocalePair.sourceLocale.getter();
    LocalePair.targetLocale.getter();
    id v16 = objc_allocWithZone((Class)_LTLocalePair);
    Swift::String v17 = v6;
    uint64_t v18 = v1;
    uint64_t v19 = v7;
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v21 = Locale._bridgeToObjectiveC()().super.isa;
    id v22 = [v16 initWithSourceLocale:isa targetLocale:v21];

    uint64_t v7 = v19;
    uint64_t v1 = v18;
    id v6 = v17;

    NSString v23 = *(void **)(v15 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_initialLocalePair);
    *(void *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_initialLocalePair) = v22;
    swift_unknownObjectRelease();

    uint64_t v24 = *(void (**)(char *, uint64_t))(v1 + 8);
    v24(v4, v0);
    v24(v17, v0);
  }
  uint64_t v25 = v1;
  uint64_t v55 = v0;
  if (qword_1002EE610 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100011554(v26, (uint64_t)qword_10030EA38);
  Swift::String v27 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  Swift::String v28 = v56;
  uint64_t v29 = v59;
  v27(v56, v13, v59);
  id v30 = v58;
  NSString v57 = v13;
  v27(v58, v13, v29);
  Swift::String v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    uint64_t v61 = v54;
    *(_DWORD *)uint64_t v34 = 136446466;
    int v53 = v33;
    LocalePair.sourceLocale.getter();
    uint64_t v35 = Locale.identifier.getter();
    unint64_t v37 = v36;
    id v51 = *(void (**)(char *, uint64_t))(v25 + 8);
    os_log_t v52 = v31;
    uint64_t v38 = v55;
    v51(v6, v55);
    uint64_t v60 = sub_100202FD4(v35, v37, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    NSString v50 = *(void (**)(char *, uint64_t))(v7 + 8);
    v50(v28, v59);
    *(_WORD *)(v34 + 12) = 2082;
    Swift::String v39 = v58;
    LocalePair.targetLocale.getter();
    uint64_t v40 = Locale.identifier.getter();
    unint64_t v42 = v41;
    v51(v6, v38);
    uint64_t v60 = sub_100202FD4(v40, v42, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    Swift::String v43 = v39;
    uint64_t v44 = v59;
    id v45 = (uint64_t (*)(char *, uint64_t))v50;
    v50(v43, v59);
    os_log_t v46 = v52;
    _os_log_impl((void *)&_mh_execute_header, v52, (os_log_type_t)v53, "Default app locale pair: %{public}s -> %{public}s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return v45(v57, v44);
  }
  else
  {

    char v48 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v49 = v59;
    v48(v30, v59);
    v48(v28, v49);
    return ((uint64_t (*)(char *, uint64_t))v48)(v57, v49);
  }
}

id sub_10017ED40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnBoardingController();
  return [super dealloc];
}

uint64_t type metadata accessor for OnBoardingController()
{
  return self;
}

const char *sub_10017EDF4()
{
  return "Siri";
}

const char *sub_10017EE08()
{
  return "siri_data_sharing_reprompt";
}

void sub_10017EE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8FC8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_settingsConnection);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_100180CE0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017F040;
  aBlock[3] = &unk_1002D0DD0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [v7 getSiriDataSharingOptInStatusWithCompletion:v10];
  _Block_release(v10);
}

uint64_t sub_10017EFD0(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_100007620(&qword_1002F8FC8);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_100007620(&qword_1002F8FC8);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_10017F040(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10017F0B8()
{
  v1[9] = v0;
  type metadata accessor for MainActor();
  v1[10] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[11] = v3;
  v1[12] = v2;
  return _swift_task_switch(sub_10017F150, v3, v2);
}

uint64_t sub_10017F150()
{
  id v1 = [self sharedApplication];
  unsigned int v2 = [v1 launchedToTest];

  if (v2)
  {
    swift_release();
    if (qword_1002EE610 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030EA38);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_7;
    }
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    uint64_t v7 = "Ignoring onboarding UI since app is running in a test";
LABEL_6:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc();
LABEL_7:

    unint64_t v8 = 0;
LABEL_25:
    Swift::String v28 = (uint64_t (*)(char *))v0[1];
    return v28(v8);
  }
  uint64_t v9 = self;
  id v10 = [v9 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  unsigned __int8 v12 = [v10 BOOLForKey:v11];

  if ((v12 & 1) == 0)
  {
    swift_release();
    if (qword_1002EE610 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100011554(v17, (uint64_t)qword_10030EA38);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      Swift::String v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Showing onboarding controller", v20, 2u);
      swift_slowDealloc();
    }

    id v21 = objc_allocWithZone((Class)type metadata accessor for OnBoardingController());
    char v22 = 0;
    goto LABEL_24;
  }
  id v13 = [v9 standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned __int8 v15 = [v13 BOOLForKey:v14];

  if ((v15 & 1) == 0)
  {
    swift_release();
    if (qword_1002EE610 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100011554(v23, (uint64_t)qword_10030EA38);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Showing what's new controller", v26, 2u);
      swift_slowDealloc();
    }

    id v27 = objc_allocWithZone((Class)type metadata accessor for OnBoardingController());
    char v22 = 1;
LABEL_24:
    unint64_t v8 = (char *)sub_10017CDD0(v22);
    *(void *)&v8[OBJC_IVAR____TtC17SequoiaTranslator20OnBoardingController_oBDelegate + 8] = &off_1002D0D90;
    swift_unknownObjectWeakAssign();
    goto LABEL_25;
  }
  v0[5] = &type metadata for AssistantFeatures;
  v0[6] = sub_100180BF0();
  char v16 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)(v0 + 2));
  if ((v16 & 1) == 0)
  {
    swift_release();
    if (qword_1002EE610 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100011554(v29, (uint64_t)qword_10030EA38);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_7;
    }
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    uint64_t v7 = "Ignoring Siri Data Sharing onboarding UI since Siri data sharing prompt isn't available";
    goto LABEL_6;
  }
  return _swift_task_switch(sub_10017F670, 0, 0);
}

uint64_t sub_10017F670()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = swift_task_alloc();
  v0[13] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[14] = v3;
  uint64_t v4 = sub_100007620(&qword_1002F8FC0);
  *uint64_t v3 = v0;
  v3[1] = sub_10017F774;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000011, 0x8000000100261040, sub_100180C44, v2, v4);
}

uint64_t sub_10017F774()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v1 = sub_10017FA30;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v1 = sub_10017F8BC;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10017F8BC()
{
  *(void *)(v0 + 120) = *(void *)(v0 + 56);
  *(unsigned char *)(v0 + 65) = *(unsigned char *)(v0 + 64);
  return _swift_task_switch(sub_10017F8E4, *(void *)(v0 + 88), *(void *)(v0 + 96));
}

id sub_10017F8E4()
{
  char v1 = *(unsigned char *)(v0 + 65);
  swift_release();
  if ((v1 & 1) != 0
    || (uint64_t v2 = *(void *)(v0 + 120),
        (*(void *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_optInStatus) = v2) != 0))
  {
    id v3 = 0;
  }
  else
  {
    uint64_t v6 = *(void **)(*(void *)(v0 + 72) + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_dataSharingPresenter);
    [v6 setPresentationDelegate:];
    id v3 = [v6 dataSharingOptInTextWelcomeControllerForViewStyle:2];
    id result = [v3 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = result;
    sub_100055020();
    unint64_t v8 = (void *)static UIColor.translateAccentColor.getter();
    [v7 setTintColor:v8];

    [v3 setModalPresentationStyle:2];
    [v3 setModalInPresentation:1];
  }
  uint64_t v4 = *(uint64_t (**)(id))(v0 + 8);
  return (id)v4(v3);
}

uint64_t sub_10017FA30()
{
  return _swift_task_switch(sub_10017FA48, *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_10017FA48()
{
  swift_release();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_10017FAAC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for MainActor();
  v2[5] = static MainActor.shared.getter();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[6] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10017FB5C;
  return sub_10017F0B8();
}

uint64_t sub_10017FB5C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  v2[7] = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_10017FCA8, v4, v3);
}

uint64_t sub_10017FCA8()
{
  uint64_t v1 = v0[7];
  if (v1)
  {
    if (qword_1002EE610 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100011554(v2, (uint64_t)qword_10030EA38);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Presenting onboarding UI", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[3];
    uint64_t v7 = (void *)v0[2];

    [v7 presentViewController:v1 animated:1 completion:0];
    uint64_t v8 = static MainActor.shared.getter();
    v0[10] = v8;
    uint64_t v9 = swift_task_alloc();
    v0[11] = v9;
    *(void *)(v9 + 16) = v6;
    id v10 = (void *)swift_task_alloc();
    v0[12] = v10;
    *id v10 = v0;
    v10[1] = sub_10017FED0;
    return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000014, 0x8000000100261000, sub_100180B80, v9, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    NSString v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_10017FED0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100180030, v3, v2);
}

uint64_t sub_100180030()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  [v1 dismissViewControllerAnimated:1 completion:0];
  uint64_t v2 = self;
  id v3 = [v2 standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  unsigned __int8 v5 = [v3 BOOLForKey:v4];

  if ((v5 & 1) == 0)
  {
    id v6 = [v2 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 setBool:1 forKey:v7];
  }
  id v8 = [v2 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  unsigned __int8 v10 = [v8 BOOLForKey:v9];

  NSString v11 = (void *)v0[7];
  if ((v10 & 1) == 0)
  {
    id v12 = [v2 standardUserDefaults];
    NSString v13 = String._bridgeToObjectiveC()();
    [v12 setBool:1 forKey:v13];
  }
  NSString v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100180238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8FB0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F8F48);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_presentationContinuation;
  swift_beginAccess();
  sub_100180B88((uint64_t)v6, v9);
  return swift_endAccess();
}

id sub_10018036C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_settingsConnection;
  id v2 = objc_allocWithZone((Class)AFSettingsConnection);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_dataSharingPresenter;
  *(void *)&v3[v4] = [objc_allocWithZone((Class)VTUISiriDataSharingOptInPresenter) init];
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_optInStatus] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_initialLocalePair] = 0;
  uint64_t v5 = &v3[OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_presentationContinuation];
  uint64_t v6 = sub_100007620(&qword_1002F8F48);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for OnBoardingPresenter();
  return [super init];
}

id sub_10018049C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnBoardingPresenter();
  return [super dealloc];
}

uint64_t sub_100180540()
{
  return type metadata accessor for OnBoardingPresenter();
}

uint64_t type metadata accessor for OnBoardingPresenter()
{
  uint64_t result = qword_1002F8F20;
  if (!qword_1002F8F20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100180594()
{
  sub_10018064C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10018064C()
{
  if (!qword_1002F8F40)
  {
    sub_100007928(&qword_1002F8F48);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F8F40);
    }
  }
}

void sub_1001806A8(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_dataSharingPresenter);
  if (([v3 shouldShowSiriDataSharingOptInView] & 1) != 0
    || *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_optInStatus) != 1)
  {
    [v3 setPresentationDelegate:v1];
    id v12 = (char *)[v3 dataSharingOptInTextWelcomeControllerForViewStyle:2];
    id v9 = [v12 view];
    if (!v9)
    {
      __break(1u);
      return;
    }
    unsigned __int8 v10 = v9;
    sub_100055020();
    uint64_t v11 = (void *)static UIColor.translateAccentColor.getter();
    [v10 setTintColor:v11];
  }
  else
  {
    id v4 = [self mainBundle];
    v14._object = (void *)0x8000000100261080;
    v5._countAndFlagsBits = 0x5F45564F52504D49;
    v5._object = (void *)0xED00004543494F56;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v14._countAndFlagsBits = 0xD00000000000002FLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v14);

    id v7 = objc_allocWithZone((Class)type metadata accessor for TempOptInReprompt());
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = (char *)[v7 initWithTitle:v8];

    *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator17TempOptInReprompt_delegate + 8] = &off_1002D0D80;
    swift_unknownObjectWeakAssign();
  }
  [a1 pushViewController:v12 animated:1];
}

uint64_t sub_100180918()
{
  uint64_t v1 = sub_100007620(&qword_1002F8F48);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F8FB0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_presentationContinuation;
  swift_beginAccess();
  sub_100180AB8(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1)) {
    return sub_100180B20((uint64_t)v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_100180B20((uint64_t)v7);
  CheckedContinuation.resume(returning:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100180AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8FB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100180B20(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8FB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100180B80(uint64_t a1)
{
  return sub_100180238(a1, *(void *)(v1 + 16));
}

uint64_t sub_100180B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8FB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100180BF0()
{
  unint64_t result = qword_1002F8FB8;
  if (!qword_1002F8FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8FB8);
  }
  return result;
}

void sub_100180C44(uint64_t a1)
{
  sub_10017EE1C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100180C4C()
{
  uint64_t v1 = sub_100007620(&qword_1002F8FC8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100180CE0(uint64_t a1)
{
  sub_100007620(&qword_1002F8FC8);

  return sub_10017EFD0(a1);
}

uint64_t sub_100180D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100180D74()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for AssistantFeatures(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100180E18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AssistantFeatures()
{
  return &type metadata for AssistantFeatures;
}

unint64_t sub_100180E54()
{
  unint64_t result = qword_1002F8FD0[0];
  if (!qword_1002F8FD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1002F8FD0);
  }
  return result;
}

uint64_t sub_100180EA8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100180F0C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100180F20()
{
  return sub_1000694BC();
}

NSString sub_100180F34()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030EB60 = (uint64_t)result;
  return result;
}

void sub_100180F6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_100182170();
}

uint64_t sub_100180F94(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_100180FC8();

  return v2;
}

uint64_t sub_100180FC8()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  if (v2)
  {
    v9.receiver = v0;
    v9.super_class = (Class)type metadata accessor for OrientationLockedController();
    return (uint64_t)[super supportedInterfaceOrientations];
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v6 == 5) {
      return 2;
    }
    sub_10005477C(v5, v6);
    if (v6 != 2) {
      return 2;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v5) {
      return 2;
    }
    id v7 = &type metadata for TranslateFeatures;
    unint64_t v8 = sub_10000AB14();
    LOBYTE(v5) = 2;
    char v4 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v5);
    if (v4) {
      return 2;
    }
    else {
      return 26;
    }
  }
}

void sub_1001811D0(char a1)
{
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for OrientationLockedController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 view];
  if (v3)
  {
    char v4 = v3;
    [v3 frame];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    v14.origin.x = v6;
    v14.origin.y = v8;
    v14.size.width = v10;
    v14.size.height = v12;
    CGRectGetWidth(v14);
    sub_100181898();
  }
  else
  {
    __break(1u);
  }
}

void sub_1001812C8(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1001811D0(a3);
}

id sub_10018131C(uint64_t a1, double a2, double a3)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v10 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    char v10 = 0;
    swift_retain();
    static Published.subscript.setter();
    id v7 = [self mainScreen];
    [v7 bounds];

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
  }
  sub_100181898();
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for OrientationLockedController();
  return [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
}

void sub_10018160C(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  sub_10018131C(a5, a2, a3);
  swift_unknownObjectRelease();
}

void sub_10018168C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrientationLockedController();
  [super viewDidLayoutSubviews];
  id v1 = [self defaultCenter];
  if (qword_1002EE680 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10030EB60 object:0];

  sub_100181A8C();
}

void sub_100181788(void *a1)
{
  id v1 = a1;
  sub_10018168C();
}

void sub_1001817D0()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for OrientationLockedController();
  [super viewSafeAreaInsetsDidChange];
  sub_100181A8C();
}

void sub_100181850(void *a1)
{
  id v1 = a1;
  sub_1001817D0();
}

void sub_100181898()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 == (id)1)
  {
    id v2 = [self mainScreen];
    [v2 bounds];
    double v4 = v3;

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    if (v4 * 0.5 + -10.0 > v4 * 0.5 + 10.0)
    {
      __break(1u);
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.setter();
    }
  }
}

void sub_100181A8C()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 window];

    if (v3)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      [v3 safeAreaInsets];
      if (v11 != v7 || v12 != v4 || v13 != v5 || v14 != v6)
      {
        [v3 safeAreaInsets];
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.setter();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100181C28()
{
}

void sub_100181C58()
{
}

uint64_t sub_100181C88()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100181D84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrientationLockedController();
  [super dealloc];
}

uint64_t sub_100181E00()
{
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for OrientationLockedController()
{
  return sub_1000BA700();
}

uint64_t sub_100181F18@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100181F2C()
{
  return sub_1000694BC();
}

uint64_t sub_100181F40@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100181F54()
{
  return sub_1000694BC();
}

double sub_100181F68@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100181FE8()
{
  return static Published.subscript.setter();
}

double sub_100182064@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001820E4()
{
  return static Published.subscript.setter();
}

void sub_100182170()
{
  *(void *)((char *)v0 + *(void *)(qword_10030EB68 + (swift_isaMask & *v0) + 32)) = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100182228@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100182250()
{
  return sub_1000694BC();
}

uint64_t sub_100182278@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001822A0()
{
  return sub_1000694BC();
}

uint64_t sub_1001822E8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100182310()
{
  return sub_1000694BC();
}

id sub_100182338()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughTextTurn();
  return [super dealloc];
}

uint64_t type metadata accessor for PassthroughTextTurn()
{
  return self;
}

char *sub_100182390(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StoredTranslationResult();
  uint64_t v68 = *(void *)(v5 - 8);
  uint64_t v69 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  Swift::String v73 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int v67 = (char *)&v59 - v8;
  uint64_t v9 = type metadata accessor for SpeechResultOrigin();
  uint64_t v64 = *(char **)(v9 - 8);
  id v65 = (char *)v9;
  __chkstk_darwin(v9);
  uint64_t v60 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for StoredSpeechResult();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v11 = __chkstk_darwin(v61);
  id v70 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v14 = (char *)&v59 - v13;
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  os_log_type_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)&v59 - v20;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request] = a1;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options] = a2;
  char v22 = &v2[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_completion];
  *(void *)char v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = (objc_class *)type metadata accessor for ConversationTurn();
  v77.receiver = v2;
  v77.super_class = v23;
  id v24 = a1;
  id v25 = [super init];
  id v26 = [v24 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v63 = v24;
  id v27 = [v24 localePair];
  id v28 = [v27 sourceLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v16;
  uint64_t v29 = v16;
  uint64_t v30 = v59;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  id v71 = v21;
  uint64_t v72 = v15;
  uint64_t v62 = v31;
  v31(v19, v21, v15);
  (*((void (**)(char *, void, char *))v64 + 13))(v60, enum case for SpeechResultOrigin.text(_:), v65);
  os_log_type_t v32 = (char *)v25;
  id v65 = v19;
  StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
  int v33 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v64 = v14;
  uint64_t v34 = v14;
  uint64_t v35 = v61;
  v33(v70, v34, v61);
  unint64_t v36 = &v32[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech];
  swift_beginAccess();
  unint64_t v37 = *(void **)v36;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v36 = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v37 = sub_1002027B0(0, v37[2] + 1, 1, v37);
    *(void *)unint64_t v36 = v37;
  }
  unint64_t v40 = v37[2];
  unint64_t v39 = v37[3];
  if (v40 >= v39 >> 1)
  {
    unint64_t v37 = sub_1002027B0((void *)(v39 > 1), v40 + 1, 1, v37);
    *(void *)unint64_t v36 = v37;
  }
  uint64_t v75 = v35;
  uint64_t v76 = sub_1000ECE9C(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  unint64_t v41 = sub_100014830((uint64_t *)&v74);
  unint64_t v42 = v70;
  v33((char *)v41, v70, v35);
  v37[2] = v40 + 1;
  sub_100048DE4(&v74, (uint64_t)&v37[5 * v40 + 4]);
  swift_endAccess();
  Swift::String v43 = *(void (**)(char *, uint64_t))(v30 + 8);
  v43(v42, v35);

  v43(v64, v35);
  id v44 = [v63 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v62(v65, v71, v72);
  id v45 = v67;
  StoredTranslationResult.init(text:locale:isOffline:romanization:)();
  uint64_t v47 = v68;
  uint64_t v46 = v69;
  char v48 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v48(v73, v45, v69);
  uint64_t v49 = &v32[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation];
  swift_beginAccess();
  NSString v50 = *(void **)v49;
  id v51 = v32;
  char v52 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v49 = v50;
  if ((v52 & 1) == 0)
  {
    NSString v50 = sub_1002027C4(0, v50[2] + 1, 1, v50);
    *(void *)uint64_t v49 = v50;
  }
  unint64_t v54 = v50[2];
  unint64_t v53 = v50[3];
  if (v54 >= v53 >> 1)
  {
    NSString v50 = sub_1002027C4((void *)(v53 > 1), v54 + 1, 1, v50);
    *(void *)uint64_t v49 = v50;
  }
  uint64_t v75 = v46;
  uint64_t v76 = sub_1000ECE9C((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
  uint64_t v55 = sub_100014830((uint64_t *)&v74);
  uint64_t v56 = v73;
  v48((char *)v55, v73, v46);
  v50[2] = v54 + 1;
  sub_100048DE4(&v74, (uint64_t)&v50[5 * v54 + 4]);
  swift_endAccess();
  NSString v57 = *(void (**)(char *, uint64_t))(v47 + 8);
  v57(v56, v46);

  v57(v45, v46);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v71, v72);
  return v51;
}

id PlaceholderTextView.suppressPlaceholder.setter(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder;
  v1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] = a1;
  long long v3 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id result = [v1 text];
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v9 || (double v10 = 1.0, v1[v2] == 1)) {
      double v10 = 0.0;
    }
    return [v3 setAlpha:v10];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PlaceholderTextView.placeholder.getter()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void PlaceholderTextView.placeholder.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView);
  if (v5[1])
  {
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  [v6 setText:v7];
}

void (*PlaceholderTextView.placeholder.modify(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100182D70;
}

void sub_100182D70(void **a1, char a2)
{
  long long v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView);
    if (*(void *)(v4 + v3[4] + 8))
    {
      swift_bridgeObjectRetain();
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v6 = 0;
    }
    [v5 setText:v6];
  }

  free(v3);
}

void *PlaceholderTextView.placeholderColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void PlaceholderTextView.placeholderColor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  PlaceholderTextView.updatePlaceholderProperties()();
}

void (*PlaceholderTextView.placeholderColor.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100182F38;
}

void sub_100182F38(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    PlaceholderTextView.updatePlaceholderProperties()();
  }
}

id PlaceholderTextView.textChanged(notification:)()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id result = [v0 text];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    swift_bridgeObjectRelease();
    uint64_t v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0) {
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
    }
    if (v7 || (double v8 = 1.0, v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] == 1)) {
      double v8 = 0.0;
    }
    return [v1 setAlpha:v8];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void PlaceholderTextView.updatePlaceholderProperties()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id v2 = [v0 font];
  [v1 setFont:v2];

  [v1 setTextAlignment:[v0 textAlignment]];
  [v0 textContainerInset];
  [v1 setTextContainerInset:];
  id v3 = [v1 textContainer];
  id v4 = [v0 textContainer];
  Class isa = (Class)[v4 exclusionPaths];

  if (!isa)
  {
    sub_100184F10();
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v3 setExclusionPaths:isa];

  id v6 = [v1 textContainer];
  id v7 = [v0 textContainer];
  [v7 lineFragmentPadding];
  double v9 = v8;

  [v6 setLineFragmentPadding:v9];
  double v10 = (void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor];
  swift_beginAccess();
  uint64_t v11 = *v10;
  if (*v10)
  {
    id v12 = *v10;
  }
  else
  {
    id v12 = [self placeholderTextColor];
    uint64_t v11 = 0;
  }
  id v13 = v11;
  [v1 setTextColor:v12];
}

uint64_t PlaceholderTextView.text.getter()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for PlaceholderTextView();
  id v1 = [super text];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t type metadata accessor for PlaceholderTextView()
{
  return self;
}

id PlaceholderTextView.text.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super setText:v3];

  id v4 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id result = [v2 text];
  if (result)
  {
    id v6 = result;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;

    swift_bridgeObjectRelease();
    uint64_t v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v10 || (double v11 = 1.0, v2[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] == 1)) {
      double v11 = 0.0;
    }
    return [v4 setAlpha:v11];
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderTextView.attributedText.getter()
{
  return sub_100183670((SEL *)&selRef_attributedText);
}

void PlaceholderTextView.attributedText.setter(void *a1)
{
  sub_100184D14((uint64_t)a1);
}

id PlaceholderTextView.textColor.getter()
{
  return sub_100183670((SEL *)&selRef_textColor);
}

void PlaceholderTextView.textColor.setter(void *a1)
{
}

id sub_10018360C(void *a1, uint64_t a2, SEL *a3)
{
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for PlaceholderTextView();
  id v4 = [super *a3];

  return v4;
}

id PlaceholderTextView.font.getter()
{
  return sub_100183670((SEL *)&selRef_font);
}

id sub_100183670(SEL *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaceholderTextView();
  id v3 = [super a1];

  return v3;
}

void sub_1001836CC(void *a1, uint64_t a2, void *a3, const char **a4)
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for PlaceholderTextView();
  objc_super v6 = *a4;
  id v7 = a3;
  id v8 = v9.receiver;
  [super v6 v7];
  PlaceholderTextView.updatePlaceholderProperties()();
}

void PlaceholderTextView.font.setter(void *a1)
{
}

void sub_100183748(void *a1, SEL *a2)
{
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super a1];
  PlaceholderTextView.updatePlaceholderProperties()();
}

id PlaceholderTextView.textAlignment.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderTextView();
  return [super textAlignment];
}

void PlaceholderTextView.textAlignment.setter(uint64_t a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super setTextAlignment:a1];
  PlaceholderTextView.updatePlaceholderProperties()();
}

id PlaceholderTextView.textContainerInset.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderTextView();
  return [super textContainerInset];
}

void PlaceholderTextView.textContainerInset.setter(double a1, double a2, double a3, double a4)
{
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super setTextContainerInset:a1, a2, a3, a4];
  PlaceholderTextView.updatePlaceholderProperties()();
}

id PlaceholderTextView.intrinsicContentSize.getter()
{
  id result = [v0 text];
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    swift_bridgeObjectRelease();
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      v7.receiver = v0;
      v7.super_class = (Class)type metadata accessor for PlaceholderTextView();
      return [super intrinsicContentSize];
    }
    else
    {
      return [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] intrinsicContentSize];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderTextView.alignmentRectInsets.getter()
{
  id result = [v0 text];
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    swift_bridgeObjectRelease();
    uint64_t v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0) {
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      v7.receiver = v0;
      v7.super_class = (Class)type metadata accessor for PlaceholderTextView();
      return [super alignmentRectInsets];
    }
    else
    {
      return [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] alignmentRectInsets];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderTextView.forFirstBaselineLayout.getter()
{
  return sub_100183D60((SEL *)&selRef_viewForFirstBaselineLayout);
}

id PlaceholderTextView.forLastBaselineLayout.getter()
{
  return sub_100183D60((SEL *)&selRef_viewForLastBaselineLayout);
}

id PlaceholderTextView.firstBaselineAnchor.getter()
{
  return sub_100183D60((SEL *)&selRef_firstBaselineAnchor);
}

id PlaceholderTextView.lastBaselineAnchor.getter()
{
  return sub_100183D60((SEL *)&selRef_lastBaselineAnchor);
}

id sub_100183D60(SEL *a1)
{
  id result = [v1 text];
  if (result)
  {
    unint64_t v4 = result;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      v10.receiver = v1;
      v10.super_class = (Class)type metadata accessor for PlaceholderTextView();
      id v9 = [super a1];
    }
    else
    {
      id v9 = [*(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] *a1];
    }
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id TranslateCalloutDisabledTextView.__allocating_init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = [objc_allocWithZone(v5) initWithFrame:a1 textContainer:a2];

  return v7;
}

char *PlaceholderTextView.init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView;
  id v12 = objc_allocWithZone((Class)UITextView);
  id v13 = v5;
  id v14 = [v12 init];
  [v14 setUserInteractionEnabled:0];
  [v14 setBackgroundColor:0];
  [v14 setEditable:0];
  [v14 setSelectable:0];
  [v14 setAutoresizingMask:18];
  *(void *)&v5[v11] = v14;
  v13[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] = 0;
  uint64_t v15 = &v13[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor] = 0;

  v30.receiver = v13;
  v30.super_class = (Class)type metadata accessor for PlaceholderTextView();
  uint64_t v16 = (char *)[super initWithFrame:a1 textContainer:a2];
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  uint64_t v18 = v16;
  [v18 addSubview:v17];
  id result = (char *)[v18 text];
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    swift_bridgeObjectRelease();
    uint64_t v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v24 || (double v25 = 1.0, v18[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] == 1)) {
      double v25 = 0.0;
    }
    [v17 setAlpha:v25];
    PlaceholderTextView.updatePlaceholderProperties()();
    id v26 = [self defaultCenter];
    [v26 addObserver:v18 selector:"textChangedWithNotification:" name:UITextViewTextDidChangeNotification object:v18];
    id v27 = [objc_allocWithZone((Class)UIScribbleInteraction) initWithDelegate:v18];
    id v28 = v18;
    id v29 = v27;
    [v28 addInteraction:v29];

    return v28;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1001841C4()
{
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor);
}

id PlaceholderTextView.__deallocating_deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UITextViewTextDidChangeNotification object:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super dealloc];
}

Swift::Void __swiftcall PlaceholderTextView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super layoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  [v0 bounds];
  [v1 setFrame:];
}

id PlaceholderTextView.sizeThatFits(_:)(double a1, double a2)
{
  return sub_1001844E4((SEL *)&selRef_sizeThatFits_, a1, a2);
}

id PlaceholderTextView.systemLayoutSizeFitting(_:)(double a1, double a2)
{
  return sub_1001844E4((SEL *)&selRef_systemLayoutSizeFittingSize_, a1, a2);
}

id sub_1001844E4(SEL *a1, double a2, double a3)
{
  id result = [v3 text];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    swift_bridgeObjectRelease();
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v12)
    {
      v13.receiver = v3;
      v13.super_class = (Class)type metadata accessor for PlaceholderTextView();
      return [super a2:a3];
    }
    else
    {
      return [v3[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] *a1, a2, a3];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderTextView.systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(double a1, double a2, float a3, float a4)
{
  return sub_100184690((SEL *)&selRef_systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, a3, a4);
}

id PlaceholderTextView._systemLayoutSizeFitting(_:withHorizontalFittingPriority:verticalFittingPriority:)(double a1, double a2, float a3, float a4)
{
  return sub_100184690((SEL *)&selRef__systemLayoutSizeFittingSize_withHorizontalFittingPriority_verticalFittingPriority_, a1, a2, a3, a4);
}

id sub_100184690(SEL *a1, double a2, double a3, float a4, float a5)
{
  id result = [v5 text];
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    swift_bridgeObjectRelease();
    uint64_t v18 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v18 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v18)
    {
      v21.receiver = v5;
      v21.super_class = (Class)type metadata accessor for PlaceholderTextView();
      *(float *)&double v19 = a4;
      *(float *)&double v20 = a5;
      return [super a1:a2 a3:v19 v20];
    }
    else
    {
      *(float *)&double v16 = a4;
      *(float *)&double v17 = a5;
      return [*(id *)&v5[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] *a1, a2, a3, v16, v17];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id PlaceholderTextView.alignmentRect(forFrame:)(double a1, double a2, double a3, double a4)
{
  return sub_100184820((SEL *)&selRef_alignmentRectForFrame_, a1, a2, a3, a4);
}

id PlaceholderTextView.frame(forAlignmentRect:)(double a1, double a2, double a3, double a4)
{
  return sub_100184820((SEL *)&selRef_frameForAlignmentRect_, a1, a2, a3, a4);
}

id sub_100184820(SEL *a1, double a2, double a3, double a4, double a5)
{
  id result = [v5 text];
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    swift_bridgeObjectRelease();
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v16)
    {
      v17.receiver = v5;
      v17.super_class = (Class)type metadata accessor for PlaceholderTextView();
      return [super a1:a2 a3:a3 a4:a4 a5:a5];
    }
    else
    {
      return [v5[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView] *a1, a2, a3, a4, a5];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10018492C(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, double (*a7)(double, double, double, double))
{
  id v12 = a1;
  double v13 = a7(a2, a3, a4, a5);

  return v13;
}

Swift::Void __swiftcall PlaceholderTextView.setMarkedText(_:selectedRange:)(Swift::String_optional _, __C::_NSRange selectedRange)
{
  Swift::Int length = selectedRange.length;
  Swift::Int location = selectedRange.location;
  if (_.value._object) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super setMarkedText:v5 selectedRange:location, length];

  unint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id v7 = [v2 text];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    swift_bridgeObjectRelease();
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v12 || (double v13 = 1.0, v2[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] == 1)) {
      double v13 = 0.0;
    }
    [v6 setAlpha:v13];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall PlaceholderTextView.scribbleInteractionWillBeginWriting(_:)(UIScribbleInteraction a1)
{
}

Swift::Void __swiftcall PlaceholderTextView.scribbleInteractionDidFinishWriting(_:)(UIScribbleInteraction a1)
{
}

id sub_100184D14(uint64_t a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for PlaceholderTextView();
  [super setAttributedText:a1];
  objc_super v3 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView];
  id result = [v1 text];
  if (result)
  {
    NSString v5 = result;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v9 || (double v10 = 1.0, v1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] == 1)) {
      double v10 = 0.0;
    }
    return [v3 setAlpha:v10];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s17SequoiaTranslator19PlaceholderTextViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView;
  id v2 = [objc_allocWithZone((Class)UITextView) init];
  [v2 setUserInteractionEnabled:0];
  [v2 setBackgroundColor:0];
  [v2 setEditable:0];
  [v2 setSelectable:0];
  [v2 setAutoresizingMask:18];
  *(void *)&v0[v1] = v2;
  v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_suppressPlaceholder] = 0;
  objc_super v3 = &v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder];
  *objc_super v3 = 0;
  v3[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100184F10()
{
  unint64_t result = qword_1002F90C8;
  if (!qword_1002F90C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F90C8);
  }
  return result;
}

uint64_t destroy for PlayButtonAndRates()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PlayButtonAndRates(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PlayButtonAndRates(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayButtonAndRates(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PlayButtonAndRates()
{
  return &type metadata for PlayButtonAndRates;
}

uint64_t sub_100185104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100185120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002F90D0);
  __chkstk_darwin(v3 - 8);
  NSString v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = sub_100007620(&qword_1002F90D8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(void *)NSString v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0x4010000000000000;
  v5[16] = 0;
  uint64_t v10 = sub_100007620(&qword_1002F90E0);
  sub_100185304((char *)v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  sub_10000C3A4((uint64_t)v5, (uint64_t)v9, &qword_1002F90D0);
  *(_WORD *)&v9[*(int *)(v7 + 44)] = 257;
  sub_10000B070((uint64_t)v5, &qword_1002F90D0);
  uint64_t v11 = static VerticalAlignment.center.getter();
  sub_10001323C(v1 + 24, (uint64_t)v17, &qword_1002F90E8);
  long long v16 = *(_OWORD *)(v1 + 32);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = *(_OWORD *)(v1 + 16);
  v12[1] = *(_OWORD *)v1;
  v12[2] = v13;
  v12[3] = *(_OWORD *)(v1 + 32);
  sub_10000C3A4((uint64_t)v9, a1, &qword_1002F90D8);
  objc_super v14 = (uint64_t *)(a1 + *(int *)(sub_100007620(&qword_1002F90F0) + 36));
  *objc_super v14 = v11;
  v14[1] = (uint64_t)sub_100185D98;
  void v14[2] = (uint64_t)v12;
  swift_retain();
  sub_10001C05C((uint64_t)v17);
  sub_10001F2D8((uint64_t)&v16);
  return sub_10000B070((uint64_t)v9, &qword_1002F90D8);
}

uint64_t sub_100185304@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v107 = sub_100007620(&qword_1002F90F8);
  uint64_t v3 = __chkstk_darwin(v107);
  id v106 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v109 = (char *)&v93 - v5;
  uint64_t v108 = sub_100007620(&qword_1002F9100);
  uint64_t v6 = __chkstk_darwin(v108);
  uint64_t v111 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v110 = (uint64_t)&v93 - v8;
  uint64_t v9 = type metadata accessor for DynamicTypeSize();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  *(void *)&long long v103 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F9108);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100007620(&qword_1002F9110);
  __chkstk_darwin(v104);
  objc_super v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F9118);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  objc_super v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002F9120);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v105 = (uint64_t)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  int v26 = a1[1];
  uint64_t v113 = (uint64_t)&v93 - v25;
  int v114 = v26;
  if (v26 == 2)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))((char *)&v93 - v25, 1, 1, v18);
  }
  else
  {
    uint64_t v119 = sub_100028ACC(v26);
    uint64_t v120 = v27;
    sub_10000C350();
    uint64_t v28 = Text.init<A>(_:)();
    uint64_t v101 = v19;
    uint64_t v29 = v28;
    id v95 = v15;
    uint64_t v31 = v30;
    id v98 = v17;
    Swift::String v102 = a1;
    char v33 = v32 & 1;
    static Font.caption2.getter();
    uint64_t v97 = v13;
    uint64_t v34 = Text.font(_:)();
    uint64_t v94 = v9;
    uint64_t v35 = v34;
    Class v99 = v21;
    uint64_t v37 = v36;
    uint64_t v96 = v12;
    char v39 = v38;
    uint64_t v100 = v18;
    unint64_t v41 = v40;
    swift_release();
    char v42 = v33;
    a1 = v102;
    sub_10001FC84(v29, v31, v42);
    swift_bridgeObjectRelease();
    uint64_t v119 = v35;
    uint64_t v120 = v37;
    LOBYTE(v121) = v39 & 1;
    id v122 = v41;
    uint64_t v43 = v103;
    uint64_t v44 = v94;
    (*(void (**)(void, void, uint64_t))(v10 + 104))(v103, enum case for DynamicTypeSize.medium(_:), v94);
    id v45 = v95;
    View.dynamicTypeSize(_:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v43, v44);
    sub_10001FC84(v119, v120, (char)v121);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v47 = v97;
    uint64_t v48 = (uint64_t)v98;
    uint64_t v49 = v96;
    (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v98, v45, v96);
    uint64_t v50 = v48 + *(int *)(v104 + 36);
    *(void *)uint64_t v50 = KeyPath;
    *(void *)(v50 + 8) = 1;
    *(unsigned char *)(v50 + 16) = 0;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v49);
    uint64_t v51 = static Color.accentColor.getter();
    uint64_t v52 = swift_getKeyPath();
    uint64_t v53 = (uint64_t)v99;
    sub_10000C3A4(v48, (uint64_t)v99, &qword_1002F9110);
    uint64_t v54 = v100;
    uint64_t v55 = (uint64_t *)(v53 + *(int *)(v100 + 36));
    *uint64_t v55 = v52;
    v55[1] = v51;
    sub_10000B070(v48, &qword_1002F9110);
    uint64_t v56 = v113;
    sub_10001323C(v53, v113, &qword_1002F9118);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v56, 0, 1, v54);
  }
  char v57 = *a1;
  uint64_t v104 = *((void *)a1 + 3);
  uint64_t v58 = v104;
  long long v123 = *((_OWORD *)a1 + 2);
  uint64_t v59 = (_OWORD *)swift_allocObject();
  long long v60 = *((_OWORD *)a1 + 1);
  v59[1] = *(_OWORD *)a1;
  v59[2] = v60;
  v59[3] = *((_OWORD *)a1 + 2);
  uint64_t v119 = v58;
  LOBYTE(v120) = v57;
  id v121 = sub_100185E98;
  id v122 = v59;
  uint64_t v61 = self;
  swift_retain_n();
  swift_retain();
  sub_10001F2D8((uint64_t)&v123);
  id v62 = [v61 mainBundle];
  v124._object = (void *)0xE000000000000000;
  v63._object = (void *)0x800000010025B000;
  v63._countAndFlagsBits = 0xD00000000000001ELL;
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  v124._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v124);

  sub_100007620(&qword_1002EEC80);
  uint64_t v65 = swift_allocObject();
  long long v103 = xmmword_1002488D0;
  *(_OWORD *)(v65 + 16) = xmmword_1002488D0;
  uint64_t v66 = sub_100028ACC(v114);
  uint64_t v68 = v67;
  *(void *)(v65 + 56) = &type metadata for String;
  unint64_t v69 = sub_1000149B4();
  *(void *)(v65 + 64) = v69;
  *(void *)(v65 + 32) = v66;
  *(void *)(v65 + 40) = v68;
  uint64_t v70 = String.init(format:_:)();
  unint64_t v72 = v71;
  swift_bridgeObjectRelease();
  uint64_t v117 = v70;
  unint64_t v118 = v72;
  sub_10000C350();
  uint64_t v73 = Text.init<A>(_:)();
  uint64_t v75 = v74;
  char v77 = v76 & 1;
  sub_100185EC4();
  uint64_t v78 = (uint64_t)v106;
  View.accessibility(label:)();
  sub_10001FC84(v73, v75, v77);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = v103;
  uint64_t v80 = sub_100028ACC(v114);
  *(void *)(v79 + 56) = &type metadata for String;
  *(void *)(v79 + 64) = v69;
  *(void *)(v79 + 32) = v80;
  *(void *)(v79 + 40) = v81;
  uint64_t v119 = String.init(format:_:)();
  uint64_t v120 = v82;
  uint64_t v117 = 32;
  unint64_t v118 = 0xE100000000000000;
  uint64_t v115 = 95;
  unint64_t v116 = 0xE100000000000000;
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  swift_bridgeObjectRelease();
  uint64_t v83 = (uint64_t)v109;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10000B070(v78, &qword_1002F90F8);
  if (qword_1002EE588 != -1) {
    swift_once();
  }
  uint64_t v84 = qword_10030E778;
  uint64_t v85 = v111;
  sub_10000C3A4(v83, v111, &qword_1002F90F8);
  id v86 = (uint64_t *)(v85 + *(int *)(v108 + 36));
  *id v86 = v84;
  v86[1] = (uint64_t)sub_100078B0C;
  v86[2] = 0;
  sub_10000B070(v83, &qword_1002F90F8);
  uint64_t v87 = v110;
  sub_10001323C(v85, v110, &qword_1002F9100);
  uint64_t v88 = v113;
  uint64_t v89 = v105;
  sub_10000C3A4(v113, v105, &qword_1002F9120);
  sub_10000C3A4(v87, v85, &qword_1002F9100);
  uint64_t v90 = v112;
  sub_10000C3A4(v89, v112, &qword_1002F9120);
  uint64_t v91 = sub_100007620(&qword_1002F9130);
  sub_10000C3A4(v85, v90 + *(int *)(v91 + 48), &qword_1002F9100);
  sub_10000B070(v87, &qword_1002F9100);
  sub_10000B070(v88, &qword_1002F9120);
  sub_10000B070(v85, &qword_1002F9100);
  return sub_10000B070(v89, &qword_1002F9120);
}

uint64_t sub_100185D58@<X0>(uint64_t a1@<X8>)
{
  return sub_100185120(a1);
}

double sub_100185D98()
{
  sub_100007620(&qword_1002EF470);
  State.wrappedValue.getter();
  return v1;
}

uint64_t sub_100185DE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100185E14()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100185E50()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100185E98(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 24))(a1, a2 & 1);
}

unint64_t sub_100185EC4()
{
  unint64_t result = qword_1002F9128;
  if (!qword_1002F9128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9128);
  }
  return result;
}

unint64_t sub_100185F1C()
{
  unint64_t result = qword_1002F9138;
  if (!qword_1002F9138)
  {
    sub_100007928(&qword_1002F90F0);
    sub_100185F98();
    sub_10005542C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9138);
  }
  return result;
}

unint64_t sub_100185F98()
{
  unint64_t result = qword_1002F9140;
  if (!qword_1002F9140)
  {
    sub_100007928(&qword_1002F90D8);
    sub_100186014();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9140);
  }
  return result;
}

unint64_t sub_100186014()
{
  unint64_t result = qword_1002F9148;
  if (!qword_1002F9148)
  {
    sub_100007928(&qword_1002F90D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9148);
  }
  return result;
}

Class sub_100186070(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  int v21 = a3;
  uint64_t v8 = sub_100007620(&qword_1002F9210);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  sub_10000B0CC(0, &qword_1002F4E38);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  v23.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v13.super.super.super.super.Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v23).super.super.super.super.isa;
  [(objc_class *)v13.super.super.super.super.isa setShowsMenuAsPrimaryAction:0];
  swift_retain();
  swift_retain();
  UIMenuElementSize v14 = (UIMenuElementSize)sub_1001867FC((uint64_t)&off_1002C8B28, a2, v21, v22, a5);
  swift_release();
  swift_release();
  if ((unint64_t)v14 >> 62)
  {
    sub_10000B0CC(0, &qword_1002F0008);
    UIMenuElementSize v15 = _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10000B0CC(0, &qword_1002F0008);
    UIMenuElementSize v15 = v14;
  }
  swift_bridgeObjectRelease();
  sub_10000B0CC(0, &qword_1002F0010);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v24.value.super.Class isa = 0;
  v24.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v24, 0, 0xFFFFFFFFFFFFFFFFLL, v15, v19).super.super.isa;
  [(objc_class *)v13.super.super.super.super.isa setMenu:isa];

  return v13.super.super.super.super.isa;
}

uint64_t sub_10018636C()
{
  if (qword_1002EE658 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EB10);
  double v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "UIKit play button tap", v3, 2u);
    swift_slowDealloc();
  }

  sub_100007620(&qword_1002F9210);
  UIViewRepresentableContext.coordinator.getter();
  uint64_t v4 = *(void (**)(void, uint64_t))(v6 + 16);
  swift_retain();
  swift_release();
  v4(0, 1);
  return swift_release();
}

uint64_t sub_100186498()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlayButtonWithRatesMenu.Coordinator()
{
  return self;
}

uint64_t destroy for PlayButtonWithRatesMenu()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for PlayButtonWithRatesMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PlayButtonWithRatesMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayButtonWithRatesMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PlayButtonWithRatesMenu()
{
  return &type metadata for PlayButtonWithRatesMenu;
}

Class sub_100186644(uint64_t a1)
{
  return sub_100186070(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100186654(void *a1, uint64_t a2)
{
  sub_100186B68(a1, a2, *v2);
}

uint64_t sub_100186660@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  type metadata accessor for PlayButtonWithRatesMenu.Coordinator();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a1 = v5;

  return swift_retain();
}

uint64_t sub_1001866B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001867A8();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10018671C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001867A8();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100186780()
{
}

unint64_t sub_1001867A8()
{
  unint64_t result = qword_1002F9208;
  if (!qword_1002F9208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9208);
  }
  return result;
}

void *sub_1001867FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v12 = (char *)(a1 + 32);
    id v33 = self;
    sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
    id v32 = self;
    char v31 = a3 & 1;
    do
    {
      char v13 = *v12;
      char v34 = *v12;
      uint64_t v35 = v12 + 1;
      id v14 = [v33 mainBundle];
      v36._countAndFlagsBits = 0xD00000000000001FLL;
      v15._object = (void *)0x800000010025B0C0;
      v36._object = (void *)0x800000010025B0E0;
      v15._countAndFlagsBits = 0xD000000000000013;
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v36);

      sub_100007620(&qword_1002EEC80);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1002488D0;
      uint64_t v18 = v6;
      uint64_t v19 = a2;
      uint64_t v20 = a4;
      uint64_t v21 = a5;
      uint64_t v22 = sub_100028ACC(v13);
      uint64_t v24 = v23;
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = sub_1000149B4();
      *(void *)(v17 + 32) = v22;
      *(void *)(v17 + 40) = v24;
      a5 = v21;
      a4 = v20;
      a2 = v19;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v32 systemImageNamed:v25];

      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v19;
      *(unsigned char *)(v27 + 24) = v31;
      *(void *)(v27 + 32) = a4;
      *(void *)(v27 + 40) = a5;
      *(unsigned char *)(v27 + 48) = v34;
      swift_retain();
      swift_retain();
      id v28 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      v29._countAndFlagsBits = 0x6574615279616C70;
      v29._object = (void *)0xE90000000000005FLL;
      String.append(_:)(v29);
      _print_unlocked<A, B>(_:_:)();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v28 setAccessibilityIdentifier:v30];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v12 = v35;
      uint64_t v6 = v18 - 1;
    }
    while (v18 != 1);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_100186B68(void *a1, uint64_t a2, uint64_t a3)
{
  id v8 = [self configurationWithPointSize:26.0];
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self _systemImageNamed:v5 withConfiguration:v8];

  [a1 setImage:v6 forState:0];
  if (a3)
  {
    sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
    swift_retain_n();
    uint64_t v7 = (void *)UIColor.init(_:)();
    [a1 setTintColor:v7];
    swift_release();
  }
}

uint64_t sub_100186CD8()
{
  uint64_t v1 = sub_100007620(&qword_1002F9210);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100186D6C()
{
  sub_100007620(&qword_1002F9210);

  return sub_10018636C();
}

uint64_t sub_100186DE0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100186E20()
{
  return (*(uint64_t (**)(void, void))(v0 + 32))(qword_1002554E0[*(char *)(v0 + 48)], 0);
}

id sub_100186F50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PortraitOnlyAlertController();
  return [super dealloc];
}

uint64_t type metadata accessor for PortraitOnlyAlertController()
{
  return self;
}

void sub_1001870DC(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_sizingConstraints;
  sub_10002AEFC();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 removeConstraints:isa];

  int v6 = v1[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_readableWidthEnabled];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100249A60;
  id v8 = [a1 topAnchor];
  id v9 = [v2 topAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v7 + 32) = v10;
  if (v6 == 1)
  {
    id v11 = [a1 bottomAnchor];
    id v12 = [v2 bottomAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    *(void *)(v7 + 40) = v13;
    id v14 = [a1 centerXAnchor];
    id v15 = [v2 centerXAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    *(void *)(v7 + 48) = v16;
    id v17 = [a1 widthAnchor];
    id v18 = [v2 readableContentGuide];
    id v19 = [v18 widthAnchor];

    id v20 = [v17 constraintEqualToAnchor:v19 multiplier:1.0];
    *(void *)(v7 + 56) = v20;
  }
  else
  {
    id v21 = [a1 leadingAnchor];
    id v22 = [v2 leadingAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    *(void *)(v7 + 40) = v23;
    id v24 = [a1 trailingAnchor];
    id v25 = [v2 trailingAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    *(void *)(v7 + 48) = v26;
    id v27 = [a1 bottomAnchor];
    id v28 = [v2 bottomAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    *(void *)(v7 + 56) = v29;
  }
  specialized Array._endMutation()();
  *(void *)&v2[v4] = v7;
  swift_bridgeObjectRelease();
  NSString v30 = self;
  swift_bridgeObjectRetain();
  Class v31 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 activateConstraints:v31];
}

id sub_1001874D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ReadableWidthContainer();
  [super dealloc];
}

uint64_t type metadata accessor for ReadableWidthContainer()
{
  return self;
}

uint64_t sub_100187578(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_100007620(&qword_1002F9280);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v11 + ((v9 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  id v12 = a4;
  sub_100188848(a3, (uint64_t)sub_100187AFC, v11);
  return swift_release();
}

uint64_t sub_1001876E0(uint64_t a1, void *a2, float a3, uint64_t a4, void *a5)
{
  uint64_t v9 = sub_100007620(&qword_1002F9288);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100011554(v13, (uint64_t)qword_10030EA98);
    swift_errorRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      id v17 = (void *)swift_slowAlloc();
      *(_DWORD *)id v16 = 138412290;
      uint64_t v18 = _convertErrorToNSError(_:)();
      uint64_t v26 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v17 = v18;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Recording helper error: %@", v16, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
    }

    uint64_t v26 = a1;
  }
  else
  {
    if (a2)
    {
      id v19 = a2;
      [a5 appendAudioPCMBuffer:v19];
      *(float *)&uint64_t v26 = a3;
      sub_100007620(&qword_1002F9280);
      AsyncThrowingStream.Continuation.yield(_:)();

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100011554(v21, (uint64_t)qword_10030EA98);
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Ending listening.", v24, 2u);
      swift_slowDealloc();
    }

    uint64_t v26 = 0;
  }
  sub_100007620(&qword_1002F9280);
  return AsyncThrowingStream.Continuation.finish(throwing:)();
}

uint64_t sub_100187A54()
{
  uint64_t v1 = sub_100007620(&qword_1002F9280);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100187AFC(uint64_t a1, void *a2, float a3)
{
  uint64_t v7 = *(void *)(sub_100007620(&qword_1002F9280) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1001876E0(a1, a2, a3, v3 + v8, v9);
}

uint64_t sub_100187BBC(char *a1, char *a2)
{
  return sub_100237158(*a1, *a2);
}

Swift::Int sub_100187BC8()
{
  return Hasher._finalize()();
}

uint64_t sub_100187C40()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100187CA4()
{
  return Hasher._finalize()();
}

uint64_t sub_100187D18@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8B50, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100187D78(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1886352499;
  if (!*v1) {
    uint64_t v2 = 0x7472617473;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100187DAC()
{
  uint64_t v0 = sub_100007620(&qword_1002EFD90);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  unint64_t v3 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  char v5 = (char *)&v63 - v4;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v70 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v67 = (char *)&v63 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v68 = (char *)&v63 - v13;
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v63 - v14;
  id v16 = [self defaultManager];
  id v17 = [self standardUserDefaults];
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 stringForKey:v18];

  uint64_t v66 = v9;
  if (v19)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v20 = v70;
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  if (v21(v5, 1, v6) == 1)
  {

    sub_10000B070((uint64_t)v5, &qword_1002EFD90);
    return 0;
  }
  id v22 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v22(v15, v5, v6);
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  id v72 = 0;
  id v65 = v16;
  id v26 = [v16 contentsOfDirectoryAtURL:v24 includingPropertiesForKeys:0 options:0 error:&v72];

  uint64_t v27 = v20;
  id v28 = v72;
  if (!v26)
  {
    id v36 = v72;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v6);
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    sub_100011554(v56, (uint64_t)qword_10030EA98);
    swift_errorRetain();
    swift_errorRetain();
    char v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      long long v60 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 138412290;
      uint64_t v61 = (void *)_convertErrorToNSError(_:)();
      id v72 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v60 = v61;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Failed to get next audio file: %@", v59, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  Swift::String v64 = v15;
  uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v30 = v28;

  unint64_t v31 = *(void *)(v29 + 16);
  if (*((unsigned char *)v69 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_randomFile) != 1)
  {
    uint64_t v32 = v70;
    id v33 = v68;
    if (!v31)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v37 = *(void *)((char *)v69 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_nextAudioFileIndex)
        % (uint64_t)v31;
    char v38 = v67;
    if (v37 < 0)
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v68, v29+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v37, v6);
    swift_bridgeObjectRelease();
LABEL_17:
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100011554(v40, (uint64_t)qword_10030EA98);
    unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    v41(v38, v33, v6);
    char v42 = v69;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      unint64_t v69 = v41;
      uint64_t v46 = v45;
      uint64_t v67 = (char *)swift_slowAlloc();
      id v72 = v67;
      *(_DWORD *)uint64_t v46 = 134349314;
      uint64_t v71 = *(void *)&v42[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_nextAudioFileIndex];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v46 + 12) = 2082;
      uint64_t v47 = URL.path.getter();
      uint64_t v71 = sub_100202FD4(v47, v48, (uint64_t *)&v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v70 + 8);
      v49(v38, v6);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "next audio file index: %{public}ld; audio file to play: %{public}s",
        (uint8_t *)v46,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v41 = v69;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v49 = *(void (**)(char *, uint64_t))(v32 + 8);
      v49(v38, v6);
    }

    uint64_t v50 = *(void *)&v42[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_nextAudioFileIndex];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (!v51)
    {
      *(void *)&v42[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_nextAudioFileIndex] = v52;
      uint64_t v53 = (uint64_t)v66;
      uint64_t v54 = v68;
      v41(v66, v68, v6);
      id v55 = objc_allocWithZone((Class)AVAudioFile);
      id v62 = sub_10018BCD8(v53);

      v49(v54, v6);
      v49(v64, v6);
      return (uint64_t)v62;
    }
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v32 = v70;
  id v33 = v68;
  if (v31)
  {
    unint64_t v34 = sub_10018BFAC(*(void *)(v29 + 16));
    if (v34 >= v31) {
      goto LABEL_34;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v3, v29+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v34, v6);
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v3, v35, 1, v6);
  swift_bridgeObjectRelease();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v3, 1, v6);
  if (result != 1)
  {
    v22(v33, v3, v6);
    char v38 = v67;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

const float **sub_1001886F0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t result = (const float **)[a1 floatChannelData];
  if (result)
  {
    char v5 = *result;
    float __C = 0.0;
    vDSP_maxv(v5, 1, &__C, [a1 frameLength]);
    uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_averagePowerChannel0;
    float v7 = *(float *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_averagePowerChannel0) * 0.7;
    if (__C == 0.0) {
      float v8 = -30.0;
    }
    else {
      float v8 = (float)(log10f(__C) * 20.0) * 0.3;
    }
    *(float *)(v2 + v6) = v7 + v8;
    sub_1000D708C();
    uint64_t result = (const float **)BinaryFloatingPoint.clip(to:)();
    *(_DWORD *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_normalizedPowerChannel0) = v9;
  }
  return result;
}

uint64_t sub_100188848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  os_log_type_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordingQueue];
  id v16 = (void *)swift_allocObject();
  v16[2] = v4;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = a3;
  v16[6] = ObjectType;
  aBlock[4] = sub_10018D170;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D1378;
  id v17 = _Block_copy(aBlock);
  NSString v18 = v4;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v22 = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v21);
  return swift_release();
}

void sub_100188B20(char *a1, char a2, void (*a3)(double), uint64_t a4)
{
  uint64_t v158 = a4;
  v159 = a3;
  uint64_t v6 = sub_100007620(&qword_1002EFD90);
  __chkstk_darwin(v6 - 8);
  float v8 = (char *)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v157 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  v155 = (char *)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v144 - v13;
  __chkstk_darwin(v12);
  v156 = (char *)&v144 - v15;
  uint64_t v16 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine;
  id v17 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine];
  if (v17 && [v17 isRunning]) {
    sub_10018A568();
  }
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100011554(v18, (uint64_t)qword_10030EA98);
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Configure audio session (recording)", v21, 2u);
    swift_slowDealloc();
  }

  id v22 = [self sharedInstance];
  aBlock = 0;
  unsigned int v23 = [v22 setCategory:AVAudioSessionCategoryPlayAndRecord withOptions:12 error:&aBlock];
  id v24 = aBlock;
  if (!v23) {
    goto LABEL_16;
  }
  uint64_t v25 = aBlock;
  sub_1000BC9F4(v22, a2);
  v164 = &type metadata for TranslateFeatures;
  v165 = (uint64_t (*)(void))sub_10000AB14();
  LOBYTE(aBlock) = 9;
  char v26 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&aBlock);
  if (v26)
  {
    uint64_t v27 = *(void **)&a1[v16];
    if (!v27 || ([v27 isRunning] & 1) == 0) {
      sub_10018C25C(0, 1);
    }
  }
  aBlock = 0;
  unsigned int v28 = [v22 setActive:1 withOptions:0 error:&aBlock];
  id v24 = aBlock;
  if (!v28)
  {
LABEL_16:
    id v33 = v24;
    uint64_t v34 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      char v38 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 138412290;
      char v39 = (void **)_convertErrorToNSError(_:)();
      aBlock = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v38 = v39;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to change audio category: %@", v37, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
    }
    uint64_t v40 = v159;

    swift_errorRetain();
    ((void (*)(uint64_t, void, double))v40)(v34, 0, 0.0);
    swift_errorRelease();
    swift_errorRelease();

    return;
  }
  uint64_t v29 = *(void **)&a1[v16];
  uint64_t v151 = v9;
  if (v29)
  {
    id v30 = aBlock;
    unint64_t v31 = v29;
    id v32 = v29;
  }
  else
  {
    id v41 = objc_allocWithZone((Class)AVAudioEngine);
    char v42 = v24;
    id v32 = [v41 init];
    unint64_t v31 = 0;
    uint64_t v29 = *(void **)&a1[v16];
  }
  *(void *)&a1[v16] = v32;
  id v43 = v31;
  id v44 = v32;

  id v154 = self;
  id v45 = [v154 standardUserDefaults];
  unint64_t v150 = "ate.conversation";
  NSString v46 = String._bridgeToObjectiveC()();
  unsigned int v47 = [v45 BOOLForKey:v46];

  if (v47)
  {
    uint64_t v48 = sub_100187DAC();
    id v49 = v44;
    if (v48)
    {
      uint64_t v50 = (void *)v48;
      id v152 = v44;
      id v51 = [objc_allocWithZone((Class)AVAudioPlayerNode) init];
      uint64_t v52 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer;
      uint64_t v53 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer];
      *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer] = v51;

      id v54 = [v50 processingFormat];
      uint64_t v55 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFormat;
      uint64_t v56 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFormat];
      *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFormat] = v54;

      char v57 = *(void **)&a1[v52];
      if (v57)
      {
        os_log_type_t v58 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode];
        *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode] = v57;
        id v59 = v57;

        id v49 = v152;
        id v153 = [v152 mainMixerNode];
        [v49 attachNode:v59];
        if (!*(void *)&a1[v55])
        {
          __break(1u);
          return;
        }
        [v49 connect:v59 to:v153];
        [v49 prepare];
        v165 = nullsub_1;
        v166 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v162 = 1107296256;
        v163 = sub_10008BA1C;
        v164 = (ValueMetadata *)&unk_1002D13F0;
        long long v60 = _Block_copy(&aBlock);
        [v59 scheduleFile:v50 atTime:0 completionHandler:v60];

        _Block_release(v60);
      }
      else
      {

        id v49 = v152;
      }
    }
  }
  else
  {
    id v61 = [v44 inputNode];
    id v62 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode];
    *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode] = v61;

    [v44 reset];
    [v44 prepare];
    id v49 = v44;
  }
  uint64_t v63 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode];
  if (!v63)
  {
    sub_10018D180();
    swift_allocError();
    *id v86 = 0;
    v159(0.0);
    swift_errorRelease();

    return;
  }
  uint64_t v64 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer;
  uint64_t v65 = *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer];
  id v66 = v63;
  uint64_t v67 = v66;
  uint64_t v68 = &selRef_inputFormatForBus_;
  if (v65) {
    uint64_t v68 = &selRef_outputFormatForBus_;
  }
  id v69 = [v66 *v68];
  unsigned int v70 = [v69 channelCount];
  id v153 = v69;
  if (!v70 || ([v69 sampleRate], v71 <= 0.0))
  {
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Got an incorrect format from inputNode.outputFormat(forBus: 0)", v83, 2u);
      swift_slowDealloc();
    }

    sub_10018D180();
    swift_allocError();
    *uint64_t v84 = 1;
    v159(0.0);
    swift_errorRelease();

    id v85 = v153;
    goto LABEL_38;
  }
  uint64_t v148 = v64;
  id v149 = v67;
  id v152 = v49;
  id v72 = [v154 standardUserDefaults];
  NSString v73 = String._bridgeToObjectiveC()();
  unsigned int v74 = [v72 BOOLForKey:v73];

  if (v74)
  {
    id v75 = [v154 standardUserDefaults];
    NSString v76 = String._bridgeToObjectiveC()();
    id v77 = [v75 stringForKey:v76];

    if (v77)
    {
      uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v80 = v79;
    }
    else
    {
      if (qword_1002EE688 != -1) {
        swift_once();
      }
      uint64_t v78 = qword_10030EB78;
      uint64_t v80 = (void (*)(char *, char *, uint64_t))unk_10030EB80;
      swift_bridgeObjectRetain();
    }
    uint64_t v147 = v80;
    id v146 = self;
    id v87 = [v146 defaultManager];
    uint64_t v88 = (void *)v78;
    NSString v89 = String._bridgeToObjectiveC()();
    unsigned __int8 v90 = [v87 fileExistsAtPath:v89];

    if (v90) {
      goto LABEL_47;
    }
    id v91 = [v146 defaultManager];
    id v146 = v88;
    NSString v92 = String._bridgeToObjectiveC()();
    aBlock = 0;
    unsigned int v93 = [v91 createDirectoryAtPath:v92 withIntermediateDirectories:1 attributes:0 error:&aBlock];

    if (v93)
    {
      uint64_t v94 = aBlock;
LABEL_47:
      id v95 = [objc_allocWithZone((Class)NSUUID) init];
      id v96 = [v95 UUIDString];

      uint64_t v97 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v99 = v98;

      aBlock = v97;
      uint64_t v162 = v99;
      v100._countAndFlagsBits = 1717658414;
      v100._object = (void *)0xE400000000000000;
      String.append(_:)(v100);
      id v146 = aBlock;
      URL.init(fileURLWithPath:)();
      swift_bridgeObjectRelease();
      uint64_t v101 = v157;
      uint64_t v102 = v151;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v8, 0, 1, v151);
      long long v103 = v156;
      URL.init(fileURLWithPath:isDirectory:relativeTo:)();
      swift_bridgeObjectRelease();
      sub_10000B070((uint64_t)v8, &qword_1002EFD90);
      uint64_t v104 = v101;
      uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
      v147(v14, v103, v102);
      uint64_t v105 = Logger.logObject.getter();
      os_log_type_t v106 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v105, v106))
      {
        os_log_t v145 = v105;
        uint64_t v107 = (uint8_t *)swift_slowAlloc();
        char v144 = (void **)swift_slowAlloc();
        aBlock = v144;
        *(_DWORD *)uint64_t v107 = 136446210;
        id v146 = v107 + 4;
        uint64_t v108 = URL.description.getter();
        uint64_t v160 = sub_100202FD4(v108, v109, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v110 = v14;
        uint64_t v111 = v151;
        id v146 = *(id *)(v157 + 8);
        ((void (*)(char *, uint64_t))v146)(v110, v151);
        os_log_t v112 = v145;
        _os_log_impl((void *)&_mh_execute_header, v145, v106, "created audio file: %{public}s", v107, 0xCu);
        swift_arrayDestroy();
        uint64_t v113 = v156;
        swift_slowDealloc();
        swift_slowDealloc();

        id v114 = v153;
        uint64_t v115 = v111;
      }
      else
      {
        uint64_t v115 = v151;
        id v146 = *(id *)(v104 + 8);
        ((void (*)(char *, uint64_t))v146)(v14, v151);

        id v114 = v153;
        uint64_t v113 = v156;
      }
      uint64_t v116 = (uint64_t)v155;
      v147(v155, v113, v115);
      id v117 = [v114 settings];
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v118 = objc_allocWithZone((Class)AVAudioFile);
      id v119 = sub_10018BE24(v116);
      uint64_t v120 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile];
      *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile] = v119;

      ((void (*)(char *, uint64_t))v146)(v113, v115);
      goto LABEL_54;
    }
    id v121 = aBlock;
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    id v122 = Logger.logObject.getter();
    os_log_type_t v123 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v122, v123))
    {
      Swift::String v124 = (uint8_t *)swift_slowAlloc();
      uint64_t v157 = swift_slowAlloc();
      *(_DWORD *)Swift::String v124 = 138412290;
      uint64_t v125 = (void **)_convertErrorToNSError(_:)();
      aBlock = v125;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v157 = v125;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v122, v123, "Failed to create recording file: %@", v124, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
LABEL_54:
  unint64_t v126 = (void *)swift_allocObject();
  uint64_t v128 = v158;
  uint64_t v127 = v159;
  v126[2] = a1;
  v126[3] = v127;
  v126[4] = v128;
  v165 = (uint64_t (*)(void))sub_10018D214;
  v166 = v126;
  aBlock = _NSConcreteStackBlock;
  uint64_t v162 = 1107296256;
  v163 = sub_10018A0FC;
  v164 = (ValueMetadata *)&unk_1002D13C8;
  Swift::String v129 = _Block_copy(&aBlock);
  id v130 = v153;
  Swift::String v131 = a1;
  swift_retain();
  swift_release();
  id v132 = v149;
  [v149 installTapOnBus:0 bufferSize:1024 format:v130 block:v129];
  _Block_release(v129);

  aBlock = 0;
  if ([v152 startAndReturnError:&aBlock])
  {
    Swift::String v133 = aBlock;
    id v134 = [v154 standardUserDefaults];
    NSString v135 = String._bridgeToObjectiveC()();
    unsigned int v136 = [v134 BOOLForKey:v135];

    if (v136) {
      [*(id *)&a1[v148] play];
    }
    [v131 _accessibilityDidStartListening];

    id v85 = v152;
LABEL_38:

    return;
  }
  Swift::String v137 = aBlock;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRetain();
  Swift::String v138 = Logger.logObject.getter();
  os_log_type_t v139 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v138, v139))
  {
    Swift::String v140 = (uint8_t *)swift_slowAlloc();
    Swift::String v141 = (void *)swift_slowAlloc();
    *(_DWORD *)Swift::String v140 = 138412290;
    uint64_t v142 = (void **)_convertErrorToNSError(_:)();
    aBlock = v142;
    uint64_t v127 = v159;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::String v141 = v142;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v138, v139, "Failed to start audio engine: %@", v140, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    id v132 = v149;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  sub_10018D180();
  swift_allocError();
  unsigned char *v143 = 2;
  v127(0.0);

  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_100189E80(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, float))
{
  sub_1001886F0(a1);
  uint64_t v7 = *(void **)(a3 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile);
  if (v7)
  {
    id v18 = 0;
    if ([v7 writeFromBuffer:a1 error:&v18])
    {
      id v8 = v18;
    }
    else
    {
      id v9 = v18;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1002EE630 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100011554(v10, (uint64_t)qword_10030EA98);
      swift_errorRetain();
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        id v17 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 138412290;
        uint64_t v14 = a4;
        uint64_t v15 = (void *)_convertErrorToNSError(_:)();
        id v18 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v17 = v15;
        a4 = v14;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Could not write file to buffer: %@", v13, 0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  return a4(0, a1, *(float *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_normalizedPowerChannel0));
}

void sub_10018A0FC(uint64_t a1, void *a2, void *a3)
{
  char v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

uint64_t sub_10018A180()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v15 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v3 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA98);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping audio recording", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10018D114;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D1328;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v2, v0);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v14);
  swift_release();
  return swift_release();
}

void sub_10018A500()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile);
    *(void *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile) = 0;

    sub_10018A568();
  }
}

id sub_10018A568()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA98);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Cancelling audio recognition", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordingQueue];
  void *v5 = v10;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v10)
  {
    uint64_t v13 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine;
    uint64_t v14 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine];
    if (v14)
    {
      uint64_t v15 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode;
      uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode];
      id v17 = v14;
      [v16 removeTapOnBus:0];
      [v17 pause];
      [v17 reset];
      id v18 = *(void **)&v1[v13];
      *(void *)&v1[v13] = 0;

      id v19 = *(void **)&v1[v15];
      *(void *)&v1[v15] = 0;
    }
    return [v1 _accessibilityDidStopListening];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10018A7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordingQueue];
  uint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  aBlock[4] = sub_10018D108;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D1300;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v3;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_10018AA80(uint64_t a1, char a2, void (*a3)(uint64_t))
{
  char v5 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine);
  if (v5 && [v5 isRunning]) {
    sub_10018A568();
  }
  if ((a2 & 2) != 0)
  {
    a3(0);
    return;
  }
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA98);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Configuring audio session (TTS)", v9, 2u);
    swift_slowDealloc();
  }

  id v10 = [self sharedInstance];
  uint64_t v11 = v10;
  if ((a2 & 0x10) != 0)
  {
    id v27 = 0;
    if ([v10 setCategory:AVAudioSessionCategoryPlayback withOptions:0 error:&v27])
    {
      id v17 = v27;
      sub_1000BC9F4(v11, a2);
      goto LABEL_20;
    }
  }
  else
  {
    if (sub_1000BC80C()) {
      uint64_t v12 = 44;
    }
    else {
      uint64_t v12 = 12;
    }
    id v27 = 0;
    if ([v11 setCategory:AVAudioSessionCategoryPlayAndRecord withOptions:v12 error:&v27])
    {
      id v13 = v27;
      sub_1000BC9F4(v11, a2);
      if ((a2 & 0x20) != 0)
      {
        id v27 = 0;
        unsigned int v14 = [v11 overrideOutputAudioPort:1936747378 error:&v27];
        id v15 = v27;
        if (!v14)
        {
LABEL_24:
          id v20 = v15;
          goto LABEL_25;
        }
        id v16 = v27;
      }
LABEL_20:
      id v27 = 0;
      unsigned int v18 = [v11 setActive:1 withOptions:0 error:&v27];
      id v15 = v27;
      if (v18)
      {
        id v19 = v27;
        a3(0);

        return;
      }
      goto LABEL_24;
    }
  }
  id v20 = v27;
LABEL_25:
  uint64_t v21 = _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRetain();
  id v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    id v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)id v24 = 138412290;
    char v26 = (void *)_convertErrorToNSError(_:)();
    id v27 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v25 = v26;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to change audio category: %@", v24, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  swift_errorRetain();
  a3(v21);

  swift_errorRelease();
  swift_errorRelease();
}

uint64_t sub_10018AEE4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordingQueue);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10018D0F8;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D12B0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v13 = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_10018B1AC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100011554(v2, (uint64_t)qword_10030EA98);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Deactivating audio session", v5, 2u);
      swift_slowDealloc();
    }

    sub_10018A568();
    id v6 = [self sharedInstance];
    id v14 = 0;
    if ([v6 setActive:0 withOptions:1 error:&v14])
    {
      id v7 = v14;
    }
    else
    {
      id v8 = v14;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        id v13 = (void *)_convertErrorToNSError(_:)();
        id v14 = v13;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v12 = v13;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to deactivate audio session: %@", v11, 0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

uint64_t sub_10018B4C8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100011554(v3, (uint64_t)qword_10030EA98);
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)id v6 = 136315138;
    uint64_t v7 = String.init<A>(describing:)();
    sub_100202FD4(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Finished performing user feedback with completion listeningStateChange: %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return a2(v9, v10);
}

uint64_t sub_10018B670(uint64_t a1, uint64_t a2, char a3, char a4)
{
  char v6 = a3 & 1;
  uint64_t v7 = sub_100007620(&qword_1002F8F48);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  sub_10018CC64(v6, a4, (uint64_t)sub_10018CBFC, v11);
  return swift_release();
}

uint64_t sub_10018B7BC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10018B7DC, 0, 0);
}

uint64_t sub_10018B7DC()
{
  uint64_t v1 = type metadata accessor for RecordingHelper();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *(void *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 24) = 257;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10018B8D4;
  return withCheckedContinuation<A>(isolation:function:_:)(v3, 0, 0, 0xD000000000000020, 0x80000001002617B0, sub_10018CBE0, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10018B8D4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_10018B9EC, 0, 0);
}

uint64_t sub_10018B9EC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  void *v1 = 1701736292;
  v1[1] = 0xE400000000000000;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018BA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100007620(&qword_1002F9338);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_10018A7BC(a3, (uint64_t)sub_10018D04C, v9);
  return swift_release();
}

uint64_t sub_10018BB5C()
{
  return CheckedContinuation.resume(returning:)();
}

id sub_10018BBD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RecordingHelper();
  [super dealloc];
}

uint64_t type metadata accessor for RecordingHelper()
{
  return self;
}

id sub_10018BCD8(uint64_t a1)
{
  objc_super v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [v2 initForReading:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_10018BE24(uint64_t a1)
{
  objc_super v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = 0;
  id v7 = [v2 initForWriting:v5 settings:isa error:&v15];

  id v8 = v15;
  if (v7)
  {
    uint64_t v9 = type metadata accessor for URL();
    id v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a1, v9);
  }
  else
  {
    id v12 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

unint64_t sub_10018BFAC(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    id result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10018C038(uint64_t a1, int *a2)
{
  *(void *)(v2 + 32) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10018C118;
  return v5(v2 + 16);
}

uint64_t sub_10018C118()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 32);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v1 + 24);
  *uint64_t v2 = *(void *)(v1 + 16);
  v2[1] = v3;
  os_log_type_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

void sub_10018C25C(char a1, char a2)
{
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  int v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EA98);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    uint64_t v9 = String.init<A>(describing:)();
    sub_100202FD4(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Performing user feedback with listeningStateChange: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a2)
  {
    id v11 = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:4];
    [v11 impactOccurredWithIntensity:1.0];
  }
  if (v4) {
    SystemSoundID v12 = 1114;
  }
  else {
    SystemSoundID v12 = 1113;
  }
  AudioServicesPlaySystemSound(v12);
}

id sub_10018C43C(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v19 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  int v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioEngine] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFormat] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioFilePlayer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_audioTapNode] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_averagePowerChannel0] = 0;
  *(_DWORD *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_normalizedPowerChannel0] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_nextAudioFileIndex] = 0;
  v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_randomFile] = 1;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordedFile] = 0;
  uint64_t v17 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_recordingQueue;
  sub_100022324();
  unsigned int v18 = v1;
  static DispatchQoS.unspecified.getter();
  id v22 = _swiftEmptyArrayStorage;
  v16[3] = sub_1000C291C(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  v16[2] = sub_100007620(&qword_1002F3490);
  v16[4] = sub_10009A940(&qword_1002F3498, &qword_1002F3490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v7 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v8 = v2 + 104;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v16[1] = v8;
  uint64_t v10 = v19;
  v9(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  *(void *)&v1[v17] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_analysisQueue;
  static DispatchQoS.unspecified.getter();
  id v22 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v9(v4, v7, v10);
  uint64_t v12 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v13 = v18;
  *(void *)&v18[v11] = v12;
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator15RecordingHelper_deviceHelper] = v20;
  swift_retain();

  id v14 = (objc_class *)type metadata accessor for RecordingHelper();
  v21.receiver = v13;
  v21.super_class = v14;
  return [super init];
}

uint64_t sub_10018C7EC()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10000B070((uint64_t)v2, &qword_1002F33C0);
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
    if (*(void *)(v5 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v7 = v8;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = &unk_1002F9320;
  *(void *)(v9 + 24) = v5;
  if (v7 | v6)
  {
    v11[0] = 0;
    v11[1] = 0;
    void v11[2] = v6;
    v11[3] = v7;
  }
  return swift_task_create();
}

uint64_t sub_10018CA10()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018CA48(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021B58;
  v3[2] = a1;
  return _swift_task_switch(sub_10018B7DC, 0, 0);
}

uint64_t sub_10018CAF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10018CB28(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100021B58;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002F9328 + dword_1002F9328);
  return v6(a1, v4);
}

uint64_t sub_10018CBE0(uint64_t a1)
{
  return sub_10018B670(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 25));
}

uint64_t sub_10018CBF0()
{
  return sub_1000E902C(&qword_1002F8F48);
}

uint64_t sub_10018CBFC()
{
  return CheckedContinuation.resume(returning:)();
}

void sub_10018CC64(char a1, char a2, uint64_t a3, uint64_t a4)
{
  int v7 = a1 & 1;
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100011554(v8, (uint64_t)qword_10030EA98);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v21 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v12 = String.init<A>(describing:)();
    sub_100202FD4(v12, v13, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Performing user feedback with completion and listeningStateChange: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v21;
    swift_slowDealloc();
  }

  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v7;
  *(void *)(v14 + 24) = a3;
  *(void *)(v14 + 32) = a4;
  if ((a2 & 1) == 0)
  {
    swift_retain();
    if (v7) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_10018D01C;
    *(void *)(v20 + 24) = v14;
    char v26 = sub_100034114;
    uint64_t v27 = v20;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v23 = 1107296256;
    id v24 = sub_10008BA1C;
    uint64_t v25 = &unk_1002D1238;
    unsigned int v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    SystemSoundID v19 = 1113;
    goto LABEL_10;
  }
  id v15 = objc_allocWithZone((Class)UIImpactFeedbackGenerator);
  swift_retain();
  id v16 = [v15 initWithStyle:4];
  [v16 impactOccurredWithIntensity:1.0];

  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_10018D01C;
  *(void *)(v17 + 24) = v14;
  char v26 = sub_1000345D4;
  uint64_t v27 = v17;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_10008BA1C;
  uint64_t v25 = &unk_1002D11E8;
  unsigned int v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  SystemSoundID v19 = 1114;
LABEL_10:
  AudioServicesPlaySystemSoundWithCompletion(v19, v18);
  swift_release();
  _Block_release(v18);
}

uint64_t sub_10018CFE4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018D01C()
{
  return sub_10018B4C8(*(unsigned __int8 *)(v0 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
}

uint64_t sub_10018D028(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10018D038()
{
  return swift_release();
}

uint64_t sub_10018D040()
{
  return sub_1000E902C(&qword_1002F9338);
}

uint64_t sub_10018D04C()
{
  sub_100007620(&qword_1002F9338);

  return sub_10018BB5C();
}

uint64_t sub_10018D0C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10018D0F8()
{
}

uint64_t sub_10018D100()
{
  return sub_10018D124(48);
}

void sub_10018D108()
{
  sub_10018AA80(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

void sub_10018D114()
{
}

uint64_t sub_10018D11C()
{
  return sub_10018D124(56);
}

uint64_t sub_10018D124(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_10018D170()
{
  sub_100188B20(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(double))(v0 + 32), *(void *)(v0 + 40));
}

unint64_t sub_10018D180()
{
  unint64_t result = qword_1002F9340;
  if (!qword_1002F9340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9340);
  }
  return result;
}

uint64_t sub_10018D1D4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10018D214(void *a1, uint64_t a2)
{
  return sub_100189E80(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(void, void, float))(v2 + 24));
}

unsigned char *storeEnumTagSinglePayload for RecordingHelper.RecordingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018D2ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingHelper.RecordingError()
{
  return &type metadata for RecordingHelper.RecordingError;
}

unsigned char *storeEnumTagSinglePayload for RecordingHelper.ListeningStateChange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10018D3F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingHelper.ListeningStateChange()
{
  return &type metadata for RecordingHelper.ListeningStateChange;
}

unint64_t sub_10018D42C()
{
  unint64_t result = qword_1002F9348;
  if (!qword_1002F9348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9348);
  }
  return result;
}

unint64_t sub_10018D484()
{
  unint64_t result = qword_1002F9350;
  if (!qword_1002F9350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9350);
  }
  return result;
}

ValueMetadata *type metadata accessor for ReversedContentList()
{
  return &type metadata for ReversedContentList;
}

unint64_t sub_10018D52C()
{
  unint64_t result = qword_1002F9358;
  if (!qword_1002F9358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9358);
  }
  return result;
}

id sub_10018D580()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for TranslationListController());
  uint64_t v1 = swift_retain();
  return sub_1002199A0(v1);
}

uint64_t sub_10018D5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10018D6AC();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10018D620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10018D6AC();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10018D684()
{
}

unint64_t sub_10018D6AC()
{
  unint64_t result = qword_1002F9360;
  if (!qword_1002F9360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9360);
  }
  return result;
}

id sub_10018D700()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  __chkstk_darwin(v1);
  uint64_t v25 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v8 - 8);
  uint64_t v24 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)&v0[OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_token] = -1;
  uint64_t v20 = v0;
  uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_queue;
  unint64_t v19 = sub_100022324();
  uint64_t v11 = v0;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000C291C(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007620(&qword_1002F3490);
  sub_10009A940(&qword_1002F3498, &qword_1002F3490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v22);
  *(void *)&v20[v21] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v11[OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver__muted] = 0;

  uint64_t v12 = (objc_class *)type metadata accessor for RingerSwitchObserver();
  v30.receiver = v11;
  v30.super_class = v12;
  id v13 = [super init];
  sub_10018DD50();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10018E4F4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D15B0;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unsigned int v28 = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  id v16 = v25;
  uint64_t v17 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v17);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v24);
  swift_release();
  swift_release();
  return v13;
}

void sub_10018DBEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10018E134(*(_DWORD *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_token));
  }
}

id sub_10018DC70()
{
  int v1 = *(_DWORD *)&v0[OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_token];
  if (v1 != -1) {
    notify_cancel(v1);
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for RingerSwitchObserver();
  return [super dealloc];
}

uint64_t type metadata accessor for RingerSwitchObserver()
{
  return self;
}

void sub_10018DD50()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_token;
  if (*(_DWORD *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_token) == -1)
  {
    uint64_t v2 = v0;
    int out_token = -1;
    objc_super v3 = *(NSObject **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_queue);
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10018E4D4;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018E0E0;
    aBlock[3] = &unk_1002D1588;
    uint64_t v5 = _Block_copy(aBlock);
    swift_release();
    uint32_t v6 = notify_register_dispatch("com.apple.springboard.ringerstate", &out_token, v3, v5);
    _Block_release(v5);
    if (v6)
    {
      if (qword_1002EE658 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030EB10);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v10 = 67240192;
        LODWORD(aBlock[0]) = v6;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to register for ringer switch state change: %{public}u", v10, 8u);
        swift_slowDealloc();
      }
    }
    else
    {
      if (qword_1002EE658 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100011554(v11, (uint64_t)qword_10030EB10);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 67240192;
        swift_beginAccess();
        LODWORD(aBlock[0]) = out_token;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Monitor ringer switch state change with token: %{public}d", v14, 8u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      *(_DWORD *)(v2 + v1) = out_token;
    }
  }
}

void sub_10018E084(int a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v3 = (void *)Strong;
    sub_10018E134(a1);
  }
}

uint64_t sub_10018E0E0(uint64_t a1, uint64_t a2)
{
  objc_super v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_10018E134(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&state64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver_queue);
  void *v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (a1 == -1) {
    return;
  }
  uint64_t state64 = 0;
  uint32_t state = notify_get_state(a1, &state64);
  if (state)
  {
    LODWORD(v4) = state;
    if (qword_1002EE658 == -1)
    {
LABEL_5:
      uint64_t v11 = type metadata accessor for Logger();
      sub_100011554(v11, (uint64_t)qword_10030EB10);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 67240192;
        LODWORD(v20) = v4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to get ringer switch state: %{public}u", v14, 8u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_15:
    swift_once();
    goto LABEL_5;
  }
  if (qword_1002EE658 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100011554(v15, (uint64_t)qword_10030EB10);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unsigned int v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unsigned int v18 = 134349056;
    swift_beginAccess();
    uint64_t v20 = state64;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Ringer switch state: %{public}llu", v18, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator20RingerSwitchObserver__muted) = state64 == 0;
}

uint64_t sub_10018E49C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10018E4D4(int a1)
{
}

uint64_t sub_10018E4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10018E4EC()
{
  return swift_release();
}

void sub_10018E4F4()
{
}

ValueMetadata *type metadata accessor for ScaleButtonStyle()
{
  return &type metadata for ScaleButtonStyle;
}

uint64_t sub_10018E514()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10018E530@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F93A8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v10 = 0.75;
  }
  else {
    double v10 = 1.0;
  }
  static UnitPoint.center.getter();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v15 = &v9[*(int *)(v7 + 44)];
  *(double *)uint64_t v15 = v10;
  *((double *)v15 + 1) = v10;
  *((void *)v15 + 2) = v12;
  *((void *)v15 + 3) = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_10018E6C0((uint64_t)v9, a1);
}

uint64_t sub_10018E6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F93A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10018E72C()
{
  unint64_t result = qword_1002F93B0;
  if (!qword_1002F93B0)
  {
    sub_100007928(&qword_1002F93A8);
    sub_10018E7A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F93B0);
  }
  return result;
}

unint64_t sub_10018E7A8()
{
  unint64_t result = qword_1002EFF58;
  if (!qword_1002EFF58)
  {
    type metadata accessor for ButtonStyleConfiguration.Label();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFF58);
  }
  return result;
}

uint64_t sub_10018E800@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10018E814(unsigned char *a1)
{
  if (*a1 == 1)
  {
    id v1 = [self sharedApplication];
    [v1 sendAction:"resignFirstResponder" to:0 from:0 forEvent:0];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_10018E8D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10018E8EC()
{
  return static Published.subscript.setter();
}

uint64_t sub_10018E960()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018E9D4()
{
  return sub_10002249C();
}

uint64_t sub_10018E9E8()
{
  return sub_10002249C();
}

uint64_t sub_10018E9FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10018EA74()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__broadcastTranslation;
  uint64_t v2 = sub_100007620(&qword_1002F9588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__faceToFaceVisible;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__clearConfirmationVisible, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__interruptionEvent;
  uint64_t v7 = sub_100007620(&qword_1002F9580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_deallocClassInstance();
}

uint64_t sub_10018EBD8()
{
  return type metadata accessor for SceneContext();
}

uint64_t type metadata accessor for SceneContext()
{
  uint64_t result = qword_1002F9400;
  if (!qword_1002F9400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10018EC2C()
{
  sub_10018ED30();
  if (v0 <= 0x3F)
  {
    sub_1000AFBD4();
    if (v1 <= 0x3F)
    {
      sub_10018ED8C();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10018ED30()
{
  if (!qword_1002F9410)
  {
    sub_100007928(&qword_1002F9418);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F9410);
    }
  }
}

void sub_10018ED8C()
{
  if (!qword_1002F9420)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F9420);
    }
  }
}

uint64_t sub_10018EDE4()
{
  uint64_t v1 = sub_100007620(&qword_1002F9580);
  uint64_t v29 = *(void *)(v1 - 8);
  uint64_t v30 = v1;
  __chkstk_darwin(v1);
  unsigned int v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t v4 = __chkstk_darwin(v26);
  uint64_t v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F9588);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__broadcastTranslation;
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  sub_100007620(&qword_1002F9418);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  uint64_t v17 = v0;
  uint64_t v18 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__faceToFaceVisible;
  LOBYTE(v31) = 0;
  Published.init(initialValue:)();
  unint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v19(v18, v11, v8);
  uint64_t v20 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__clearConfirmationVisible;
  LOBYTE(v31) = 0;
  Published.init(initialValue:)();
  v19(v20, v11, v8);
  uint64_t v21 = v0 + OBJC_IVAR____TtC17SequoiaTranslator12SceneContext__interruptionEvent;
  UUID.init()();
  uint64_t v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v27, v7, v26);
  uint64_t v23 = v28;
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v21, v23, v30);
  return v17;
}

uint64_t sub_10018F184@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SceneContext();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10018F1C4()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - v5;
  UUID.init()();
  swift_getKeyPath();
  swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

double sub_10018F310@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10018F390(void *a1)
{
  if (*a1)
  {
    uint64_t v1 = self;
    swift_unknownObjectRetain();
    id v2 = [v1 sharedApplication];
    [v2 sendAction:"resignFirstResponder" to:0 from:0 forEvent:0];
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_10018F468()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10018F4E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_10018F65C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10018F688@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10018F6BC(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.startIndex.getter();
    uint64_t v5 = v4;
    __CocoaSet.endIndex.getter();
    char v6 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000B5CA8(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_100199960(v3, v5, v2 != 0, a1);
    uint64_t v7 = v11;
    sub_1000B5CA8(v3, v5, v2 != 0);
    return v7;
  }
  uint64_t result = sub_100199BD8(a1);
  if ((v10 & 1) == 0)
  {
    uint64_t v5 = v9;
    if (*(_DWORD *)(a1 + 36) == v9)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10018F7CC(uint64_t a1)
{
  uint64_t v33 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v31 = v5;
  uint64_t v25 = v1;
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_1000B2EC0(0, v6, 0);
  uint64_t v7 = v35;
  uint64_t result = sub_10019A490(a1);
  uint64_t v10 = result;
  uint64_t v11 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v29 = a1 + 64;
  uint64_t v30 = v3 + 32;
  uint64_t v26 = a1 + 80;
  int64_t v27 = v6;
  uint64_t v32 = v3;
  uint64_t v28 = v9;
  uint64_t v13 = v31;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v16 = (unint64_t)v10 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v9) {
      goto LABEL_24;
    }
    uint64_t v34 = v11;
    uint64_t v17 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v7;
    unint64_t v19 = v7[2];
    unint64_t v18 = v7[3];
    if (v19 >= v18 >> 1)
    {
      sub_1000B2EC0(v18 > 1, v19 + 1, 1);
      uint64_t v7 = v35;
    }
    v7[2] = v19 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v19, v13, v33);
    int64_t v14 = 1 << *(unsigned char *)(v17 + 32);
    if (v10 >= v14) {
      goto LABEL_25;
    }
    uint64_t v12 = v29;
    uint64_t v20 = *(void *)(v29 + 8 * v16);
    if ((v20 & (1 << v10)) == 0) {
      goto LABEL_26;
    }
    a1 = v17;
    LODWORD(v9) = v28;
    if (*(_DWORD *)(v17 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v10 & 0x3F));
    if (v21)
    {
      int64_t v14 = __clz(__rbit64(v21)) | v10 & 0xFFFFFFFFFFFFFFC0;
      int64_t v15 = v27;
    }
    else
    {
      unint64_t v22 = v16 + 1;
      unint64_t v23 = (unint64_t)(v14 + 63) >> 6;
      int64_t v15 = v27;
      if (v16 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v29 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v14 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v16)
          {
            unint64_t v24 = *(void *)(v26 + 8 * v16++);
            if (v24)
            {
              unint64_t v22 = v16 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v11 = v34 + 1;
    uint64_t v10 = v14;
    if (v34 + 1 == v15) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10018FADC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

BOOL sub_10018FBD0()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  id v3 = [v0 traitCollection];
  id v4 = [v3 horizontalSizeClass];

  return v4 == (id)2 && v2 != 0;
}

uint64_t sub_10018FCC0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___translationSession;
  if (*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___translationSession))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___translationSession);
  }
  else
  {
    type metadata accessor for TranslationAppSession();
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = swift_retain();
    uint64_t v2 = sub_100199C60(v4, 1, v3, 480.0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

char *sub_10018FD5C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___favoritesImporter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___favoritesImporter);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___favoritesImporter);
  }
  else
  {
    uint64_t v4 = v0;
    objc_allocWithZone((Class)type metadata accessor for FavoritesImporter());
    uint64_t v5 = swift_retain();
    int64_t v6 = sub_1000EB50C(v5);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    uint64_t v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_10018FDE8()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___sessionManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___sessionManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___sessionManager);
  }
  else
  {
    uint64_t v2 = sub_10018FE50();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10018FE50()
{
  id v0 = [objc_allocWithZone((Class)NSUserDefaults) init];
  if (qword_1002EE718 != -1) {
    swift_once();
  }
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned int v2 = [v0 BOOLForKey:v1];

  if (v2)
  {
    if (qword_1002EE628 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030EA80);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      int64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Using debug 10s session timeout", v6, 2u);
      swift_slowDealloc();
    }

    double v7 = 10.0;
  }
  else
  {
    double v7 = 480.0;
  }
  type metadata accessor for TranslationSessionManager();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = swift_retain();

  return sub_100198FDC(v9, v8, v7);
}

uint64_t sub_10019000C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.managedObjectContext.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100190038(id *a1)
{
  id v1 = *a1;
  return EnvironmentValues.managedObjectContext.setter();
}

uint64_t sub_100190064(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  os_log_type_t v5 = (char *)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v210 = (uint64_t)&v195 - v7;
  __chkstk_darwin(v6);
  uint64_t v211 = (uint64_t)&v195 - v8;
  uint64_t v223 = type metadata accessor for URLQueryItem();
  uint64_t v9 = *(void *)(v223 - 8);
  uint64_t v10 = __chkstk_darwin(v223);
  v221 = (char *)&v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  int64_t v14 = (char *)&v195 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v214 = (uint64_t)&v195 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v195 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v222 = (unint64_t)&v195 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v216 = (char *)&v195 - v23;
  __chkstk_darwin(v22);
  v215 = (char *)&v195 - v24;
  uint64_t v25 = sub_100007620(&qword_1002F9738);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  v200 = (char *)&v195 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  v199 = (char *)&v195 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v195 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  v197 = (char *)&v195 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v196 = (char *)&v195 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v209 = (char *)&v195 - v38;
  __chkstk_darwin(v37);
  v195 = (char *)&v195 - v39;
  uint64_t v40 = type metadata accessor for URL();
  uint64_t v207 = *(void *)(v40 - 8);
  uint64_t v208 = v40;
  __chkstk_darwin(v40);
  v205 = (char *)&v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100007620(&qword_1002F9740);
  __chkstk_darwin(v42 - 8);
  v206 = (char *)&v195 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for URLComponents();
  uint64_t v212 = *(void *)(v44 - 8);
  uint64_t v45 = __chkstk_darwin(v44);
  v204 = (char *)&v195 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v195 - v47;
  if (qword_1002EE5B0 != -1) {
    swift_once();
  }
  uint64_t v49 = type metadata accessor for Logger();
  uint64_t v50 = sub_100011554(v49, (uint64_t)qword_10030E918);
  swift_bridgeObjectRetain_n();
  uint64_t v202 = v50;
  id v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.info.getter();
  BOOL v53 = os_log_type_enabled(v51, v52);
  uint64_t v218 = v44;
  v219 = v48;
  uint64_t v213 = v9;
  v220 = v14;
  v217 = v19;
  v201 = v5;
  v198 = v32;
  if (v53)
  {
    id v54 = (uint8_t *)swift_slowAlloc();
    v225[0] = swift_slowAlloc();
    *(_DWORD *)id v54 = 136380675;
    sub_10000B0CC(0, &qword_1002F9720);
    sub_10007854C((unint64_t *)&unk_1002F9728, &qword_1002F9720);
    swift_bridgeObjectRetain();
    uint64_t v55 = Set.description.getter();
    unint64_t v57 = v56;
    swift_bridgeObjectRelease();
    uint64_t v224 = sub_100202FD4(v55, v57, v225);
    int64_t v14 = v220;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v44 = v218;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "handleURLContexts %{private}s", v54, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v213;
    uint64_t v48 = v219;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v59 = v221;
  unint64_t v58 = v222;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    if (result < 1) {
      return result;
    }
  }
  else
  {
    uint64_t result = *(void *)(a1 + 16);
    if (result < 1) {
      return result;
    }
  }
  uint64_t v61 = swift_bridgeObjectRetain();
  id v62 = (void *)sub_10018F6BC(v61);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v62)
  {
    __break(1u);
    return result;
  }
  id v63 = [v62 URL];

  uint64_t v64 = v205;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v65 = v206;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  (*(void (**)(char *, uint64_t))(v207 + 8))(v64, v208);
  uint64_t v66 = v212;
  int v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v212 + 48))(v65, 1, v44);
  uint64_t v68 = (uint64_t)v209;
  if (v67 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v48, v65, v44);
    uint64_t v71 = URLComponents.queryItems.getter();
    if (v71)
    {
      uint64_t v72 = *(void *)(v71 + 16);
      uint64_t v73 = v223;
      if (v72)
      {
        NSString v76 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v74 = v9 + 16;
        id v75 = v76;
        unint64_t v77 = v71 + ((*(unsigned __int8 *)(v74 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 64));
        uint64_t v78 = *(void *)(v74 + 56);
        uint64_t v208 = v71;
        swift_bridgeObjectRetain();
        uint64_t v79 = v215;
        while (1)
        {
          v75(v79, v77, v73);
          if (URLQueryItem.name.getter() == 0x614C656372756F73 && v80 == 0xEE0065676175676ELL)
          {
            swift_bridgeObjectRelease();
            uint64_t v73 = v223;
            goto LABEL_25;
          }
          char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v81) {
            break;
          }
          uint64_t v79 = v215;
          uint64_t v73 = v223;
          (*(void (**)(char *, uint64_t))(v74 - 8))(v215, v223);
          v77 += v78;
          --v72;
          unint64_t v58 = v222;
          if (!v72)
          {
            swift_bridgeObjectRelease();
            uint64_t v82 = 1;
            uint64_t v44 = v218;
            uint64_t v48 = v219;
            uint64_t v9 = v213;
            int64_t v14 = v220;
            id v59 = v221;
            uint64_t v68 = (uint64_t)v209;
            goto LABEL_22;
          }
        }
        unint64_t v58 = v222;
        uint64_t v73 = v223;
LABEL_25:
        int64_t v14 = v220;
        swift_bridgeObjectRelease();
        uint64_t v9 = v213;
        uint64_t v83 = (uint64_t)v195;
        (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v195, v215, v73);
        uint64_t v82 = 0;
        uint64_t v44 = v218;
        uint64_t v48 = v219;
        id v59 = v221;
        uint64_t v68 = (uint64_t)v209;
      }
      else
      {
        uint64_t v82 = 1;
        int64_t v14 = v220;
LABEL_22:
        uint64_t v83 = (uint64_t)v195;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v83, v82, 1, v73);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v83, 1, v73) != 1)
      {
        uint64_t v208 = URLQueryItem.value.getter();
        v215 = v84;
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v83, v73);
LABEL_30:
        uint64_t v85 = URLComponents.queryItems.getter();
        if (v85)
        {
          uint64_t v86 = *(void *)(v85 + 16);
          if (v86)
          {
            NSString v89 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
            uint64_t v87 = v9 + 16;
            uint64_t v88 = v89;
            unint64_t v90 = v85 + ((*(unsigned __int8 *)(v87 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 64));
            uint64_t v91 = *(void *)(v87 + 56);
            uint64_t v207 = v85;
            swift_bridgeObjectRetain();
            uint64_t v92 = v223;
            unsigned int v93 = v216;
            while (1)
            {
              v88(v93, v90, v92);
              if (URLQueryItem.name.getter() == 0x614C746567726174 && v94 == 0xEE0065676175676ELL)
              {
                swift_bridgeObjectRelease();
                uint64_t v92 = v223;
                goto LABEL_41;
              }
              char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v95) {
                break;
              }
              unsigned int v93 = v216;
              uint64_t v92 = v223;
              (*(void (**)(char *, uint64_t))(v87 - 8))(v216, v223);
              v90 += v91;
              --v86;
              unint64_t v58 = v222;
              if (!v86)
              {
                swift_bridgeObjectRelease();
                uint64_t v96 = 1;
                uint64_t v44 = v218;
                uint64_t v48 = v219;
                uint64_t v9 = v213;
                int64_t v14 = v220;
                id v59 = v221;
                uint64_t v68 = (uint64_t)v209;
                goto LABEL_42;
              }
            }
            unint64_t v58 = v222;
            uint64_t v92 = v223;
LABEL_41:
            int64_t v14 = v220;
            swift_bridgeObjectRelease();
            uint64_t v9 = v213;
            uint64_t v68 = (uint64_t)v209;
            (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v209, v216, v92);
            uint64_t v96 = 0;
            uint64_t v44 = v218;
            uint64_t v48 = v219;
            id v59 = v221;
          }
          else
          {
            uint64_t v96 = 1;
            uint64_t v92 = v223;
            int64_t v14 = v220;
          }
LABEL_42:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v68, v96, 1, v92);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v68, 1, v92) != 1)
          {
            v209 = (char *)URLQueryItem.value.getter();
            v216 = v97;
            (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v68, v92);
LABEL_46:
            uint64_t v98 = URLComponents.queryItems.getter();
            if (v98)
            {
              uint64_t v99 = *(void *)(v98 + 16);
              if (v99)
              {
                uint64_t v102 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
                uint64_t v100 = v9 + 16;
                uint64_t v101 = v102;
                unint64_t v103 = v98
                     + ((*(unsigned __int8 *)(v100 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 64));
                uint64_t v104 = *(void *)(v100 + 56);
                swift_bridgeObjectRetain();
                uint64_t v105 = v223;
                while (1)
                {
                  v101(v58, v103, v105);
                  if (URLQueryItem.name.getter() == 0x6F4C656372756F73 && v106 == 0xEC000000656C6163) {
                    break;
                  }
                  char v107 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v107) {
                    goto LABEL_57;
                  }
                  unint64_t v58 = v222;
                  uint64_t v105 = v223;
                  (*(void (**)(unint64_t, uint64_t))(v100 - 8))(v222, v223);
                  v103 += v104;
                  if (!--v99)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v108 = 1;
                    uint64_t v44 = v218;
                    uint64_t v48 = v219;
                    uint64_t v9 = v213;
                    id v59 = v221;
                    goto LABEL_55;
                  }
                }
                swift_bridgeObjectRelease();
LABEL_57:
                uint64_t v105 = v223;
                int64_t v14 = v220;
                swift_bridgeObjectRelease();
                uint64_t v9 = v213;
                uint64_t v109 = (uint64_t)v196;
                (*(void (**)(char *, unint64_t, uint64_t))(v213 + 32))(v196, v222, v105);
                uint64_t v108 = 0;
                uint64_t v44 = v218;
                uint64_t v48 = v219;
                id v59 = v221;
              }
              else
              {
                uint64_t v108 = 1;
                uint64_t v105 = v223;
LABEL_55:
                int64_t v14 = v220;
                uint64_t v109 = (uint64_t)v196;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v109, v108, 1, v105);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v109, 1, v105) == 1)
              {
                sub_10000B070(v109, &qword_1002F9738);
              }
              else
              {
                URLQueryItem.value.getter();
                uint64_t v111 = v110;
                (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v109, v105);
                if (v111)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v112 = v211;
                  Locale.init(identifier:)();
                  uint64_t v113 = type metadata accessor for Locale();
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 0, 1, v113);
                  swift_bridgeObjectRelease();
                  goto LABEL_63;
                }
              }
            }
            uint64_t v114 = type metadata accessor for Locale();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v211, 1, 1, v114);
LABEL_63:
            uint64_t v115 = URLComponents.queryItems.getter();
            if (v115)
            {
              uint64_t v116 = *(void *)(v115 + 16);
              if (v116)
              {
                id v119 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
                uint64_t v117 = v9 + 16;
                id v118 = v119;
                unint64_t v120 = v115
                     + ((*(unsigned __int8 *)(v117 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 64));
                uint64_t v121 = *(void *)(v117 + 56);
                swift_bridgeObjectRetain();
                uint64_t v122 = v223;
                uint64_t v123 = (uint64_t)v217;
                while (1)
                {
                  v118(v123, v120, v122);
                  if (URLQueryItem.name.getter() == 0x6F4C746567726174 && v124 == 0xEC000000656C6163) {
                    break;
                  }
                  char v125 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v125) {
                    goto LABEL_74;
                  }
                  uint64_t v123 = (uint64_t)v217;
                  uint64_t v122 = v223;
                  (*(void (**)(char *, uint64_t))(v117 - 8))(v217, v223);
                  v120 += v121;
                  if (!--v116)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v126 = 1;
                    uint64_t v44 = v218;
                    uint64_t v48 = v219;
                    uint64_t v9 = v213;
                    id v59 = v221;
                    goto LABEL_72;
                  }
                }
                swift_bridgeObjectRelease();
LABEL_74:
                uint64_t v122 = v223;
                int64_t v14 = v220;
                swift_bridgeObjectRelease();
                uint64_t v9 = v213;
                uint64_t v127 = (uint64_t)v197;
                (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v197, v217, v122);
                uint64_t v126 = 0;
                uint64_t v44 = v218;
                uint64_t v48 = v219;
                id v59 = v221;
              }
              else
              {
                uint64_t v126 = 1;
                uint64_t v122 = v223;
LABEL_72:
                int64_t v14 = v220;
                uint64_t v127 = (uint64_t)v197;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v127, v126, 1, v122);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v127, 1, v122) == 1)
              {
                sub_10000B070(v127, &qword_1002F9738);
              }
              else
              {
                URLQueryItem.value.getter();
                uint64_t v129 = v128;
                (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v127, v122);
                if (v129)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v130 = v210;
                  Locale.init(identifier:)();
                  uint64_t v131 = type metadata accessor for Locale();
                  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v131 - 8) + 56))(v130, 0, 1, v131);
                  swift_bridgeObjectRelease();
                  goto LABEL_80;
                }
              }
            }
            uint64_t v132 = type metadata accessor for Locale();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v210, 1, 1, v132);
LABEL_80:
            uint64_t v133 = URLComponents.queryItems.getter();
            if (v133)
            {
              uint64_t v134 = *(void *)(v133 + 16);
              uint64_t v135 = v223;
              if (v134)
              {
                uint64_t v136 = v9 + 16;
                Swift::String v137 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
                unint64_t v138 = v133
                     + ((*(unsigned __int8 *)(v136 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 64));
                uint64_t v139 = *(void *)(v136 + 56);
                swift_bridgeObjectRetain();
                uint64_t v140 = v214;
                while (1)
                {
                  v137(v140, v138, v135);
                  if (URLQueryItem.name.getter() == 1954047348 && v141 == 0xE400000000000000)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v135 = v223;
                    goto LABEL_92;
                  }
                  char v142 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v142) {
                    break;
                  }
                  uint64_t v140 = v214;
                  uint64_t v135 = v223;
                  (*(void (**)(uint64_t, uint64_t))(v136 - 8))(v214, v223);
                  v138 += v139;
                  if (!--v134)
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v143 = 1;
                    uint64_t v44 = v218;
                    uint64_t v48 = v219;
                    uint64_t v9 = v213;
                    int64_t v14 = v220;
                    id v59 = v221;
                    goto LABEL_89;
                  }
                }
                uint64_t v135 = v223;
                uint64_t v140 = v214;
LABEL_92:
                swift_bridgeObjectRelease();
                uint64_t v9 = v213;
                uint64_t v144 = (uint64_t)v198;
                (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v198, v140, v135);
                uint64_t v143 = 0;
                uint64_t v44 = v218;
                uint64_t v48 = v219;
                int64_t v14 = v220;
                id v59 = v221;
              }
              else
              {
                uint64_t v143 = 1;
LABEL_89:
                uint64_t v144 = (uint64_t)v198;
              }
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v144, v143, 1, v135);
              swift_bridgeObjectRelease();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v144, 1, v135) != 1)
              {
                v217 = (char *)URLQueryItem.value.getter();
                unint64_t v222 = v145;
                (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v144, v135);
LABEL_97:
                uint64_t v146 = URLComponents.queryItems.getter();
                if (v146)
                {
                  uint64_t v147 = *(void *)(v146 + 16);
                  if (v147)
                  {
                    unint64_t v150 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
                    uint64_t v148 = v9 + 16;
                    id v149 = v150;
                    unint64_t v151 = v146
                         + ((*(unsigned __int8 *)(v148 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 64));
                    uint64_t v152 = *(void *)(v148 + 56);
                    swift_bridgeObjectRetain();
                    uint64_t v153 = v223;
                    while (1)
                    {
                      v149(v14, v151, v153);
                      if (URLQueryItem.name.getter() == 0x6554746567726174 && v154 == 0xEA00000000007478)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v153 = v223;
                        goto LABEL_109;
                      }
                      char v155 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v155) {
                        break;
                      }
                      int64_t v14 = v220;
                      uint64_t v153 = v223;
                      (*(void (**)(char *, uint64_t))(v148 - 8))(v220, v223);
                      v151 += v152;
                      if (!--v147)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v156 = 1;
                        uint64_t v44 = v218;
                        uint64_t v48 = v219;
                        uint64_t v9 = v213;
                        id v59 = v221;
                        goto LABEL_106;
                      }
                    }
                    uint64_t v153 = v223;
                    int64_t v14 = v220;
LABEL_109:
                    swift_bridgeObjectRelease();
                    uint64_t v9 = v213;
                    uint64_t v157 = (uint64_t)v199;
                    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v199, v14, v153);
                    uint64_t v156 = 0;
                    uint64_t v44 = v218;
                    uint64_t v48 = v219;
                    id v59 = v221;
                  }
                  else
                  {
                    uint64_t v156 = 1;
                    uint64_t v153 = v223;
LABEL_106:
                    uint64_t v157 = (uint64_t)v199;
                  }
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v157, v156, 1, v153);
                  swift_bridgeObjectRelease();
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v157, 1, v153) != 1)
                  {
                    uint64_t v214 = URLQueryItem.value.getter();
                    v220 = (char *)v158;
                    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v157, v153);
                    goto LABEL_114;
                  }
                  sub_10000B070(v157, &qword_1002F9738);
                }
                uint64_t v214 = 0;
                v220 = 0;
LABEL_114:
                v159 = v204;
                uint64_t v160 = URLComponents.queryItems.getter();
                unint64_t v161 = v160;
                if (v160)
                {
                  uint64_t v162 = *(void *)(v160 + 16);
                  if (v162)
                  {
                    v165 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
                    uint64_t v163 = v9 + 16;
                    v164 = v165;
                    unint64_t v166 = v160
                         + ((*(unsigned __int8 *)(v163 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v163 + 64));
                    uint64_t v167 = *(void *)(v163 + 56);
                    swift_bridgeObjectRetain();
                    uint64_t v168 = v223;
                    while (1)
                    {
                      v164(v59, v166, v168);
                      if (URLQueryItem.name.getter() == 6517363 && v169 == 0xE300000000000000)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v168 = v223;
                        goto LABEL_127;
                      }
                      char v170 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v170) {
                        break;
                      }
                      id v59 = v221;
                      uint64_t v168 = v223;
                      (*(void (**)(char *, uint64_t))(v163 - 8))(v221, v223);
                      v166 += v167;
                      if (!--v162)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v171 = 1;
                        uint64_t v44 = v218;
                        uint64_t v48 = v219;
                        uint64_t v9 = v213;
                        v159 = v204;
                        goto LABEL_124;
                      }
                    }
                    uint64_t v168 = v223;
                    id v59 = v221;
LABEL_127:
                    swift_bridgeObjectRelease();
                    uint64_t v9 = v213;
                    uint64_t v172 = (uint64_t)v200;
                    (*(void (**)(char *, char *, uint64_t))(v213 + 32))(v200, v59, v168);
                    uint64_t v171 = 0;
                    uint64_t v44 = v218;
                    uint64_t v48 = v219;
                    v159 = v204;
                  }
                  else
                  {
                    uint64_t v171 = 1;
                    uint64_t v168 = v223;
LABEL_124:
                    uint64_t v172 = (uint64_t)v200;
                  }
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v172, v171, 1, v168);
                  swift_bridgeObjectRelease();
                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v172, 1, v168) == 1)
                  {
                    sub_10000B070(v172, &qword_1002F9738);
                    uint64_t v223 = 0;
                    unint64_t v161 = 0;
                  }
                  else
                  {
                    uint64_t v223 = URLQueryItem.value.getter();
                    unint64_t v161 = v173;
                    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v172, v168);
                  }
                }
                else
                {
                  uint64_t v223 = 0;
                }
                uint64_t v174 = v212;
                (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v159, v48, v44);
                v175 = Logger.logObject.getter();
                os_log_type_t v176 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v175, v176))
                {
                  v177 = (uint8_t *)swift_slowAlloc();
                  v225[0] = swift_slowAlloc();
                  *(_DWORD *)v177 = 136380675;
                  uint64_t v224 = URLComponents.queryItems.getter();
                  sub_100007620(&qword_1002F9748);
                  uint64_t v178 = String.init<A>(describing:)();
                  uint64_t v224 = sub_100202FD4(v178, v179, v225);
                  uint64_t v44 = v218;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  v180 = *(void (**)(char *, uint64_t))(v174 + 8);
                  v180(v159, v44);
                  _os_log_impl((void *)&_mh_execute_header, v175, v176, "handleURLContexts parameters: %{private}s", v177, 0xCu);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  v180 = *(void (**)(char *, uint64_t))(v174 + 8);
                  v180(v159, v44);
                }

                uint64_t v181 = (uint64_t)v201;
                uint64_t v182 = type metadata accessor for Locale();
                v183 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v182 - 8) + 48);
                int v184 = v183(v211, 1, v182);
                sub_10000C3A4(v210, v181, (uint64_t *)&unk_1002F4110);
                if (v184 == 1 || v183(v181, 1, v182) == 1)
                {
                  sub_10000B070(v181, (uint64_t *)&unk_1002F4110);
                  v185 = (void *)swift_allocObject();
                  v186 = v203;
                  uint64_t v187 = v208;
                  v185[2] = v203;
                  v185[3] = v187;
                  v188 = v209;
                  v185[4] = v215;
                  v185[5] = v188;
                  uint64_t v189 = (uint64_t)v217;
                  v185[6] = v216;
                  v185[7] = v189;
                  uint64_t v190 = v214;
                  v185[8] = v222;
                  v185[9] = v190;
                  uint64_t v191 = v223;
                  v185[10] = v220;
                  v185[11] = v191;
                  v185[12] = v161;
                  id v192 = v186;
                  sub_10019AE24((uint64_t)sub_10019D080, (uint64_t)v185);
                  swift_release();
                  sub_10000B070(v210, (uint64_t *)&unk_1002F4110);
                  v180(v219, v44);
                  uint64_t v70 = v211;
                }
                else
                {
                  sub_10000B070(v181, (uint64_t *)&unk_1002F4110);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v194 = v210;
                  uint64_t v193 = v211;
                  sub_100193F7C(v211, v210, (uint64_t)v217, v222, v214, (uint64_t)v220, v223, v161);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_10000B070(v194, (uint64_t *)&unk_1002F4110);
                  v180(v219, v44);
                  uint64_t v70 = v193;
                }
                id v69 = (uint64_t *)&unk_1002F4110;
                return sub_10000B070(v70, v69);
              }
              sub_10000B070(v144, &qword_1002F9738);
            }
            v217 = 0;
            unint64_t v222 = 0;
            goto LABEL_97;
          }
          sub_10000B070(v68, &qword_1002F9738);
        }
        v209 = 0;
        v216 = 0;
        goto LABEL_46;
      }
      sub_10000B070(v83, &qword_1002F9738);
    }
    uint64_t v208 = 0;
    v215 = 0;
    goto LABEL_30;
  }
  id v69 = &qword_1002F9740;
  uint64_t v70 = (uint64_t)v65;
  return sub_10000B070(v70, v69);
}

uint64_t sub_100191ED8()
{
  uint64_t v0 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StoredTranslationResult();
  uint64_t v79 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v78 = (char *)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v86 = (char *)v72 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v87 = (char *)v72 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v72 - v11;
  __chkstk_darwin(v10);
  int64_t v14 = (char *)v72 - v13;
  uint64_t v92 = type metadata accessor for SpeechResultOrigin();
  uint64_t v93 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v16 = (char *)v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Locale();
  __chkstk_darwin(v17 - 8);
  uint64_t v77 = type metadata accessor for StoredSpeechResult();
  uint64_t v76 = *(void *)(v77 - 8);
  uint64_t v18 = __chkstk_darwin(v77);
  uint64_t v20 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v82 = (char *)v72 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v84 = (char *)v72 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v85 = (char *)v72 - v26;
  __chkstk_darwin(v25);
  uint64_t v83 = (char *)v72 - v27;
  id v28 = [self standardUserDefaults];
  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v28 objectForKey:v29];

  if (v30)
  {
    char v81 = v12;
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10000B070((uint64_t)v94, (uint64_t *)&unk_1002F02C0);
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v74 = v20;
    uint64_t v75 = v3;
    uint64_t v31 = type metadata accessor for Logger();
    sub_100011554(v31, (uint64_t)qword_10030E978);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Inject fake session history", v34, 2u);
      swift_slowDealloc();
    }

    Locale.init(identifier:)();
    unsigned int v89 = enum case for SpeechResultOrigin.text(_:);
    uint64_t v80 = *(void (**)(char *))(v93 + 104);
    v93 += 104;
    uint64_t v35 = v92;
    v80(v16);
    uint64_t v36 = (uint64_t)v83;
    StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
    Locale.init(identifier:)();
    uint64_t v73 = v14;
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    uint64_t v37 = sub_10018FCC0();
    uint64_t v90 = type metadata accessor for UUID();
    uint64_t v38 = *(void *)(v90 - 8);
    uint64_t v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v88 = v38 + 56;
    v91(v2, 1, 1, v90);
    uint64_t v39 = (void *)sub_100199FC4(v36, (uint64_t)v14, 0, v2, v37);
    swift_release();

    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F33E0);
    Locale.init(identifier:)();
    uint64_t v40 = v89;
    uint64_t v41 = (void (*)(char *, uint64_t, uint64_t))v80;
    ((void (*)(char *, void, uint64_t))v80)(v16, v89, v35);
    uint64_t v42 = (uint64_t)v85;
    StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
    Locale.init(identifier:)();
    uint64_t v43 = (uint64_t)v81;
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    uint64_t v44 = sub_10018FCC0();
    v91(v2, 1, 1, v90);
    uint64_t v45 = (void *)sub_100199FC4(v42, v43, 0, v2, v44);
    swift_release();

    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F33E0);
    Locale.init(identifier:)();
    uint64_t v46 = v40;
    uint64_t v47 = v92;
    v41(v16, v46, v92);
    v72[1] = 0x8000000100261B70;
    uint64_t v48 = (uint64_t)v84;
    StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
    Locale.init(identifier:)();
    uint64_t v49 = (uint64_t)v87;
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    uint64_t v50 = sub_10018FCC0();
    id v51 = v16;
    uint64_t v52 = v90;
    BOOL v53 = v91;
    v91(v2, 1, 1, v90);
    id v54 = (void *)sub_100199FC4(v48, v49, 0, v2, v50);
    swift_release();

    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F33E0);
    Locale.init(identifier:)();
    uint64_t v55 = v47;
    unint64_t v56 = v80;
    ((void (*)(char *, void, uint64_t))v80)(v51, v89, v55);
    uint64_t v57 = (uint64_t)v82;
    StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
    Locale.init(identifier:)();
    uint64_t v58 = (uint64_t)v86;
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    uint64_t v59 = sub_10018FCC0();
    v53(v2, 1, 1, v52);
    long long v60 = (void *)sub_100199FC4(v57, v58, 0, v2, v59);
    swift_release();

    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F33E0);
    Locale.init(identifier:)();
    ((void (*)(char *, void, uint64_t))v56)(v51, v89, v92);
    uint64_t v61 = (uint64_t)v74;
    StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
    Locale.init(identifier:)();
    uint64_t v62 = (uint64_t)v78;
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    uint64_t v63 = sub_10018FCC0();
    v91(v2, 1, 1, v90);
    uint64_t v64 = (void *)sub_100199FC4(v61, v62, 0, v2, v63);
    swift_release();

    sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F33E0);
    TranslationStoreCoreData.save()();
    uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    uint64_t v66 = v62;
    uint64_t v67 = v75;
    v65(v66, v75);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
    uint64_t v69 = v61;
    uint64_t v70 = v77;
    v68(v69, v77);
    v65((uint64_t)v86, v67);
    v68((uint64_t)v82, v70);
    v65((uint64_t)v87, v67);
    v68((uint64_t)v84, v70);
    v65((uint64_t)v81, v67);
    v68((uint64_t)v85, v70);
    v65((uint64_t)v73, v67);
    return ((uint64_t (*)(char *, uint64_t))v68)(v83, v70);
  }
  else
  {
    memset(v94, 0, 32);
    return sub_10000B070((uint64_t)v94, (uint64_t *)&unk_1002F02C0);
  }
}

uint64_t sub_100192AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for Locale();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v8;
  v5[10] = v7;
  return _swift_task_switch(sub_100192BD4, v8, v7);
}

uint64_t sub_100192BD4()
{
  v0[11] = [objc_allocWithZone((Class)type metadata accessor for OnBoardingPresenter()) init];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  void *v1 = v0;
  v1[1] = sub_100192C88;
  uint64_t v2 = v0[2];
  return sub_10017FAAC(v2);
}

uint64_t sub_100192C88()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100192DA8, v3, v2);
}

uint64_t sub_100192DA8()
{
  uint64_t v1 = v0[11];
  swift_release();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_initialLocalePair);
  uint64_t v3 = (void *)v0[11];
  if (v2)
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[5];
    os_log_type_t v33 = (void *)v0[11];
    uint64_t v35 = *(void **)(v0[3] + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_conversation);
    id v32 = v2;
    id v8 = [v32 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v9(v5, v4, v6);
    id v10 = v35;
    static Published.subscript.setter();
    sub_10008C964();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v34(v4, v6);
    id v11 = [v32 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    swift_getKeyPath();
    swift_getKeyPath();
    v9(v5, v4, v6);
    id v12 = v10;
    static Published.subscript.setter();
    sub_10008C99C();
    v34(v4, v6);
    id v13 = [v32 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v14 = self;
    id v15 = [v14 standardUserDefaults];
    Locale.identifier.getter();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    [v15 setObject:v16 forKey:v17];

    v34(v4, v6);
    id v18 = [v32 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    id v19 = [v14 standardUserDefaults];
    Locale.identifier.getter();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v21 = String._bridgeToObjectiveC()();
    [v19 setObject:v20 forKey:v21];

    Locale.identifier.getter();
    sub_1001A52A0();
    v34(v4, v6);
    id v22 = [v32 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    id v23 = [v14 standardUserDefaults];
    Locale.identifier.getter();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v25 = String._bridgeToObjectiveC()();
    [v23 setObject:v24 forKey:v25];

    v34(v4, v6);
    id v26 = [v32 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    id v27 = [v14 standardUserDefaults];
    Locale.identifier.getter();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v29 = String._bridgeToObjectiveC()();
    [v27 setObject:v28 forKey:v29];

    v34(v4, v6);
    uint64_t v3 = v32;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  id v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

id sub_1001932E4()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window] = 0;
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_conversation;
  id v2 = objc_allocWithZone((Class)type metadata accessor for ConversationManager());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_context;
  type metadata accessor for ConversationContext(0);
  swift_allocObject();
  *(void *)&v3[v4] = sub_100074360();
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_sceneContext;
  type metadata accessor for SceneContext();
  swift_allocObject();
  *(void *)&v3[v5] = sub_10018EDE4();
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_sharedTranslationOptions;
  *(void *)&v3[v6] = [objc_allocWithZone((Class)type metadata accessor for SharedTranslationOptions()) init];
  uint64_t v7 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_store;
  type metadata accessor for TranslationStoreCoreData();
  swift_allocObject();
  *(void *)&v3[v7] = TranslationStoreCoreData.init(inMemoryOnly:)();
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___translationSession] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___favoritesImporter] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate____lazy_storage___sessionManager] = 0;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SceneDelegate();
  return [super init];
}

id sub_100193454()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SceneDelegate();
  [super dealloc];
}

uint64_t type metadata accessor for SceneDelegate()
{
  return self;
}

uint64_t sub_100193568(unint64_t a1, uint64_t a2, void (**a3)(char *, uint64_t), void (*a4)(uint64_t), uint64_t a5)
{
  v70[1] = a5;
  uint64_t v71 = a4;
  uint64_t v78 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  id v10 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    id v12 = (uint64_t *)(a2 + 16);
    if (v11) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  id v12 = (uint64_t *)(a2 + 16);
  if (!v11) {
    goto LABEL_11;
  }
LABEL_3:
  if (v11 < 1) {
    goto LABEL_53;
  }
  uint64_t v74 = a3;
  uint64_t v75 = v8;
  uint64_t v13 = 0;
  unint64_t v76 = a1 & 0xC000000000000001;
  int64_t v77 = a1;
  int64_t v14 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v15 = v11;
  uint64_t v16 = v78;
  do
  {
    if (v76) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(a1 + 8 * v13 + 32);
    }
    id v18 = v17;
    ++v13;
    id v19 = [v17 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::Int v20 = Locale.identifier.getter();
    Swift::Int v22 = v21;
    id v23 = *v14;
    (*v14)(v10, v16);
    swift_beginAccess();
    sub_100195EB0(v79, v20, v22);
    swift_endAccess();
    swift_bridgeObjectRelease();
    id v24 = [v18 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::Int v25 = Locale.identifier.getter();
    Swift::Int v27 = v26;
    v23(v10, v16);
    swift_beginAccess();
    sub_100195EB0(v79, v25, v27);
    swift_endAccess();

    swift_bridgeObjectRelease();
    a1 = v77;
  }
  while (v15 != v13);
  swift_bridgeObjectRelease();
  a3 = v74;
  uint64_t v8 = v75;
LABEL_12:
  NSString v28 = (uint64_t *)(a3 + 2);
  swift_beginAccess();
  uint64_t v29 = *v12;
  uint64_t v30 = *(void *)(*v12 + 56);
  uint64_t v72 = *v12 + 56;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  int64_t v73 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v74 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v75 = v29;
  swift_bridgeObjectRetain();
  int64_t v34 = 0;
  if (v33) {
    goto LABEL_31;
  }
LABEL_17:
  int64_t v35 = v34 + 1;
  if (__OFADD__(v34, 1)) {
    goto LABEL_50;
  }
  if (v35 >= v73) {
    goto LABEL_47;
  }
  unint64_t v36 = *(void *)(v72 + 8 * v35);
  ++v34;
  if (!v36)
  {
    int64_t v34 = v35 + 1;
    if (v35 + 1 >= v73) {
      goto LABEL_47;
    }
    unint64_t v36 = *(void *)(v72 + 8 * v34);
    if (!v36)
    {
      int64_t v34 = v35 + 2;
      if (v35 + 2 >= v73) {
        goto LABEL_47;
      }
      unint64_t v36 = *(void *)(v72 + 8 * v34);
      if (!v36)
      {
        int64_t v37 = v35 + 3;
        if (v37 < v73)
        {
          unint64_t v36 = *(void *)(v72 + 8 * v37);
          if (v36)
          {
            int64_t v34 = v37;
            goto LABEL_30;
          }
          while (1)
          {
            int64_t v34 = v37 + 1;
            if (__OFADD__(v37, 1)) {
              goto LABEL_52;
            }
            if (v34 >= v73) {
              break;
            }
            unint64_t v36 = *(void *)(v72 + 8 * v34);
            ++v37;
            if (v36) {
              goto LABEL_30;
            }
          }
        }
LABEL_47:
        swift_release();
        swift_beginAccess();
        uint64_t v68 = swift_bridgeObjectRetain();
        v71(v68);
        return swift_bridgeObjectRelease();
      }
    }
  }
LABEL_30:
  unint64_t v33 = (v36 - 1) & v36;
  for (unint64_t i = __clz(__rbit64(v36)) + (v34 << 6); ; unint64_t i = v39 | (v34 << 6))
  {
    uint64_t v40 = (Swift::Int *)(*(void *)(v75 + 48) + 16 * i);
    Swift::Int v41 = *v40;
    Swift::Int v42 = v40[1];
    v79[0] = *v40;
    v79[1] = v42;
    uint64_t v80 = 95;
    unint64_t v81 = 0xE100000000000000;
    sub_10000C350();
    swift_bridgeObjectRetain();
    uint64_t v43 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v43[2]) {
      break;
    }
    uint64_t v44 = v43[4];
    uint64_t v45 = (void *)v43[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v46 = [self currentLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    v47._countAndFlagsBits = v44;
    v47._object = v45;
    object = Locale.localizedString(forIdentifier:)(v47).value._object;
    swift_bridgeObjectRelease();
    (*v74)(v10, v78);
    if (!object)
    {
      swift_bridgeObjectRelease();
      if (!v33) {
        goto LABEL_17;
      }
      goto LABEL_31;
    }
    unint64_t v76 = v33;
    int64_t v77 = v34;
    uint64_t v49 = v10;
    Swift::String v50 = String.lowercased()();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v80 = *v28;
    uint64_t v52 = v80;
    BOOL v53 = v28;
    *NSString v28 = 0x8000000000000000;
    unint64_t v55 = sub_1002036A8(v50._countAndFlagsBits, (uint64_t)v50._object);
    uint64_t v56 = *(void *)(v52 + 16);
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57)) {
      goto LABEL_49;
    }
    char v59 = v54;
    if (*(void *)(v52 + 24) >= v58)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v62 = (void *)v80;
        if (v54) {
          goto LABEL_41;
        }
      }
      else
      {
        sub_100207280();
        uint64_t v62 = (void *)v80;
        if (v59) {
          goto LABEL_41;
        }
      }
    }
    else
    {
      sub_1002058DC(v58, isUniquelyReferenced_nonNull_native);
      unint64_t v60 = sub_1002036A8(v50._countAndFlagsBits, (uint64_t)v50._object);
      if ((v59 & 1) != (v61 & 1)) {
        goto LABEL_54;
      }
      unint64_t v55 = v60;
      uint64_t v62 = (void *)v80;
      if (v59)
      {
LABEL_41:
        uint64_t v63 = (Swift::Int *)(v62[7] + 16 * v55);
        swift_bridgeObjectRelease();
        *uint64_t v63 = v41;
        v63[1] = v42;
        goto LABEL_45;
      }
    }
    v62[(v55 >> 6) + 8] |= 1 << v55;
    *(Swift::String *)(v62[6] + 16 * v55) = v50;
    uint64_t v64 = (Swift::Int *)(v62[7] + 16 * v55);
    *uint64_t v64 = v41;
    v64[1] = v42;
    uint64_t v65 = v62[2];
    BOOL v66 = __OFADD__(v65, 1);
    uint64_t v67 = v65 + 1;
    if (v66) {
      goto LABEL_51;
    }
    v62[2] = v67;
    swift_bridgeObjectRetain();
LABEL_45:
    NSString v28 = v53;
    *BOOL v53 = (uint64_t)v62;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v10 = v49;
    unint64_t v33 = v76;
    int64_t v34 = v77;
    if (!v76) {
      goto LABEL_17;
    }
LABEL_31:
    unint64_t v39 = __clz(__rbit64(v33));
    v33 &= v33 - 1;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100193C14(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F9760);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100193C98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (!a1)
  {
    uint64_t v12 = type metadata accessor for Locale();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a3, 1, 1, v12);
  }
  uint64_t v17 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v18 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  for (v6 &= v6 - 1; ; uint64_t v6 = (v10 - 1) & v10)
  {
    sub_10000C350();
    swift_bridgeObjectRetain();
    if (StringProtocol.contains<A>(_:)())
    {
      Locale.init(identifier:)();
      swift_release();
      uint64_t v14 = type metadata accessor for Locale();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 0, 1, v14);
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v18) {
      goto LABEL_27;
    }
    uint64_t v10 = *(void *)(v17 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v18) {
        goto LABEL_27;
      }
      uint64_t v10 = *(void *)(v17 + 8 * v8);
      if (!v10)
      {
        int64_t v8 = v9 + 2;
        if (v9 + 2 >= v18) {
          goto LABEL_27;
        }
        uint64_t v10 = *(void *)(v17 + 8 * v8);
        if (!v10) {
          break;
        }
      }
    }
LABEL_19:
    ;
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v18)
  {
LABEL_27:
    swift_release();
    uint64_t v15 = type metadata accessor for Locale();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  uint64_t v10 = *(void *)(v17 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v18) {
      goto LABEL_27;
    }
    uint64_t v10 = *(void *)(v17 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_19;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100193F7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v155 = a7;
  uint64_t v146 = a6;
  uint64_t v140 = a5;
  uint64_t v157 = a3;
  uint64_t v149 = type metadata accessor for Notification();
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v147 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v13 - 8);
  Swift::String v137 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = type metadata accessor for Locale();
  uint64_t v162 = *(void *)(v151 - 8);
  uint64_t v15 = __chkstk_darwin(v151);
  uint64_t v139 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v138 = (char *)&v132 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  char v142 = (char *)&v132 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v153 = (char *)&v132 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v154 = (char *)&v132 - v24;
  __chkstk_darwin(v23);
  uint64_t v141 = (char *)&v132 - v25;
  uint64_t v26 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v136 = (char *)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v145 = (uint64_t)&v132 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v144 = (uint64_t)&v132 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v152 = (uint64_t)&v132 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v150 = (uint64_t)&v132 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  unint64_t v39 = (char *)&v132 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  Swift::Int v42 = (char *)&v132 - v41;
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v45 = (char *)&v132 - v44;
  __chkstk_darwin(v43);
  Swift::String v47 = (char *)&v132 - v46;
  if (qword_1002EE5B0 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  uint64_t v49 = sub_100011554(v48, (uint64_t)qword_10030E918);
  uint64_t v158 = a1;
  sub_10000C3A4(a1, (uint64_t)v47, (uint64_t *)&unk_1002F4110);
  uint64_t v159 = a2;
  sub_10000C3A4(a2, (uint64_t)v45, (uint64_t *)&unk_1002F4110);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v143 = v49;
  Swift::String v50 = Logger.logObject.getter();
  int v51 = static os_log_type_t.default.getter();
  BOOL v52 = os_log_type_enabled(v50, (os_log_type_t)v51);
  unint64_t v161 = a4;
  uint64_t v53 = v160;
  unint64_t v156 = a8;
  if (v52)
  {
    int v134 = v51;
    os_log_t v135 = v50;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v133 = swift_slowAlloc();
    *(void *)&v167[0] = v133;
    *(_DWORD *)uint64_t v54 = 136447235;
    sub_10000C3A4((uint64_t)v47, (uint64_t)v42, (uint64_t *)&unk_1002F4110);
    uint64_t v55 = v162;
    uint64_t v56 = v151;
    uint64_t v132 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48);
    if (v132(v42, 1, v151) == 1)
    {
      sub_10000B070((uint64_t)v42, (uint64_t *)&unk_1002F4110);
      unint64_t v57 = 0xE300000000000000;
      uint64_t v58 = 7104878;
    }
    else
    {
      uint64_t v58 = Locale.identifier.getter();
      unint64_t v57 = v60;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
    }
    *(void *)&long long v165 = sub_100202FD4(v58, v57, (uint64_t *)v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000B070((uint64_t)v47, (uint64_t *)&unk_1002F4110);
    *(_WORD *)(v54 + 12) = 2082;
    sub_10000C3A4((uint64_t)v45, (uint64_t)v39, (uint64_t *)&unk_1002F4110);
    if (v132(v39, 1, v56) == 1)
    {
      sub_10000B070((uint64_t)v39, (uint64_t *)&unk_1002F4110);
      unint64_t v61 = 0xE300000000000000;
      uint64_t v62 = 7104878;
      unint64_t v63 = v161;
      char v59 = (void *)v162;
    }
    else
    {
      uint64_t v62 = Locale.identifier.getter();
      unint64_t v61 = v64;
      char v59 = (void *)v162;
      (*(void (**)(char *, uint64_t))(v162 + 8))(v39, v56);
      unint64_t v63 = v161;
    }
    *(void *)&long long v165 = sub_100202FD4(v62, v61, (uint64_t *)v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000B070((uint64_t)v45, (uint64_t *)&unk_1002F4110);
    *(_WORD *)(v54 + 22) = 2050;
    if (v63)
    {
      uint64_t v65 = v157;
      uint64_t v66 = String.count.getter();
      swift_bridgeObjectRelease();
      unint64_t v67 = v63;
    }
    else
    {
      uint64_t v66 = 0;
      unint64_t v67 = 0xE300000000000000;
      uint64_t v65 = 7104878;
    }
    *(void *)&long long v165 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 32) = 2085;
    swift_bridgeObjectRetain();
    *(void *)&long long v165 = sub_100202FD4(v65, v67, (uint64_t *)v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v54 + 42) = 2082;
    if (v156) {
      uint64_t v68 = v155;
    }
    else {
      uint64_t v68 = 7104878;
    }
    if (v156) {
      unint64_t v69 = v156;
    }
    else {
      unint64_t v69 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)&long long v165 = sub_100202FD4(v68, v69, (uint64_t *)v167);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v70 = v135;
    _os_log_impl((void *)&_mh_execute_header, v135, (os_log_type_t)v134, "openURL sourceLanguage: %{public}s; targetLanguage: %{public}s; text (length: %{public}ld: %{sensitive}s; linkSource: %{public}s",
      (uint8_t *)v54,
      0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v53 = v160;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10000B070((uint64_t)v47, (uint64_t *)&unk_1002F4110);
    sub_10000B070((uint64_t)v45, (uint64_t *)&unk_1002F4110);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    char v59 = (void *)v162;
    uint64_t v56 = v151;
  }
  uint64_t v71 = *(void *)(v53 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_context);
  swift_getKeyPath();
  swift_getKeyPath();
  v167[0] = 0uLL;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v151 = v71;
  sub_100076540();
  uint64_t v72 = v150;
  sub_10000C3A4(v158, v150, (uint64_t *)&unk_1002F4110);
  uint64_t v73 = (uint64_t)(v59 + 6);
  uint64_t v74 = v59[6];
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v74)(v72, 1, v56) == 1)
  {
    sub_10000B070(v72, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))v59[4];
    os_log_t v135 = v74;
    unint64_t v76 = v141;
    v75(v141, v72, v56);
    int64_t v77 = *(void **)(v53 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_conversation);
    uint64_t v78 = (void (*)(char *, char *, uint64_t))v59[2];
    uint64_t v79 = v73;
    uint64_t v80 = v56;
    unint64_t v81 = v154;
    v78(v154, v76, v80);
    swift_getKeyPath();
    swift_getKeyPath();
    v78(v153, v81, v80);
    char v59 = (void *)v162;
    v77;
    static Published.subscript.setter();
    sub_10008C964();
    uint64_t v82 = (void (*)(char *, uint64_t))v59[1];
    uint64_t v83 = v81;
    uint64_t v56 = v80;
    uint64_t v73 = v79;
    v82(v83, v56);
    uint64_t v84 = v76;
    uint64_t v74 = v135;
    v82(v84, v56);
  }
  uint64_t v85 = v152;
  sub_10000C3A4(v159, v152, (uint64_t *)&unk_1002F4110);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v74)(v85, 1, v56) == 1)
  {
    uint64_t result = sub_10000B070(v85, (uint64_t *)&unk_1002F4110);
    if (!v161) {
      return result;
    }
  }
  else
  {
    uint64_t v87 = (void (*)(char *, uint64_t, uint64_t))v59[4];
    uint64_t v152 = v73;
    uint64_t v88 = v142;
    v87(v142, v85, v56);
    unsigned int v89 = *(void **)(v160 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_conversation);
    uint64_t v90 = (void (*)(char *, char *, uint64_t))v59[2];
    uint64_t v91 = v154;
    v90(v154, v88, v56);
    swift_getKeyPath();
    swift_getKeyPath();
    v90(v153, v91, v56);
    v89;
    static Published.subscript.setter();
    sub_10008C99C();
    uint64_t v92 = *(void (**)(char *, uint64_t))(v162 + 8);
    v92(v91, v56);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v92)(v88, v56);
    if (!v161) {
      return result;
    }
  }
  uint64_t v93 = Logger.logObject.getter();
  os_log_type_t v94 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v93, v94))
  {
    char v95 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v95 = 0;
    _os_log_impl((void *)&_mh_execute_header, v93, v94, "Asked to open translation from an URL.", v95, 2u);
    swift_slowDealloc();
  }

  unint64_t v96 = sub_1001FF548((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v165) = 0;
  sub_10006E758();
  AnyHashable.init<A>(_:)();
  unint64_t v166 = (objc_class *)&type metadata for String;
  *(void *)&long long v165 = v157;
  *((void *)&v165 + 1) = v161;
  sub_100048EC8(&v165, &v164);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v163 = v96;
  sub_100206168(&v164, (uint64_t)v167, isUniquelyReferenced_nonNull_native);
  unint64_t v98 = v163;
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v167);
  LOBYTE(v165) = 5;
  AnyHashable.init<A>(_:)();
  uint64_t v99 = v162;
  BOOL v100 = v156
      && (v155 == 0x697463416576696CLL && v156 == 0xEC00000079746976
       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  unint64_t v166 = (objc_class *)&type metadata for Bool;
  LOBYTE(v165) = v100;
  sub_100048EC8(&v165, &v164);
  char v101 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v163 = v98;
  sub_100206168(&v164, (uint64_t)v167, v101);
  unint64_t v102 = v163;
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v167);
  uint64_t v103 = v144;
  sub_10000C3A4(v158, v144, (uint64_t *)&unk_1002F4110);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v74)(v103, 1, v56) == 1)
  {
    sub_10000B070(v103, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    uint64_t v104 = v138;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v138, v103, v56);
    LOBYTE(v165) = 2;
    AnyHashable.init<A>(_:)();
    uint64_t v105 = Locale.ltIdentifier.getter();
    unint64_t v166 = (objc_class *)&type metadata for String;
    *(void *)&long long v165 = v105;
    *((void *)&v165 + 1) = v106;
    sub_100048EC8(&v165, &v164);
    char v107 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v163 = v102;
    sub_100206168(&v164, (uint64_t)v167, v107);
    unint64_t v102 = v163;
    swift_bridgeObjectRelease();
    sub_10006E7AC((uint64_t)v167);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v104, v56);
  }
  uint64_t v108 = v145;
  sub_10000C3A4(v159, v145, (uint64_t *)&unk_1002F4110);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v74)(v108, 1, v56) == 1)
  {
    sub_10000B070(v108, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    uint64_t v109 = v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 32))(v139, v108, v56);
    LOBYTE(v165) = 3;
    AnyHashable.init<A>(_:)();
    uint64_t v110 = Locale.ltIdentifier.getter();
    unint64_t v166 = (objc_class *)&type metadata for String;
    *(void *)&long long v165 = v110;
    *((void *)&v165 + 1) = v111;
    sub_100048EC8(&v165, &v164);
    char v112 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v163 = v102;
    sub_100206168(&v164, (uint64_t)v167, v112);
    unint64_t v102 = v163;
    swift_bridgeObjectRelease();
    sub_10006E7AC((uint64_t)v167);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v109, v56);
  }
  uint64_t v113 = v146;
  if (v146)
  {
    LOBYTE(v165) = 1;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    unint64_t v166 = (objc_class *)&type metadata for String;
    *(void *)&long long v165 = v140;
    *((void *)&v165 + 1) = v113;
    sub_100048EC8(&v165, &v164);
    char v114 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v163 = v102;
    sub_100206168(&v164, (uint64_t)v167, v114);
    swift_bridgeObjectRelease();
    sub_10006E7AC((uint64_t)v167);
  }
  else
  {
    uint64_t v115 = (objc_class *)type metadata accessor for TypedInputInstrumentation();
    id v116 = objc_allocWithZone(v115);
    uint64_t v117 = sub_100237654(2);
    *(void *)&v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_characterCount] = String.count.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v118 = (uint64_t)v136;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v99 + 56))(v118, 0, 1, v56);
    uint64_t v119 = (uint64_t)&v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_sourceLocale];
    swift_beginAccess();
    sub_1000344BC(v118, v119, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    id v120 = sub_10008CD5C();
    uint64_t v121 = *(void **)&v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair];
    *(void *)&v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair] = v120;

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_airplaneModeEnabled] = v167[0];
    sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
    uint64_t v122 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
    LOBYTE(v119) = NSUserDefaults.onDeviceOnly.getter();

    v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_onDeviceModeEnabled] = v119 & 1;
    uint64_t v123 = (uint64_t)v137;
    Date.init()();
    uint64_t v124 = type metadata accessor for Date();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v123, 0, 1, v124);
    uint64_t v125 = (uint64_t)&v117[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_start];
    swift_beginAccess();
    sub_1000344BC(v123, v125, &qword_1002F8BA0);
    swift_endAccess();
    LOBYTE(v165) = 4;
    AnyHashable.init<A>(_:)();
    unint64_t v166 = v115;
    *(void *)&long long v165 = v117;
    sub_100048EC8(&v165, &v164);
    uint64_t v126 = v117;
    char v127 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v163 = v102;
    sub_100206168(&v164, (uint64_t)v167, v127);
    swift_bridgeObjectRelease();
    sub_10006E7AC((uint64_t)v167);
  }
  if (qword_1002EE578 != -1) {
    swift_once();
  }
  memset(v167, 0, sizeof(v167));
  id v128 = (id)qword_10030E6F8;
  uint64_t v129 = v147;
  Notification.init(name:object:userInfo:)();
  id v130 = [self defaultCenter];
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  [v130 postNotification:isa];

  return (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v129, v149);
}

uint64_t sub_100195384(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v59 = a7;
  uint64_t v60 = a8;
  uint64_t v51 = a5;
  BOOL v52 = (void *)a6;
  uint64_t v50 = a4;
  uint64_t v58 = a12;
  uint64_t v55 = a10;
  uint64_t v56 = a11;
  uint64_t v54 = a9;
  uint64_t v62 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v65 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  unint64_t v61 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  __chkstk_darwin(v15);
  unint64_t v57 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = __chkstk_darwin(v17 - 8);
  uint64_t v21 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v49 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v49 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v49 - v28;
  sub_100193C98(v50, a1, (uint64_t)&v49 - v28);
  uint64_t v53 = v27;
  sub_100193C98((uint64_t)v52, a1, (uint64_t)v27);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  BOOL v52 = (void *)static OS_dispatch_queue.main.getter();
  sub_10000C3A4((uint64_t)v29, (uint64_t)v24, (uint64_t *)&unk_1002F4110);
  sub_10000C3A4((uint64_t)v27, (uint64_t)v21, (uint64_t *)&unk_1002F4110);
  uint64_t v30 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v31 = (v30 + 24) & ~v30;
  uint64_t v32 = (v19 + v30 + v31) & ~v30;
  unint64_t v33 = (v19 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = a2;
  sub_1000CA158((uint64_t)v24, v35 + v31);
  sub_1000CA158((uint64_t)v21, v35 + v32);
  uint64_t v36 = (void *)(v35 + v33);
  uint64_t v37 = v60;
  *uint64_t v36 = v59;
  v36[1] = v37;
  uint64_t v38 = (void *)(v35 + v34);
  uint64_t v39 = v55;
  *uint64_t v38 = v54;
  v38[1] = v39;
  uint64_t v40 = (void *)(v35 + ((v34 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v41 = v58;
  *uint64_t v40 = v56;
  v40[1] = v41;
  aBlock[4] = sub_10019D32C;
  aBlock[5] = v35;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002D1720;
  Swift::Int v42 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v43 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v44 = v57;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10019CD38((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  uint64_t v45 = v61;
  uint64_t v46 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  Swift::String v47 = v52;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v42);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
  sub_10000B070((uint64_t)v53, (uint64_t *)&unk_1002F4110);
  return sub_10000B070((uint64_t)v29, (uint64_t *)&unk_1002F4110);
}

uint64_t sub_100195884(void *a1, void *a2)
{
  if (![a1 selectedIndex])
  {
    id v4 = [a1 selectedViewController];
    if (!v4
      || (uint64_t v5 = v4,
          sub_10000B0CC(0, (unint64_t *)&unk_1002F96C0),
          id v6 = a2,
          char v7 = static NSObject.== infix(_:_:)(),
          v6,
          v6,
          v5,
          (v7 & 1) == 0))
    {
      sub_10009073C(0, 0, 0);
    }
  }
  return 1;
}

uint64_t sub_100195A2C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100195A40()
{
  return sub_1000694BC();
}

uint64_t sub_100195A54@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100195A68()
{
  return sub_1000694BC();
}

void sub_100195A7C(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 stringForKey:v4];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_100195B04(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setObject:v3 forKey:v4];
  swift_unknownObjectRelease();
}

uint64_t sub_100195BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v7 - 8);
  int64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C3A4(a1, (uint64_t)v9, &qword_1002F8BA0);
  return a5(v9);
}

uint64_t sub_100195C64(uint64_t a1, void *a2)
{
  NSString v3 = v2;
  uint64_t v6 = *v2;
  Hasher.init(_seed:)();
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::UInt v9 = a2[6];
  Hasher._combine(_:)(v9);
  Swift::UInt v10 = a2[7];
  Hasher._combine(_:)(v10);
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v6 + 56;
  uint64_t v38 = (uint64_t)a2;
  uint64_t v39 = a1;
  uint64_t v37 = v3;
  if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v6 + 48);
    while (1)
    {
      uint64_t v18 = (void *)(v16 + 88 * v13);
      uint64_t v20 = v18[6];
      uint64_t v19 = v18[7];
      BOOL v21 = v18[2] == v7 && v18[3] == v8;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)()) && v20 == v9 && v19 == v10) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000C178C(v38);
    uint64_t v26 = *(void *)(*v37 + 48) + 88 * v13;
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
    uint64_t v29 = *(void *)(v26 + 24);
    uint64_t v30 = *(void *)(v26 + 32);
    uint64_t v31 = *(void *)(v26 + 40);
    char v32 = *(unsigned char *)(v26 + 64);
    unint64_t v33 = *(void **)(v26 + 72);
    unint64_t v34 = *(void **)(v26 + 80);
    *(void *)uint64_t v39 = *(void *)v26;
    *(void *)(v39 + 8) = v27;
    *(void *)(v39 + 16) = v28;
    *(void *)(v39 + 24) = v29;
    *(void *)(v39 + 32) = v30;
    *(void *)(v39 + 40) = v31;
    *(_OWORD *)(v39 + 48) = *(_OWORD *)(v26 + 48);
    *(unsigned char *)(v39 + 64) = v32;
    *(void *)(v39 + 72) = v33;
    *(void *)(v39 + 80) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v35 = v33;
    id v36 = v34;
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v37;
    void *v37 = 0x8000000000000000;
    sub_1000C172C(v38);
    sub_10019732C(v38, v13, isUniquelyReferenced_nonNull_native);
    void *v37 = v40;
    swift_bridgeObjectRelease();
    long long v23 = *(_OWORD *)(v38 + 48);
    *(_OWORD *)(v39 + 32) = *(_OWORD *)(v38 + 32);
    *(_OWORD *)(v39 + 48) = v23;
    *(_OWORD *)(v39 + 64) = *(_OWORD *)(v38 + 64);
    *(void *)(v39 + 80) = *(void *)(v38 + 80);
    long long v24 = *(_OWORD *)(v38 + 16);
    uint64_t result = 1;
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v38;
    *(_OWORD *)(v39 + 16) = v24;
  }
  return result;
}

uint64_t sub_100195EB0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *NSString v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10019751C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *NSString v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100196060(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v16;
    *uint64_t v16 = 0x8000000000000000;
    sub_1001976B8(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v16 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_25;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE800000000000000;
    unint64_t v10 = 0x6E776F44776F6C73;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0x74786554646E6966;
        break;
      case 2:
        unint64_t v9 = 0x8000000100259F30;
        unint64_t v10 = 0xD000000000000013;
        break;
      case 3:
        unint64_t v10 = 0xD000000000000018;
        unint64_t v9 = 0x8000000100259F50;
        break;
      case 4:
        unint64_t v10 = 0xD000000000000017;
        unint64_t v9 = 0x8000000100259F70;
        break;
      default:
        break;
    }
    unint64_t v11 = 0xE800000000000000;
    unint64_t v12 = 0x6E776F44776F6C73;
    switch((char)a2)
    {
      case 1:
        if (v10 == 0x74786554646E6966) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v11 = 0x8000000100259F30;
        if (v10 != 0xD000000000000013) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        unint64_t v12 = 0xD000000000000018;
        unint64_t v11 = 0x8000000100259F50;
        goto LABEL_14;
      case 4:
        unint64_t v11 = 0x8000000100259F70;
        if (v10 != 0xD000000000000017) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v10 != v12) {
          goto LABEL_16;
        }
LABEL_15:
        if (v9 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
LABEL_16:
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v16 + 48) + v7);
LABEL_25:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_100196428(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Task.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = v5 + 56;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
    Swift::Int v15 = a1;
    goto LABEL_8;
  }
  swift_retain();
  char v10 = static Task.== infix(_:_:)();
  swift_release();
  if ((v10 & 1) == 0)
  {
    unint64_t v8 = (v8 + 1) & ~v7;
    Swift::Int v15 = a1;
    if ((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      while (1)
      {
        swift_retain();
        char v11 = static Task.== infix(_:_:)();
        swift_release();
        if (v11) {
          break;
        }
        unint64_t v8 = (v8 + 1) & ~v7;
        if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          goto LABEL_8;
        }
      }
      a1 = v15;
      goto LABEL_10;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v13 = swift_retain();
    sub_100197A80(v13, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v16;
    swift_bridgeObjectRelease();
    void *v15 = a2;
    return 1;
  }
LABEL_10:
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
  swift_retain();
  return 0;
}

uint64_t sub_10019663C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9888);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    unint64_t v34 = v1;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    id v36 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v35 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v37 = v2;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        int64_t v42 = v10;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v35) {
          goto LABEL_33;
        }
        unint64_t v16 = v36[v15];
        int64_t v17 = v10 + 1;
        if (!v16)
        {
          int64_t v17 = v10 + 2;
          if (v10 + 2 >= v35) {
            goto LABEL_33;
          }
          unint64_t v16 = v36[v17];
          if (!v16)
          {
            int64_t v17 = v10 + 3;
            if (v10 + 3 >= v35) {
              goto LABEL_33;
            }
            unint64_t v16 = v36[v17];
            if (!v16)
            {
              uint64_t v18 = v10 + 4;
              if (v10 + 4 >= v35)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v34;
                uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
                if (v33 > 63) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v36 = -1 << v33;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v36[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v35) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v36[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v10 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        int64_t v42 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 88 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 16);
      uint64_t v22 = *(void *)(v19 + 24);
      uint64_t v23 = *(void *)(v19 + 32);
      uint64_t v39 = *(void *)(v19 + 40);
      uint64_t v40 = *(void *)(v19 + 8);
      Swift::UInt v24 = *(void *)(v19 + 48);
      Swift::UInt v25 = *(void *)(v19 + 56);
      char v38 = *(unsigned char *)(v19 + 64);
      long long v41 = *(_OWORD *)(v19 + 72);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Hasher._combine(_:)(v24);
      Hasher._combine(_:)(v25);
      uint64_t result = Hasher._finalize()();
      uint64_t v26 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 88 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v40;
      *(void *)(v12 + 16) = v21;
      *(void *)(v12 + 24) = v22;
      *(void *)(v12 + 32) = v23;
      *(void *)(v12 + 40) = v39;
      *(void *)(v12 + 48) = v24;
      *(void *)(v12 + 56) = v25;
      *(unsigned char *)(v12 + 64) = v38;
      *(_OWORD *)(v12 + 72) = v41;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v37;
      int64_t v10 = v42;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1001969CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9770);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100196CAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9880);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x100197024);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100197038()
{
  uint64_t v1 = *v0;
  sub_100007620(&qword_1002F9878);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v26 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v12 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v7) {
          goto LABEL_33;
        }
        unint64_t v15 = v26[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v7) {
            goto LABEL_33;
          }
          unint64_t v15 = v26[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v7) {
              goto LABEL_33;
            }
            unint64_t v15 = v26[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v7)
              {
LABEL_33:
                swift_release();
                uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
                if (v25 > 63) {
                  bzero(v26, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v26 = -1 << v25;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v15 = v26[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v7) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v26[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v13);
      Hasher.init(_seed:)();
      Task.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v17;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

Swift::Int sub_10019732C(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v5 = (void *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  Swift::Int v31 = result;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_10019663C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_100197C88();
      goto LABEL_21;
    }
    sub_100198398();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  uint64_t v9 = v5[2];
  uint64_t v10 = v5[3];
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::UInt v11 = v5[6];
  Hasher._combine(_:)(v11);
  Swift::UInt v12 = v5[7];
  Hasher._combine(_:)(v12);
  uint64_t result = Hasher._finalize()();
  uint64_t v13 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v13;
  uint64_t v14 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v15 = ~v13;
    uint64_t v16 = *(void *)(v8 + 48);
    do
    {
      uint64_t v18 = (void *)(v16 + 88 * a2);
      uint64_t result = v18[2];
      uint64_t v20 = v18[6];
      uint64_t v19 = v18[7];
      BOOL v21 = result == v9 && v18[3] == v10;
      if (v21 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        if (v20 == v11 && v19 == v12) {
          goto LABEL_24;
        }
      }
      a2 = (a2 + 1) & v15;
    }
    while (((*(void *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_21:
  uint64_t v22 = *v30;
  *(void *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v23 = *(void *)(v22 + 48) + 88 * a2;
  long long v24 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v31;
  *(_OWORD *)(v23 + 16) = v24;
  *(void *)(v23 + 80) = *(void *)(v31 + 80);
  long long v25 = *(_OWORD *)(v31 + 64);
  long long v26 = *(_OWORD *)(v31 + 32);
  *(_OWORD *)(v23 + 48) = *(_OWORD *)(v31 + 48);
  *(_OWORD *)(v23 + 64) = v25;
  *(_OWORD *)(v23 + 32) = v26;
  uint64_t v27 = *(void *)(v22 + 16);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (!v28)
  {
    *(void *)(v22 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_10019751C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1001969CC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_100197EA4();
      goto LABEL_22;
    }
    sub_10019870C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_1001976B8(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_100196CAC();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_100198058();
        goto LABEL_28;
      }
      sub_1001989BC();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE800000000000000;
        unint64_t v12 = 0x6E776F44776F6C73;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0x74786554646E6966;
            break;
          case 2:
            unint64_t v11 = 0x8000000100259F30;
            unint64_t v12 = 0xD000000000000013;
            break;
          case 3:
            unint64_t v12 = 0xD000000000000018;
            unint64_t v11 = 0x8000000100259F50;
            break;
          case 4:
            unint64_t v12 = 0xD000000000000017;
            unint64_t v11 = 0x8000000100259F70;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE800000000000000;
        unint64_t v14 = 0x6E776F44776F6C73;
        switch(v5)
        {
          case 1:
            if (v12 != 0x74786554646E6966) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 2:
            unint64_t v13 = 0x8000000100259F30;
            unint64_t v14 = 0xD000000000000013;
            goto LABEL_21;
          case 3:
            unint64_t v13 = 0x8000000100259F50;
            if (v12 != 0xD000000000000018) {
              goto LABEL_23;
            }
            goto LABEL_22;
          case 4:
            unint64_t v13 = 0x8000000100259F70;
            if (v12 != 0xD000000000000017) {
              goto LABEL_23;
            }
            goto LABEL_22;
          default:
LABEL_21:
            if (v12 != v14) {
              goto LABEL_23;
            }
LABEL_22:
            if (v11 == v13) {
              goto LABEL_31;
            }
LABEL_23:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_32;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_28:
  uint64_t v16 = *v20;
  *(void *)(*v20 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v21;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x100197A44);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

Swift::Int sub_100197A80(Swift::Int result, unint64_t i, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_13;
  }
  if (a3)
  {
    sub_100197038();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1001981EC();
      goto LABEL_13;
    }
    sub_100198D14();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Task.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t i = result & ~v9;
  uint64_t v10 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    swift_retain();
    char v11 = static Task.== infix(_:_:)();
    uint64_t result = swift_release();
    if (v11) {
      goto LABEL_16;
    }
    uint64_t v12 = ~v9;
    for (unint64_t i = (i + 1) & v12; ((*(void *)(v10 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
    {
      swift_retain();
      char v13 = static Task.== infix(_:_:)();
      uint64_t result = swift_release();
      if (v13) {
        goto LABEL_16;
      }
    }
  }
LABEL_13:
  uint64_t v14 = *v18;
  *(void *)(*v18 + 8 * (i >> 6) + 56) |= 1 << i;
  *(void *)(*(void *)(v14 + 48) + 8 * i) = v5;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_16:
  sub_100007620(&qword_1002F9870);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_100197C88()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002F9888);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28)
      {
        int64_t v9 = v27 + 2;
        if (v27 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v9);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 88 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v20 = *(void *)(v17 + 24);
    uint64_t v21 = *(void *)(v17 + 32);
    uint64_t v22 = *(void *)(v17 + 40);
    char v23 = *(unsigned char *)(v17 + 64);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    long long v30 = *(_OWORD *)(v17 + 72);
    long long v25 = *(_OWORD *)(v17 + 48);
    *(void *)uint64_t v24 = *(void *)v17;
    *(void *)(v24 + 8) = v18;
    *(void *)(v24 + 16) = v19;
    *(void *)(v24 + 24) = v20;
    *(void *)(v24 + 32) = v21;
    *(void *)(v24 + 40) = v22;
    *(_OWORD *)(v24 + 48) = v25;
    *(unsigned char *)(v24 + 64) = v23;
    *(_OWORD *)(v24 + 72) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = (id)v30;
    id result = *((id *)&v30 + 1);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v13) {
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100197EA4()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002F9770);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100198058()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002F9880);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1001981EC()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002F9878);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100198398()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9888);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v35 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  for (i = v2; ; uint64_t v2 = i)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v41 = v10;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v36) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v15);
    int64_t v17 = v10 + 1;
    if (!v16)
    {
      int64_t v17 = v10 + 2;
      if (v10 + 2 >= v36) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v35 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v10 + 3;
        if (v10 + 3 >= v36) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    int64_t v41 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 88 * v14;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 40);
    uint64_t v39 = *(void *)(v19 + 32);
    uint64_t v40 = *(void *)v19;
    Swift::UInt v24 = *(void *)(v19 + 48);
    Swift::UInt v25 = *(void *)(v19 + 56);
    char v38 = *(unsigned char *)(v19 + 64);
    long long v42 = *(_OWORD *)(v19 + 72);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    id v26 = (id)v42;
    id v27 = *((id *)&v42 + 1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v24);
    Hasher._combine(_:)(v25);
    uint64_t result = Hasher._finalize()();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v29) & ~*(void *)(v8 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v8 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v11 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 88 * v11;
    int64_t v10 = v41;
    *(void *)uint64_t v12 = v40;
    *(void *)(v12 + 8) = v20;
    *(void *)(v12 + 16) = v21;
    *(void *)(v12 + 24) = v22;
    *(void *)(v12 + 32) = v39;
    *(void *)(v12 + 40) = v23;
    *(void *)(v12 + 48) = v24;
    *(void *)(v12 + 56) = v25;
    *(unsigned char *)(v12 + 64) = v38;
    *(_OWORD *)(v12 + 72) = v42;
    ++*(void *)(v4 + 16);
  }
  uint64_t v18 = v10 + 4;
  if (v10 + 4 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v35 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10019870C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9770);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1001989BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100007620(&qword_1002F9880);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_37;
              }
              if (v11 >= v9) {
                goto LABEL_33;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x100198D00);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_100198D14()
{
  uint64_t v1 = *v0;
  sub_100007620(&qword_1002F9878);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v25 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v25) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v1 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    swift_retain();
    Task.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v3 + 48) + 8 * v11) = v17;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v25)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100198FDC(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60[3] = type metadata accessor for TranslationStoreCoreData();
  v60[4] = &protocol witness table for TranslationStoreCoreData;
  v60[0] = a1;
  uint64_t KeyPath = swift_getKeyPath();
  UUID.init()();
  uint64_t v11 = UUID.uuidString.getter();
  uint64_t v13 = v12;
  int64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v55 = v7;
  v14(v10, v7);
  uint64_t v56 = v14;
  uint64_t v54 = v8 + 8;
  id v52 = self;
  id v15 = [v52 standardUserDefaults];
  sub_100007620(&qword_1002F96E0);
  swift_allocObject();
  uint64_t v16 = PassthroughSubject.init()();
  uint64_t v17 = KeyPath;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = v17;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v13;
  *(void *)(a2 + 112) = v16;
  uint64_t v18 = swift_getKeyPath();
  UUID.init()();
  uint64_t v19 = UUID.uuidString.getter();
  uint64_t v21 = v20;
  v14(v10, v7);
  id v22 = v52;
  id v23 = [v52 standardUserDefaults];
  swift_allocObject();
  uint64_t v24 = PassthroughSubject.init()();
  *(void *)(a2 + 120) = v23;
  *(void *)(a2 + 128) = v18;
  *(void *)(a2 + 136) = v19;
  *(void *)(a2 + 144) = v21;
  *(void *)(a2 + 152) = v24;
  int64_t v25 = (void *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager__sessionSuspension_RD);
  uint64_t v26 = swift_getKeyPath();
  BOOL v27 = v58;
  static Date.distantPast.getter();
  id v28 = [v22 standardUserDefaults];
  uint64_t v29 = sub_100007620(&qword_1002F96E8);
  uint64_t v30 = *(int *)(v29 + 36);
  sub_100007620(&qword_1002F96F0);
  swift_allocObject();
  *(void *)((char *)v25 + v30) = PassthroughSubject.init()();
  void *v25 = v28;
  v25[1] = v26;
  char v31 = (char *)v25 + *(int *)(v29 + 32);
  uint64_t v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v31, v27, v57);
  BOOL v33 = (void *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager__lastSELFLoggingInvocations);
  uint64_t v34 = swift_getKeyPath();
  id v35 = [v22 standardUserDefaults];
  sub_100007620(&qword_1002F96F8);
  swift_allocObject();
  uint64_t v36 = PassthroughSubject.init()();
  *BOOL v33 = v35;
  v33[1] = v34;
  v33[2] = &_swiftEmptyArrayStorage;
  v33[3] = v36;
  *(unsigned char *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager_isSuspended) = 1;
  *(void *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator25TranslationSessionManager_selfLoggingInvocationsHolders) = &_swiftEmptyArrayStorage;
  *(double *)(a2 + 16) = a3;
  sub_1000295C0((uint64_t)v60, a2 + 24);
  UUID.init()();
  uint64_t v37 = UUID.uuidString.getter();
  uint64_t v39 = v38;
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  v56(v10, v55);
  type metadata accessor for TranslationSession_RD();
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = swift_retain();
  *(void *)(a2 + 64) = sub_1001994B4(v43, v37, v39, v42);
  UUID.init()();
  uint64_t v44 = UUID.uuidString.getter();
  uint64_t v46 = v45;
  v40(v10, v41);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = swift_retain();
  *(void *)(a2 + 72) = sub_1001994B4(v48, v44, v46, v47);
  uint64_t v49 = (uint64_t)v58;
  Date.init()();
  sub_10022E7FC(v49, 1);
  sub_10000AB68((uint64_t)v60);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v49, v32);
  return a2;
}

uint64_t sub_1001994B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F9700);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[3] = type metadata accessor for TranslationStoreCoreData();
  v33[4] = &protocol witness table for TranslationStoreCoreData;
  v33[0] = a1;
  uint64_t v12 = a4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD__translations;
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_100007620(&qword_1002FCAF0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(a4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_lidDisambiguationCounter) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_observations) = &_swiftEmptyDictionarySingleton;
  sub_1000295C0((uint64_t)v33, a4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store);
  swift_beginAccess();
  v32[0] = a2;
  v32[1] = a3;
  Published.init(initialValue:)();
  swift_endAccess();
  sub_1000295C0((uint64_t)v33, (uint64_t)aBlock);
  sub_100007620((uint64_t *)&unk_1002F9710);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (void *)TranslationStoreCoreData.moc.getter();
    id v14 = [self defaultCenter];
    id v15 = self;
    id v16 = v13;
    id v17 = [v15 mainQueue];
    uint64_t v29 = sub_10019CEF0;
    uint64_t v30 = a4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10018FADC;
    id v28 = &unk_1002D1608;
    uint64_t v18 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v19 = [v14 addObserverForName:NSManagedObjectContextObjectsDidChangeNotification object:v16 queue:v17 usingBlock:v18];
    _Block_release(v18);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1002EE5D8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100011554(v20, (uint64_t)qword_10030E990);
    sub_1000295C0((uint64_t)v33, (uint64_t)aBlock);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      *(_DWORD *)id v23 = 136446210;
      sub_100029624(aBlock, (uint64_t)v28);
      swift_getDynamicType();
      uint64_t v24 = _typeName(_:qualified:)();
      uint64_t v31 = sub_100202FD4(v24, v25, v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000AB68((uint64_t)aBlock);
        v23,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10000AB68((uint64_t)aBlock);
    }
  }
  sub_10000AB68((uint64_t)v33);
  return a4;
}

void sub_100199960(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10000B0CC(0, &qword_1002F9720);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10000B0CC(0, &qword_1002F9720);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_100199BD8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100199C60(uint64_t a1, int a2, uint64_t a3, double a4)
{
  int v32 = a2;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  __chkstk_darwin(v7);
  id v9 = (void (*)(char *, uint64_t))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F9700);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[3] = type metadata accessor for TranslationStoreCoreData();
  v34[4] = &protocol witness table for TranslationStoreCoreData;
  v34[0] = a1;
  uint64_t v14 = a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__translations;
  BOOL v33 = _swiftEmptyArrayStorage;
  sub_100007620(&qword_1002FCAF0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v13, v10);
  *(void *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = 0;
  id v15 = (char *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__sessionSuspension);
  uint64_t KeyPath = swift_getKeyPath();
  static Date.distantPast.getter();
  id v17 = self;
  id v18 = [v17 standardUserDefaults];
  uint64_t v19 = sub_100007620(&qword_1002F96E8);
  uint64_t v20 = *(int *)(v19 + 36);
  sub_100007620(&qword_1002F96F0);
  swift_allocObject();
  *(void *)&v15[v20] = PassthroughSubject.init()();
  *(void *)id v15 = v18;
  *((void *)v15 + 1) = KeyPath;
  uint64_t v21 = *(int *)(v19 + 32);
  uint64_t v23 = v30;
  uint64_t v22 = v31;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v30 + 32))(&v15[v21], v9, v31);
  uint64_t v24 = (void *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
  uint64_t v25 = swift_getKeyPath();
  id v26 = [v17 standardUserDefaults];
  sub_100007620(&qword_1002F96E0);
  swift_allocObject();
  uint64_t v27 = PassthroughSubject.init()();
  *uint64_t v24 = v26;
  v24[1] = v25;
  v24[2] = 0;
  v24[3] = 0xE000000000000000;
  v24[4] = v27;
  *(void *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_lidDisambiguationCounter) = 0;
  *(unsigned char *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_isSuspended) = 1;
  *(double *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_sessionTimeout) = a4;
  sub_1000295C0((uint64_t)v34, a3 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store);
  if (v32)
  {
    Date.init()();
    sub_1001FD38C(v9);
    (*(void (**)(void, uint64_t))(v23 + 8))(v9, v22);
  }
  sub_1001FE294();
  sub_10000AB68((uint64_t)v34);
  return a3;
}

uint64_t sub_100199FC4(uint64_t a1, uint64_t a2, void *a3, id a4, uint64_t a5)
{
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v17 = type metadata accessor for StoredSpeechResult();
  v32[3] = v17;
  v32[4] = sub_10019CD38(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  id v18 = sub_100014830(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v18, a1, v17);
  uint64_t v19 = type metadata accessor for StoredTranslationResult();
  v31[3] = v19;
  v31[4] = sub_10019CD38((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
  uint64_t v20 = sub_100014830(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v20, a2, v19);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  *(void *)id v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (a2)
  {
    sub_1000295C0(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v30);
    sub_100029624(v30, v30[3]);
    a3 = (void *)dispatch thunk of TranslationStore.insert(speech:translationResult:isFavorite:)();
    if (!a3)
    {
      sub_10000AB68((uint64_t)v30);
LABEL_9:
      sub_10000AB68((uint64_t)v32);
      sub_10000AB68((uint64_t)v31);
      return (uint64_t)a3;
    }
    sub_10000AB68((uint64_t)v30);
    uint64_t v21 = (id *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
    swift_beginAccess();
    id v29 = *v21;
    id v22 = v29;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    if (!v30[1]) {
      swift_bridgeObjectRetain();
    }
    swift_release();

    swift_release();
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a3 setSessionID:v23];

    sub_10000C3A4((uint64_t)a4, (uint64_t)v12, (uint64_t *)&unk_1002F33E0);
    dispatch thunk of PersistedTranslation.selfLoggingInvocationId.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    a4 = a3;
    id v16 = (char *)static Published.subscript.modify();
    if (!(*v24 >> 62))
    {
LABEL_8:
      sub_10022B77C(0, 0, (uint64_t)a4);
      ((void (*)(void *, void))v16)(v30, 0);
      swift_release();
      swift_release();
      uint64_t v25 = *(void **)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
      *(void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = a3;
      id v26 = a4;

      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v28 & 0x8000000000000000) == 0) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019A490(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_10019A518()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = Strong;
    [Strong setNeedsUpdateOfSupportedInterfaceOrientations];
  }
}

uint64_t sub_10019A574()
{
  uint64_t v0 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v0);
  sub_1000D1030();
  UITraitCollection.subscript.getter();
  if (((v2 ^ !sub_10018FBD0()) & 1) == 0)
  {
    UIViewController.traitOverrides.getter();
    dispatch thunk of UIMutableTraits.subscript.setter();
    UIViewController.traitOverrides.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

id sub_10019A710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v36 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v34);
  BOOL v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F9820);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F9828);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  uint64_t v32 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F97C8);
  __chkstk_darwin(v16 - 8);
  *(void *)((char *)v3 + *(void *)(qword_10030EB68 + (swift_isaMask & *v3) + 32)) = _swiftEmptyArrayStorage;
  *(void *)((char *)v3 + *(void *)(qword_10030EB68 + (swift_isaMask & *v3) + 16)) = a2;
  *(void *)((char *)v3 + *(void *)(qword_10030EB68 + (swift_isaMask & *v3) + 24)) = v28;
  sub_10000C3A4(v36, (uint64_t)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1002F97C8);
  swift_retain();
  swift_retain();
  id v18 = (void *)UIHostingController.init(rootView:)();
  swift_beginAccess();
  id v19 = v18;
  sub_100007620(&qword_1002F9830);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v37 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
  sub_100014894(&qword_1002F9838, &qword_1002F9820);
  sub_10007854C((unint64_t *)&qword_1002F9840, (unint64_t *)&qword_1002EEE30);
  uint64_t v21 = v30;
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v8, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v21);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F9848, &qword_1002F9828);
  uint64_t v22 = v31;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v22);
  swift_beginAccess();
  sub_100007620((uint64_t *)&unk_1002F9850);
  sub_100014894(&qword_1002F2C58, (uint64_t *)&unk_1002F9850);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v23 = v19;
  BOOL v24 = sub_10018FBD0();
  UIViewController.traitOverrides.getter();
  LOBYTE(v37) = v24;
  sub_1000D1030();
  dispatch thunk of UIMutableTraits.subscript.setter();
  UIViewController.traitOverrides.setter();

  sub_100007620(&qword_1002F4100);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1002488D0;
  *(void *)(v25 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v25 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  id v26 = v23;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  sub_10000B070(v36, &qword_1002F97C8);
  return v26;
}

uint64_t sub_10019AE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = &_swiftEmptySetSingleton;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v6 = self;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v4;
  v7[3] = v5;
  v7[4] = a1;
  v7[5] = a2;
  v10[4] = sub_10019D160;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100193C14;
  v10[3] = &unk_1002D16D0;
  unint64_t v8 = _Block_copy(v10);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v6 availableLocalePairsForTask:1 completion:v8];
  _Block_release(v8);
  swift_release();
  return swift_release();
}

uint64_t sub_10019AF8C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  id v124 = a2;
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v127 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v125 = (char *)v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100007620(&qword_1002F9788);
  __chkstk_darwin(v110);
  unint64_t v8 = (char *)v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100007620(&qword_1002F9790);
  __chkstk_darwin(v111);
  uint64_t v10 = (char *)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100007620(&qword_1002F9798);
  __chkstk_darwin(v112);
  uint64_t v12 = (char *)v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100007620(&qword_1002F97A0);
  __chkstk_darwin(v113);
  uint64_t v115 = (uint64_t)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100007620(&qword_1002F97A8);
  __chkstk_darwin(v114);
  uint64_t v117 = (uint64_t)v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100007620(&qword_1002F97B0);
  __chkstk_darwin(v116);
  uint64_t v16 = (char *)v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100007620(&qword_1002F97B8);
  __chkstk_darwin(v118);
  uint64_t v120 = (uint64_t)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100007620(&qword_1002F97C0);
  __chkstk_darwin(v119);
  uint64_t v122 = (char *)v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100007620(&qword_1002F97C8);
  __chkstk_darwin(v121);
  uint64_t v123 = (char *)v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for MainLayoutView();
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v23 = *(char **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_conversation);
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session] = sub_10018FCC0();
  swift_release();
  sub_100191ED8();
  self;
  id v126 = a1;
  uint64_t v24 = v127;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    id v26 = (void *)v25;
    uint64_t v107 = v5;
    uint64_t v108 = v16;
    uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_context);
    id v105 = v126;
    BOOL v28 = sub_1000E2E38((uint64_t)[v26 interfaceOrientation]);
    uint64_t v29 = v26;
    uint64_t v109 = v26;
    LOBYTE(v26) = v28;
    swift_getKeyPath();
    uint64_t v128 = v3;
    swift_getKeyPath();
    LOBYTE(v129[0]) = (_BYTE)v26;
    swift_retain();
    static Published.subscript.setter();
    id v30 = [v29 traitCollection];
    sub_1000D1084();
    UITraitCollection.subscript.getter();

    uint64_t v31 = v129[0];
    uint64_t v32 = sub_10018FDE8();
    uint64_t v33 = *(void *)(v128 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_store);
    uint64_t v34 = *(void **)(v128 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_sharedTranslationOptions);
    swift_retain();
    id v35 = v34;
    swift_retain();
    v104[1] = v31;
    sub_100165930(v32, v33, v35, v31, (uint64_t)v22);
    type metadata accessor for HostedScenePhaseModel();
    swift_allocObject();
    uint64_t v130 = sub_10019E2B8();
    State.init(wrappedValue:)();
    uint64_t v36 = v129[0];
    uint64_t v37 = v129[1];
    uint64_t v106 = v22;
    sub_1001684C0((uint64_t)v22, (uint64_t)v8);
    uint64_t v38 = (uint64_t *)&v8[*(int *)(v110 + 36)];
    *uint64_t v38 = v36;
    v38[1] = v37;
    uint64_t v39 = Color.init(_:bundle:)();
    uint64_t KeyPath = swift_getKeyPath();
    sub_10000C3A4((uint64_t)v8, (uint64_t)v10, &qword_1002F9788);
    uint64_t v41 = (uint64_t *)&v10[*(int *)(v111 + 36)];
    *uint64_t v41 = KeyPath;
    v41[1] = v39;
    sub_10000B070((uint64_t)v8, &qword_1002F9788);
    type metadata accessor for ConversationManager();
    sub_10019CD38((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t v42 = static ObservableObject.environmentStore.getter();
    sub_10000C3A4((uint64_t)v10, (uint64_t)v12, &qword_1002F9790);
    uint64_t v43 = (uint64_t *)&v12[*(int *)(v112 + 36)];
    *uint64_t v43 = v42;
    v43[1] = (uint64_t)v23;
    uint64_t v44 = v23;
    sub_10000B070((uint64_t)v10, &qword_1002F9790);
    type metadata accessor for ConversationContext(0);
    sub_10019CD38(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    uint64_t v45 = static ObservableObject.environmentStore.getter();
    uint64_t v46 = v115;
    sub_10000C3A4((uint64_t)v12, v115, &qword_1002F9798);
    uint64_t v47 = (uint64_t *)(v46 + *(int *)(v113 + 36));
    *uint64_t v47 = v45;
    v47[1] = v27;
    uint64_t v48 = v27;
    swift_retain();
    sub_10000B070((uint64_t)v12, &qword_1002F9798);
    uint64_t v49 = *(void *)(v128 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_sceneContext);
    type metadata accessor for SceneContext();
    sub_10019CD38((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t v50 = static ObservableObject.environmentStore.getter();
    uint64_t v51 = v117;
    sub_10000C3A4(v46, v117, &qword_1002F97A0);
    id v52 = (uint64_t *)(v51 + *(int *)(v114 + 36));
    *id v52 = v50;
    v52[1] = v49;
    swift_retain();
    sub_10000B070(v46, &qword_1002F97A0);
    type metadata accessor for SharedTranslationOptions();
    sub_10019CD38(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
    uint64_t v53 = static ObservableObject.environmentStore.getter();
    uint64_t v54 = (uint64_t)v108;
    sub_10000C3A4(v51, (uint64_t)v108, &qword_1002F97A8);
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(v116 + 36));
    *uint64_t v55 = v53;
    v55[1] = (uint64_t)v35;
    id v56 = v35;
    sub_10000B070(v51, &qword_1002F97A8);
    uint64_t v57 = sub_10018FCC0();
    type metadata accessor for TranslationAppSession();
    sub_10019CD38((unint64_t *)&unk_1002F9800, (void (*)(uint64_t))type metadata accessor for TranslationAppSession);
    uint64_t v58 = static ObservableObject.environmentStore.getter();
    uint64_t v59 = v120;
    sub_10000C3A4(v54, v120, &qword_1002F97B0);
    uint64_t v60 = (uint64_t *)(v59 + *(int *)(v118 + 36));
    *uint64_t v60 = v58;
    v60[1] = v57;
    sub_10000B070(v54, &qword_1002F97B0);
    unint64_t v61 = sub_10018FD5C();
    type metadata accessor for FavoritesImporter();
    sub_10019CD38(&qword_1002F59B0, (void (*)(uint64_t))type metadata accessor for FavoritesImporter);
    uint64_t v62 = static ObservableObject.environmentStore.getter();
    uint64_t v63 = v122;
    sub_10000C3A4(v59, (uint64_t)v122, &qword_1002F97B8);
    uint64_t v64 = (uint64_t *)&v63[*(int *)(v119 + 36)];
    *uint64_t v64 = v62;
    v64[1] = (uint64_t)v61;
    sub_10000B070(v59, &qword_1002F97B8);
    uint64_t v65 = swift_getKeyPath();
    uint64_t v66 = sub_10018FCC0();
    sub_1000295C0(v66 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v129);
    swift_release();
    sub_100007620((uint64_t *)&unk_1002F9710);
    type metadata accessor for TranslationStoreCoreData();
    swift_dynamicCast();
    uint64_t v67 = dispatch thunk of TranslationStoreCoreData.viewContext.getter();
    swift_release();
    uint64_t v68 = v123;
    sub_10000C3A4((uint64_t)v63, (uint64_t)v123, &qword_1002F97C0);
    unint64_t v69 = (uint64_t *)&v68[*(int *)(v121 + 36)];
    *unint64_t v69 = v65;
    v69[1] = v67;
    uint64_t v70 = v128;
    sub_10000B070((uint64_t)v63, &qword_1002F97C0);
    id v71 = objc_allocWithZone((Class)sub_100007620((uint64_t *)&unk_1002F9810));
    swift_retain();
    swift_retain();
    uint64_t v72 = (char *)sub_10019A710((uint64_t)v68, v48, v49);
    swift_release();
    swift_release();
    id v73 = objc_allocWithZone((Class)UIWindow);
    id v74 = [v73 initWithWindowScene:v109];
    uint64_t v123 = v72;
    [v74 setRootViewController:v72];
    uint64_t v75 = *(void **)(v70 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window);
    *(void *)(v70 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window) = v74;
    unint64_t v76 = (char *)v74;

    uint64_t v122 = v76;
    [v76 makeKeyAndVisible];
    if (qword_1002EE5B0 != -1) {
      swift_once();
    }
    uint64_t v77 = type metadata accessor for Logger();
    sub_100011554(v77, (uint64_t)qword_10030E918);
    id v78 = v124;
    uint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.info.getter();
    unint64_t v81 = &selRef_initWithTagSchemes_options_;
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v82 = (uint8_t *)swift_slowAlloc();
      v129[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136380675;
      id v124 = v82 + 4;
      id v83 = [v78 URLContexts];
      sub_10000B0CC(0, &qword_1002F9720);
      sub_10007854C((unint64_t *)&unk_1002F9728, &qword_1002F9720);
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v84 = Set.description.getter();
      unint64_t v86 = v85;
      swift_bridgeObjectRelease();
      uint64_t v130 = sub_100202FD4(v84, v86, v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      unint64_t v81 = &selRef_initWithTagSchemes_options_;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "willConnectTo: connectionOptions.urlContexts %{private}s", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v5 = v107;
    uint64_t v24 = v127;
    uint64_t v87 = (uint64_t)v106;
    uint64_t v88 = v105;
    id v89 = [v78 v81[327]];
    sub_10000B0CC(0, &qword_1002F9720);
    sub_10007854C((unint64_t *)&unk_1002F9728, &qword_1002F9720);
    uint64_t v90 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v3 = v128;
    sub_100190064(v90);
    swift_release();

    swift_bridgeObjectRelease();
    sub_10019D55C(v87);
  }
  id v91 = [self sharedApplication];
  id v92 = [v91 delegate];

  uint64_t v93 = v125;
  if (v92)
  {
    type metadata accessor for AppDelegate();
    uint64_t v94 = swift_dynamicCastClass();
    if (v94)
    {
      uint64_t v95 = *(void *)(v94 + OBJC_IVAR____TtC17SequoiaTranslator11AppDelegate_interruptionController);
      swift_retain();
      swift_unknownObjectRelease();
      if (v95)
      {
        sub_1001F8E1C(*(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_sceneContext), 0, v95);
        swift_release();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  unint64_t v96 = sub_1001FFAFC((uint64_t)&off_1002C8BA0);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  sub_10018F7CC(v96);
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  id v97 = objc_allocWithZone((Class)NSUserActivity);
  NSString v98 = String._bridgeToObjectiveC()();
  id v99 = [v97 initWithActivityType:v98];

  [v99 setEligibleForHandoff:0];
  sub_100007620((uint64_t *)&unk_1002F97D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  strcpy((char *)v129, "tap-to-radar");
  BYTE5(v129[1]) = 0;
  HIWORD(v129[1]) = -5120;
  AnyHashable.init<A>(_:)();
  uint64_t result = URLComponents.string.getter();
  if (v102)
  {
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = result;
    *(void *)(inited + 80) = v102;
    sub_1001FF548(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v99 setUserInfo:isa];

    [v99 becomeCurrent];
    [v126 setUserActivity:v99];

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v93, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10019C1E8()
{
  uint64_t v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F02C0);
    sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
    uint64_t v4 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
    id v5 = [v0 standardUserDefaults];
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 BOOLForKey:v6];

    NSUserDefaults.onDeviceOnly.setter();
    id v7 = [v0 standardUserDefaults];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 removeObjectForKey:v8];
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F02C0);
  }
}

uint64_t sub_10019C3B8()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (void (*)(char *, uint64_t))&v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10018FCC0();
  sub_1000295C0(v4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v10);
  swift_release();
  sub_100029624(v10, v10[3]);
  uint64_t v5 = dispatch thunk of TranslationStore.favoriteCount.getter();
  swift_beginAccess();
  sub_100073710(v5);
  swift_endAccess();
  sub_10000AB68((uint64_t)v10);
  sub_10018FCC0();
  Date.init()();
  sub_1001FD38C(v3);
  swift_release();
  NSString v6 = *(void (**)(void, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_10018FDE8();
  Date.init()();
  sub_10022E7FC((uint64_t)v3, 0);
  swift_release();
  v6(v3, v0);
  id v7 = sub_10018FD5C();
  sub_1000EB61C();

  sub_10019C1E8();
  return sub_1001A6774();
}

void sub_10019C598()
{
  uint64_t v1 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window];
  if (v4)
  {
    id v5 = [v4 rootViewController];
    if (v5)
    {
      NSString v6 = v5;
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
      type metadata accessor for MainActor();
      id v8 = v6;
      uint64_t v9 = v0;
      uint64_t v10 = static MainActor.shared.getter();
      uint64_t v11 = (void *)swift_allocObject();
      void v11[2] = v10;
      v11[3] = &protocol witness table for MainActor;
      void v11[4] = v8;
      v11[5] = v9;
      sub_100056780((uint64_t)v3, (uint64_t)&unk_1002F9780, (uint64_t)v11);
      swift_release();
    }
  }
}

void sub_10019C6F0()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_100073B68();
  swift_endAccess();
  sub_10018FCC0();
  Date.init()();
  sub_1001FCF20((uint64_t)v3);
  swift_release();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  sub_10018FDE8();
  Date.init()();
  sub_10022DF78((uint64_t)v3);
  swift_release();
  v4(v3, v0);
  id v5 = sub_10018FD5C();
  id v6 = *(id *)&v5[OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_sharedFavorites];

  dispatch thunk of SharedTranslations.unregister()();
}

uint64_t sub_10019C87C(uint64_t a1)
{
  if (qword_1002EE5B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E918);
  swift_bridgeObjectRetain_n();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136380675;
    sub_10000B0CC(0, &qword_1002F9720);
    sub_10007854C((unint64_t *)&unk_1002F9728, &qword_1002F9720);
    swift_bridgeObjectRetain();
    uint64_t v6 = Set.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_100202FD4(v6, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "openURLContexts: %{private}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_100190064(a1);
}

id sub_10019CAB4(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_context);
  sub_1000E2E38((uint64_t)[a1 interfaceOrientation]);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  id result = [a1 interfaceOrientation];
  if (result)
  {
    id result = [a1 interfaceOrientation];
    *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_lastKnownInterfaceOrientation) = result;
  }
  return result;
}

id sub_10019CB78(void *a1)
{
  id v3 = [a1 selectedIndex];
  id v4 = [a1 tabBar];
  id v5 = v4;
  if (v3)
  {
    [v4 setBackgroundImage:0];

    id v6 = [a1 tabBar];
    [v6 setShadowImage:0];
  }
  else
  {
    id v7 = [objc_allocWithZone((Class)UIImage) init];
    [v5 setBackgroundImage:v7];

    id v8 = [a1 tabBar];
    id v6 = [objc_allocWithZone((Class)UIImage) init];
    [v8 setShadowImage:v6];
  }
  id result = [a1 selectedIndex];
  if (!result)
  {
    id result = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window);
    if (result)
    {
      id result = [result windowScene];
      if (result)
      {
        uint64_t v10 = result;
        id v11 = [result interfaceOrientation];

        id result = (id)sub_1000E2E38((uint64_t)v11);
        if (result)
        {
          return [a1 hideBarWithTransition:0];
        }
      }
    }
  }
  return result;
}

uint64_t sub_10019CD38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10019CD88(void **a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10019CDB8(uint64_t a1, void **a2)
{
}

void sub_10019CDE8(void **a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10019CE18(uint64_t a1, void **a2)
{
}

uint64_t sub_10019CE48@<X0>(uint64_t a1@<X8>)
{
  return sub_10023CB50(a1);
}

uint64_t sub_10019CE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100195BBC(a1, a2, a3, a4, (uint64_t (*)(char *))sub_10023CCAC);
}

uint64_t sub_10019CE98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10023CF04();
  *a1 = result;
  return result;
}

uint64_t sub_10019CEC4()
{
  return sub_10023D058();
}

uint64_t sub_10019CEF0()
{
  return sub_10022965C();
}

uint64_t sub_10019CEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10019CF08()
{
  return swift_release();
}

uint64_t sub_10019CF10@<X0>(uint64_t a1@<X8>)
{
  return sub_10023CB18(a1);
}

uint64_t sub_10019CF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100195BBC(a1, a2, a3, a4, (uint64_t (*)(char *))sub_10023CB34);
}

void sub_10019CF60(void **a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_10019CF98(uint64_t a1, void **a2)
{
}

uint64_t sub_10019CFD0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10019CFF8()
{
  return sub_1000694BC();
}

uint64_t sub_10019D020()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_10019D080(uint64_t a1)
{
  return sub_100195384(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96));
}

uint64_t sub_10019D0E0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019D118()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10019D160(unint64_t a1)
{
  return sub_100193568(a1, *(void *)(v1 + 16), *(void (***)(char *, uint64_t))(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10019D16C()
{
  uint64_t v1 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (!v9(v0 + v5, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v5, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_10019D32C()
{
  uint64_t v1 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100193F7C(v0 + v3, v0 + v5, *(void *)(v0 + v6), *(void *)(v0 + v6 + 8), *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10019D3F4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10019D43C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100021B58;
  return sub_100192AD0(a1, v4, v5, v7, v6);
}

uint64_t sub_10019D504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.managedObjectContext.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10019D530(id *a1)
{
  id v1 = *a1;
  return EnvironmentValues.managedObjectContext.setter();
}

uint64_t sub_10019D55C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainLayoutView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019D5B8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10019D5F0()
{
}

uint64_t sub_10019D5F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_10019D620()
{
  return sub_1000694BC();
}

void sub_10019D65C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10019F05C();
    sub_10019F09C((unint64_t *)&qword_1002EEE28, (void (*)(uint64_t))sub_10019F05C);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v26;
    uint64_t v25 = v27;
    uint64_t v2 = v28;
    uint64_t v3 = v29;
    unint64_t v4 = v30;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  uint64_t v23 = v2;
  int64_t v24 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!__CocoaSet.Iterator.next()()) {
    goto LABEL_36;
  }
  sub_10019F05C();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v9 = v31;
  swift_unknownObjectRelease();
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  if (!v31) {
    goto LABEL_36;
  }
  while (1)
  {
    id v16 = [v9 session:v23];
    id v17 = [v16 role];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;
    if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_36;
    }

    uint64_t v3 = v10;
    unint64_t v4 = v11;
    if (v1 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v4) {
      break;
    }
    uint64_t v11 = (v4 - 1) & v4;
    unint64_t v12 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v10 = v3;
LABEL_29:
    id v9 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v9) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v13);
  uint64_t v10 = v3 + 1;
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 2;
  if (v3 + 2 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 3;
  if (v3 + 3 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 4;
  if (v3 + 4 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 5;
  if (v3 + 5 >= v24) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v25 + 8 * v10);
  if (v14)
  {
LABEL_28:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_29;
  }
  uint64_t v15 = v3 + 6;
  while (v24 != v15)
  {
    unint64_t v14 = *(void *)(v25 + 8 * v15++);
    if (v14)
    {
      uint64_t v10 = v15 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_100011710();
}

uint64_t sub_10019DA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ScenePhase();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  v20[0] = a2;
  v20[1] = a3;
  sub_100007620(&qword_1002F9A50);
  State.wrappedValue.getter();
  uint64_t v13 = v20[3];
  swift_getKeyPath();
  v20[0] = v13;
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v14 = v13 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase;
  swift_beginAccess();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15(v11, v14, v8);
  swift_release();
  id v16 = (uint64_t *)(a4 + *(int *)(sub_100007620(&qword_1002F9A58) + 36));
  uint64_t v17 = sub_100007620(&qword_1002F9A60);
  v15((char *)v16 + *(int *)(v17 + 28), (uint64_t)v11, v8);
  *id v16 = KeyPath;
  uint64_t v18 = sub_100007620(&qword_1002F9A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(a4, a1, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10019DC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10019DA0C(a1, *v2, v2[1], a2);
}

uint64_t sub_10019DC5C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for ScenePhase();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10019DD58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for ScenePhase();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10019DE54(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  unint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10019DFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for ScenePhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_10019E078()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019E124@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3
                  + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__notificationObservers);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10019E1D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019E2B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ScenePhase();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3 + 104;
  uint64_t v7 = *(void (**)(uint64_t))(v3 + 104);
  unsigned int v56 = enum case for ScenePhase.background(_:);
  v7(v1 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase);
  *(void *)(v1
            + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__notificationObservers) = _swiftEmptyArrayStorage;
  uint64_t v8 = v1
     + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel___observationRegistrar;
  ObservationRegistrar.init()();
  id v9 = [self sharedApplication];
  id v10 = [v9 connectedScenes];

  sub_10019F05C();
  sub_10019F09C((unint64_t *)&qword_1002EEE28, (void (*)(uint64_t))sub_10019F05C);
  uint64_t v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10019D65C(v11);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if (v13)
  {
    id v52 = v5;
    uint64_t v53 = v3;
    sub_100007620(&qword_1002F9A40);
    uint64_t v48 = v13;
    uint64_t v14 = sub_100007620(&qword_1002F9A48);
    uint64_t v51 = v8;
    uint64_t v15 = v14;
    uint64_t v16 = *(void *)(*(void *)(v14 - 8) + 72);
    uint64_t v17 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
    uint64_t v55 = v1;
    uint64_t v18 = (v17 + 32) & ~v17;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100248B60;
    uint64_t v20 = (NSNotificationName *)(v19 + v18);
    uint64_t v21 = v19 + v18 + *(int *)(v15 + 48);
    NSNotificationName v47 = UISceneDidActivateNotification;
    *uint64_t v20 = UISceneDidActivateNotification;
    unsigned int v44 = enum case for ScenePhase.active(_:);
    v7(v21);
    uint64_t v22 = v19 + v18 + v16 + *(int *)(v15 + 48);
    NSNotificationName v45 = UISceneWillDeactivateNotification;
    *(NSNotificationName *)((char *)v20 + v16) = UISceneWillDeactivateNotification;
    uint64_t v23 = enum case for ScenePhase.inactive(_:);
    ((void (*)(uint64_t, void, uint64_t))v7)(v22, enum case for ScenePhase.inactive(_:), v2);
    int64_t v24 = (NSNotificationName *)((char *)v20 + 2 * v16);
    uint64_t v25 = (char *)v24 + *(int *)(v15 + 48);
    uint64_t v46 = 0;
    *int64_t v24 = UISceneWillEnterForegroundNotification;
    unsigned int v43 = v23;
    ((void (*)(char *, uint64_t, uint64_t))v7)(v25, v23, v2);
    uint64_t v26 = (NSNotificationName *)((char *)v20 + 3 * v16);
    uint64_t v27 = (char *)v26 + *(int *)(v15 + 48);
    NSNotificationName *v26 = UISceneDidEnterBackgroundNotification;
    uint64_t v54 = v2;
    uint64_t v49 = v6;
    uint64_t v50 = (void (*)(char *, uint64_t, uint64_t))v7;
    uint64_t v28 = ((uint64_t (*)(char *, void, uint64_t))v7)(v27, v56, v2);
    __chkstk_darwin(v28);
    uint64_t v29 = v48;
    uint64_t v30 = v55;
    *((void *)&v43 - 2) = v48;
    *((void *)&v43 - 1) = v30;
    uint64_t v31 = v47;
    uint64_t v32 = v45;
    uint64_t v1 = v55;
    uint64_t v33 = UISceneWillEnterForegroundNotification;
    uint64_t v34 = UISceneDidEnterBackgroundNotification;
    id v35 = sub_10019F0EC(v19, (void (*)(_OWORD *__return_ptr, void, char *))sub_10019F0E4);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *((void *)&v43 - 2) = v1;
    *((void *)&v43 - 1) = v35;
    uint64_t v57 = v1;
    sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_bridgeObjectRelease();
    id v37 = [v29 activationState];
    if (v37 == (id)1)
    {
      uint64_t v39 = v43;
      uint64_t v38 = v52;
    }
    else
    {
      uint64_t v38 = v52;
      uint64_t v39 = v56;
      if (!v37) {
        uint64_t v39 = v44;
      }
    }
    uint64_t v40 = v54;
    v50(v38, v39, v54);
    uint64_t v41 = swift_getKeyPath();
    __chkstk_darwin(v41);
    *((void *)&v43 - 2) = v1;
    *((void *)&v43 - 1) = v38;
    uint64_t v57 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v40);
  }
  return v1;
}

uint64_t sub_10019E870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v6 = type metadata accessor for ScenePhase();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  id v9 = [self defaultCenter];
  id v10 = [self mainQueue];
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10019F394;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10018FADC;
  void aBlock[3] = &unk_1002D17E8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = [v9 addObserverForName:v17 object:v18 queue:v10 usingBlock:v14];
  _Block_release(v14);

  uint64_t result = swift_getObjectType();
  a4[3] = result;
  *a4 = v15;
  return result;
}

uint64_t sub_10019EAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a3, v4);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v11[-2] = v9;
    v11[-1] = v7;
    void v11[2] = v9;
    sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_10019ECA4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  uint64_t v2 = v0
     + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel___observationRegistrar;
  v12[0] = v1;
  sub_10019F09C(&qword_1002F9A38, (void (*)(uint64_t))type metadata accessor for HostedScenePhaseModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__notificationObservers);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = self;
    uint64_t v6 = v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10000B170(v6, (uint64_t)v12);
      id v7 = [v5 defaultCenter];
      sub_100029624(v12, v12[3]);
      [v7 removeObserver:_bridgeAnythingToObjectiveC<A>(_:)()];

      swift_unknownObjectRelease();
      sub_10000AB68((uint64_t)v12);
      v6 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v1 + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__scenePhase;
  uint64_t v9 = type metadata accessor for ScenePhase();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v2, v10);
  return v1;
}

uint64_t sub_10019EE98()
{
  sub_10019ECA4();

  return swift_deallocClassInstance();
}

uint64_t sub_10019EEEC()
{
  return type metadata accessor for HostedScenePhaseModel();
}

uint64_t type metadata accessor for HostedScenePhaseModel()
{
  uint64_t result = qword_1002F9930;
  if (!qword_1002F9930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10019EF40()
{
  uint64_t result = type metadata accessor for ScenePhase();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ObservationRegistrar();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_10019F020()
{
  return sub_10019F24C();
}

uint64_t sub_10019F040()
{
  return sub_10019DFDC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10019F05C()
{
  unint64_t result = qword_1002EEE20;
  if (!qword_1002EEE20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002EEE20);
  }
  return result;
}

uint64_t sub_10019F09C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10019F0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10019E870(a1, a2, *(void *)(v3 + 16), a3);
}

void *sub_10019F0EC(uint64_t a1, void (*a2)(_OWORD *__return_ptr, void, char *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    sub_1000B2DB4(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v6 = sub_100007620(&qword_1002F9A48);
    id v7 = (char *)(a1
                + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80)));
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
    do
    {
      a2(v12, *(void *)v7, &v7[*(int *)(v6 + 48)]);
      uint64_t v13 = v3;
      unint64_t v10 = v3[2];
      unint64_t v9 = v3[3];
      if (v10 >= v9 >> 1)
      {
        sub_1000B2DB4(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v13;
      }
      v7 += v8;
      v3[2] = v10 + 1;
      sub_100048EC8(v12, &v3[4 * v10 + 4]);
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_10019F24C()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC17SequoiaTranslatorP33_543CC1964A8BEA98CCBD6CC816E4E11321HostedScenePhaseModel__notificationObservers) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10019F290()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019F2C8()
{
  uint64_t v1 = type metadata accessor for ScenePhase();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10019F394(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ScenePhase() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10019EAC0(a1, v4, v5);
}

uint64_t sub_10019F408(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10019F418()
{
  return swift_release();
}

void *sub_10019F424(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ScenePhaseSupportModifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ScenePhaseSupportModifier(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ScenePhaseSupportModifier()
{
  return &type metadata for ScenePhaseSupportModifier;
}

uint64_t sub_10019F50C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10019F534()
{
  unint64_t result = qword_1002F9A70;
  if (!qword_1002F9A70)
  {
    sub_100007928(&qword_1002F9A58);
    sub_100014894(&qword_1002F9A78, &qword_1002F9A68);
    sub_100014894(&qword_1002F9A80, &qword_1002F9A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9A70);
  }
  return result;
}

uint64_t sub_10019F5F8()
{
  return sub_10019F040();
}

char *sub_10019F610(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    unint64_t v9 = &a1[v8];
    unint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for UUID();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &v4[v13];
    id v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for Locale();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v14, v15, v16);
    v17(&v4[a3[7]], &a2[a3[7]], v16);
  }
  return v4;
}

uint64_t sub_10019F770(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for Locale();
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = a1 + a2[7];

  return v10(v8, v7);
}

char *sub_10019F860(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  unint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(&a1[a3[7]], &a2[a3[7]], v15);
  return a1;
}

char *sub_10019F970(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  return a1;
}

char *sub_10019FA84(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(&a1[a3[7]], &a2[a3[7]], v13);
  return a1;
}

char *sub_10019FB80(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(&a1[a3[7]], &a2[a3[7]], v14);
  return a1;
}

uint64_t sub_10019FC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10019FC98);
}

uint64_t sub_10019FC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Locale();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10019FDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10019FDD8);
}

uint64_t sub_10019FDD8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Locale();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SELFLoggingInvocationDescription()
{
  uint64_t result = qword_1002F9AE0;
  if (!qword_1002F9AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10019FF50()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Locale();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001A0024(unsigned __int8 *a1, char *a2)
{
  return sub_1002365B4(*a1, *a2);
}

Swift::Int sub_1001A0030()
{
  return sub_1000F7AE4();
}

uint64_t sub_1001A0038()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001A0108()
{
  return sub_1000F83E8();
}

unint64_t sub_1001A0110@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A0E08(*a1);
  *a2 = result;
  return result;
}

void sub_1001A0140(void *a1@<X8>)
{
  unint64_t v2 = 0x800000010025A130;
  unint64_t v3 = 0xD000000000000012;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000064496E6FLL;
      unint64_t v3 = 0x697461636F766E69;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x656372756F73;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x746567726174;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      a1[1] = 0xEC000000656C6163;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1001A01E4()
{
  uint64_t result = 0xD000000000000012;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x697461636F766E69;
      break;
    case 2:
      uint64_t v2 = 0x656372756F73;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x746567726174;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001A0280@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001A0E08(a1);
  *a2 = result;
  return result;
}

void sub_1001A02A8(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1001A02B4(uint64_t a1)
{
  unint64_t v2 = sub_1001A0AA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001A02F0(uint64_t a1)
{
  unint64_t v2 = sub_1001A0AA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001A032C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v31 = (char *)&v27 - v6;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100007620(&qword_1002F9B20);
  uint64_t v33 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SELFLoggingInvocationDescription();
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100029624(a1, a1[3]);
  sub_1001A0AA4();
  uint64_t v36 = v11;
  uint64_t v15 = (uint64_t)v38;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v15) {
    return sub_10000AB68((uint64_t)a1);
  }
  uint64_t v38 = a1;
  uint64_t v27 = v12;
  uint64_t v28 = v7;
  uint64_t v17 = v33;
  uint64_t v16 = v34;
  uint64_t v18 = v35;
  char v42 = 0;
  uint64_t v19 = (uint64_t)v14;
  *uint64_t v14 = KeyedDecodingContainer.decode(_:forKey:)();
  v14[1] = v20;
  char v41 = 1;
  sub_1001A0BB8(&qword_1002F9B30);
  uint64_t v21 = v28;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v22 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v19 + *(int *)(v27 + 20), v9, v21);
  char v40 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v23 = v31;
  Locale.init(identifier:)();
  uint64_t v24 = v19 + *(int *)(v22 + 24);
  uint64_t v31 = *(char **)(v16 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v31)(v24, v23, v18);
  char v39 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v25 = v29;
  Locale.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v37);
  ((void (*)(uint64_t, char *, uint64_t))v31)(v19 + *(int *)(v22 + 28), v25, v18);
  sub_1001A0AF8(v19, v30);
  sub_10000AB68((uint64_t)v38);
  return sub_1001A0B5C(v19);
}

uint64_t sub_1001A0818(void *a1)
{
  uint64_t v3 = sub_100007620(&qword_1002F9B38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029624(a1, a1[3]);
  sub_1001A0AA4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  type metadata accessor for SELFLoggingInvocationDescription();
  v8[14] = 1;
  type metadata accessor for UUID();
  sub_1001A0BB8(&qword_1002F9B40);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  Locale.identifier.getter();
  v8[13] = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  swift_bridgeObjectRelease();
  Locale.identifier.getter();
  v8[12] = 3;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001A0A74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001A032C(a1, a2);
}

uint64_t sub_1001A0A8C(void *a1)
{
  return sub_1001A0818(a1);
}

unint64_t sub_1001A0AA4()
{
  unint64_t result = qword_1002F9B28;
  if (!qword_1002F9B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9B28);
  }
  return result;
}

uint64_t sub_1001A0AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SELFLoggingInvocationDescription();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A0B5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SELFLoggingInvocationDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001A0BB8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SELFLoggingInvocationDescription.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A0CC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SELFLoggingInvocationDescription.CodingKeys()
{
  return &type metadata for SELFLoggingInvocationDescription.CodingKeys;
}

unint64_t sub_1001A0D04()
{
  unint64_t result = qword_1002F9B48;
  if (!qword_1002F9B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9B48);
  }
  return result;
}

unint64_t sub_1001A0D5C()
{
  unint64_t result = qword_1002F9B50;
  if (!qword_1002F9B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9B50);
  }
  return result;
}

unint64_t sub_1001A0DB4()
{
  unint64_t result = qword_1002F9B58;
  if (!qword_1002F9B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9B58);
  }
  return result;
}

unint64_t sub_1001A0E08(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8C40, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t (*sub_1001A0E58())()
{
  return j__swift_endAccess;
}

uint64_t sub_1001A0EB8(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F9DD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v45 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v44 = (uint64_t)&v37 - v5;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B688();
  uint64_t v12 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  int v43 = NSUserDefaults.genderDisambiguationEnabled.getter();

  uint64_t v13 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  id v14 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v16 = Locale._bridgeToObjectiveC()().super.isa;
  id v42 = [v14 initWithSourceLocale:isa targetLocale:v16];

  uint64_t v41 = *(void *)(v46 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabName);
  uint64_t v17 = v46 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabSessionId;
  swift_beginAccess();
  uint64_t v18 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v11, v17, v9);
  uint64_t v19 = v13[9];
  uint64_t v40 = *(void *)(a1 + v13[8]);
  int v39 = *(unsigned __int8 *)(a1 + v19);
  sub_10000C3A4(a1 + v13[14], (uint64_t)v8, (uint64_t *)&unk_1002F33E0);
  uint64_t v37 = *(void *)(a1 + v13[12]);
  uint64_t v20 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v21 = String._bridgeToObjectiveC()();
  unsigned __int8 v22 = [v20 BOOLForKey:v21];

  v23.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
  Class v24 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v9) != 1)
  {
    Class v24 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v9);
  }
  id v25 = objc_allocWithZone((Class)_LTSELFLoggingTranslateAppContext);
  LOBYTE(v36) = v22;
  LOBYTE(v35) = v39;
  uint64_t v26 = v42;
  id v27 = [v25 initWithDisplayMode:0 localePair:v42 isGenderAlternativeEnabled:v43 & 1 tabName:v41 tabSessionId:v23.super.isa conversationTabView:v40 isPlayTranslationsEnabled:v35 autoTranslateSessionId:v24 audioChannel:v37 languageIdentificationEnabled:v36];

  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v9);
  id v28 = [self startInvocationWithTask:1 inputMode:*(void *)(a1 + v13[7]) invocationType:*(void *)(a1 + v13[6]) translateAppContext:v27];

  uint64_t v29 = v46;
  uint64_t v30 = *(void **)(v46 + 16);
  *(void *)(v46 + 16) = v28;

  uint64_t v31 = v44;
  sub_1001A3464(a1, v44);
  (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v13 - 1) + 56))(v31, 0, 1, v13);
  uint64_t v32 = v45;
  sub_1001A352C(v31, v45);
  uint64_t v33 = v29 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  swift_beginAccess();
  sub_1001A33FC(v32, v33);
  return swift_endAccess();
}

uint64_t sub_1001A1344(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F9DD8);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F9DD0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v31 = v1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  swift_beginAccess();
  uint64_t v30 = a1;
  sub_1001A3464(a1, (uint64_t)v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v17, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10000C3A4(v18, (uint64_t)v9, &qword_1002F9DD0);
  sub_10000C3A4((uint64_t)v17, v19, &qword_1002F9DD0);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) == 1)
  {
    sub_10000B070((uint64_t)v17, &qword_1002F9DD0);
    if (v20(v19, 1, v3) == 1) {
      return sub_10000B070((uint64_t)v9, &qword_1002F9DD0);
    }
  }
  else
  {
    sub_10000C3A4((uint64_t)v9, (uint64_t)v15, &qword_1002F9DD0);
    if (v20(v19, 1, v3) != 1)
    {
      uint64_t v25 = v28;
      sub_1001A34C8(v19, v28);
      BOOL v26 = sub_1001A2EF8((uint64_t)v15, v25);
      sub_1000B68AC(v25);
      sub_10000B070((uint64_t)v17, &qword_1002F9DD0);
      sub_1000B68AC((uint64_t)v15);
      uint64_t result = sub_10000B070((uint64_t)v9, &qword_1002F9DD0);
      if (v26) {
        return result;
      }
      goto LABEL_7;
    }
    sub_10000B070((uint64_t)v17, &qword_1002F9DD0);
    sub_1000B68AC((uint64_t)v15);
  }
  sub_10000B070((uint64_t)v9, &qword_1002F9DD8);
LABEL_7:
  uint64_t v22 = v29;
  sub_10000C3A4(v18, v29, &qword_1002F9DD0);
  unsigned int v23 = v20(v22, 1, v3);
  sub_10000B070(v22, &qword_1002F9DD0);
  if (v23 == 1)
  {
    Class v24 = *(void **)(v31 + 16);
    if (v24) {
      [v24 endSuccessfullyWithQSSSessionId:0];
    }
  }
  return sub_1001A0EB8(v30);
}

void sub_1001A16F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v6 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v6)
    {
      uint64_t v7 = *(void **)(v5 + 16);
      if (v7)
      {
        id v9 = objc_allocWithZone((Class)_LTLocalePair);
        id v10 = v7;
        Class isa = Locale._bridgeToObjectiveC()().super.isa;
        Class v12 = Locale._bridgeToObjectiveC()().super.isa;
        id v13 = [v9 initWithSourceLocale:isa targetLocale:v12];

        NSString v14 = String._bridgeToObjectiveC()();
        [v10 userEndedTypingWithPayload:v14 localePair:v13 reason:a5];
      }
    }
  }
}

void sub_1001A1818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void **)(v4 + 16);
  if (v5)
  {
    id v9 = objc_allocWithZone((Class)_LTLocalePair);
    id v10 = v5;
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v12 = Locale._bridgeToObjectiveC()().super.isa;
    id v13 = [v9 initWithSourceLocale:isa targetLocale:v12];

    if (a2) {
      NSString v14 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v14 = 0;
    }
    [v10 appBackgroundedWithPayload:v14 localePair:v13];

    uint64_t v15 = sub_1001A0E58();
    uint64_t v17 = v16;
    uint64_t v18 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
    uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    if (!v19(v17, 1, v18))
    {
      uint64_t v20 = type metadata accessor for Locale();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v17, a3, v20);
    }
    ((void (*)(unsigned char *, void))v15)(v26, 0);
    NSString v21 = sub_1001A0E58();
    uint64_t v23 = v22;
    if (!v19(v22, 1, v18))
    {
      uint64_t v24 = v23 + *(int *)(v18 + 20);
      uint64_t v25 = type metadata accessor for Locale();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v24, a4, v25);
    }
    ((void (*)(unsigned char *, void))v21)(v26, 0);
  }
}

uint64_t sub_1001A1A44()
{
  uint64_t v1 = sub_100007620(&qword_1002F9DD0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabSessionId;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  swift_endAccess();
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 0;
  id v10 = *(void **)(v0 + 16);
  *(void *)(v0 + 16) = 0;

  uint64_t v11 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  swift_beginAccess();
  sub_1001A33FC((uint64_t)v3, v12);
  uint64_t result = swift_endAccess();
  *(unsigned char *)(v0 + v9) = 0;
  return result;
}

void sub_1001A1C14()
{
  uint64_t v1 = sub_100007620(&qword_1002F9DD0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + 16);
  if (v4)
  {
    id v5 = v4;
    [v5 endSuccessfullyWithQSSSessionId:0];
    uint64_t v6 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = 0;

    uint64_t v7 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
    uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
    swift_beginAccess();
    sub_1001A33FC((uint64_t)v3, v8);
    swift_endAccess();
    *(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 0;
  }
}

uint64_t sub_1001A1D38()
{
  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters, &qword_1002F9DD0);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabSessionId;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001A1DF8()
{
  return type metadata accessor for SELFLoggingInvocationWrapper(0);
}

uint64_t type metadata accessor for SELFLoggingInvocationWrapper(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F9BA8);
}

void sub_1001A1E20()
{
  sub_1001A2EA4(319, (unint64_t *)&unk_1002F9BB8, (void (*)(uint64_t))type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
  if (v0 <= 0x3F)
  {
    type metadata accessor for UUID();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for SELFLoggingInvocationWrapper.Parameters(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F9D70);
}

void *sub_1001A1F48(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v11 = a3[10];
    uint64_t v12 = a3[11];
    id v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(void *)id v13 = *(void *)v14;
    v13[8] = v14[8];
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v15 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    uint64_t v18 = a3[14];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    *(void *)uint64_t v16 = *(void *)v17;
    uint64_t v21 = type metadata accessor for UUID();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = sub_100007620((uint64_t *)&unk_1002F33E0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1001A2178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 56);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_1001A22AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100007620((uint64_t *)&unk_1002F33E0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001A248C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v8 = a3[10];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v12 = a3[13];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  char v15 = *(unsigned char *)(v14 + 8);
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = a3[14];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  LODWORD(v7) = v21(v17, 1, v19);
  int v22 = v21(v18, 1, v19);
  if (!v7)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v17, v18, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_100007620((uint64_t *)&unk_1002F33E0);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1001A26E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    uint64_t v22 = sub_100007620((uint64_t *)&unk_1002F33E0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1001A28C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[10];
  uint64_t v11 = a3[11];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[14];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v7) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (!v7)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v23)
  {
LABEL_6:
    uint64_t v24 = sub_100007620((uint64_t *)&unk_1002F33E0);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_1001A2B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A2B18);
}

uint64_t sub_1001A2B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F33E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 56);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1001A2C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A2C68);
}

uint64_t sub_1001A2C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
  }
  else
  {
    uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F33E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 56);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1001A2D94()
{
  type metadata accessor for Locale();
  if (v0 <= 0x3F)
  {
    sub_1001A2EA4(319, (unint64_t *)&qword_1002F38E0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001A2EA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1001A2EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F43B0);
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F33E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v37 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v37 - v18;
  if ((static Locale.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v38 = v5;
  uint64_t v20 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  if ((static Locale.== infix(_:_:)() & 1) == 0
    || *(void *)(a1 + v20[6]) != *(void *)(a2 + v20[6])
    || *(void *)(a1 + v20[7]) != *(void *)(a2 + v20[7])
    || *(void *)(a1 + v20[8]) != *(void *)(a2 + v20[8])
    || *(unsigned __int8 *)(a1 + v20[9]) != *(unsigned __int8 *)(a2 + v20[9]))
  {
    return 0;
  }
  uint64_t v21 = v20[10];
  uint64_t v22 = (void *)(a1 + v21);
  char v23 = *(unsigned char *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  int v25 = *(unsigned __int8 *)(a2 + v21 + 8);
  if (v23)
  {
    if (!v25) {
      return 0;
    }
  }
  else
  {
    if (*v22 != *v24) {
      LOBYTE(v25) = 1;
    }
    if (v25) {
      return 0;
    }
  }
  if (*(unsigned __int8 *)(a1 + v20[11]) != *(unsigned __int8 *)(a2 + v20[11])
    || *(void *)(a1 + v20[12]) != *(void *)(a2 + v20[12]))
  {
    return 0;
  }
  uint64_t v26 = v20[13];
  uint64_t v27 = (void *)(a1 + v26);
  char v28 = *(unsigned char *)(a1 + v26 + 8);
  uint64_t v29 = (void *)(a2 + v26);
  int v30 = *(unsigned __int8 *)(a2 + v26 + 8);
  if (v28)
  {
    if (!v30) {
      return 0;
    }
  }
  else
  {
    if (*v27 != *v29) {
      LOBYTE(v30) = 1;
    }
    if (v30) {
      return 0;
    }
  }
  sub_10000C3A4(a1 + v20[14], (uint64_t)v19, (uint64_t *)&unk_1002F33E0);
  sub_10000C3A4(a2 + v20[14], (uint64_t)v17, (uint64_t *)&unk_1002F33E0);
  uint64_t v31 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10000C3A4((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_1002F33E0);
  sub_10000C3A4((uint64_t)v17, v31, (uint64_t *)&unk_1002F33E0);
  uint64_t v32 = v38;
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v33((uint64_t)v10, 1, v4) == 1)
  {
    sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F33E0);
    sub_10000B070((uint64_t)v19, (uint64_t *)&unk_1002F33E0);
    if (v33(v31, 1, v4) == 1)
    {
      sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F33E0);
      return 1;
    }
    goto LABEL_26;
  }
  sub_10000C3A4((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_1002F33E0);
  if (v33(v31, 1, v4) == 1)
  {
    sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F33E0);
    sub_10000B070((uint64_t)v19, (uint64_t *)&unk_1002F33E0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v4);
LABEL_26:
    sub_10000B070((uint64_t)v10, &qword_1002F43B0);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v7, v31, v4);
  sub_1001A33A4();
  char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v32 + 8);
  v35(v7, v4);
  sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F33E0);
  sub_10000B070((uint64_t)v19, (uint64_t *)&unk_1002F33E0);
  v35(v14, v4);
  sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F33E0);
  return (v34 & 1) != 0;
}

unint64_t sub_1001A33A4()
{
  unint64_t result = qword_1002F43B8;
  if (!qword_1002F43B8)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F43B8);
  }
  return result;
}

uint64_t sub_1001A33FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F9DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A3464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A34C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A352C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F9DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001A35D8()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setNumberOfLines:0];
    id v5 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v4 setFont:v5];

    id v6 = [self labelColor];
    [v4 setTextColor:v6];

    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1001A3780()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___subtitleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___subtitleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___subtitleLabel);
  }
  else
  {
    id v4 = sub_1001A3828();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001A3828()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setNumberOfLines:0];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v0 setFont:v1];

  id v2 = [self secondaryLabelColor];
  [v0 setTextColor:v2];

  [v0 setHidden:1];
  return v0;
}

id sub_1001A3960()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmark;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmark);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmark);
  }
  else
  {
    id v4 = sub_1001A3A0C();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001A3A0C()
{
  id v0 = sub_1001A3D68();
  id v1 = [objc_allocWithZone((Class)UIImageView) initWithImage:v0];

  id v2 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  id v3 = self;
  [v2 pointSize];
  id v4 = [v3 systemFontOfSize:];
  id v5 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  id v6 = [v5 scaledFontForFont:v4 maximumPointSize:1.79769313e308];

  id v7 = [self configurationWithFont:v6];
  [v1 setPreferredSymbolConfiguration:v7];
  [v1 setContentMode:4];
  id v8 = [v1 widthAnchor];
  id v9 = [v8 constraintEqualToConstant:22.0];

  [v9 setActive:1];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self colorNamed:v10];

  [v1 setTintColor:v11];
  [v1 setAlpha:0.0];

  return v1;
}

id sub_1001A3C6C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleStack;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleStack);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleStack);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setAxis:1];
    [v4 setAlignment:0];
    [v4 setDistribution:0];
    [v4 setSpacing:4.0];
    [v4 setLayoutMarginsRelativeArrangement:0];
    [v4 setInsetsLayoutMarginsFromSafeArea:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001A3D68()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmarkImage;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmarkImage);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmarkImage);
  }
  else
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self systemImageNamed:v4];

    if (!v5) {
      id v5 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v6 = [v5 imageFlippedForRightToLeftLayoutDirection];

    id v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    id v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1001A3E54(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___subtitleLabel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmark] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleStack] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmarkImage] = 0;
  id v9 = &v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow_alternative];
  *(void *)id v9 = a1;
  *((void *)v9 + 1) = a2;
  sub_1000295C0((uint64_t)a3, (uint64_t)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow_sense]);
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow_index] = a4;
  v41.receiver = v5;
  v41.super_class = (Class)type metadata accessor for SenseRow();
  id v10 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v11 = sub_1001A35D8();
  sub_100029624(a3, a3[3]);
  dispatch thunk of TranslationSense.definition.getter();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v12];

  id v13 = sub_1001A35D8();
  LODWORD(v14) = 1132068864;
  [v13 setContentHuggingPriority:0 forAxis:v14];

  sub_100029624(a3, a3[3]);
  uint64_t v15 = *(void *)(dispatch thunk of TranslationSense.labels.getter() + 16);
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = objc_allocWithZone((Class)SQListFormatter);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    id v18 = [v16 initWithLocale:isa];

    sub_100029624(a3, a3[3]);
    uint64_t v19 = dispatch thunk of TranslationSense.labels.getter();
    sub_100161D64(v19);
    swift_bridgeObjectRelease();
    Class v20 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [v18 stringFromItems:v20];

    id v22 = sub_1001A3780();
    [v22 setText:v21];

    id v23 = sub_1001A3780();
    [v23 setHidden:0];
  }
  id v24 = sub_1001A3960();
  LODWORD(v25) = 1144750080;
  [v24 setContentHuggingPriority:0 forAxis:v25];

  id v26 = sub_1001A3C6C();
  id v27 = sub_1001A35D8();
  [v26 addArrangedSubview:v27];

  id v28 = sub_1001A3C6C();
  id v29 = sub_1001A3780();
  [v28 addArrangedSubview:v29];

  id v30 = v10;
  id v31 = sub_1001A3C6C();
  [v30 addArrangedSubview:v31];

  id v32 = v30;
  id v33 = sub_1001A3960();
  [v32 addArrangedSubview:v33];

  [v32 setDirectionalLayoutMargins:8.0, 16.0, 8.0, 16.0];
  [v32 setLayoutMarginsRelativeArrangement:1];
  [v32 setInsetsLayoutMarginsFromSafeArea:0];
  [v32 setAxis:0];
  [v32 setAlignment:0];
  [v32 setDistribution:0];
  [v32 setSpacing:4.0];
  char v34 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_10024CE10;
  id v36 = [v32 heightAnchor];
  id v37 = [v36 constraintGreaterThanOrEqualToConstant:44.0];

  *(void *)(v35 + 32) = v37;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class v38 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:v38];

  uint64_t v39 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(a5, v39);
  sub_10000AB68((uint64_t)a3);
  return v32;
}

id sub_1001A43BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SenseRow();
  return [super dealloc];
}

uint64_t type metadata accessor for SenseRow()
{
  return self;
}

void sub_1001A44B4()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___subtitleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmark] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___titleStack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8SenseRow____lazy_storage___checkmarkImage] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_1001A4550(void *a1)
{
  id v3 = self;
  NSString v4 = v1;
  id v5 = [v3 effectForBlurEffect:a1 style:7];
  id v6 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v5];

  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator13SeparatorView_background] = v6;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for SeparatorView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v8 = self;
  id v9 = (char *)v7;
  id v10 = [v8 separatorColor];
  [v9 setBackgroundColor:v10];

  id v11 = *(void **)&v9[OBJC_IVAR____TtC17SequoiaTranslator13SeparatorView_background];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 addSubview:v11];
  NSString v12 = v9;
  id v13 = v11;
  sub_10023B960(v13);

  return v12;
}

id sub_1001A475C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeparatorView();
  return [super dealloc];
}

uint64_t type metadata accessor for SeparatorView()
{
  return self;
}

uint64_t sub_1001A47C4()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 stringForKey:v1];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;
  }
  else
  {
    unint64_t v5 = 0xE500000000000000;
    uint64_t v3 = 0x53455F7365;
  }
  sub_10000B688();
  id v6 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 stringForKey:v7];

  if (v8)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    if (v3 != v9) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v11 = 0xE000000000000000;
    if (v3) {
      goto LABEL_10;
    }
  }
  if (v5 == v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_10:
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_1001A52A0();
  }
LABEL_12:

  return Locale.init(identifier:)();
}

uint64_t sub_1001A4988()
{
  id v0 = NSTemporaryDirectory();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;

  swift_bridgeObjectRetain();
  v4._object = (void *)0x8000000100262070;
  v4._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v4);
  uint64_t result = swift_bridgeObjectRelease();
  qword_10030EB78 = v1;
  unk_10030EB80 = v3;
  return result;
}

void sub_1001A4A18()
{
  id v0 = [self standardUserDefaults];
  sub_100007620(&qword_1002F9E78);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100256100;
  *(void *)(v1 + 32) = 0xD000000000000015;
  *(void *)(v1 + 40) = 0x80000001002620B0;
  *(unsigned char *)(v1 + 48) = 0;
  *(void *)(v1 + 72) = &type metadata for Bool;
  *(void *)(v1 + 80) = 0xD000000000000025;
  *(void *)(v1 + 88) = 0x800000010025CBC0;
  *(void *)(v1 + 96) = 0x53455F7365;
  *(void *)(v1 + 104) = 0xE500000000000000;
  *(void *)(v1 + 120) = &type metadata for String;
  *(void *)(v1 + 128) = 0xD000000000000025;
  *(void *)(v1 + 136) = 0x800000010025CBF0;
  *(void *)(v1 + 144) = 0x53555F6E65;
  *(void *)(v1 + 152) = 0xE500000000000000;
  *(void *)(v1 + 168) = &type metadata for String;
  *(void *)(v1 + 176) = 0xD000000000000024;
  *(void *)(v1 + 184) = 0x800000010025C190;
  *(void *)(v1 + 192) = 0x53455F7365;
  *(void *)(v1 + 200) = 0xE500000000000000;
  *(void *)(v1 + 216) = &type metadata for String;
  *(void *)(v1 + 224) = 0xD000000000000024;
  *(void *)(v1 + 232) = 0x800000010025C1C0;
  *(void *)(v1 + 240) = 0x53555F6E65;
  *(void *)(v1 + 248) = 0xE500000000000000;
  *(void *)(v1 + 264) = &type metadata for String;
  *(void *)(v1 + 272) = 0xD000000000000029;
  *(void *)(v1 + 280) = 0x800000010025D230;
  *(void *)(v1 + 288) = 0x53455F7365;
  *(void *)(v1 + 296) = 0xE500000000000000;
  *(void *)(v1 + 312) = &type metadata for String;
  *(void *)(v1 + 320) = 0xD000000000000029;
  *(void *)(v1 + 328) = 0x800000010025D1C0;
  *(void *)(v1 + 336) = 0x53555F6E65;
  *(void *)(v1 + 344) = 0xE500000000000000;
  *(void *)(v1 + 360) = &type metadata for String;
  *(void *)(v1 + 368) = 0xD00000000000002ELL;
  *(void *)(v1 + 376) = 0x80000001002620D0;
  *(unsigned char *)(v1 + 384) = 0;
  *(void *)(v1 + 408) = &type metadata for Bool;
  *(void *)(v1 + 416) = 0xD000000000000015;
  *(void *)(v1 + 424) = 0x8000000100262100;
  *(unsigned char *)(v1 + 432) = 0;
  *(void *)(v1 + 456) = &type metadata for Bool;
  *(void *)(v1 + 464) = 0xD000000000000013;
  *(void *)(v1 + 472) = 0x8000000100262120;
  *(unsigned char *)(v1 + 480) = 0;
  *(void *)(v1 + 504) = &type metadata for Bool;
  *(void *)(v1 + 512) = 0xD000000000000012;
  *(void *)(v1 + 520) = 0x800000010025CD40;
  *(void *)(v1 + 552) = &type metadata for Bool;
  *(unsigned char *)(v1 + 528) = 0;
  *(void *)(v1 + 560) = 0x754164656E6E6143;
  *(void *)(v1 + 568) = 0xEF687461506F6964;
  *(void *)(v1 + 600) = &type metadata for String;
  *(void *)(v1 + 576) = 0xD00000000000004BLL;
  *(void *)(v1 + 584) = 0x80000001002618D0;
  *(void *)(v1 + 608) = 0xD000000000000012;
  *(void *)(v1 + 616) = 0x80000001002618B0;
  if (qword_1002EE688 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10030EB78;
  uint64_t v3 = unk_10030EB80;
  *(void *)(v1 + 648) = &type metadata for String;
  *(void *)(v1 + 624) = v2;
  *(void *)(v1 + 632) = v3;
  *(void *)(v1 + 656) = 0xD000000000000013;
  *(void *)(v1 + 664) = 0x8000000100261860;
  *(void *)(v1 + 696) = &type metadata for Bool;
  *(unsigned char *)(v1 + 672) = 0;
  *(void *)(v1 + 704) = 0xD000000000000026;
  *(void *)(v1 + 712) = 0x8000000100262140;
  *(void *)(v1 + 744) = &type metadata for Bool;
  *(unsigned char *)(v1 + 720) = 0;
  *(void *)(v1 + 752) = 0xD00000000000002BLL;
  *(void *)(v1 + 760) = 0x8000000100262170;
  *(void *)(v1 + 792) = &type metadata for Bool;
  *(unsigned char *)(v1 + 768) = 0;
  *(void *)(v1 + 800) = 0xD000000000000023;
  *(void *)(v1 + 808) = 0x80000001002621A0;
  *(void *)(v1 + 840) = &type metadata for Bool;
  *(unsigned char *)(v1 + 816) = 0;
  *(void *)(v1 + 848) = 0xD000000000000025;
  *(void *)(v1 + 856) = 0x80000001002621D0;
  *(void *)(v1 + 888) = &type metadata for Int;
  *(void *)(v1 + 864) = 0;
  *(void *)(v1 + 896) = 0xD000000000000025;
  *(void *)(v1 + 904) = 0x8000000100262200;
  *(void *)(v1 + 936) = &type metadata for Int;
  *(void *)(v1 + 912) = 0;
  *(void *)(v1 + 944) = 0xD00000000000001DLL;
  *(void *)(v1 + 952) = 0x8000000100262230;
  *(void *)(v1 + 984) = &type metadata for Int;
  *(void *)(v1 + 960) = 0;
  *(void *)(v1 + 992) = 0xD00000000000001DLL;
  *(void *)(v1 + 1000) = 0x8000000100262250;
  *(void *)(v1 + 1032) = &type metadata for Int;
  *(void *)(v1 + 1008) = 0;
  *(void *)(v1 + 1040) = 0xD00000000000001ELL;
  *(void *)(v1 + 1048) = 0x8000000100262270;
  *(void *)(v1 + 1080) = sub_100007620(&qword_1002F9E80);
  *(void *)(v1 + 1056) = &_swiftEmptyDictionarySingleton;
  *(void *)(v1 + 1088) = 0xD000000000000018;
  *(void *)(v1 + 1096) = 0x800000010025FEB0;
  *(void *)(v1 + 1128) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1104) = 0;
  *(void *)(v1 + 1136) = 0xD00000000000001ALL;
  *(void *)(v1 + 1144) = 0x8000000100261020;
  *(void *)(v1 + 1176) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1152) = 0;
  *(void *)(v1 + 1184) = 0xD00000000000001ALL;
  *(void *)(v1 + 1192) = 0x8000000100262290;
  *(void *)(v1 + 1224) = sub_100007620(&qword_1002F9E88);
  *(void *)(v1 + 1200) = &_swiftEmptyArrayStorage;
  strcpy((char *)(v1 + 1232), "AutoplayTTSKey");
  *(unsigned char *)(v1 + 1247) = -18;
  *(void *)(v1 + 1272) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1248) = 0;
  *(void *)(v1 + 1280) = 0xD000000000000010;
  *(void *)(v1 + 1288) = 0x80000001002622B0;
  *(void *)(v1 + 1320) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1296) = 0;
  *(void *)(v1 + 1328) = 0xD000000000000013;
  *(void *)(v1 + 1336) = 0x8000000100261DB0;
  *(void *)(v1 + 1368) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1344) = 1;
  *(void *)(v1 + 1376) = 0xD000000000000026;
  *(void *)(v1 + 1384) = 0x80000001002622D0;
  *(void *)(v1 + 1416) = &type metadata for Bool;
  *(unsigned char *)(v1 + 1392) = 0;
  *(void *)(v1 + 1424) = 0xD000000000000027;
  *(void *)(v1 + 1432) = 0x8000000100262300;
  *(void *)(v1 + 1464) = &type metadata for Double;
  *(void *)(v1 + 1440) = 0x3FE0000000000000;
  *(void *)(v1 + 1472) = 0xD000000000000027;
  *(void *)(v1 + 1480) = 0x8000000100262330;
  *(void *)(v1 + 1512) = &type metadata for Double;
  *(void *)(v1 + 1488) = 0x3FE999999999999ALL;
  *(void *)(v1 + 1520) = 0xD000000000000015;
  *(void *)(v1 + 1528) = 0x8000000100262360;
  *(void *)(v1 + 1560) = &type metadata for Double;
  *(void *)(v1 + 1536) = 0x3FE0000000000000;
  swift_bridgeObjectRetain();
  sub_1001FF3E8(v1);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 registerDefaults:isa];

  sub_10000B688();
  unint64_t v5 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 1;
  sub_1001FF3E8(inited);
  Class v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 registerDefaults:v8];
}

void sub_1001A5094(char a1)
{
  int v1 = a1 & 1;
  sub_10000B688();
  uint64_t v2 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v3 = String._bridgeToObjectiveC()();
  unsigned int v4 = [v2 BOOLForKey:v3];

  if (v4 != v1)
  {
    unint64_t v5 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v7 = String._bridgeToObjectiveC()();
    [v5 setValue:isa forKey:v7];

    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030EA20);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v11 = 67109120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Setting IsLiveActivityListeningKey with reloadControls, value: %{BOOL}d", v11, 8u);
      swift_slowDealloc();
    }

    type metadata accessor for ControlCenter();
    static ControlCenter.shared.getter();
    dispatch thunk of ControlCenter.reloadControls(ofKind:)();
    swift_release();
  }
}

uint64_t sub_1001A52A0()
{
  sub_10000B688();
  id v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setValue:v1 forKey:v2];

  type metadata accessor for ControlCenter();
  static ControlCenter.shared.getter();
  dispatch thunk of ControlCenter.reloadControls(ofKind:)();

  return swift_release();
}

double sub_1001A5388()
{
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = NSFontAttributeName;
  NSString v1 = self;
  NSString v2 = NSFontAttributeName;
  id v3 = [v1 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2 compatibleWithTraitCollection:0];
  unsigned int v4 = self;
  [v3 pointSize];
  id v5 = [v4 systemFontOfSize:];
  id v6 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle2];
  id v7 = [v6 scaledFontForFont:v5 maximumPointSize:1.79769313e308];

  *(void *)(inited + 64) = sub_1001A5590();
  *(void *)(inited + 40) = v7;
  sub_1001FF520(inited);
  id v8 = objc_allocWithZone((Class)NSAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_100136748();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithString:v9 attributes:isa];

  [v11 size];
  double v13 = v12;

  return v13;
}

unint64_t sub_1001A5590()
{
  unint64_t result = qword_1002F02A0;
  if (!qword_1002F02A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F02A0);
  }
  return result;
}

uint64_t sub_1001A55D0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1001A55E4(uint64_t a1, void **a2)
{
}

uint64_t sub_1001A5610@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1001A5624(uint64_t a1, void **a2)
{
}

void sub_1001A5650(uint64_t a1, void **a2)
{
  NSString v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  sub_1001A5ADC();
}

uint64_t sub_1001A56F4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1001A5708(uint64_t a1, void **a2)
{
  NSString v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  sub_1001A59D4();
}

uint64_t sub_1001A5784()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue_serial.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10000B0CC(0, &qword_1002F9F58);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1001A6A44(&qword_1002F9F60, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue_serial.Attributes);
  sub_100007620(&qword_1002F9F68);
  sub_10009A940(&qword_1002F9F70, &qword_1002F9F68);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1002F9E90 = result;
  return result;
}

void sub_1001A59D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setValue:isa forKey:v2];
}

uint64_t sub_1001A5AB4()
{
  return sub_10002249C();
}

uint64_t sub_1001A5AC8()
{
  return sub_10002249C();
}

void sub_1001A5ADC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setValue:isa forKey:v2];
}

uint64_t sub_1001A5BBC()
{
  return sub_10002249C();
}

void sub_1001A5BD0()
{
}

uint64_t sub_1001A5C04()
{
  return sub_10002249C();
}

id sub_1001A5C18()
{
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v1 = v0;
  NSString v2 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 BOOLForKey:v3];

  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v4 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 BOOLForKey:v5];

  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  id v6 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 BOOLForKey:v7];

  swift_beginAccess();
  Published.init(initialValue:)();
  swift_endAccess();
  id v8 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  LOBYTE(v7) = [v8 BOOLForKey:v9];

  swift_beginAccess();
  char v16 = (char)v7;
  Published.init(initialValue:)();
  swift_endAccess();

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for SharedTranslationOptions();
  id v10 = [super init];
  id v11 = self;
  id v12 = v10;
  id result = [v11 sharedConnection];
  if (result)
  {
    double v14 = result;
    [result registerObserver:v12];

    sub_1001A6774();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001A5F30()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharedTranslationOptions();
  return [super dealloc];
}

uint64_t sub_1001A6058()
{
  return type metadata accessor for SharedTranslationOptions();
}

uint64_t type metadata accessor for SharedTranslationOptions()
{
  uint64_t result = qword_1002F9EE0;
  if (!qword_1002F9EE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001A60AC()
{
  sub_1000AFBD4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001A6140@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SharedTranslationOptions();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_1001A62D8()
{
  unint64_t v0 = [self sharedConnection];
  if (v0)
  {
    id v8 = v0;
    byte_10030EB88 = [v0 effectiveBoolValueForSetting:MCFeatureAssistantProfanityFilterForced] == 1;
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030EA98);
    objc_super v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 67240192;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Updated value for censoring profanity: %{BOOL,public}d", v4, 8u);
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030EA98);
    id v8 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v6))
    {
      NSString v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v6, "MCProfileConnection cannot be established, can't check profanity filtering value", v7, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001A6530(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = LanguagesService.autoDetectSpeechUnsupportedPairs.getter();
  id v7 = [a1 canonicalIdentifier];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  char v11 = sub_1000F8844(v8, v10, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = LanguagesService.localeModalities.getter();
  if (v12)
  {
    double v13 = (void *)v12;
    id v14 = [a1 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    unsigned __int8 v16 = [v13 locale:isa supportsModality:1];
  }
  else
  {
    unsigned __int8 v16 = 1;
  }
  uint64_t v17 = LanguagesService.localeModalities.getter();
  if (v17)
  {
    id v18 = (void *)v17;
    id v19 = [a1 targetLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class v20 = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v21 = (uint64_t)[v18 locale:v20 supportsModality:1];

    if (v11 & 1) == 0 && (v16) {
      return v21;
    }
    return 0;
  }
  if (v11) {
    return 0;
  }
  uint64_t v21 = 1;
  if ((v16 & 1) == 0) {
    return 0;
  }
  return v21;
}

uint64_t sub_1001A6774()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v9[0] - 8);
  __chkstk_darwin(v9[0]);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE690 != -1) {
    swift_once();
  }
  aBlock[4] = sub_1001A62D8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002D1920;
  id v7 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v9[1] = _swiftEmptyArrayStorage;
  sub_1001A6A44((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v7);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, void))(v4 + 8))(v6, v9[0]);
  return swift_release();
}

uint64_t sub_1001A6A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001A6A3C()
{
  return swift_release();
}

uint64_t sub_1001A6A44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A6A8C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1001A6AB4(uint64_t a1, void **a2)
{
}

uint64_t sub_1001A6AF4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1001A6B1C(uint64_t a1, void **a2)
{
}

uint64_t sub_1001A6B5C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t *sub_1001A6B88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    id v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_100007620(&qword_1002F9F78) + 32);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for NavigationSplitViewVisibility();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = *(int *)(a3 + 24);
    id v14 = (uint64_t *)((char *)v7 + v12);
    objc_super v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *id v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (char *)v7 + v13;
    id v18 = (char *)a2 + v13;
    *uint64_t v17 = *v18;
    *((void *)v17 + 1) = *((void *)v18 + 1);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1001A6CB4(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v3 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();

  return swift_release();
}

void *sub_1001A6D68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)((char *)a1 + v11);
  id v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  *uint64_t v16 = *v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1001A6E44(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_retain();
  swift_release();
  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *id v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1001A6F5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  return a1;
}

void *sub_1001A7008(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_release();
  uint64_t v13 = *(int *)(a3 + 24);
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *id v14 = *v15;
  *((void *)v14 + 1) = *((void *)v15 + 1);
  swift_release();
  return a1;
}

uint64_t sub_1001A7100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001A7114);
}

uint64_t sub_1001A7114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F9F78);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001A71E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001A71FC);
}

uint64_t sub_1001A71FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F9F78);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for SidebarButton()
{
  uint64_t result = qword_1002F9FD8;
  if (!qword_1002F9FD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001A730C()
{
  sub_1001A73A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001A73A4()
{
  if (!qword_1002F9FE8)
  {
    type metadata accessor for NavigationSplitViewVisibility();
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F9FE8);
    }
  }
}

uint64_t sub_1001A73FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A7418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v119 = a1;
  uint64_t v3 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v114 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v115 = *(void *)(v5 - 8);
  uint64_t v116 = v5;
  __chkstk_darwin(v5);
  uint64_t v112 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v111 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v110 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002FA020);
  uint64_t v118 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v117 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v105 = *(void *)(v10 - 8);
  uint64_t v106 = v10;
  __chkstk_darwin(v10);
  uint64_t v104 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100007620(&qword_1002EFF08);
  __chkstk_darwin(v101);
  uint64_t v120 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100007620(&qword_1002FA028);
  __chkstk_darwin(v126);
  id v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SidebarButton();
  uint64_t v16 = v15 - 8;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v15);
  id v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007620(&qword_1002FA030);
  uint64_t v93 = *(void *)(v20 - 8);
  uint64_t v94 = v20;
  __chkstk_darwin(v20);
  uint64_t v125 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002FA038);
  uint64_t v97 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002FA040);
  uint64_t v99 = *(void *)(v24 - 8);
  uint64_t v100 = v24;
  __chkstk_darwin(v24);
  unint64_t v96 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100007620(&qword_1002FA048);
  __chkstk_darwin(v102);
  uint64_t v103 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007620(&qword_1002FA050);
  uint64_t v107 = *(void *)(v27 - 8);
  uint64_t v108 = v27;
  __chkstk_darwin(v27);
  id v124 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A890C(v2, (uint64_t)v19);
  uint64_t v29 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v121 = v29 | 7;
  uint64_t v122 = v30 + v18;
  uint64_t v31 = swift_allocObject();
  uint64_t v123 = v30;
  uint64_t v109 = v19;
  sub_1001A8974((uint64_t)v19, v31 + v30);
  id v32 = (uint64_t *)(v2 + *(int *)(v16 + 28));
  uint64_t v33 = *v32;
  uint64_t v34 = v32[1];
  *(void *)&v136[0] = v33;
  *((void *)&v136[0] + 1) = v34;
  sub_100007620(&qword_1002FA058);
  State.wrappedValue.getter();
  uint64_t v35 = v127;
  LOBYTE(v16) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  LOBYTE(v30) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  char v135 = 0;
  char v134 = 0;
  *(void *)&long long v127 = sub_1001A89D8;
  *((void *)&v127 + 1) = v31;
  LOWORD(v128) = 257;
  *((void *)&v128 + 1) = v35;
  LOBYTE(v129) = v16;
  *((void *)&v129 + 1) = v37;
  *(void *)&long long v130 = v39;
  *((void *)&v130 + 1) = v41;
  *(void *)&long long v131 = v43;
  BYTE8(v131) = 0;
  LOBYTE(v132) = v30;
  *((void *)&v132 + 1) = v44;
  *(void *)&v133[0] = v45;
  *((void *)&v133[0] + 1) = v46;
  *(void *)&v133[1] = v47;
  BYTE8(v133[1]) = 0;
  uint64_t v48 = enum case for DynamicTypeSize.large(_:);
  uint64_t v49 = type metadata accessor for DynamicTypeSize();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104);
  v50(v14, v48, v49);
  sub_1001A8E64(&qword_1002EFF40, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v51 = (uint64_t)v14;
  id v52 = (id)v49;
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v90 = v8;
  uint64_t v91 = v2;
  uint64_t v53 = sub_100007620(&qword_1002FA060);
  id v92 = v50;
  uint64_t v54 = v53;
  uint64_t v55 = sub_1001A8A68(&qword_1002FA068, &qword_1002FA060, (void (*)(void))sub_1001A8A38);
  uint64_t v56 = sub_100014894(&qword_1002FA0A8, &qword_1002FA028);
  uint64_t v89 = v54;
  View.dynamicTypeSize<A>(_:)();
  sub_10000B070(v51, &qword_1002FA028);
  v136[4] = v131;
  v136[5] = v132;
  v137[0] = v133[0];
  *(_OWORD *)((char *)v137 + 9) = *(_OWORD *)((char *)v133 + 9);
  v136[0] = v127;
  v136[1] = v128;
  v136[2] = v129;
  v136[3] = v130;
  sub_10001F72C((uint64_t)v136);
  uint64_t v8 = (uint64_t)v120;
  v92(v120, enum case for DynamicTypeSize.xxLarge(_:), v49);
  id v52 = (id)v49;
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  *(void *)&long long v127 = v89;
  *((void *)&v127 + 1) = v126;
  *(void *)&long long v128 = v55;
  *((void *)&v128 + 1) = v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v58 = sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
  uint64_t v59 = v94;
  uint64_t v60 = v95;
  uint64_t v61 = v101;
  uint64_t v62 = v125;
  View.dynamicTypeSize<A>(_:)();
  sub_10000B070(v8, &qword_1002EFF08);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v59);
  uint64_t v63 = sub_100007620(&qword_1002EED40);
  *(void *)&long long v127 = v59;
  *((void *)&v127 + 1) = v61;
  *(void *)&long long v128 = OpaqueTypeConformance2;
  *((void *)&v128 + 1) = v58;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  uint64_t v65 = sub_100014894(&qword_1002EED78, &qword_1002EED40);
  uint64_t v66 = v96;
  uint64_t v67 = v98;
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v60, v67);
  *(void *)&long long v127 = v67;
  *((void *)&v127 + 1) = v63;
  *(void *)&long long v128 = v64;
  *((void *)&v128 + 1) = v65;
  swift_getOpaqueTypeConformance2();
  uint64_t v68 = (uint64_t)v103;
  uint64_t v69 = v100;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v66, v69);
  sub_100007620(&qword_1002F9F78);
  uint64_t v70 = v104;
  uint64_t v51 = v91;
  Binding.wrappedValue.getter();
  uint64_t v8 = (uint64_t)v109;
  sub_1001A890C(v51, (uint64_t)v109);
  uint64_t v71 = swift_allocObject();
  sub_1001A8974(v8, v71 + v123);
  sub_1001A8C1C();
  sub_1001A8E64(&qword_1002FA0B8, (void (*)(uint64_t))&type metadata accessor for NavigationSplitViewVisibility);
  uint64_t v72 = v106;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v70, v72);
  sub_10000B070(v68, &qword_1002FA048);
  id v52 = [self defaultCenter];
  if (qword_1002EE680 != -1) {
LABEL_7:
  }
    swift_once();
  id v73 = v110;
  NSNotificationCenter.publisher(for:object:)();

  id v74 = v112;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  sub_100022324();
  *(void *)&long long v127 = static OS_dispatch_queue.main.getter();
  uint64_t v75 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v76 = (uint64_t)v114;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v114, 1, 1, v75);
  sub_1001A8E64(&qword_1002FAF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1001A8E64((unint64_t *)&qword_1002F9840, (void (*)(uint64_t))sub_100022324);
  uint64_t v77 = v117;
  uint64_t v78 = v113;
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10000B070(v76, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v116);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v78);
  sub_1001A890C(v51, v8);
  uint64_t v79 = swift_allocObject();
  sub_1001A8974(v8, v79 + v123);
  uint64_t v81 = v107;
  uint64_t v80 = v108;
  uint64_t v82 = v119;
  id v83 = v124;
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 16))(v119, v124, v108);
  uint64_t v84 = sub_100007620(&qword_1002FA0C0);
  uint64_t v85 = v118;
  uint64_t v86 = v90;
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v82 + *(int *)(v84 + 52), v77, v90);
  uint64_t v87 = (uint64_t (**)())(v82 + *(int *)(v84 + 56));
  *uint64_t v87 = sub_1001A8FD8;
  v87[1] = (uint64_t (*)())v79;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v77, v86);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v83, v80);
}

uint64_t sub_1001A826C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for SidebarButton();
  uint64_t v10 = (char *)(a1 + *(int *)(v9 + 24));
  char v11 = *v10;
  uint64_t v12 = *((void *)v10 + 1);
  LOBYTE(v19) = *v10;
  uint64_t v20 = v12;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  if (v18 != 1)
  {
    LOBYTE(v19) = v11;
    uint64_t v20 = v12;
    LOBYTE(v18) = 1;
    State.wrappedValue.setter();
    uint64_t v13 = (uint64_t *)(a1 + *(int *)(v9 + 20));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v19 = v14;
    uint64_t v20 = v15;
    uint64_t v18 = 0;
    sub_100007620(&qword_1002FA058);
    State.wrappedValue.setter();
  }
  static NavigationSplitViewVisibility.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  sub_100007620(&qword_1002F9F78);
  Binding.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1001A8444(char a1, char a2)
{
  int v4 = a1 & 1;
  type metadata accessor for SidebarButton();
  sub_100007620(&qword_1002F1168);
  uint64_t result = State.wrappedValue.getter();
  if (v7 == v4)
  {
    State.wrappedValue.setter();
    if (a1 & 1) != 0 && (a2)
    {
      static Animation.easeIn(duration:)();
      Animation.delay(_:)();
      uint64_t v6 = swift_release();
      __chkstk_darwin(v6);
      withAnimation<A>(_:_:)();
      return swift_release();
    }
    else
    {
      sub_100007620(&qword_1002FA058);
      return State.wrappedValue.setter();
    }
  }
  return result;
}

uint64_t sub_1001A85E4()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_1001A865C()
{
  uint64_t v0 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static NavigationSplitViewVisibility.detailOnly.getter();
  char v4 = static NavigationSplitViewVisibility.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1001A8444(v4 & 1, 1);
}

uint64_t sub_1001A8748()
{
  uint64_t v0 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  char v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_100007620(&qword_1002F9F78);
  Binding.wrappedValue.getter();
  static NavigationSplitViewVisibility.detailOnly.getter();
  char v7 = static NavigationSplitViewVisibility.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  sub_1001A8444(v7 & 1, 1);
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t sub_1001A8880()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1001A890C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SidebarButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A8974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SidebarButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001A89D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for SidebarButton() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1001A826C(v2);
}

uint64_t sub_1001A8A38()
{
  return sub_1001A8A68(&qword_1002FA070, &qword_1002FA078, (void (*)(void))sub_1001A8AE4);
}

uint64_t sub_1001A8A68(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A8AE4()
{
  return sub_1001A8A68(&qword_1002FA080, &qword_1002FA088, (void (*)(void))sub_1001A8B14);
}

uint64_t sub_1001A8B14()
{
  return sub_1001A8A68(&qword_1002FA090, &qword_1002FA098, (void (*)(void))sub_1001A8B44);
}

unint64_t sub_1001A8B44()
{
  unint64_t result = qword_1002FA0A0;
  if (!qword_1002FA0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA0A0);
  }
  return result;
}

uint64_t sub_1001A8B9C()
{
  type metadata accessor for SidebarButton();

  return sub_1001A865C();
}

unint64_t sub_1001A8C1C()
{
  unint64_t result = qword_1002FA0B0;
  if (!qword_1002FA0B0)
  {
    sub_100007928(&qword_1002FA048);
    sub_100007928(&qword_1002FA038);
    sub_100007928(&qword_1002EED40);
    sub_100007928(&qword_1002FA030);
    sub_100007928(&qword_1002EFF08);
    sub_100007928(&qword_1002FA060);
    sub_100007928(&qword_1002FA028);
    sub_1001A8A68(&qword_1002FA068, &qword_1002FA060, (void (*)(void))sub_1001A8A38);
    sub_100014894(&qword_1002FA0A8, &qword_1002FA028);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EED78, &qword_1002EED40);
    swift_getOpaqueTypeConformance2();
    sub_1001A8E64((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA0B0);
  }
  return result;
}

uint64_t sub_1001A8E64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A8EB0()
{
  uint64_t v1 = *(void *)(type metadata accessor for SidebarButton() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_100007620(&qword_1002F9F78) + 32);
  uint64_t v8 = type metadata accessor for NavigationSplitViewVisibility();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001A8FD8()
{
  type metadata accessor for SidebarButton();

  return sub_1001A8748();
}

uint64_t sub_1001A9048()
{
  return sub_1001A8880();
}

uint64_t sub_1001A9068()
{
  return sub_100014894(&qword_1002FA0C8, &qword_1002FA0C0);
}

ValueMetadata *type metadata accessor for SidebarButtonUIKit()
{
  return &type metadata for SidebarButtonUIKit;
}

uint64_t sub_1001A90B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  id v11 = [self configurationWithTextStyle:UIFontTextStyleBody];
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12 withConfiguration:v11];

  static UIButton.Configuration.plain()();
  id v14 = v13;
  UIButton.Configuration.image.setter();
  sub_10000B0CC(0, &qword_1002F4E38);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = a3;
  swift_retain();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v16 = UIButton.init(configuration:primaryAction:)();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v16;
}

uint64_t sub_1001A9348(uint64_t a1)
{
  return sub_1001A90B8(a1, *v1, v1[1]);
}

uint64_t sub_1001A9354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001A9444();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001A93B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001A9444();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001A941C()
{
}

unint64_t sub_1001A9444()
{
  unint64_t result = qword_1002FA0D0;
  if (!qword_1002FA0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA0D0);
  }
  return result;
}

uint64_t sub_1001A9498()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for SidebarLayoutView(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 24) >= 6uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SidebarLayoutView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_retain();
  swift_retain();
  if (v6 > 5)
  {
    a1[2] = *v5;
    a1[3] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  }
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = (void *)a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  a1[10] = a2[10];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v10 = v9;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SidebarLayoutView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v4 = a1[3];
  unint64_t v5 = a2[3];
  if (v4 == 5)
  {
    if (v5 >= 6) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 5)
  {
    sub_1001A97AC((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v4 >= 5)
  {
    if (v5 >= 5)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_10016B80C((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v5 < 5)
  {
LABEL_11:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_12;
  }
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
LABEL_12:
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)a2[9];
  uint64_t v7 = (void *)a1[9];
  a1[9] = v6;
  id v8 = v6;

  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001A97AC(uint64_t a1)
{
  return a1;
}

void *assignWithTake for SidebarLayoutView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  unint64_t v6 = a2[3];
  if (v5 != 5)
  {
    if (v6 == 5)
    {
      sub_1001A97AC((uint64_t)(a1 + 2));
    }
    else if (v5 >= 5)
    {
      if (v6 >= 5)
      {
        a1[2] = *v4;
        a1[3] = v6;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_10016B80C((uint64_t)(a1 + 2));
    }
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
LABEL_8:
  a1[4] = a2[4];
  swift_release();
  uint64_t v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_release();
  a1[7] = a2[7];
  swift_release();
  a1[8] = a2[8];
  swift_release();
  id v8 = (void *)a1[9];
  a1[9] = a2[9];

  a1[10] = a2[10];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SidebarLayoutView()
{
  return &type metadata for SidebarLayoutView;
}

uint64_t sub_1001A9924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001A9940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_100007620(&qword_1002F7560);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F9F78);
  __chkstk_darwin(v4 - 8);
  uint64_t v23 = sub_100007620(&qword_1002FA0D8);
  uint64_t v5 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002FA0E0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002FA0E8);
  __chkstk_darwin(v24);
  NSString v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConversationContext(0);
  sub_1001ACBB0(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v28 = v1;
  uint64_t v27 = v1;
  sub_100007620(&qword_1002FA0F0);
  sub_1001AC3C4();
  sub_1001AC71C(&qword_1002FA100, &qword_1002FA0F0, (void (*)(void))sub_1001AC418, (void (*)(void))sub_1001AC4B8);
  NavigationSplitView.init<>(columnVisibility:sidebar:detail:)();
  long long v13 = v1[1];
  long long v33 = *v1;
  long long v34 = v13;
  long long v14 = v1[1];
  long long v29 = *v1;
  long long v30 = v14;
  sub_100007620(&qword_1002FA200);
  Binding.wrappedValue.getter();
  if (v32 == 5)
  {
    char v15 = 0;
  }
  else
  {
    char v15 = v32 == 1;
    sub_10005477C(v31, v32);
  }
  sub_1001AA53C(v15, (uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  long long v29 = v33;
  long long v30 = v34;
  Binding.wrappedValue.getter();
  unint64_t v16 = v32;
  uint64_t v17 = (uint64_t)v25;
  if (v32 == 5 || (sub_10005477C(v31, v32), v16 != 1))
  {
    uint64_t v21 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
  }
  else
  {
    uint64_t v18 = enum case for ColorScheme.dark(_:);
    uint64_t v19 = type metadata accessor for ColorScheme();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  sub_10000C3A4(v17, (uint64_t)&v12[*(int *)(v24 + 36)], &qword_1002F7560);
  sub_10000C3A4((uint64_t)v10, (uint64_t)v12, &qword_1002FA0E0);
  sub_10000B070(v17, &qword_1002F7560);
  sub_10000B070((uint64_t)v10, &qword_1002FA0E0);
  return sub_10001323C((uint64_t)v12, v26, &qword_1002FA0E8);
}

__n128 sub_1001A9E74@<Q0>(__n128 *a1@<X8>)
{
  sub_100007620(&qword_1002FA200);
  Binding.projectedValue.getter();
  __n128 result = v5;
  a1->n128_u64[0] = v3;
  a1->n128_u64[1] = v4;
  a1[1] = v5;
  return result;
}

uint64_t sub_1001A9ECC@<X0>(uint64_t a1@<X8>)
{
  sub_100007620(&qword_1002FA200);
  Binding.wrappedValue.getter();
  sub_1001A9F4C(v3, v4, a1);
  return sub_10005477C(v3, v4);
}

uint64_t sub_1001A9F4C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = v3;
  uint64_t v8 = sub_100007620(&qword_1002FA238);
  __chkstk_darwin(v8);
  id v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100007620(&qword_1002FA140);
  __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002FA130);
  __chkstk_darwin(v12);
  uint64_t v64 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002FA150);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002FA120);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v67 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = sub_100007620(&qword_1002FA0F0);
  __chkstk_darwin(v22 - 8);
  uint64_t v66 = (uint64_t)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v16;
  sub_1001AAB90(a1, v4, (uint64_t)v16);
  unint64_t v65 = a2;
  if (a2 == 1)
  {
    sub_10000C3A4((uint64_t)v68, (uint64_t)v10, &qword_1002FA150);
    swift_storeEnumTagMultiPayload();
    sub_1001AC4F4();
    sub_1001AC634();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v24 = static VerticalAlignment.center.getter();
    uint64_t v53 = static Color.clear.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v54 = v12;
    uint64_t v25 = v69;
    uint64_t v56 = v10;
    char v26 = v70;
    uint64_t v61 = a3;
    uint64_t v27 = v71;
    uint64_t v57 = v14;
    char v28 = v72;
    uint64_t v59 = a1;
    uint64_t v60 = v4;
    uint64_t v30 = v73;
    uint64_t v29 = v74;
    HorizontalEdge.rawValue.getter();
    char v31 = Edge.init(rawValue:)();
    uint64_t v55 = v8;
    char v32 = v31;
    uint64_t v33 = static SafeAreaRegions.container.getter();
    uint64_t v58 = v21;
    uint64_t v34 = v33;
    uint64_t v35 = v63;
    sub_10000C3A4((uint64_t)v68, v63, &qword_1002FA150);
    uint64_t v36 = v35 + *(int *)(v62 + 36);
    *(void *)uint64_t v36 = v53;
    *(_WORD *)(v36 + 8) = 256;
    *(void *)(v36 + 16) = v25;
    *(unsigned char *)(v36 + 24) = v26;
    *(void *)(v36 + 32) = v27;
    *(unsigned char *)(v36 + 40) = v28;
    *(void *)(v36 + 48) = v30;
    *(void *)(v36 + 56) = v29;
    *(void *)(v36 + 64) = v34;
    *(void *)(v36 + 72) = 0;
    *(unsigned char *)(v36 + 80) = 1;
    *(unsigned char *)(v36 + 81) = v32;
    *(void *)(v36 + 88) = v24;
    uint64_t v62 = static VerticalAlignment.center.getter();
    uint64_t v53 = static Color.clear.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v52 = v75;
    char v37 = v76;
    uint64_t v38 = v77;
    LOBYTE(v29) = v78;
    uint64_t v40 = v79;
    uint64_t v39 = v80;
    HorizontalEdge.rawValue.getter();
    LOBYTE(v34) = Edge.init(rawValue:)();
    uint64_t v41 = static SafeAreaRegions.container.getter();
    uint64_t v42 = v64;
    sub_10000C3A4(v35, v64, &qword_1002FA140);
    uint64_t v43 = v42 + *(int *)(v54 + 36);
    *(void *)uint64_t v43 = v53;
    *(_WORD *)(v43 + 8) = 256;
    *(void *)(v43 + 16) = v52;
    *(unsigned char *)(v43 + 24) = v37;
    *(void *)(v43 + 32) = v38;
    *(unsigned char *)(v43 + 40) = v29;
    unint64_t v4 = v60;
    a3 = v61;
    *(void *)(v43 + 48) = v40;
    *(void *)(v43 + 56) = v39;
    a1 = v59;
    *(void *)(v43 + 64) = v41;
    *(void *)(v43 + 72) = 0;
    *(unsigned char *)(v43 + 80) = 1;
    *(unsigned char *)(v43 + 81) = v34;
    uint64_t v21 = v58;
    *(void *)(v43 + 88) = v62;
    sub_10000B070(v35, &qword_1002FA140);
    sub_10000C3A4(v42, (uint64_t)v56, &qword_1002FA130);
    swift_storeEnumTagMultiPayload();
    sub_1001AC4F4();
    sub_1001AC634();
    _ConditionalContent<>.init(storage:)();
    sub_10000B070(v42, &qword_1002FA130);
  }
  sub_10001323C(v67, (uint64_t)v21, &qword_1002FA120);
  sub_10000B070((uint64_t)v68, &qword_1002FA150);
  unint64_t v44 = v65;
  if (v65 == 5) {
    uint64_t v45 = 0;
  }
  else {
    uint64_t v45 = a1;
  }
  if (v65 == 5) {
    unint64_t v46 = 4;
  }
  else {
    unint64_t v46 = v65;
  }
  uint64_t v47 = v4[10];
  sub_1001ACAF0(a1, v65);
  char v48 = sub_1000F8CC4(v45, v46, v47);
  sub_10005477C(a1, v44);
  sub_1001ACB00(v4);
  char v49 = v48 & 1;
  uint64_t v50 = v66;
  sub_10023D484(v49, (uint64_t)v21, v4, v66);
  sub_10000B070((uint64_t)v21, &qword_1002FA120);
  return sub_10001323C(v50, a3, &qword_1002FA0F0);
}

uint64_t sub_1001AA53C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v41 = type metadata accessor for AutomaticNavigationSplitViewStyle();
  uint64_t v35 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  unint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100007620(&qword_1002FA208);
  uint64_t v36 = *(void *)(v42 - 8);
  uint64_t v5 = __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v37 = sub_100007620(&qword_1002FA210);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ProminentDetailNavigationSplitViewStyle();
  uint64_t v11 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100007620(&qword_1002FA218);
  uint64_t v14 = *(void *)(v39 - 8);
  uint64_t v15 = __chkstk_darwin(v39);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v34 - v18;
  if (a1)
  {
    static NavigationSplitViewStyle<>.prominentDetail.getter();
    uint64_t v20 = sub_100007620(&qword_1002FA0D8);
    uint64_t v21 = sub_100014894(&qword_1002FA220, &qword_1002FA0D8);
    uint64_t v22 = sub_1001ACBB0(&qword_1002FA230, (void (*)(uint64_t))&type metadata accessor for ProminentDetailNavigationSplitViewStyle);
    uint64_t v23 = v38;
    View.navigationSplitViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
    uint64_t v24 = v39;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v17, v39);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v40, v19, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v20;
    uint64_t v45 = v23;
    uint64_t v46 = v21;
    uint64_t v47 = v22;
    swift_getOpaqueTypeConformance2();
    uint64_t v25 = sub_1001ACBB0(&qword_1002FA228, (void (*)(uint64_t))&type metadata accessor for AutomaticNavigationSplitViewStyle);
    uint64_t v44 = v20;
    uint64_t v45 = v41;
    uint64_t v46 = v21;
    uint64_t v47 = v25;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v24);
  }
  else
  {
    static NavigationSplitViewStyle<>.automatic.getter();
    uint64_t v27 = sub_100007620(&qword_1002FA0D8);
    uint64_t v28 = sub_100014894(&qword_1002FA220, &qword_1002FA0D8);
    uint64_t v29 = sub_1001ACBB0(&qword_1002FA228, (void (*)(uint64_t))&type metadata accessor for AutomaticNavigationSplitViewStyle);
    uint64_t v30 = v41;
    View.navigationSplitViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v30);
    uint64_t v31 = v36;
    uint64_t v32 = v42;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v9, v7, v42);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v40, v9, v32);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = sub_1001ACBB0(&qword_1002FA230, (void (*)(uint64_t))&type metadata accessor for ProminentDetailNavigationSplitViewStyle);
    uint64_t v44 = v27;
    uint64_t v45 = v38;
    uint64_t v46 = v28;
    uint64_t v47 = v33;
    swift_getOpaqueTypeConformance2();
    uint64_t v44 = v27;
    uint64_t v45 = v30;
    uint64_t v46 = v28;
    uint64_t v47 = v29;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  }
}

uint64_t sub_1001AAB90@<X0>(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  Swift::String v137 = a2;
  uint64_t v112 = a1;
  uint64_t v142 = a3;
  uint64_t v134 = sub_100007620(&qword_1002FA240);
  __chkstk_darwin(v134);
  unint64_t v4 = (char *)&v109 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100007620(&qword_1002FA1D0);
  __chkstk_darwin(v141);
  uint64_t v136 = (char *)&v109 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = type metadata accessor for FavoritesDetailView();
  __chkstk_darwin(v135);
  uint64_t v7 = (uint64_t *)((char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v127 = type metadata accessor for FavoritesView();
  __chkstk_darwin(v127);
  uint64_t v113 = (uint64_t *)((char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v124 = sub_100007620(&qword_1002FA248);
  __chkstk_darwin(v124);
  uint64_t v126 = (uint64_t)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100007620(&qword_1002FA1B0);
  __chkstk_darwin(v133);
  long long v128 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v115 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F1068);
  __chkstk_darwin(v12 - 8);
  uint64_t v111 = (uint64_t *)((char *)&v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = type metadata accessor for ConversationView();
  __chkstk_darwin(v123);
  uint64_t v15 = (uint64_t *)((char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = sub_100007620(&qword_1002FA250);
  uint64_t v119 = *(void *)(v125 - 8);
  uint64_t v16 = __chkstk_darwin(v125);
  uint64_t v114 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v118 = (char *)&v109 - v18;
  uint64_t v19 = type metadata accessor for ImageTranslationView();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100007620(&qword_1002FA190);
  __chkstk_darwin(v121);
  uint64_t v23 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100007620(&qword_1002FA258);
  uint64_t v109 = *(void *)(v122 - 8);
  uint64_t v24 = __chkstk_darwin(v122);
  char v26 = (char *)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v110 = (char *)&v109 - v27;
  uint64_t v138 = sub_100007620(&qword_1002FA260);
  __chkstk_darwin(v138);
  uint64_t v140 = (uint64_t)&v109 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100007620(&qword_1002FA268);
  __chkstk_darwin(v129);
  uint64_t v131 = (uint64_t)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100007620(&qword_1002FA270);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v109 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100007620(&qword_1002FA180);
  __chkstk_darwin(v130);
  uint64_t v120 = (char *)&v109 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100007620(&qword_1002FA170);
  __chkstk_darwin(v139);
  long long v132 = (char *)&v109 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for TranslateContentView();
  __chkstk_darwin(v35);
  uint64_t v38 = (uint64_t *)((char *)&v109 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  switch(v36)
  {
    case 0uLL:
      *(uint64_t *)((char *)v38 + *(int *)(v35 + 20)) = swift_getKeyPath();
      sub_100007620((uint64_t *)&unk_1002F5770);
      swift_storeEnumTagMultiPayload();
      type metadata accessor for ComposeTranslationViewModel(0);
      sub_1001ACBB0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
      swift_retain();
      *uint64_t v38 = ObservedObject.init(wrappedValue:)();
      v38[1] = v56;
      sub_1001ACBF8((uint64_t)v38, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
      swift_storeEnumTagMultiPayload();
      sub_1001ACBB0(&qword_1002FA188, (void (*)(uint64_t))type metadata accessor for TranslateContentView);
      unint64_t v57 = sub_1001AC88C();
      *(void *)&long long v143 = v121;
      *((void *)&v143 + 1) = v57;
      swift_getOpaqueTypeConformance2();
      uint64_t v58 = (uint64_t)v120;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v58, v131, &qword_1002FA180);
      swift_storeEnumTagMultiPayload();
      sub_1001AC7A4();
      sub_1001AC938();
      uint64_t v59 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v58, &qword_1002FA180);
      sub_10000C3A4(v59, v140, &qword_1002FA170);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v59, &qword_1002FA170);
      uint64_t v60 = type metadata accessor for TranslateContentView;
      goto LABEL_10;
    case 1uLL:
      if (!sub_10000619C()) {
        goto LABEL_2;
      }
      uint64_t v144 = &type metadata for TranslateFeatures;
      unint64_t v145 = sub_10000AB14();
      LOBYTE(v143) = 0;
      char v61 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)&v143);
      if ((v61 & 1) == 0) {
        goto LABEL_2;
      }
      sub_10010D20C((uint64_t)v21);
      uint64_t v62 = static SafeAreaRegions.all.getter();
      char v63 = static Edge.Set.horizontal.getter();
      sub_1001ACBF8((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      uint64_t v64 = v121;
      unint64_t v65 = &v23[*(int *)(v121 + 36)];
      *(void *)unint64_t v65 = v62;
      v65[8] = v63;
      sub_1001ACC60((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      unint64_t v66 = sub_1001AC88C();
      View.navigationBarHidden(_:)();
      sub_10000B070((uint64_t)v23, &qword_1002FA190);
      uint64_t v67 = v109;
      uint64_t v68 = v110;
      uint64_t v69 = v122;
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v110, v26, v122);
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v32, v68, v69);
      swift_storeEnumTagMultiPayload();
      sub_1001ACBB0(&qword_1002FA188, (void (*)(uint64_t))type metadata accessor for TranslateContentView);
      *(void *)&long long v143 = v64;
      *((void *)&v143 + 1) = v66;
      swift_getOpaqueTypeConformance2();
      uint64_t v70 = (uint64_t)v120;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v70, v131, &qword_1002FA180);
      swift_storeEnumTagMultiPayload();
      sub_1001AC7A4();
      sub_1001AC938();
      uint64_t v71 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v70, &qword_1002FA180);
      sub_10000C3A4(v71, v140, &qword_1002FA170);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v71, &qword_1002FA170);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v110, v69);
      break;
    case 2uLL:
      char v72 = (void *)v137[9];
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v74 = (uint64_t)v111;
      uint64_t *v111 = KeyPath;
      sub_100007620((uint64_t *)&unk_1002F5770);
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = swift_getKeyPath();
      char v76 = (int *)v123;
      *(uint64_t *)((char *)v15 + *(int *)(v123 + 28)) = v75;
      sub_100007620(&qword_1002F3598);
      swift_storeEnumTagMultiPayload();
      type metadata accessor for SharedTranslationOptions();
      sub_1001ACBB0(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
      id v77 = v72;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t *v15 = EnvironmentObject.init()();
      v15[1] = v78;
      type metadata accessor for SceneContext();
      sub_1001ACBB0((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
      long long v15[2] = EnvironmentObject.init()();
      v15[3] = v79;
      sub_10001323C(v74, (uint64_t)v15 + v76[6], &qword_1002F1068);
      uint64_t v80 = (uint64_t *)((char *)v15 + v76[8]);
      type metadata accessor for ConversationViewModel();
      sub_1001ACBB0(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
      *uint64_t v80 = ObservedObject.init(wrappedValue:)();
      v80[1] = v81;
      uint64_t v82 = (uint64_t *)((char *)v15 + v76[9]);
      type metadata accessor for DeviceHelper();
      sub_1001ACBB0(&qword_1002F4A68, (void (*)(uint64_t))type metadata accessor for DeviceHelper);
      *uint64_t v82 = ObservedObject.init(wrappedValue:)();
      v82[1] = v83;
      uint64_t v84 = (uint64_t *)((char *)v15 + v76[10]);
      type metadata accessor for LanguagesService();
      sub_1001ACBB0((unint64_t *)&unk_1002FCA70, (void (*)(uint64_t))&type metadata accessor for LanguagesService);
      *uint64_t v84 = ObservedObject.init(wrappedValue:)();
      v84[1] = v85;
      uint64_t v86 = (uint64_t *)((char *)v15 + v76[11]);
      type metadata accessor for TranslationSession_RD();
      sub_1001ACBB0(&qword_1002F4A70, (void (*)(uint64_t))type metadata accessor for TranslationSession_RD);
      *uint64_t v86 = ObservedObject.init(wrappedValue:)();
      v86[1] = v87;
      uint64_t v88 = (char *)v15 + v76[12];
      LOBYTE(v146) = 0;
      State.init(wrappedValue:)();
      uint64_t v89 = *((void *)&v143 + 1);
      *uint64_t v88 = v143;
      *((void *)v88 + 1) = v89;
      uint64_t v90 = v76[13];
      uint64_t v146 = 0;
      State.init(wrappedValue:)();
      *(_OWORD *)((char *)v15 + v90) = v143;
      uint64_t v91 = v116;
      id v92 = v115;
      uint64_t v93 = v117;
      (*(void (**)(char *, void, uint64_t))(v116 + 104))(v115, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v117);
      uint64_t v94 = sub_1001ACBB0(&qword_1002FA1B8, (void (*)(uint64_t))type metadata accessor for ConversationView);
      uint64_t v95 = v114;
      View.navigationBarTitleDisplayMode(_:)();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
      sub_1001ACC60((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ConversationView);
      uint64_t v96 = v119;
      uint64_t v97 = v118;
      uint64_t v98 = v125;
      (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v118, v95, v125);
      (*(void (**)(uint64_t, char *, uint64_t))(v96 + 16))(v126, v97, v98);
      swift_storeEnumTagMultiPayload();
      *(void *)&long long v143 = v76;
      *((void *)&v143 + 1) = v94;
      swift_getOpaqueTypeConformance2();
      sub_1001ACBB0(&qword_1002FA1C0, (void (*)(uint64_t))type metadata accessor for FavoritesView);
      uint64_t v99 = (uint64_t)v128;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v99, v131, &qword_1002FA1B0);
      swift_storeEnumTagMultiPayload();
      sub_1001AC7A4();
      sub_1001AC938();
      uint64_t v100 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v99, &qword_1002FA1B0);
      sub_10000C3A4(v100, v140, &qword_1002FA170);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v100, &qword_1002FA170);
      return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v97, v98);
    case 3uLL:
      uint64_t v101 = *(void *)(v137[8] + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
      uint64_t v102 = *(void *)(v137[9] + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session);
      uint64_t v104 = v137[6];
      uint64_t v103 = v137[7];
      uint64_t v105 = swift_getKeyPath();
      uint64_t v38 = v113;
      *(uint64_t *)((char *)v113 + *(int *)(v127 + 32)) = v105;
      sub_100007620((uint64_t *)&unk_1002F5770);
      swift_storeEnumTagMultiPayload();
      *uint64_t v38 = v104;
      v38[1] = v101;
      v38[2] = v102;
      v38[3] = v103;
      sub_1001ACBF8((uint64_t)v38, v126, (uint64_t (*)(void))type metadata accessor for FavoritesView);
      swift_storeEnumTagMultiPayload();
      uint64_t v106 = sub_1001ACBB0(&qword_1002FA1B8, (void (*)(uint64_t))type metadata accessor for ConversationView);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      *(void *)&long long v143 = v123;
      *((void *)&v143 + 1) = v106;
      swift_getOpaqueTypeConformance2();
      sub_1001ACBB0(&qword_1002FA1C0, (void (*)(uint64_t))type metadata accessor for FavoritesView);
      uint64_t v107 = (uint64_t)v128;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v107, v131, &qword_1002FA1B0);
      swift_storeEnumTagMultiPayload();
      sub_1001AC7A4();
      sub_1001AC938();
      uint64_t v108 = (uint64_t)v132;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v107, &qword_1002FA1B0);
      sub_10000C3A4(v108, v140, &qword_1002FA170);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v108, &qword_1002FA170);
      uint64_t v60 = type metadata accessor for FavoritesView;
LABEL_10:
      uint64_t v54 = v60;
      uint64_t v55 = (uint64_t)v38;
      goto LABEL_11;
    case 4uLL:
    case 5uLL:
LABEL_2:
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v39 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v41 = v40;
      *(void *)unint64_t v4 = v39;
      *((void *)v4 + 1) = v40;
      char v43 = v42 & 1;
      v4[16] = v42 & 1;
      *((void *)v4 + 3) = v44;
      swift_storeEnumTagMultiPayload();
      sub_10001FC74(v39, v41, v43);
      sub_1001ACBB0(&qword_1002FA1D8, (void (*)(uint64_t))type metadata accessor for FavoritesDetailView);
      swift_bridgeObjectRetain();
      uint64_t v45 = (uint64_t)v136;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v45, v140, &qword_1002FA1D0);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v45, &qword_1002FA1D0);
      sub_10001FC84(v39, v41, v43);
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v47 = *(void *)(v137[8] + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
      uint64_t v49 = v137[6];
      uint64_t v48 = v137[7];
      uint64_t v50 = *(void *)(v137[9] + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session);
      unint64_t v51 = v36;
      *(uint64_t *)((char *)v7 + *(int *)(v135 + 36)) = swift_getKeyPath();
      sub_100007620((uint64_t *)&unk_1002F5770);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v112;
      uint64_t *v7 = v112;
      v7[1] = v51;
      void v7[2] = v49;
      v7[3] = v48;
      v7[4] = v47;
      v7[5] = v50;
      sub_1001ACBF8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FavoritesDetailView);
      swift_storeEnumTagMultiPayload();
      sub_1001ACAF0(v52, v51);
      sub_1001ACBB0(&qword_1002FA1D8, (void (*)(uint64_t))type metadata accessor for FavoritesDetailView);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v53 = (uint64_t)v136;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v53, v140, &qword_1002FA1D0);
      swift_storeEnumTagMultiPayload();
      sub_1001AC6E0();
      sub_1001ACA44();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v53, &qword_1002FA1D0);
      uint64_t v54 = type metadata accessor for FavoritesDetailView;
      uint64_t v55 = (uint64_t)v7;
LABEL_11:
      uint64_t result = sub_1001ACC60(v55, (uint64_t (*)(void))v54);
      break;
  }
  return result;
}

uint64_t sub_1001AC360@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A9940(a1);
}

double sub_1001AC3B4@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1001A9E74(a1).n128_u64[0];
  return result;
}

uint64_t sub_1001AC3BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A9ECC(a1);
}

unint64_t sub_1001AC3C4()
{
  unint64_t result = qword_1002FA0F8;
  if (!qword_1002FA0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA0F8);
  }
  return result;
}

unint64_t sub_1001AC418()
{
  unint64_t result = qword_1002FA108;
  if (!qword_1002FA108)
  {
    sub_100007928(&qword_1002FA110);
    sub_1001AC4B8();
    sub_100014894(&qword_1002FA1F0, &qword_1002FA1F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA108);
  }
  return result;
}

uint64_t sub_1001AC4B8()
{
  return sub_1001AC71C(&qword_1002FA118, &qword_1002FA120, (void (*)(void))sub_1001AC4F4, (void (*)(void))sub_1001AC634);
}

unint64_t sub_1001AC4F4()
{
  unint64_t result = qword_1002FA128;
  if (!qword_1002FA128)
  {
    sub_100007928(&qword_1002FA130);
    sub_1001AC594();
    sub_100014894(&qword_1002FA1E0, &qword_1002FA1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA128);
  }
  return result;
}

unint64_t sub_1001AC594()
{
  unint64_t result = qword_1002FA138;
  if (!qword_1002FA138)
  {
    sub_100007928(&qword_1002FA140);
    sub_1001AC634();
    sub_100014894(&qword_1002FA1E0, &qword_1002FA1E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA138);
  }
  return result;
}

unint64_t sub_1001AC634()
{
  unint64_t result = qword_1002FA148;
  if (!qword_1002FA148)
  {
    sub_100007928(&qword_1002FA150);
    sub_1001AC71C(&qword_1002FA158, &qword_1002FA160, (void (*)(void))sub_1001AC6E0, (void (*)(void))sub_1001ACA44);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA148);
  }
  return result;
}

uint64_t sub_1001AC6E0()
{
  return sub_1001AC71C(&qword_1002FA168, &qword_1002FA170, (void (*)(void))sub_1001AC7A4, (void (*)(void))sub_1001AC938);
}

uint64_t sub_1001AC71C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001AC7A4()
{
  unint64_t result = qword_1002FA178;
  if (!qword_1002FA178)
  {
    sub_100007928(&qword_1002FA180);
    sub_1001ACBB0(&qword_1002FA188, (void (*)(uint64_t))type metadata accessor for TranslateContentView);
    sub_100007928(&qword_1002FA190);
    sub_1001AC88C();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA178);
  }
  return result;
}

unint64_t sub_1001AC88C()
{
  unint64_t result = qword_1002FA198;
  if (!qword_1002FA198)
  {
    sub_100007928(&qword_1002FA190);
    sub_1001ACBB0(&qword_1002FA1A0, (void (*)(uint64_t))type metadata accessor for ImageTranslationView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA198);
  }
  return result;
}

unint64_t sub_1001AC938()
{
  unint64_t result = qword_1002FA1A8;
  if (!qword_1002FA1A8)
  {
    sub_100007928(&qword_1002FA1B0);
    type metadata accessor for ConversationView();
    sub_1001ACBB0(&qword_1002FA1B8, (void (*)(uint64_t))type metadata accessor for ConversationView);
    swift_getOpaqueTypeConformance2();
    sub_1001ACBB0(&qword_1002FA1C0, (void (*)(uint64_t))type metadata accessor for FavoritesView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA1A8);
  }
  return result;
}

unint64_t sub_1001ACA44()
{
  unint64_t result = qword_1002FA1C8;
  if (!qword_1002FA1C8)
  {
    sub_100007928(&qword_1002FA1D0);
    sub_1001ACBB0(&qword_1002FA1D8, (void (*)(uint64_t))type metadata accessor for FavoritesDetailView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA1C8);
  }
  return result;
}

uint64_t sub_1001ACAF0(uint64_t a1, unint64_t a2)
{
  if (a2 != 5) {
    return sub_10000CB44(a1, a2);
  }
  return a1;
}

void *sub_1001ACB00(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  unint64_t v4 = (void *)a1[9];
  swift_retain();
  swift_retain();
  sub_1001ACAF0(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v5 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1001ACBB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001ACBF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001ACC60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001ACCC4()
{
  unint64_t result = qword_1002FA278;
  if (!qword_1002FA278)
  {
    sub_100007928(&qword_1002FA0E8);
    sub_1001ACD64();
    sub_100014894(&qword_1002FA288, &qword_1002F7558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA278);
  }
  return result;
}

unint64_t sub_1001ACD64()
{
  unint64_t result = qword_1002FA280;
  if (!qword_1002FA280)
  {
    sub_100007928(&qword_1002FA0E0);
    sub_100007928(&qword_1002FA0D8);
    type metadata accessor for ProminentDetailNavigationSplitViewStyle();
    sub_100014894(&qword_1002FA220, &qword_1002FA0D8);
    sub_1001ACBB0(&qword_1002FA230, (void (*)(uint64_t))&type metadata accessor for ProminentDetailNavigationSplitViewStyle);
    swift_getOpaqueTypeConformance2();
    type metadata accessor for AutomaticNavigationSplitViewStyle();
    sub_1001ACBB0(&qword_1002FA228, (void (*)(uint64_t))&type metadata accessor for AutomaticNavigationSplitViewStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA280);
  }
  return result;
}

unint64_t destroy for SidebarListView(uint64_t a1)
{
  swift_release();
  swift_release();
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 6)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SidebarListView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_retain();
  swift_retain();
  if (v5 > 5)
  {
    a1[2] = *v4;
    a1[3] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  }
  return a1;
}

void *assignWithCopy for SidebarListView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v4 = a1[3];
  unint64_t v5 = a2[3];
  if (v4 == 5)
  {
    if (v5 >= 6) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 5)
  {
    sub_1001A97AC((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v4 >= 5)
  {
    if (v5 >= 5)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_10016B80C((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v5 < 5)
  {
LABEL_11:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for SidebarListView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  unint64_t v6 = a2[3];
  if (v5 != 5)
  {
    if (v6 == 5)
    {
      sub_1001A97AC((uint64_t)(a1 + 2));
    }
    else if (v5 >= 5)
    {
      if (v6 >= 5)
      {
        a1[2] = *v4;
        a1[3] = v6;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_10016B80C((uint64_t)(a1 + 2));
    }
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarListView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarListView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarListView()
{
  return &type metadata for SidebarListView;
}

uint64_t sub_1001AD20C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001AD228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v9 = type metadata accessor for SidebarListStyle();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v34 = v9;
  uint64_t v35 = v10;
  __chkstk_darwin(v9);
  uint64_t v33 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002FA290);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100007620(&qword_1002FA298);
  uint64_t v15 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100007620(&qword_1002FA2A0);
  uint64_t v18 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100007620(&qword_1002FA2A8);
  __chkstk_darwin(v31);
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  sub_100007620(&qword_1002FA200);
  Binding.projectedValue.getter();
  sub_100007620(&qword_1002FA2B0);
  sub_10000CA98();
  sub_100014894(&qword_1002FA2B8, &qword_1002FA2B0);
  List.init(selection:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  sub_100014894(&qword_1002FA2C0, &qword_1002FA298);
  uint64_t v23 = v30;
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v23);
  static Color.accentColor.getter();
  static ListItemTint.fixed(_:)();
  uint64_t v24 = type metadata accessor for ListItemTint();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 0, 1, v24);
  sub_10000C3A4((uint64_t)v14, (uint64_t)&v22[*(int *)(v31 + 36)], &qword_1002FA290);
  uint64_t v25 = v32;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v32);
  sub_10000B070((uint64_t)v14, &qword_1002FA290);
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v25);
  char v26 = v33;
  SidebarListStyle.init()();
  sub_1001AE298();
  uint64_t v27 = v34;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v27);
  return sub_10000B070((uint64_t)v22, &qword_1002FA2A8);
}

uint64_t sub_1001AD6F8@<X0>(char *a1@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v48 = (void (*)(char *, char *, uint64_t))type metadata accessor for FavoritesSideBarListView();
  uint64_t v1 = __chkstk_darwin(v48);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  uint64_t v51 = (uint64_t)&v44 - v4;
  uint64_t v5 = sub_100007620(&qword_1002FA2E0);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v57 = (char *)&v44 - v8;
  uint64_t v9 = sub_100007620(&qword_1002FA2E8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = sub_100007620(&qword_1002FA2F0);
  uint64_t v55 = *(void *)(v15 - 8);
  uint64_t v56 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v54 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v44 - v18;
  long long v58 = 0uLL;
  sub_100007620(&qword_1002FA2F8);
  sub_1001AE398(&qword_1002FA300, &qword_1002FA2F8, &qword_1002EED90, &qword_1002EED70);
  sub_10000CA98();
  uint64_t v52 = v19;
  NavigationLink<>.init<A>(value:label:)();
  if (sub_10000619C()
    && (uint64_t v59 = &type metadata for TranslateFeatures,
        unint64_t v60 = sub_10000AB14(),
        LOBYTE(v58) = 0,
        char v20 = isFeatureEnabled(_:)(),
        sub_10000AB68((uint64_t)&v58),
        (v20 & 1) != 0))
  {
    long long v58 = xmmword_10024FEC0;
    sub_100007620(&qword_1002F22C8);
    sub_1001AE398((unint64_t *)&qword_1002F22D0, &qword_1002F22C8, &qword_1002EED78, &qword_1002EED40);
    NavigationLink<>.init<A>(value:label:)();
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
  uint64_t v47 = v14;
  v22(v14, v21, 1, v5);
  long long v58 = xmmword_10024D860;
  sub_100007620(&qword_1002F22C8);
  sub_1001AE398((unint64_t *)&qword_1002F22D0, &qword_1002F22C8, &qword_1002EED78, &qword_1002EED40);
  NavigationLink<>.init<A>(value:label:)();
  uint64_t v23 = (uint64_t)v3;
  *(void *)uint64_t v3 = swift_getKeyPath();
  v3[8] = 0;
  type metadata accessor for PersistedTranslation();
  static PersistedTranslation.favoritedSortedByLocalePairAndCreationDateFetchRequest()();
  FetchRequest.init(fetchRequest:animation:)();
  uint64_t v24 = (uint64_t)v3;
  uint64_t v25 = v51;
  sub_1001AE43C(v24, v51);
  char v26 = v54;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v28 = v56;
  v27(v54, v52, v56);
  uint64_t v45 = v12;
  sub_10000C3A4((uint64_t)v14, (uint64_t)v12, &qword_1002FA2E8);
  uint64_t v29 = v53;
  uint64_t v30 = v5;
  uint64_t v46 = v5;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v31 = v49;
  v48(v49, v57, v30);
  uint64_t v32 = v25;
  uint64_t v33 = v23;
  sub_1001AE4A0(v32, v23);
  uint64_t v34 = v50;
  v27(v50, v26, v28);
  uint64_t v35 = (int *)sub_100007620(&qword_1002FA308);
  uint64_t v36 = (uint64_t)v45;
  sub_10000C3A4((uint64_t)v45, (uint64_t)&v34[v35[12]], &qword_1002FA2E8);
  uint64_t v37 = v31;
  uint64_t v38 = v31;
  uint64_t v39 = v46;
  v48(&v34[v35[16]], v37, v46);
  sub_1001AE4A0(v33, (uint64_t)&v34[v35[20]]);
  sub_1001AE504(v51);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v29 + 8);
  v40(v57, v39);
  sub_10000B070((uint64_t)v47, &qword_1002FA2E8);
  uint64_t v41 = v56;
  char v42 = *(void (**)(char *, uint64_t))(v55 + 8);
  v42(v52, v56);
  sub_1001AE504(v33);
  v40(v38, v39);
  sub_10000B070(v36, &qword_1002FA2E8);
  return ((uint64_t (*)(char *, uint64_t))v42)(v54, v41);
}

uint64_t sub_1001ADD1C()
{
  uint64_t v0 = sub_100007620(&qword_1002EED70);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002EEDA0);
  sub_10000C5C4();
  Label.init(title:icon:)();
  sub_100014894(&qword_1002EED90, &qword_1002EED70);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1001ADE9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_1001ADFDC()
{
  uint64_t v0 = sub_100007620(&qword_1002EED40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1001AE130()
{
  uint64_t v0 = sub_100007620(&qword_1002EED40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1001AE28C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001AD228(*v1, v1[1], v1[2], v1[3], a1);
}

unint64_t sub_1001AE298()
{
  unint64_t result = qword_1002FA2C8;
  if (!qword_1002FA2C8)
  {
    sub_100007928(&qword_1002FA2A8);
    sub_100007928(&qword_1002FA298);
    sub_100014894(&qword_1002FA2C0, &qword_1002FA298);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002FA2D0, &qword_1002FA2D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA2C8);
  }
  return result;
}

uint64_t sub_1001AE398(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    sub_100014894(a3, a4);
    sub_100015068();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AE43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FavoritesSideBarListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AE4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FavoritesSideBarListView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AE504(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FavoritesSideBarListView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AE560()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_1001AE5D4(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 8;
    uint64_t v9 = a2[8];
    *((void *)a1 + 1) = a2[1];
    *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
    a1[20] = *((unsigned char *)a2 + 20);
    uint64_t v10 = a2[4];
    *((void *)a1 + 3) = a2[3];
    *((void *)a1 + 4) = v10;
    a1[40] = *((unsigned char *)a2 + 40);
    uint64_t v11 = a2[7];
    *((void *)a1 + 6) = a2[6];
    *((void *)a1 + 7) = v11;
    uint64_t v12 = v5;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v9)
    {
      uint64_t v13 = a2[9];
      *((void *)a1 + 8) = v9;
      *((void *)a1 + 9) = v13;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *v8;
    }
    a1[80] = *((unsigned char *)a2 + 80);
    uint64_t v14 = a3[15];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for Locale();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&a1[a3[16]], (uint64_t)a2 + a3[16], v17);
    uint64_t v19 = a3[17];
    uint64_t v20 = a3[18];
    uint64_t v21 = &a1[v19];
    uint64_t v22 = (char **)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *(void *)uint64_t v21 = *v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = &a1[v20];
    uint64_t v25 = (char **)((char *)a2 + v20);
    uint64_t v26 = v25[1];
    *(void *)uint64_t v24 = *v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = a3[19];
    uint64_t v28 = a3[20];
    uint64_t v29 = &a1[v27];
    uint64_t v30 = (char **)((char *)a2 + v27);
    uint64_t v31 = v30[1];
    *(void *)uint64_t v29 = *v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = &a1[v28];
    uint64_t v33 = (char **)((char *)a2 + v28);
    uint64_t v34 = v33[1];
    *(void *)uint64_t v32 = *v33;
    *((void *)v32 + 1) = v34;
    uint64_t v35 = a3[21];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = (uint64_t)a2 + v35;
    uint64_t v38 = *(uint64_t *)((char *)a2 + v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v38)
    {
      uint64_t v39 = *(void *)(v37 + 8);
      *(void *)uint64_t v36 = v38;
      *((void *)v36 + 1) = v39;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    uint64_t v40 = a3[22];
    uint64_t v41 = &a1[v40];
    char v42 = (char **)((char *)a2 + v40);
    if (*v42)
    {
      uint64_t v43 = v42[1];
      *(void *)uint64_t v41 = *v42;
      *((void *)v41 + 1) = v43;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    }
    uint64_t v44 = a3[23];
    uint64_t v45 = &a1[v44];
    uint64_t v46 = (char **)((char *)a2 + v44);
    if (*v46)
    {
      uint64_t v47 = v46[1];
      *(void *)uint64_t v45 = *v46;
      *((void *)v45 + 1) = v47;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
    }
    uint64_t v48 = a3[24];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = (uint64_t)a2 + v48;
    uint64_t v51 = *(void *)(v50 + 8);
    if (v51)
    {
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = v51;
      uint64_t v52 = *(void *)(v50 + 24);
      *((void *)v49 + 2) = *(void *)(v50 + 16);
      *((void *)v49 + 3) = v52;
      uint64_t v53 = *(void *)(v50 + 40);
      *((void *)v49 + 4) = *(void *)(v50 + 32);
      *((void *)v49 + 5) = v53;
      *((_OWORD *)v49 + 3) = *(_OWORD *)(v50 + 48);
      v49[64] = *(unsigned char *)(v50 + 64);
      uint64_t v54 = *(void **)(v50 + 72);
      uint64_t v55 = *(void **)(v50 + 80);
      *((void *)v49 + 9) = v54;
      *((void *)v49 + 10) = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v56 = v54;
      id v57 = v55;
    }
    else
    {
      long long v58 = *(_OWORD *)(v50 + 48);
      *((_OWORD *)v49 + 2) = *(_OWORD *)(v50 + 32);
      *((_OWORD *)v49 + 3) = v58;
      *((_OWORD *)v49 + 4) = *(_OWORD *)(v50 + 64);
      *((void *)v49 + 10) = *(void *)(v50 + 80);
      long long v59 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v59;
    }
  }
  return a1;
}

void sub_1001AE8B8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  uint64_t v4 = a1 + a2[15];
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[16], v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(a1 + a2[21])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[22])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[23])) {
    swift_release();
  }
  uint64_t v7 = a1 + a2[24];
  if (*(void *)(v7 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v8 = *(void **)(v7 + 80);
  }
}

uint64_t sub_1001AEA4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v9;
  uint64_t v11 = (_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 64);
  id v12 = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v10)
  {
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v11;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(a1 + a3[16], a2 + a3[16], v17);
  uint64_t v19 = a3[17];
  uint64_t v20 = a3[18];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (void *)(a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  uint64_t v25 = (void *)(a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[19];
  uint64_t v28 = a3[20];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = (void *)(a1 + v28);
  uint64_t v33 = (void *)(a2 + v28);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[21];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = a2 + v35;
  uint64_t v38 = *(void *)(a2 + v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v38)
  {
    uint64_t v39 = *(void *)(v37 + 8);
    *uint64_t v36 = v38;
    v36[1] = v39;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  uint64_t v40 = a3[22];
  uint64_t v41 = (void *)(a1 + v40);
  char v42 = (void *)(a2 + v40);
  if (*v42)
  {
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  }
  uint64_t v44 = a3[23];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  if (*v46)
  {
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  }
  uint64_t v48 = a3[24];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void *)(v50 + 8);
  if (v51)
  {
    *(void *)uint64_t v49 = *(void *)v50;
    *(void *)(v49 + 8) = v51;
    uint64_t v52 = *(void *)(v50 + 24);
    *(void *)(v49 + 16) = *(void *)(v50 + 16);
    *(void *)(v49 + 24) = v52;
    uint64_t v53 = *(void *)(v50 + 40);
    *(void *)(v49 + 32) = *(void *)(v50 + 32);
    *(void *)(v49 + 40) = v53;
    *(_OWORD *)(v49 + 48) = *(_OWORD *)(v50 + 48);
    *(unsigned char *)(v49 + 64) = *(unsigned char *)(v50 + 64);
    uint64_t v54 = *(void **)(v50 + 72);
    uint64_t v55 = *(void **)(v50 + 80);
    *(void *)(v49 + 72) = v54;
    *(void *)(v49 + 80) = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v56 = v54;
    id v57 = v55;
  }
  else
  {
    long long v58 = *(_OWORD *)(v50 + 48);
    *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
    *(_OWORD *)(v49 + 48) = v58;
    *(_OWORD *)(v49 + 64) = *(_OWORD *)(v50 + 64);
    *(void *)(v49 + 80) = *(void *)(v50 + 80);
    long long v59 = *(_OWORD *)(v50 + 16);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    *(_OWORD *)(v49 + 16) = v59;
  }
  return a1;
}

uint64_t sub_1001AECE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v12;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v11)
  {
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v13;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  v18(a1 + a3[16], a2 + a3[16], v17);
  uint64_t v19 = a3[17];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[18];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[19];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  uint64_t v29 = a3[20];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  swift_retain();
  swift_release();
  uint64_t v33 = a3[21];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = a2 + v33;
  uint64_t v36 = *(void *)(a1 + v33);
  uint64_t v37 = *(void *)(a2 + v33);
  if (v36)
  {
    if (v37)
    {
      uint64_t v38 = *(void *)(v35 + 8);
      *uint64_t v34 = v37;
      v34[1] = v38;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v37)
  {
    uint64_t v39 = *(void *)(v35 + 8);
    *uint64_t v34 = v37;
    v34[1] = v39;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_15:
  uint64_t v40 = a3[22];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void *)(a1 + v40);
  uint64_t v44 = *(void *)(a2 + v40);
  if (v43)
  {
    if (v44)
    {
      uint64_t v45 = *(void *)(v42 + 8);
      *uint64_t v41 = v44;
      v41[1] = v45;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v44)
  {
    uint64_t v46 = *(void *)(v42 + 8);
    *uint64_t v41 = v44;
    v41[1] = v46;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
LABEL_22:
  uint64_t v47 = a3[23];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = a2 + v47;
  uint64_t v50 = *(void *)(a1 + v47);
  uint64_t v51 = *(void *)(a2 + v47);
  if (v50)
  {
    if (v51)
    {
      uint64_t v52 = *(void *)(v49 + 8);
      *uint64_t v48 = v51;
      v48[1] = v52;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v51)
  {
    uint64_t v53 = *(void *)(v49 + 8);
    *uint64_t v48 = v51;
    v48[1] = v53;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
LABEL_29:
  uint64_t v54 = a3[24];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  uint64_t v57 = *(void *)(a1 + v54 + 8);
  uint64_t v58 = *(void *)(v56 + 8);
  if (v57)
  {
    if (v58)
    {
      *(void *)uint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = *(void *)(v56 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v55 + 16) = *(void *)(v56 + 16);
      *(void *)(v55 + 24) = *(void *)(v56 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v55 + 32) = *(void *)(v56 + 32);
      *(void *)(v55 + 40) = *(void *)(v56 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v55 + 48) = *(void *)(v56 + 48);
      *(void *)(v55 + 56) = *(void *)(v56 + 56);
      *(unsigned char *)(v55 + 64) = *(unsigned char *)(v56 + 64);
      long long v59 = *(void **)(v56 + 72);
      unint64_t v60 = *(void **)(v55 + 72);
      *(void *)(v55 + 72) = v59;
      id v61 = v59;

      uint64_t v62 = *(void **)(v56 + 80);
      char v63 = *(void **)(v55 + 80);
      *(void *)(v55 + 80) = v62;
      id v64 = v62;
    }
    else
    {
      sub_100015FC8(v55);
      long long v69 = *(_OWORD *)(v56 + 16);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *(_OWORD *)(v55 + 16) = v69;
      long long v71 = *(_OWORD *)(v56 + 48);
      long long v70 = *(_OWORD *)(v56 + 64);
      long long v72 = *(_OWORD *)(v56 + 32);
      *(void *)(v55 + 80) = *(void *)(v56 + 80);
      *(_OWORD *)(v55 + 48) = v71;
      *(_OWORD *)(v55 + 64) = v70;
      *(_OWORD *)(v55 + 32) = v72;
    }
  }
  else if (v58)
  {
    *(void *)uint64_t v55 = *(void *)v56;
    *(void *)(v55 + 8) = *(void *)(v56 + 8);
    *(void *)(v55 + 16) = *(void *)(v56 + 16);
    *(void *)(v55 + 24) = *(void *)(v56 + 24);
    *(void *)(v55 + 32) = *(void *)(v56 + 32);
    *(void *)(v55 + 40) = *(void *)(v56 + 40);
    *(void *)(v55 + 48) = *(void *)(v56 + 48);
    *(void *)(v55 + 56) = *(void *)(v56 + 56);
    *(unsigned char *)(v55 + 64) = *(unsigned char *)(v56 + 64);
    unint64_t v65 = *(void **)(v56 + 72);
    *(void *)(v55 + 72) = v65;
    unint64_t v66 = *(void **)(v56 + 80);
    *(void *)(v55 + 80) = v66;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v67 = v65;
    id v68 = v66;
  }
  else
  {
    long long v73 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v73;
    long long v74 = *(_OWORD *)(v56 + 32);
    long long v75 = *(_OWORD *)(v56 + 48);
    long long v76 = *(_OWORD *)(v56 + 64);
    *(void *)(v55 + 80) = *(void *)(v56 + 80);
    *(_OWORD *)(v55 + 48) = v75;
    *(_OWORD *)(v55 + 64) = v76;
    *(_OWORD *)(v55 + 32) = v74;
  }
  return a1;
}

uint64_t sub_1001AF1A8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = a3[15];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(a1 + a3[16], a2 + a3[16], v12);
  uint64_t v14 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[21];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *v18;
  if (*v18)
  {
    uint64_t v20 = v18[1];
    *uint64_t v17 = v19;
    v17[1] = v20;
  }
  else
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  uint64_t v21 = a3[22];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  if (*v23)
  {
    uint64_t v25 = v23[1];
    void *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v26 = a3[23];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    void *v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  uint64_t v31 = a3[24];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  long long v34 = *(_OWORD *)(v33 + 48);
  *(_OWORD *)(v32 + 32) = *(_OWORD *)(v33 + 32);
  *(_OWORD *)(v32 + 48) = v34;
  *(_OWORD *)(v32 + 64) = *(_OWORD *)(v33 + 64);
  *(void *)(v32 + 80) = *(void *)(v33 + 80);
  long long v35 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(_OWORD *)(v32 + 16) = v35;
  return a1;
}

uint64_t sub_1001AF37C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v8;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = v9;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = a3[15];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  v14(a1 + a3[16], a2 + a3[16], v13);
  uint64_t v15 = a3[17];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[18];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  swift_release();
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  swift_release();
  uint64_t v25 = a3[21];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)(a1 + v25);
  uint64_t v29 = *(void *)(a2 + v25);
  if (v28)
  {
    if (v29)
    {
      uint64_t v30 = *(void *)(v27 + 8);
      void *v26 = v29;
      v26[1] = v30;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *(void *)(v27 + 8);
    void *v26 = v29;
    v26[1] = v31;
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_15:
  uint64_t v32 = a3[22];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)(a1 + v32);
  uint64_t v36 = *(void *)(a2 + v32);
  if (v35)
  {
    if (v36)
    {
      uint64_t v37 = *(void *)(v34 + 8);
      *uint64_t v33 = v36;
      v33[1] = v37;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v36)
  {
    uint64_t v38 = *(void *)(v34 + 8);
    *uint64_t v33 = v36;
    v33[1] = v38;
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
LABEL_22:
  uint64_t v39 = a3[23];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = a2 + v39;
  uint64_t v42 = *(void *)(a1 + v39);
  uint64_t v43 = *(void *)(a2 + v39);
  if (v42)
  {
    if (v43)
    {
      uint64_t v44 = *(void *)(v41 + 8);
      *uint64_t v40 = v43;
      v40[1] = v44;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *(void *)(v41 + 8);
    *uint64_t v40 = v43;
    v40[1] = v45;
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
LABEL_29:
  uint64_t v46 = a3[24];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  if (!*(void *)(a1 + v46 + 8))
  {
LABEL_33:
    long long v54 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v54;
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(void *)(v47 + 80) = *(void *)(v48 + 80);
    long long v55 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v55;
    return a1;
  }
  uint64_t v49 = *(void *)(v48 + 8);
  if (!v49)
  {
    sub_100015FC8(v47);
    goto LABEL_33;
  }
  *(void *)uint64_t v47 = *(void *)v48;
  *(void *)(v47 + 8) = v49;
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(v48 + 24);
  *(void *)(v47 + 16) = *(void *)(v48 + 16);
  *(void *)(v47 + 24) = v50;
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v48 + 40);
  *(void *)(v47 + 32) = *(void *)(v48 + 32);
  *(void *)(v47 + 40) = v51;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v47 + 48) = *(_OWORD *)(v48 + 48);
  *(unsigned char *)(v47 + 64) = *(unsigned char *)(v48 + 64);
  uint64_t v52 = *(void **)(v47 + 72);
  *(void *)(v47 + 72) = *(void *)(v48 + 72);

  uint64_t v53 = *(void **)(v47 + 80);
  *(void *)(v47 + 80) = *(void *)(v48 + 80);

  return a1;
}

uint64_t sub_1001AF6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001AF6FC);
}

uint64_t sub_1001AF6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Locale();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 60);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001AF7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001AF7C0);
}

uint64_t sub_1001AF7C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 60);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SingleOrPairSpeakButton()
{
  uint64_t result = qword_1002FA368;
  if (!qword_1002FA368) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001AF8B4()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001AF9B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001AF9CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002FA400);
  __chkstk_darwin(v4);
  uint64_t v6 = &v81[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = &v81[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v81[-v11];
  uint64_t v13 = type metadata accessor for LocalePairSpeakButtons();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = &v81[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100007620(&qword_1002FA408);
  uint64_t v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  int v20 = *(unsigned __int8 *)(a1 + 16);
  int v21 = *(unsigned __int8 *)(a1 + 19);
  if (*(unsigned char *)(a1 + 80) == 1)
  {
    int v92 = *(unsigned __int8 *)(a1 + 20);
    uint64_t v88 = *(void *)(a1 + 24);
    int v82 = *(unsigned __int8 *)(a1 + 17);
    uint64_t v94 = v19;
    uint64_t v95 = &v81[-v18];
    int v90 = v20;
    int v91 = v21;
    uint64_t v22 = type metadata accessor for SingleOrPairSpeakButton();
    uint64_t v89 = v15;
    uint64_t v23 = (int *)v22;
    uint64_t v24 = *(int *)(v22 + 60);
    uint64_t v83 = v10;
    uint64_t v25 = a1 + v24;
    uint64_t v26 = v7[5];
    uint64_t v97 = a2;
    uint64_t v27 = &v12[v26];
    uint64_t v28 = type metadata accessor for Locale();
    uint64_t v96 = v4;
    uint64_t v29 = v28;
    uint64_t v30 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
    uint64_t v93 = v16;
    v30(v27, v25, v28);
    uint64_t v31 = (uint64_t *)(a1 + v23[17]);
    uint64_t v32 = *v31;
    uint64_t v85 = v31[1];
    uint64_t v33 = v85;
    uint64_t v34 = (uint64_t *)(a1 + v23[19]);
    uint64_t v35 = *v34;
    uint64_t v84 = v34[1];
    uint64_t v36 = v84;
    uint64_t v37 = (uint64_t *)(a1 + v23[21]);
    uint64_t v87 = *v37;
    uint64_t v38 = v87;
    uint64_t v86 = v37[1];
    uint64_t v39 = v86;
    *uint64_t v12 = v82;
    uint64_t v40 = &v12[v7[6]];
    *uint64_t v40 = v32;
    v40[1] = v33;
    uint64_t v41 = &v12[v7[7]];
    *uint64_t v41 = v35;
    v41[1] = v36;
    uint64_t v42 = (uint64_t *)&v12[v7[8]];
    *uint64_t v42 = v38;
    v42[1] = v39;
    LOBYTE(v25) = *(unsigned char *)(a1 + 18);
    uint64_t v43 = v83;
    v30(&v83[v7[5]], a1 + v23[16], v29);
    uint64_t v44 = (uint64_t *)(a1 + v23[18]);
    uint64_t v45 = *v44;
    uint64_t v46 = v44[1];
    uint64_t v47 = (uint64_t *)(a1 + v23[20]);
    uint64_t v48 = *v47;
    uint64_t v49 = v47[1];
    uint64_t v50 = (uint64_t *)(a1 + v23[22]);
    uint64_t v51 = *v50;
    uint64_t v52 = v50[1];
    *uint64_t v43 = v25;
    uint64_t v53 = &v43[v7[6]];
    *uint64_t v53 = v45;
    v53[1] = v46;
    long long v54 = &v43[v7[7]];
    void *v54 = v48;
    v54[1] = v49;
    long long v55 = (uint64_t *)&v43[v7[8]];
    *long long v55 = v51;
    v55[1] = v52;
    uint64_t v56 = v51;
    uint64_t v57 = v23[24];
    uint64_t v58 = (uint64_t *)(a1 + v23[23]);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    sub_10001323C(a1 + v57, (uint64_t)v98, &qword_1002EF048);
    uint64_t v61 = v88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100019614(v87);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100019614(v56);
    sub_100019614(v60);
    sub_1001B013C((uint64_t)v98);
    uint64_t v62 = (uint64_t)v89;
    sub_10015B45C(v90, v91, v92, v61, (uint64_t)v12, (uint64_t)v43, v60, v59, (uint64_t)v89, (uint64_t)v98);
    LOBYTE(v59) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v71 = v62;
    uint64_t v72 = v62;
    uint64_t v73 = v94;
    sub_10015CBE8(v71, v94);
    uint64_t v74 = v73 + *(int *)(v93 + 36);
    *(unsigned char *)uint64_t v74 = v59;
    *(void *)(v74 + 8) = v64;
    *(void *)(v74 + 16) = v66;
    *(void *)(v74 + 24) = v68;
    *(void *)(v74 + 32) = v70;
    *(unsigned char *)(v74 + 40) = 0;
    sub_10015CC4C(v72);
    long long v75 = v95;
    sub_10001323C(v73, (uint64_t)v95, &qword_1002FA408);
    sub_10000C3A4((uint64_t)v75, (uint64_t)v6, &qword_1002FA408);
    swift_storeEnumTagMultiPayload();
    sub_1001B01D4(&qword_1002FA410, &qword_1002FA408, (void (*)(void))sub_1001B00E4);
    sub_1000DD32C();
    _ConditionalContent<>.init(storage:)();
    return sub_10000B070((uint64_t)v75, &qword_1002FA408);
  }
  else
  {
    uint64_t v77 = *(void *)(a1 + 48);
    uint64_t v78 = *(void *)(a1 + 56);
    uint64_t v79 = *(void *)(a1 + 64);
    uint64_t v80 = *(void *)(a1 + 72);
    *uint64_t v6 = v20;
    v6[1] = v21;
    v6[2] = 0;
    *((void *)v6 + 2) = 0;
    *((void *)v6 + 3) = 0;
    *((void *)v6 + 1) = _swiftEmptyArrayStorage;
    v6[32] = 0;
    *((void *)v6 + 5) = v77;
    *((void *)v6 + 6) = v78;
    *((void *)v6 + 7) = 0;
    *((void *)v6 + 8) = 0;
    *((void *)v6 + 9) = v79;
    *((void *)v6 + 10) = v80;
    *((void *)v6 + 11) = 0x6C6C69662E63696DLL;
    *((void *)v6 + 12) = 0xE800000000000000;
    *((void *)v6 + 23) = 0;
    *(_OWORD *)(v6 + 168) = 0u;
    *(_OWORD *)(v6 + 152) = 0u;
    *(_OWORD *)(v6 + 136) = 0u;
    *(_OWORD *)(v6 + 120) = 0u;
    *(_OWORD *)(v6 + 104) = 0u;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100019614(v79);
    sub_1001B01D4(&qword_1002FA410, &qword_1002FA408, (void (*)(void))sub_1001B00E4);
    sub_1000DD32C();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1001AFFF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002FA3F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AF9CC(v1, (uint64_t)v5);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10000C3A4((uint64_t)v5, a1, &qword_1002FA3F0);
  uint64_t v6 = (_OWORD *)(a1 + *(int *)(sub_100007620(&qword_1002FA3F8) + 36));
  long long v7 = v9[1];
  *uint64_t v6 = v9[0];
  v6[1] = v7;
  v6[2] = v9[2];
  return sub_10000B070((uint64_t)v5, &qword_1002FA3F0);
}

unint64_t sub_1001B00E4()
{
  unint64_t result = qword_1002FA418;
  if (!qword_1002FA418)
  {
    type metadata accessor for LocalePairSpeakButtons();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA418);
  }
  return result;
}

uint64_t sub_1001B013C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001B0190()
{
  return sub_1001B01D4(&qword_1002FA420, &qword_1002FA3F8, (void (*)(void))sub_1001B0250);
}

uint64_t sub_1001B01D4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001B0250()
{
  unint64_t result = qword_1002FA428;
  if (!qword_1002FA428)
  {
    sub_100007928(&qword_1002FA3F0);
    sub_1001B02C4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA428);
  }
  return result;
}

unint64_t sub_1001B02C4()
{
  unint64_t result = qword_1002FA430;
  if (!qword_1002FA430)
  {
    sub_100007928(&qword_1002FA438);
    sub_1001B01D4(&qword_1002FA410, &qword_1002FA408, (void (*)(void))sub_1001B00E4);
    sub_1000DD32C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA430);
  }
  return result;
}

void destroy for SpeakButton(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 56)) {
    swift_release();
  }
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v2 = *(void **)(a1 + 184);
  }
}

uint64_t initializeWithCopy for SpeakButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v7 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v7;
  }
  uint64_t v9 = *(void *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  }
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  uint64_t v12 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v12;
    uint64_t v13 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v13;
    uint64_t v14 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    uint64_t v16 = *(void **)(a2 + 176);
    uint64_t v15 = *(void **)(a2 + 184);
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v17 = v16;
    id v18 = v15;
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v19;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    long long v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v20;
  }
  return a1;
}

uint64_t assignWithCopy for SpeakButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v9;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v10;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
LABEL_15:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = (_OWORD *)(a1 + 104);
  uint64_t v12 = (_OWORD *)(a2 + 104);
  uint64_t v13 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v13)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      uint64_t v14 = *(void **)(a2 + 176);
      uint64_t v15 = *(void **)(a1 + 176);
      *(void *)(a1 + 176) = v14;
      id v16 = v14;

      id v17 = *(void **)(a2 + 184);
      id v18 = *(void **)(a1 + 184);
      *(void *)(a1 + 184) = v17;
      id v19 = v17;
    }
    else
    {
      sub_100015FC8(a1 + 104);
      long long v24 = *(_OWORD *)(a2 + 120);
      _OWORD *v11 = *v12;
      *(_OWORD *)(a1 + 120) = v24;
      long long v26 = *(_OWORD *)(a2 + 152);
      long long v25 = *(_OWORD *)(a2 + 168);
      long long v27 = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(_OWORD *)(a1 + 152) = v26;
      *(_OWORD *)(a1 + 168) = v25;
      *(_OWORD *)(a1 + 136) = v27;
    }
  }
  else if (v13)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
    long long v20 = *(void **)(a2 + 176);
    *(void *)(a1 + 176) = v20;
    int v21 = *(void **)(a2 + 184);
    *(void *)(a1 + 184) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = v20;
    id v23 = v21;
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 120);
    _OWORD *v11 = *v12;
    *(_OWORD *)(a1 + 120) = v28;
    long long v29 = *(_OWORD *)(a2 + 136);
    long long v30 = *(_OWORD *)(a2 + 152);
    long long v31 = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v30;
    *(_OWORD *)(a1 + 168) = v31;
    *(_OWORD *)(a1 + 136) = v29;
  }
  return a1;
}

__n128 initializeWithTake for SpeakButton(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for SpeakButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72))
  {
    if (v8)
    {
      uint64_t v9 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v9;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v8;
    *(void *)(a1 + 80) = v10;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
LABEL_15:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 112))
  {
LABEL_19:
    long long v17 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v17;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    long long v18 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v18;
    return a1;
  }
  uint64_t v12 = *(void *)(a2 + 112);
  if (!v12)
  {
    sub_100015FC8(a1 + 104);
    goto LABEL_19;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  uint64_t v15 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  id v16 = *(void **)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);

  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeakButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakButton()
{
  return &type metadata for SpeakButton;
}

uint64_t sub_1001B0B28()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1001B0B44@<Q0>(uint64_t a1@<X8>)
{
  char v25 = v1[1];
  char v26 = *v1;
  char v24 = v1[2];
  uint64_t v23 = *((void *)v1 + 2);
  char v22 = v1[32];
  uint64_t v20 = *((void *)v1 + 3);
  uint64_t v21 = *((void *)v1 + 5);
  uint64_t v19 = *((void *)v1 + 6);
  uint64_t v3 = *((void *)v1 + 7);
  uint64_t v16 = *((void *)v1 + 8);
  uint64_t v14 = *((void *)v1 + 1);
  uint64_t v15 = *((void *)v1 + 9);
  uint64_t v27 = *((void *)v1 + 11);
  uint64_t v4 = *((void *)v1 + 14);
  uint64_t v28 = *((void *)v1 + 13);
  uint64_t v29 = *((void *)v1 + 10);
  uint64_t v5 = *((void *)v1 + 15);
  uint64_t v12 = *((void *)v1 + 17);
  uint64_t v13 = *((void *)v1 + 16);
  uint64_t v10 = *((void *)v1 + 19);
  uint64_t v11 = *((void *)v1 + 18);
  uint64_t v6 = *((void *)v1 + 21);
  uint64_t v9 = *((void *)v1 + 20);
  uint64_t v17 = *((void *)v1 + 12);
  uint64_t v7 = (void *)*((void *)v1 + 22);
  long long v18 = (void *)*((void *)v1 + 23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100019614(v3);
  sub_10001959C(v28, v4, v5, v13, v12, v11, v10, v9, v6, v7, v18);
  sub_100019614(v15);
  swift_bridgeObjectRetain();
  sub_100007620(&qword_1002EF048);
  State.init(wrappedValue:)();
  __n128 result = v30;
  *(unsigned char *)a1 = v26;
  *(unsigned char *)(a1 + 1) = v25;
  *(unsigned char *)(a1 + 2) = v24;
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v23;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v4;
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v11;
  *(void *)(a1 + 120) = v10;
  *(void *)(a1 + 128) = v9;
  *(void *)(a1 + 136) = v6;
  *(void *)(a1 + 144) = v7;
  *(void *)(a1 + 152) = v18;
  *(void *)(a1 + 160) = v15;
  *(void *)(a1 + 168) = v29;
  *(void *)(a1 + 176) = v27;
  *(void *)(a1 + 184) = v17;
  *(__n128 *)(a1 + 192) = v30;
  *(_OWORD *)(a1 + 208) = v31;
  *(_OWORD *)(a1 + 224) = v32;
  *(_OWORD *)(a1 + 240) = v33;
  *(_OWORD *)(a1 + 256) = v34;
  *(_OWORD *)(a1 + 272) = v35;
  return result;
}

unint64_t sub_1001B0D58()
{
  unint64_t result = qword_1002FA440;
  if (!qword_1002FA440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA440);
  }
  return result;
}

uint64_t *sub_1001B0DAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Locale();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = a3[7];
    uint64_t v13 = (uint64_t *)((char *)v4 + v11);
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (uint64_t *)((char *)v4 + v12);
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[8];
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = *v21;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v22)
    {
      uint64_t v23 = v21[1];
      *uint64_t v20 = v22;
      v20[1] = v23;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
  }
  return v4;
}

uint64_t sub_1001B0EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 32)))
  {
    return swift_release();
  }
  return result;
}

unsigned char *sub_1001B0FA4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = &a1[v11];
  uint64_t v16 = &a2[v11];
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  uint64_t v21 = *v20;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v21)
  {
    uint64_t v22 = v20[1];
    *uint64_t v19 = v21;
    v19[1] = v22;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  return a1;
}

unsigned char *sub_1001B108C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v20 = *(void *)&a1[v17];
  uint64_t v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = v19[1];
      void *v18 = v21;
      v18[1] = v23;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v22 = v19[1];
  void *v18 = v21;
  v18[1] = v22;
  swift_retain();
  swift_release();
  return a1;
}

unsigned char *sub_1001B11C4(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v14 = *v13;
  if (*v13)
  {
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  else
  {
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  }
  return a1;
}

unsigned char *sub_1001B128C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = (uint64_t *)&a2[v10];
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  swift_release();
  uint64_t v15 = a3[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v18 = *(void *)&a1[v15];
  uint64_t v19 = *v17;
  if (!v18)
  {
    if (v19)
    {
      uint64_t v21 = v17[1];
      *uint64_t v16 = v19;
      v16[1] = v21;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    return a1;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v20 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v20;
  swift_release();
  return a1;
}

uint64_t sub_1001B139C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B13B0);
}

uint64_t sub_1001B13B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1001B1478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B148C);
}

uint64_t sub_1001B148C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SpeakButtonConfiguration()
{
  uint64_t result = qword_1002FA4A0;
  if (!qword_1002FA4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B159C()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SpeakButtonImpl(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(a1 + 56)) {
    swift_release();
  }
  if (*(void *)(a1 + 80))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 160)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t initializeWithCopy for SpeakButtonImpl(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v8;
    swift_retain();
    uint64_t v9 = *(void *)(a2 + 80);
    if (v9)
    {
LABEL_3:
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v9;
      uint64_t v10 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v10;
      uint64_t v11 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v11;
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      unint64_t v12 = *(void **)(a2 + 144);
      uint64_t v13 = *(void **)(a2 + 152);
      *(void *)(a1 + 144) = v12;
      *(void *)(a1 + 152) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v12;
      id v15 = v13;
      goto LABEL_6;
    }
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *v7;
    uint64_t v9 = *(void *)(a2 + 80);
    if (v9) {
      goto LABEL_3;
    }
  }
  long long v16 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v16;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v17 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v17;
LABEL_6:
  uint64_t v18 = *(void *)(a2 + 160);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v18;
    *(void *)(a1 + 168) = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  }
  uint64_t v20 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v20;
  uint64_t v21 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v21;
    uint64_t v22 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v22;
    uint64_t v23 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v23;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    uint64_t v24 = *(void **)(a2 + 264);
    char v25 = *(void **)(a2 + 272);
    *(void *)(a1 + 264) = v24;
    *(void *)(a1 + 272) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v24;
    id v27 = v25;
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v28;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    long long v29 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v29;
  }
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SpeakButtonImpl(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  uint64_t v8 = (_OWORD *)(a1 + 72);
  uint64_t v9 = (_OWORD *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v10)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v11 = *(void **)(a2 + 144);
      unint64_t v12 = *(void **)(a1 + 144);
      *(void *)(a1 + 144) = v11;
      id v13 = v11;

      id v14 = *(void **)(a2 + 152);
      id v15 = *(void **)(a1 + 152);
      *(void *)(a1 + 152) = v14;
      id v16 = v14;
    }
    else
    {
      sub_100015FC8(a1 + 72);
      long long v21 = *(_OWORD *)(a2 + 88);
      *uint64_t v8 = *v9;
      *(_OWORD *)(a1 + 88) = v21;
      long long v23 = *(_OWORD *)(a2 + 120);
      long long v22 = *(_OWORD *)(a2 + 136);
      long long v24 = *(_OWORD *)(a2 + 104);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 120) = v23;
      *(_OWORD *)(a1 + 136) = v22;
      *(_OWORD *)(a1 + 104) = v24;
    }
  }
  else if (v10)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    long long v17 = *(void **)(a2 + 144);
    *(void *)(a1 + 144) = v17;
    uint64_t v18 = *(void **)(a2 + 152);
    *(void *)(a1 + 152) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v19 = v17;
    id v20 = v18;
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 88);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 88) = v25;
    long long v26 = *(_OWORD *)(a2 + 104);
    long long v27 = *(_OWORD *)(a2 + 120);
    long long v28 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 136) = v28;
    *(_OWORD *)(a1 + 104) = v26;
  }
  uint64_t v29 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v29)
    {
      uint64_t v30 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = v29;
      *(void *)(a1 + 168) = v30;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v29;
    *(void *)(a1 + 168) = v31;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_22:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v32 = (_OWORD *)(a1 + 192);
  long long v33 = (_OWORD *)(a2 + 192);
  uint64_t v34 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v34)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      long long v35 = *(void **)(a2 + 264);
      uint64_t v36 = *(void **)(a1 + 264);
      *(void *)(a1 + 264) = v35;
      id v37 = v35;

      uint64_t v38 = *(void **)(a2 + 272);
      uint64_t v39 = *(void **)(a1 + 272);
      *(void *)(a1 + 272) = v38;
      id v40 = v38;
    }
    else
    {
      sub_100015FC8(a1 + 192);
      long long v45 = *(_OWORD *)(a2 + 208);
      *long long v32 = *v33;
      *(_OWORD *)(a1 + 208) = v45;
      long long v47 = *(_OWORD *)(a2 + 240);
      long long v46 = *(_OWORD *)(a2 + 256);
      long long v48 = *(_OWORD *)(a2 + 224);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(_OWORD *)(a1 + 240) = v47;
      *(_OWORD *)(a1 + 256) = v46;
      *(_OWORD *)(a1 + 224) = v48;
    }
  }
  else if (v34)
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
    uint64_t v41 = *(void **)(a2 + 264);
    *(void *)(a1 + 264) = v41;
    uint64_t v42 = *(void **)(a2 + 272);
    *(void *)(a1 + 272) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v43 = v41;
    id v44 = v42;
  }
  else
  {
    long long v49 = *(_OWORD *)(a2 + 208);
    *long long v32 = *v33;
    *(_OWORD *)(a1 + 208) = v49;
    long long v50 = *(_OWORD *)(a2 + 224);
    long long v51 = *(_OWORD *)(a2 + 240);
    long long v52 = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(_OWORD *)(a1 + 240) = v51;
    *(_OWORD *)(a1 + 256) = v52;
    *(_OWORD *)(a1 + 224) = v50;
  }
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for SpeakButtonImpl(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for SpeakButtonImpl(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v5;
      *(void *)(a1 + 64) = v6;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = v7;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  if (*(void *)(a1 + 80))
  {
    uint64_t v8 = *(void *)(a2 + 80);
    if (v8)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v11 = *(void **)(a1 + 144);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);

      unint64_t v12 = *(void **)(a1 + 152);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);

      goto LABEL_13;
    }
    sub_100015FC8(a1 + 72);
  }
  long long v13 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v13;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v14 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v14;
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = v15;
      *(void *)(a1 + 168) = v16;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = v15;
    *(void *)(a1 + 168) = v17;
    goto LABEL_20;
  }
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
LABEL_20:
  uint64_t v18 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_24:
    long long v24 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(a2 + 200);
  if (!v19)
  {
    sub_100015FC8(a1 + 192);
    goto LABEL_24;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v21;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  long long v22 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  long long v23 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

LABEL_25:
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakButtonImpl(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeakButtonImpl(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakButtonImpl()
{
  return &type metadata for SpeakButtonImpl;
}

uint64_t sub_1001B2108()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B2124@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_100007620(&qword_1002FA4E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002FA4F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002FA4F8);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0x4018000000000000;
  v4[16] = 0;
  uint64_t v10 = sub_100007620(&qword_1002FA500);
  sub_1001B25D0((unsigned char *)v1, (uint64_t)&v4[*(int *)(v10 + 44)]);
  uint64_t v11 = swift_allocObject();
  memcpy((void *)(v11 + 16), (const void *)v1, 0x120uLL);
  sub_10000C3A4((uint64_t)v4, (uint64_t)v7, &qword_1002FA4E8);
  unint64_t v12 = (uint64_t (**)())&v7[*(int *)(v5 + 36)];
  *unint64_t v12 = sub_1001B46F0;
  v12[1] = (uint64_t (*)())v11;
  _OWORD v12[2] = 0;
  v12[3] = 0;
  sub_1001B470C(v1);
  sub_10000B070((uint64_t)v4, &qword_1002FA4E8);
  long long v13 = *(_OWORD *)(v1 + 240);
  long long v33 = *(_OWORD *)(v1 + 224);
  long long v34 = v13;
  long long v14 = *(_OWORD *)(v1 + 272);
  long long v35 = *(_OWORD *)(v1 + 256);
  long long v36 = v14;
  long long v15 = *(_OWORD *)(v1 + 208);
  long long v31 = *(_OWORD *)(v1 + 192);
  long long v32 = v15;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  long long v31 = v37;
  long long v32 = v38;
  long long v33 = v39;
  long long v34 = v40;
  long long v35 = v41;
  *(void *)&long long v36 = v42;
  uint64_t v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), (const void *)v1, 0x120uLL);
  sub_1001B470C(v1);
  uint64_t v17 = sub_100007620(&qword_1002EF048);
  unint64_t v18 = sub_1001B4870();
  uint64_t v19 = sub_1001B4C4C(&qword_1002EF088, &qword_1002EF048, (void (*)(void))sub_10001398C);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1000194BC(v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, *((void **)&v35 + 1), (void *)v36);
  sub_10000B070((uint64_t)v7, &qword_1002FA4F0);
  sub_10001323C(v1 + 72, (uint64_t)&v31, &qword_1002EF048);
  sub_10001323C((uint64_t)&v31, (uint64_t)&v37, &qword_1002EF048);
  uint64_t v20 = swift_allocObject();
  memcpy((void *)(v20 + 16), (const void *)v1, 0x120uLL);
  sub_1001B470C(v1);
  sub_1001B013C((uint64_t)&v31);
  uint64_t v27 = v5;
  uint64_t v28 = v17;
  unint64_t v29 = v18;
  uint64_t v30 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v24;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1000194BC(v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41, *((void **)&v41 + 1), v42);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v21);
}

uint64_t sub_1001B25D0@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v100 = type metadata accessor for DynamicTypeSize();
  uint64_t v98 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v96 = (char *)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100007620(&qword_1002F9108);
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v101 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100007620(&qword_1002FA518);
  __chkstk_darwin(v97);
  uint64_t v102 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100007620(&qword_1002FA520);
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v99 = (uint64_t)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002FA528);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v126 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v124 = (uint64_t)&v95 - v10;
  uint64_t v119 = type metadata accessor for AccessibilityTraits();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v117 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F2BF8);
  __chkstk_darwin(v12 - 8);
  long long v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for ButtonMenuStyle();
  uint64_t v15 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002FA530);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100007620(&qword_1002FA538);
  uint64_t v109 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100007620(&qword_1002FA540);
  uint64_t v111 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  long long v128 = (char *)&v95 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100007620(&qword_1002FA548);
  uint64_t v24 = __chkstk_darwin(v114);
  uint64_t v110 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v112 = (char *)&v95 - v27;
  __chkstk_darwin(v26);
  uint64_t v116 = (char *)&v95 - v28;
  uint64_t v115 = sub_100007620(&qword_1002FA550);
  uint64_t v29 = __chkstk_darwin(v115);
  uint64_t v121 = (uint64_t)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v113 = (uint64_t)&v95 - v32;
  __chkstk_darwin(v31);
  uint64_t v120 = (uint64_t)&v95 - v33;
  uint64_t v130 = a1;
  uint64_t v129 = a1;
  uint64_t v34 = swift_allocObject();
  memcpy((void *)(v34 + 16), a1, 0x120uLL);
  sub_1001B470C((uint64_t)a1);
  sub_100007620(&qword_1002FA558);
  sub_1001B4A40();
  Menu.init(content:label:primaryAction:)();
  ButtonMenuStyle.init()();
  uint64_t v35 = sub_100014894(&qword_1002FA580, &qword_1002FA530);
  uint64_t v36 = sub_1001B4BFC(&qword_1002FA588, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  uint64_t v37 = v107;
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v37);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v122 = a1;
  LOBYTE(a1) = *a1;
  sub_10000B0CC(0, &qword_1002FA590);
  id v38 = [self mainRunLoop];
  uint64_t v39 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v14, 1, 1, v39);
  uint64_t v40 = static NSTimer.publish(every:tolerance:on:in:options:)();

  sub_10000B070((uint64_t)v14, &qword_1002F2BF8);
  uint64_t v135 = (ValueMetadata *)v40;
  type metadata accessor for NSTimer.TimerPublisher();
  sub_1001B4BFC(&qword_1002FA598, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v41 = ConnectablePublisher.autoconnect()();
  swift_release();
  uint64_t v131 = 0;
  State.init(wrappedValue:)();
  uint64_t v42 = v135;
  id v43 = v136;
  uint64_t v131 = v41;
  sub_100007620(&qword_1002FA5A0);
  State.init(wrappedValue:)();
  uint64_t v44 = (uint64_t)v135;
  long long v45 = v136;
  LOBYTE(v135) = (_BYTE)a1;
  uint64_t v136 = v42;
  uint64_t v137 = (uint64_t)v43;
  unint64_t v138 = v44;
  uint64_t v139 = v45;
  uint64_t v131 = v18;
  uint64_t v132 = v37;
  uint64_t v133 = v35;
  uint64_t v134 = v36;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v47 = sub_1001B4B68();
  uint64_t v48 = v108;
  long long v49 = v106;
  View.buttonStyle<A>(_:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v49, v48);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v50 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v52 = v51;
  uint64_t v53 = v105;
  LOBYTE(v44) = v54 & 1;
  uint64_t v135 = (ValueMetadata *)v48;
  uint64_t v136 = &type metadata for SpeakButtonStyle;
  uint64_t v137 = OpaqueTypeConformance2;
  unint64_t v138 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v55 = (uint64_t)v110;
  uint64_t v56 = v128;
  View.accessibility(label:)();
  sub_10001FC84(v50, v52, v44);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v56, v53);
  uint64_t v57 = (uint64_t)v112;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10000B070(v55, &qword_1002FA548);
  sub_100007620(&qword_1002EF3B0);
  uint64_t v58 = v118;
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1002488D0;
  static AccessibilityTraits.startsMediaSession.getter();
  uint64_t v135 = (ValueMetadata *)v59;
  sub_1001B4BFC(&qword_1002EF3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_100007620(&qword_1002EF3C0);
  sub_100014894(&qword_1002EF3C8, &qword_1002EF3C0);
  uint64_t v60 = v117;
  uint64_t v61 = v119;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v62 = (uint64_t)v116;
  ModifiedContent<>.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v61);
  sub_10000B070(v57, &qword_1002FA548);
  uint64_t v63 = v122;
  LOBYTE(v61) = v122[1];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = v61;
  uint64_t v66 = v113;
  sub_10000C3A4(v62, v113, &qword_1002FA548);
  uint64_t v67 = (uint64_t *)(v66 + *(int *)(v115 + 36));
  *uint64_t v67 = KeyPath;
  v67[1] = (uint64_t)sub_100054D5C;
  v67[2] = v65;
  sub_10000B070(v62, &qword_1002FA548);
  uint64_t v68 = v120;
  sub_10001323C(v66, v120, &qword_1002FA550);
  uint64_t v69 = (ValueMetadata *)*((void *)v63 + 3);
  if (v69)
  {
    uint64_t v135 = (ValueMetadata *)*((void *)v63 + 2);
    uint64_t v136 = v69;
    sub_10000C350();
    swift_bridgeObjectRetain();
    uint64_t v135 = (ValueMetadata *)Text.init<A>(_:)();
    uint64_t v136 = v70;
    LOBYTE(v137) = v71 & 1;
    unint64_t v138 = v72;
    uint64_t v73 = v98;
    uint64_t v74 = v96;
    uint64_t v75 = v100;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v96, enum case for DynamicTypeSize.small(_:), v100);
    long long v76 = v101;
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v75);
    sub_10001FC84((uint64_t)v135, (uint64_t)v136, v137);
    swift_bridgeObjectRelease();
    uint64_t v77 = static Font.caption.getter();
    uint64_t v78 = swift_getKeyPath();
    uint64_t v79 = v103;
    uint64_t v80 = (uint64_t)v102;
    uint64_t v81 = v104;
    (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, v76, v104);
    int v82 = (uint64_t *)(v80 + *(int *)(v97 + 36));
    *int v82 = v78;
    v82[1] = v77;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v81);
    uint64_t v83 = static Color.translateAccentColor.getter();
    uint64_t v84 = swift_getKeyPath();
    uint64_t v85 = v99;
    sub_10000C3A4(v80, v99, &qword_1002FA518);
    uint64_t v86 = v125;
    uint64_t v87 = (uint64_t *)(v85 + *(int *)(v125 + 36));
    *uint64_t v87 = v84;
    v87[1] = v83;
    sub_10000B070(v80, &qword_1002FA518);
    uint64_t v88 = v124;
    sub_10001323C(v85, v124, &qword_1002FA520);
    uint64_t v89 = 0;
  }
  else
  {
    uint64_t v86 = v125;
    uint64_t v88 = v124;
    uint64_t v89 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v88, v89, 1, v86);
  uint64_t v90 = v121;
  sub_10000C3A4(v68, v121, &qword_1002FA550);
  uint64_t v91 = v126;
  sub_10000C3A4(v88, v126, &qword_1002FA528);
  uint64_t v92 = v127;
  sub_10000C3A4(v90, v127, &qword_1002FA550);
  uint64_t v93 = sub_100007620(&qword_1002FA5B0);
  sub_10000C3A4(v91, v92 + *(int *)(v93 + 48), &qword_1002FA528);
  sub_10000B070(v88, &qword_1002FA528);
  sub_10000B070(v68, &qword_1002FA550);
  sub_10000B070(v91, &qword_1002FA528);
  return sub_10000B070(v90, &qword_1002FA550);
}

uint64_t sub_1001B36A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for InlinePickerStyle();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MenuOrder();
  uint64_t v47 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002FA570);
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002FA568);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  __chkstk_darwin(v12);
  long long v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002FA5B8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v44 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = *(_OWORD *)(a1 + 240);
  long long v19 = *(_OWORD *)(a1 + 208);
  long long v68 = *(_OWORD *)(a1 + 224);
  long long v69 = v18;
  long long v20 = *(_OWORD *)(a1 + 240);
  long long v21 = *(_OWORD *)(a1 + 272);
  long long v70 = *(_OWORD *)(a1 + 256);
  long long v71 = v21;
  long long v22 = *(_OWORD *)(a1 + 208);
  long long v66 = *(_OWORD *)(a1 + 192);
  long long v67 = v22;
  long long v62 = v68;
  long long v63 = v20;
  long long v23 = *(_OWORD *)(a1 + 272);
  long long v64 = v70;
  long long v65 = v23;
  long long v60 = v66;
  long long v61 = v19;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  uint64_t v24 = *((void *)&v54 + 1);
  sub_1000194BC(v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, *((void **)&v58 + 1), (void *)v59);
  if (v24 && (*(unsigned char *)(a1 + 2) & 1) != 0)
  {
    uint64_t v26 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v41 = v27;
    uint64_t v42 = v26;
    int v39 = v28;
    uint64_t v40 = v29;
    long long v56 = v68;
    long long v57 = v69;
    long long v58 = v70;
    long long v59 = v71;
    long long v54 = v66;
    long long v55 = v67;
    uint64_t v30 = State.projectedValue.getter();
    v38[2] = v38;
    __chkstk_darwin(v30);
    v38[1] = sub_100007620(&qword_1002EF048);
    sub_100007620(&qword_1002FA5C0);
    uint64_t v43 = a2;
    sub_1001B4C4C(&qword_1002EF168, &qword_1002EF048, (void (*)(void))sub_100019AE0);
    sub_1001B4C4C(&qword_1002FA5C8, &qword_1002FA5C0, (void (*)(void))sub_1001B4CB8);
    Picker<>.init(_:selection:content:)();
    static MenuOrder.fixed.getter();
    uint64_t v31 = sub_100014894(&qword_1002FA578, &qword_1002FA570);
    uint64_t v32 = v46;
    View.menuOrder(_:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v32);
    uint64_t v33 = v51;
    InlinePickerStyle.init()();
    *(void *)&long long v60 = v32;
    *((void *)&v60 + 1) = v31;
    a2 = v43;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v44;
    uint64_t v35 = v50;
    uint64_t v36 = v53;
    View.pickerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v36);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v35);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a2, v34, v15);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v25, 1, v15);
}

uint64_t sub_1001B3CC8()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1001B3DB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v3 = sub_100007620(&qword_1002FA5E8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v49 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002EED40);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  uint64_t v47 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v15 = a1[5];
  uint64_t v43 = a1[6];
  uint64_t v44 = v10;
  uint64_t v42 = a1[7];
  uint64_t v16 = *((unsigned __int8 *)a1 + 64);
  uint64_t v40 = v11;
  uint64_t v41 = v16;
  uint64_t v17 = (void *)a1[9];
  int v39 = (void *)a1[10];
  uint64_t v50 = v12;
  uint64_t v51 = v14;
  uint64_t v37 = v12;
  sub_10000C350();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v45 = v9;
  uint64_t v38 = v13;
  uint64_t v36 = v15;
  Label<>.init<A>(_:systemImage:)();
  long long v18 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  uint64_t v19 = v49;
  v18(v49, v9, v6);
  long long v20 = (void *)(v19 + *(int *)(v4 + 44));
  uint64_t v21 = v19;
  uint64_t v22 = v43;
  uint64_t v23 = v44;
  uint64_t v24 = v40;
  *long long v20 = v44;
  v20[1] = v24;
  void v20[2] = v12;
  v20[3] = v14;
  void v20[4] = v13;
  v20[5] = v15;
  uint64_t v25 = v41;
  uint64_t v26 = v42;
  v20[6] = v22;
  v20[7] = v26;
  v20[8] = v25;
  v20[9] = v17;
  uint64_t v27 = v39;
  v20[10] = v39;
  uint64_t v28 = v48;
  sub_10000C3A4(v21, v48, &qword_1002FA5E8);
  uint64_t v29 = (void *)(v28 + *(int *)(sub_100007620(&qword_1002FA5D8) + 36));
  *uint64_t v29 = v23;
  v29[1] = v24;
  uint64_t v30 = v36;
  v29[2] = v37;
  v29[3] = v14;
  v29[4] = v38;
  v29[5] = v30;
  v29[6] = v22;
  v29[7] = v26;
  v29[8] = v25;
  v29[9] = v17;
  v29[10] = v27;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v31 = v17;
  id v32 = v27;
  id v33 = v31;
  id v34 = v32;
  sub_10000B070(v49, &qword_1002FA5E8);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v45, v46);
}

uint64_t sub_1001B404C@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  if ((*a1 & 1) == 0 && (a1[1] & 1) == 0) {
    swift_bridgeObjectRetain();
  }
  uint64_t result = Image.init(systemName:)();
  *a2 = result;
  return result;
}

uint64_t sub_1001B40B8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v21 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v19 - v14;
  (*(void (**)(uint64_t))(a1 + 40))(v13);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  long long v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v12, v8);
  aBlock[4] = sub_10001F17C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002D1DC0;
  uint64_t v17 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001B4BFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v15, v21);
}

void sub_1001B4464(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 240);
  long long v26 = *(_OWORD *)(a1 + 224);
  long long v27 = v2;
  long long v3 = *(_OWORD *)(a1 + 272);
  long long v28 = *(_OWORD *)(a1 + 256);
  long long v29 = v3;
  long long v4 = *(_OWORD *)(a1 + 208);
  long long v24 = *(_OWORD *)(a1 + 192);
  long long v25 = v4;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  uint64_t v5 = v31;
  if (v31)
  {
    uint64_t v6 = v30;
    uint64_t v8 = v32;
    uint64_t v7 = v33;
    uint64_t v9 = v34;
    uint64_t v10 = v35;
    uint64_t v11 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v36;
    long long v20 = v40;
    uint64_t v21 = v39;
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v13 = nullsub_1;
    if (v12)
    {
      uint64_t v14 = *(void *)(a1 + 56);
      uint64_t v15 = *(void *)(a1 + 64);
      uint64_t v16 = swift_allocObject();
      uint64_t v17 = v15;
      uint64_t v18 = v16;
      uint64_t v12 = v14;
      *(void *)(v18 + 16) = v14;
      *(void *)(v18 + 24) = v17;
      uint64_t v13 = sub_1001B494C;
    }
    uint64_t v19 = v13;
    *(void *)&long long v24 = v6;
    *((void *)&v24 + 1) = v5;
    *(void *)&long long v25 = v8;
    *((void *)&v25 + 1) = v7;
    *(void *)&long long v26 = v9;
    *((void *)&v26 + 1) = v10;
    *(void *)&long long v27 = v23;
    *((void *)&v27 + 1) = v11;
    LOBYTE(v28) = v22;
    *((void *)&v28 + 1) = v21;
    *(void *)&long long v29 = v20;
    sub_100019614(v12);
    v19((uint64_t)&v24);
    swift_release();
    sub_1000194BC(v6, v5, v8, v7, v9, v10, v23, v11, v22, v21, v20);
  }
}

uint64_t sub_1001B45E0(void *a1)
{
  uint64_t result = a1[10];
  if (result)
  {
    long long v4 = (void *)a1[18];
    long long v3 = (void *)a1[19];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = v4;
    id v6 = v3;
    sub_100007620(&qword_1002EF0A8);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1001B46A0@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_1001B2124(a1);
}

uint64_t sub_1001B46F0()
{
  return sub_1001B45E0((void *)(v0 + 16));
}

uint64_t sub_1001B470C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 128);
  long long v9 = *(_OWORD *)(a1 + 136);
  id v6 = *(void **)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 160);
  uint64_t v23 = *(void *)(a1 + 200);
  uint64_t v24 = *(void *)(a1 + 192);
  uint64_t v21 = *(void *)(a1 + 216);
  uint64_t v22 = *(void *)(a1 + 208);
  uint64_t v19 = *(void *)(a1 + 232);
  uint64_t v20 = *(void *)(a1 + 224);
  uint64_t v17 = *(void *)(a1 + 248);
  uint64_t v18 = *(void *)(a1 + 240);
  long long v15 = *(_OWORD *)(a1 + 256);
  uint64_t v7 = *(void **)(a1 + 272);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100019614(v2);
  sub_10001959C(v14, v13, v3, v4, v5, v12, v11, v10, v9, *((void **)&v9 + 1), v6);
  sub_100019614(v16);
  swift_bridgeObjectRetain();
  sub_10001959C(v24, v23, v22, v21, v20, v19, v18, v17, v15, *((void **)&v15 + 1), v7);
  swift_retain();
  return a1;
}

void sub_1001B4868()
{
  sub_1001B4464(v0 + 16);
}

unint64_t sub_1001B4870()
{
  unint64_t result = qword_1002FA508;
  if (!qword_1002FA508)
  {
    sub_100007928(&qword_1002FA4F0);
    sub_100014894(&qword_1002FA510, &qword_1002FA4E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA508);
  }
  return result;
}

uint64_t sub_1001B4914()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B494C(uint64_t a1)
{
  return sub_100018F98(a1, *(uint64_t (**)(_OWORD *))(v1 + 16));
}

uint64_t sub_1001B4954@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B36A4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001B495C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001B404C(*(unsigned char **)(v1 + 16), a1);
}

uint64_t sub_1001B4968()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 176)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 216))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, 304, 7);
}

uint64_t sub_1001B4A38()
{
  return sub_1001B40B8(v0 + 16);
}

unint64_t sub_1001B4A40()
{
  unint64_t result = qword_1002FA560;
  if (!qword_1002FA560)
  {
    sub_100007928(&qword_1002FA558);
    sub_100007928(&qword_1002FA568);
    type metadata accessor for InlinePickerStyle();
    sub_100007928(&qword_1002FA570);
    sub_100014894(&qword_1002FA578, &qword_1002FA570);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA560);
  }
  return result;
}

unint64_t sub_1001B4B68()
{
  unint64_t result = qword_1002FA5A8;
  if (!qword_1002FA5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA5A8);
  }
  return result;
}

uint64_t sub_1001B4BC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001B4BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001B4BF4()
{
  return swift_release();
}

uint64_t sub_1001B4BFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B4C44()
{
  return sub_1001B3CC8();
}

uint64_t sub_1001B4C4C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001B4CB8()
{
  unint64_t result = qword_1002FA5D0;
  if (!qword_1002FA5D0)
  {
    sub_100007928(&qword_1002FA5D8);
    sub_1001B4D58();
    sub_100014894(&qword_1002EF1B0, &qword_1002EF1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA5D0);
  }
  return result;
}

unint64_t sub_1001B4D58()
{
  unint64_t result = qword_1002FA5E0;
  if (!qword_1002FA5E0)
  {
    sub_100007928(&qword_1002FA5E8);
    sub_100014894(&qword_1002EED78, &qword_1002EED40);
    sub_100014894(&qword_1002EF1A0, &qword_1002EF1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA5E0);
  }
  return result;
}

uint64_t sub_1001B4E1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for SpeakButtonStyle()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SpeakButtonStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SpeakButtonStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SpeakButtonStyle(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakButtonStyle(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SpeakButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakButtonStyle()
{
  return &type metadata for SpeakButtonStyle;
}

uint64_t sub_1001B5134()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1001B5150()
{
  qword_1002FA5F0 = 0x4050000000000000;
}

double sub_1001B5160()
{
  if (qword_1002EE698 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1002FA5F0 * 2.5;
  *(double *)&qword_10030EB90 = *(double *)&qword_1002FA5F0 * 2.5;
  return result;
}

uint64_t sub_1001B51BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002FA5F8);
  __chkstk_darwin(v4 - 8);
  id v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100007620(&qword_1002FA600);
  __chkstk_darwin(v7);
  long long v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002FA608);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *id v6 = static Alignment.center.getter();
  v6[1] = v13;
  uint64_t v14 = sub_100007620(&qword_1002FA610);
  sub_1001B54BC((char *)v2, (uint64_t)v6 + *(int *)(v14 + 44));
  if (qword_1002EE698 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10000C3A4((uint64_t)v6, (uint64_t)v9, &qword_1002FA5F8);
  long long v15 = &v9[*(int *)(v7 + 36)];
  long long v16 = v25;
  *(_OWORD *)long long v15 = v24;
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v26;
  sub_10000B070((uint64_t)v6, &qword_1002FA5F8);
  sub_10000C3A4((uint64_t)v9, (uint64_t)v12, &qword_1002FA600);
  v12[*(int *)(v10 + 36)] = 0;
  sub_10000B070((uint64_t)v9, &qword_1002FA600);
  long long v28 = *(_OWORD *)(v2 + 24);
  sub_10001323C((uint64_t)&v28 + 8, (uint64_t)v29, &qword_1002FA618);
  long long v27 = v28;
  sub_100007620(&qword_1002FA620);
  State.wrappedValue.getter();
  uint64_t v17 = v23[1];
  long long v27 = *(_OWORD *)(v2 + 8);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v18 + 32) = v19;
  *(void *)(v18 + 48) = *(void *)(v2 + 32);
  sub_10000C3A4((uint64_t)v12, a1, &qword_1002FA608);
  uint64_t v20 = sub_100007620(&qword_1002FA628);
  *(void *)(a1 + *(int *)(v20 + 52)) = v17;
  uint64_t v21 = (uint64_t (**)())(a1 + *(int *)(v20 + 56));
  void *v21 = sub_1001B6394;
  v21[1] = (uint64_t (*)())v18;
  sub_10001F2D8((uint64_t)&v27);
  swift_retain();
  sub_10001C05C((uint64_t)v29);
  return sub_10000B070((uint64_t)v12, &qword_1002FA608);
}

uint64_t sub_1001B54BC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  __chkstk_darwin(v3);
  uint64_t v88 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v86 = *(void *)(v5 - 8);
  uint64_t v87 = v5;
  __chkstk_darwin(v5);
  uint64_t v85 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  long long v71 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100007620(&qword_1002FA638);
  __chkstk_darwin(v70);
  long long v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100007620(&qword_1002FA640);
  __chkstk_darwin(v73);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002FA648);
  __chkstk_darwin(v12);
  uint64_t v75 = (uint64_t)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100007620(&qword_1002FA650);
  __chkstk_darwin(v79);
  uint64_t v81 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002FA658);
  uint64_t v82 = *(void *)(v15 - 8);
  uint64_t v83 = v15;
  __chkstk_darwin(v15);
  uint64_t v80 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100007620(&qword_1002FA660);
  uint64_t v17 = __chkstk_darwin(v77);
  long long v19 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v84 = (uint64_t)&v69 - v20;
  uint64_t v21 = sub_100007620(&qword_1002FA668);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (uint64_t *)((char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v69 = sub_100007620(&qword_1002FA670);
  uint64_t v24 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  long long v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007620(&qword_1002FA678);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v78 = (uint64_t)&v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v69 - v30;
  char v32 = *a1;
  uint64_t v76 = (uint64_t)&v69 - v30;
  if (v32)
  {
    *uint64_t v23 = static Alignment.center.getter();
    v23[1] = v33;
    uint64_t v34 = sub_100007620(&qword_1002FA6A8);
    sub_1001B5EB0((uint64_t)a1, (uint64_t)v23 + *(int *)(v34 + 44));
    sub_10000C3A4((uint64_t)v23, (uint64_t)v26, &qword_1002FA668);
    sub_10000B070((uint64_t)v23, &qword_1002FA668);
    sub_10001323C((uint64_t)v26, (uint64_t)v31, &qword_1002FA670);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v31, 0, 1, v69);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))((char *)&v69 - v30, 1, 1, v69);
  }
  uint64_t v35 = static Color.accentColor.getter();
  uint64_t v36 = v71;
  ButtonStyleConfiguration.label.getter();
  uint64_t v37 = static Color.accentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v39 = v72;
  uint64_t v40 = v74;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v9, v36, v74);
  uint64_t v41 = (uint64_t *)&v9[*(int *)(v70 + 36)];
  *uint64_t v41 = KeyPath;
  v41[1] = v37;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v40);
  if (qword_1002EE698 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10000C3A4((uint64_t)v9, (uint64_t)v11, &qword_1002FA638);
  uint64_t v42 = &v11[*(int *)(v73 + 36)];
  long long v43 = v93;
  *(_OWORD *)uint64_t v42 = v92;
  *((_OWORD *)v42 + 1) = v43;
  *((_OWORD *)v42 + 2) = v94;
  sub_10000B070((uint64_t)v9, &qword_1002FA638);
  static Font.title3.getter();
  uint64_t v44 = Font.bold()();
  swift_release();
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v75;
  sub_10000C3A4((uint64_t)v11, v75, &qword_1002FA640);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v12 + 36));
  *uint64_t v47 = v45;
  v47[1] = v44;
  sub_10000B070((uint64_t)v11, &qword_1002FA640);
  uint64_t v49 = v85;
  uint64_t v48 = v86;
  uint64_t v50 = v87;
  (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, enum case for Image.Scale.large(_:), v87);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = (uint64_t)v81;
  uint64_t v53 = (uint64_t *)&v81[*(int *)(v79 + 36)];
  uint64_t v54 = sub_100007620(&qword_1002EFF38);
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v53 + *(int *)(v54 + 28), v49, v50);
  *uint64_t v53 = v51;
  sub_10000C3A4(v46, v52, &qword_1002FA648);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  sub_10000B070(v46, &qword_1002FA648);
  long long v56 = v88;
  uint64_t v55 = v89;
  uint64_t v57 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, enum case for DynamicTypeSize.large(_:), v90);
  sub_1001B63D0();
  long long v58 = v80;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  sub_10000B070(v52, &qword_1002FA650);
  uint64_t v60 = v82;
  uint64_t v59 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v19, v58, v83);
  long long v61 = (uint64_t (**)())&v19[*(int *)(v77 + 36)];
  *long long v61 = sub_1001265C8;
  v61[1] = 0;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
  uint64_t v62 = v84;
  sub_10001323C((uint64_t)v19, v84, &qword_1002FA660);
  uint64_t v63 = v76;
  uint64_t v64 = v78;
  sub_10000C3A4(v76, v78, &qword_1002FA678);
  sub_10000C3A4(v62, (uint64_t)v19, &qword_1002FA660);
  uint64_t v65 = v91;
  sub_10000C3A4(v64, v91, &qword_1002FA678);
  uint64_t v66 = sub_100007620(&qword_1002FA6A0);
  uint64_t v67 = v65 + *(int *)(v66 + 48);
  *(void *)uint64_t v67 = v35;
  *(_WORD *)(v67 + 8) = 256;
  *(void *)(v67 + 16) = 0x3FC47AE147AE147BLL;
  sub_10000C3A4((uint64_t)v19, v65 + *(int *)(v66 + 64), &qword_1002FA660);
  swift_retain();
  sub_10000B070(v62, &qword_1002FA660);
  sub_10000B070(v63, &qword_1002FA678);
  sub_10000B070((uint64_t)v19, &qword_1002FA660);
  swift_release();
  return sub_10000B070(v64, &qword_1002FA678);
}

uint64_t sub_1001B5EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002FA6B0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v22 = (uint64_t)&v20 - v15;
  uint64_t v23 = static Color.accentColor.getter();
  long long v24 = *(_OWORD *)(a1 + 8);
  sub_100007620(&qword_1002F3B50);
  State.wrappedValue.getter();
  uint64_t v21 = v25;
  static AnyTransition.identity.getter();
  static UnitPoint.center.getter();
  static AnyTransition.scale(scale:anchor:)();
  static AnyTransition.opacity.getter();
  AnyTransition.combined(with:)();
  swift_release();
  swift_release();
  uint64_t v16 = static AnyTransition.asymmetric(insertion:removal:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for BlendMode.destinationOut(_:), v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
  sub_1001B662C((uint64_t)v6, (uint64_t)v14);
  sub_1001B6690((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v17 = v22;
  sub_10001323C((uint64_t)v14, v22, &qword_1002FA6B0);
  sub_10000C3A4(v17, (uint64_t)v14, &qword_1002FA6B0);
  *(void *)a2 = v23;
  *(_WORD *)(a2 + 8) = 256;
  *(void *)(a2 + 16) = 0x3FB999999999999ALL;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v16;
  uint64_t v18 = sub_100007620(&qword_1002FA6B8);
  sub_10000C3A4((uint64_t)v14, a2 + *(int *)(v18 + 48), &qword_1002FA6B0);
  swift_retain();
  swift_retain();
  sub_10000B070(v17, &qword_1002FA6B0);
  sub_10000B070((uint64_t)v14, &qword_1002FA6B0);
  swift_release();
  return swift_release();
}

uint64_t sub_1001B61E0()
{
  return swift_release();
}

uint64_t sub_1001B625C(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 8);
  sub_10001323C((uint64_t)&v3 + 8, (uint64_t)v4, &qword_1002FA630);
  sub_10001C05C((uint64_t)v4);
  sub_100007620(&qword_1002F3B50);
  uint64_t result = State.wrappedValue.getter();
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    State.wrappedValue.setter();
    return sub_10001F72C((uint64_t)&v3);
  }
  return result;
}

uint64_t sub_1001B6310@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B51BC(a1);
}

uint64_t sub_1001B634C()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001B6394()
{
  return sub_1001B61E0();
}

uint64_t sub_1001B639C()
{
  return sub_1001B625C(*(void *)(v0 + 16));
}

unint64_t sub_1001B63D0()
{
  unint64_t result = qword_1002FA680;
  if (!qword_1002FA680)
  {
    sub_100007928(&qword_1002FA650);
    sub_1001B6470();
    sub_100014894(&qword_1002EFF60, &qword_1002EFF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA680);
  }
  return result;
}

unint64_t sub_1001B6470()
{
  unint64_t result = qword_1002FA688;
  if (!qword_1002FA688)
  {
    sub_100007928(&qword_1002FA648);
    sub_1001B6510();
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA688);
  }
  return result;
}

unint64_t sub_1001B6510()
{
  unint64_t result = qword_1002FA690;
  if (!qword_1002FA690)
  {
    sub_100007928(&qword_1002FA640);
    sub_1001B658C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA690);
  }
  return result;
}

unint64_t sub_1001B658C()
{
  unint64_t result = qword_1002FA698;
  if (!qword_1002FA698)
  {
    sub_100007928(&qword_1002FA638);
    sub_10018E7A8();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA698);
  }
  return result;
}

uint64_t sub_1001B662C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B6690(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B66EC()
{
  return sub_100014894((unint64_t *)&unk_1002FA6C0, &qword_1002FA628);
}

id sub_1001B6728(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer] = 0;
  v2[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] = 0;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_translator] = a1;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_recordingHelper] = a2;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for SpeechManager();
  id v5 = a1;
  id v6 = a2;
  id v7 = [super init];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 defaultCenter];
  uint64_t v11 = self;
  id v12 = v9;
  id v13 = [v11 sharedInstance];
  [v10 addObserver:v12 selector:"handleAudioInterruptionWithNotification:" name:AVAudioSessionInterruptionNotification object:v13];

  return v12;
}

uint64_t sub_1001B689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, int a7, int a8, unsigned __int16 a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v13 = v12;
  int v52 = a7;
  int v54 = a5;
  uint64_t v53 = a4;
  v51[1] = a3;
  uint64_t v59 = a2;
  uint64_t v57 = a12;
  uint64_t v17 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v17 - 8);
  uint64_t v55 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620((uint64_t *)&unk_1002F6870);
  uint64_t v19 = type metadata accessor for Locale();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 72);
  unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  int v56 = a8;
  uint64_t v58 = a10;
  if ((a8 & 1) != 0 || (a6 & 1) == 0)
  {
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1002488D0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v27 + v22, a1, v19);
    long long v26 = sub_1001101F4(v27);
    swift_setDeallocating();
  }
  else
  {
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100247140;
    unint64_t v24 = v23 + v22;
    uint64_t v25 = *(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16);
    v25(v24, a1, v19);
    v25(v24 + v21, v59, v19);
    long long v26 = sub_1001101F4(v23);
    swift_setDeallocating();
  }
  swift_arrayDestroy();
  char v28 = a6;
  uint64_t v53 = a11;
  swift_deallocClassInstance();
  uint64_t v29 = &v13[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v30 = *((void *)v29 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(v30 + 16))(1, v26, ObjectType, v30);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char v32 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_translator];
  [v32 cleanup];
  id v33 = objc_allocWithZone((Class)_LTSpeechTranslationRequest);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v35 = Locale._bridgeToObjectiveC()().super.isa;
  id v36 = [v33 initWithSourceLocale:isa targetLocale:v35];

  id v37 = v36;
  NSString v38 = String._bridgeToObjectiveC()();
  [v37 setSessionID:v38];

  [v37 setCensorSpeech:byte_10030EB88];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v39 = v37;
  uint64_t v40 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v41 = NSUserDefaults.onDeviceOnly.getter();

  [v39 setForcedOfflineTranslation:v41 & 1];
  [v39 setAutoEndpoint:v52 & 1];
  [v39 setAutodetectLanguage:v28 & 1];
  [v39 setEnableVAD:v54 & 1];
  [v39 setForceSourceLocale:v56 & 1];
  [v39 set_supportsGenderDisambiguation:HIBYTE(a9) & 1];
  [v39 setSourceOrigin:v58];
  [v39 setDelegate:v13];
  id v42 = v39;
  Class v43 = UUID._bridgeToObjectiveC()().super.isa;
  [v42 setLogIdentifier:v43];

  v13[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] = 0;
  [v32 translate:v42];
  _s14descr1002C75F1V21SpeechResultContainerCMa();
  swift_allocObject();
  id v44 = v42;
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer] = sub_1001BB468((uint64_t)v32, (uint64_t)v44);
  swift_release();
  uint64_t v45 = type metadata accessor for TaskPriority();
  uint64_t v46 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v55, 1, 1, v45);
  uint64_t v47 = (void *)swift_allocObject();
  v47[2] = 0;
  v47[3] = 0;
  v47[4] = v13;
  v47[5] = v44;
  v47[6] = v53;
  id v48 = v44;
  uint64_t v49 = v13;
  sub_100056780(v46, (uint64_t)&unk_1002FA778, (uint64_t)v47);

  return swift_release();
}

uint64_t sub_1001B6E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  void v6[6] = a6;
  v6[4] = a4;
  uint64_t v7 = sub_100007620(&qword_1002FA780);
  v6[7] = v7;
  v6[8] = *(void *)(v7 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v8 = sub_100007620(&qword_1002FA788);
  v6[10] = v8;
  v6[11] = *(void *)(v8 - 8);
  v6[12] = swift_task_alloc();
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002FA790);
  v6[13] = v9;
  v6[14] = *(void *)(v9 - 8);
  v6[15] = swift_task_alloc();
  return _swift_task_switch(sub_1001B6FA4, 0, 0);
}

uint64_t sub_1001B6FA4()
{
  uint64_t v1 = v0;
  objc_super v15 = v0 + 18;
  uint64_t v16 = v0 + 2;
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v14 = v0[10];
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[6];
  uint64_t v8 = v1[5];
  uint64_t v9 = *(void *)(v1[4] + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_recordingHelper);
  id v10 = (void *)swift_task_alloc();
  v10[2] = v9;
  v10[3] = v7;
  void v10[4] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v6);
  AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
  swift_task_dealloc();
  AsyncThrowingStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v14);
  v1[16] = OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
  uint64_t v11 = (void *)swift_task_alloc();
  v1[17] = v11;
  void *v11 = v1;
  v11[1] = sub_1001B7148;
  uint64_t v12 = v1[13];
  return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v15, 0, 0, v12, v16);
}

uint64_t sub_1001B7148()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1001B73DC;
  }
  else {
    uint64_t v1 = sub_1001B7258;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1001B7258()
{
  float v1 = *(float *)(v0 + 144);
  if (*(unsigned char *)(v0 + 148))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 112) + 8))(*(void *)(v0 + 120), *(void *)(v0 + 104));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = *(void *)(*(void *)(v0 + 32) + *(void *)(v0 + 128) + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, float))(v4 + 8))(ObjectType, v4, v1);
      swift_unknownObjectRelease();
    }
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001B7148;
    uint64_t v7 = *(void *)(v0 + 104);
    return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 144, 0, 0, v7, v0 + 16);
  }
}

uint64_t sub_1001B73DC()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  uint64_t v1 = v0[2];
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030EA98);
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = _convertErrorToNSError(_:)();
    v0[3] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error while listening: %@", v5, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v8 = *(void *)(v0[4] + v0[16] + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v1, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

id sub_1001B7638()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, void, uint64_t, uint64_t))(v2 + 16))(0, 0, ObjectType, v2);
    swift_unknownObjectRelease();
  }
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer);
  if (v5) {
    [*(id *)(v5 + 48) endAudio];
  }
  sub_10018A180();
  *(void *)(v0 + v4) = 0;
  swift_release();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_translator);

  return [v6 cleanup];
}

void sub_1001B7710()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void **)(v1 + 48);
    swift_retain();
    if ([v3 autodetectLanguage])
    {
      *(unsigned char *)(v1 + 56) = (*(unsigned char *)(v1 + 56) & 1) == 0;
    }
    else
    {
      if (qword_1002EE630 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030EA98);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        id v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Cannot swap results because opposite locale results are not returned when autodetectLanguage is off", v10, 2u);
        swift_slowDealloc();
      }
    }
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate))
    {
      sub_1001BBCD0(&v37);
      if (v38)
      {
        sub_100048DE4(&v37, (uint64_t)v40);
        sub_100048DE4(v39, (uint64_t)v41);
        sub_100048DE4(v40, (uint64_t)v36);
        sub_100048DE4(v41, (uint64_t)&v34);
        uint64_t v11 = v2 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v12 = *(void *)(v11 + 8);
          if (qword_1002EE630 != -1) {
            swift_once();
          }
          uint64_t v13 = type metadata accessor for Logger();
          sub_100011554(v13, (uint64_t)qword_10030EA98);
          uint64_t v14 = Logger.logObject.getter();
          os_log_type_t v15 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v14, v15))
          {
            uint64_t v16 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v16 = 0;
            _os_log_impl((void *)&_mh_execute_header, v14, v15, "Sending final result to delegate after swap", v16, 2u);
            swift_slowDealloc();
          }

          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(unsigned char *, long long *, uint64_t, uint64_t))(v12 + 40))(v36, &v34, ObjectType, v12);
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_1002EE600 != -1) {
            swift_once();
          }
          uint64_t v29 = type metadata accessor for Logger();
          sub_100011554(v29, (uint64_t)qword_10030EA08);
          uint64_t v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v30, v31))
          {
            char v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v32 = 0;
            _os_log_impl((void *)&_mh_execute_header, v30, v31, "Cannot send result after swap because SpeechManagers's delegate doesn't exist", v32, 2u);
            swift_slowDealloc();
          }
        }
        swift_release();
        sub_10000AB68((uint64_t)&v34);
        sub_10000AB68((uint64_t)v36);
        return;
      }
      sub_10000B070((uint64_t)&v37, &qword_1002FA738);
    }
    sub_1001BC0F8((uint64_t)&v34);
    if (v35)
    {
      sub_100048DE4(&v34, (uint64_t)v36);
      sub_1000295C0((uint64_t)v36, (uint64_t)&v37);
      sub_1001BC300((uint64_t)v39);
      sub_10000AB68((uint64_t)v36);
      sub_100048DE4(&v37, (uint64_t)v40);
      sub_10006A24C((uint64_t)v39, (uint64_t)v41);
      uint64_t v18 = v2 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v19 = *(void *)(v18 + 8);
        if (qword_1002EE630 != -1) {
          swift_once();
        }
        uint64_t v20 = type metadata accessor for Logger();
        sub_100011554(v20, (uint64_t)qword_10030EA98);
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "Sending partial result to delegate after swap", v23, 2u);
          swift_slowDealloc();
        }

        uint64_t v24 = swift_getObjectType();
        (*(void (**)(long long *, long long *, uint64_t, uint64_t))(v19 + 32))(v40, v41, v24, v19);
        swift_unknownObjectRelease();
      }
      else
      {
        if (qword_1002EE600 != -1) {
          swift_once();
        }
        uint64_t v25 = type metadata accessor for Logger();
        sub_100011554(v25, (uint64_t)qword_10030EA08);
        long long v26 = Logger.logObject.getter();
        os_log_type_t v27 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v26, v27))
        {
          char v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v26, v27, "Cannot send result after swap because SpeechManagers's delegate doesn't exist", v28, 2u);
          swift_slowDealloc();
        }
      }
      swift_release();
      sub_10000B070((uint64_t)v40, (uint64_t *)&unk_1002FA750);
    }
    else
    {
      sub_10000B070((uint64_t)&v34, (uint64_t *)&unk_1002FA740);
      swift_release();
    }
  }
  else
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030EA98);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Cannot swap result locales because result container is nil", v6, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1001B7DDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10020384C((uint64_t)v21), (v5 & 1) != 0))
  {
    sub_10000B170(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v21);
  if (!*((void *)&v23 + 1))
  {
    sub_10000B070((uint64_t)&v22, (uint64_t *)&unk_1002F02C0);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  if (!v20)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100011554(v14, (uint64_t)qword_10030EA98);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_29;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Audio interruption ended";
    goto LABEL_28;
  }
  if (v20 != 1)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100011554(v19, (uint64_t)qword_10030EA98);
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v15, v16)) {
      goto LABEL_29;
    }
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    uint64_t v18 = "Audio interruption with unhandled type";
LABEL_28:
    _os_log_impl((void *)&_mh_execute_header, v15, v16, v18, v17, 2u);
    swift_slowDealloc();
LABEL_29:

    return;
  }
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA98);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Audio interruption began", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = v1 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v11 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, void, uint64_t, uint64_t))(v11 + 16))(0, 0, ObjectType, v11);
    swift_unknownObjectRelease();
  }
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer);
  if (v13) {
    [*(id *)(v13 + 48) endAudio];
  }
  sub_10018A180();
}

id sub_1001B8274()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpeechManager();
  return [super dealloc];
}

uint64_t type metadata accessor for SpeechManager()
{
  return self;
}

void sub_1001B8338(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F7600);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a2 + 16;
  if (qword_1002EE600 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_100011554(v14, (uint64_t)qword_10030EA08);
  id v16 = a1;
  uint64_t v54 = v15;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v50 = v8;
  uint64_t v51 = v14;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v49 = v6;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v48 = v7;
    v57[0] = v22;
    *(_DWORD *)uint64_t v21 = 67109634;
    LODWORD(v56) = [v16 isConfident];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 8) = 1024;
    LODWORD(v56) = [v16 isFinal];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 14) = 2082;
    id v23 = [v16 dominantLanguage];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = Locale.ltIdentifier.getter();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v53);
    uint64_t v56 = sub_100202FD4(v24, v26, v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Received LID result (confident: %{BOOL}d, final: %{BOOL}d): %{public}s", (uint8_t *)v21, 0x18u);
    swift_arrayDestroy();
    uint64_t v7 = v48;
    swift_slowDealloc();
    uint64_t v6 = v49;
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v28 = (char *)Strong;
    uint64_t v29 = Strong + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      if (*(void *)&v28[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer])
      {
        uint64_t v30 = *(void *)(v29 + 8);
        swift_retain();
        sub_1001BBD90(v16);
        if (v28[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate])
        {

          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1001BB4E8((uint64_t)v6);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v6, 1, v7) == 1)
          {

            swift_release();
            swift_unknownObjectRelease();
            uint64_t v40 = (uint64_t *)&unk_1002FA760;
            uint64_t v41 = (uint64_t)v6;
          }
          else
          {
            uint64_t v42 = *(int *)(v7 + 48);
            (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v10, v6, v53);
            uint64_t v43 = v6[v42];
            v10[v42] = v43;
            if (qword_1002EE630 != -1) {
              swift_once();
            }
            sub_100011554(v51, (uint64_t)qword_10030EA98);
            id v44 = Logger.logObject.getter();
            os_log_type_t v45 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v44, v45))
            {
              uint64_t v46 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v46 = 0;
              _os_log_impl((void *)&_mh_execute_header, v44, v45, "Sending final LID result to delegate", v46, 2u);
              swift_slowDealloc();
            }

            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 24))(v10, v43, ObjectType, v30);
            swift_unknownObjectRelease();

            swift_release();
            uint64_t v40 = &qword_1002F7600;
            uint64_t v41 = (uint64_t)v10;
          }
          sub_10000B070(v41, v40);
        }
      }
      else
      {
        if (qword_1002EE630 != -1) {
          swift_once();
        }
        sub_100011554(v51, (uint64_t)qword_10030EA98);
        long long v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v37, v38))
        {
          id v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Cannot capture lid result because SpeechResultContainer is nil", v39, 2u);
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
      }
    }
    else
    {
      long long v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v34, v35))
      {
        id v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Ignoring result above, SpeechManagers's delegate doesn't exist", v36, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    os_log_type_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v31, v32))
    {
      id v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Ignoring result above, SpeechRequest's delegate doesn't exist", v33, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001B8B48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = v19;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = v20;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
}

void sub_1001B8DF0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint8_t *)(a2 + 16);
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_100011554(v9, (uint64_t)qword_10030EA98);
  id v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v54 = v9;
    uint64_t v16 = v15;
    uint64_t v52 = swift_slowAlloc();
    v63[0] = v52;
    *(_DWORD *)uint64_t v16 = 136446979;
    uint64_t v53 = v8;
    id v17 = [v11 locale];
    HIDWORD(v51) = v14;
    id v18 = v17;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = Locale.ltIdentifier.getter();
    uint64_t v55 = (unsigned char *)v10;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)&v61[0] = sub_100202FD4(v19, v21, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 1024;
    unsigned int v22 = [v11 isStable];

    LODWORD(v61[0]) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v16 + 18) = 1024;
    unsigned int v23 = [v11 isFinal];

    LODWORD(v61[0]) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v16 + 24) = 2085;
    id v24 = [v11 bestTranscription];
    id v25 = [v24 formattedString];

    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    *(void *)&v61[0] = sub_100202FD4(v26, v28, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, BYTE4(v51), "Received speech result (locale: %{public}s, isStable: %{BOOL}d, final: %{BOOL}d): %{sensitive}s", (uint8_t *)v16, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v9 = v54;
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v30 = (char *)Strong;
    uint64_t v31 = Strong + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v32 = *(void *)(v31 + 8);
      if (([v11 isStable] & 1) == 0 && !objc_msgSend(v11, "isFinal"))
      {

        goto LABEL_37;
      }
      uint64_t v33 = *(void *)&v30[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer];
      if (v33)
      {
        id v34 = v11;
        swift_retain();
        sub_1001BAC30(v34, v33);

        if ((v30[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] & 1) == 0)
        {
          sub_1001BC0F8((uint64_t)&v59);
          if (v60)
          {
            os_log_type_t v35 = v64;
            sub_100048DE4(&v59, (uint64_t)v57);
            sub_1000295C0((uint64_t)v57, (uint64_t)v61);
            sub_1001BC300((uint64_t)v62 + 8);
            sub_10000AB68((uint64_t)v57);
            sub_100048DE4(v61, (uint64_t)v63);
            sub_10006A24C((uint64_t)v62 + 8, (uint64_t)v64);
            sub_1000295C0((uint64_t)v63, (uint64_t)v61);
            sub_10000C3A4((uint64_t)v64, (uint64_t)v62 + 8, (uint64_t *)&unk_1002F33F0);
            v57[2] = v62[0];
            uint64_t v57[3] = v62[1];
            long long v58 = v62[2];
            v57[0] = v61[0];
            v57[1] = v61[1];
            id v36 = Logger.logObject.getter();
            os_log_type_t v37 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v36, v37))
            {
              uint64_t v55 = v64;
              os_log_type_t v38 = (uint8_t *)swift_slowAlloc();
              uint64_t v54 = swift_slowAlloc();
              *(void *)&long long v59 = v54;
              uint64_t v53 = v38;
              *(_DWORD *)os_log_type_t v38 = 136315138;
              if ((void)v58) {
                uint64_t v39 = 7562585;
              }
              else {
                uint64_t v39 = 28494;
              }
              if ((void)v58) {
                unint64_t v40 = 0xE300000000000000;
              }
              else {
                unint64_t v40 = 0xE200000000000000;
              }
              uint64_t v56 = sub_100202FD4(v39, v40, (uint64_t *)&v59);
              os_log_type_t v35 = v55;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_10000B070((uint64_t)v57, (uint64_t *)&unk_1002FA750);
              _os_log_impl((void *)&_mh_execute_header, v36, v37, "Sending partial result to delegate. Partial translation is attached: %s", v53, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_10000B070((uint64_t)v57, (uint64_t *)&unk_1002FA750);
            }

            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t *, unsigned char *, uint64_t, uint64_t))(v32 + 32))(v63, v35, ObjectType, v32);
            swift_unknownObjectRelease();

            swift_release();
            sub_10000B070((uint64_t)v63, (uint64_t *)&unk_1002FA750);
            return;
          }
          sub_10000B070((uint64_t)&v59, (uint64_t *)&unk_1002FA740);
        }

        swift_release();
LABEL_37:
        swift_unknownObjectRelease();
        return;
      }
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v49 = 0;
        _os_log_impl((void *)&_mh_execute_header, v47, v48, "Cannot capture speech recognition result because SpeechResultContainer is nil", v49, 2u);
        swift_slowDealloc();
      }

      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1002EE600 != -1) {
        swift_once();
      }
      sub_100011554(v9, (uint64_t)qword_10030EA08);
      id v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Ignoring result above, SpeechManagers's delegate doesn't exist", v46, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    if (qword_1002EE600 != -1) {
      swift_once();
    }
    sub_100011554(v9, (uint64_t)qword_10030EA08);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Ignoring result above, SpeechRequest's delegate doesn't exist.", v43, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1001B9758(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  long long v59 = *(uint8_t **)(v4 - 8);
  uint64_t v60 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 translations];
  sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = sub_100161E8C(v8);
  swift_bridgeObjectRelease();
  if (*(void *)(v9 + 16))
  {
    sub_1000295C0(v9 + 32, (uint64_t)&v68);
    swift_bridgeObjectRelease();
    if (*((void *)&v69 + 1))
    {
      sub_100029624(&v68, *((uint64_t *)&v69 + 1));
      uint64_t v10 = dispatch thunk of FormattedString.formattedString.getter();
      unint64_t v12 = v11;
      sub_10000AB68((uint64_t)&v68);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v70 = 0;
    long long v68 = 0u;
    long long v69 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_10000B070((uint64_t)&v68, &qword_1002FA730);
  uint64_t v10 = 0;
  unint64_t v12 = 0;
LABEL_6:
  uint64_t v13 = a2 + 16;
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  long long v61 = (long long *)type metadata accessor for Logger();
  uint64_t v14 = sub_100011554((uint64_t)v61, (uint64_t)qword_10030EA98);
  swift_bridgeObjectRetain();
  id v15 = a1;
  uint64_t v58 = v14;
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(void *)&long long v68 = v56;
    *(_DWORD *)uint64_t v18 = 136446723;
    uint64_t v57 = v13;
    id v19 = [v15 locale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v20 = Locale.ltIdentifier.getter();
    uint64_t v55 = v10;
    unint64_t v22 = v21;
    (*((void (**)(char *, uint64_t))v59 + 1))(v6, v60);
    *(void *)&long long v65 = sub_100202FD4(v20, v22, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 1024;
    unsigned int v23 = [v15 isFinal];

    LODWORD(v65) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v18 + 18) = 2085;
    if (v12) {
      uint64_t v24 = v55;
    }
    else {
      uint64_t v24 = 7104878;
    }
    if (v12) {
      unint64_t v25 = v12;
    }
    else {
      unint64_t v25 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)&long long v65 = sub_100202FD4(v24, v25, (uint64_t *)&v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Received translation result; locale: %{public}s; final: %{BOOL}d; formattedResult: %{sensitive}s",
      (uint8_t *)v18,
      0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_1002EE600 != -1) {
      swift_once();
    }
    sub_100011554((uint64_t)v61, (uint64_t)qword_10030EA08);
    os_log_type_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Ignoring result above, SpeechRequest's delegate doesn't exist.", v37, 2u);
      swift_slowDealloc();
    }

    return;
  }
  unint64_t v27 = (char *)Strong;
  uint64_t v28 = Strong + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_1002EE600 != -1) {
      swift_once();
    }
    sub_100011554((uint64_t)v61, (uint64_t)qword_10030EA08);
    os_log_type_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      unint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Ignoring result above, SpeechManagers's delegate doesn't exist", v40, 2u);
      swift_slowDealloc();
    }

    goto LABEL_38;
  }
  uint64_t v29 = *(void *)&v27[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer];
  if (!v29)
  {
    uint64_t v41 = Logger.logObject.getter();
    uint64_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, (os_log_type_t)v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v42, "Cannot capture translation result because SpeechResultContainer is nil", v43, 2u);
      swift_slowDealloc();
    }

    swift_unknownObjectRelease();
LABEL_38:

    return;
  }
  uint64_t v30 = *(void *)(v28 + 8);
  id v31 = v15;
  swift_retain();
  sub_1001BAEE0(v31, v29);

  sub_1001BBCD0(&v65);
  if (!*((void *)&v66 + 1))
  {
    sub_10000B070((uint64_t)&v65, &qword_1002FA738);
    if ((v27[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] & 1) == 0)
    {
      sub_1001BC0F8((uint64_t)&v72);
      if (v73)
      {
        id v44 = v71;
        sub_100048DE4(&v72, (uint64_t)v63);
        sub_1000295C0((uint64_t)v63, (uint64_t)&v65);
        sub_1001BC300((uint64_t)v67 + 8);
        sub_10000AB68((uint64_t)v63);
        sub_100048DE4(&v65, (uint64_t)&v68);
        sub_10006A24C((uint64_t)v67 + 8, (uint64_t)v71);
        sub_1000295C0((uint64_t)&v68, (uint64_t)&v65);
        sub_10000C3A4((uint64_t)v71, (uint64_t)v67 + 8, (uint64_t *)&unk_1002F33F0);
        v63[2] = v67[0];
        v63[3] = v67[1];
        long long v64 = v67[2];
        v63[0] = v65;
        v63[1] = v66;
        os_log_type_t v45 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v45, v46))
        {
          long long v61 = v71;
          uint64_t v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v60 = swift_slowAlloc();
          *(void *)&long long v72 = v60;
          long long v59 = v47;
          *(_DWORD *)uint64_t v47 = 136315138;
          if ((void)v64) {
            uint64_t v48 = 7562585;
          }
          else {
            uint64_t v48 = 28494;
          }
          if ((void)v64) {
            unint64_t v49 = 0xE300000000000000;
          }
          else {
            unint64_t v49 = 0xE200000000000000;
          }
          uint64_t v62 = sub_100202FD4(v48, v49, (uint64_t *)&v72);
          id v44 = v61;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10000B070((uint64_t)v63, (uint64_t *)&unk_1002FA750);
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "Sending partial result to delegate. Partial translation is attached: %s", v59, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_10000B070((uint64_t)v63, (uint64_t *)&unk_1002FA750);
        }

        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(long long *, long long *, uint64_t, uint64_t))(v30 + 32))(&v68, v44, ObjectType, v30);
        swift_unknownObjectRelease();

        swift_release();
        sub_10000B070((uint64_t)&v68, (uint64_t *)&unk_1002FA750);
        return;
      }
      sub_10000B070((uint64_t)&v72, (uint64_t *)&unk_1002FA740);
    }

    swift_release();
    swift_unknownObjectRelease();
    return;
  }
  sub_100048DE4(&v65, (uint64_t)&v68);
  sub_100048DE4((_OWORD *)((char *)v67 + 8), (uint64_t)v71);
  sub_100048DE4(&v68, (uint64_t)v63);
  sub_100048DE4(v71, (uint64_t)&v72);
  if (v27[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] == 1)
  {
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, v33))
    {
      id v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Received additional result after sending final result, not going to re-send final result.", v34, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    v27[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_sentFinalResultToDelegate] = 1;
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Sending final result to delegate", v52, 2u);
      swift_slowDealloc();
    }

    uint64_t v53 = swift_getObjectType();
    (*(void (**)(_OWORD *, long long *, uint64_t, uint64_t))(v30 + 40))(v63, &v72, v53, v30);
  }
  swift_unknownObjectRelease();

  swift_release();
  sub_10000AB68((uint64_t)&v72);
  sub_10000AB68((uint64_t)v63);
}

uint64_t sub_1001BA2B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1001BAC04;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002D1EE8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1001BA568(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_100007620((uint64_t *)&unk_1002FA720);
    sub_10000B0CC(0, &qword_1002EEC58);
    if (swift_dynamicCast())
    {
      uint64_t v1 = qword_1002EE630;
      id v2 = v25;
      if (v1 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100011554(v3, (uint64_t)qword_10030EA98);
      uint64_t v4 = v2;
      uint64_t v5 = Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v24 = v3;
        uint64_t v7 = (uint8_t *)swift_slowAlloc();
        uint64_t v8 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v7 = 138412290;
        uint64_t v9 = v4;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v8 = v4;

        uint64_t v3 = v24;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Translation finished with error: %@", v7, 0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v5 = v4;
      }

      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v11 = Strong;
        uint64_t v15 = Strong + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v16 = *(void *)(v15 + 8);
          swift_getObjectType();
          os_log_type_t v17 = *(void (**)(void))(v16 + 48);
          uint64_t v18 = v4;
          v17();

          swift_unknownObjectRelease();
          uint64_t v11 = v18;
          goto LABEL_25;
        }
        if (qword_1002EE600 != -1) {
          swift_once();
        }
        sub_100011554(v3, (uint64_t)qword_10030EA08);
        unint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v21, v22))
        {
          unsigned int v23 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v23 = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ignoring result above, SpeechManagers's delegate doesn't exist", v23, 2u);
          swift_slowDealloc();

          goto LABEL_25;
        }
      }
      else
      {
        if (qword_1002EE600 != -1) {
          swift_once();
        }
        sub_100011554(v3, (uint64_t)qword_10030EA08);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v19 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v11, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v19, "Ignoring result above, SpeechRequest's delegate doesn't exist.", v20, 2u);
          swift_slowDealloc();

          goto LABEL_25;
        }
      }

      uint64_t v11 = v4;
      goto LABEL_25;
    }
  }
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030EA98);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Translation finished without an error", v13, 2u);
    swift_slowDealloc();
  }
LABEL_25:
}

uint64_t sub_1001BAB8C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BABC4()
{
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001BAC04()
{
  sub_1001BA568(*(void *)(v0 + 16));
}

uint64_t sub_1001BAC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BAC1C()
{
  return swift_release();
}

void sub_1001BAC28()
{
  sub_1001B9758(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001BAC30(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(a2 + 64) + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstResult;
  swift_beginAccess();
  sub_10000C3A4(v10, (uint64_t)v9, &qword_1002F8BA0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  id v14 = a1;
  sub_10000B070((uint64_t)v9, &qword_1002F8BA0);
  if (v13 == 1)
  {
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    swift_beginAccess();
    sub_10006E800((uint64_t)v7, v10);
    swift_endAccess();
  }
  uint64_t v15 = (void *)(a2 + 24);
  swift_beginAccess();
  uint64_t v16 = *(void **)(a2 + 24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 24) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_1002027B0(0, v16[2] + 1, 1, v16);
    void *v15 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t v16 = sub_1002027B0((void *)(v18 > 1), v19 + 1, 1, v16);
    void *v15 = v16;
  }
  uint64_t v23 = sub_10000B0CC(0, (unint64_t *)&unk_1002F3400);
  uint64_t v24 = sub_10007854C(&qword_1002F3420, (unint64_t *)&unk_1002F3400);
  *(void *)&long long v22 = v14;
  v16[2] = v19 + 1;
  sub_100048DE4(&v22, (uint64_t)&v16[5 * v19 + 4]);
  return swift_endAccess();
}

uint64_t sub_1001BAEE0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(a2 + 64) + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTranslation;
  swift_beginAccess();
  sub_10000C3A4(v10, (uint64_t)v9, &qword_1002F8BA0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  id v14 = a1;
  sub_10000B070((uint64_t)v9, &qword_1002F8BA0);
  if (v13 == 1)
  {
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    swift_beginAccess();
    sub_10006E800((uint64_t)v7, v10);
    swift_endAccess();
  }
  uint64_t v15 = (void *)(a2 + 32);
  swift_beginAccess();
  uint64_t v16 = *(void **)(a2 + 32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 32) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v16 = sub_1002027C4(0, v16[2] + 1, 1, v16);
    void *v15 = v16;
  }
  unint64_t v19 = v16[2];
  unint64_t v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t v16 = sub_1002027C4((void *)(v18 > 1), v19 + 1, 1, v16);
    void *v15 = v16;
  }
  uint64_t v23 = sub_10000B0CC(0, &qword_1002F33B0);
  uint64_t v24 = sub_10007854C((unint64_t *)&qword_1002F33B8, &qword_1002F33B0);
  *(void *)&long long v22 = v14;
  v16[2] = v19 + 1;
  sub_100048DE4(&v22, (uint64_t)&v16[5 * v19 + 4]);
  return swift_endAccess();
}

void sub_1001BB194()
{
  sub_1001B8DF0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001BB1A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001BB1E0()
{
  sub_1001B8338(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001BB1E8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001BB230(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100021B58;
  return sub_1001B6E1C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1001BB2F8(uint64_t a1)
{
  return sub_100187578(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

Class sub_1001BB31C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_1001BB3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1001BB3D0(a1, a2, a3);
}

uint64_t sub_1001BB3D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))result;
    uint64_t v7 = a2 + 40 * v5 - 8;
    while (1)
    {
      unint64_t result = v6(v7);
      if (v3) {
        break;
      }
      if (result) {
        return sub_1000295C0(v7, a3);
      }
      v7 -= 40;
      if (!--v5) {
        goto LABEL_6;
      }
    }
  }
  else
  {
LABEL_6:
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1001BB468(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = _swiftEmptyArrayStorage;
  *(void *)(v2 + 32) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = [objc_allocWithZone((Class)type metadata accessor for SpeechTranslationInstrumentation()) init];
  *(void *)(v2 + 72) = [objc_allocWithZone((Class)_LTSpeechLIDLoggingRequest) init];
  *(unsigned char *)(v2 + 80) = 0;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return v2;
}

uint64_t sub_1001BB4E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v61 - v11;
  int v13 = *(void **)(v1 + 48);
  if (![v13 autodetectLanguage]
    || ([v13 forceSourceLocale] & 1) != 0)
  {
    int v14 = *(unsigned __int8 *)(v1 + 56);
    uint64_t v15 = sub_100007620(&qword_1002F7600);
    uint64_t v16 = *(int *)(v15 + 48);
    id v17 = [v13 localePair];
    unint64_t v18 = v17;
    if (v14 == 1) {
      id v19 = [v17 targetLocale];
    }
    else {
      id v19 = [v17 sourceLocale];
    }
    id v20 = v19;

    static Locale._unconditionallyBridgeFromObjectiveC(_:)();
    *(unsigned char *)(a1 + v16) = 1;
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    goto LABEL_7;
  }
  uint64_t v26 = *(void **)(v1 + 16);
  if (!v26)
  {
    uint64_t v37 = sub_100007620(&qword_1002F7600);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
    uint64_t v24 = v37;
    uint64_t v22 = a1;
    uint64_t v23 = 1;
    goto LABEL_8;
  }
  if (*(unsigned char *)(v1 + 56) == 1)
  {
    id v27 = v26;
    id v28 = [v13 localePair];
    id v65 = v27;
    id v29 = [v27 dominantLanguage];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v64 = isa;
    uint64_t v62 = *(void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v63 = v7 + 8;
    v62(v10, v6);
    id v31 = [v28 oppositeToLocale:isa];

    if (v31)
    {
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v32(v5, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        v32(v12, v5, v6);
        uint64_t v33 = sub_100007620(&qword_1002F7600);
        uint64_t v34 = *(int *)(v33 + 48);
        (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a1, v12, v6);
        id v35 = v65;
        unsigned __int8 v36 = [v65 isConfident];

        v62(v12, v6);
        *(unsigned char *)(a1 + v34) = v36;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 0, 1, v33);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F4110);
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100011554(v41, (uint64_t)qword_10030EA98);
    id v42 = v65;
    swift_retain_n();
    id v43 = v42;
    id v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    int v46 = v45;
    p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v48 = swift_slowAlloc();
      id v65 = (id)swift_slowAlloc();
      id v67 = v65;
      *(_DWORD *)uint64_t v48 = 136446466;
      v61[1] = v48 + 4;
      id v49 = [v43 dominantLanguage];
      LODWORD(v64) = v46;
      id v50 = v49;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v51 = Locale.ltIdentifier.getter();
      unint64_t v53 = v52;
      v62(v10, v6);
      uint64_t v66 = sub_100202FD4(v51, v53, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      id v54 = [v13 localePair];
      id v55 = [v54 combinedLocaleIdentifier];

      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v58 = v57;

      uint64_t v66 = sub_100202FD4(v56, v58, (uint64_t *)&v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v64, "Couldn't find locale opposite to speech request's locale pair. Given locale: %{public}s. Locale pair: %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v33 = sub_100007620(&qword_1002F7600);
    uint64_t v59 = *(int *)(v33 + 48);
    id v60 = [v43 p_weak_ivar_lyt[426]];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v60) = [v43 isConfident];
    *(unsigned char *)(a1 + v59) = (_BYTE)v60;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 0, 1, v33);
  }
  uint64_t v15 = sub_100007620(&qword_1002F7600);
  uint64_t v38 = *(int *)(v15 + 48);
  id v39 = v26;
  id v40 = [v39 dominantLanguage];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v40) = [v39 isConfident];
  *(unsigned char *)(a1 + v38) = (_BYTE)v40;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
LABEL_7:
  uint64_t v22 = a1;
  uint64_t v23 = 0;
  uint64_t v24 = v15;
LABEL_8:

  return v21(v22, v23, 1, v24);
}

double sub_1001BBCD0@<D0>(_OWORD *a1@<X8>)
{
  sub_1001BC8F8((uint64_t)&v7);
  if (v8)
  {
    sub_100048DE4(&v7, (uint64_t)v9);
    sub_1001BCDC8((uint64_t)&v5);
    if (v6)
    {
      sub_100048DE4(&v5, (uint64_t)&v7);
      sub_1001BD378(&v7);
      sub_100048DE4(v9, (uint64_t)a1);
      sub_100048DE4(&v7, (uint64_t)a1 + 40);
      return result;
    }
    sub_10000AB68((uint64_t)v9);
    uint64_t v3 = (uint64_t *)&unk_1002F33F0;
    uint64_t v4 = &v5;
  }
  else
  {
    uint64_t v3 = (uint64_t *)&unk_1002FA740;
    uint64_t v4 = &v7;
  }
  sub_10000B070((uint64_t)v4, v3);
  double result = 0.0;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_1001BBD90(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F8BA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v27 = *(void *)(v2 + 64);
  uint64_t v13 = v27 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstLID;
  swift_beginAccess();
  sub_1000786D8(v13, (uint64_t)v12);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
  sub_10000B070((uint64_t)v12, &qword_1002F8BA0);
  if (v16 == 1)
  {
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    swift_beginAccess();
    sub_1000344BC((uint64_t)v10, v13, &qword_1002F8BA0);
    swift_endAccess();
  }
  sub_1001BB4E8((uint64_t)v6);
  uint64_t v17 = sub_100007620(&qword_1002F7600);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1, v17);
  sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002FA760);
  if (v18 != 1)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100011554(v19, (uint64_t)qword_10030EA98);
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Only one LID result is expected. Something went wrong.", v22, 2u);
      swift_slowDealloc();
    }
  }
  unsigned __int8 v23 = [a1 isConfident];
  *(unsigned char *)(v27 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lidTriggered) = v23 ^ 1;
  [*(id *)(v2 + 72) setLidResult:a1];
  uint64_t v24 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  id v25 = a1;
}

double sub_1001BC0F8@<D0>(uint64_t a1@<X8>)
{
  return sub_1001BC910((uint64_t)sub_1001BDD44, a1);
}

uint64_t sub_1001BC110(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F7600);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  char v11 = dispatch thunk of SpeechResult.isEmpty()();
  uint64_t v12 = (uint64_t)a1;
  uint64_t v13 = v4;
  uint64_t v14 = v18;
  sub_1000295C0(v12, (uint64_t)v19);
  uint64_t v15 = *(int *)(v8 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a2, v13);
  v10[v15] = *(unsigned char *)(a2 + v15);
  if (v11)
  {
    char v16 = 0;
  }
  else
  {
    sub_100029624(v19, v19[3]);
    dispatch thunk of AnnotatedResult.locale.getter();
    char v16 = static Locale.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  }
  sub_10000B070((uint64_t)v10, &qword_1002F7600);
  sub_10000AB68((uint64_t)v19);
  return v16 & 1;
}

double sub_1001BC300@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v4 - 8);
  int v46 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_type_t v45 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v44 = (char *)&v40 - v10;
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002F7600);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v40 - v19;
  sub_1001BB4E8((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v43 = a1;
    uint64_t v21 = *(int *)(v14 + 48);
    id v42 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v42(v20, v13, v6);
    char v22 = v13[v21];
    v20[v21] = v22;
    uint64_t v41 = v2;
    id v23 = [*(id *)(v2 + 48) localePair];
    uint64_t v24 = *(int *)(v14 + 48);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v20, v6);
    v18[v24] = v22;
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v18, v6);
    id v27 = [v23 oppositeToLocale:isa];

    if (v27)
    {
      id v28 = v45;
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      id v29 = (long long *)v46;
      uint64_t v30 = v28;
      id v31 = (void (*)(char *, long long *, uint64_t))v42;
      v42(v46, v30, v6);
      (*(void (**)(long long *, void, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v7 + 48))(v29, 1, v6) != 1)
      {
        uint64_t v32 = v26;
        uint64_t v33 = v44;
        v31(v44, v29, v6);
        uint64_t v34 = v41;
        uint64_t v35 = swift_beginAccess();
        uint64_t v36 = *(void *)(v34 + 32);
        __chkstk_darwin(v35);
        *(&v40 - 2) = (uint64_t)v33;
        swift_bridgeObjectRetain();
        sub_1001BB3D0((uint64_t)sub_1001BDD24, v36, (uint64_t)&v47);
        swift_bridgeObjectRelease();
        sub_10000B070((uint64_t)v20, &qword_1002F7600);
        v32(v33, v6);
        if (v48)
        {
          sub_100048DE4(&v47, v43);
          return result;
        }
        uint64_t v38 = (uint64_t *)&unk_1002F33F0;
        id v39 = &v47;
        goto LABEL_9;
      }
    }
    else
    {
      id v29 = (long long *)v46;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v46, 1, 1, v6);
    }
    sub_10000B070((uint64_t)v20, &qword_1002F7600);
    uint64_t v38 = (uint64_t *)&unk_1002F4110;
    id v39 = v29;
LABEL_9:
    sub_10000B070((uint64_t)v39, v38);
    a1 = v43;
    goto LABEL_10;
  }
  sub_10000B070((uint64_t)v13, (uint64_t *)&unk_1002FA760);
LABEL_10:
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1001BC7E8(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  dispatch thunk of TranslationResult.locale.getter();
  LOBYTE(a1) = static Locale.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

double sub_1001BC8F8@<D0>(uint64_t a1@<X8>)
{
  return sub_1001BC910((uint64_t)sub_1001BDD04, a1);
}

double sub_1001BC910@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (long long *)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100007620(&qword_1002F7600);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v25[-v13];
  sub_1001BB4E8((uint64_t)v7);
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t v15 = (uint64_t *)&unk_1002FA760;
    uint64_t v16 = v7;
  }
  else
  {
    uint64_t v17 = *(int *)(v8 + 48);
    uint64_t v18 = type metadata accessor for Locale();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(unsigned char *, long long *, uint64_t))(v19 + 32))(v14, v7, v18);
    char v20 = *((unsigned char *)v7 + v17);
    v14[v17] = v20;
    swift_beginAccess();
    uint64_t v21 = *(void *)(v2 + 24);
    uint64_t v22 = *(int *)(v8 + 48);
    uint64_t v23 = (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 16))(v12, v14, v18);
    v12[v22] = v20;
    __chkstk_darwin(v23);
    *(void *)&v25[-16] = v12;
    swift_bridgeObjectRetain();
    sub_1001BB3D0(a1, v21, (uint64_t)&v26);
    swift_bridgeObjectRelease();
    sub_10000B070((uint64_t)v14, &qword_1002F7600);
    sub_10000B070((uint64_t)v12, &qword_1002F7600);
    if (v27)
    {
      sub_100048DE4(&v26, a2);
      return result;
    }
    uint64_t v15 = (uint64_t *)&unk_1002FA740;
    uint64_t v16 = &v26;
  }
  sub_10000B070((uint64_t)v16, v15);
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1001BCBD8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v18 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F7600);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  char v11 = dispatch thunk of SpeechResult.isFinal.getter();
  uint64_t v12 = (uint64_t)a1;
  uint64_t v13 = v4;
  uint64_t v14 = v18;
  sub_1000295C0(v12, (uint64_t)v19);
  uint64_t v15 = *(int *)(v8 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a2, v13);
  v10[v15] = *(unsigned char *)(a2 + v15);
  if (v11)
  {
    sub_100029624(v19, v19[3]);
    dispatch thunk of AnnotatedResult.locale.getter();
    char v16 = static Locale.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  }
  else
  {
    char v16 = 0;
  }
  sub_10000B070((uint64_t)v10, &qword_1002F7600);
  sub_10000AB68((uint64_t)v19);
  return v16 & 1;
}

uint64_t sub_1001BCDC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  sub_1001BC8F8((uint64_t)&v29);
  if (!v30)
  {
    uint64_t result = sub_10000B070((uint64_t)&v29, (uint64_t *)&unk_1002FA740);
LABEL_10:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  id v28 = v13;
  sub_100048DE4(&v29, (uint64_t)v31);
  id v26 = *(id *)(v1 + 48);
  id v14 = [v26 localePair];
  sub_100029624(v31, v31[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v11, v7);
  id v16 = [v14 oppositeToLocale:isa];

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_9;
  }
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_9:
    sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4110);
    uint64_t result = sub_10000AB68((uint64_t)v31);
    goto LABEL_10;
  }
  uint64_t v18 = v28;
  v17(v28, v6, v7);
  id v19 = [v26 localePair];
  unsigned int v20 = [v19 isPassthrough];

  uint64_t v21 = (uint64_t *)(v2 + 32);
  if (v20)
  {
    swift_beginAccess();
    uint64_t v22 = *(void *)(*v21 + 16);
    if (v22)
    {
      sub_1000295C0(*v21 + 40 * v22 - 8, a1);
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
  else
  {
    uint64_t v24 = swift_beginAccess();
    uint64_t v25 = *v21;
    __chkstk_darwin(v24);
    *(&v26 - 2) = v18;
    swift_bridgeObjectRetain();
    sub_1001BB3D0((uint64_t)sub_1001BDCE4, v25, a1);
    swift_bridgeObjectRelease();
  }
  v27((char *)v18, v7);
  return sub_10000AB68((uint64_t)v31);
}

uint64_t sub_1001BD1AC(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16[-1] - v9;
  sub_100029624(a1, a1[3]);
  char v11 = dispatch thunk of TranslationResult.isFinal.getter();
  sub_1000295C0((uint64_t)a1, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  if (v11)
  {
    sub_100029624(v16, v16[3]);
    dispatch thunk of TranslationResult.locale.getter();
    char v12 = static Locale.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    char v12 = 0;
  }
  sub_10000AB68((uint64_t)v16);
  return v12 & 1;
}

void sub_1001BD378(void *a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 80)) {
    return;
  }
  uint64_t v9 = 1;
  *(unsigned char *)(v1 + 80) = 1;
  uint64_t v10 = *(unsigned char **)(v1 + 64);
  uint64_t v59 = v1;
  char v11 = *(void **)(v1 + 48);
  id v12 = [v11 localePair];
  uint64_t v13 = *(void **)&v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair];
  *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair] = v12;

  unsigned __int8 v14 = [v11 censorSpeech];
  v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_censorSpeech] = v14;
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v15 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v16 = NSUserDefaults.onDeviceOnly.getter();

  v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_onDeviceModeEnabled] = v16 & 1;
  sub_100029624(a1, a1[3]);
  v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_offline] = dispatch thunk of TranslationResult.isOffline.getter() & 1;
  sub_100029624(a1, a1[3]);
  v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lowQualityMT] = TranslationResult.isLowConfidence.getter() & 1;
  id v57 = v11;
  id v17 = [v11 localePair];
  uint64_t v18 = a1[3];
  unint64_t v58 = a1;
  sub_100029624(a1, v18);
  id v19 = v60;
  dispatch thunk of TranslationResult.locale.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  uint64_t v21 = v6;
  id v55 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v56 = v7 + 8;
  v55(v19, v6);
  id v22 = [v17 oppositeToLocale:isa];

  if (v22)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v9 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v9, 1, v6);
  uint64_t v23 = (uint64_t)&v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_sourceLocale];
  swift_beginAccess();
  sub_1000344BC((uint64_t)v5, v23, (uint64_t *)&unk_1002F4110);
  swift_endAccess();
  uint64_t v24 = v58;
  sub_1000295C0((uint64_t)v58, (uint64_t)aBlock);
  sub_100007620(&qword_1002FC480);
  sub_10000B0CC(0, &qword_1002F33B0);
  int v25 = swift_dynamicCast();
  uint64_t v26 = v59;
  if (v25)
  {
    id v27 = v62;
    id v28 = [v62 translations];

    sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v30) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v30 = *(void **)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v30)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
    if ((v29 & 0xC000000000000001) != 0)
    {
      id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_25;
      }
      id v31 = *(id *)(v29 + 32);
    }
    uint64_t v30 = v31;
    swift_bridgeObjectRelease();
    id v32 = [v30 statistics];
    if (v32)
    {
      uint64_t v33 = v32;
      id v34 = [v32 inputTokenCount];
      *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputTokenCount] = v34;
      id v35 = [v33 inputSubtokenCount];

      *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputSubtokenCount] = v35;
    }
    id v36 = [v30 senses];
    sub_10000B0CC(0, &qword_1002F3590);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v29 >> 62))
    {
      if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_14:
        if ((v29 & 0xC000000000000001) != 0)
        {
          id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v37 = *(id *)(v29 + 32);
        }
        uint64_t v38 = v37;
        swift_bridgeObjectRelease();
        unsigned int v39 = [v38 isPhrasebookMatch];

        if (v39) {
          uint64_t v40 = &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_nBestDisplay;
        }
        else {
          uint64_t v40 = &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_senseDisambiguation;
        }
        v10[*v40] = 1;
        goto LABEL_28;
      }
      goto LABEL_26;
    }
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_14;
    }
LABEL_26:

    goto LABEL_27;
  }
LABEL_28:
  id v42 = v10;
  NSString v43 = String._bridgeToObjectiveC()();
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v42;
  aBlock[4] = sub_1001BDCA8;
  aBlock[5] = v44;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB31C;
  void aBlock[3] = &unk_1002D2050;
  os_log_type_t v45 = _Block_copy(aBlock);
  int v46 = v42;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v45);

  id v47 = v57;
  if ([v57 autodetectLanguage]
    && ([v47 forcedOfflineTranslation] & 1) == 0)
  {
    uint64_t v48 = *(void **)(v26 + 72);
    NSString v49 = [v47 uniqueID];
    if (!v49)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v48 setRequestID:v49];

    id v50 = [v47 sessionID];
    [v48 setConversationID:v50];

    id v51 = [v47 localePair];
    [v48 setLocalePair:v51];

    sub_100029624(v24, v24[3]);
    unint64_t v52 = v60;
    dispatch thunk of TranslationResult.locale.getter();
    Class v53 = Locale._bridgeToObjectiveC()().super.isa;
    v55(v52, v21);
    [v48 setTargetLocale:v53];

    [v48 setSelectedLocale:0];
    [*(id *)(v26 + 40) log:v48];
  }
}

id *sub_1001BDBA4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1001BDBF4()
{
  sub_1001BDBA4();

  return swift_deallocClassInstance();
}

uint64_t _s14descr1002C75F1V21SpeechResultContainerCMa()
{
  return self;
}

void *sub_1001BDC4C()
{
  return sub_1001C4794();
}

uint64_t sub_1001BDC70()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1001BDCA8()
{
  return sub_1001C4794();
}

uint64_t sub_1001BDCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001BDCDC()
{
  return swift_release();
}

uint64_t sub_1001BDCE4(void *a1)
{
  return sub_1001BD1AC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001BDD04(void *a1)
{
  return sub_1001BCBD8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001BDD24(void *a1)
{
  return sub_1001BC7E8(a1) & 1;
}

uint64_t sub_1001BDD44(void *a1)
{
  return sub_1001BC110(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1001BDD64(void *a1, int a2)
{
  int v18 = a2;
  uint64_t v3 = sub_100007620(&qword_1002FAAC0);
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002FAAC8);
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002FAAD0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_1001C2600();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
  if (v18)
  {
    char v20 = 1;
    sub_1001C2654();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    char v19 = 0;
    sub_1001C26A8();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v15);
  }
  return (*v13)(v12, v9);
}

uint64_t sub_1001BE014(void *a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = sub_100007620(&qword_1002FAA08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029624(a1, a1[3]);
  sub_1001C183C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[15] = v3;
  sub_1001C18E4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1001BE158()
{
  return 0;
}

uint64_t sub_1001BE164(uint64_t a1)
{
  unint64_t v2 = sub_1001C1070();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BE1A0(uint64_t a1)
{
  unint64_t v2 = sub_1001C1070();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE1DC(uint64_t a1)
{
  return sub_10000AB68(a1);
}

uint64_t sub_1001BE204(void *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002FA9E0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_1001C1070();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

Swift::Int sub_1001BE314()
{
  return Hasher._finalize()();
}

Swift::Int sub_1001BE34C()
{
  return Hasher._finalize()();
}

uint64_t sub_1001BE380@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1001BE3B0(uint64_t a1)
{
  unint64_t v2 = sub_1001C26A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BE3EC(uint64_t a1)
{
  unint64_t v2 = sub_1001C26A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE428()
{
  if (*v0) {
    return 0x436C6F72746E6F63;
  }
  else {
    return 0x75426E6F69746361;
  }
}

uint64_t sub_1001BE478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001C1150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001BE4A0(uint64_t a1)
{
  unint64_t v2 = sub_1001C2600();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BE4DC(uint64_t a1)
{
  unint64_t v2 = sub_1001C2600();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE518(uint64_t a1)
{
  unint64_t v2 = sub_1001C2654();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BE554(uint64_t a1)
{
  unint64_t v2 = sub_1001C2654();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001BE590@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C1280(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001BE5C0(void *a1)
{
  return sub_1001BDD64(a1, *v1);
}

uint64_t sub_1001BE5DC()
{
  return 0x724F656372756F73;
}

uint64_t sub_1001BE5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x724F656372756F73 && a2 == 0xEC0000006E696769)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1001BE6AC(uint64_t a1)
{
  unint64_t v2 = sub_1001C183C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001BE6E8(uint64_t a1)
{
  unint64_t v2 = sub_1001C183C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1001BE724@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1001C16D0(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_1001BE754(void *a1)
{
  return sub_1001BE014(a1, *v1);
}

id sub_1001BE770()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SpeechTranslationActivityManager()) init];
  qword_10030EB98 = (uint64_t)result;
  return result;
}

void sub_1001BE7F8(char a1)
{
  uint64_t v2 = v1;
  char v3 = a1 & 1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v47 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActivityPresentationOptions();
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007620(&qword_1002FAA40);
  uint64_t v13 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BF15C(0);
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  int v46 = v6;
  uint64_t v51 = sub_100011554(v4, (uint64_t)qword_10030EA20);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Requesting begin activity", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
  sub_1001C0F14();
  sub_1001C0F6C();
  sub_1001C0FC4();
  ActivityContent.init(state:staleDate:relevanceScore:)();
  sub_100007620(&qword_1002FAA48);
  uint64_t v20 = type metadata accessor for ActivityPresentationOptions.ActivityPresentationDestination();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1002488D0;
  (*(void (**)(unint64_t, void, uint64_t))(v21 + 104))(v23 + v22, enum case for ActivityPresentationOptions.ActivityPresentationDestination.systemAperture(_:), v20);
  ActivityPresentationOptions.init(destinations:)();
  ActivityPresentationOptions.isActionButtonInitiated.setter();
  ActivityPresentationOptions.shouldSuppressAlertContentOnLockScreen.setter();
  sub_100007620(&qword_1002FAA50);
  LOBYTE(v53[0]) = v3;
  uint64_t v24 = static Activity.request(attributes:content:presentationOptions:platterTarget:contentSourceRequests:isEphemeral:isUnbounded:isMomentary:)();
  uint64_t v44 = v13;
  uint64_t v25 = OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity] = v24;
  swift_release();
  id v27 = v46;
  uint64_t v26 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v51, v4);
  id v28 = v2;
  uint64_t v29 = v4;
  uint64_t v30 = Logger.logObject.getter();
  int v42 = static os_log_type_t.info.getter();
  BOOL v31 = os_log_type_enabled(v30, (os_log_type_t)v42);
  os_log_type_t v45 = v2;
  uint64_t v43 = v25;
  if (v31)
  {
    os_log_t v40 = v30;
    uint64_t v41 = v29;
    id v32 = (uint8_t *)swift_slowAlloc();
    v53[0] = swift_slowAlloc();
    *(_DWORD *)id v32 = 136446210;
    if (!*(void *)&v2[v25]) {
      goto LABEL_12;
    }
    swift_retain();
    uint64_t v33 = Activity.id.getter();
    unint64_t v35 = v34;
    swift_release();
    uint64_t v52 = sub_100202FD4(v33, v35, v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    os_log_t v36 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v42, "Requested an activity successfully [id: %{public}s]", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v41);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v50);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v48);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v29);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v50);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v48);
  }
  if (*(void *)&v45[v43])
  {
    swift_retain();
    uint64_t v37 = Activity.id.getter();
    unint64_t v39 = v38;
    swift_release();
    sub_1001BF8AC(v37, v39);
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_12:

  __break(1u);
}

void sub_1001BF15C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActivityUIDismissalPolicy();
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v47[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007620(&qword_1002FAA30);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for ActivityState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = &v47[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v16 = &v47[-v15];
  if (a1)
  {
    uint64_t v51 = v4;
  }
  else
  {
    if (!*(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity)) {
      return;
    }
    uint64_t v51 = v4;
    swift_retain();
  }
  swift_retain();
  dispatch thunk of Activity.activityState.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v11 + 104))(v14, enum case for ActivityState.dismissed(_:), v10);
  sub_1001C1F44();
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
  int v18 = *(void (**)(unsigned char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v18(v16, v10);
  if ((v17 & 1) == 0)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100011554(v27, (uint64_t)qword_10030EA20);
    swift_retain_n();
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v50 = v2;
      uint64_t v32 = v31;
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v32 = 136315394;
      int v48 = v30;
      uint64_t v33 = Activity.id.getter();
      uint64_t v53 = sub_100202FD4(v33, v34, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      dispatch thunk of Activity.activityState.getter();
      uint64_t v35 = String.init<A>(describing:)();
      uint64_t v53 = sub_100202FD4(v35, v36, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v48, "Requesting end activity [id: %s activityState: %s]", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v50;
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v37 = Activity.id.getter();
    sub_1001C07DC(v37, v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_100007620(&qword_1002FAA40);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v9, 1, 1, v39);
    static ActivityUIDismissalPolicy.immediate.getter();
    dispatch thunk of Activity.endSync(_:dismissalPolicy:)();
    (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v6, v51);
    sub_1001C1F9C((uint64_t)v9);
    uint64_t v40 = OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity;
    if (*(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity))
    {
      swift_retain();
      uint64_t v41 = Activity.id.getter();
      uint64_t v43 = v42;
      swift_release();
      uint64_t v44 = Activity.id.getter();
      if (v43)
      {
        if (v41 == v44 && v43 == v45)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v46 & 1) == 0)
          {
LABEL_25:
            swift_release();
            return;
          }
        }
        *(void *)(v2 + v40) = 0;
        swift_release();
        goto LABEL_25;
      }
    }
    else
    {
      Activity.id.getter();
    }
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100011554(v19, (uint64_t)qword_10030EA20);
  swift_retain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v23 = Activity.id.getter();
    uint64_t v53 = sub_100202FD4(v23, v24, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    dispatch thunk of Activity.activityState.getter();
    uint64_t v25 = String.init<A>(describing:)();
    uint64_t v53 = sub_100202FD4(v25, v26, &v54);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Skipping end activity [id: %s activityState: %s] ", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1001BF8AC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ActivityState();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  uint64_t v93 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v91 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v10;
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_assertion;
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_assertion);
  if (!v12) {
    goto LABEL_19;
  }
  id v13 = v12;
  uint64_t v14 = &selRef_initWithTagSchemes_options_;
  id v15 = [v13 sessionIdentifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v16 == a1 && v18 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_12:

    if (!*(void *)(v3 + v11)) {
      goto LABEL_19;
    }
LABEL_13:
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100011554(v36, (uint64_t)qword_10030EA20);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Not taking assertion as it is non-nil", v39, 2u);
      swift_slowDealloc();
    }
LABEL_29:

    return;
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_12;
  }
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_100011554(v21, (uint64_t)qword_10030EA20);
  id v22 = v13;
  swift_bridgeObjectRetain_n();
  id v23 = v22;
  unint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.info.getter();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    LODWORD(v88) = v26;
    uint64_t v28 = v27;
    uint64_t v89 = swift_slowAlloc();
    aBlock[0] = v89;
    *(_DWORD *)uint64_t v28 = 136446466;
    id v29 = [v23 sessionIdentifier:v28 + 4];
    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_t v87 = v24;
    uint64_t v31 = v30;
    id v32 = v23;
    unint64_t v34 = v33;

    uint64_t v95 = sub_100202FD4(v31, v34, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v23 = v32;
    uint64_t v14 = &selRef_initWithTagSchemes_options_;
    swift_bridgeObjectRelease();

    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_100202FD4(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_t v35 = v87;
    _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v88, "Releasing assertion for other activity [id: %{public}s] in favour of new assertion for activity [id: %{public}s]", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v40 = [v23 v14[353]];
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v43 = v42;

  sub_1001C07DC(v41, v43);
  swift_bridgeObjectRelease();

  if (*(void *)(v3 + v11)) {
    goto LABEL_13;
  }
LABEL_19:
  uint64_t v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v45 = (void *)swift_allocObject();
  v45[2] = v44;
  v45[3] = a1;
  v45[4] = a2;
  id v46 = objc_allocWithZone((Class)SNAProminentPresentationAssertion);
  swift_bridgeObjectRetain();
  NSString v47 = String._bridgeToObjectiveC()();
  NSString v48 = String._bridgeToObjectiveC()();
  aBlock[4] = (uint64_t)sub_1001C19B0;
  aBlock[5] = (uint64_t)v45;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1001C10C4;
  void aBlock[3] = (uint64_t)&unk_1002D2148;
  uint64_t v49 = _Block_copy(aBlock);
  swift_release();
  id v50 = [v46 initWithExplanation:v47 sessionIdentifier:v48 invalidationHandler:v49];
  _Block_release(v49);

  if ([v50 state] == (id)1)
  {
    uint64_t v51 = *(void **)(v3 + v11);
    *(void *)(v3 + v11) = v50;
    id v52 = v50;

    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_100011554(v53, (uint64_t)qword_10030EA20);
    swift_bridgeObjectRetain_n();
    id v54 = v52;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v37, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v95 = sub_100202FD4(a1, a2, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v56 + 12) = 2050;
      id v57 = [v54 state];

      uint64_t v95 = (uint64_t)v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v37, v55, "Assertion acquired [id: %{public}s, assertion state %{public}lu]", (uint8_t *)v56, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_29;
  }
  unint64_t v58 = *(NSObject **)(v3 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity);
  if (!v58) {
    goto LABEL_39;
  }
  uint64_t v88 = OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity;
  uint64_t v89 = v3;
  swift_retain();
  uint64_t v59 = Activity.id.getter();
  uint64_t v86 = a1;
  if (v59 == a1 && v60 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_31:
    id v62 = v90;
    dispatch thunk of Activity.activityState.getter();
    os_log_t v87 = v58;
    uint64_t v63 = v92;
    uint64_t v64 = v93;
    id v65 = v91;
    uint64_t v85 = *(void (**)(char *, void, uint64_t))(v93 + 104);
    v85(v91, enum case for ActivityState.dismissed(_:), v92);
    char v66 = static ActivityState.== infix(_:_:)();
    id v67 = *(void (**)(char *, uint64_t))(v64 + 8);
    v67(v65, v63);
    uint64_t v93 = v64 + 8;
    v67(v62, v63);
    if (v66) {
      goto LABEL_33;
    }
    long long v68 = v90;
    dispatch thunk of Activity.activityState.getter();
    long long v69 = v91;
    uint64_t v70 = v92;
    v85(v91, enum case for ActivityState.ended(_:), v92);
    char v71 = static ActivityState.== infix(_:_:)();
    v67(v69, v70);
    v67(v68, v70);
    if (v71)
    {
LABEL_33:
      if (qword_1002EE608 != -1) {
        swift_once();
      }
      uint64_t v72 = type metadata accessor for Logger();
      sub_100011554(v72, (uint64_t)qword_10030EA20);
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.default.getter();
      BOOL v75 = os_log_type_enabled(v73, v74);
      uint64_t v76 = v89;
      if (v75)
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "Assertion acquisition failed due to activity having already ended", v77, 2u);
        swift_slowDealloc();
      }

      *(void *)(v76 + v88) = 0;
      swift_release();

      swift_release();
      return;
    }
    goto LABEL_38;
  }
  char v61 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v61) {
    goto LABEL_31;
  }
LABEL_38:
  swift_release();
  a1 = v86;
LABEL_39:
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v78 = type metadata accessor for Logger();
  sub_100011554(v78, (uint64_t)qword_10030EA20);
  swift_bridgeObjectRetain_n();
  id v79 = v50;
  uint64_t v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_100202FD4(a1, a2, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v82 + 12) = 2050;
    id v83 = [v79 state];

    uint64_t v95 = (uint64_t)v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Acquire assertion FAIL [id:%{public}s, assertion state %{public}lu]", (uint8_t *)v82, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  sub_1001C19D4();
  swift_allocError();
  *uint64_t v84 = 0;
  v84[1] = 0;
  v84[2] = 1;
  swift_willThrow();
}

uint64_t sub_1001C0494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  id v15 = a1;
  swift_errorRetain();
  uint64_t v16 = static MainActor.shared.getter();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v13;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = v15;
  unsigned char v17[8] = a2;
  swift_release();
  sub_100056780((uint64_t)v11, (uint64_t)&unk_1002FAA28, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1001C0650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[5] = a4;
  type metadata accessor for MainActor();
  v8[10] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001C06F0, v10, v9);
}

uint64_t sub_1001C06F0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_1001C1B5C(*(void *)(v0 + 48), *(void *)(v0 + 56), (uint64_t)[*(id *)(v0 + 64) state], (uint64_t)[*(id *)(v0 + 64) invalidationReason], 0, *(void *)(v0 + 72));
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1001C07DC(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_assertion;
  uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_assertion);
  if (v6)
  {
    id v7 = v6;
    [v7 invalidate];
    uint64_t v8 = *(void **)(v2 + v5);
    *(void *)(v2 + v5) = 0;

    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030EA20);
    swift_bridgeObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      swift_bridgeObjectRetain();
      sub_100202FD4(a1, a2, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Assertion Released [id: %{public}s]", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100011554(v13, (uint64_t)qword_10030EA20);
    swift_bridgeObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446210;
      swift_bridgeObjectRetain();
      sub_100202FD4(a1, a2, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Not releasing assertion for session [id: %{public}s] since assertion is nil", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  swift_bridgeObjectRelease_n();
}

unint64_t sub_1001C0B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 == 1) {
    return 0xD00000000000001BLL;
  }
  id v7 = (void *)0x8000000100262960;
  uint64_t v8 = 0xD000000000000020;
  switch(a2)
  {
    case 0:
      if (a1) {
        uint64_t v8 = 0xD000000000000037;
      }
      else {
        uint64_t v8 = 0xD00000000000001ELL;
      }
      if (a1) {
        id v7 = (void *)0x80000001002627F0;
      }
      else {
        id v7 = (void *)0x8000000100262830;
      }
      goto LABEL_19;
    case 1:
      goto LABEL_19;
    case 2:
      uint64_t v8 = 0xD00000000000001CLL;
      uint64_t v9 = "a session request was denied";
      goto LABEL_18;
    case 3:
      uint64_t v8 = 0xD000000000000023;
      uint64_t v9 = "the owner requested an invalidation";
      goto LABEL_18;
    case 4:
      uint64_t v9 = "the server disconnected from XPC";
      goto LABEL_18;
    case 5:
      uint64_t v8 = 0xD000000000000018;
      uint64_t v9 = "the app was foregrounded";
      goto LABEL_18;
    case 6:
      uint64_t v8 = 0xD000000000000017;
      uint64_t v9 = "the assertion timed out";
      goto LABEL_18;
    case 7:
      uint64_t v9 = "the assertion request was denied";
      goto LABEL_18;
    case 8:
      uint64_t v8 = 0xD00000000000001ALL;
      uint64_t v9 = "the relevant session ended";
      goto LABEL_18;
    default:
      uint64_t v8 = 0xD000000000000014;
      uint64_t v9 = "something went wrong";
LABEL_18:
      id v7 = (void *)((unint64_t)(v9 - 32) | 0x8000000000000000);
LABEL_19:
      uint64_t v10 = (void *)0xE000000000000000;
      swift_errorRetain();
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      v11._countAndFlagsBits = v8;
      v11._object = v7;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 0x3A726F727245202ELL;
      v12._object = (void *)0xE900000000000020;
      String.append(_:)(v12);
      if (a3)
      {
        swift_getErrorValue();
        swift_errorRetain();
        uint64_t v13 = Error.localizedDescription.getter();
        uint64_t v10 = v14;
        sub_1001C26FC(a1, a2, a3);
      }
      else
      {
        uint64_t v13 = 0;
      }
      v15._countAndFlagsBits = v13;
      v15._object = v10;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      sub_1001C26FC(a1, a2, a3);
      unint64_t result = 0xD000000000000022;
      break;
  }
  return result;
}

unint64_t sub_1001C0D9C()
{
  return sub_1001C0B20(*v0, v0[1], v0[2]);
}

id sub_1001C0DA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpeechTranslationActivityManager();
  return [super dealloc];
}

uint64_t type metadata accessor for SpeechTranslationActivityManager()
{
  return self;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes()
{
  return &type metadata for SpeechTranslationActivityAttributes;
}

unint64_t sub_1001C0E64()
{
  unint64_t result = qword_1002FA9B0;
  if (!qword_1002FA9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9B0);
  }
  return result;
}

unint64_t sub_1001C0EBC()
{
  unint64_t result = qword_1002FA9B8;
  if (!qword_1002FA9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9B8);
  }
  return result;
}

unint64_t sub_1001C0F14()
{
  unint64_t result = qword_1002FA9C0;
  if (!qword_1002FA9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9C0);
  }
  return result;
}

unint64_t sub_1001C0F6C()
{
  unint64_t result = qword_1002FA9C8;
  if (!qword_1002FA9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9C8);
  }
  return result;
}

unint64_t sub_1001C0FC4()
{
  unint64_t result = qword_1002FA9D0;
  if (!qword_1002FA9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9D0);
  }
  return result;
}

unint64_t sub_1001C101C()
{
  unint64_t result = qword_1002FA9D8;
  if (!qword_1002FA9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9D8);
  }
  return result;
}

unint64_t sub_1001C1070()
{
  unint64_t result = qword_1002FA9E8;
  if (!qword_1002FA9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9E8);
  }
  return result;
}

void sub_1001C10C4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_1001C1150(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x75426E6F69746361 && a2 == 0xEC0000006E6F7474;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x436C6F72746E6F63 && a2 == 0xED00007265746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001C1280(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002FAA88);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  uint64_t v23 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002FAA90);
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002FAA98);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624((void *)a1, *(void *)(a1 + 24));
  sub_1001C2600();
  uint64_t v12 = v26;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v13 = v25;
  uint64_t v21 = v6;
  uint64_t v26 = a1;
  uint64_t v14 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v18 = v17;
    sub_100007620(&qword_1002FAAA8);
    void *v18 = &type metadata for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, enum case for DecodingError.typeMismatch(_:), v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
    a1 = v26;
LABEL_7:
    sub_10000AB68(a1);
    return a1;
  }
  a1 = *(unsigned __int8 *)(v14 + 32);
  if (a1)
  {
    LODWORD(v25) = *(unsigned __int8 *)(v14 + 32);
    char v28 = 1;
    sub_1001C2654();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v15 = v24;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v9);
    a1 = v25;
  }
  else
  {
    char v27 = 0;
    sub_1001C26A8();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v19 = v24;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
  }
  sub_10000AB68(v26);
  return a1;
}

void *sub_1001C16D0(void *a1)
{
  uint64_t v3 = sub_100007620(&qword_1002FA9F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100029624(a1, a1[3]);
  sub_1001C183C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10000AB68((uint64_t)a1);
  }
  else
  {
    sub_1001C1890();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[15];
    sub_10000AB68((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1001C183C()
{
  unint64_t result = qword_1002FA9F8;
  if (!qword_1002FA9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FA9F8);
  }
  return result;
}

unint64_t sub_1001C1890()
{
  unint64_t result = qword_1002FAA00;
  if (!qword_1002FAA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA00);
  }
  return result;
}

unint64_t sub_1001C18E4()
{
  unint64_t result = qword_1002FAA10;
  if (!qword_1002FAA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA10);
  }
  return result;
}

uint64_t sub_1001C1938()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001C1970()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001C19B0(void *a1, uint64_t a2)
{
  return sub_1001C0494(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1001C19BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001C19CC()
{
  return swift_release();
}

unint64_t sub_1001C19D4()
{
  unint64_t result = qword_1002FAA18;
  if (!qword_1002FAA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002FAA18);
  }
  return result;
}

uint64_t sub_1001C1A28()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_errorRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001C1A80(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  Swift::String v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100021B58;
  return sub_1001C0650(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1001C1B5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100011554(v12, (uint64_t)qword_10030EA20);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v13, v14))
  {
    swift_bridgeObjectRelease_n();

    if (a3) {
      goto LABEL_5;
    }
LABEL_11:
    if (a5) {
      a4 = 7;
    }
    sub_1001C19D4();
    swift_allocError();
    *uint64_t v16 = 0;
    goto LABEL_14;
  }
  char v22 = a5;
  uint64_t v15 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  *(_DWORD *)uint64_t v15 = 136446210;
  swift_bridgeObjectRetain();
  sub_100202FD4(a1, a2, &v23);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  _os_log_impl((void *)&_mh_execute_header, v13, v14, "Assertion invalidated [id: %{public}s]", v15, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  a5 = v22;
  swift_slowDealloc();

  if (!a3) {
    goto LABEL_11;
  }
LABEL_5:
  if (a3 == 1) {
    return;
  }
  if (a3 != 2)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  if (a5) {
    a4 = 0;
  }
  sub_1001C19D4();
  swift_allocError();
  *uint64_t v16 = 2;
LABEL_14:
  v16[1] = a4;
  v16[2] = a6;
  swift_errorRetain();
  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    char v20 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 138412290;
    swift_errorRetain();
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v23 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v20 = v21;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Assertion invalidation reason: %@", v19, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

unint64_t sub_1001C1F44()
{
  unint64_t result = qword_1002FAA38;
  if (!qword_1002FAA38)
  {
    type metadata accessor for ActivityState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA38);
  }
  return result;
}

uint64_t sub_1001C1F9C(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002FAA30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t destroy for SpeechTranslationActivityManager.AssertionError(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 16);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t _s17SequoiaTranslator32SpeechTranslationActivityManagerC14AssertionErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if ((int)v4 - 1 < 0)
  {
    swift_errorRetain();
    *(void *)(a1 + 16) = v3;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  return a1;
}

void *assignWithCopy for SpeechTranslationActivityManager.AssertionError(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[2] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[2];
  }
  int v6 = v5 - 1;
  if (a2[2] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[2];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v11 = a2[2];
      swift_errorRetain();
      a1[2] = v11;
      swift_errorRelease();
      return a1;
    }
    swift_errorRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v9 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v9;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v8 = a2[2];
  swift_errorRetain();
  a1[2] = v8;
  return a1;
}

uint64_t assignWithTake for SpeechTranslationActivityManager.AssertionError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 16);
    }
    if ((int)v7 - 1 < 0)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = v6;
      swift_errorRelease();
      return a1;
    }
    swift_errorRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeechTranslationActivityManager.AssertionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SpeechTranslationActivityManager.AssertionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1001C2288(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1001C22AC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    result[1] = 0;
    result[2] = 0;
    *unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[2] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityManager.AssertionError()
{
  return &type metadata for SpeechTranslationActivityManager.AssertionError;
}

unsigned char *storeEnumTagSinglePayload for SpeechTranslationActivityAttributes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001C2388);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.CodingKeys()
{
  return &type metadata for SpeechTranslationActivityAttributes.CodingKeys;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.ContentState.CodingKeys()
{
  return &type metadata for SpeechTranslationActivityAttributes.ContentState.CodingKeys;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.ContentState()
{
  return &type metadata for SpeechTranslationActivityAttributes.ContentState;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin()
{
  return &type metadata for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin;
}

unint64_t sub_1001C23F4()
{
  unint64_t result = qword_1002FAA58;
  if (!qword_1002FAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA58);
  }
  return result;
}

unint64_t sub_1001C244C()
{
  unint64_t result = qword_1002FAA60;
  if (!qword_1002FAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA60);
  }
  return result;
}

unint64_t sub_1001C24A4()
{
  unint64_t result = qword_1002FAA68;
  if (!qword_1002FAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA68);
  }
  return result;
}

unint64_t sub_1001C24FC()
{
  unint64_t result = qword_1002FAA70;
  if (!qword_1002FAA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA70);
  }
  return result;
}

unint64_t sub_1001C2554()
{
  unint64_t result = qword_1002FAA78;
  if (!qword_1002FAA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA78);
  }
  return result;
}

unint64_t sub_1001C25AC()
{
  unint64_t result = qword_1002FAA80;
  if (!qword_1002FAA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAA80);
  }
  return result;
}

unint64_t sub_1001C2600()
{
  unint64_t result = qword_1002FAAA0;
  if (!qword_1002FAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAA0);
  }
  return result;
}

unint64_t sub_1001C2654()
{
  unint64_t result = qword_1002FAAB0;
  if (!qword_1002FAAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAB0);
  }
  return result;
}

unint64_t sub_1001C26A8()
{
  unint64_t result = qword_1002FAAB8;
  if (!qword_1002FAAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAB8);
  }
  return result;
}

uint64_t sub_1001C26FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_errorRelease();
  }
  return result;
}

unsigned char *_s17SequoiaTranslator35SpeechTranslationActivityAttributesV24LiveActivitySourceOriginOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001C27DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.CodingKeys()
{
  return &type metadata for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.CodingKeys;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.ActionButtonCodingKeys()
{
  return &type metadata for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.ActionButtonCodingKeys;
}

ValueMetadata *type metadata accessor for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.ControlCenterCodingKeys()
{
  return &type metadata for SpeechTranslationActivityAttributes.LiveActivitySourceOrigin.ControlCenterCodingKeys;
}

unint64_t sub_1001C2838()
{
  unint64_t result = qword_1002FAAD8;
  if (!qword_1002FAAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAD8);
  }
  return result;
}

unint64_t sub_1001C2890()
{
  unint64_t result = qword_1002FAAE0;
  if (!qword_1002FAAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAE0);
  }
  return result;
}

unint64_t sub_1001C28E8()
{
  unint64_t result = qword_1002FAAE8;
  if (!qword_1002FAAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAE8);
  }
  return result;
}

unint64_t sub_1001C2940()
{
  unint64_t result = qword_1002FAAF0;
  if (!qword_1002FAAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAF0);
  }
  return result;
}

unint64_t sub_1001C2998()
{
  unint64_t result = qword_1002FAAF8;
  if (!qword_1002FAAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAAF8);
  }
  return result;
}

unint64_t sub_1001C29F0()
{
  unint64_t result = qword_1002FAB00;
  if (!qword_1002FAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAB00);
  }
  return result;
}

unint64_t sub_1001C2A48()
{
  unint64_t result = qword_1002FAB08;
  if (!qword_1002FAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FAB08);
  }
  return result;
}

uint64_t sub_1001C2B04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LiveActivityView();
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (void *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v2
                 + OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_activeLayoutMode);
  *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_activeLayoutMode) = a1;
  if (a1 != 4 && v8 == 4)
  {
    dispatch thunk of UIHostingController.rootView.getter();
    uint64_t v9 = v7[1];
    v12[1] = *v7;
    _OWORD v12[2] = v9;
    sub_100007620((uint64_t *)&unk_1002FBDF0);
    State.wrappedValue.getter();
    sub_1001C3D00((uint64_t)v7);
    uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_currentActivity;
    uint64_t v11 = swift_retain();
    sub_1001476D4(v11);
    swift_release();
    swift_release();
    *(void *)(v2 + v10) = 0;
    return swift_release();
  }
  return result;
}

char *sub_1001C2D98(uint64_t a1, uint64_t a2, void *a3)
{
  v31[1] = a1;
  id v32 = a3;
  uint64_t v5 = type metadata accessor for LiveActivityView();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (void *)((char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v31 - v10;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_currentActivity] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_activeLayoutMode] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_contentRole] = 2;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_preferredLayoutMode] = 4;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_presentationBehaviors] = 8;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_maximumLayoutMode] = 4;
  uint64_t v12 = &v3[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_associatedScenePersistenceIdentifier];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_leadingView;
  type metadata accessor for EmptyActivityPlaceholderView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v15 = objc_allocWithZone(ObjCClassFromMetadata);
  uint64_t v16 = v3;
  *(void *)&v3[v13] = [v15 init];
  uint64_t v17 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_trailingView;
  *(void *)&v16[v17] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v18 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_minimalView;
  *(void *)&v16[v18] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v19 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_hostingController;
  type metadata accessor for LiveActivityViewModel();
  swift_allocObject();
  unint64_t v34 = sub_1001457B0();
  State.init(wrappedValue:)();
  uint64_t v20 = v36;
  void *v9 = v35;
  v9[1] = v20;
  uint64_t v21 = (void *)((char *)v9 + *(int *)(v6 + 28));
  uint64_t *v21 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  sub_1001C41D8((uint64_t)v9, (uint64_t)v11);
  id v22 = objc_allocWithZone((Class)sub_100007620(&qword_1002FACB8));
  *(void *)&v16[v19] = SecureHostingController.init(rootView:)();

  if (a2)
  {
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v23 = 0;
  }
  uint64_t v24 = (objc_class *)type metadata accessor for SpeechTranslationApertureElementViewController();
  v33.receiver = v16;
  v33.super_class = v24;
  uint64_t v25 = v32;
  [super initWithNibName:v23 bundle:v32];

  uint64_t v27 = qword_1002EE6A8;
  char v28 = (char *)v26;
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_10030EB98;

  *(void *)&v28[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_currentActivity] = *(void *)(v29 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity);
  swift_retain();
  swift_release();
  return v28;
}

id sub_1001C3118()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2);
  v33.receiver = v0;
  v33.super_class = (Class)type metadata accessor for SpeechTranslationApertureElementViewController();
  [super viewDidLoad];
  int v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_hostingController];
  sub_100007620(&qword_1002FAC90);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100247140;
  static UIHostingControllerSizingOptions.preferredContentSize.getter();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  sub_1001C40EC(&qword_1002FAC98, (void (*)(uint64_t))&type metadata accessor for UIHostingControllerSizingOptions);
  sub_100007620(&qword_1002FACA0);
  sub_1001C4134();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  [v0 addChildViewController:v3];
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v5 = result;
  id result = [v3 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  [v5 addSubview:result];

  id result = [v3 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  [v3 didMoveToParentViewController:v1];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100249A60;
  id result = [v3 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v9 = result;
  id v10 = [result leadingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v11 = result;
  id v12 = [result leadingAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12];
  *(void *)(v8 + 32) = v13;
  id result = [v3 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  os_log_type_t v14 = result;
  id v15 = [result trailingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v16 = result;
  id v17 = [result trailingAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17];
  *(void *)(v8 + 40) = v18;
  id result = [v3 view];
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v19 = result;
  id v20 = [result topAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v21 = result;
  id v22 = [result topAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
  *(void *)(v8 + 48) = v23;
  id result = [v3 view];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v24 = result;
  id v25 = [result bottomAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v26 = result;
  uint64_t v27 = self;
  id v28 = [v26 bottomAnchor];

  id v29 = [v25 constraintEqualToAnchor:v28];
  *(void *)(v8 + 56) = v29;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  id result = [v1 view];
  if (result)
  {
    uint64_t v31 = result;
    sub_100007620(&qword_1002F4100);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1002488D0;
    *(void *)(v32 + 32) = type metadata accessor for UITraitBacklightLuminance();
    *(void *)(v32 + 40) = &protocol witness table for UITraitBacklightLuminance;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100007620(&qword_1002F4108);
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    return (id)swift_release();
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1001C3744()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_4;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong view];

  if (!v2)
  {
    __break(1u);
    return;
  }
  id v3 = [v2 traitCollection];

  id v4 = [v3 _backlightLuminance];
  if (v4 != (id)2)
  {
LABEL_4:
    if (qword_1002EE6A8 != -1) {
      swift_once();
    }
    sub_1001BF15C(0);
  }
}

id sub_1001C3AF4()
{
  return sub_1001C3CA4(type metadata accessor for SpeechTranslationApertureElementViewController);
}

uint64_t type metadata accessor for SpeechTranslationApertureElementViewController()
{
  return self;
}

id sub_1001C3C8C()
{
  return sub_1001C3CA4(type metadata accessor for EmptyActivityPlaceholderView);
}

id sub_1001C3CA4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for EmptyActivityPlaceholderView()
{
  return self;
}

uint64_t sub_1001C3D00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LiveActivityView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001C3D5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LiveActivityView();
  uint64_t v3 = v2 - 8;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (void *)((char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v18 - v7;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_currentActivity] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_activeLayoutMode] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_contentRole] = 2;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_preferredLayoutMode] = 4;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_presentationBehaviors] = 8;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_maximumLayoutMode] = 4;
  uint64_t v9 = &v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_associatedScenePersistenceIdentifier];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_leadingView;
  type metadata accessor for EmptyActivityPlaceholderView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  *(void *)&v1[v10] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_trailingView;
  *(void *)&v1[v12] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v13 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_minimalView;
  *(void *)&v1[v13] = [objc_allocWithZone(ObjCClassFromMetadata) init];
  uint64_t v14 = OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_hostingController;
  type metadata accessor for LiveActivityViewModel();
  swift_allocObject();
  v18[1] = sub_1001457B0();
  State.init(wrappedValue:)();
  uint64_t v15 = v18[3];
  *uint64_t v6 = v18[2];
  v6[1] = v15;
  uint64_t v16 = (void *)((char *)v6 + *(int *)(v3 + 28));
  *uint64_t v16 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  sub_1001C41D8((uint64_t)v6, (uint64_t)v8);
  id v17 = objc_allocWithZone((Class)sub_100007620(&qword_1002FACB8));
  *(void *)&v1[v14] = SecureHostingController.init(rootView:)();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001C3FA8()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  id v13 = [v1 window];

  if (!v13) {
    return;
  }
  id v3 = [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator46SpeechTranslationApertureElementViewController_hostingController] view];
  if (!v3)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v4 = v3;
  [v13 bounds];
  double v6 = v5;
  double v8 = v7;
  LODWORD(v5) = 1148846080;
  LODWORD(v7) = 1112014848;
  [v4 systemLayoutSizeFittingSize:v6 withHorizontalFittingPriority:v8 verticalFittingPriority:v5];
  double v10 = v9;
  double v12 = v11;

  [v0 setPreferredContentSize:v10, v12];
}

uint64_t sub_1001C40D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001C40E4()
{
  return swift_release();
}

uint64_t sub_1001C40EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C4134()
{
  unint64_t result = qword_1002FACA8;
  if (!qword_1002FACA8)
  {
    sub_100007928(&qword_1002FACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FACA8);
  }
  return result;
}

uint64_t sub_1001C4190()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001C41C8()
{
}

uint64_t sub_1001C41D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001C423C()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair] = 0;
  id v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_sourceLocale];
  uint64_t v2 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  id v3 = v0;
  Date.init()();
  uint64_t v4 = &v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstResult];
  uint64_t v5 = type metadata accessor for Date();
  double v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTranslation], 1, 1, v5);
  v6(&v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTTS], 1, 1, v5);
  v6(&v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstLID], 1, 1, v5);
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputTokenCount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputSubtokenCount] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_airplaneModeEnabled] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_onDeviceModeEnabled] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_offline] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_censorSpeech] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_senseDisambiguation] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lidTriggered] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lowQualityMT] = 0;
  v3[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_nBestDisplay] = 0;

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for SpeechTranslationInstrumentation();
  return [super init];
}

id sub_1001C445C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SpeechTranslationInstrumentation();
  [super dealloc];
}

uint64_t sub_1001C4578()
{
  return type metadata accessor for SpeechTranslationInstrumentation();
}

uint64_t type metadata accessor for SpeechTranslationInstrumentation()
{
  uint64_t result = qword_1002FACF0;
  if (!qword_1002FACF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001C45CC()
{
  sub_1001C4740(319, (unint64_t *)&qword_1002F6D40, (void (*)(uint64_t))&type metadata accessor for Locale);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_1001C4740(319, (unint64_t *)&qword_1002F2B90, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1001C4740(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1001C4794()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F8BA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v93 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v92 = (char *)&v86 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v91 = (char *)&v86 - v8;
  __chkstk_darwin(v7);
  uint64_t v90 = (char *)&v86 - v9;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v94 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v88 = (char *)&v86 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_t v87 = (char *)&v86 - v16;
  __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v86 - v17;
  uint64_t v18 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Locale();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair);
  id v26 = &_swiftEmptyDictionarySingleton;
  if (v25)
  {
    id v27 = v25;
    sub_100006274();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v100 = &_swiftEmptyDictionarySingleton;
    sub_100205C04((uint64_t)v28, 0x6150656C61636F6CLL, 0xEA00000000007269, isUniquelyReferenced_nonNull_native);
    id v26 = v100;

    swift_bridgeObjectRelease();
  }
  uint64_t v30 = v0 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_sourceLocale;
  swift_beginAccess();
  sub_10000C3A4(v30, (uint64_t)v20, (uint64_t *)&unk_1002F4110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10000B070((uint64_t)v20, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    Locale.ltIdentifier.getter();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v99 = v26;
    sub_100205C04((uint64_t)v31, 0x6F4C656372756F73, 0xEC000000656C6163, v32);
    id v26 = v99;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v33 = v94;
  uint64_t v34 = (uint64_t)v90;
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v26;
  sub_100205C04((uint64_t)isa, 0x6563697665446E6FLL, 0xEC00000065646F4DLL, v36);
  uint64_t v37 = v99;
  swift_bridgeObjectRelease();
  Class v38 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v37;
  sub_100205C04((uint64_t)v38, 0x656E696C66666FLL, 0xE700000000000000, v39);
  id v40 = v99;
  swift_bridgeObjectRelease();
  Class v41 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v40;
  sub_100205C04((uint64_t)v41, 0x7053726F736E6563, 0xEC00000068636565, v42);
  unint64_t v43 = v99;
  swift_bridgeObjectRelease();
  Class v44 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v43;
  sub_100205C04((uint64_t)v44, 0xD000000000000013, 0x8000000100262EE0, v45);
  id v46 = v99;
  swift_bridgeObjectRelease();
  Class v47 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v46;
  sub_100205C04((uint64_t)v47, 0x676769725444494CLL, 0xEC00000064657265, v48);
  uint64_t v49 = v99;
  swift_bridgeObjectRelease();
  Class v50 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v49;
  sub_100205C04((uint64_t)v50, 0x696C617551776F6CLL, 0xEC000000544D7974, v51);
  id v52 = v99;
  swift_bridgeObjectRelease();
  Class v53 = Bool._bridgeToObjectiveC()().super.super.isa;
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v99 = v52;
  sub_100205C04((uint64_t)v53, 0x736944747365426ELL, 0xEC00000079616C70, v54);
  os_log_type_t v55 = v99;
  swift_bridgeObjectRelease();
  uint64_t v56 = v1 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstResult;
  swift_beginAccess();
  sub_10000C3A4(v56, v34, &qword_1002F8BA0);
  id v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  if (v57(v34, 1, v10) == 1)
  {
    sub_10000B070(v34, &qword_1002F8BA0);
  }
  else
  {
    unint64_t v58 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v86, v34, v10);
    Date.timeIntervalSince(_:)();
    Class v59 = Double._bridgeToObjectiveC()().super.super.isa;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = v55;
    sub_100205C04((uint64_t)v59, 0xD000000000000011, 0x8000000100262F40, v60);
    os_log_type_t v55 = v98;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v58, v10);
  }
  uint64_t v61 = (uint64_t)v91;
  uint64_t v62 = v1 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTranslation;
  swift_beginAccess();
  sub_10000C3A4(v62, v61, &qword_1002F8BA0);
  if (v57(v61, 1, v10) == 1)
  {
    sub_10000B070(v61, &qword_1002F8BA0);
  }
  else
  {
    uint64_t v63 = v87;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v87, v61, v10);
    Date.timeIntervalSince(_:)();
    Class v64 = Double._bridgeToObjectiveC()().super.super.isa;
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v97 = v55;
    sub_100205C04((uint64_t)v64, 0xD00000000000001CLL, 0x8000000100262F20, v65);
    os_log_type_t v55 = v97;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v63, v10);
  }
  uint64_t v66 = (uint64_t)v92;
  uint64_t v67 = v1 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTTS;
  swift_beginAccess();
  sub_10000C3A4(v67, v66, &qword_1002F8BA0);
  if (v57(v66, 1, v10) == 1)
  {
    sub_10000B070(v66, &qword_1002F8BA0);
    sub_1000A6138();
    Class v68 = NSNumber.init(floatLiteral:)(-1.0).super.super.isa;
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v96 = v55;
    sub_100205C04((uint64_t)v68, 0x69466F54656D6974, 0xEE00535454747372, v69);
    uint64_t v70 = v96;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v71 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v88, v66, v10);
    Date.timeIntervalSince(_:)();
    Class v72 = Double._bridgeToObjectiveC()().super.super.isa;
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v96 = v55;
    sub_100205C04((uint64_t)v72, 0x69466F54656D6974, 0xEE00535454747372, v73);
    uint64_t v70 = v96;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v71, v10);
  }
  uint64_t v74 = (uint64_t)v93;
  uint64_t v75 = v1 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstLID;
  swift_beginAccess();
  sub_10000C3A4(v75, v74, &qword_1002F8BA0);
  if (v57(v74, 1, v10) == 1)
  {
    sub_10000B070(v74, &qword_1002F8BA0);
  }
  else
  {
    uint64_t v76 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v89, v74, v10);
    Date.timeIntervalSince(_:)();
    Class v77 = Double._bridgeToObjectiveC()().super.super.isa;
    char v78 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v95 = v70;
    sub_100205C04((uint64_t)v77, 0x494C6F74656D6974, 0xE900000000000044, v78);
    uint64_t v70 = v95;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v76, v10);
  }
  Class v79 = Int._bridgeToObjectiveC()().super.super.isa;
  char v80 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v70;
  sub_100205C04((uint64_t)v79, 0xD000000000000012, 0x8000000100262E90, v80);
  os_log_type_t v81 = v95;
  swift_bridgeObjectRelease();
  Class v82 = Int._bridgeToObjectiveC()().super.super.isa;
  char v83 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = v81;
  sub_100205C04((uint64_t)v82, 0x6B6F547475706E69, 0xEF746E756F436E65, v83);
  uint64_t v84 = v95;
  swift_bridgeObjectRelease();
  return v84;
}

uint64_t getEnumTagSinglePayload for StaticImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001C541C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StaticImage()
{
  return &type metadata for StaticImage;
}

uint64_t sub_1001C5434(uint64_t a1, uint64_t a2)
{
  return sub_1001C544C(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1001C544C(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1) {
        goto LABEL_6;
      }
LABEL_8:
      sub_1001C54F0();
      id v7 = a1;
      id v8 = a3;
      char v6 = static NSObject.== infix(_:_:)();

      return v6 & 1;
    }
    if (a4 == 2) {
      goto LABEL_8;
    }
  }
  else if (!a4)
  {
    goto LABEL_8;
  }
LABEL_6:
  char v6 = 0;
  return v6 & 1;
}

unint64_t sub_1001C54F0()
{
  unint64_t result = qword_1002F73B0;
  if (!qword_1002F73B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F73B0);
  }
  return result;
}

uint64_t sub_1001C5530()
{
  uint64_t v1 = *(void **)v0;
  if (*(void *)v0)
  {
    long long v2 = *(_OWORD *)(v0 + 64);
    long long v24 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)uint64_t v23 = v2;
    *(_OWORD *)&v23[9] = *(_OWORD *)(v0 + 73);
    sub_10001F2D8((uint64_t)&v24);
    id v3 = v1;
    sub_100007620((uint64_t *)&unk_1002F5730);
    Binding.wrappedValue.getter();
    int v4 = (void *)v21;
    char v5 = BYTE8(v21);
    long long v21 = *(_OWORD *)(v0 + 96);
    char v22 = *(unsigned char *)(v0 + 112);
    sub_100007620(&qword_1002FAF70);
    Binding.projectedValue.getter();
    uint64_t v6 = *(void *)(v0 + 16);
    if (v6)
    {
      long long v7 = *(_OWORD *)v23;
      char v17 = v23[16];
      char v18 = v5;
      long long v21 = *(_OWORD *)(v0 + 120);
      sub_10001F2D8((uint64_t)&v21);
      swift_retain();
      sub_100007620(&qword_1002FADB8);
      UIViewControllerRepresentableContext.coordinator.getter();
      id v8 = *(void **)(v0 + 32);
      if (v8)
      {
        uint64_t v9 = *((void *)&v24 + 1);
        uint64_t v10 = *((void *)&v21 + 1);
        *(_OWORD *)uint64_t v23 = *(_OWORD *)(v0 + 192);
        *(void *)&v23[16] = *(void *)(v0 + 208);
        id v11 = v8;
        sub_100007620(&qword_1002F8100);
        Binding.wrappedValue.getter();
        uint64_t v16 = objc_allocWithZone((Class)type metadata accessor for StaticImageViewController());
        id v12 = sub_1001C6858(v3, v9, v4, v18, v7, *((uint64_t *)&v7 + 1), v17, v6, v10, v20, v11, v19, v16);
        swift_release();

        swift_release();
        sub_10001F72C((uint64_t)&v21);
        swift_release();
        swift_release();
        swift_release();
        sub_10010D860(v4, v18);
        sub_10001F72C((uint64_t)&v24);

        sub_1001CA030();
        return (uint64_t)v12;
      }
      type metadata accessor for FavoritesImporter();
      uint64_t v14 = &qword_1002F59B0;
      uint64_t v15 = (void (*)(uint64_t))type metadata accessor for FavoritesImporter;
    }
    else
    {
      type metadata accessor for ConversationContext(0);
      uint64_t v14 = &qword_1002EF2A0;
      uint64_t v15 = (void (*)(uint64_t))type metadata accessor for ConversationContext;
    }
  }
  else
  {
    type metadata accessor for ConversationManager();
    uint64_t v14 = (unint64_t *)&unk_1002F97E0;
    uint64_t v15 = (void (*)(uint64_t))type metadata accessor for ConversationManager;
  }
  sub_1001C6B84(v14, v15);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void sub_1001C57F8(uint64_t a1)
{
  uint64_t v2 = a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image;
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image);
  int v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image + 8);
  sub_10010D874(v3, v4);
  sub_100007620((uint64_t *)&unk_1002F5730);
  Binding.wrappedValue.getter();
  char v5 = v14;
  if (v4 != 255)
  {
    if (v14 == 255)
    {
      uint64_t v9 = v3;
      char v5 = v4;
      goto LABEL_16;
    }
    if (v4)
    {
      if (v4 == 1)
      {
        if (v14 == 1)
        {
          sub_1001C54F0();
          sub_10010D874(v3, 1);
          sub_10010D874(v13, 1);
          char v6 = static NSObject.== infix(_:_:)();
          sub_10010D860(v13, 1);
          sub_10010D860(v13, 1);
          sub_10010D860(v3, 1);
          long long v7 = v3;
          char v8 = 1;
          goto LABEL_24;
        }
        sub_10010D860(v13, v14);
        uint64_t v9 = v3;
        char v5 = 1;
LABEL_16:
        sub_10010D860(v9, v5);
LABEL_17:
        Binding.wrappedValue.getter();
        uint64_t v10 = *(void **)v2;
        *(double *)uint64_t v2 = *(double *)&v13;
        char v11 = *(unsigned char *)(v2 + 8);
        *(unsigned char *)(v2 + 8) = v14;
        sub_10010D874(v13, v14);
        sub_10010D860(v10, v11);
        sub_1001C7E30();
        sub_10010D860(v13, v14);
        goto LABEL_18;
      }
      if (v14 != 2)
      {
        sub_10010D860(v13, v14);
        uint64_t v9 = v3;
        char v5 = 2;
        goto LABEL_16;
      }
      sub_1001C54F0();
      sub_10010D874(v3, 2);
      sub_10010D874(v13, 2);
      char v6 = static NSObject.== infix(_:_:)();
      sub_10010D860(v13, 2);
      sub_10010D860(v13, 2);
      sub_10010D860(v3, 2);
      long long v7 = v3;
      char v8 = 2;
    }
    else
    {
      if (v14)
      {
        sub_10010D860(v13, v14);
        uint64_t v9 = v3;
        char v5 = 0;
        goto LABEL_16;
      }
      sub_1001C54F0();
      sub_10010D874(v3, 0);
      sub_10010D874(v13, 0);
      char v6 = static NSObject.== infix(_:_:)();
      sub_10010D860(v13, 0);
      sub_10010D860(v13, 0);
      sub_10010D860(v3, 0);
      long long v7 = v3;
      char v8 = 0;
    }
LABEL_24:
    sub_10010D860(v7, v8);
    if (v6) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v14 != 255)
  {
    uint64_t v9 = v13;
    goto LABEL_16;
  }
LABEL_18:
  sub_100007620(&qword_1002F34E0);
  Binding.wrappedValue.getter();
  if (*(double *)&v13 > 0.0)
  {
    Binding.wrappedValue.getter();
    Binding.wrappedValue.getter();
    Binding.wrappedValue.getter();
    Binding.wrappedValue.getter();
    uint64_t v12 = a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport;
    if ((*(unsigned char *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport + 32) & 1) != 0
      || (v15.origin.x = 0.0,
          v15.size.width = 0.0,
          *(void *)&v15.origin.y = v13,
          v15.size.height = *(double *)&v13 - *(double *)&v13,
          !CGRectEqualToRect(*(CGRect *)v12, v15)))
    {
      *(void *)uint64_t v12 = 0;
      *(double *)(v12 + 8) = *(double *)&v13;
      *(void *)(v12 + 16) = 0;
      *(double *)(v12 + 24) = *(double *)&v13 - *(double *)&v13;
      *(unsigned char *)(v12 + 32) = 0;
      sub_1001CC9D0();
      sub_1001C7434();
    }
  }
}

void sub_1001C5BFC(Swift::Int a1, char a2)
{
  char v2 = a1;
  sub_1000F9430(a1, a2);
  if (qword_1002EE5A0 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v5 == 5 || (sub_1002371F4(v2, v5) & 1) == 0) && UIAccessibilityIsVoiceOverRunning())
  {
    UIAccessibilityNotifications v3 = UIAccessibilityAnnouncementNotification;
    sub_1000F8F28(v2);
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    UIAccessibilityPostNotification(v3, v4);
  }
}

uint64_t sub_1001C5D08()
{
  long long v1 = *(_OWORD *)(v0 + 192);
  v8[10] = *(_OWORD *)(v0 + 176);
  v8[11] = v1;
  v8[12] = *(_OWORD *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 224);
  long long v2 = *(_OWORD *)(v0 + 128);
  v8[6] = *(_OWORD *)(v0 + 112);
  v8[7] = v2;
  long long v3 = *(_OWORD *)(v0 + 160);
  v8[8] = *(_OWORD *)(v0 + 144);
  v8[9] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v8[2] = *(_OWORD *)(v0 + 48);
  v8[3] = v4;
  long long v5 = *(_OWORD *)(v0 + 96);
  v8[4] = *(_OWORD *)(v0 + 80);
  v8[5] = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v6;
  sub_1001C6C28((uint64_t)v8);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StaticImageView.Coordinator()
{
  return self;
}

uint64_t destroy for StaticImageView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 88) != 255) {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for StaticImageView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  long long v7 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v9 = a2 + 80;
  int v10 = *(unsigned __int8 *)(a2 + 88);
  id v11 = v4;
  swift_retain();
  id v12 = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10 == 255)
  {
    *(void *)(a1 + 80) = *(void *)v9;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(v9 + 8);
  }
  else
  {
    uint64_t v13 = *(void **)v9;
    *(void *)(a1 + 80) = *(void *)v9;
    *(unsigned char *)(a1 + 88) = v10;
    id v14 = v13;
  }
  uint64_t v15 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v15;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v17;
  uint64_t v18 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v18;
  uint64_t v19 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v19;
  uint64_t v20 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v20;
  uint64_t v21 = *(void *)(a2 + 200);
  uint64_t v22 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = v21;
  *(void *)(a1 + 208) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for StaticImageView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  int v10 = (void **)(a1 + 80);
  id v11 = (void **)(a2 + 80);
  int v12 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v12 == 255)
    {
      uint64_t v19 = *v11;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *int v10 = v19;
    }
    else
    {
      uint64_t v16 = *v11;
      *(void *)(a1 + 80) = *v11;
      *(unsigned char *)(a1 + 88) = v12;
      id v17 = v16;
    }
  }
  else if (v12 == 255)
  {
    sub_1000FF4D0(a1 + 80);
    char v18 = *(unsigned char *)(a2 + 88);
    *int v10 = *v11;
    *(unsigned char *)(a1 + 88) = v18;
  }
  else
  {
    uint64_t v13 = *v11;
    id v14 = *(void **)(a1 + 80);
    *(void *)(a1 + 80) = *v11;
    *(unsigned char *)(a1 + 88) = v12;
    id v15 = v13;
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for StaticImageView(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for StaticImageView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  long long v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  long long v8 = (void *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 88) == 255) {
    goto LABEL_5;
  }
  int v9 = *(unsigned __int8 *)(a2 + 88);
  if (v9 == 255)
  {
    sub_1000FF4D0(a1 + 80);
LABEL_5:
    *(void *)(a1 + 80) = *v8;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    goto LABEL_6;
  }
  long long v10 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *v8;
  *(unsigned char *)(a1 + 88) = v9;

LABEL_6:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_release();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticImageView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticImageView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticImageView()
{
  return &type metadata for StaticImageView;
}

uint64_t sub_1001C6528(unsigned __int8 a1)
{
  return sub_1000F9F00(a1);
}

void sub_1001C654C()
{
}

uint64_t sub_1001C657C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 176);
  v17[10] = *(_OWORD *)(v1 + 160);
  v17[11] = v3;
  v17[12] = *(_OWORD *)(v1 + 192);
  uint64_t v18 = *(void *)(v1 + 208);
  long long v4 = *(_OWORD *)(v1 + 112);
  v17[6] = *(_OWORD *)(v1 + 96);
  v17[7] = v4;
  long long v5 = *(_OWORD *)(v1 + 144);
  unsigned char v17[8] = *(_OWORD *)(v1 + 128);
  v17[9] = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  v17[2] = *(_OWORD *)(v1 + 32);
  v17[3] = v6;
  long long v7 = *(_OWORD *)(v1 + 80);
  v17[4] = *(_OWORD *)(v1 + 64);
  v17[5] = v7;
  long long v8 = *(_OWORD *)(v1 + 16);
  v17[0] = *(_OWORD *)v1;
  v17[1] = v8;
  type metadata accessor for StaticImageView.Coordinator();
  uint64_t v9 = swift_allocObject();
  long long v10 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v9 + 176) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v9 + 192) = v10;
  *(_OWORD *)(v9 + 208) = *(_OWORD *)(v1 + 192);
  *(void *)(v9 + 224) = *(void *)(v1 + 208);
  long long v11 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v9 + 112) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v9 + 128) = v11;
  long long v12 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v9 + 144) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v9 + 160) = v12;
  long long v13 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v9 + 64) = v13;
  long long v14 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v9 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v9 + 96) = v14;
  long long v15 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v9 + 32) = v15;
  *a1 = v9;
  return sub_1001C6734((uint64_t)v17);
}

uint64_t sub_1001C6640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001C6BCC();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001C66A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001C6BCC();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001C6708()
{
}

uint64_t sub_1001C6734(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 32);
  long long v4 = *(void **)(a1 + 80);
  char v5 = *(unsigned char *)(a1 + 88);
  swift_retain();
  swift_retain();
  id v6 = v2;
  swift_retain();
  id v7 = v3;
  swift_retain();
  sub_10010D874(v4, v5);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

id sub_1001C6858(void *a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, unsigned char *a13)
{
  uint64_t v18 = &a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image];
  *(void *)uint64_t v18 = 0;
  v18[8] = -1;
  uint64_t v19 = &a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport];
  *(_OWORD *)uint64_t v19 = 0u;
  *((_OWORD *)v19 + 1) = 0u;
  v19[32] = 1;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_retranslateSubscription] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_visualTranslationLocaleSubscription] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_targetLocaleSubscription] = 0;
  a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availability] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availabilitySubscription] = 0;
  a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent] = 0;
  a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_pendingRetranslation] = 0;
  uint64_t v20 = &a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_delegate];
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationHostingController] = 0;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_conversation] = a1;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationOverlayModel] = a2;
  *(void *)&a13[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_context] = a8;
  uint64_t v21 = *(void **)v18;
  *(void *)uint64_t v18 = a3;
  char v22 = v18[8];
  v18[8] = a4;
  uint64_t v23 = a13;
  id v24 = a1;
  swift_retain();
  swift_retain();
  sub_10010D874(a3, a4);
  sub_10010D860(v21, v22);
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_configuration] = a9;
  id v25 = &v23[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText];
  *(void *)id v25 = a5;
  *((void *)v25 + 1) = a6;
  unsigned char v25[16] = a7;
  type metadata accessor for ChromeBar();
  id v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_retain();
  swift_retain();
  swift_retain();
  id v27 = [v26 init];
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_materialView] = v27;
  *((void *)v20 + 1) = &off_1002D2600;
  swift_unknownObjectWeakAssign();
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_favoritesImporter] = a11;
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_selfLoggingInvocation] = a12;
  id v28 = a11;
  swift_retain();

  v33.receiver = v23;
  v33.super_class = (Class)type metadata accessor for StaticImageViewController();
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_1001C6B08(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availabilitySubscription) = 0;
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_retranslateSubscription) = 0;
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_visualTranslationLocaleSubscription) = 0;
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_targetLocaleSubscription) = 0;

  return swift_release();
}

uint64_t sub_1001C6B84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001C6BCC()
{
  unint64_t result = qword_1002FADC0;
  if (!qword_1002FADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FADC0);
  }
  return result;
}

uint64_t sub_1001C6C28(uint64_t a1)
{
  unint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 32);
  long long v4 = *(void **)(a1 + 80);
  char v5 = *(unsigned char *)(a1 + 88);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_10010D860(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

double sub_1001C6D54@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001C6DD4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1001ACAF0(v1, v2);
  swift_retain();
  return static Published.subscript.setter();
}

void sub_1001C7008(void *a1, double a2, double a3)
{
  id v7 = [self sharedApplication];
  id v8 = [v7 applicationState];

  if (v8 != (id)2)
  {
    id v9 = [v3 view];
    if (v9)
    {
      long long v10 = v9;
      [v9 frame];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;

      v40.origin.x = v12;
      v40.origin.y = v14;
      v40.size.width = v16;
      v40.size.height = v18;
      double Width = CGRectGetWidth(v40);
      id v20 = [v3 view];
      if (v20)
      {
        uint64_t v21 = v20;
        BOOL v22 = a2 / a3 <= 1.0;
        [v20 frame:a2 / a3];
        CGFloat v24 = v23;
        CGFloat v26 = v25;
        CGFloat v28 = v27;
        CGFloat v30 = v29;

        v41.origin.x = v24;
        v41.origin.y = v26;
        v41.size.width = v28;
        v41.size.height = v30;
        if (((v22 ^ (Width / CGRectGetHeight(v41) > 1.0)) & 1) == 0)
        {
          Class v38 = (void (*)())nullsub_1;
          uint64_t v39 = 0;
          uint64_t v34 = _NSConcreteStackBlock;
          uint64_t v35 = 1107296256;
          char v36 = sub_100218A34;
          uint64_t v37 = &unk_1002D2788;
          NSString v31 = _Block_copy(&v34);
          uint64_t v32 = swift_allocObject();
          swift_unknownObjectWeakInit();
          Class v38 = sub_1001D15F4;
          uint64_t v39 = v32;
          uint64_t v34 = _NSConcreteStackBlock;
          uint64_t v35 = 1107296256;
          char v36 = sub_100218A34;
          uint64_t v37 = &unk_1002D27B0;
          objc_super v33 = _Block_copy(&v34);
          swift_release();
          [a1 animateAlongsideTransition:v31 completion:v33];
          _Block_release(v33);
          _Block_release(v31);
        }
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1001C727C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1001CC9D0();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    long long v3 = (void *)v2;
    sub_1001C759C();
  }
}

void sub_1001C7434()
{
  uint64_t v1 = (CGFloat *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport + 32) & 1) == 0)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView);
    if (v2)
    {
      long long v3 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView);
      if (v3)
      {
        CGFloat v5 = v1[2];
        CGFloat v4 = v1[3];
        CGFloat v7 = *v1;
        double v6 = v1[1];
        id v8 = v2;
        id v18 = v3;
        [v8 frame];
        double v10 = v9;
        double v12 = v11;
        [v18 bounds];
        double v14 = v13;
        v20.origin.x = v7;
        v20.origin.y = v6;
        v20.size.width = v5;
        v20.size.height = v4;
        CGFloat Height = CGRectGetHeight(v20);
        double v16 = 0.0;
        if (v12 < Height)
        {
          v21.origin.x = v7;
          v21.origin.y = v6;
          v21.size.width = v5;
          v21.size.height = v4;
          double v16 = vabdd_f64(CGRectGetHeight(v21), v12) * 0.5;
        }
        double v17 = (v14 - v10) * 0.5;
        if (v10 >= v14) {
          double v17 = 0.0;
        }
        [v18 setContentOffset:CGPointMake(-v17, -v6 - v16)];
      }
    }
  }
}

void sub_1001C759C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView);
    if (v2)
    {
      id v20 = v1;
      id v3 = v2;
      [v20 frame];
      double v5 = v4;
      double v7 = v6;
      [v3 bounds];
      if (v7 >= v9) {
        double v10 = 0.0;
      }
      else {
        double v10 = (v9 - v7) * 0.5;
      }
      if (v5 >= v8) {
        double v11 = 0.0;
      }
      else {
        double v11 = (v8 - v5) * 0.5;
      }
      double v12 = (CGFloat *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport);
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport + 32))
      {
        double v13 = v10;
      }
      else
      {
        CGFloat v15 = v12[2];
        CGFloat v14 = v12[3];
        CGFloat v17 = *v12;
        double v16 = v12[1];
        double v13 = v10 + v16;
        [v3 frame];
        double v19 = v10 + v18;
        v22.origin.x = v17;
        v22.origin.y = v16;
        v22.size.width = v15;
        v22.size.height = v14;
        double v10 = v19 - (v16 + CGRectGetHeight(v22));
      }
      [v3 setContentInset:v13, v11, v10, v11];
    }
  }
}

void sub_1001C7718()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView;
  if (*(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView]) {
    return;
  }
  uint64_t v2 = v0;
  id v3 = [objc_allocWithZone((Class)UIScrollView) init];
  [v3 setShowsVerticalScrollIndicator:0];
  [v3 setShowsHorizontalScrollIndicator:0];
  [v3 setDelaysContentTouches:0];
  [v3 setScrollIndicatorInsets:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setAccessibilityIdentifier:v5];

  id v6 = [v2 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_16;
  }
  double v7 = v6;
  [v6 addSubview:v4];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100249A60;
  id v9 = [v4 topAnchor];
  id v10 = [v2 view];
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v11 = v10;
  id v12 = [v10 topAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12];
  *(void *)(v8 + 32) = v13;
  id v14 = [v4 leadingAnchor];
  id v15 = [v2 view];
  if (!v15)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  double v16 = v15;
  id v17 = [v15 leadingAnchor];

  id v18 = [v14 constraintEqualToAnchor:v17];
  *(void *)(v8 + 40) = v18;
  id v19 = [v4 bottomAnchor];
  id v20 = [v2 view];
  if (!v20)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  CGRect v21 = v20;
  id v22 = [v20 bottomAnchor];

  id v23 = [v19 constraintEqualToAnchor:v22];
  *(void *)(v8 + 48) = v23;
  id v24 = [v4 trailingAnchor];
  id v25 = [v2 view];
  if (!v25)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  CGFloat v26 = v25;
  double v27 = self;
  id v28 = [v26 trailingAnchor];

  id v29 = [v24 constraintEqualToAnchor:v28];
  *(void *)(v8 + 56) = v29;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  [v4 layoutIfNeeded];
  NSString v31 = *(void **)&v2[v1];
  *(void *)&v2[v1] = v4;
  id v32 = v4;

  uint64_t v33 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_materialView;
  [*(id *)&v2[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_materialView] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v2[v33] setHidden:1];
  id v34 = [v2 view];
  if (!v34)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v35 = v34;
  [v34 insertSubview:*(void *)&v2[v33] aboveSubview:v32];

  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_100249A60;
  id v37 = [*(id *)&v2[v33] topAnchor];
  id v38 = [v2 view];
  if (!v38)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v39 = v38;
  id v40 = [v38 topAnchor];

  id v41 = [v37 constraintEqualToAnchor:v40];
  *(void *)(v36 + 32) = v41;
  id v42 = [*(id *)&v2[v33] leadingAnchor];
  id v43 = [v2 view];
  if (!v43)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Class v44 = v43;
  id v45 = [v43 leadingAnchor];

  id v46 = [v42 constraintEqualToAnchor:v45];
  *(void *)(v36 + 40) = v46;
  id v47 = [*(id *)&v2[v33] bottomAnchor];
  id v48 = [v2 view];
  if (!v48)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v49 = v48;
  id v50 = [v48 bottomAnchor];

  id v51 = [v47 constraintEqualToAnchor:v50];
  *(void *)(v36 + 48) = v51;
  id v52 = [*(id *)&v2[v33] trailingAnchor];
  id v53 = [v2 view];
  if (!v53)
  {
LABEL_24:
    __break(1u);
    return;
  }
  char v54 = v53;
  id v55 = [v53 trailingAnchor];

  id v56 = [v52 constraintEqualToAnchor:v55];
  *(void *)(v36 + 56) = v56;
  specialized Array._endMutation()();
  v57.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:v57.super.isa];
}

void sub_1001C7E30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for VisualTranslationOptions();
  __chkstk_darwin(v5);
  double v7 = (char *)&v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for VisualTranslationView();
  id v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620((uint64_t *)&unk_1002FAFF0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = __chkstk_darwin(v14);
  id v18 = (char *)&v142 - v17;
  int v19 = v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image + 8];
  if (v19 == 255) {
    return;
  }
  id v157 = v7;
  id v20 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image];
  CGRect v21 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView];
  if (!v21)
  {
    uint64_t v40 = qword_1002EE5C8;
    id v41 = v20;
    if (v40 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_100011554(v42, (uint64_t)qword_10030E960);
    uint64_t v159 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v159, v43))
    {
      Class v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v159, v43, "Illegal attempt to set an image with no scroll view in place", v44, 2u);
      swift_slowDealloc();

      goto LABEL_20;
    }
    sub_10010D860(v20, v19);
    id v45 = v159;
    goto LABEL_26;
  }
  uint64_t v147 = v5;
  uint64_t v148 = v11;
  id v149 = v16;
  uint64_t v150 = v9;
  uint64_t v155 = v15;
  uint64_t v158 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView;
  id v22 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView];
  uint64_t v159 = v21;
  sub_10010D874(v20, v19);
  id v23 = [v22 image];
  if (v23)
  {
    id v24 = v23;
    sub_10000B0CC(0, &qword_1002FB038);
    id v25 = v20;
    char v26 = static NSObject.== infix(_:_:)();

    sub_10010D860(v20, v19);
    sub_10010D860(v20, v19);
    if (v26)
    {
      if (qword_1002EE5C8 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_100011554(v27, (uint64_t)qword_10030E960);
      uint64_t v158 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v158, v28))
      {
        id v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v29 = 0;
        _os_log_impl((void *)&_mh_execute_header, v158, v28, "Calling updateImage when the image has not changed", v29, 2u);
        swift_slowDealloc();

LABEL_20:
        sub_10010D860(v20, v19);
        return;
      }
      sub_10010D860(v20, v19);

      id v45 = v158;
LABEL_26:

      return;
    }
  }
  if (v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent] == 1) {
    v1[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent] = 0;
  }
  uint64_t v144 = v4;
  uint64_t v145 = v8;
  uint64_t v151 = v18;
  uint64_t v152 = v13;
  int v146 = v19;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = sub_100011554(v30, (uint64_t)qword_10030E960);
  id v32 = v1;
  uint64_t v156 = v31;
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.debug.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v153 = v20;
  uint64_t v154 = v1;
  if (v35)
  {
    uint64_t v36 = swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 138412546;
    id v38 = *(void **)&v32[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView];
    if (v38)
    {
      p_Class isa = *(void **)&v32[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView];
      id v39 = v38;
    }
    else
    {
      p_Class isa = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v37 = v38;

    *(_WORD *)(v36 + 12) = 2112;
    id v46 = *(Class *)((char *)&v158->isa + (void)v154);
    if (v46)
    {
      p_Class isa = *(Class *)((char *)&v158->isa + (void)v154);
      id v47 = v46;
    }
    else
    {
      p_Class isa = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v20 = v153;
    v37[1] = v46;

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Removing translationView %@ and image view %@", (uint8_t *)v36, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v1 = v154;
  }
  else
  {
  }
  uint64_t v48 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView;
  [*(id *)&v32[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView] removeFromSuperview];
  uint64_t v49 = *(void **)&v32[v48];
  *(void *)&v32[v48] = 0;

  id v50 = v158;
  id v51 = *(Class *)((char *)&v158->isa + (void)v1);
  if (v51)
  {
    [v51 removeFromSuperview];
    id v52 = *(Class *)((char *)&v50->isa + (void)v1);
  }
  else
  {
    id v52 = 0;
  }
  *(Class *)((char *)&v50->isa + (void)v1) = 0;

  uint64_t v142 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationHostingController;
  [*(id *)&v32[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationHostingController] removeFromParentViewController];
  [v20 size];
  double v54 = v53;
  double v56 = v55;
  NSArray v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.debug.getter();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v143 = v48;
  if (v59)
  {
    char v60 = (uint8_t *)swift_slowAlloc();
    p_Class isa = (void *)swift_slowAlloc();
    *(_DWORD *)char v60 = 136446210;
    v163.width = v54;
    v163.height = v56;
    uint64_t v61 = NSStringFromCGSize(v163);
    uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v64 = v63;

    id v20 = v153;
    uint64_t v160 = sub_100202FD4(v62, v64, (uint64_t *)&p_isa);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Updating image with size %{public}s", v60, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v65 = [objc_allocWithZone((Class)UIImageView) initWithImage:v20];
  uint64_t v66 = v159;
  [v159 addSubview:v65];
  [v66 setDelegate:v32];
  nullsub_1(-[NSObject setContentSize:](v66, "setContentSize:", v54, v56));
  -[NSObject setContentOffset:](v66, "setContentOffset:");
  id v67 = [v32 view];
  if (!v67)
  {
    __break(1u);
    goto LABEL_60;
  }
  Class v68 = v67;
  [v67 setClipsToBounds:1];

  id v69 = [v32 view];
  if (!v69)
  {
LABEL_60:
    __break(1u);
    return;
  }
  uint64_t v70 = v69;
  id v71 = [v69 layer];

  [v71 setMasksToBounds:1];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  p_Class isa = _swiftEmptyArrayStorage;
  sub_1001D08B4(&qword_1002F5DB0, (void (*)(uint64_t))&type metadata accessor for VisualTranslationOptions);
  swift_retain();
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002FB000);
  sub_100014894(&qword_1002F5DB8, (uint64_t *)&unk_1002FB000);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  Class v72 = v148;
  VisualTranslationView.init(observable:options:systemTranslationDismissHandler:)();
  swift_release();
  sub_1001D08B4(&qword_1002FB010, (void (*)(uint64_t))&type metadata accessor for VisualTranslationView);
  char v73 = v151;
  uint64_t v74 = v145;
  View.navigationBarHidden(_:)();
  v150[1](v72, v74);
  uint64_t v75 = v152;
  uint64_t v76 = v155;
  (*(void (**)(id, char *, uint64_t))(v152 + 16))(v149, v73, v155);
  id v77 = objc_allocWithZone((Class)sub_100007620((uint64_t *)&unk_1002FB018));
  char v78 = (void *)UIHostingController.init(rootView:)();
  id v79 = [v78 view];
  if (v79)
  {
    char v80 = v79;
    id v81 = [self clearColor];
    [v80 setBackgroundColor:v81];

    [v80 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v150 = (void (**)(char *, uint64_t))v80;
    id v82 = v80;
    NSString v83 = String._bridgeToObjectiveC()();
    [v82 setAccessibilityIdentifier:v83];

    id v84 = v65;
    NSString v85 = String._bridgeToObjectiveC()();
    [v84 setAccessibilityIdentifier:v85];

    [v84 addSubview:v82];
    uint64_t v86 = self;
    sub_100007620((uint64_t *)&unk_1002F0270);
    os_log_t v87 = (void *)swift_allocObject();
    *((_OWORD *)v87 + 1) = xmmword_100249A60;
    id v88 = [v82 topAnchor];
    id v89 = [v84 topAnchor];
    id v90 = [v88 constraintEqualToAnchor:v89];
    id v157 = v78;
    id v91 = v90;

    v87[4] = v91;
    id v92 = [v82 leadingAnchor];
    id v93 = [v84 leadingAnchor];
    id v94 = [v92 constraintEqualToAnchor:v93];

    v87[5] = v94;
    id v95 = [v82 bottomAnchor];
    id v96 = [v84 bottomAnchor];
    id v97 = [v95 constraintEqualToAnchor:v96];

    v87[6] = v97;
    id v149 = v82;
    id v98 = [v82 trailingAnchor];
    id v99 = [v84 trailingAnchor];
    id v100 = [v98 constraintEqualToAnchor:v99];

    v87[7] = v100;
    id v101 = v157;
    p_Class isa = v87;
    specialized Array._endMutation()();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v86 activateConstraints:isa];

    [v32 addChildViewController:v101];
    uint64_t v103 = v159;
    uint64_t v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.debug.getter();
    int v106 = v105;
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v107 = swift_slowAlloc();
      uint64_t v159 = swift_slowAlloc();
      p_Class isa = &v159->isa;
      *(_DWORD *)uint64_t v107 = 136446466;
      [v103 frame];
      v164.width = v108;
      v164.height = v109;
      uint64_t v110 = NSStringFromCGSize(v164);
      uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      LODWORD(v148) = v106;
      uint64_t v112 = v111;
      unint64_t v114 = v113;

      uint64_t v160 = sub_100202FD4(v112, v114, (uint64_t *)&p_isa);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v107 + 12) = 2082;
      [v103 contentSize];
      uint64_t v115 = NSStringFromCGSize(v165);
      uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v118 = v117;

      uint64_t v160 = sub_100202FD4(v116, v118, (uint64_t *)&p_isa);
      id v101 = v157;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      uint64_t v119 = v103;
      _os_log_impl((void *)&_mh_execute_header, v104, (os_log_type_t)v148, "Scroll view size: %{public}s content view size: %{public}s", (uint8_t *)v107, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v119 = v103;
    }

    uint64_t v120 = v154;
    uint64_t v121 = v158;
    uint64_t v122 = v143;
    [v84 setUserInteractionEnabled:1];
    uint64_t v123 = *(Class *)((char *)&v121->isa + (void)v120);
    *(Class *)((char *)&v121->isa + (void)v120) = (Class)v84;
    uint64_t v159 = v84;

    uint64_t v124 = *(void **)&v32[v122];
    *(void *)&v32[v122] = v150;
    id v157 = v149;

    uint64_t v125 = *(void **)&v32[v142];
    *(void *)&v32[v142] = v101;
    uint64_t v150 = (void (**)(char *, uint64_t))v101;

    uint64_t v126 = v32;
    uint64_t v127 = Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = swift_slowAlloc();
      uint64_t v130 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v129 = 138412546;
      uint64_t v131 = *(void **)&v32[v122];
      if (v131)
      {
        p_Class isa = v131;
        uint64_t v132 = v131;
        uint64_t v120 = v154;
      }
      else
      {
        p_Class isa = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v130 = v131;

      *(_WORD *)(v129 + 12) = 2112;
      uint64_t v133 = *(Class *)((char *)&v158->isa + (void)v120);
      if (v133)
      {
        p_Class isa = *(Class *)((char *)&v158->isa + (void)v120);
        id v134 = v133;
      }
      else
      {
        p_Class isa = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v130[1] = v133;

      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Created translation view %@ and image view %@", (uint8_t *)v129, 0x16u);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    char v135 = v146;

    sub_1001CC9D0();
    uint64_t v136 = v153;
    if ((v126[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport + 32] & 1) == 0) {
      sub_1001C7434();
    }
    uint64_t v137 = type metadata accessor for TaskPriority();
    uint64_t v138 = (uint64_t)v144;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v144, 1, 1, v137);
    uint64_t v139 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v140 = static MainActor.shared.getter();
    uint64_t v141 = (void *)swift_allocObject();
    v141[2] = v140;
    v141[3] = &protocol witness table for MainActor;
    v141[4] = v139;
    swift_release();
    sub_100056780(v138, (uint64_t)&unk_1002FB030, (uint64_t)v141);
    swift_release();

    sub_10010D860(v136, v135);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v151, v155);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v76);
    sub_10010D860(v20, v146);
  }
}

void sub_1001C92CC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_favoritesImporter);
    sub_1000EB61C();
  }
}

uint64_t sub_1001C9338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  unsigned char v4[8] = v5;
  return _swift_task_switch(sub_1001C93D0, v6, v5);
}

uint64_t sub_1001C93D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    id v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *id v2 = v0;
    v2[1] = sub_1001C94C4;
    return sub_1001CB598();
  }
  else
  {
    swift_release();
    id v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001C94C4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_1001C95EC, v4, v3);
}

uint64_t sub_1001C95EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 88);
  swift_release();
  uint64_t v2 = *(unsigned char **)(v0 + 72);
  if (v1 == 1) {
    sub_1001C9678();
  }
  else {
    v2[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_pendingRetranslation] = 1;
  }

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_1001C9678()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v88 = (uint64_t)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EF8C8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v86 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  NSString v85 = (char *)&v75 - v7;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  os_log_t v87 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  id v89 = (char *)&v75 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  int v19 = (char *)&v75 - v18;
  __chkstk_darwin(v17);
  CGRect v21 = (char *)&v75 - v20;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v22 = sub_1001CDA7C((uint64_t)v21);
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  id v23 = *(void (**)(char *, uint64_t))(v12 + 8);
  v23(v21, v11);
  if ((v22 & 1) == 0) {
    return;
  }
  id v24 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image);
  unsigned int v25 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image + 8);
  if (v25 >= 2)
  {
    if (v25 != 2) {
      return;
    }
    int v79 = 1;
  }
  else
  {
    int v79 = 0;
  }
  id v82 = v24;
  id v26 = [v82 CGImage];
  if (!v26)
  {
    sub_10010D860(v24, v25);
    return;
  }
  id v80 = v26;
  id v83 = v24;
  id v84 = v23;
  unsigned int v81 = v25;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v27 = sub_10008CD5C();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  id v29 = [v27 oppositeToLocale:isa];

  if (v29)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = v90;
    uint64_t v31 = v91;
    uint64_t v32 = v90 + 32;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
    v33(v10, v21, v91);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v10, 0, 1, v31);
    int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v10, 1, v31);
    BOOL v35 = v84;
    if (v34 != 1)
    {
      uint64_t v36 = v91;
      id v77 = (void (*)(uint64_t, char *, uint64_t))v33;
      uint64_t v78 = v32;
      v33(v89, v10, v91);
      uint64_t v37 = v36;
      uint64_t v38 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 8);
      char v39 = *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 16);
      uint64_t v93 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText);
      uint64_t v94 = v38;
      char v95 = v39;
      char v92 = 0;
      sub_100007620(&qword_1002FAF70);
      Binding.wrappedValue.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v93 == 1)
      {
        id v40 = v82;
        unint64_t v41 = sub_1001FFAFC((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v42 = type metadata accessor for CameraConfiguration.StaticImage(0);
        os_log_type_t v43 = v85;
        Class v44 = &v85[*(int *)(v42 + 24)];
        uint64_t v45 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
        *os_log_type_t v43 = v83;
        v43[1] = v41;
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v43, 0, 1, v42);
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10000C3A4((uint64_t)v43, (uint64_t)v86, &qword_1002EF8C8);
        swift_retain();
        static Published.subscript.setter();
        uint64_t v37 = v91;
        sub_10000B070((uint64_t)v43, &qword_1002EF8C8);
      }
      id v46 = objc_allocWithZone((Class)_LTLocalePair);
      id v47 = v19;
      Class v48 = Locale._bridgeToObjectiveC()().super.isa;
      v49.super.Class isa = Locale._bridgeToObjectiveC()().super.isa;
      id v50 = v47;
      uint64_t v76 = v47;
      Class v51 = v49.super.isa;
      uint64_t v86 = (char *)[v46 initWithSourceLocale:v48 targetLocale:v49.super.isa];

      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      LODWORD(v85) = v93;
      [v82 imageOrientation];
      LODWORD(v82) = vk_cgImagePropertyOrientationFromVKOrientation();
      uint64_t v52 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v88, 1, 1, v52);
      uint64_t v53 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v55 = v90 + 16;
      double v54 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      v54(v21, v50, v37);
      v54(v87, v89, v37);
      type metadata accessor for MainActor();
      swift_retain();
      id v56 = v80;
      NSArray v57 = v86;
      uint64_t v58 = static MainActor.shared.getter();
      uint64_t v59 = *(unsigned __int8 *)(v55 + 64);
      uint64_t v60 = (v59 + 65) & ~v59;
      uint64_t v61 = (v13 + v59 + v60) & ~v59;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v58;
      *(void *)(v62 + 24) = &protocol witness table for MainActor;
      *(void *)(v62 + 32) = v53;
      *(void *)(v62 + 40) = v56;
      *(_DWORD *)(v62 + 48) = v82;
      *(void *)(v62 + 56) = v57;
      *(unsigned char *)(v62 + 64) = (_BYTE)v85;
      uint64_t v63 = v62 + v60;
      unint64_t v64 = v21;
      uint64_t v65 = v91;
      uint64_t v66 = v77;
      v77(v63, v64, v91);
      v66(v62 + v61, v87, v65);
      *(unsigned char *)(v62 + v61 + v13) = v79;
      swift_release();
      sub_100056780(v88, (uint64_t)&unk_1002FAF80, v62);
      swift_release();
      sub_10010D860(v83, v81);

      id v67 = v84;
      v84(v89, v65);
      v67(v76, v65);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v10, 1, 1, v91);
    BOOL v35 = v84;
  }
  Class v68 = v19;
  sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F4110);
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Logger();
  sub_100011554(v69, (uint64_t)qword_10030E960);
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.error.getter();
  BOOL v72 = os_log_type_enabled(v70, v71);
  uint64_t v73 = v91;
  if (v72)
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v74 = 0;
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "Unable to configure source and target locales for static image translation", v74, 2u);
    BOOL v35 = v84;
    swift_slowDealloc();
  }

  sub_10010D860(v83, v81);
  v35(v68, v73);
}

uint64_t sub_1001CA030()
{
  uint64_t v66 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  unint64_t v64 = (char *)&v50 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100007620(&qword_1002F2BE8);
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  __chkstk_darwin(v2);
  id v67 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100007620(&qword_1002FAED0);
  uint64_t v77 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v60 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100007620(&qword_1002FAED8);
  uint64_t v78 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v59 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100007620(&qword_1002FAEE0);
  uint64_t v79 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v61 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100007620(&qword_1002FAEE8);
  uint64_t v80 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002FAEF8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100007620((uint64_t *)&unk_1002FAF00);
  uint64_t v15 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v0;
  uint64_t v72 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_conversation);
  id v84 = (id)sub_10017C7F4(v72, *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_context));
  sub_100007620(&qword_1002F8118);
  sub_100014894(&qword_1002FAF10, &qword_1002F8118);
  sub_10017BC04();
  Publisher<>.removeDuplicates()();
  swift_release();
  uint64_t v71 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v84 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v83 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v18 = *(void *)(v83 - 8);
  id v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v19 = v18 + 56;
  v82(v10, 1, 1, v83);
  uint64_t v76 = v19;
  uint64_t v58 = &protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  sub_100014894((unint64_t *)&unk_1002FAF18, &qword_1002FAEF8);
  unint64_t v81 = sub_100022364();
  uint64_t v70 = v10;
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v10, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_allocObject();
  uint64_t v20 = v50;
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002FAF28, (uint64_t *)&unk_1002FAF00);
  uint64_t v21 = v57;
  uint64_t v22 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v21);
  *(void *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availabilitySubscription) = v22;
  swift_release();
  swift_beginAccess();
  uint64_t v57 = sub_100007620(&qword_1002F34A0);
  id v23 = v60;
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v56 = sub_100014894(&qword_1002F31D8, &qword_1002FAED0);
  id v24 = v59;
  uint64_t v25 = v73;
  Publisher.dropFirst(_:)();
  id v26 = *(void (**)(char *, uint64_t))(v77 + 8);
  v77 += 8;
  uint64_t v55 = v26;
  v26(v23, v25);
  uint64_t v53 = sub_100014894((unint64_t *)&unk_1002FAF30, &qword_1002FAED8);
  uint64_t v54 = sub_1001D08B4(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
  id v27 = v61;
  uint64_t v28 = v74;
  Publisher<>.removeDuplicates()();
  id v29 = *(void (**)(char *, uint64_t))(v78 + 8);
  v78 += 8;
  uint64_t v52 = v29;
  v29(v24, v28);
  id v84 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v30 = (uint64_t)v70;
  v82(v70, 1, 1, v83);
  uint64_t v58 = (void *)sub_100014894(&qword_1002FAF40, &qword_1002FAEE0);
  uint64_t v31 = v62;
  uint64_t v32 = v75;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v30, &qword_1002FAEF0);

  uint64_t v33 = *(void (**)(char *, uint64_t))(v79 + 8);
  v79 += 8;
  Class v51 = v33;
  v33(v27, v32);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002FAF48, &qword_1002FAEE8);
  uint64_t v34 = v63;
  uint64_t v35 = Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v80 + 8);
  v80 += 8;
  v36(v31, v34);
  *(void *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_visualTranslationLocaleSubscription) = v35;
  swift_release();
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v37 = v73;
  Publisher.dropFirst(_:)();
  v55(v23, v37);
  uint64_t v38 = v74;
  Publisher<>.removeDuplicates()();
  char v39 = v24;
  uint64_t v40 = (uint64_t)v70;
  v52(v39, v38);
  id v84 = (id)static OS_dispatch_queue.main.getter();
  v82((char *)v40, 1, 1, v83);
  uint64_t v41 = v75;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v40, &qword_1002FAEF0);

  v51(v27, v41);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v42 = Publisher<>.sink(receiveValue:)();
  swift_release();
  v36(v31, v34);
  *(void *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_targetLocaleSubscription) = v42;
  swift_release();
  id v43 = [self defaultCenter];
  if (qword_1002EE668 != -1) {
    swift_once();
  }
  Class v44 = v64;
  NSNotificationCenter.publisher(for:object:)();

  id v84 = (id)static OS_dispatch_queue.main.getter();
  v82((char *)v40, 1, 1, v83);
  sub_1001D08B4(&qword_1002FAF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v45 = v66;
  id v46 = v67;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v40, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v45);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F2C78, &qword_1002F2BE8);
  uint64_t v47 = v69;
  uint64_t v48 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v46, v47);
  *(void *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_retranslateSubscription) = v48;
  return swift_release();
}

void sub_1001CADE8(unsigned __int8 *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    if (*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availability) != v5)
    {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availability) = v5;
      if (v5)
      {
        *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) = 1;
      }
      else
      {
        *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) = 0;
        if (*(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_pendingRetranslation) == 1)
        {
          *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_pendingRetranslation) = 0;
          uint64_t v8 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
          uint64_t v9 = swift_allocObject();
          swift_unknownObjectWeakInit();
          type metadata accessor for MainActor();
          swift_retain();
          uint64_t v10 = static MainActor.shared.getter();
          uint64_t v11 = (void *)swift_allocObject();
          void v11[2] = v10;
          void v11[3] = &protocol witness table for MainActor;
          void v11[4] = v9;
          swift_release();
          sub_100056780((uint64_t)v4, (uint64_t)&unk_1002FAFE8, (uint64_t)v11);
          swift_release();
        }
      }
      uint64_t v12 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
      type metadata accessor for MainActor();
      id v13 = v7;
      uint64_t v14 = static MainActor.shared.getter();
      uint64_t v15 = (void *)swift_allocObject();
      long long v15[2] = v14;
      v15[3] = &protocol witness table for MainActor;
      v15[4] = v13;
      sub_100056780((uint64_t)v4, (uint64_t)&unk_1002FAFE0, (uint64_t)v15);
      swift_release();
    }
  }
}

uint64_t sub_1001CB058()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  void *v1 = v0;
  v1[1] = sub_10013CCD8;
  return sub_1001CB598();
}

void sub_1001CB104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    if (*(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) == 1) {
      *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) = 0;
    }
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    id v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    swift_release();
    sub_100056780((uint64_t)v7, a4, (uint64_t)v13);
    swift_release();
  }
}

void sub_1001CB290()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    id v8 = *(id *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_conversation);

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();

    uint64_t v9 = type metadata accessor for Locale();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9) != 1)
    {
      sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F4110);
      return;
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for Locale();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F4110);
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    if (*(unsigned char *)(v11 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) == 1) {
      *(unsigned char *)(v11 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent) = 0;
    }
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v15 = static MainActor.shared.getter();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    void v16[4] = v14;
    swift_release();
    sub_100056780((uint64_t)v2, (uint64_t)&unk_1002FAF60, (uint64_t)v16);
    swift_release();
  }
}

uint64_t sub_1001CB598()
{
  v1[116] = v0;
  sub_100007620((uint64_t *)&unk_1002F4B80);
  v1[117] = swift_task_alloc();
  v1[118] = swift_task_alloc();
  v1[119] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Locale();
  v1[120] = v2;
  v1[121] = *(void *)(v2 - 8);
  v1[122] = swift_task_alloc();
  v1[123] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for LocalePair();
  v1[124] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[125] = v4;
  v1[126] = *(void *)(v4 + 64);
  v1[127] = swift_task_alloc();
  v1[128] = swift_task_alloc();
  v1[129] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[130] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[131] = v6;
  v1[132] = v5;
  return _swift_task_switch(sub_1001CB76C, v6, v5);
}

uint64_t sub_1001CB76C()
{
  uint64_t v25 = v0;
  if (*(unsigned char *)(v0[116] + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
    return v1(1);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    LocalePair.init(sourceLocale:targetLocale:)();
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[129];
    uint64_t v4 = v0[128];
    uint64_t v5 = v0[125];
    uint64_t v6 = v0[124];
    uint64_t v7 = type metadata accessor for Logger();
    v0[133] = sub_100011554(v7, (uint64_t)qword_10030E960);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v8(v4, v3, v6);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[128];
    uint64_t v13 = v0[125];
    uint64_t v14 = v0[124];
    if (v11)
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      sub_1001D08B4((unint64_t *)&unk_1002FAEC0, (void (*)(uint64_t))&type metadata accessor for LocalePair);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[115] = sub_100202FD4(v16, v17, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v18(v12, v14);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Checking error state check for pair: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v18(v0[128], v0[124]);
    }

    v0[134] = v18;
    uint64_t v19 = v0[127];
    uint64_t v20 = v0[125];
    uint64_t v21 = v0[124];
    v8(v19, v0[129], v21);
    unint64_t v22 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    v0[135] = v23;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 32))(v23 + v22, v19, v21);
    swift_retain();
    swift_asyncLet_begin();
    return _swift_asyncLet_get(v0 + 2, v0 + 136, sub_1001CBC0C, v0 + 92);
  }
}

uint64_t sub_1001CBC0C()
{
  return _swift_task_switch(sub_1001CBC28, *(void *)(v0 + 1048), *(void *)(v0 + 1056));
}

uint64_t sub_1001CBC28()
{
  uint64_t v53 = v0;
  uint64_t v1 = v0 + 16;
  switch(*(unsigned char *)(v0 + 1088))
  {
    case 3:
      uint64_t v51 = 0xD000000000000015;
      uint64_t v5 = *(void *)(v0 + 952);
      static UIContentUnavailableConfiguration.empty()();
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [self _systemImageNamed:v6];

      UIContentUnavailableConfiguration.image.setter();
      uint64_t v8 = self;
      id v9 = [v8 mainBundle];
      v55._object = (void *)0xE000000000000000;
      v10._countAndFlagsBits = 0x43495645445F4E4FLL;
      v10._object = (void *)0xEF454C5449545F45;
      v11._countAndFlagsBits = 0;
      v11._object = (void *)0xE000000000000000;
      v55._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v55);

      UIContentUnavailableConfiguration.text.setter();
      id v12 = [v8 mainBundle];
      v56._object = (void *)0xE000000000000000;
      v13._object = (void *)0x800000010025F9D0;
      v13._countAndFlagsBits = 0xD000000000000015;
      v14._countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      v56._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v56);

      UIContentUnavailableConfiguration.secondaryText.setter();
      id v15 = [v8 mainBundle];
      v57._object = (void *)0xE000000000000000;
      uint64_t v1 = v0 + 16;
      v16._countAndFlagsBits = 0x43495645445F4E4FLL;
      v16._object = (void *)0xEE004B4E494C5F45;
      v17._countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v57._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v57);

      uint64_t v18 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.button.modify();
      UIButton.Configuration.title.setter();
      v18(v0 + 840, 0);
      sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
      static UIColor.translateAccentColor.getter();
      uint64_t v19 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.button.modify();
      UIButton.Configuration.baseForegroundColor.setter();
      v19(v0 + 808, 0);
      UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
      sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
      swift_retain();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v20 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.buttonProperties.modify();
      UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
      v20(v0 + 776, 0);
      uint64_t v3 = type metadata accessor for UIContentUnavailableConfiguration();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v5, 0, 1, v3);
      uint64_t v21 = "missing offline asset";
      goto LABEL_6;
    case 4:
      uint64_t v22 = *(void *)(v0 + 984);
      uint64_t v23 = *(void *)(v0 + 976);
      uint64_t v24 = *(void *)(v0 + 968);
      uint64_t v25 = *(void *)(v0 + 960);
      uint64_t v26 = *(void *)(v0 + 952);
      LocalePair.sourceLocale.getter();
      LocalePair.targetLocale.getter();
      id v27 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v29 = Locale._bridgeToObjectiveC()().super.isa;
      id v30 = [v27 initWithSourceLocale:isa targetLocale:v29];

      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v31(v23, v25);
      v31(v22, v25);
      sub_1000CFA70(v30, v26);
      uint64_t v3 = type metadata accessor for UIContentUnavailableConfiguration();
      uint64_t v32 = v26;
      uint64_t v1 = v0 + 16;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v32, 0, 1, v3);
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      v52[0] = 0xD000000000000023;
      v52[1] = 0x8000000100263140;
      sub_1001D08B4((unint64_t *)&unk_1002FAEC0, (void (*)(uint64_t))&type metadata accessor for LocalePair);
      v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v33);
      swift_bridgeObjectRelease();

      unint64_t v4 = 0x8000000100263140;
      uint64_t v51 = 0xD000000000000023;
      break;
    case 5:
      uint64_t v34 = *(void *)(v0 + 952);
      sub_1000D050C();
      uint64_t v3 = type metadata accessor for UIContentUnavailableConfiguration();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v34, 0, 1, v3);
      uint64_t v51 = 0xD000000000000013;
      uint64_t v21 = "network unavailable";
LABEL_6:
      unint64_t v4 = (unint64_t)(v21 - 32) | 0x8000000000000000;
      break;
    default:
      uint64_t v2 = *(void *)(v0 + 952);
      uint64_t v3 = type metadata accessor for UIContentUnavailableConfiguration();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
      unint64_t v4 = 0xE800000000000000;
      uint64_t v51 = 0x726F727265206F6ELL;
      break;
  }
  uint64_t v35 = *(void *)(v0 + 944);
  sub_10000C3A4(*(void *)(v0 + 952), v35, (uint64_t *)&unk_1002F4B80);
  type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  int v38 = v37(v35, 1, v3);
  uint64_t v39 = *(void *)(v0 + 944);
  if (v38 == 1)
  {
    sub_10000B070(*(void *)(v0 + 944), (uint64_t *)&unk_1002F4B80);
    *(_OWORD *)(v0 + 696) = 0u;
    *(_OWORD *)(v0 + 712) = 0u;
    *(void *)(v0 + 728) = 0;
  }
  else
  {
    *(void *)(v0 + 720) = v3;
    *(void *)(v0 + 728) = &protocol witness table for UIContentUnavailableConfiguration;
    uint64_t v40 = sub_100014830((uint64_t *)(v0 + 696));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 32))(v40, v39, v3);
  }
  UIViewController.contentUnavailableConfiguration.setter();
  swift_bridgeObjectRetain();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v41, v42))
  {
    id v43 = (uint8_t *)swift_slowAlloc();
    v52[0] = swift_slowAlloc();
    *(_DWORD *)id v43 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 872) = sub_100202FD4(v51, v4, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Updated error state to: %{public}s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v44 = *(void *)(v0 + 936);
  uint64_t v45 = *(void *)(v0 + 928);
  sub_10000C3A4(*(void *)(v0 + 952), v44, (uint64_t *)&unk_1002F4B80);
  int v46 = v37(v44, 1, v3);
  sub_10000B070(v44, (uint64_t *)&unk_1002F4B80);
  uint64_t v47 = *(void **)(v45 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_materialView);
  if (v46 == 1)
  {
    uint64_t v48 = v0 + 880;
    [v47 setHidden:1];
    NSLocale v49 = sub_1001CC590;
  }
  else
  {
    uint64_t v48 = v0 + 656;
    [v47 setHidden:0];
    NSLocale v49 = sub_1001CC6D0;
  }
  return _swift_asyncLet_finish(v1, v0 + 1088, v49, v48);
}

uint64_t sub_1001CC590()
{
  return _swift_task_switch(sub_1001CC5AC, *(void *)(v0 + 1048), *(void *)(v0 + 1056));
}

uint64_t sub_1001CC5AC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[134];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[119];
  swift_release();
  sub_10000B070(v4, (uint64_t *)&unk_1002F4B80);
  v1(v2, v3);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(1);
}

uint64_t sub_1001CC6D0()
{
  return _swift_task_switch(sub_1001CC6EC, *(void *)(v0 + 1048), *(void *)(v0 + 1056));
}

uint64_t sub_1001CC6EC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[134];
  uint64_t v2 = v0[129];
  uint64_t v3 = v0[124];
  uint64_t v4 = v0[119];
  swift_release();
  sub_10000B070(v4, (uint64_t *)&unk_1002F4B80);
  v1(v2, v3);
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5(0);
}

uint64_t sub_1001CC810(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001CC8AC;
  return static LanguagesStatusService.languagePairPath(_:)(a2);
}

uint64_t sub_1001CC8AC(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001CC9AC, 0, 0);
}

uint64_t sub_1001CC9AC()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001CC9D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView];
  if (v3)
  {
    uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView];
    if (v4)
    {
      id v5 = v3;
      uint64_t v19 = v4;
      id v6 = [v19 image];
      if (v6)
      {
        uint64_t v7 = v6;
        [v6 size];

        sub_1001CCD78();
        [v5 setMinimumZoomScale:];
        id v8 = [v19 image];
        if (v8)
        {
          id v9 = v8;
          [v8 size];

          sub_1001CCD78();
          [v5 setZoomScale:];

LABEL_12:

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
  }
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030E960);
  uint64_t v19 = v1;
  Swift::String v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v11, v12))
  {

    goto LABEL_12;
  }
  uint64_t v13 = swift_slowAlloc();
  Swift::String v14 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v13 = 138543618;
  id v15 = *(void **)&v1[v2];
  if (v15) {
    id v16 = v15;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *Swift::String v14 = v15;

  *(_WORD *)(v13 + 12) = 2114;
  Swift::String v17 = *(void **)&v19[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView];
  if (v17) {
    id v18 = v17;
  }
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  v14[1] = v17;

  _os_log_impl((void *)&_mh_execute_header, v11, v12, "Can't set zoom scale because scrollView or imageView is nil; scrollView: %{public}@; imageView: %{public}@",
    (uint8_t *)v13,
    0x16u);
  sub_100007620((uint64_t *)&unk_1002F6DE0);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
}

void sub_1001CCD78()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 bounds];
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;

    v22.origin.x = v4;
    v22.origin.y = v6;
    v22.size.width = v8;
    v22.size.height = v10;
    CGRectGetWidth(v22);
    Swift::String v11 = (CGFloat *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport];
    if ((v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport + 32] & 1) == 0)
    {
      CGFloat v19 = v11[2];
      CGFloat v21 = v11[3];
      CGFloat v15 = *v11;
      CGFloat v17 = v11[1];
      goto LABEL_6;
    }
    id v12 = [v0 view];
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 bounds];
      CGFloat v15 = v14;
      CGFloat v17 = v16;
      CGFloat v19 = v18;
      CGFloat v21 = v20;

LABEL_6:
      v23.origin.x = v15;
      v23.origin.y = v17;
      v23.size.width = v19;
      v23.size.height = v21;
      CGRectGetHeight(v23);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1001CCEA8()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView);
    if (v2)
    {
      id v17 = v1;
      id v3 = v2;
      [v17 frame];
      double v5 = v4;
      double v7 = v6;
      [v3 bounds];
      if (v7 >= v9) {
        double v10 = 0.0;
      }
      else {
        double v10 = (v9 - v7) * 0.5;
      }
      if (v5 >= v8) {
        double v11 = 0.0;
      }
      else {
        double v11 = (v8 - v5) * 0.5;
      }
      uint64_t v12 = Notification.userInfo.getter();
      if (v12)
      {
        uint64_t v13 = v12;
        *(void *)&v18.origin.x = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v18.origin.y = v14;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v13 + 16) && (unint64_t v15 = sub_10020384C((uint64_t)v19), (v16 & 1) != 0))
        {
          sub_10000B170(*(void *)(v13 + 56) + 32 * v15, (uint64_t)&v20);
        }
        else
        {
          long long v20 = 0u;
          long long v21 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_10006E7AC((uint64_t)v19);
        if (*((void *)&v21 + 1))
        {
          type metadata accessor for CGRect(0);
          if (swift_dynamicCast())
          {
            [v3 setContentInset:v10, v11, v10 + CGRectGetHeight(v18), v11];
            [v3 contentInset];
            [v3 setScrollIndicatorInsets:];
          }
          else
          {
          }
        }
        else
        {

          sub_10000B070((uint64_t)&v20, (uint64_t *)&unk_1002F02C0);
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1001CD1B4()
{
  uint64_t v0 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  double v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  double v10 = (char *)&v23 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v13 = sub_10008CD5C();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 oppositeToLocale:isa];

  if (v15)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    char v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v16(v2, v7, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v16(v10, v2, v3);
      sub_1001A1818(0, 0, (uint64_t)v12, (uint64_t)v10);
      id v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v10, v3);
      return ((uint64_t (*)(char *, uint64_t))v17)(v12, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F4110);
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100011554(v19, (uint64_t)qword_10030E960);
  long long v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    CGRect v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGRect v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to get source and target locales for SELF logging for static image translation", v22, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
}

id sub_1001CD5A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StaticImageViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for StaticImageViewController()
{
  return self;
}

uint64_t sub_1001CD7C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  unsigned char v4[8] = v5;
  return _swift_task_switch(sub_1001CD860, v6, v5);
}

uint64_t sub_1001CD860()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    objc_super v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *objc_super v2 = v0;
    v2[1] = sub_1001CD954;
    return sub_1001CB598();
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1001CD954(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_1001D15FC, v4, v3);
}

uint64_t sub_1001CDA7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v10 = (char *)v29 - v9;
  Locale.languageIdentifier.getter();
  Locale.init(identifier:)();
  type metadata accessor for VisualTranslationService();
  int v11 = static VisualTranslationService.isOCRLocale(_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v10, v4);
  if (v11)
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v14 = *(void *)(v13 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(2, ObjectType, v14);
LABEL_11:
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030E960);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      int v31 = v11;
      v33[0] = v20;
      uint64_t v30 = v1;
      *(_DWORD *)uint64_t v19 = 136446210;
      v29[1] = v19 + 4;
      uint64_t v21 = Locale.identifier.getter();
      uint64_t v32 = sub_100202FD4(v21, v22, v33);
      uint64_t v2 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v12(v8, v4);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "OCR unavailable for source visual translation locale (%{public}s); clearing overlays and showing guidance",
        v19,
        0xCu);
      swift_arrayDestroy();
      LOBYTE(v11) = v31;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v12(v8, v4);
    }

    swift_retain();
    dispatch thunk of VisualTranslationObservable.removeAll()();
    swift_release();
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 8);
    char v24 = *(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 16);
    v33[0] = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText);
    v33[1] = v23;
    char v34 = v24;
    LOBYTE(v32) = 0;
    sub_100007620(&qword_1002FAF70);
    Binding.wrappedValue.setter();
    uint64_t v25 = v2 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 8))(2, 0, v27, v26);
      goto LABEL_11;
    }
  }
  return v11 & 1;
}

uint64_t sub_1001CDE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 105) = v19;
  *(void *)(v8 + 192) = v17;
  *(void *)(v8 + 200) = v18;
  *(unsigned char *)(v8 + 83) = a8;
  *(void *)(v8 + 176) = a5;
  *(void *)(v8 + 184) = a7;
  *(_DWORD *)(v8 + 84) = a6;
  *(void *)(v8 + 168) = a4;
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v8 + 208) = v9;
  *(void *)(v8 + 216) = *(void *)(v9 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for TaskHint();
  *(void *)(v8 + 232) = v10;
  *(void *)(v8 + 240) = *(void *)(v10 - 8);
  *(void *)(v8 + 248) = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F4110);
  *(void *)(v8 + 256) = swift_task_alloc();
  *(void *)(v8 + 264) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Locale();
  *(void *)(v8 + 272) = v11;
  *(void *)(v8 + 280) = *(void *)(v11 - 8);
  *(void *)(v8 + 288) = swift_task_alloc();
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  *(void *)(v8 + 320) = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  *(void *)(v8 + 336) = v12;
  *(void *)(v8 + 344) = *(void *)(v12 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 360) = static MainActor.shared.getter();
  uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 368) = v14;
  *(void *)(v8 + 376) = v13;
  return _swift_task_switch(sub_1001CE0F4, v14, v13);
}

uint64_t sub_1001CE0F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 384) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 136) = _swiftEmptyArrayStorage;
    uint64_t v9 = (uint64_t (*)(uint64_t, int, uint64_t, char))((char *)&dword_1002FAF88 + dword_1002FAF88);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1001CE2AC;
    char v3 = *(unsigned char *)(v0 + 83);
    int v4 = *(_DWORD *)(v0 + 84);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    return v9(v6, v4, v5, v3);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1001CE2AC(uint64_t a1)
{
  int v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[46];
    uint64_t v6 = v4[47];
    uint64_t v7 = sub_1001CEA6C;
  }
  else
  {
    v4[51] = a1;
    uint64_t v5 = v4[46];
    uint64_t v6 = v4[47];
    uint64_t v7 = sub_1001CE3D4;
  }
  return _swift_task_switch(v7, v5, v6);
}

void *sub_1001CE3D4()
{
  unint64_t v1 = *(void *)(v0 + 408);
  *(void *)(v0 + 136) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 416) = sub_100011554(*(void *)(v0 + 208), (uint64_t)qword_10030E960);
    unint64_t v2 = *(void *)(v0 + 136);
    swift_bridgeObjectRetain_n();
    char v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134217984;
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)(v0 + 144) = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Static image: will translate %ld observations", v5, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v7 = *(void *)(v0 + 384);
    uint64_t v8 = *(void *)(v0 + 344);
    uint64_t v53 = *(void *)(v0 + 336);
    uint64_t v9 = *(int **)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 272);
    uint64_t v13 = *(void *)(v0 + 280);
    int v51 = *(unsigned __int8 *)(v0 + 105);
    uint64_t v47 = *(void *)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 304);
    uint64_t v45 = *(void *)(v0 + 192);
    uint64_t v14 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_selfLoggingInvocation;
    swift_retain();
    sub_1001A1C14();
    swift_release();
    uint64_t v55 = *(void *)(v7 + v14);
    id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v15(v11, v45, v12);
    v15(v49, v47, v12);
    if (v51) {
      uint64_t v16 = 3;
    }
    else {
      uint64_t v16 = 4;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v10 + v9[14], 1, 1, v53);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32);
    v17(v10, v11, v12);
    uint64_t v52 = v17;
    v17(v10 + v9[5], v49, v12);
    *(void *)(v10 + v9[6]) = v16;
    *(void *)(v10 + v9[7]) = 3;
    *(void *)(v10 + v9[8]) = 0;
    *(unsigned char *)(v10 + v9[9]) = 0;
    uint64_t v18 = v10 + v9[10];
    *(void *)uint64_t v18 = 0;
    *(unsigned char *)(v18 + 8) = 1;
    *(unsigned char *)(v10 + v9[11]) = 0;
    *(void *)(v10 + v9[12]) = 0;
    uint64_t v19 = v10 + v9[13];
    *(void *)uint64_t v19 = 0;
    *(unsigned char *)(v19 + 8) = 1;
    sub_1001A1344(v10);
    double result = *(void **)(v55 + 16);
    if (result)
    {
      uint64_t v21 = *(void *)(v0 + 384);
      uint64_t v22 = *(void *)(v0 + 328);
      id v23 = [result invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000B68AC(v22);
      *(void *)(v0 + 424) = *(void *)(v21
                                        + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationOverlayModel);
      swift_beginAccess();
      unint64_t v24 = *(void *)(v0 + 136);
      if (v24 >> 62)
      {
        sub_10000B0CC(0, &qword_1002FAF90);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v25 = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10000B0CC(0, &qword_1002FAF90);
        uint64_t v25 = v24;
      }
      *(void *)(v0 + 432) = v25;
      uint64_t v26 = *(void *)(v0 + 288);
      uint64_t v27 = *(void *)(v0 + 296);
      uint64_t v29 = *(void *)(v0 + 272);
      uint64_t v28 = *(void *)(v0 + 280);
      uint64_t v30 = *(void *)(v0 + 264);
      uint64_t v31 = *(void *)(v0 + 240);
      uint64_t v48 = *(void *)(v0 + 248);
      uint64_t v50 = v25;
      uint64_t v44 = *(void *)(v0 + 256);
      uint64_t v46 = *(void *)(v0 + 232);
      uint64_t v32 = *(void **)(v0 + 184);
      swift_bridgeObjectRelease();
      id v33 = [v32 sourceLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v52(v30, v27, v29);
      char v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56);
      v34(v30, 0, 1, v29);
      id v35 = [v32 targetLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v52(v44, v26, v29);
      v34(v44, 0, 1, v29);
      (*(void (**)(uint64_t, void, uint64_t))(v31 + 104))(v48, enum case for TaskHint.app(_:), v46);
      uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)
                                                                                + async function pointer to dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:));
      uint64_t v36 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v36;
      *uint64_t v36 = v0;
      v36[1] = sub_1001CF268;
      uint64_t v37 = *(void *)(v0 + 352);
      uint64_t v39 = *(void *)(v0 + 256);
      uint64_t v38 = *(void *)(v0 + 264);
      uint64_t v40 = *(void *)(v0 + 248);
      return (void *)v54(v50, v38, v39, v40, v37);
    }
    else
    {
      __break(1u);
    }
    return result;
  }
  os_log_type_t v42 = *(void **)(v0 + 384);
  swift_bridgeObjectRelease();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v43 = *(uint64_t (**)(void))(v0 + 8);
  return (void *)v43();
}

void *sub_1001CEA6C()
{
  unint64_t v1 = &off_1002EE000;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  unint64_t v2 = (void *)(v0 + 136);
  sub_100011554(*(void *)(v0 + 208), (uint64_t)qword_10030E960);
  swift_errorRetain();
  char v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 152) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    unint64_t v2 = (void *)(v0 + 136);
    unint64_t v1 = &off_1002EE000;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to get text blocks from image: %@", v5, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_8;
    }
  }
  else if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    if (v1[185] != (uint64_t (*)())-1) {
      swift_once();
    }
    *(void *)(v0 + 416) = sub_100011554(*(void *)(v0 + 208), (uint64_t)qword_10030E960);
    unint64_t v8 = *(void *)(v0 + 136);
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134217984;
      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v12 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)(v0 + 144) = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Static image: will translate %ld observations", v11, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v13 = *(void *)(v0 + 384);
    uint64_t v14 = *(void *)(v0 + 328);
    uint64_t v59 = *(void *)(v0 + 344);
    uint64_t v60 = *(void *)(v0 + 336);
    uint64_t v16 = *(void *)(v0 + 312);
    id v15 = *(int **)(v0 + 320);
    uint64_t v17 = *(void *)(v0 + 272);
    uint64_t v18 = *(void *)(v0 + 280);
    int v58 = *(unsigned __int8 *)(v0 + 105);
    uint64_t v19 = *(void *)(v0 + 192);
    uint64_t v54 = *(void *)(v0 + 200);
    uint64_t v56 = *(void *)(v0 + 304);
    uint64_t v20 = OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_selfLoggingInvocation;
    swift_retain();
    sub_1001A1C14();
    swift_release();
    uint64_t v21 = *(void *)(v13 + v20);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v22(v16, v19, v17);
    v22(v56, v54, v17);
    if (v58) {
      uint64_t v23 = 3;
    }
    else {
      uint64_t v23 = 4;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v14 + v15[14], 1, 1, v60);
    uint64_t v24 = v16;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v25(v14, v24, v17);
    v25(v14 + v15[5], v56, v17);
    *(void *)(v14 + v15[6]) = v23;
    *(void *)(v14 + v15[7]) = 3;
    *(void *)(v14 + v15[8]) = 0;
    *(unsigned char *)(v14 + v15[9]) = 0;
    uint64_t v26 = v14 + v15[10];
    *(void *)uint64_t v26 = 0;
    *(unsigned char *)(v26 + 8) = 1;
    *(unsigned char *)(v14 + v15[11]) = 0;
    *(void *)(v14 + v15[12]) = 0;
    uint64_t v27 = v14 + v15[13];
    *(void *)uint64_t v27 = 0;
    *(unsigned char *)(v27 + 8) = 1;
    sub_1001A1344(v14);
    double result = *(void **)(v21 + 16);
    if (result)
    {
      uint64_t v29 = *(void *)(v0 + 384);
      uint64_t v30 = *(void *)(v0 + 328);
      id v31 = [result invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1000B68AC(v30);
      *(void *)(v0 + 424) = *(void *)(v29
                                        + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationOverlayModel);
      swift_beginAccess();
      unint64_t v32 = *(void *)(v0 + 136);
      if (v32 >> 62)
      {
        sub_10000B0CC(0, &qword_1002FAF90);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v33 = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10000B0CC(0, &qword_1002FAF90);
        uint64_t v33 = v32;
      }
      *(void *)(v0 + 432) = v33;
      uint64_t v34 = *(void *)(v0 + 288);
      uint64_t v35 = *(void *)(v0 + 296);
      uint64_t v37 = *(void *)(v0 + 272);
      uint64_t v36 = *(void *)(v0 + 280);
      uint64_t v38 = *(void *)(v0 + 264);
      uint64_t v39 = *(void *)(v0 + 240);
      uint64_t v55 = *(void *)(v0 + 248);
      uint64_t v57 = v33;
      uint64_t v52 = *(void *)(v0 + 256);
      uint64_t v53 = *(void *)(v0 + 232);
      uint64_t v40 = *(void **)(v0 + 184);
      swift_bridgeObjectRelease();
      id v41 = [v40 sourceLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v25(v38, v35, v37);
      os_log_type_t v42 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56);
      v42(v38, 0, 1, v37);
      id v43 = [v40 targetLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      v25(v52, v34, v37);
      v42(v52, 0, 1, v37);
      (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v55, enum case for TaskHint.app(_:), v53);
      uint64_t v61 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&async function pointer to dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)
                                                                                + async function pointer to dispatch thunk of VisualTranslationObservable.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:));
      uint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v44;
      *uint64_t v44 = v0;
      v44[1] = sub_1001CF268;
      uint64_t v45 = *(void *)(v0 + 352);
      uint64_t v47 = *(void *)(v0 + 256);
      uint64_t v46 = *(void *)(v0 + 264);
      uint64_t v48 = *(void *)(v0 + 248);
      return (void *)v61(v57, v46, v47, v48, v45);
    }
    else
    {
      __break(1u);
    }
    return result;
  }
  uint64_t v50 = *(void **)(v0 + 384);
  swift_bridgeObjectRelease();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v51 = *(uint64_t (**)(void))(v0 + 8);
  return (void *)v51();
}

uint64_t sub_1001CF268(uint64_t a1)
{
  char v3 = *(void **)v2;
  uint64_t v12 = *(void *)(*(void *)v2 + 264);
  uint64_t v4 = *(void *)(*(void *)v2 + 256);
  uint64_t v5 = *(void *)(*(void *)v2 + 248);
  uint64_t v6 = *(void *)(*(void *)v2 + 240);
  uint64_t v7 = *(void *)(*(void *)v2 + 232);
  v3[56] = a1;
  v3[57] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_10000B070(v4, (uint64_t *)&unk_1002F4110);
  sub_10000B070(v12, (uint64_t *)&unk_1002F4110);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v3[46];
    uint64_t v9 = v3[47];
    os_log_type_t v10 = sub_1001CF9D8;
  }
  else
  {
    uint64_t v8 = v3[46];
    uint64_t v9 = v3[47];
    os_log_type_t v10 = sub_1001CF484;
  }
  return _swift_task_switch(v10, v8, v9);
}

void sub_1001CF484()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void **)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 208);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v5);
  unint64_t v6 = *(void *)(v0 + 136);
  id v7 = v2;
  swift_bridgeObjectRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v12 = *(void *)(v0 + 384);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 120) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2112;
    uint64_t v13 = *(void **)(v12 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView);
    uint64_t v14 = *(void **)(v0 + 384);
    if (!v13)
    {

      __break(1u);
      return;
    }
    *(void *)(v0 + 160) = v13;
    id v15 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v13;

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Static image: did translate %ld observations in view %@", (uint8_t *)v10, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease_n();
  }
  unint64_t v17 = *(void *)(v0 + 448);
  (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v19 = *(void *)(v0 + 384);
  if (v18)
  {
    uint64_t v20 = *(void *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 8);
    char v21 = *(unsigned char *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 16);
    *(void *)(v0 + 88) = *(void *)(v19
                                     + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText);
    *(void *)(v0 + 96) = v20;
    *(unsigned char *)(v0 + 104) = v21;
    *(unsigned char *)(v0 + 82) = 1;
    sub_100007620(&qword_1002FAF70);
    Binding.wrappedValue.setter();
    swift_bridgeObjectRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 134217984;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v30 = *(void **)(v0 + 384);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Static image: did get %ld translations", v24, 0xCu);
      goto LABEL_18;
    }
    uint64_t v30 = *(void **)(v0 + 384);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 8);
    unsigned __int8 v27 = *(unsigned char *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText + 16);
    *(void *)(v0 + 64) = *(void *)(v19
                                     + OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController__hasTranslatedText);
    *(void *)(v0 + 72) = v26;
    *(_WORD *)(v0 + 80) = v27;
    sub_100007620(&qword_1002FAF70);
    Binding.wrappedValue.setter();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    BOOL v29 = os_log_type_enabled(v22, v28);
    uint64_t v30 = *(void **)(v0 + 384);
    if (v29)
    {
      id v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v28, "Static image: did not get any translation", v31, 2u);
LABEL_18:
      swift_slowDealloc();
    }
  }

  (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 352), *(void *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v32 = *(void (**)(void))(v0 + 8);
  v32();
}

uint64_t sub_1001CF9D8()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = *(void **)(v0 + 384);
    id v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)id v7 = 138412290;
    uint64_t v9 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 112) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to translate overlay model: %@", v7, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_1001CFC28(uint64_t a1, void *a2, uint64_t a3, void *a4, int a5)
{
  LODWORD(v45) = a5;
  uint64_t v46 = a1;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = a2;
  sub_1001FFC20((uint64_t)_swiftEmptyArrayStorage);
  id v13 = objc_allocWithZone((Class)VNImageRequestHandler);
  type metadata accessor for VNImageOption(0);
  sub_1001D08B4(&qword_1002EEB40, type metadata accessor for VNImageOption);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithCGImage:v12 orientation:a3 options:isa];

  id v16 = [objc_allocWithZone((Class)VNRecognizeDocumentsRequest) init];
  [v16 setMaximumCandidateCount:1];
  [v16 setRecognitionLevel:0];
  sub_100007620(&qword_1002EE8A0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1002488D0;
  id v18 = [a4 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v19 = Locale.identifier.getter();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)(v17 + 32) = v19;
  *(void *)(v17 + 40) = v21;
  Class v22 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setRecognitionLanguages:v22];

  [v16 setUsesAlternateLineGrouping:v45 & 1];
  [v16 setUsesLanguageCorrection:1];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10024CE10;
  *(void *)(v23 + 32) = v16;
  unint64_t v47 = v23;
  specialized Array._endMutation()();
  sub_10000B0CC(0, &qword_1002FAFA8);
  id v24 = v16;
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v47 = 0;
  LODWORD(v17) = [v15 performRequests:v25 error:&v47];

  if (!v17)
  {
    id v36 = (id)v47;
    unint64_t v37 = _convertNSErrorToError(_:)();

    swift_willThrow();
    unint64_t v47 = v37;
    swift_errorRetain();
    sub_100007620(&qword_1002FAFB0);
    CheckedContinuation.resume(throwing:)();

    swift_errorRelease();
    return;
  }
  id v26 = (id)v47;
  id v27 = [v24 results];
  if (v27)
  {
    os_log_type_t v28 = v27;
    sub_10000B0CC(0, &qword_1002FAFB8);
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      if (v30) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30)
      {
LABEL_5:
        id v44 = v24;
        id v45 = v15;
        if (v30 < 1)
        {
          __break(1u);
          goto LABEL_31;
        }
        uint64_t v31 = 0;
        do
        {
          if ((v29 & 0xC000000000000001) != 0) {
            id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v32 = *(id *)(v29 + 8 * v31 + 32);
          }
          uint64_t v33 = v32;
          ++v31;
          id v34 = [v32 blocksWithTypes:2 inRegion:0.0, 0.0, 1.0, 1.0, v44];
          sub_10000B0CC(0, &qword_1002FAFC0);
          unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1001D06A0(v35, (uint64_t (*)(uint64_t, void, unint64_t))sub_100227C4C);
        }
        while (v30 != v31);
        swift_bridgeObjectRelease_n();
        unint64_t v38 = v47;
        id v24 = v44;
        id v15 = v45;
LABEL_15:
        unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
        if (v38 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
          if (v39)
          {
LABEL_17:
            if (v39 >= 1)
            {
              for (uint64_t i = 0; i != v39; ++i)
              {
                id v41 = *(void **)(v38 + 8 * i + 32);
                self;
                if (swift_dynamicCastObjCClass())
                {
                  id v42 = v41;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                  if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  }
                  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                  specialized Array._endMutation()();
                }
              }
              swift_bridgeObjectRelease();
              id v43 = (void *)v47;
              goto LABEL_27;
            }
LABEL_31:
            __break(1u);
          }
        }
        else
        {
          uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v39) {
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        id v43 = _swiftEmptyArrayStorage;
LABEL_27:
        swift_bridgeObjectRelease();
        unint64_t v47 = (unint64_t)v43;
        sub_100007620(&qword_1002FAFB0);
        CheckedContinuation.resume(returning:)();
        goto LABEL_28;
      }
    }
    swift_bridgeObjectRelease_n();
    unint64_t v38 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_15;
  }
LABEL_28:
}

uint64_t sub_1001D02B8@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001D02CC()
{
  return sub_1000694BC();
}

uint64_t sub_1001D02E0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001D02F4()
{
  return sub_1000694BC();
}

uint64_t sub_1001D0308()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1001D0388(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v15 - v9, a1, v4);
  id v12 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v11(v8, (uint64_t)v10, v4);
  id v13 = v12;
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1001D0508()
{
  uint64_t v1 = type metadata accessor for LocalePair();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D0598(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocalePair() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100021B58;
  return sub_1001CC810(a1, v5);
}

uint64_t sub_1001D0670(unint64_t a1)
{
  return sub_1001D06A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1002275C0);
}

uint64_t sub_1001D0688(unint64_t a1)
{
  return sub_1001D06A0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_100227A18);
}

uint64_t sub_1001D06A0(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001D0874()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001D08AC(unsigned __int8 *a1)
{
}

uint64_t sub_1001D08B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1001D08FC(uint64_t a1)
{
  sub_1001CB104(a1, v1, (uint64_t)&unk_1002D26F8, (uint64_t)&unk_1002FAFD0);
}

void sub_1001D0934(uint64_t a1)
{
  sub_1001CB104(a1, v1, (uint64_t)&unk_1002D26D0, (uint64_t)&unk_1002FAFC8);
}

void sub_1001D096C()
{
}

uint64_t sub_1001D0980(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1001CD7C8(a1, v4, v5, v6);
}

uint64_t sub_1001D0A34@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001D0A5C()
{
  return sub_1000694BC();
}

uint64_t sub_1001D0A84@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1001D0AAC()
{
  return sub_1000694BC();
}

uint64_t sub_1001D0AD4()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 65) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v5 + v7 + 1;
  swift_unknownObjectRelease();
  swift_release();

  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_1001D0BE4(uint64_t a1)
{
  type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  int v6 = *(_DWORD *)(v1 + 48);
  uint64_t v7 = *(void *)(v1 + 56);
  char v8 = *(unsigned char *)(v1 + 64);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1001CDE34(a1, v11, v3, v4, v5, v6, v7, v8);
}

void sub_1001D0D54()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_image];
  *(void *)uint64_t v1 = 0;
  v1[8] = -1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_narrowViewport];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v2[32] = 1;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_scrollView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_imageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_currentTranslationView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_retranslateSubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_visualTranslationLocaleSubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_targetLocaleSubscription] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availability] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_availabilitySubscription] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_showErrorOnNextEvent] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_pendingRetranslation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25StaticImageViewController_translationHostingController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001D0E84(void *a1)
{
  id v2 = [a1 horizontalSizeClass];
  id v3 = [v1 traitCollection];
  id v4 = [v3 horizontalSizeClass];

  if (v2 == v4)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030E960);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Ignoring trait collection change: size classes are the same", v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_1001C759C();
  }
}

uint64_t sub_1001D0FDC(uint64_t a1, int a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 108) = a4;
  *(_DWORD *)(v4 + 104) = a2;
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = v5;
  return _swift_task_switch(sub_1001D1080, v6, v5);
}

uint64_t sub_1001D1080()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 108);
  int v3 = *(_DWORD *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = static MainActor.shared.getter();
  *(void *)(v0 + 72) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *(void *)(v6 + 16) = v4;
  *(_DWORD *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v1;
  *(unsigned char *)(v6 + 40) = v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002FAF98);
  void *v7 = v0;
  v7[1] = sub_1001D11BC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v5, &protocol witness table for MainActor, 0xD000000000000044, 0x8000000100263190, sub_1001D13C0, v6, v8);
}

uint64_t sub_1001D11BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_1001D1348;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_1001D12E0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1001D12E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1001D1348()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001D13C0(uint64_t a1)
{
  sub_1001CFC28(a1, *(void **)(v1 + 16), *(unsigned int *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_1001D13DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D141C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000496A4;
  return sub_1001CB058();
}

void sub_1001D14D4()
{
}

uint64_t sub_1001D14E0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D1520(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100021B58;
  return sub_1001C9338(a1, v4, v5, v6);
}

uint64_t sub_1001D15DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001D15EC()
{
  return swift_release();
}

void sub_1001D15F4()
{
}

uint64_t sub_1001D1608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, void *a8)
{
  uint64_t v10 = String.subscript.getter();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  swift_beginAccess();
  a8[2] = v10;
  a8[3] = v12;
  a8[4] = v14;
  a8[5] = v16;
  uint64_t result = swift_bridgeObjectRelease();
  *a7 = 1;
  return result;
}

unint64_t sub_1001D169C(unint64_t result, uint64_t a2)
{
  uint64_t v2 = result + a2;
  if (__OFADD__(result, a2))
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = result;
    uint64_t v5 = String.count.getter();
    uint64_t v6 = 0;
    if ((v4 & 0x8000000000000000) != 0 || v5 < v2 || a2 < 0) {
      return v6;
    }
    unint64_t v7 = String.index(_:offsetBy:)();
    uint64_t result = String.index(_:offsetBy:)();
    if (result >> 14 >= v7 >> 14)
    {
      String.subscript.getter();
      uint64_t v6 = static String._fromSubstring(_:)();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  __break(1u);
  return result;
}

id sub_1001D1780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);

  return v3;
}

id sub_1001D17C4()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator28SwipableCollectionViewLayout____lazy_storage___swipeController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator28SwipableCollectionViewLayout____lazy_storage___swipeController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator28SwipableCollectionViewLayout____lazy_storage___swipeController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UISwipeActionController) initWithSwipeActionHost:v0 style:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1001D18F8(void *a1, uint64_t a2, void *a3, char a4)
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for SwipableCollectionViewLayout();
  id v6 = a3;
  id v7 = v9.receiver;
  [super prepareForTransitionFromLayout:v6];
  id v8 = sub_1001D17C4();
  [v8 setSwipeEnabled:a4 & 1];
}

id sub_1001D1D4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SwipableCollectionViewLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for SwipableCollectionViewLayout()
{
  return self;
}

void sub_1001D20D0(char *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  id v4 = v3;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [v4 collectionView];
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = [v15 indexPathForItemAtPoint:a2, a3];
    if (v17)
    {
      id v18 = v17;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v19(v14, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1)
      {

        v19(a1, v14, v8);
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
    }
    sub_10000B070((uint64_t)v14, (uint64_t *)&unk_1002F4B60);
    IndexPath.init()();
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

id sub_1001D255C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  uint64_t v14 = (void *)a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  return v14;
}

void sub_1001D2768()
{
  id v1 = [v0 collectionView];
  if (v1)
  {
    objc_super v2 = v1;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v4 = [v2 cellForItemAtIndexPath:isa];

    if (v4 && (type metadata accessor for CardCollectionViewCell(), swift_dynamicCastClass()))
    {
      id v5 = v4;
      id v6 = sub_1000298E0();
      [v6 safeAreaInsets];
    }
    else
    {
      if (qword_1002EE660 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030EB28);
      id v8 = v4;
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        id v12 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 138412290;
        if (v4) {
          id v13 = v8;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v12 = v4;

        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unexpected cell in swipeable collection view: %@; returning zero insets",
          v11,
          0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_1001D2A80(uint64_t a1)
{
  sub_1001D2B4C(v1 + OBJC_IVAR____TtC17SequoiaTranslator28SwipableCollectionViewLayout_swipeDelegate, (uint64_t)v10);
  if (v11)
  {
    sub_1000295C0((uint64_t)v10, (uint64_t)v7);
    sub_10000B070((uint64_t)v10, &qword_1002FB078);
    uint64_t v3 = v8;
    uint64_t v4 = v9;
    sub_100029624(v7, v8);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8))(v1, a1, v3, v4);
    sub_10000AB68((uint64_t)v7);
  }
  else
  {
    sub_10000B070((uint64_t)v10, &qword_1002FB078);
    return 0;
  }
  return v5;
}

uint64_t sub_1001D2B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002FB078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D2BB4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001D2BEC()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

uint64_t sub_1001D2C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001D2C3C()
{
  return swift_release();
}

void sub_1001D2C54()
{
  unint64_t v0 = sub_1001D3030();

  sub_1001D3070(v0, "setNeedsLayout", "swizzled_setNeedsLayout");
}

uint64_t sub_1001D2C90()
{
  uint64_t result = sub_1001D2CB4();
  byte_10030EC20 = result & 1;
  return result;
}

uint64_t sub_1001D2CB4()
{
  id v0 = [self mainBundle];
  id v1 = [v0 bundleIdentifier];

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.utf8CString.getter();
    swift_bridgeObjectRelease();
    uint64_t has_internal_diagnostics = os_variant_has_internal_diagnostics();
    swift_release();
  }
  else
  {
    if (qword_1002EE640 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030EAC8);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Couldn't find bundle ID, falling back to isInternalBuild = false", v6, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  return has_internal_diagnostics;
}

uint64_t sub_1001D2E1C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Swizzler()
{
  return self;
}

id sub_1001D2E50()
{
  id v1 = v0;
  if ([self isMainThread]) {
    goto LABEL_9;
  }
  if (qword_1002EE5F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E9F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "DEBUG: CALayer -setNeedsLayout called off main thread", v5, 2u);
    swift_slowDealloc();
  }

  if (qword_1002EE6B8 != -1) {
    swift_once();
  }
  if (byte_10030EC20 == 1)
  {
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
LABEL_9:
    return [v1 swizzled_setNeedsLayout];
  }
  return result;
}

unint64_t sub_1001D3030()
{
  unint64_t result = qword_1002FB118;
  if (!qword_1002FB118)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002FB118);
  }
  return result;
}

void sub_1001D3070(uint64_t a1, const char *a2, const char *a3)
{
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  Method InstanceMethod = class_getInstanceMethod(ObjCClassFromMetadata, a2);
  if (InstanceMethod)
  {
    uint64_t v7 = InstanceMethod;
    Method v8 = class_getInstanceMethod(ObjCClassFromMetadata, a3);
    if (v8)
    {
      uint64_t v9 = v8;
      if (qword_1002EE640 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100011554(v10, (uint64_t)qword_10030EAC8);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136446722;
        uint64_t v14 = _typeName(_:qualified:)();
        sub_100202FD4(v14, v15, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2082;
        uint64_t v16 = Selector.description.getter();
        sub_100202FD4(v16, v17, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 22) = 2082;
        uint64_t v18 = Selector.description.getter();
        sub_100202FD4(v18, v19, &v20);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Swizzling %{public}s method %{public}s with %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      method_exchangeImplementations(v7, v9);
    }
  }
}

uint64_t destroy for SystemApertureButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for SystemApertureButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SystemApertureButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SystemApertureButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SystemApertureButton()
{
  return &type metadata for SystemApertureButton;
}

uint64_t sub_1001D3408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = self;
  id v11 = [self currentTraitCollection];
  id v12 = [v10 sbui_systemApertureTextButtonConfigurationCompatibleWithTraitCollection:v11];

  id v13 = v12;
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setTitle:v14];

  sub_10000B0CC(0, &qword_1002F4E38);
  static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  unint64_t v15 = (void *)swift_allocObject();
  long long v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v16 = UIButton.init(configuration:primaryAction:)();

  return v16;
}

uint64_t sub_1001D3600(uint64_t a1)
{
  return sub_1001D3408(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1001D360C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001D36FC();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001D3670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001D36FC();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1001D36D4()
{
}

unint64_t sub_1001D36FC()
{
  unint64_t result = qword_1002FB120;
  if (!qword_1002FB120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB120);
  }
  return result;
}

uint64_t sub_1001D3750()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001D3790()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

void destroy for TabBarLayoutView(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(void *)(a1 + 24) >= 6uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 56);
}

void *initializeWithCopy for TabBarLayoutView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  os_log_type_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_retain();
  swift_retain();
  if (v6 > 5)
  {
    a1[2] = *v5;
    a1[3] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  }
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v9 = a2[6];
  Method v8 = (void *)a2[7];
  a1[6] = v9;
  a1[7] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  id v10 = v8;
  return a1;
}

void *assignWithCopy for TabBarLayoutView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v4 = a1[3];
  unint64_t v5 = a2[3];
  if (v4 == 5)
  {
    if (v5 >= 6) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 5)
  {
    sub_1001A97AC((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v4 >= 5)
  {
    if (v5 >= 5)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_10016B80C((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v5 < 5)
  {
LABEL_11:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_12;
  }
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
LABEL_12:
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)a2[7];
  uint64_t v7 = (void *)a1[7];
  a1[7] = v6;
  id v8 = v6;

  return a1;
}

void *assignWithTake for TabBarLayoutView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  unint64_t v6 = a2[3];
  if (v5 != 5)
  {
    if (v6 == 5)
    {
      sub_1001A97AC((uint64_t)(a1 + 2));
    }
    else if (v5 >= 5)
    {
      if (v6 >= 5)
      {
        a1[2] = *v4;
        a1[3] = v6;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_10016B80C((uint64_t)(a1 + 2));
    }
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
LABEL_8:
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  a1[6] = a2[6];
  swift_release();
  uint64_t v7 = (void *)a1[7];
  a1[7] = a2[7];

  return a1;
}

uint64_t getEnumTagSinglePayload for TabBarLayoutView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TabBarLayoutView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabBarLayoutView()
{
  return &type metadata for TabBarLayoutView;
}

uint64_t sub_1001D3BC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001D3BE4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v43 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F1058);
  __chkstk_darwin(v3 - 8);
  id v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F7560);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620(&qword_1002FB128);
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100007620(&qword_1002FB130);
  __chkstk_darwin(v39);
  id v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100007620(&qword_1002FB138);
  __chkstk_darwin(v40);
  NSString v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MainActor();
  sub_1001D66F0(v1);
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  long long v17 = v1[1];
  *(_OWORD *)(v16 + 32) = *v1;
  *(_OWORD *)(v16 + 48) = v17;
  long long v18 = v1[3];
  *(_OWORD *)(v16 + 64) = v1[2];
  *(_OWORD *)(v16 + 80) = v18;
  sub_1001D66F0(v1);
  uint64_t v19 = static MainActor.shared.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  long long v21 = v2[1];
  *(_OWORD *)(v20 + 32) = *v2;
  *(_OWORD *)(v20 + 48) = v21;
  long long v22 = v2[3];
  *(_OWORD *)(v20 + 64) = v2[2];
  *(_OWORD *)(v20 + 80) = v22;
  Binding.init(get:set:)();
  long long v45 = v47;
  long long v46 = v48;
  id v44 = v2;
  sub_100007620(&qword_1002FB140);
  sub_10000CA98();
  sub_100014894(&qword_1002FB148, &qword_1002FB140);
  TabView.init(selection:content:)();
  long long v23 = v2[1];
  long long v47 = *v2;
  long long v48 = v23;
  sub_100007620(&qword_1002FA200);
  Binding.wrappedValue.getter();
  uint64_t v24 = *((void *)&v45 + 1);
  if (*((void *)&v45 + 1) == 5 || (sub_10005477C(v45, *((unint64_t *)&v45 + 1)), v24 != 1))
  {
    uint64_t v28 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v7, 1, 1, v28);
  }
  else
  {
    uint64_t v25 = enum case for ColorScheme.dark(_:);
    uint64_t v26 = type metadata accessor for ColorScheme();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v7, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
  }
  sub_10000C3A4((uint64_t)v7, (uint64_t)&v12[*(int *)(v39 + 36)], &qword_1002F7560);
  uint64_t v29 = v41;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v10, v41);
  sub_10000B070((uint64_t)v7, &qword_1002F7560);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v32 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = (uint64_t)v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v42, v31, v32);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  unint64_t v35 = (uint64_t *)&v14[*(int *)(v40 + 36)];
  uint64_t v36 = sub_100007620(&qword_1002FB150);
  sub_10000C3A4(v34, (uint64_t)v35 + *(int *)(v36 + 28), &qword_1002F1058);
  uint64_t *v35 = KeyPath;
  sub_10000C3A4((uint64_t)v12, (uint64_t)v14, &qword_1002FB130);
  sub_10000B070(v34, &qword_1002F1058);
  sub_10000B070((uint64_t)v12, &qword_1002FB130);
  return sub_10001323C((uint64_t)v14, v43, &qword_1002FB138);
}

uint64_t sub_1001D41CC@<X0>(void *a1@<X8>)
{
  sub_100007620(&qword_1002FA200);
  uint64_t result = Binding.wrappedValue.getter();
  uint64_t v3 = v5;
  uint64_t v4 = v6;
  if (v6 == 5)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001D4228(uint64_t a1)
{
  return Binding.wrappedValue.setter();
}

uint64_t sub_1001D4280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v156 = a2;
  uint64_t v152 = sub_100007620(&qword_1002FB158);
  __chkstk_darwin(v152);
  uint64_t v153 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100007620(&qword_1002FB160);
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v145 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100007620(&qword_1002FB168);
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  int v146 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_100007620(&qword_1002FB170);
  __chkstk_darwin(v144);
  uint64_t v149 = (uint64_t)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100007620(&qword_1002FB178);
  uint64_t v7 = __chkstk_darwin(v143);
  uint64_t v155 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v154 = (uint64_t)&v110 - v9;
  uint64_t v139 = sub_100007620(&qword_1002FB180);
  __chkstk_darwin(v139);
  uint64_t v140 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100007620(&qword_1002FB188);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v132 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100007620(&qword_1002FB190);
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v133 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100007620(&qword_1002FB198);
  __chkstk_darwin(v131);
  uint64_t v136 = (uint64_t)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100007620(&qword_1002FB1A0);
  uint64_t v14 = __chkstk_darwin(v130);
  uint64_t v163 = (uint64_t)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v162 = (uint64_t)&v110 - v16;
  uint64_t v124 = sub_100007620(&qword_1002FB1A8);
  __chkstk_darwin(v124);
  uint64_t v125 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for ImageTranslationView();
  __chkstk_darwin(v114);
  uint64_t v111 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100007620(&qword_1002FB1B0);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  unint64_t v113 = (char *)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100007620(&qword_1002FB1B8);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v116 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100007620(&qword_1002FB1C0);
  __chkstk_darwin(v112);
  uint64_t v122 = (uint64_t)&v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100007620(&qword_1002FB1C8);
  __chkstk_darwin(v115);
  uint64_t v123 = (char *)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v157 = sub_100007620(&qword_1002FB1D0);
  uint64_t v128 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v121 = (uint64_t)&v110 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002FB1D8);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v141 = (uint64_t)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v161 = (uint64_t)&v110 - v27;
  uint64_t v28 = sub_100007620(&qword_1002F7560);
  __chkstk_darwin(v28 - 8);
  uint64_t v127 = (char *)&v110 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100007620(&qword_1002FB1E0) - 8;
  __chkstk_darwin(v159);
  uint64_t v31 = (char *)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100007620(&qword_1002FB1E8);
  uint64_t v158 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v110 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = (char *)sub_100007620(&qword_1002FB1F0);
  *(void *)&long long v126 = *((void *)v129 - 1);
  __chkstk_darwin(v129);
  uint64_t v36 = (char *)&v110 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100007620(&qword_1002FB1F8);
  uint64_t v38 = v37 - 8;
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v110 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620(&qword_1002FB200);
  uint64_t v42 = v41 - 8;
  uint64_t v43 = __chkstk_darwin(v41);
  long long v45 = (char *)&v110 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v165 = (uint64_t)&v110 - v46;
  uint64_t v142 = a1;
  uint64_t v166 = a1;
  type metadata accessor for TranslateContentView();
  sub_1001D69EC(&qword_1002FA188, (void (*)(uint64_t))type metadata accessor for TranslateContentView);
  NavigationStack.init<>(root:)();
  *(void *)&long long v164 = sub_100007620(&qword_1002FB208);
  sub_100014894(&qword_1002FB210, &qword_1002FB1E8);
  unint64_t v160 = sub_1001D6824();
  View.tabItem<A>(_:)();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v34, v32);
  uint64_t v47 = v126;
  uint64_t v48 = (uint64_t)v129;
  (*(void (**)(char *, char *, char *))(v126 + 16))(v31, v36, v129);
  uint64_t v49 = &v31[*(int *)(v159 + 44)];
  *(void *)uint64_t v49 = 0;
  *((void *)v49 + 1) = 0;
  sub_10000C3A4((uint64_t)v31, (uint64_t)v40, &qword_1002FB1E0);
  uint64_t v50 = &v40[*(int *)(v38 + 44)];
  *(void *)uint64_t v50 = 0;
  *((void *)v50 + 1) = 0;
  sub_10000B070((uint64_t)v31, &qword_1002FB1E0);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v48);
  uint64_t v51 = (uint64_t)v127;
  uint64_t v52 = type metadata accessor for ColorScheme();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = 1;
  uint64_t v158 = *(void *)(v53 + 56);
  uint64_t v159 = v53 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v158)(v51, 1, 1, v52);
  uint64_t v55 = *(int *)(v42 + 44);
  uint64_t v56 = v161;
  sub_10000C3A4(v51, (uint64_t)&v45[v55], &qword_1002F7560);
  sub_10000C3A4((uint64_t)v40, (uint64_t)v45, &qword_1002FB1F8);
  sub_10000B070(v51, &qword_1002F7560);
  sub_10000B070((uint64_t)v40, &qword_1002FB1F8);
  uint64_t v129 = v45;
  sub_10001323C((uint64_t)v45, v165, &qword_1002FB200);
  if (sub_10000619C())
  {
    uint64_t v169 = &type metadata for TranslateFeatures;
    unint64_t v170 = sub_10000AB14();
    LOBYTE(v167) = 0;
    char v57 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v167);
    if (v57)
    {
      uint64_t v58 = v111;
      sub_10010D20C(v111);
      sub_100007620(&qword_1002F36E0);
      type metadata accessor for ToolbarPlacement();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1002488D0;
      static ToolbarPlacement.tabBar.getter();
      uint64_t v59 = sub_1001D69EC(&qword_1002FA1A0, (void (*)(uint64_t))type metadata accessor for ImageTranslationView);
      uint64_t v60 = v113;
      uint64_t v61 = v114;
      View.toolbarBackground(_:for:)();
      swift_bridgeObjectRelease();
      sub_1001D698C(v58, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      uint64_t v167 = v61;
      uint64_t v168 = v59;
      swift_getOpaqueTypeConformance2();
      uint64_t v62 = v116;
      uint64_t v63 = v118;
      View.tabItem<A>(_:)();
      (*(void (**)(char *, uint64_t))(v117 + 8))(v60, v63);
      uint64_t v64 = v119;
      uint64_t v65 = (uint64_t)v125;
      uint64_t v66 = v120;
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v125, v62, v120);
      uint64_t v67 = *(int *)(v124 + 36);
      long long v126 = xmmword_10024FEC0;
      *(_OWORD *)(v65 + v67) = xmmword_10024FEC0;
      uint64_t v68 = v122;
      sub_10000C3A4(v65, v122, &qword_1002FB1A8);
      *(_OWORD *)(v68 + *(int *)(v112 + 36)) = v126;
      sub_10000B070(v65, &qword_1002FB1A8);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v66);
      (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v51, enum case for ColorScheme.dark(_:), v52);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v158)(v51, 0, 1, v52);
      uint64_t v69 = (uint64_t)v123;
      sub_10000C3A4(v51, (uint64_t)&v123[*(int *)(v115 + 36)], &qword_1002F7560);
      sub_10000C3A4(v68, v69, &qword_1002FB1C0);
      sub_10000B070(v51, &qword_1002F7560);
      sub_10000B070(v68, &qword_1002FB1C0);
      uint64_t v70 = static Color.appBackgroundColor.getter();
      LOBYTE(v65) = static Edge.Set.all.getter();
      uint64_t v71 = static Alignment.center.getter();
      uint64_t v73 = v72;
      uint64_t v74 = v121;
      sub_10000C3A4(v69, v121, &qword_1002FB1C8);
      uint64_t v75 = v74 + *(int *)(v157 + 36);
      *(void *)uint64_t v75 = v70;
      *(unsigned char *)(v75 + 8) = v65;
      *(void *)(v75 + 16) = v71;
      *(void *)(v75 + 24) = v73;
      sub_10000B070(v69, &qword_1002FB1C8);
      sub_10001323C(v74, v56, &qword_1002FB1D0);
      uint64_t v54 = 0;
    }
  }
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v128 + 56))(v56, v54, 1, v157);
  __chkstk_darwin(v76);
  uint64_t v77 = v142;
  *(&v110 - 2) = v142;
  sub_100007620(&qword_1002FB220);
  uint64_t v78 = type metadata accessor for ConversationView();
  uint64_t v79 = sub_1001D69EC(&qword_1002FA1B8, (void (*)(uint64_t))type metadata accessor for ConversationView);
  uint64_t v167 = v78;
  uint64_t v168 = v79;
  swift_getOpaqueTypeConformance2();
  uint64_t v80 = v132;
  NavigationStack.init<>(root:)();
  sub_100014894(&qword_1002FB228, &qword_1002FB188);
  uint64_t v81 = v51;
  id v82 = v133;
  uint64_t v83 = v135;
  View.tabItem<A>(_:)();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v80, v83);
  uint64_t v84 = v137;
  uint64_t v85 = (uint64_t)v140;
  uint64_t v86 = v138;
  (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v140, v82, v138);
  uint64_t v87 = *(int *)(v139 + 36);
  long long v157 = xmmword_10024D860;
  *(_OWORD *)(v85 + v87) = xmmword_10024D860;
  uint64_t v88 = v136;
  sub_10000C3A4(v85, v136, &qword_1002FB180);
  *(_OWORD *)(v88 + *(int *)(v131 + 36)) = v157;
  sub_10000B070(v85, &qword_1002FB180);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v82, v86);
  id v89 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v158;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v158)(v81, 1, 1, v52);
  uint64_t v90 = v163;
  sub_10000C3A4(v81, v163 + *(int *)(v130 + 36), &qword_1002F7560);
  sub_10000C3A4(v88, v90, &qword_1002FB198);
  sub_10000B070(v81, &qword_1002F7560);
  sub_10000B070(v88, &qword_1002FB198);
  uint64_t v91 = sub_10001323C(v90, v162, &qword_1002FB1A0);
  __chkstk_darwin(v91);
  *(&v110 - 2) = v77;
  type metadata accessor for FavoritesView();
  sub_1001D69EC(&qword_1002FA1C0, (void (*)(uint64_t))type metadata accessor for FavoritesView);
  char v92 = v145;
  NavigationView.init(content:)();
  sub_100014894(&qword_1002FB230, &qword_1002FB160);
  uint64_t v93 = v146;
  uint64_t v94 = v148;
  View.tabItem<A>(_:)();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v92, v94);
  uint64_t v95 = v150;
  uint64_t v96 = (uint64_t)v153;
  uint64_t v97 = v151;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v153, v93, v151);
  uint64_t v98 = *(int *)(v152 + 36);
  long long v164 = xmmword_100248B00;
  *(_OWORD *)(v96 + v98) = xmmword_100248B00;
  uint64_t v99 = v149;
  sub_10000C3A4(v96, v149, &qword_1002FB158);
  *(_OWORD *)(v99 + *(int *)(v144 + 36)) = v164;
  sub_10000B070(v96, &qword_1002FB158);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v93, v97);
  v89(v81, 1, 1, v52);
  uint64_t v100 = (uint64_t)v155;
  sub_10000C3A4(v81, (uint64_t)&v155[*(int *)(v143 + 36)], &qword_1002F7560);
  sub_10000C3A4(v99, v100, &qword_1002FB170);
  sub_10000B070(v81, &qword_1002F7560);
  sub_10000B070(v99, &qword_1002FB170);
  uint64_t v101 = v154;
  sub_10001323C(v100, v154, &qword_1002FB178);
  uint64_t v102 = (uint64_t)v129;
  sub_10000C3A4(v165, (uint64_t)v129, &qword_1002FB200);
  uint64_t v103 = v161;
  uint64_t v104 = v141;
  sub_10000C3A4(v161, v141, &qword_1002FB1D8);
  uint64_t v106 = v162;
  uint64_t v105 = v163;
  sub_10000C3A4(v162, v163, &qword_1002FB1A0);
  sub_10000C3A4(v101, v100, &qword_1002FB178);
  uint64_t v107 = v156;
  sub_10000C3A4(v102, v156, &qword_1002FB200);
  CGFloat v108 = (int *)sub_100007620(&qword_1002FB238);
  sub_10000C3A4(v104, v107 + v108[12], &qword_1002FB1D8);
  sub_10000C3A4(v105, v107 + v108[16], &qword_1002FB1A0);
  sub_10000C3A4(v100, v107 + v108[20], &qword_1002FB178);
  sub_10000B070(v101, &qword_1002FB178);
  sub_10000B070(v106, &qword_1002FB1A0);
  sub_10000B070(v103, &qword_1002FB1D8);
  sub_10000B070(v165, &qword_1002FB200);
  sub_10000B070(v100, &qword_1002FB178);
  sub_10000B070(v105, &qword_1002FB1A0);
  sub_10000B070(v104, &qword_1002FB1D8);
  return sub_10000B070(v102, &qword_1002FB200);
}

uint64_t sub_1001D59F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for TranslateContentView() + 20)) = KeyPath;
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1001D69EC(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  swift_retain();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001D5AB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v26 = sub_100007620(&qword_1002EED48);
  __chkstk_darwin(v26);
  uint64_t v25 = (uint64_t)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002EED50);
  __chkstk_darwin(v24);
  uint64_t v20 = (uint64_t)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007620(&qword_1002EED58);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002EED60);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002EED68);
  __chkstk_darwin(v23);
  uint64_t v19 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002EED70);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002F4FC8);
  __chkstk_darwin(v22);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002EEDA0);
  sub_10000C5C4();
  Label.init(title:icon:)();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v18 = v9;
  v15(v5, v12, v9);
  swift_storeEnumTagMultiPayload();
  sub_100007620(&qword_1002EED40);
  sub_100014894(&qword_1002EED90, &qword_1002EED70);
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  _ConditionalContent<>.init(storage:)();
  sub_10000C3A4((uint64_t)v7, v20, &qword_1002EED60);
  swift_storeEnumTagMultiPayload();
  sub_100007620(&qword_1002EED38);
  sub_10000C1E0();
  sub_10000C2CC();
  uint64_t v16 = (uint64_t)v19;
  _ConditionalContent<>.init(storage:)();
  sub_10000B070((uint64_t)v7, &qword_1002EED60);
  sub_10000C3A4(v16, v25, &qword_1002EED68);
  swift_storeEnumTagMultiPayload();
  sub_10000C164();
  _ConditionalContent<>.init(storage:)();
  sub_10000B070(v16, &qword_1002EED68);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  sub_1001D68F4(&qword_1002F4FC0, &qword_1002F4FC8, (void (*)(void))sub_10000C164);
  View.accessibilityIdentifier(_:)();
  return sub_10000B070((uint64_t)v14, &qword_1002F4FC8);
}

uint64_t sub_1001D5FBC()
{
  return sub_1001D64C8(1);
}

uint64_t sub_1001D5FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F1068);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (int *)type metadata accessor for ConversationView();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void **)(a1 + 56);
  uint64_t *v5 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v8 + v6[7]) = swift_getKeyPath();
  sub_100007620(&qword_1002F3598);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SharedTranslationOptions();
  sub_1001D69EC(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  id v10 = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  *uint64_t v8 = EnvironmentObject.init()();
  v8[1] = v11;
  type metadata accessor for SceneContext();
  sub_1001D69EC((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  v8[2] = EnvironmentObject.init()();
  v8[3] = v12;
  sub_10001323C((uint64_t)v5, (uint64_t)v8 + v6[6], &qword_1002F1068);
  uint64_t v13 = (uint64_t *)((char *)v8 + v6[8]);
  type metadata accessor for ConversationViewModel();
  sub_1001D69EC(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  *uint64_t v13 = ObservedObject.init(wrappedValue:)();
  v13[1] = v14;
  uint64_t v15 = (uint64_t *)((char *)v8 + v6[9]);
  type metadata accessor for DeviceHelper();
  sub_1001D69EC(&qword_1002F4A68, (void (*)(uint64_t))type metadata accessor for DeviceHelper);
  uint64_t *v15 = ObservedObject.init(wrappedValue:)();
  v15[1] = v16;
  uint64_t v17 = (uint64_t *)((char *)v8 + v6[10]);
  type metadata accessor for LanguagesService();
  sub_1001D69EC((unint64_t *)&unk_1002FCA70, (void (*)(uint64_t))&type metadata accessor for LanguagesService);
  *uint64_t v17 = ObservedObject.init(wrappedValue:)();
  v17[1] = v18;
  uint64_t v19 = (uint64_t *)((char *)v8 + v6[11]);
  type metadata accessor for TranslationSession_RD();
  sub_1001D69EC(&qword_1002F4A70, (void (*)(uint64_t))type metadata accessor for TranslationSession_RD);
  *uint64_t v19 = ObservedObject.init(wrappedValue:)();
  v19[1] = v20;
  uint64_t v21 = (char *)v8 + v6[12];
  LOBYTE(v26) = 0;
  State.init(wrappedValue:)();
  uint64_t v22 = *((void *)&v27 + 1);
  char *v21 = v27;
  *((void *)v21 + 1) = v22;
  uint64_t v23 = v6[13];
  uint64_t v26 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)v8 + v23) = v27;
  LocalizedStringKey.init(stringLiteral:)();
  sub_1001D69EC(&qword_1002FA1B8, (void (*)(uint64_t))type metadata accessor for ConversationView);
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1001D698C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConversationView);
}

uint64_t sub_1001D64A8()
{
  return sub_1001D64C8(2);
}

uint64_t sub_1001D64C8(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F4FC8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B6C8(0, a1, (uint64_t)v4);
  sub_1001D68F4(&qword_1002F4FC0, &qword_1002F4FC8, (void (*)(void))sub_10000C164);
  View.accessibilityIdentifier(_:)();
  return sub_10000B070((uint64_t)v4, &qword_1002F4FC8);
}

uint64_t sub_1001D65C0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1[6] + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
  uint64_t v4 = *(void *)(a1[7] + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session);
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)((char *)a2 + *(int *)(type metadata accessor for FavoritesView() + 32)) = KeyPath;
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  *a2 = v5;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v6;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_1001D6694()
{
  return sub_1001D64C8(3);
}

uint64_t sub_1001D66B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D3BE4(a1);
}

void *sub_1001D66F0(void *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = (void *)a1[7];
  swift_retain();
  swift_retain();
  sub_1001ACAF0(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  id v5 = v4;
  return a1;
}

uint64_t sub_1001D6778@<X0>(void *a1@<X8>)
{
  return sub_1001D41CC(a1);
}

uint64_t sub_1001D6788()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56) >= 6uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1001D6800(uint64_t a1)
{
  return sub_1001D4228(a1);
}

uint64_t sub_1001D680C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D4280(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001D681C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001D59F0(a1);
}

unint64_t sub_1001D6824()
{
  unint64_t result = qword_1002FB218;
  if (!qword_1002FB218)
  {
    sub_100007928(&qword_1002FB208);
    sub_1001D68F4(&qword_1002F4FC0, &qword_1002F4FC8, (void (*)(void))sub_10000C164);
    sub_1001D69EC((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB218);
  }
  return result;
}

uint64_t sub_1001D68F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    sub_10000C2CC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D6974@<X0>(uint64_t a1@<X8>)
{
  return sub_1001D5FE4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001D697C@<X0>(void *a1@<X8>)
{
  return sub_1001D65C0(*(void **)(v1 + 16), a1);
}

uint64_t sub_1001D698C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001D69EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001D6A38()
{
  unint64_t result = qword_1002FB240;
  if (!qword_1002FB240)
  {
    sub_100007928(&qword_1002FB138);
    sub_1001D6AD8();
    sub_100014894(&qword_1002FB258, &qword_1002FB150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB240);
  }
  return result;
}

unint64_t sub_1001D6AD8()
{
  unint64_t result = qword_1002FB248;
  if (!qword_1002FB248)
  {
    sub_100007928(&qword_1002FB130);
    sub_100014894(&qword_1002FB250, &qword_1002FB128);
    sub_100014894(&qword_1002FA288, &qword_1002F7558);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB248);
  }
  return result;
}

id sub_1001D6B9C()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17TempOptInReprompt_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for TempOptInReprompt();
  [super initWithTitle:v1];

  id v3 = v2;
  id result = [v3 view];
  if (result)
  {
    id v5 = result;
    NSString v6 = String._bridgeToObjectiveC()();
    uint64_t v7 = self;
    id v8 = [v7 colorNamed:v6];

    [v5 setTintColor:v8];
    id v9 = [self boldButton];
    id v10 = [v3 headerView];
    uint64_t v11 = self;
    id v12 = [v11 mainBundle];
    v13._countAndFlagsBits = 0xD00000000000001BLL;
    v27._countAndFlagsBits = 0xD000000000000035;
    v27._object = (void *)0x80000001002634B0;
    v13._object = (void *)0x8000000100263490;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v27);

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setDetailText:v15];

    id v16 = [v3 buttonTray];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v16 setPrivacyLinkForBundles:isa];

    [v9 addTarget:v3 action:"continueButtonPressed" forControlEvents:0x2000];
    id v18 = [v11 mainBundle];
    v28._countAndFlagsBits = 0xD000000000000015;
    v28._object = (void *)0x8000000100260BB0;
    v19._countAndFlagsBits = 0x45554E49544E4F43;
    v19._object = (void *)0xE800000000000000;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v28);

    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v9 setTitle:v21 forState:0];

    id v22 = [v7 whiteColor];
    [v9 setTitleColor:v22 forState:0];

    id v23 = v9;
    NSString v24 = String._bridgeToObjectiveC()();
    [v23 setAccessibilityIdentifier:v24];

    id v25 = [v3 buttonTray];
    [v25 addButton:v23];

    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D70B4()
{
  uint64_t v0 = sub_100007620(&qword_1002F8F48);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F8FB0);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC17SequoiaTranslator19OnBoardingPresenter_presentationContinuation;
    swift_beginAccess();
    sub_100180AB8(v8, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0))
    {
      sub_100180B20((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
      sub_100180B20((uint64_t)v6);
      CheckedContinuation.resume(returning:)();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1001D7324()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TempOptInReprompt();
  [super dealloc];
}

uint64_t type metadata accessor for TempOptInReprompt()
{
  return self;
}

unint64_t sub_1001D738C()
{
  unint64_t result = qword_1002FBDA0;
  if (!qword_1002FBDA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002FBDA0);
  }
  return result;
}

uint64_t sub_1001D73CC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  String.index(before:)();
  return String.subscript.getter();
}

uint64_t sub_1001D744C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v45 = type metadata accessor for CharacterSet();
  uint64_t v4 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  NSString v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v46 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v47 = (uint64_t)&v44 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v44 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v44 - v15;
  uint64_t v17 = Locale.ltIdentifier.getter();
  uint64_t v19 = v18;
  if (v17 == Locale.ltIdentifier.getter() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    sub_1000B63E4(a1, (uint64_t)v16);
    sub_1000B63E4(v1, (uint64_t)v14);
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000B63E4(a1, (uint64_t)v16);
    sub_1000B63E4(v1, (uint64_t)v14);
    if ((v22 & 1) == 0)
    {
      sub_1001E6278((uint64_t)v14);
      sub_1001E6278((uint64_t)v16);
      uint64_t v23 = v47;
      sub_1000B63E4(a1, v47);
      uint64_t v24 = v46;
      sub_1000B63E4(v2, v46);
      char v25 = 0;
      goto LABEL_20;
    }
  }
  uint64_t v26 = Locale.ltIdentifier.getter();
  uint64_t v28 = v27;
  if (v26 == Locale.ltIdentifier.getter() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
    sub_1001E6278((uint64_t)v14);
    sub_1001E6278((uint64_t)v16);
    uint64_t v23 = v47;
    sub_1000B63E4(a1, v47);
    uint64_t v24 = v46;
    sub_1000B63E4(v2, v46);
  }
  else
  {
    char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v14);
    sub_1001E6278((uint64_t)v16);
    uint64_t v23 = v47;
    sub_1000B63E4(a1, v47);
    uint64_t v24 = v46;
    sub_1000B63E4(v2, v46);
    char v25 = 0;
    if ((v31 & 1) == 0) {
      goto LABEL_20;
    }
  }
  uint64_t v32 = (uint64_t *)(v23 + *(int *)(v7 + 20));
  uint64_t v33 = v32[1];
  uint64_t v48 = *v32;
  uint64_t v49 = v33;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000C350();
  uint64_t v46 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v35 = v34;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v37 = v45;
  v36(v6, v45);
  swift_bridgeObjectRelease();
  uint64_t v38 = (uint64_t *)(v24 + *(int *)(v7 + 20));
  uint64_t v39 = v38[1];
  uint64_t v48 = *v38;
  uint64_t v49 = v39;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  uint64_t v40 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v42 = v41;
  v36(v6, v37);
  swift_bridgeObjectRelease();
  if (v46 == v40 && v35 == v42)
  {
    swift_bridgeObjectRelease_n();
    char v25 = 1;
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = v47;
LABEL_20:
  sub_1001E6278(v24);
  sub_1001E6278(v23);
  return v25 & 1;
}

uint64_t sub_1001D7890(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100236738(*a1, *a2);
}

Swift::Int sub_1001D789C()
{
  return Hasher._finalize()();
}

uint64_t sub_1001D793C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001D79C8()
{
  return Hasher._finalize()();
}

unint64_t sub_1001D7A64@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001E622C(*a1);
  *a2 = result;
  return result;
}

void sub_1001D7A94(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEB00000000676E69;
  uint64_t v5 = 0x74616C736E617274;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726F727265;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701602409;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1001D7AF0()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F39A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest;
  swift_beginAccess();
  sub_10000C3A4(v12, (uint64_t)v11, &qword_1002F39A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_10000B070((uint64_t)v11, &qword_1002F39A0);
    return 0;
  }
  else
  {
    sub_1000B63E4((uint64_t)v11, (uint64_t)v8);
    sub_10000B070((uint64_t)v11, &qword_1002F39A0);
    Swift::String v14 = &v8[*(int *)(v5 + 20)];
    uint64_t v15 = *((void *)v14 + 1);
    v17[1] = *(void *)v14;
    v17[2] = v15;
    swift_bridgeObjectRetain();
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_10000C350();
    uint64_t v13 = StringProtocol.trimmingCharacters(in:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v8);
  }
  return v13;
}

void sub_1001D7D68(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    type metadata accessor for MainActor();
    id v8 = a1;
    swift_retain();
    uint64_t v9 = static MainActor.shared.getter();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    void v10[4] = v8;
    v10[5] = a2;
    sub_100056780((uint64_t)v6, (uint64_t)&unk_1002FB780, (uint64_t)v10);
    swift_release();
  }
  else
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100011554(v11, (uint64_t)qword_10030EAB0);
    os_log_t v16 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v12, "Cannot set text streaming config because given config is nil", v13, 2u);
      swift_slowDealloc();
    }
    os_log_t v14 = v16;
  }
}

uint64_t sub_1001D7F84(int a1)
{
  uint64_t v2 = v1;
  int v39 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F39A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  uint64_t v18 = v1 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 40))(v18, v17, v14);
  swift_endAccess();
  uint64_t v19 = (void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText);
  *uint64_t v19 = 0;
  v19[1] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  uint64_t v20 = type metadata accessor for Locale();
  NSString v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v13, 1, 1, v20);
  uint64_t v22 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSourceLocale;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v13, v22, (uint64_t *)&unk_1002F4110);
  swift_endAccess();
  v21(v13, 1, 1, v20);
  uint64_t v23 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTargetLocale;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v13, v23, (uint64_t *)&unk_1002F4110);
  swift_endAccess();
  uint64_t v41 = 0;
  memset(v40, 0, sizeof(v40));
  uint64_t v24 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v40, v24, (uint64_t *)&unk_1002F33F0);
  swift_endAccess();
  uint64_t v25 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v10, 1, 1, v25);
  uint64_t v27 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v10, v27, &qword_1002F39A0);
  swift_endAccess();
  [*(id *)(v2 + 24) invalidate];
  uint64_t v28 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0;

  [*(id *)(v2 + 40) invalidate];
  uint64_t v29 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;

  UUID.init()();
  uint64_t v30 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v30, v7, v37);
  swift_endAccess();
  v26(v10, 1, 1, v25);
  uint64_t v31 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v10, v31, &qword_1002F39A0);
  swift_endAccess();
  uint64_t v32 = type metadata accessor for TaskPriority();
  uint64_t v33 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v38, 1, 1, v32);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v34 = static MainActor.shared.getter();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v35 + 32) = v39;
  *(void *)(v35 + 40) = v2;
  sub_100056780(v33, (uint64_t)&unk_1002FB770, v35);
  return swift_release();
}

uint64_t sub_1001D8528(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  v4[2] = type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_10013CCD8;
  if (a4) {
    char v7 = 2;
  }
  else {
    char v7 = 0;
  }
  return sub_1001DE338(v7);
}

uint64_t sub_1001D85F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001D8688, v7, v6);
}

uint64_t sub_1001D8688()
{
  uint64_t v20 = v0;
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030EAB0);
  id v3 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[3];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    id v9 = [v7 description];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    v0[2] = sub_100202FD4(v10, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Setting manager's text streaming config to %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[3];
  uint64_t v14 = v0[4];
  uint64_t v15 = *(void **)(v14 + 16);
  *(void *)(v14 + 16) = v13;
  id v16 = v13;

  sub_1001D88B4();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

void sub_1001D88B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  unsigned int v5 = [v3 BOOLForKey:v4];

  if (v5)
  {
    id v6 = [v2 standardUserDefaults];
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 doubleForKey:v7];
    double v9 = v8;

    id v10 = [v2 standardUserDefaults];
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 doubleForKey:v11];
    double v13 = v12;

    id v14 = [v2 standardUserDefaults];
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 doubleForKey:v15];
    double v17 = v16;

    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100011554(v18, (uint64_t)qword_10030EAB0);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 134349568;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2050;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 22) = 2050;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Updating text streaming config values; minTime: %{public}f, maxTime: %{public}f, userIdleTime: %{public}f",
        (uint8_t *)v21,
        0x20u);
      swift_slowDealloc();
    }

    [*(id *)(v1 + 16) updateMinTimeBetweenTranslations:v9 maxTimeBetweenTranslations:v13 userIdleTime:v17];
  }
  else
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100011554(v22, (uint64_t)qword_10030EAB0);
    oslog = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v23, "Not updating text streaming config values because overrides enabled", v24, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1001D8C8C(uint64_t a1, unint64_t a2, char *a3, uint64_t a4)
{
  unint64_t v113 = a3;
  uint64_t v114 = a4;
  unint64_t v109 = a2;
  uint64_t v108 = a1;
  uint64_t v110 = type metadata accessor for Date();
  uint64_t v112 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v111 = (char *)v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v115 = (char *)v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSString v11 = (char *)v102 - v10;
  uint64_t v12 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  NSString v15 = (char *)v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v17 = (char *)v102 - v16;
  uint64_t v18 = v4 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSourceLocale;
  swift_beginAccess();
  sub_10000C3A4(v18, (uint64_t)v17, (uint64_t *)&unk_1002F4110);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v19(v17, 1, v6))
  {
    uint64_t v20 = v6;
    sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F4110);
    Locale.ltIdentifier.getter();
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v21 = v115;
    uint64_t v22 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v115, v114, v20);
LABEL_4:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v22);
LABEL_5:
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100011554(v23, (uint64_t)qword_10030EAB0);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Translation request conditions satisfied; source or target locale changed",
        v26,
        2u);
      swift_slowDealloc();
    }

    return 1;
  }
  uint64_t v105 = v15;
  uint64_t v104 = v4;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v106 = v7 + 16;
  uint64_t v107 = v29;
  v29(v11, (uint64_t)v17, v6);
  sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F4110);
  uint64_t v30 = Locale.ltIdentifier.getter();
  uint64_t v32 = v31;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v20 = v6;
  v102[1] = v7 + 8;
  uint64_t v103 = v33;
  v33(v11, v6);
  uint64_t v34 = Locale.ltIdentifier.getter();
  if (!v32) {
    goto LABEL_3;
  }
  uint64_t v36 = v11;
  if (v30 == v34 && v32 == v35)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v21 = v115;
    uint64_t v22 = v20;
    v107(v115, v114, v20);
  }
  else
  {
    char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v115;
    uint64_t v22 = v20;
    v107(v115, v114, v20);
    if ((v38 & 1) == 0) {
      goto LABEL_4;
    }
  }
  uint64_t v39 = v104;
  uint64_t v40 = v104 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTargetLocale;
  swift_beginAccess();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)v105;
  sub_10000C3A4(v41, (uint64_t)v105, (uint64_t *)&unk_1002F4110);
  if (v19((char *)v42, 1, v22))
  {
    sub_10000B070(v42, (uint64_t *)&unk_1002F4110);
    uint64_t v43 = v21;
    Locale.ltIdentifier.getter();
    uint64_t v44 = v103;
LABEL_22:
    v44(v43, v22);
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v107(v36, v42, v22);
  sub_10000B070(v42, (uint64_t *)&unk_1002F4110);
  uint64_t v45 = Locale.ltIdentifier.getter();
  uint64_t v47 = v46;
  uint64_t v44 = v103;
  v103(v36, v22);
  uint64_t v48 = Locale.ltIdentifier.getter();
  if (!v47)
  {
    uint64_t v43 = v115;
    goto LABEL_22;
  }
  if (v45 == v48 && v47 == v49)
  {
    ((void (*)(char *, uint64_t, uint64_t))v44)(v115, v22, v48);
    swift_bridgeObjectRelease_n();
    uint64_t v50 = v110;
    uint64_t v51 = v111;
    uint64_t v52 = v112;
  }
  else
  {
    char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v44(v115, v22);
    swift_bridgeObjectRelease_n();
    uint64_t v50 = v110;
    uint64_t v51 = v111;
    uint64_t v52 = v112;
    if ((v53 & 1) == 0) {
      goto LABEL_5;
    }
  }
  unint64_t v54 = v109;
  swift_bridgeObjectRetain();
  uint64_t v55 = v108;
  uint64_t v56 = sub_1001D73CC(v108, v54);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = v39 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v59, v50);
  Date.timeIntervalSinceNow.getter();
  double v61 = v60;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v50);
  if (v58)
  {
    if (v56 == 32 && v58 == 0xE100000000000000) {
      int v62 = 1;
    }
    else {
      int v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    int v62 = 0;
  }
  [*(id *)(v39 + 16) maxTimeBetweenTranslations];
  double v64 = -v63;
  [*(id *)(v39 + 16) minTimeBetweenTranslations];
  double v66 = -v65;
  if (*(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText) == v55
    && *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText + 8) == v54)
  {
    char v67 = 1;
  }
  else
  {
    char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v115 = (char *)String.count.getter();
  unint64_t v113 = (char *)[*(id *)(v39 + 16) minNumberOfCharactersForTranslation];
  uint64_t v117 = 0;
  unint64_t v118 = 0xE000000000000000;
  _StringGuts.grow(_:)(133);
  v68._object = (void *)0x80000001002636A0;
  v68._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v68);
  if (v62) {
    uint64_t v69 = 1702195828;
  }
  else {
    uint64_t v69 = 0x65736C6166;
  }
  LODWORD(v114) = v62;
  if (v62) {
    unint64_t v70 = 0xE400000000000000;
  }
  else {
    unint64_t v70 = 0xE500000000000000;
  }
  unint64_t v71 = v70;
  String.append(_:)(*(Swift::String *)&v69);
  swift_bridgeObjectRelease();
  v72._countAndFlagsBits = 0xD00000000000001FLL;
  v72._object = (void *)0x80000001002636C0;
  String.append(_:)(v72);
  if (v61 > v64) {
    uint64_t v73 = 0x65736C6166;
  }
  else {
    uint64_t v73 = 1702195828;
  }
  if (v61 > v64) {
    unint64_t v74 = 0xE500000000000000;
  }
  else {
    unint64_t v74 = 0xE400000000000000;
  }
  unint64_t v75 = v74;
  String.append(_:)(*(Swift::String *)&v73);
  swift_bridgeObjectRelease();
  v76._countAndFlagsBits = 0xD000000000000017;
  v76._object = (void *)0x80000001002636E0;
  String.append(_:)(v76);
  if (v61 <= v66) {
    uint64_t v77 = 1702195828;
  }
  else {
    uint64_t v77 = 0x65736C6166;
  }
  if (v61 <= v66) {
    unint64_t v78 = 0xE400000000000000;
  }
  else {
    unint64_t v78 = 0xE500000000000000;
  }
  unint64_t v79 = v78;
  String.append(_:)(*(Swift::String *)&v77);
  swift_bridgeObjectRelease();
  v80._object = (void *)0x8000000100263700;
  v80._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v80);
  char v81 = v67;
  BOOL v82 = (v67 & 1) == 0;
  uint64_t v83 = v113;
  if (v82) {
    uint64_t v84 = 1702195828;
  }
  else {
    uint64_t v84 = 0x65736C6166;
  }
  if (v82) {
    unint64_t v85 = 0xE400000000000000;
  }
  else {
    unint64_t v85 = 0xE500000000000000;
  }
  unint64_t v86 = v85;
  String.append(_:)(*(Swift::String *)&v84);
  swift_bridgeObjectRelease();
  v87._countAndFlagsBits = 0xD00000000000001BLL;
  uint64_t v88 = v115;
  v87._object = (void *)0x8000000100263720;
  String.append(_:)(v87);
  if ((uint64_t)v88 >= (uint64_t)v83) {
    uint64_t v89 = 1702195828;
  }
  else {
    uint64_t v89 = 0x65736C6166;
  }
  if ((uint64_t)v88 >= (uint64_t)v83) {
    unint64_t v90 = 0xE400000000000000;
  }
  else {
    unint64_t v90 = 0xE500000000000000;
  }
  unint64_t v91 = v90;
  String.append(_:)(*(Swift::String *)&v89);
  swift_bridgeObjectRelease();
  uint64_t v93 = v117;
  unint64_t v92 = v118;
  if (v114 & 1 | (v61 <= v64) && v61 <= v66 && (v81 & 1) == 0 && (uint64_t)v88 >= (uint64_t)v83)
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v94 = type metadata accessor for Logger();
    sub_100011554(v94, (uint64_t)qword_10030EAB0);
    swift_bridgeObjectRetain();
    uint64_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = (uint8_t *)swift_slowAlloc();
      uint64_t v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v97 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v116 = sub_100202FD4(v93, v92, &v117);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "Translation request conditions satisfied; conditions:\n%{public}s",
        v97,
        0xCu);
      uint64_t v27 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v27;
    }

    swift_bridgeObjectRelease_n();
    return 1;
  }
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v98 = type metadata accessor for Logger();
  sub_100011554(v98, (uint64_t)qword_10030EAB0);
  swift_bridgeObjectRetain();
  uint64_t v99 = Logger.logObject.getter();
  os_log_type_t v100 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v99, v100))
  {
    uint64_t v101 = (uint8_t *)swift_slowAlloc();
    uint64_t v117 = swift_slowAlloc();
    *(_DWORD *)uint64_t v101 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v116 = sub_100202FD4(v93, v92, &v117);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v99, v100, "Translation request conditions NOT satisfied; conditions:\n%{public}s",
      v101,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_1001D98BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v37 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(a1, (uint64_t)v12);
  sub_1000B63E4(a1, (uint64_t)v10);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v36 = v1;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v34 = a1;
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136446467;
    uint64_t v33 = v4;
    type metadata accessor for UUID();
    uint64_t v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v38 = sub_100202FD4(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v12);
    *(_WORD *)(v17 + 12) = 2085;
    uint64_t v21 = (uint64_t *)&v10[*(int *)(v33 + 20)];
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100202FD4(v22, v23, aBlock);
    uint64_t v7 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v10);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Setting up idle timer for streaming request; id: %{public}s, sourceText: %{sensitive}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    a1 = v34;
    swift_slowDealloc();
    uint64_t v2 = v36;
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278((uint64_t)v12);
    sub_1001E6278((uint64_t)v10);
  }

  uint64_t v24 = self;
  [*(id *)(v2 + 16) userIdleTime];
  double v26 = v25;
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  sub_1000B63E4(a1, (uint64_t)v7);
  unint64_t v28 = (*(unsigned __int8 *)(v37 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  sub_1000B65F4((uint64_t)v7, v29 + v28);
  aBlock[4] = (uint64_t)sub_1001E6FA8;
  aBlock[5] = v29;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100158A24;
  void aBlock[3] = (uint64_t)&unk_1002D2BD0;
  uint64_t v30 = _Block_copy(aBlock);
  swift_release();
  id v31 = [v24 scheduledTimerWithTimeInterval:0 repeats:v30 block:v26];
  _Block_release(v30);
  uint64_t v32 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = v31;
}

uint64_t sub_1001D9D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    sub_1000B63E4(a3, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = 0;
    v14[3] = 0;
    v14[4] = v11;
    sub_1000B65F4((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14 + v13);
    sub_100056780((uint64_t)v9, (uint64_t)&unk_1002FB760, (uint64_t)v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001D9EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[14] = type metadata accessor for StreamingRequestInfo(0);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  return _swift_task_switch(sub_1001DA010, 0, 0);
}

uint64_t sub_1001DA010()
{
  *(void *)(v0 + 184) = type metadata accessor for MainActor();
  *(void *)(v0 + 192) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DA0A8, v2, v1);
}

uint64_t sub_1001DA0A8()
{
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[12];
  swift_release();
  uint64_t v5 = v4 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  return _swift_task_switch(sub_1001DA16C, 0, 0);
}

uint64_t sub_1001DA16C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[21];
  Date.timeIntervalSinceNow.getter();
  v0[25] = v4;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v0[26] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DA224, v6, v5);
}

uint64_t sub_1001DA224()
{
  uint64_t v1 = v0[12];
  swift_release();
  uint64_t v2 = v1 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText;
  v0[27] = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText);
  v0[28] = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1001DA2B4, 0, 0);
}

uint64_t sub_1001DA2B4()
{
  *(void *)(v0 + 232) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DA340, v2, v1);
}

uint64_t sub_1001DA340()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v0 + 240) = v2;
  id v3 = v2;
  return _swift_task_switch(sub_1001DA3BC, 0, 0);
}

uint64_t sub_1001DA3BC()
{
  uint64_t v49 = v0;
  uint64_t v1 = *(void **)(v0 + 240);
  [v1 minTimeBetweenTranslations];
  double v3 = v2;

  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = type metadata accessor for Logger();
  sub_100011554(v7, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v6, v4);
  sub_1000B63E4(v6, v5);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  unint64_t v11 = *(void *)(v0 + 224);
  if (v10)
  {
    uint64_t v47 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v46 = *(void *)(v0 + 144);
    uint64_t v14 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136447235;
    type metadata accessor for UUID();
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 56) = sub_100202FD4(v15, v16, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v13);
    *(_WORD *)(v14 + 12) = 2085;
    uint64_t v17 = (uint64_t *)(v46 + *(int *)(v45 + 20));
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 64) = sub_100202FD4(v18, v19, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v46);
    *(_WORD *)(v14 + 22) = 2050;
    *(void *)(v0 + 72) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 32) = 2050;
    *(double *)(v0 + 80) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 42) = 2085;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_100202FD4(v47, v11, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Idle timer for partial result fired; id: %{public}s, sourceText: %{sensitive}s, timeIntervalSinceLastSubmission: %"
      "{public}f,  minTimeBetweenTranslations: %{public}f, lastTranslatedText: %{sensitive}s",
      (uint8_t *)v14,
      0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v20 = *(void *)(v0 + 144);
    sub_1001E6278(*(void *)(v0 + 152));
    sub_1001E6278(v20);

    swift_bridgeObjectRelease_n();
  }
  double v21 = *(double *)(v0 + 200);
  sub_1000B63E4(*(void *)(v0 + 104), *(void *)(v0 + 136));
  if (v21 <= -v3)
  {
    uint64_t v24 = *(void *)(v0 + 136);
    swift_bridgeObjectRelease();
    sub_1001E6278(v24);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 136);
    unint64_t v23 = (void *)(v22 + *(int *)(*(void *)(v0 + 112) + 20));
    if (*v23 == *(void *)(v0 + 216) && v23[1] == *(void *)(v0 + 224))
    {
      swift_bridgeObjectRelease();
      sub_1001E6278(v22);
LABEL_12:
      sub_1000B63E4(*(void *)(v0 + 104), *(void *)(v0 + 120));
      double v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.info.getter();
      BOOL v28 = os_log_type_enabled(v26, v27);
      uint64_t v29 = *(void *)(v0 + 120);
      if (v28)
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136446210;
        type metadata accessor for UUID();
        sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 48) = sub_100202FD4(v31, v32, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1001E6278(v29);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Idle timer for partial result fired, but conditions don't allow for re-triggering a translation; id: %{public}s",
          v30,
          0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001E6278(*(void *)(v0 + 120));
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
      return v44();
    }
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v22);
    if (v25) {
      goto LABEL_12;
    }
  }
  sub_1000B63E4(*(void *)(v0 + 104), *(void *)(v0 + 128));
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.info.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v36 = *(void *)(v0 + 128);
  if (v35)
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446210;
    uint64_t v48 = v38;
    type metadata accessor for UUID();
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 40) = sub_100202FD4(v39, v40, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v36);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Idle timer for partial result fired, performing another partial translation. id: %{public}s", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(*(void *)(v0 + 128));
  }

  *(void *)(v0 + 248) = static MainActor.shared.getter();
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_1001DAB78;
  uint64_t v42 = *(void *)(v0 + 104);
  return sub_1001DE938(v42, 0);
}

uint64_t sub_1001DAB78()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 264) = v3;
  *double v3 = v2;
  v3[1] = sub_1001DACB8;
  return sub_1001E1800();
}

uint64_t sub_1001DACB8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DADF4, v1, v0);
}

uint64_t sub_1001DADF4()
{
  swift_release();
  return _swift_task_switch(sub_1001DAE5C, 0, 0);
}

uint64_t sub_1001DAE5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001DAF00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v4 = *(void *)(v36 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v7 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  BOOL v10 = (char *)&v32 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - v11;
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(a1, (uint64_t)v12);
  sub_1000B63E4(a1, (uint64_t)v10);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v35 = v1;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    os_log_type_t v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = v18;
    *(_DWORD *)uint64_t v17 = 136446467;
    uint64_t v33 = a1;
    type metadata accessor for UUID();
    uint64_t v32 = v4;
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v37 = sub_100202FD4(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v12);
    *(_WORD *)(v17 + 12) = 2085;
    double v21 = (uint64_t *)&v10[*(int *)(v36 + 20)];
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    swift_bridgeObjectRetain();
    uint64_t v24 = v22;
    a1 = v33;
    uint64_t v37 = sub_100202FD4(v24, v23, aBlock);
    uint64_t v4 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278((uint64_t)v10);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Setting up final timer for streaming request; id: %{public}s, sourceText: %{sensitive}s",
      (uint8_t *)v17,
      0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v34;
    swift_slowDealloc();
    uint64_t v2 = v35;
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278((uint64_t)v12);
    sub_1001E6278((uint64_t)v10);
  }

  char v25 = self;
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  sub_1000B63E4(a1, (uint64_t)v7);
  unint64_t v27 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  sub_1000B65F4((uint64_t)v7, v28 + v27);
  aBlock[4] = (uint64_t)sub_1001E6B1C;
  aBlock[5] = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100158A24;
  void aBlock[3] = (uint64_t)&unk_1002D2B58;
  uint64_t v29 = _Block_copy(aBlock);
  swift_release();
  id v30 = [v25 scheduledTimerWithTimeInterval:0 repeats:v29 block:1.5];
  _Block_release(v29);
  uint64_t v31 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = v30;
}

uint64_t sub_1001DB350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    sub_1000B63E4(a3, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    sub_1000B65F4((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
    *(void *)(v14 + ((v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v11;
    sub_100056780((uint64_t)v9, (uint64_t)&unk_1002FB750, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001DB520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  v5[6] = type metadata accessor for StreamingRequestInfo(0);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_1001DB5D0, 0, 0);
}

uint64_t sub_1001DB5D0()
{
  uint64_t v37 = v0;
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v1, v2);
  sub_1000B63E4(v1, v3);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  if (v7)
  {
    uint64_t v34 = v0[6];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446467;
    type metadata accessor for UUID();
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_100202FD4(v11, v12, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v8);
    *(_WORD *)(v10 + 12) = 2085;
    unint64_t v13 = (uint64_t *)(v9 + *(int *)(v34 + 20));
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
    v0[3] = sub_100202FD4(v14, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v9);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Idle timer for final result fired, performing final translation with streaming request; id: %{public}s, sourceText"
      ": %{sensitive}s.",
      (uint8_t *)v10,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(v0[9]);
    sub_1001E6278(v9);
  }

  uint64_t v17 = (int *)v0[6];
  uint64_t v16 = v0[7];
  uint64_t v18 = v0[4];
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v35(v16, v18, v19);
  uint64_t v20 = v17[6];
  double v21 = (uint64_t *)(v18 + v17[5]);
  uint64_t v32 = v21[1];
  uint64_t v33 = *v21;
  uint64_t v22 = v18 + v20;
  uint64_t v23 = v16 + v20;
  uint64_t v24 = type metadata accessor for Locale();
  char v25 = v0;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  v26(v23, v22, v24);
  v26(v16 + v17[7], v18 + v17[7], v24);
  v35(v16 + v17[10], v18 + v17[10], v19);
  unint64_t v27 = (void *)(v16 + v17[5]);
  void *v27 = v33;
  v27[1] = v32;
  uint64_t v28 = v16 + v17[8];
  *(_WORD *)uint64_t v28 = 257;
  *(void *)(v28 + 8) = 0;
  *(unsigned char *)(v16 + v17[9]) = 0;
  *(void *)(v16 + v17[11]) = 1;
  v25[10] = type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  v25[11] = static MainActor.shared.getter();
  uint64_t v29 = (void *)swift_task_alloc();
  v25[12] = v29;
  *uint64_t v29 = v25;
  v29[1] = sub_1001DB9F0;
  uint64_t v30 = v25[7];
  return sub_1001DE938(v30, 0);
}

uint64_t sub_1001DB9F0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 104) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1001DBB30;
  return sub_1001E1800();
}

uint64_t sub_1001DBB30()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DBC6C, v1, v0);
}

uint64_t sub_1001DBC6C()
{
  swift_release();
  return _swift_task_switch(sub_1001DBCD4, 0, 0);
}

uint64_t sub_1001DBCD4()
{
  sub_1001E6278(*(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001DBD5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v59 = a5;
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v72 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v72 - 8);
  uint64_t v8 = __chkstk_darwin(v72);
  unint64_t v70 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = v9;
  __chkstk_darwin(v8);
  double v63 = (char *)&v54 - v10;
  uint64_t v11 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v69 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v60 = *(void *)(v58 - 8);
  uint64_t v13 = __chkstk_darwin(v58);
  uint64_t v68 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - v15;
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100011554(v17, (uint64_t)qword_10030EAB0);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v65 = a1;
  if (v20)
  {
    double v21 = (uint8_t *)swift_slowAlloc();
    v74[0] = swift_slowAlloc();
    *(_DWORD *)double v21 = 136642819;
    swift_bridgeObjectRetain();
    uint64_t v73 = sub_100202FD4(a1, a2, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Starting partial translation; sourceText: %{sensitive}s",
      v21,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  unint64_t v64 = a2;
  uint64_t v22 = v71 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v56 = v24 + 16;
  v55(v16, v22, v23);
  uint64_t v25 = (uint64_t)v16;
  uint64_t v26 = (int *)v58;
  uint64_t v27 = v25 + *(int *)(v58 + 24);
  uint64_t v57 = v7;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v29 = v72;
  v28(v27, v66, v72);
  v28(v25 + v26[7], v67, v29);
  uint64_t v30 = self;
  swift_bridgeObjectRetain();
  id v31 = [v30 standardUserDefaults];
  NSString v32 = String._bridgeToObjectiveC()();
  unsigned __int8 v33 = [v31 BOOLForKey:v32];

  id v34 = [v30 standardUserDefaults];
  NSString v35 = String._bridgeToObjectiveC()();
  unsigned __int8 v36 = [v34 BOOLForKey:v35];

  v55((char *)(v25 + v26[10]), v59, v23);
  uint64_t v37 = (uint64_t *)(v25 + v26[5]);
  unint64_t v38 = v64;
  uint64_t *v37 = v65;
  v37[1] = v38;
  uint64_t v39 = v25 + v26[8];
  *(unsigned char *)uint64_t v39 = v33 ^ 1;
  *(unsigned char *)(v39 + 1) = v36 ^ 1;
  *(void *)(v39 + 8) = 0;
  *(unsigned char *)(v25 + v26[9]) = 0;
  *(void *)(v25 + v26[11]) = 1;
  uint64_t v40 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v69, 1, 1, v40);
  uint64_t v41 = v63;
  uint64_t v42 = v72;
  v28((uint64_t)v63, v66, v72);
  v28((uint64_t)v70, v67, v42);
  sub_1000B63E4(v25, v68);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  uint64_t v43 = v71;
  swift_retain();
  uint64_t v44 = static MainActor.shared.getter();
  uint64_t v45 = v57;
  uint64_t v46 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v47 = (v46 + 56) & ~v46;
  uint64_t v48 = (v62 + v46 + v47) & ~v46;
  unint64_t v49 = (v62 + *(unsigned __int8 *)(v60 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v50 = (char *)swift_allocObject();
  *((void *)v50 + 2) = v44;
  *((void *)v50 + 3) = &protocol witness table for MainActor;
  uint64_t v51 = v65;
  *((void *)v50 + 4) = v43;
  *((void *)v50 + 5) = v51;
  *((void *)v50 + 6) = v64;
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
  v52(&v50[v47], v41, v42);
  v52(&v50[v48], v70, v42);
  sub_1000B65F4(v68, (uint64_t)&v50[v49]);
  sub_100056780(v69, (uint64_t)&unk_1002FB740, (uint64_t)v50);
  swift_release();
  return sub_1001E6278(v25);
}

uint64_t sub_1001DC42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a8;
  v8[7] = v13;
  v8[4] = a6;
  v8[5] = a7;
  v8[2] = a4;
  v8[3] = a5;
  v8[8] = type metadata accessor for MainActor();
  v8[9] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[10] = v10;
  v8[11] = v9;
  return _swift_task_switch(sub_1001DC4D8, v10, v9);
}

uint64_t sub_1001DC4D8()
{
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAB0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Invalidating idle timers", v4, 2u);
    swift_slowDealloc();
  }
  os_log_type_t v6 = (char *)v0[5];
  uint64_t v5 = v0[6];
  uint64_t v8 = v0[3];
  unint64_t v7 = v0[4];
  uint64_t v9 = v0[2];

  [*(id *)(v9 + 24) invalidate];
  [*(id *)(v9 + 40) invalidate];
  if (sub_1001D8C8C(v8, v7, v6, v5))
  {
    v0[12] = static MainActor.shared.getter();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[13] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1001DC744;
    uint64_t v11 = v0[7];
    return sub_1001DE938(v11, 0);
  }
  else
  {
    swift_release();
    sub_1001D98BC(v0[7]);
    id v13 = [self standardUserDefaults];
    NSString v14 = String._bridgeToObjectiveC()();
    unsigned int v15 = [v13 BOOLForKey:v14];

    if (v15) {
      sub_1001DAF00(v0[7]);
    }
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
}

uint64_t sub_1001DC744()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 112) = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_1001DC884;
  return sub_1001E1800();
}

uint64_t sub_1001DC884()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DC9C0, v1, v0);
}

uint64_t sub_1001DC9C0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_1001DCA24, v1, v2);
}

uint64_t sub_1001DCA24()
{
  swift_release();
  sub_1001D98BC(*(void *)(v0 + 56));
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned int v3 = [v1 BOOLForKey:v2];

  if (v3) {
    sub_1001DAF00(*(void *)(v0 + 56));
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001DCB0C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  int v49 = a5;
  uint64_t v54 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v45 = v11;
  char v53 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Locale();
  uint64_t v44 = *(void *)(v46 - 8);
  unint64_t v12 = *(void *)(v44 + 64);
  uint64_t v13 = __chkstk_darwin(v46);
  uint64_t v52 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v41 - v14;
  uint64_t v15 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v15 - 8);
  uint64_t v50 = (uint64_t)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100011554(v17, (uint64_t)qword_10030EAB0);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v43 = a1;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = a3;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    unint64_t v42 = v12;
    uint64_t v56 = v23;
    *(_DWORD *)uint64_t v22 = 136642819;
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100202FD4(a1, a2, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Performing final translation; sourceText: %{sensitive}s",
      v22,
      0xCu);
    swift_arrayDestroy();
    unint64_t v12 = v42;
    swift_slowDealloc();
    a3 = v41;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v24 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v50, 1, 1, v24);
  uint64_t v25 = v44;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  uint64_t v27 = a3;
  uint64_t v28 = v46;
  v26(v51, v27, v46);
  v26(v52, a4, v28);
  uint64_t v29 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v53, a6, v54);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  unint64_t v42 = a2;
  uint64_t v30 = v48;
  swift_retain();
  uint64_t v31 = static MainActor.shared.getter();
  uint64_t v32 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v33 = (v32 + 56) & ~v32;
  uint64_t v34 = (v12 + v32 + v33) & ~v32;
  unint64_t v35 = v34 + v12;
  unint64_t v36 = (*(unsigned __int8 *)(v29 + 80) + v34 + v12 + 1) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v37 = (char *)swift_allocObject();
  *((void *)v37 + 2) = v31;
  *((void *)v37 + 3) = &protocol witness table for MainActor;
  uint64_t v38 = v43;
  *((void *)v37 + 4) = v30;
  *((void *)v37 + 5) = v38;
  *((void *)v37 + 6) = v42;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v39(&v37[v33], v51, v28);
  v39(&v37[v34], v52, v28);
  v37[v35] = v49 & 1;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v37[v36], v53, v54);
  sub_100056780(v50, (uint64_t)&unk_1002FB730, (uint64_t)v37);
  return swift_release();
}

uint64_t sub_1001DD00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 144) = v13;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 80) = v14;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 88) = type metadata accessor for StreamingRequestInfo(0);
  *(void *)(v8 + 96) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 104) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 112) = v10;
  *(void *)(v8 + 120) = v9;
  return _swift_task_switch(sub_1001DD0EC, v10, v9);
}

uint64_t sub_1001DD0EC()
{
  NSString v2 = *(int **)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  char v19 = *(unsigned char *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v17 = *(void *)(v0 + 48);
  uint64_t v18 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40) + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(v1, v3, v4);
  uint64_t v6 = v1 + v2[6];
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(v6, v14, v7);
  v8(v1 + v2[7], v15, v7);
  v5(v1 + v2[10], v16, v4);
  uint64_t v9 = (void *)(v1 + v2[5]);
  void *v9 = v17;
  v9[1] = v18;
  uint64_t v10 = v1 + v2[8];
  *(_WORD *)uint64_t v10 = 257;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v1 + v2[9]) = v19;
  *(void *)(v1 + v2[11]) = 1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v11;
  void *v11 = v0;
  v11[1] = sub_1001DD2F8;
  uint64_t v12 = *(void *)(v0 + 96);
  return sub_1001DF2A8(v12);
}

uint64_t sub_1001DD2F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1001DD438;
  return sub_1001E1800();
}

uint64_t sub_1001DD438()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_1001DD558, v3, v2);
}

uint64_t sub_1001DD558()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_release();
  sub_1001E6278(v1);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001DD5C8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    uint64_t v8 = a1;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a2) {
    unint64_t v9 = a2;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  v25[0] = v8;
  v25[1] = v9;
  swift_bridgeObjectRetain();
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000C350();
  uint64_t v10 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  if (v10 == sub_1001D7AF0() && v12 == v13) {
    char v15 = 1;
  }
  else {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030EAB0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136643331;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_100202FD4(v8, v9, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2085;
    uint64_t v20 = sub_1001D7AF0();
    uint64_t v24 = sub_100202FD4(v20, v21, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 1024;
    LODWORD(v24) = v15 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Streaming translation up to date with input: %{sensitive}s, compared to translation: %{sensitive}s, %{BOOL}d", (uint8_t *)v19, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return v15 & 1;
}

void sub_1001DD940(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v82 = a4;
  uint64_t v81 = a2;
  uint64_t v7 = sub_100007620(&qword_1002F39A0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v75 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (uint64_t)&v71 - v10;
  uint64_t v78 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v73 = *(void *)(v78 - 8);
  uint64_t v11 = __chkstk_darwin(v78);
  uint64_t v80 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  char v15 = (char *)&v71 - v14;
  uint64_t v16 = __chkstk_darwin(v13);
  os_log_type_t v18 = (char *)&v71 - v17;
  __chkstk_darwin(v16);
  uint64_t v77 = (uint64_t)&v71 - v19;
  uint64_t v83 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v83 - 8);
  uint64_t v21 = __chkstk_darwin(v83);
  uint64_t v23 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v71 - v24;
  int v79 = a3;
  if (a3) {
    goto LABEL_3;
  }
  Swift::String v76 = v18;
  uint64_t v26 = a1;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v28 = v15;
  uint64_t v29 = v4;
  uint64_t v30 = v83;
  v27((char *)&v71 - v24, v26, v83);
  uint64_t v31 = &v29[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId];
  swift_beginAccess();
  v27(v23, (uint64_t)v31, v30);
  sub_1001E63C8((unint64_t *)&qword_1002F43B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  LOBYTE(v31) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v20 + 8);
  v32(v23, v30);
  uint64_t v33 = v30;
  uint64_t v4 = v29;
  char v15 = v28;
  v32(v25, v33);
  a1 = v26;
  uint64_t v34 = (uint64_t)v76;
  if (v31)
  {
LABEL_3:
    uint64_t v71 = v25;
    uint64_t v72 = v20;
    Swift::String v76 = v4;
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100011554(v35, (uint64_t)qword_10030EAB0);
    sub_1000B63E4(a1, (uint64_t)v15);
    uint64_t v77 = a1;
    uint64_t v36 = v80;
    sub_1000B63E4(a1, v80);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      *(void *)&long long v87 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 136446467;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v85 = sub_100202FD4(v40, v41, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278((uint64_t)v15);
      *(_WORD *)(v39 + 12) = 2085;
      unint64_t v42 = (uint64_t *)(v36 + *(int *)(v78 + 20));
      uint64_t v43 = *v42;
      unint64_t v44 = v42[1];
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_100202FD4(v43, v44, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v36);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Sending translation to delegate; id: %{public}s, sourceText: %{sensitive}s",
        (uint8_t *)v39,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278((uint64_t)v15);
      sub_1001E6278(v36);
    }

    uint64_t v45 = v82;
    uint64_t v46 = v81;
    sub_10000C3A4(v81, (uint64_t)&v85, (uint64_t *)&unk_1002F33F0);
    uint64_t v47 = v77;
    uint64_t v48 = v76;
    if (v86)
    {
      sub_100048DE4(&v85, (uint64_t)&v87);
      if (v45) {
        goto LABEL_12;
      }
      int v49 = &v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId];
      swift_beginAccess();
      uint64_t v50 = v72;
      uint64_t v51 = v71;
      uint64_t v52 = v83;
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v71, v49, v83);
      LOBYTE(v49) = static UUID.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      if ((v49 & 1) == 0)
      {
LABEL_12:
        sub_10000AB68((uint64_t)&v87);
      }
      else
      {
        sub_100048DE4(&v87, (uint64_t)&v85);
        sub_10001323C((uint64_t)&v85, (uint64_t)v84, (uint64_t *)&unk_1002F33F0);
        uint64_t v53 = (uint64_t)&v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation];
        swift_beginAccess();
        sub_1000344BC((uint64_t)v84, v53, (uint64_t *)&unk_1002F33F0);
        swift_endAccess();
        uint64_t v54 = v74;
        sub_1000B63E4(v47, v74);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v54, 0, 1, v78);
        uint64_t v55 = v75;
        sub_10001323C(v54, v75, &qword_1002F39A0);
        uint64_t v56 = (uint64_t)&v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest];
        swift_beginAccess();
        sub_1000344BC(v55, v56, &qword_1002F39A0);
        swift_endAccess();
      }
    }
    else
    {
      sub_10000B070((uint64_t)&v85, (uint64_t *)&unk_1002F33F0);
    }
    char v57 = v79;
    uint64_t v58 = &v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_delegate];
    uint64_t v59 = *(void *)&v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_delegate + 24];
    uint64_t v60 = *(void *)&v48[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_delegate + 32];
    sub_100029624(v58, v59);
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v60 + 8))(v47, v46, v57 & 1, v45, v59, v60);
  }
  else
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    sub_100011554(v61, (uint64_t)qword_10030EAB0);
    uint64_t v62 = v77;
    sub_1000B63E4(a1, v77);
    sub_1000B63E4(a1, v34);
    double v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      *(void *)&long long v87 = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 136446467;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v85 = sub_100202FD4(v66, v67, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v62);
      *(_WORD *)(v65 + 12) = 2085;
      uint64_t v68 = (uint64_t *)(v34 + *(int *)(v78 + 20));
      uint64_t v69 = *v68;
      unint64_t v70 = v68[1];
      swift_bridgeObjectRetain();
      *(void *)&long long v85 = sub_100202FD4(v69, v70, (uint64_t *)&v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v34);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Not sending translation to delegate because partial translation is outdated; id: %{public}s, sourceText: %{sensitive}s",
        (uint8_t *)v65,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278(v62);
      sub_1001E6278(v34);
    }
  }
}

uint64_t sub_1001DE338(char a1)
{
  *(void *)(v2 + 24) = v1;
  *(unsigned char *)(v2 + 40) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 32) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DE3D4, v4, v3);
}

uint64_t sub_1001DE3D4()
{
  uint64_t v35 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState))
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState) == 1)
    {
      uint64_t v3 = 0x74616C736E617274;
      unint64_t v4 = 0xEB00000000676E69;
    }
    else
    {
      unint64_t v4 = 0xE500000000000000;
      uint64_t v3 = 0x726F727265;
    }
  }
  else
  {
    unint64_t v4 = 0xE400000000000000;
    uint64_t v3 = 1701602409;
  }
  uint64_t v5 = (uint64_t *)(v0 + 16);
  if (*(unsigned char *)(v0 + 40))
  {
    if (*(unsigned char *)(v0 + 40) == 1)
    {
      unint64_t v6 = 0xEB00000000676E69;
      if (v3 != 0x74616C736E617274) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v6 = 0xE500000000000000;
      if (v3 != 0x726F727265) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    unint64_t v6 = 0xE400000000000000;
    if (v3 != 1701602409) {
      goto LABEL_15;
    }
  }
  if (v4 == v6)
  {
    swift_bridgeObjectRelease_n();
LABEL_16:
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030EAB0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      int v11 = *(unsigned __int8 *)(v0 + 40);
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      uint64_t v13 = 0x74616C736E617274;
      unint64_t v14 = 0xEB00000000676E69;
      if (v11 != 1)
      {
        uint64_t v13 = 0x726F727265;
        unint64_t v14 = 0xE500000000000000;
      }
      if (v11) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = 1701602409;
      }
      if (v11) {
        unint64_t v16 = v14;
      }
      else {
        unint64_t v16 = 0xE400000000000000;
      }
      uint64_t *v5 = sub_100202FD4(v15, v16, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Not changing state because it's the same, %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v17 = 0;
    goto LABEL_48;
  }
LABEL_15:
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_16;
  }
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100011554(v18, (uint64_t)qword_10030EAB0);
  swift_retain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    os_log_type_t v33 = v20;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    int v22 = *(unsigned __int8 *)(v1 + v2);
    uint64_t v34 = v32;
    if (v22)
    {
      if (v22 == 1)
      {
        uint64_t v23 = 0x74616C736E617274;
        unint64_t v24 = 0xEB00000000676E69;
      }
      else
      {
        unint64_t v24 = 0xE500000000000000;
        uint64_t v23 = 0x726F727265;
      }
    }
    else
    {
      unint64_t v24 = 0xE400000000000000;
      uint64_t v23 = 1701602409;
    }
    int v25 = *(unsigned __int8 *)(v0 + 40);
    *(void *)(v0 + 16) = sub_100202FD4(v23, v24, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v26 = 0x74616C736E617274;
    unint64_t v27 = 0xEB00000000676E69;
    if (v25 != 1)
    {
      uint64_t v26 = 0x726F727265;
      unint64_t v27 = 0xE500000000000000;
    }
    if (v25) {
      uint64_t v28 = v26;
    }
    else {
      uint64_t v28 = 1701602409;
    }
    if (v25) {
      unint64_t v29 = v27;
    }
    else {
      unint64_t v29 = 0xE400000000000000;
    }
    uint64_t *v5 = sub_100202FD4(v28, v29, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v33, "Changing state from %{public}s to %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  *(unsigned char *)(v1 + v2) = *(unsigned char *)(v0 + 40);
  uint64_t v17 = 1;
LABEL_48:
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v30(v17);
}

uint64_t sub_1001DE938(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 248) = a2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v2;
  uint64_t v4 = type metadata accessor for UUID();
  *(void *)(v3 + 136) = v4;
  *(void *)(v3 + 144) = *(void *)(v4 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  sub_100007620(&qword_1002F39A0);
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StreamingRequestInfo(0);
  *(void *)(v3 + 184) = v5;
  *(void *)(v3 + 192) = *(void *)(v5 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 240) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DEB0C, v7, v6);
}

uint64_t sub_1001DEB0C()
{
  uint64_t v59 = v0;
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v1, v2);
  sub_1000B63E4(v1, v3);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 232);
  if (v7)
  {
    os_log_type_t type = v6;
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136643075;
    uint64_t v12 = (uint64_t *)(v8 + *(int *)(v10 + 20));
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 104) = sub_100202FD4(v13, v14, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v8);
    *(_WORD *)(v11 + 12) = 2082;
    sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 112) = sub_100202FD4(v15, v16, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v9);
    _os_log_impl((void *)&_mh_execute_header, v5, type, "Trying to add partial translation with source '%{sensitive}s', id: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(*(void *)(v0 + 232));
    sub_1001E6278(v9);
  }

  int v17 = *(unsigned __int8 *)(v0 + 248);
  uint64_t result = sub_1000B63E4(*(void *)(v0 + 120), *(void *)(v0 + 216));
  uint64_t v19 = &unk_1002FB000;
  if (v17 != 1) {
    goto LABEL_13;
  }
  uint64_t v20 = *(void *)(v0 + 216);
  uint64_t v21 = *(void *)(v0 + 184);
  uint64_t v22 = *(int *)(v21 + 44);
  uint64_t v23 = *(void *)(v20 + v22);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
    return result;
  }
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(v0 + 176);
  uint64_t v28 = *(void *)(v0 + 128);
  *(void *)(v20 + v22) = v25;
  uint64_t v29 = v28 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
  swift_beginAccess();
  sub_10000C3A4(v29, v27, &qword_1002F39A0);
  LODWORD(v29) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v21);
  sub_10000B070(v27, &qword_1002F39A0);
  if (v29 != 1) {
    goto LABEL_11;
  }
  uint64_t v31 = *(void *)(v0 + 144);
  uint64_t v30 = *(void *)(v0 + 152);
  uint64_t v32 = *(void *)(v0 + 136);
  uint64_t v33 = *(void *)(v0 + 128) + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v33, v32);
  LOBYTE(v33) = static UUID.== infix(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  if ((v33 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v34 = *(void *)(v20 + v22);
  if ((uint64_t)[*(id *)(*(void *)(v0 + 128) + 16) maxPartialTranslationAttempts] >= v34)
  {
LABEL_13:
    sub_1000B63E4(*(void *)(v0 + 120), *(void *)(v0 + 208));
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = *(void *)(v0 + 208);
    if (v45)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446210;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 88) = sub_100202FD4(v48, v49, &v58);
      uint64_t v19 = (void *)&unk_1002FB000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v46);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Adding partial translation; id: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278(*(void *)(v0 + 208));
    }

    uint64_t v50 = *(void *)(v0 + 184);
    uint64_t v51 = *(void *)(v0 + 192);
    uint64_t v53 = *(void *)(v0 + 160);
    uint64_t v52 = *(void *)(v0 + 168);
    uint64_t v54 = *(void *)(v0 + 128);
    sub_1000B65F4(*(void *)(v0 + 216), v52);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
    sub_10001323C(v52, v53, &qword_1002F39A0);
    uint64_t v55 = v54 + v19[91];
    swift_beginAccess();
    sub_1000344BC(v53, v55, &qword_1002F39A0);
    swift_endAccess();
  }
  else
  {
LABEL_11:
    sub_1000B63E4(*(void *)(v0 + 120), *(void *)(v0 + 200));
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void *)(v0 + 216);
    uint64_t v39 = *(void *)(v0 + 200);
    if (v37)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136446210;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 96) = sub_100202FD4(v41, v42, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v39);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Adding partial translation CANCELED; id: %{public}s",
        v40,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_1001E6278(v39);
    }
    sub_1001E6278(v38);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
  return v56();
}

uint64_t sub_1001DF2A8(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  sub_100007620(&qword_1002FB720);
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for StreamingRequestInfo(0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[13] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DF3B0, v4, v3);
}

uint64_t sub_1001DF3B0()
{
  uint64_t v20 = v0;
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v1, v2);
  sub_1000B63E4(v1, v3);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[12];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218243;
    uint64_t v11 = String.count.getter();
    sub_1001E6278(v9);
    v0[5] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2085;
    swift_bridgeObjectRetain();
    sub_1001E6190(100);
    swift_bridgeObjectRelease();
    uint64_t v12 = static String._fromSubstring(_:)();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    v0[6] = sub_100202FD4(v12, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Adding final translation; source text length: %ld; sourceText: '%{sensitive}s'",
      (uint8_t *)v10,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(v0[12]);
    sub_1001E6278(v8);
  }

  uint64_t v15 = v0[9];
  uint64_t v16 = v0[7];
  swift_beginAccess();
  sub_1000B63E4(v16, v15);
  sub_10022BC10(0, 0, v15);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1001DF6CC(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  v2[22] = sub_100007620(&qword_1002F43B0);
  v2[23] = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F33E0);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[27] = v3;
  v2[28] = *(void *)(v3 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  v2[30] = v4;
  v2[31] = *(void *)(v4 - 8);
  v2[32] = swift_task_alloc();
  sub_100007620(&qword_1002F39A0);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[36] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001DF8E8, v6, v5);
}

uint64_t sub_1001DF8E8()
{
  uint64_t v84 = v0;
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAB0);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v80 = v3;
    log = v2;
    uint64_t v4 = v0[35];
    uint64_t v5 = v0[30];
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[21];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446723;
    uint64_t v9 = v7 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
    swift_beginAccess();
    sub_10000C3A4(v9, v4, &qword_1002F39A0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    int v11 = v10(v4, 1, v5);
    uint64_t v12 = v0[35];
    int v79 = v10;
    if (v11)
    {
      sub_10000B070(v12, &qword_1002F39A0);
      unint64_t v13 = 0xE300000000000000;
      uint64_t v14 = 7104878;
    }
    else
    {
      uint64_t v15 = v0[32];
      uint64_t v17 = v0[28];
      uint64_t v16 = v0[29];
      uint64_t v18 = v0[27];
      sub_1000B63E4(v12, v15);
      sub_10000B070(v12, &qword_1002F39A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v15, v18);
      sub_1001E6278(v15);
      uint64_t v14 = UUID.description.getter();
      unint64_t v13 = v19;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    }
    uint64_t v20 = v0[34];
    uint64_t v21 = v0[30];
    v0[18] = sub_100202FD4(v14, v13, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2085;
    sub_10000C3A4(v9, v20, &qword_1002F39A0);
    int v22 = v79(v20, 1, v21);
    uint64_t v23 = v0[34];
    if (v22)
    {
      sub_10000B070(v0[34], &qword_1002F39A0);
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 7104878;
    }
    else
    {
      uint64_t v26 = v0[32];
      uint64_t v27 = v0[30];
      sub_1000B63E4(v0[34], v26);
      sub_10000B070(v23, &qword_1002F39A0);
      uint64_t v28 = (uint64_t *)(v26 + *(int *)(v27 + 20));
      uint64_t v25 = *v28;
      unint64_t v24 = v28[1];
      swift_bridgeObjectRetain();
      sub_1001E6278(v26);
    }
    uint64_t v30 = v0[28];
    uint64_t v29 = v0[29];
    uint64_t v31 = v0[27];
    uint64_t v32 = v0[21];
    v0[17] = sub_100202FD4(v25, v24, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 22) = 2082;
    uint64_t v33 = v32 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v33, v31);
    uint64_t v34 = UUID.description.getter();
    unint64_t v36 = v35;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    v0[19] = sub_100202FD4(v34, v36, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, log, v80, "Getting next partial request; id: %{public}s, sourceText: %{sensitive}s, currentRequestId: %{public}s",
      (uint8_t *)v8,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  uint64_t v37 = v0[33];
  uint64_t v38 = v0[30];
  uint64_t v39 = v0[31];
  uint64_t v40 = v0[20];
  uint64_t v41 = v0[21] + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
  swift_beginAccess();
  sub_10000C3A4(v41, v40, &qword_1002F39A0);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
  v82(v37, 1, 1, v38);
  swift_beginAccess();
  sub_1000344BC(v37, v41, &qword_1002F39A0);
  swift_endAccess();
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38);
  uint64_t v43 = v0[27];
  uint64_t v44 = v0[28];
  uint64_t v45 = v0[26];
  if (v42)
  {
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v46(v0[26], 1, 1, v43);
  }
  else
  {
    (*(void (**)(void, void, void))(v44 + 16))(v0[26], v0[20], v0[27]);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    v46(v45, 0, 1, v43);
  }
  uint64_t v47 = v0[27];
  uint64_t v48 = v0[28];
  uint64_t v50 = v0[25];
  uint64_t v49 = v0[26];
  uint64_t v52 = v0[22];
  uint64_t v51 = v0[23];
  uint64_t v53 = v0[21] + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v50, v53, v47);
  v46(v50, 0, 1, v47);
  uint64_t v54 = v51 + *(int *)(v52 + 48);
  sub_10000C3A4(v49, v51, (uint64_t *)&unk_1002F33E0);
  sub_10000C3A4(v50, v54, (uint64_t *)&unk_1002F33E0);
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  int v56 = v55(v51, 1, v47);
  uint64_t v57 = v0[27];
  if (v56 == 1)
  {
    uint64_t v58 = v0[26];
    sub_10000B070(v0[25], (uint64_t *)&unk_1002F33E0);
    sub_10000B070(v58, (uint64_t *)&unk_1002F33E0);
    if (v55(v54, 1, v57) == 1)
    {
      sub_10000B070(v0[23], (uint64_t *)&unk_1002F33E0);
      goto LABEL_25;
    }
  }
  else
  {
    sub_10000C3A4(v0[23], v0[24], (uint64_t *)&unk_1002F33E0);
    if (v55(v54, 1, v57) != 1)
    {
      uint64_t v64 = v0[28];
      uint64_t v63 = v0[29];
      uint64_t v66 = v0[26];
      uint64_t v65 = v0[27];
      uint64_t v68 = v0[24];
      uint64_t v67 = v0[25];
      uint64_t v69 = v0[23];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v63, v54, v65);
      sub_1001E63C8((unint64_t *)&qword_1002F43B8, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v70 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
      v71(v63, v65);
      sub_10000B070(v67, (uint64_t *)&unk_1002F33E0);
      sub_10000B070(v66, (uint64_t *)&unk_1002F33E0);
      v71(v68, v65);
      sub_10000B070(v69, (uint64_t *)&unk_1002F33E0);
      if (v70) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
    uint64_t v59 = v0[27];
    uint64_t v60 = v0[28];
    uint64_t v61 = v0[26];
    uint64_t v62 = v0[24];
    sub_10000B070(v0[25], (uint64_t *)&unk_1002F33E0);
    sub_10000B070(v61, (uint64_t *)&unk_1002F33E0);
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v62, v59);
  }
  sub_10000B070(v0[23], &qword_1002F43B0);
LABEL_22:
  uint64_t v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v74 = 0;
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Returning empty partial request, not a match with current request", v74, 2u);
    swift_slowDealloc();
  }
  uint64_t v75 = v0[30];
  uint64_t v76 = v0[20];

  sub_10000B070(v76, &qword_1002F39A0);
  v82(v76, 1, 1, v75);
LABEL_25:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = (uint64_t (*)(void))v0[1];
  return v77();
}

uint64_t sub_1001E0250(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  sub_100007620(&qword_1002F39A0);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001E039C, v5, v4);
}

uint64_t sub_1001E039C()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[7];
  swift_release();
  swift_beginAccess();
  sub_1001E0800(v1);
  swift_endAccess();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v4 = v0[7];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EAB0);
  sub_10000C3A4(v4, v2, &qword_1002F39A0);
  sub_10000C3A4(v4, v3, &qword_1002F39A0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[15];
  if (v8)
  {
    log = v6;
    uint64_t v10 = v0[13];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446467;
    sub_10000C3A4(v9, v10, &qword_1002F39A0);
    uint64_t v12 = type metadata accessor for StreamingRequestInfo(0);
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    int v13 = v33(v10, 1, v12);
    uint64_t v14 = v0[13];
    os_log_type_t v34 = v7;
    if (v13 == 1)
    {
      sub_10000B070(v14, &qword_1002F39A0);
      unint64_t v15 = 0xE300000000000000;
      uint64_t v16 = 7104878;
    }
    else
    {
      uint64_t v18 = v0[10];
      uint64_t v19 = v0[11];
      uint64_t v20 = v0[9];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v19, v14, v20);
      sub_1001E6278(v14);
      uint64_t v16 = UUID.description.getter();
      unint64_t v15 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    }
    uint64_t v23 = v0[14];
    uint64_t v22 = v0[15];
    uint64_t v24 = v0[12];
    v0[5] = sub_100202FD4(v16, v15, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000B070(v22, &qword_1002F39A0);
    *(_WORD *)(v11 + 12) = 2085;
    sub_10000C3A4(v23, v24, &qword_1002F39A0);
    int v25 = v33(v24, 1, v12);
    uint64_t v26 = v0[12];
    if (v25 == 1)
    {
      sub_10000B070(v0[12], &qword_1002F39A0);
      unint64_t v27 = 0xE300000000000000;
      uint64_t v28 = 7104878;
    }
    else
    {
      uint64_t v29 = (uint64_t *)(v26 + *(int *)(v12 + 20));
      uint64_t v28 = *v29;
      unint64_t v27 = v29[1];
      swift_bridgeObjectRetain();
      sub_1001E6278(v26);
    }
    uint64_t v30 = v0[14];
    v0[6] = sub_100202FD4(v28, v27, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000B070(v30, &qword_1002F39A0);
    _os_log_impl((void *)&_mh_execute_header, log, v34, "Next final request; id: %{public}s, sourceText: %{sensitive}s",
      (uint8_t *)v11,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = v0[14];
    sub_10000B070(v0[15], &qword_1002F39A0);
    sub_10000B070(v17, &qword_1002F39A0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001E0800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v15 - v8;
  unint64_t v10 = *v1;
  if (*(void *)(*v1 + 16))
  {
    uint64_t v16 = v7;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_100098634(v10);
      unint64_t v10 = result;
    }
    uint64_t v12 = *(void *)(v10 + 16);
    if (v12)
    {
      uint64_t v13 = v12 - 1;
      sub_1000B65F4(v10+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * (v12 - 1), (uint64_t)v6);
      *(void *)(v10 + 16) = v13;
      unint64_t *v1 = v10;
      sub_1000B65F4((uint64_t)v6, (uint64_t)v9);
      sub_1000B65F4((uint64_t)v9, a1);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v3);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    return v14(a1, 1, 1, v3);
  }
  return result;
}

uint64_t sub_1001E09C4()
{
  v1[16] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StreamingRequestInfo(0);
  v1[20] = v3;
  v1[21] = *(void *)(v3 - 8);
  v1[22] = swift_task_alloc();
  sub_100007620(&qword_1002F39A0);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001E0B54, v5, v4);
}

uint64_t sub_1001E0B54()
{
  uint64_t v31 = v0;
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAB0);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v27 = v3;
    uint64_t v28 = v2;
    uint64_t v4 = v0[24];
    uint64_t v5 = v0[21];
    uint64_t v29 = v0[20];
    uint64_t v6 = v0[16];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134349314;
    uint64_t v8 = v6 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_finalTranslationRequestsQueue;
    swift_beginAccess();
    v0[14] = *(void *)(*(void *)v8 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v9 = v6 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
    swift_beginAccess();
    sub_10000C3A4(v9, v4, &qword_1002F39A0);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v29);
    uint64_t v11 = v0[24];
    if (v10)
    {
      sub_10000B070(v0[24], &qword_1002F39A0);
      unint64_t v12 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    else
    {
      uint64_t v14 = v0[22];
      uint64_t v15 = v0[18];
      uint64_t v16 = v0[19];
      uint64_t v17 = v0[17];
      sub_1000B63E4(v0[24], v14);
      sub_10000B070(v11, &qword_1002F39A0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v16, v14, v17);
      sub_1001E6278(v14);
      uint64_t v13 = UUID.description.getter();
      unint64_t v12 = v18;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    }
    v0[15] = sub_100202FD4(v13, v12, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v28, v27, "Additional request to translate; finalTranslationRequestsQueue.count: %{public}ld, partialTranslationRequest: %{public}s",
      (uint8_t *)v7,
      0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
  uint64_t v19 = v0[16] + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_finalTranslationRequestsQueue;
  swift_beginAccess();
  if (*(void *)(*(void *)v19 + 16))
  {
    BOOL v20 = 1;
  }
  else
  {
    uint64_t v21 = v0[23];
    uint64_t v22 = v0[20];
    uint64_t v23 = v0[21];
    uint64_t v24 = v0[16] + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest;
    swift_beginAccess();
    sub_10000C3A4(v24, v21, &qword_1002F39A0);
    BOOL v20 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1;
    sub_10000B070(v21, &qword_1002F39A0);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v25 = (uint64_t (*)(BOOL))v0[1];
  return v25(v20);
}

void sub_1001E0F90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  Class isa = v4[-1].isa;
  os_log_t v62 = v4;
  __chkstk_darwin(v4);
  uint64_t v60 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v58 = (char *)&v56 - v9;
  uint64_t v63 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v10 = __chkstk_darwin(v63);
  unint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v56 - v13;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  swift_beginAccess();
  BOOL v20 = *(objc_class **)(v16 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v18, v19, v15);
  uint64_t v64 = a1;
  LOBYTE(a1) = static UUID.== infix(_:_:)();
  uint64_t v57 = *(void (**)(char *, uint64_t))(v16 + 8);
  v57(v18, v15);
  if (a1)
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100011554(v21, (uint64_t)qword_10030EAB0);
    sub_1000B63E4(v64, (uint64_t)v14);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v65[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_100202FD4(v25, v26, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278((uint64_t)v14);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Updating last submission info; id: %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278((uint64_t)v14);
    }

    uint64_t v39 = v64;
    uint64_t v40 = v63;
    uint64_t v41 = (uint64_t *)(v64 + *(int *)(v63 + 20));
    uint64_t v43 = *v41;
    uint64_t v42 = v41[1];
    uint64_t v44 = (void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText);
    *uint64_t v44 = v43;
    v44[1] = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v45 = v39 + *(int *)(v40 + 24);
    uint64_t v46 = type metadata accessor for Locale();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = v2;
    uint64_t v57 = *(void (**)(char *, uint64_t))(v47 + 16);
    uint64_t v49 = (uint64_t)v58;
    ((void (*)(char *, uint64_t, uint64_t))v57)(v58, v45, v46);
    uint64_t v50 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56);
    v50(v49, 0, 1, v46);
    uint64_t v51 = v59;
    sub_10001323C(v49, v59, (uint64_t *)&unk_1002F4110);
    uint64_t v52 = v48 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSourceLocale;
    swift_beginAccess();
    sub_1000344BC(v51, v52, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    ((void (*)(uint64_t, uint64_t, uint64_t))v57)(v49, v39 + *(int *)(v63 + 28), v46);
    v50(v49, 0, 1, v46);
    sub_10001323C(v49, v51, (uint64_t *)&unk_1002F4110);
    uint64_t v53 = v48 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTargetLocale;
    swift_beginAccess();
    sub_1000344BC(v51, v53, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    uint64_t v54 = v60;
    static Date.now.getter();
    uint64_t v55 = v48 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp;
    swift_beginAccess();
    (*((void (**)(uint64_t, char *, os_log_t))isa + 5))(v55, v54, v62);
    swift_endAccess();
  }
  else
  {
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100011554(v27, (uint64_t)qword_10030EAB0);
    sub_1000B63E4(v64, (uint64_t)v12);
    swift_retain_n();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v63 = v2;
      Class isa = v20;
      uint64_t v32 = v31;
      uint64_t v64 = swift_slowAlloc();
      v65[0] = v64;
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v59 = v32 + 4;
      sub_1001E63C8(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
      os_log_t v62 = v28;
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v66 = sub_100202FD4(v33, v34, v65);
      LODWORD(v60) = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278((uint64_t)v12);
      *(_WORD *)(v32 + 12) = 2082;
      ((void (*)(char *, uint64_t, uint64_t))isa)(v18, v19, v15);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v37 = v36;
      v57(v18, v15);
      uint64_t v66 = sub_100202FD4(v35, v37, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v38 = v62;
      _os_log_impl((void *)&_mh_execute_header, v62, (os_log_type_t)v60, "CANCELLING update of last submission; streaming request does not match the current request; steamingRequest.id: "
        "%{public}s, currentRequestId: %{public}s",
        (uint8_t *)v32,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278((uint64_t)v12);

      swift_release_n();
    }
  }
}

uint64_t sub_1001E1800()
{
  v1[2] = v0;
  sub_100007620(&qword_1002F33C0);
  v1[3] = swift_task_alloc();
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_1001E18CC, v3, v2);
}

uint64_t sub_1001E18CC()
{
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 64) = sub_100011554(v1, (uint64_t)qword_10030EAB0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Processing next translation", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  void *v5 = v0;
  v5[1] = sub_1001E1A20;
  return sub_1001DE338(1);
}

uint64_t sub_1001E1A20(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 80) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_1001E1B48, v4, v3);
}

uint64_t sub_1001E1B48()
{
  char v1 = *(unsigned char *)(v0 + 80);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    swift_retain();
    uint64_t v5 = static MainActor.shared.getter();
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v5;
    v6[3] = &protocol witness table for MainActor;
    v6[4] = v3;
    sub_100056780(v2, (uint64_t)&unk_1002FB718, (uint64_t)v6);
    swift_release();
  }
  else
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Processing next translation CANCELLED because state is already .translating", v9, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1001E1CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[44] = a4;
  uint64_t v5 = type metadata accessor for Locale();
  v4[45] = v5;
  v4[46] = *(void *)(v5 - 8);
  v4[47] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StreamingRequestInfo(0);
  v4[48] = v6;
  v4[49] = *(void *)(v6 - 8);
  v4[50] = swift_task_alloc();
  v4[51] = swift_task_alloc();
  sub_100007620(&qword_1002F39A0);
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[56] = v7;
  v4[57] = *(void *)(v7 - 8);
  v4[58] = swift_task_alloc();
  v4[59] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[60] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[61] = v9;
  v4[62] = v8;
  return _swift_task_switch(sub_1001E1EF8, v9, v8);
}

uint64_t sub_1001E1EF8()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[57];
  uint64_t v4 = v0[44];
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  v0[63] = OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[64] = v7;
  v0[65] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v2);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[66] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1001E1FEC;
  return sub_1001E09C4();
}

uint64_t sub_1001E1FEC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 641) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  return _swift_task_switch(sub_1001E2114, v4, v3);
}

uint64_t sub_1001E2114()
{
  if (*(unsigned char *)(v0 + 641) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 464);
    uint64_t v2 = *(void *)(v0 + 448);
    uint64_t v3 = *(void *)(v0 + 456);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 512))(v1, *(void *)(v0 + 352) + *(void *)(v0 + 504), v2);
    char v4 = static UUID.== infix(_:_:)();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(void *)(v0 + 536) = v5;
    *(void *)(v0 + 544) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v5(v1, v2);
    if (v4)
    {
      *(unsigned char *)(v0 + 640) = 1;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_1001E241C;
      uint64_t v7 = *(void *)(v0 + 440);
      return sub_1001E0250(v7);
    }
    else
    {
      swift_release();
      if (qword_1002EE638 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100011554(v10, (uint64_t)qword_10030EAB0);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.info.getter();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 472);
      uint64_t v15 = *(void *)(v0 + 448);
      if (v13)
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Ending the current Task because state has been reset since this one started; another Task may have been started",
          v16,
          2u);
        swift_slowDealloc();
      }

      v5(v14, v15);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v9;
    void *v9 = v0;
    v9[1] = sub_1001E39A4;
    return sub_1001DE338(0);
  }
}

uint64_t sub_1001E241C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1001E253C, v3, v2);
}

uint64_t sub_1001E253C()
{
  uint64_t v49 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 640);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 392);
  sub_10000C3A4(*(void *)(v0 + 440), v2, &qword_1002F39A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(void *)(v0 + 560) = v5;
  *(void *)(v0 + 568) = (v4 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  LODWORD(v3) = v5(v2, 1, v3);
  sub_10000B070(v2, &qword_1002F39A0);
  if (v3 == 1)
  {
    swift_beginAccess();
    *(unsigned char *)(v0 + 640) = 0;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 576) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001E2C04;
    uint64_t v7 = *(void *)(v0 + 424);
    return sub_1001DF6CC(v7);
  }
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
  uint64_t v10 = *(void *)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 384);
  sub_10000C3A4(*(void *)(v0 + 440), v10, &qword_1002F39A0);
  if (v9(v10, 1, v11) == 1)
  {
    uint64_t v12 = *(void *)(v0 + 416);
    sub_10000B070(*(void *)(v0 + 440), &qword_1002F39A0);
    uint64_t v13 = v12;
    uint64_t v14 = &qword_1002F39A0;
LABEL_22:
    sub_10000B070(v13, v14);
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1001E3574;
    return sub_1001E09C4();
  }
  sub_1000B65F4(*(void *)(v0 + 416), *(void *)(v0 + 408));
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 400);
  uint64_t v15 = *(void *)(v0 + 408);
  uint64_t v17 = type metadata accessor for Logger();
  *(void *)(v0 + 584) = sub_100011554(v17, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v15, v16);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = *(void *)(v0 + 400);
  if (v20)
  {
    uint64_t v45 = *(void *)(v0 + 384);
    uint64_t v22 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136446467;
    swift_beginAccess();
    if (*v1) {
      uint64_t v23 = 0x6C616E6966;
    }
    else {
      uint64_t v23 = 0x6C616974726170;
    }
    if (*v1) {
      unint64_t v24 = 0xE500000000000000;
    }
    else {
      unint64_t v24 = 0xE700000000000000;
    }
    *(void *)(v0 + 336) = sub_100202FD4(v23, v24, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2085;
    uint64_t v25 = (uint64_t *)(v21 + *(int *)(v45 + 20));
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 344) = sub_100202FD4(v27, v26, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v21);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Performing a %{public}s translation with content %{sensitive}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(*(void *)(v0 + 400));
  }

  uint64_t v28 = *(void *)(v0 + 408);
  uint64_t v29 = *(void *)(v0 + 384);
  sub_1001E0F90(v28);
  uint64_t v30 = v28 + *(int *)(v29 + 24);
  id v31 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v33 = Locale._bridgeToObjectiveC()().super.isa;
  id v34 = [v31 initWithSourceLocale:isa targetLocale:v33];

  LODWORD(v33) = [v34 isPassthrough];
  if (v33)
  {
    uint64_t v47 = (uint64_t *)(v0 + 96);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      unint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Performing passthrough", v37, 2u);
      swift_slowDealloc();
    }
    uint64_t v46 = *(void *)(v0 + 440);
    uint64_t v38 = *(void *)(v0 + 408);
    uint64_t v39 = *(void *)(v0 + 376);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v40 = *(void *)(v0 + 368);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v39, v30, v41);
    *(void *)(v0 + 120) = type metadata accessor for StoredTranslationResult();
    *(void *)(v0 + 128) = sub_1001E63C8((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
    sub_100014830(v47);
    swift_bridgeObjectRetain();
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    swift_beginAccess();
    sub_1001DD940(v38, (uint64_t)v47, *v1, 0);
    sub_1001E6278(v38);
    sub_10000B070(v46, &qword_1002F39A0);
    uint64_t v14 = (uint64_t *)&unk_1002F33F0;
    uint64_t v13 = v0 + 96;
    goto LABEL_22;
  }
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v43;
  *uint64_t v43 = v0;
  v43[1] = sub_1001E3310;
  uint64_t v44 = *(void *)(v0 + 408);
  return sub_1001E4404(v0 + 136, v44);
}

uint64_t sub_1001E2C04()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1001E2D24, v3, v2);
}

uint64_t sub_1001E2D24()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 424);
  sub_10000B070(v1, &qword_1002F39A0);
  sub_10001323C(v2, v1, &qword_1002F39A0);
  uint64_t v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 384);
  sub_10000C3A4(*(void *)(v0 + 440), v4, &qword_1002F39A0);
  if (v3(v4, 1, v5) == 1)
  {
    uint64_t v6 = *(void *)(v0 + 416);
    sub_10000B070(*(void *)(v0 + 440), &qword_1002F39A0);
    uint64_t v7 = v6;
    uint64_t v8 = &qword_1002F39A0;
LABEL_18:
    sub_10000B070(v7, v8);
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 608) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_1001E3574;
    return sub_1001E09C4();
  }
  sub_1000B65F4(*(void *)(v0 + 416), *(void *)(v0 + 408));
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v9 = (unsigned char *)(v0 + 640);
  uint64_t v11 = *(void *)(v0 + 400);
  uint64_t v10 = *(void *)(v0 + 408);
  uint64_t v12 = type metadata accessor for Logger();
  *(void *)(v0 + 584) = sub_100011554(v12, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v10, v11);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v16 = *(void *)(v0 + 400);
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 384);
    uint64_t v18 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446467;
    swift_beginAccess();
    if (*v9) {
      uint64_t v19 = 0x6C616E6966;
    }
    else {
      uint64_t v19 = 0x6C616974726170;
    }
    if (*v9) {
      unint64_t v20 = 0xE500000000000000;
    }
    else {
      unint64_t v20 = 0xE700000000000000;
    }
    *(void *)(v0 + 336) = sub_100202FD4(v19, v20, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2085;
    uint64_t v21 = (uint64_t *)(v16 + *(int *)(v17 + 20));
    uint64_t v23 = *v21;
    unint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    *(void *)(v0 + 344) = sub_100202FD4(v23, v22, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v16);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Performing a %{public}s translation with content %{sensitive}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(v16);
  }

  uint64_t v24 = *(void *)(v0 + 408);
  uint64_t v25 = *(void *)(v0 + 384);
  sub_1001E0F90(v24);
  uint64_t v26 = v24 + *(int *)(v25 + 24);
  id v27 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v29 = Locale._bridgeToObjectiveC()().super.isa;
  id v30 = [v27 initWithSourceLocale:isa targetLocale:v29];

  LODWORD(v29) = [v30 isPassthrough];
  if (v29)
  {
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v31, v32))
    {
      Class v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Performing passthrough", v33, 2u);
      swift_slowDealloc();
    }
    uint64_t v42 = *(void *)(v0 + 440);
    uint64_t v34 = *(void *)(v0 + 408);
    uint64_t v35 = *(void *)(v0 + 376);
    uint64_t v37 = *(void *)(v0 + 360);
    uint64_t v36 = *(void *)(v0 + 368);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v26, v37);
    *(void *)(v0 + 120) = type metadata accessor for StoredTranslationResult();
    *(void *)(v0 + 128) = sub_1001E63C8((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
    sub_100014830((uint64_t *)(v0 + 96));
    swift_bridgeObjectRetain();
    StoredTranslationResult.init(text:locale:isOffline:romanization:)();
    swift_beginAccess();
    sub_1001DD940(v34, v0 + 96, *(unsigned __int8 *)(v0 + 640), 0);
    sub_1001E6278(v34);
    sub_10000B070(v42, &qword_1002F39A0);
    uint64_t v8 = (uint64_t *)&unk_1002F33F0;
    uint64_t v7 = v0 + 96;
    goto LABEL_18;
  }
  uint64_t v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v40;
  *uint64_t v40 = v0;
  v40[1] = sub_1001E3310;
  uint64_t v41 = *(void *)(v0 + 408);
  return sub_1001E4404(v0 + 136, v41);
}

uint64_t sub_1001E3310()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 600) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  if (v0) {
    uint64_t v5 = sub_1001E417C;
  }
  else {
    uint64_t v5 = sub_1001E344C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001E344C()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 408);
  sub_1000295C0(v0 + 136, v0 + 56);
  swift_beginAccess();
  sub_1001DD940(v2, v0 + 56, *(unsigned __int8 *)(v0 + 640), 0);
  sub_10000B070(v0 + 56, (uint64_t *)&unk_1002F33F0);
  sub_10000AB68(v0 + 136);
  sub_1001E6278(v2);
  sub_10000B070(v1, &qword_1002F39A0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1001E3574;
  return sub_1001E09C4();
}

uint64_t sub_1001E3574(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 642) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 496);
  uint64_t v4 = *(void *)(v2 + 488);
  return _swift_task_switch(sub_1001E369C, v4, v3);
}

uint64_t sub_1001E369C()
{
  if (*(unsigned char *)(v0 + 642) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 464);
    uint64_t v2 = *(void *)(v0 + 448);
    uint64_t v3 = *(void *)(v0 + 456);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 512))(v1, *(void *)(v0 + 352) + *(void *)(v0 + 504), v2);
    char v4 = static UUID.== infix(_:_:)();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(void *)(v0 + 536) = v5;
    *(void *)(v0 + 544) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v5(v1, v2);
    if (v4)
    {
      *(unsigned char *)(v0 + 640) = 1;
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_1001E241C;
      uint64_t v7 = *(void *)(v0 + 440);
      return sub_1001E0250(v7);
    }
    else
    {
      swift_release();
      if (qword_1002EE638 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100011554(v10, (uint64_t)qword_10030EAB0);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.info.getter();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 472);
      uint64_t v15 = *(void *)(v0 + 448);
      if (v13)
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Ending the current Task because state has been reset since this one started; another Task may have been started",
          v16,
          2u);
        swift_slowDealloc();
      }

      v5(v14, v15);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
      return v17();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v9;
    void *v9 = v0;
    v9[1] = sub_1001E39A4;
    return sub_1001DE338(0);
  }
}

uint64_t sub_1001E39A4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1001E3AC4, v3, v2);
}

uint64_t sub_1001E3AC4()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = v0[56];
  uint64_t v3 = v0[57];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001E3BB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1001E3CD0, v3, v2);
}

uint64_t sub_1001E3CD0()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 640))
  {
    swift_release();
    uint64_t v1 = *(void *)(v0 + 600);
    uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
    uint64_t v3 = *(void *)(v0 + 472);
    uint64_t v5 = *(void *)(v0 + 440);
    uint64_t v4 = *(void *)(v0 + 448);
    uint64_t v6 = *(void *)(v0 + 408);
    *(_OWORD *)(v0 + 32) = 0u;
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    int v7 = *(unsigned __int8 *)(v0 + 640);
    swift_errorRetain();
    sub_1001DD940(v6, v0 + 16, v7, v1);
    swift_errorRelease();
    swift_errorRelease();
    sub_10000B070(v0 + 16, (uint64_t *)&unk_1002F33F0);
    sub_1001E6278(v6);
    sub_10000B070(v5, &qword_1002F39A0);
    v2(v3, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 632) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1001E3EE8;
    uint64_t v11 = *(void *)(v0 + 408);
    return sub_1001DE938(v11, 1);
  }
}

uint64_t sub_1001E3EE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1001E4008, v3, v2);
}

uint64_t sub_1001E4008()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 600);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 536);
  uint64_t v3 = *(void *)(v0 + 472);
  uint64_t v5 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 448);
  uint64_t v6 = *(void *)(v0 + 408);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  int v7 = *(unsigned __int8 *)(v0 + 640);
  swift_errorRetain();
  sub_1001DD940(v6, v0 + 16, v7, v1);
  swift_errorRelease();
  swift_errorRelease();
  sub_10000B070(v0 + 16, (uint64_t *)&unk_1002F33F0);
  sub_1001E6278(v6);
  sub_10000B070(v5, &qword_1002F39A0);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1001E417C()
{
  uint64_t v12 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 640);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    if (v1) {
      uint64_t v6 = 0x6C616E6966;
    }
    else {
      uint64_t v6 = 0x6C616974726170;
    }
    if (v1) {
      unint64_t v7 = 0xE500000000000000;
    }
    else {
      unint64_t v7 = 0xE700000000000000;
    }
    *(void *)(v0 + 328) = sub_100202FD4(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2112;
    uint64_t v8 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 320) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Encountered error with a %{public}s translation request: %@", (uint8_t *)v4, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v9;
  void *v9 = v0;
  v9[1] = sub_1001E3BB0;
  return sub_1001DE338(2);
}

uint64_t sub_1001E4404(uint64_t a1, uint64_t a2)
{
  v3[25] = a2;
  v3[26] = v2;
  v3[24] = a1;
  sub_100007620(&qword_1002F39A0);
  v3[27] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  v3[28] = v4;
  v3[29] = *(void *)(v4 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[37] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[38] = v6;
  v3[39] = v5;
  return _swift_task_switch(sub_1001E4578, v6, v5);
}

uint64_t sub_1001E4578()
{
  uint64_t v62 = v0;
  uint64_t v1 = *(void *)(v0 + 208) + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation;
  swift_beginAccess();
  sub_10000C3A4(v1, v0 + 56, (uint64_t *)&unk_1002F33F0);
  if (!*(void *)(v0 + 80))
  {
    sub_10000B070(v0 + 56, (uint64_t *)&unk_1002F33F0);
LABEL_14:
    if (qword_1002EE638 != -1) {
      swift_once();
    }
    uint64_t v27 = *(void *)(v0 + 248);
    uint64_t v28 = *(void *)(v0 + 256);
    uint64_t v29 = *(void *)(v0 + 240);
    uint64_t v30 = *(void *)(v0 + 200);
    uint64_t v31 = type metadata accessor for Logger();
    sub_100011554(v31, (uint64_t)qword_10030EAB0);
    sub_1000B63E4(v30, v28);
    sub_1000B63E4(v30, v27);
    sub_1000B63E4(v30, v29);
    os_log_type_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = *(void *)(v0 + 248);
    uint64_t v36 = *(void *)(v0 + 256);
    uint64_t v37 = *(void *)(v0 + 240);
    if (v34)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446722;
      uint64_t v39 = Locale.ltIdentifier.getter();
      *(void *)(v0 + 160) = sub_100202FD4(v39, v40, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v36);
      *(_WORD *)(v38 + 12) = 2082;
      uint64_t v41 = Locale.ltIdentifier.getter();
      *(void *)(v0 + 144) = sub_100202FD4(v41, v42, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1001E6278(v35);
      *(_WORD *)(v38 + 22) = 2050;
      uint64_t v43 = String.count.getter();
      sub_1001E6278(v37);
      *(void *)(v0 + 152) = v43;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Streaming translation from '%{public}s' -> '%{public}s' of length %{public}ld -> got no matching previous translation", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1001E6278(*(void *)(v0 + 240));
      sub_1001E6278(v36);
      sub_1001E6278(v35);
    }
    uint64_t v44 = *(void *)(v0 + 200);
    uint64_t v45 = *(int **)(v0 + 224);
    uint64_t v46 = (uint64_t *)(v44 + v45[5]);
    uint64_t v47 = *v46;
    uint64_t v48 = v46[1];
    uint64_t v49 = v44 + v45[6];
    uint64_t v50 = v45[8];
    uint64_t v51 = v44 + v45[7];
    __int16 v52 = *(unsigned __int8 *)(v44 + v50);
    int v53 = *(unsigned __int8 *)(v44 + v50 + 1);
    uint64_t v54 = *(void *)(v44 + v50 + 8);
    uint64_t v55 = v44 + v45[10];
    uint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v56;
    if (v53) {
      __int16 v57 = 256;
    }
    else {
      __int16 v57 = 0;
    }
    void *v56 = v0;
    v56[1] = sub_1001E4D28;
    uint64_t v58 = *(void *)(v0 + 192);
    return sub_100164530(v58, v47, v48, v49, v51, v57 | v52, v54, v55);
  }
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 216);
  sub_100048DE4((long long *)(v0 + 56), v0 + 16);
  uint64_t v6 = v5 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest;
  swift_beginAccess();
  sub_10000C3A4(v6, v4, &qword_1002F39A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_10000B070(*(void *)(v0 + 216), &qword_1002F39A0);
LABEL_13:
    sub_10000AB68(v0 + 16);
    goto LABEL_14;
  }
  sub_1000B65F4(*(void *)(v0 + 216), *(void *)(v0 + 288));
  sub_100029624((void *)(v0 + 16), *(void *)(v0 + 40));
  char v7 = dispatch thunk of TranslationResult.isFinal.getter();
  uint64_t v8 = *(void *)(v0 + 288);
  if ((v7 & 1) == 0)
  {
LABEL_12:
    sub_1001E6278(v8);
    goto LABEL_13;
  }
  if ((sub_1001D744C(v8) & 1) == 0)
  {
    uint64_t v8 = *(void *)(v0 + 288);
    goto LABEL_12;
  }
  swift_release();
  if (qword_1002EE638 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v10 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030EAB0);
  sub_1000B63E4(v12, v10);
  sub_1000B63E4(v12, v9);
  sub_1000B63E4(v12, v11);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v18 = *(void *)(v0 + 280);
  uint64_t v17 = *(void *)(v0 + 288);
  uint64_t v20 = *(void *)(v0 + 264);
  uint64_t v19 = *(void *)(v0 + 272);
  if (v16)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446722;
    uint64_t v22 = Locale.ltIdentifier.getter();
    *(void *)(v0 + 168) = sub_100202FD4(v22, v23, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v18);
    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v24 = Locale.ltIdentifier.getter();
    *(void *)(v0 + 176) = sub_100202FD4(v24, v25, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001E6278(v19);
    *(_WORD *)(v21 + 22) = 2050;
    uint64_t v26 = String.count.getter();
    sub_1001E6278(v20);
    *(void *)(v0 + 184) = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Streaming translation from '%{public}s' -> '%{public}s' of length %{public}ld -> got matching previous translation", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1001E6278(*(void *)(v0 + 264));

    sub_1001E6278(v19);
    sub_1001E6278(v18);
  }
  sub_1001E6278(v17);
  sub_1000295C0(v0 + 16, *(void *)(v0 + 192));
  sub_10000AB68(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
  return v60();
}

uint64_t sub_1001E4D28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_1001E4F30;
  }
  else {
    uint64_t v5 = sub_1001E4E64;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001E4E64()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001E4F30()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id *sub_1001E4FFC()
{
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSourceLocale, (uint64_t *)&unk_1002F4110);
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTargetLocale, (uint64_t *)&unk_1002F4110);
  swift_bridgeObjectRelease();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp;
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation, (uint64_t *)&unk_1002F33F0);
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest, &qword_1002F39A0);

  sub_10000AB68((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_delegate);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId;
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest, &qword_1002F39A0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1001E5180()
{
  sub_1001E4FFC();

  return swift_deallocClassInstance();
}

uint64_t sub_1001E51D8()
{
  return type metadata accessor for TextStreamingTranslationManager(0);
}

uint64_t type metadata accessor for TextStreamingTranslationManager(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002FB310);
}

void sub_1001E5200()
{
  sub_1001E53E4(319, (unint64_t *)&qword_1002F6D40, (void (*)(uint64_t))&type metadata accessor for Locale);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      sub_1001E53E4(319, (unint64_t *)&unk_1002FB360, (void (*)(uint64_t))type metadata accessor for StreamingRequestInfo);
      if (v2 <= 0x3F)
      {
        type metadata accessor for UUID();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1001E53E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for StreamingRequestInfo(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002FB6B8);
}

unsigned char *storeEnumTagSinglePayload for TextStreamingTranslationManager.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E5524);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextStreamingTranslationManager.State()
{
  return &type metadata for TextStreamingTranslationManager.State;
}

char *sub_1001E555C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v20(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v8];
    uint64_t v11 = &a2[v8];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = &a1[v9];
    uint64_t v14 = &a2[v9];
    uint64_t v15 = type metadata accessor for Locale();
    BOOL v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v16(&a1[a3[7]], &a2[a3[7]], v15);
    uint64_t v17 = a3[9];
    *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
    a1[v17] = a2[v17];
    v20(&a1[a3[10]], &a2[a3[10]], v7);
    *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  }
  return a1;
}

uint64_t sub_1001E5704(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[6];
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[7], v6);
  uint64_t v8 = a1 + a2[10];

  return v10(v8, v4);
}

uint64_t sub_1001E5820(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v18(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  uint64_t v16 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  v18(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001E5978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v19(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[7], a2 + a3[7], v13);
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(unsigned char *)(v16 + 1) = *(unsigned char *)(v17 + 1);
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  v19(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001E5B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v14(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  uint64_t v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  v14(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001E5C48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  unint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v23(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + a3[7], a2 + a3[7], v15);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(unsigned char *)(v19 + 1) = *(unsigned char *)(v20 + 1);
  char v21 = *(unsigned char *)(a2 + v18);
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(unsigned char *)(a1 + v18) = v21;
  v23(a1 + a3[10], a2 + a3[10], v6);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1001E5DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001E5DD0);
}

uint64_t sub_1001E5DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Locale();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1001E5F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001E5F14);
}

uint64_t sub_1001E5F14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for Locale();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1001E6044()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Locale();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1001E613C()
{
  unint64_t result = qword_1002FB708;
  if (!qword_1002FB708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002FB708);
  }
  return result;
}

uint64_t sub_1001E6190(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

unint64_t sub_1001E622C(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8CF0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1001E6278(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreamingRequestInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E62D4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001E6314(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100021B58;
  return sub_1001E1CD4(a1, v4, v5, v6);
}

uint64_t sub_1001E63C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001E6410()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v9 + v6 + 1) & ~v9;
  uint64_t v11 = v10 + *(void *)(v8 + 64);
  uint64_t v12 = v3 | v9 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = v0 + v4;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v14(v13, v1);
  v14(v0 + v6, v1);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v7);

  return _swift_deallocObject(v0, v11, v12);
}

uint64_t sub_1001E659C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  uint64_t v6 = (*(void *)(v3 + 64) + v4 + v5) & ~v4;
  type metadata accessor for UUID();
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000496A4;
  return sub_1001DD00C(a1, v7, v8, v9, v10, v11, (uint64_t)v1 + v5, (uint64_t)v1 + v6);
}

uint64_t sub_1001E673C()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  uint64_t v7 = (int *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)v7 + 80);
  uint64_t v9 = (v6 + v5 + v8) & ~v8;
  uint64_t v16 = v9 + *(void *)(*(void *)v7 + 64);
  uint64_t v10 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v0 + v4, v1);
  v11(v0 + v6, v1);
  uint64_t v12 = v0 + v9;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  swift_bridgeObjectRelease();
  v11(v12 + v7[8], v1);
  v11(v12 + v7[9], v1);
  v14(v12 + v7[12], v13);

  return _swift_deallocObject(v0, v16, v10);
}

uint64_t sub_1001E694C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 56) & ~v6;
  uint64_t v8 = (*(void *)(v5 + 64) + v6 + v7) & ~v6;
  type metadata accessor for StreamingRequestInfo(0);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = v1[5];
  uint64_t v13 = v1[6];
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1000496A4;
  return sub_1001DC42C(a1, v9, v10, v11, v12, v13, (uint64_t)v1 + v7, (uint64_t)v1 + v8);
}

uint64_t sub_1001E6AE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001E6B1C(uint64_t a1)
{
  return sub_1001E6FC0(a1, sub_1001DB350);
}

uint64_t sub_1001E6B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001E6B44()
{
  return swift_release();
}

uint64_t sub_1001E6B4C()
{
  uint64_t v1 = (int *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v11 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v12 = v2 | 7;
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + v1[8];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v1[9], v8);
  v6(v4 + v1[12], v5);
  swift_release();

  return _swift_deallocObject(v0, v11, v12);
}

uint64_t sub_1001E6CF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000496A4;
  return sub_1001DB520(a1, v6, v7, v8, v9);
}

uint64_t sub_1001E6E1C()
{
  uint64_t v1 = (int *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v11 = v2 | 7;
  uint64_t v12 = v3 + *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v4 = v0 + v3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + v1[8];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v1[9], v8);
  v6(v4 + v1[12], v5);

  return _swift_deallocObject(v0, v12, v11);
}

uint64_t sub_1001E6FA8(uint64_t a1)
{
  return sub_1001E6FC0(a1, sub_1001D9D28);
}

uint64_t sub_1001E6FC0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_1001E7048()
{
  uint64_t v1 = (int *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v11 = v2 | 7;
  uint64_t v12 = v3 + *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v4 = v0 + v3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + v1[8];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v1[9], v8);
  v6(v4 + v1[12], v5);

  return _swift_deallocObject(v0, v12, v11);
}

uint64_t sub_1001E71DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1001D9EEC(a1, v5, v6, v7, v8);
}

uint64_t sub_1001E72D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001E7318(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1001D8528(a1, v4, v5, v6);
}

uint64_t sub_1001E73DC()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001E7424(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_1001D85F0(a1, v4, v5, v7, v6);
}

id sub_1001E74EC()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder____lazy_storage___placeholder;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder____lazy_storage___placeholder];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder____lazy_storage___placeholder];
  }
  else
  {
    id v4 = sub_1001E7808(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1001E7550()
{
  id v1 = [v0 text];
  if (!v1) {
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (v3) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v5 == 0xE000000000000000;
  }
  if (v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
LABEL_7:
      id v8 = sub_1001E74EC();
      [v8 setHidden:1];

      id v9 = sub_1001E74EC();
      [v0 bringSubviewToFront:v9];
      goto LABEL_10;
    }
  }
  id v9 = sub_1001E74EC();
  [v9 setHidden:0];
LABEL_10:

  if (*((unsigned char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_adjustsFontSize) == 1)
  {
    sub_1001E7670();
  }
}

void sub_1001E7670()
{
  id v1 = v0;
  double v2 = *(double *)&v0[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_minSourceTextSize];
  double v3 = *(double *)&v0[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_minSourceTextSize + 8];
  id v4 = [v0 text];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    id v9 = [v1 font];
    id v14 = (id)sub_100239B68(v2, v3, v6, v8, v9);
    swift_bridgeObjectRelease();

    id v10 = [v1 font];
    if (!v10) {
      goto LABEL_4;
    }
    uint64_t v11 = v10;
    sub_10000B0CC(0, (unint64_t *)&qword_1002F02A0);
    id v12 = v14;
    id v13 = v11;
    LOBYTE(v11) = static NSObject.== infix(_:_:)();

    if ((v11 & 1) == 0) {
LABEL_4:
    }
      [v1 setFont:v14];
  }
  else
  {
    __break(1u);
  }
}

id sub_1001E77CC()
{
  id result = [self quaternaryLabelColor];
  qword_10030EC30 = (uint64_t)result;
  return result;
}

id sub_1001E7808(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UITextView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setUserInteractionEnabled:0];
  [v2 setSelectable:0];
  [v2 setEditable:0];
  double v3 = self;
  id v4 = v2;
  id v5 = [v3 clearColor];
  [v4 setBackgroundColor:v5];

  id v6 = [v4 textContainer];
  [v6 setLineFragmentPadding:0.0];

  [v4 setAdjustsFontForContentSizeCategory:1];
  if (qword_1002EE6C0 != -1) {
    swift_once();
  }
  [v4 setTextColor:qword_10030EC30];
  [a1 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
  return v4;
}

id sub_1001E7D8C(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder____lazy_storage___placeholder] = 0;
  v5[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_adjustsFontSize] = 0;
  *(int64x2_t *)&v5[OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_minSourceTextSize] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  v41.receiver = v5;
  v41.super_class = (Class)type metadata accessor for TextViewWithPlaceHolder();
  [super initWithFrame:a1 textContainer:a2];
  id v12 = sub_1001E74EC();
  [v11 addSubview:v12];

  id v13 = sub_1001E74EC();
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v14 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10024BD70;
  id v16 = sub_1001E74EC();
  id v17 = [v16 topAnchor];

  id v18 = [v11 topAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v15 + 32) = v19;
  id v20 = sub_1001E74EC();
  id v21 = [v20 leadingAnchor];

  id v22 = [v11 leadingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v15 + 40) = v23;
  id v24 = sub_1001E74EC();
  id v25 = [v24 widthAnchor];

  id v26 = [v11 widthAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v15 + 48) = v27;
  id v28 = sub_1001E74EC();
  id v29 = [v28 trailingAnchor];

  id v30 = [v11 trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v15 + 56) = v31;
  id v32 = sub_1001E74EC();
  id v33 = [v32 heightAnchor];

  id v34 = [v11 heightAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v15 + 64) = v35;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 activateConstraints:isa];

  id v37 = [v11 textContainer];
  [v37 setLineFragmentPadding:0.0];

  id v38 = [self defaultCenter];
  [v38 addObserver:v11 selector:"textDidUpdate" name:UITextViewTextDidChangeNotification object:v11];

  id v39 = v11;
  [v39 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];

  return v39;
}

void sub_1001E8424(uint64_t a1)
{
  sub_1001E87CC(a1, (uint64_t)v19);
  uint64_t v2 = v20;
  if (v20)
  {
    double v3 = sub_100029624(v19, v20);
    uint64_t v4 = *(void *)(v2 - 8);
    __chkstk_darwin(v3);
    id v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    sub_10000AB68((uint64_t)v19);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (objc_class *)type metadata accessor for TextViewWithPlaceHolder();
  v18.receiver = v1;
  v18.super_class = v8;
  [super paste:v7];
  swift_unknownObjectRelease();
  if ([v1 delegate])
  {
    v17[1] = &OBJC_PROTOCOL____TtP17SequoiaTranslator21TextViewStatsDelegate_;
    uint64_t v9 = swift_dynamicCastObjCProtocolConditional();
    if (v9)
    {
      id v10 = (void *)v9;
      id v11 = self;
      id v12 = [v11 generalPasteboard];
      unsigned int v13 = [v12 hasStrings];

      if (v13)
      {
        id v14 = [v11 generalPasteboard];
        id v15 = [v14 string];

        if (v15)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          if ([v10 respondsToSelector:"pasted:"])
          {
            swift_unknownObjectRetain();
            NSString v16 = String._bridgeToObjectiveC()();
            [v10 pasted:v16];
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease_n();

            return;
          }
          swift_bridgeObjectRelease();
        }
      }
    }
    swift_unknownObjectRelease();
  }
}

void sub_1001E8754()
{
}

id sub_1001E8764()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextViewWithPlaceHolder();
  [super dealloc];
}

uint64_t type metadata accessor for TextViewWithPlaceHolder()
{
  return self;
}

uint64_t sub_1001E87CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F02C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TipsHelper.FavoriteTranslationsTip()
{
  return &type metadata for TipsHelper.FavoriteTranslationsTip;
}

ValueMetadata *type metadata accessor for TipsHelper()
{
  return &type metadata for TipsHelper;
}

ValueMetadata *type metadata accessor for TipsHelper.GenderDisambiguationTip()
{
  return &type metadata for TipsHelper.GenderDisambiguationTip;
}

uint64_t sub_1001E8864()
{
  uint64_t v0 = sub_100007620(&qword_1002F4E20);
  sub_100013C88(v0, qword_10030EC38);
  sub_100011554(v0, (uint64_t)qword_10030EC38);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_1001E88CC()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  sub_100013C88(v0, qword_10030EC50);
  sub_100011554(v0, (uint64_t)qword_10030EC50);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001E8974()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  sub_100013C88(v0, qword_10030EC68);
  sub_100011554(v0, (uint64_t)qword_10030EC68);
  sub_10000B688();
  id v1 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  static NSUserDefaults.Constants.genderDisambiguationEnabledKey.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 BOOLForKey:v2];

  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001E8A74@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E902C(0, a1);
}

uint64_t sub_1001E8A7C@<X0>(uint64_t *a1@<X8>)
{
  id v33 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  __chkstk_darwin(v1);
  id v30 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007620(&qword_1002FB7F0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  uint64_t v35 = v4;
  __chkstk_darwin(v3);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002FB7F8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002FB800);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002FB808);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v28 = v15;
  uint64_t v29 = v16;
  __chkstk_darwin(v15);
  objc_super v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014894(&qword_1002FB810, &qword_1002FB7F8);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_getKeyPath();
  sub_100014894(&qword_1002FB818, &qword_1002FB800);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v36 = 3;
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v20 = v30;
  uint64_t v19 = v31;
  uint64_t v21 = v32;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v32);
  uint64_t v22 = sub_100007620(&qword_1002FB820);
  id v23 = v33;
  v33[3] = v22;
  v23[4] = sub_1001EA8AC();
  sub_100014830(v23);
  sub_100014894(&qword_1002FB850, &qword_1002FB808);
  sub_100014894(&qword_1002FB858, &qword_1002FB7F0);
  uint64_t v24 = v28;
  uint64_t v25 = v34;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v18, v24);
}

uint64_t sub_1001E8F64()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001E8FC8()
{
  return Image.init(systemName:)();
}

uint64_t sub_1001E8FE8()
{
  return sub_1001E9674();
}

uint64_t sub_1001E8FF0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E992C((void (*)(void))sub_1000F1D54, a1);
}

uint64_t sub_1001E9008()
{
  return sub_1001EAAC0();
}

uint64_t sub_1001E9024@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E902C(1, a1);
}

uint64_t sub_1001E902C@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002EEF10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100007620(&qword_1002EEF18);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014894(&qword_1002EEF20, &qword_1002EEF18);
  static PredicateExpressions.build_Arg<A>(_:)();
  v13[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_100007620(&qword_1002EEF28);
  a2[4] = sub_10001471C();
  sub_100014830(a2);
  sub_100014894(&qword_1002EEF48, &qword_1002EEF10);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001E9270()
{
  return sub_1001EAAC0();
}

void *sub_1001E92B0()
{
  uint64_t v0 = type metadata accessor for Tips.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Tips.Action.init(id:perform:_:)();
  sub_100007620(&qword_1002FB860);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1002488D0;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 32))(v5 + v4, v3, v0);
  uint64_t v6 = sub_1001E9A20(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t sub_1001E9454()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.Rule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE6D8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100011554(v0, (uint64_t)qword_10030EC68);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1001E966C()
{
  return sub_1001E9674();
}

uint64_t sub_1001E9674()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEF8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002EEF00);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  uint64_t v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  uint64_t v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1001E9914@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001E992C((void (*)(void))sub_100054B9C, a1);
}

uint64_t sub_1001E992C@<X0>(void (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  a1();
  uint64_t result = Tip.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1001E9974()
{
  unint64_t result = qword_1002FB7D0;
  if (!qword_1002FB7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB7D0);
  }
  return result;
}

unint64_t sub_1001E99CC()
{
  unint64_t result = qword_1002FB7D8;
  if (!qword_1002FB7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB7D8);
  }
  return result;
}

void *sub_1001E9A20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v42 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620(&qword_1002FB868);
  uint64_t v5 = __chkstk_darwin(v41);
  unint64_t v40 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v39 = (uint64_t *)((char *)&v30 - v8);
  __chkstk_darwin(v7);
  uint64_t v37 = (uint64_t)&v30 - v9;
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1001E9D30(0, 0, 0);
  uint64_t v10 = v43;
  uint64_t v11 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v11;
  uint64_t v30 = a1;
  if (v11)
  {
    uint64_t v12 = 0;
    id v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v13 = v3 + 16;
    uint64_t v15 = *(void *)(v13 + 56);
    unint64_t v33 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v34 = v14;
    uint64_t v16 = a1 + v33;
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v35 = v13;
    uint64_t v36 = v2;
    uint64_t v18 = v41;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v32 = v15;
    do
    {
      uint64_t v19 = &v40[*(int *)(v18 + 48)];
      v34(v19, v16, v2);
      uint64_t v20 = v39;
      uint64_t v21 = (char *)v39 + *(int *)(v18 + 48);
      *id v39 = v12;
      uint64_t v22 = *v17;
      (*v17)(v21, v19, v2);
      uint64_t v23 = (uint64_t)v20;
      uint64_t v24 = v37;
      sub_1001EAA58(v23, v37);
      Tips.Action.with(index:)();
      sub_10000B070(v24, &qword_1002FB868);
      uint64_t v10 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001E9D30(0, v10[2] + 1, 1);
        uint64_t v10 = v43;
      }
      unint64_t v26 = v10[2];
      unint64_t v25 = v10[3];
      uint64_t v17 = v31;
      if (v26 >= v25 >> 1)
      {
        sub_1001E9D30(v25 > 1, v26 + 1, 1);
        uint64_t v10 = v43;
      }
      ++v12;
      v10[2] = v26 + 1;
      uint64_t v27 = v32;
      unint64_t v28 = (unint64_t)v10 + v33 + v26 * v32;
      uint64_t v2 = v36;
      v22((char *)v28, v42, v36);
      uint64_t v43 = v10;
      v16 += v27;
    }
    while (v38 != v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_1001E9D30(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1001E9D50(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1001E9D50(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007620(&qword_1002FB860);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1001E9F24()
{
  uint64_t v0 = type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
  uint64_t v13 = *(void *)(v0 - 8);
  uint64_t v14 = v0;
  __chkstk_darwin();
  unint64_t v16 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Tips.ConfigurationOption.DisplayFrequency();
  uint64_t v2 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002FB870);
  type metadata accessor for Tips.ConfigurationOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100257BA0;
  static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
  static Tips.ConfigurationOption.analyticsEngine(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  static Tips.ConfigurationOption.DisplayFrequency.system.getter();
  static Tips.ConfigurationOption.displayFrequency(_:)();
  uint64_t v9 = v4;
  uint64_t v10 = v16;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v15);
  static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
  static Tips.ConfigurationOption.datastoreLocation(_:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v14);
  static Tips.configure(_:)();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001EA254()
{
  uint64_t v0 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v0 - 8);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v1._object = (void *)0x80000001002638B0;
  v1._countAndFlagsBits = 0xD000000000000021;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v1);
  Image.init(systemName:)();
  uint64_t v2 = Text.init(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.teal.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  sub_10001FC84(v2, v4, v6);
  swift_release();
  swift_bridgeObjectRelease();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  sub_10001FC84(v7, v9, v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v12);
  LocalizedStringKey.init(stringInterpolation:)();
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001EA400()
{
  uint64_t v0 = sub_100007620(&qword_1002F4E20);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EEEE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE6D0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100011554(v4, (uint64_t)qword_10030EC50);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  if (qword_1002EE6C8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100011554(v0, (uint64_t)qword_10030EC38);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v14, v0);
  type metadata accessor for Tips.EmptyDonation();
  sub_1001EA7B8(&qword_1002FB7E0);
  sub_1001EA7B8(&qword_1002FB7E8);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v13(v11, v8);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1001EA7B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Tips.EmptyDonation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001EA7FC()
{
  return sub_1001EA7B8(&qword_1002FB7E0);
}

uint64_t sub_1001EA830()
{
  return sub_1001EA7B8(&qword_1002FB7E8);
}

uint64_t sub_1001EA864@<X0>(uint64_t *a1@<X8>)
{
  sub_100007620(&qword_1002F4E20);
  uint64_t result = Tips.Event.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001EA89C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

unint64_t sub_1001EA8AC()
{
  unint64_t result = qword_1002FB828;
  if (!qword_1002FB828)
  {
    sub_100007928(&qword_1002FB820);
    sub_1001EA94C();
    sub_100014894(&qword_1002FB848, &qword_1002FB7F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB828);
  }
  return result;
}

unint64_t sub_1001EA94C()
{
  unint64_t result = qword_1002FB830;
  if (!qword_1002FB830)
  {
    sub_100007928(&qword_1002FB808);
    sub_1001EA9C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB830);
  }
  return result;
}

unint64_t sub_1001EA9C0()
{
  unint64_t result = qword_1002FB838;
  if (!qword_1002FB838)
  {
    sub_100007928(&qword_1002FB800);
    sub_100014894(&qword_1002FB840, &qword_1002FB7F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB838);
  }
  return result;
}

uint64_t sub_1001EAA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002FB868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001EAAC0()
{
  uint64_t v0 = sub_100007620(&qword_1002EF480);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.subheadline(_:), v3);
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  static Font.Weight.semibold.getter();
  static Font.system(_:design:weight:)();
  sub_10000B070((uint64_t)v2, &qword_1002EF480);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v13 = Text.font(_:)();
  swift_release();
  sub_10001FC84(v7, v9, v11);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001EAD18()
{
  uint64_t v0 = sub_100007620(&qword_1002EF480);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.subheadline(_:), v3);
  uint64_t v12 = type metadata accessor for Font.Design();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  static Font.Weight.regular.getter();
  static Font.system(_:design:weight:)();
  sub_10000B070((uint64_t)v2, &qword_1002EF480);
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v13 = Text.font(_:)();
  swift_release();
  sub_10001FC84(v7, v9, v11);
  swift_bridgeObjectRelease();
  return v13;
}

unint64_t sub_1001EAF80()
{
  unint64_t result = qword_1002FB888;
  if (!qword_1002FB888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB888);
  }
  return result;
}

unint64_t sub_1001EAFD8()
{
  unint64_t result = qword_1002FB890;
  if (!qword_1002FB890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB890);
  }
  return result;
}

uint64_t sub_1001EB02C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001EB048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EC8C8(a1, a2, a3, (void (*)(void))sub_1001EB060);
}

unint64_t sub_1001EB060()
{
  unint64_t result = qword_1002FB898;
  if (!qword_1002FB898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB898);
  }
  return result;
}

void sub_1001EB0B4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B0CC(0, &qword_1002FBA10);
    sub_1001EE29C();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v26;
    uint64_t v25 = v27;
    uint64_t v2 = v28;
    uint64_t v3 = v29;
    unint64_t v4 = v30;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v24 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v8 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_38;
    }
    sub_10000B0CC(0, &qword_1002FBA10);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v31;
    swift_unknownObjectRelease();
    if (!v31) {
      goto LABEL_38;
    }
LABEL_32:
    id v15 = [v11 role];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_8;
      }
    }
    id v21 = [v11 scene];
    if (v21)
    {
      uint64_t v22 = v21;
      id v23 = [v21 activationState];

      if (!v23) {
        goto LABEL_38;
      }
    }
    else
    {
LABEL_8:
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_31:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v24) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v25 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v25 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v25 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v24) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v25 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v24) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v25 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v24 != v14)
              {
                unint64_t v13 = *(void *)(v25 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_38:
              sub_100011710();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1001EB47C(uint64_t a1)
{
  return sub_1001ECC84(a1, qword_10030EC80);
}

uint64_t sub_1001EB4A0()
{
  uint64_t v0 = sub_100007620(&qword_1002FBA48);
  sub_100013C88(v0, qword_10030EC98);
  uint64_t v1 = sub_100011554(v0, (uint64_t)qword_10030EC98);
  IntentDescription.init(stringLiteral:)();
  uint64_t v2 = type metadata accessor for IntentDescription();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 0, 1, v2);
}

uint64_t sub_1001EB558(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  sub_100007620(&qword_1002F33C0);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for IntentSystemContext.Source();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = sub_100007620(&qword_1002FBA00);
  v2[10] = swift_task_alloc();
  sub_100007620(&qword_1002FBA08);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IntentSystemContext();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1001EB724, 0, 0);
}

uint64_t sub_1001EB724()
{
  uint64_t v1 = (uint64_t (*)())(id)MobileGestalt_get_current_device();
  if (!v1)
  {
    __break(1u);
    return _swift_task_switch(v1, v2, v3);
  }
  uint64_t v4 = v1;
  char deviceSupportsDynamicIsland = MobileGestalt_get_deviceSupportsDynamicIsland();

  if (deviceSupportsDynamicIsland) {
    goto LABEL_10;
  }
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v9 = v0[13];
  uint64_t v8 = v0[14];
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[10];
  uint64_t v40 = v0[9];
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[7];
  v0[2] = v0[4];
  sub_1001EB060();
  AppIntent.systemContext.getter();
  IntentSystemContext.source.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v10, enum case for IntentSystemContext.Source.actionButton(_:), v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  uint64_t v14 = v11 + *(int *)(v40 + 48);
  sub_10000C3A4(v9, v11, &qword_1002FBA08);
  sub_10000C3A4(v10, v14, &qword_1002FBA08);
  id v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v15(v11, 1, v12) == 1)
  {
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[6];
    sub_10000B070(v0[12], &qword_1002FBA08);
    sub_10000B070(v16, &qword_1002FBA08);
    if (v15(v14, 1, v17) == 1)
    {
      sub_10000B070(v0[10], &qword_1002FBA08);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v18 = v0[6];
  sub_10000C3A4(v0[10], v0[11], &qword_1002FBA08);
  unsigned int v19 = v15(v14, 1, v18);
  uint64_t v21 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v22 = v0[11];
  if (v19 != 1)
  {
    uint64_t v25 = v0[10];
    uint64_t v27 = v0[7];
    uint64_t v26 = v0[8];
    uint64_t v28 = v0[6];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v14, v28);
    sub_1001EE4DC();
    char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
    unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v30(v26, v28);
    sub_10000B070(v21, &qword_1002FBA08);
    sub_10000B070(v20, &qword_1002FBA08);
    v30(v22, v28);
    sub_10000B070(v25, &qword_1002FBA08);
    if ((v29 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    v0[17] = type metadata accessor for MainActor();
    v0[18] = static MainActor.shared.getter();
    uint64_t v31 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v33 = v32;
    uint64_t v1 = sub_1001EBBE4;
    uint64_t v2 = v31;
    uint64_t v3 = v33;
    return _swift_task_switch(v1, v2, v3);
  }
  uint64_t v23 = v0[6];
  uint64_t v24 = v0[7];
  sub_10000B070(v0[12], &qword_1002FBA08);
  sub_10000B070(v20, &qword_1002FBA08);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
  sub_10000B070(v0[10], &qword_1002FBA00);
LABEL_13:
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_100011554(v34, (uint64_t)qword_10030EA20);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "No DynamicIsland support. Launching the Translate App.", v37, 2u);
    swift_slowDealloc();
  }

  sub_1001ED094();
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_1001EBBE4()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 openSessions];

  sub_10000B0CC(0, &qword_1002FBA10);
  sub_1001EE29C();
  uint64_t v3 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1001EB0B4(v3);
  *(unsigned char *)(v0 + 152) = v4 & 1;
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1001EBCE8, 0, 0);
}

uint64_t sub_1001EBCE8()
{
  if (*(unsigned char *)(v0 + 152))
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030EA20);
    id v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      char v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "App is foreground, not launching Activity. Posting ActionButtonInvokedNotification", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 40);

    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    uint64_t v9 = &unk_1002FBA38;
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v12;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v10;
    uint64_t v9 = &unk_1002FBA28;
  }
  sub_100056780(v5, (uint64_t)v9, (uint64_t)v8);
  swift_release();
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1001EBF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001EC02C, v6, v5);
}

uint64_t sub_1001EC02C()
{
  swift_release();
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Launching Activity from intent.perform()", v4, 2u);
    swift_slowDealloc();
  }

  IntentParameter.wrappedValue.getter();
  if ((*(unsigned char *)(v0 + 32) & 1) != 0
    || (sub_10000B0CC(0, (unint64_t *)&qword_1002F3390),
        uint64_t v5 = (void *)static NSUserDefaults.translationGroupDefaults.getter(),
        NSString v6 = String._bridgeToObjectiveC()(),
        unsigned __int8 v7 = [v5 BOOLForKey:v6],
        v6,
        v5,
        (v7 & 1) == 0))
  {
    IntentParameter.wrappedValue.getter();
    if (*(unsigned char *)(v0 + 32) == 1) {
      sub_1001ED7CC(1);
    }
    if (qword_1002EE6A8 != -1) {
      swift_once();
    }
    IntentParameter.wrappedValue.getter();
    sub_1001BE7F8(*(unsigned char *)(v0 + 32));
  }
  else
  {
    sub_1001ED7CC(0);
    if (qword_1002EE6A8 != -1) {
      swift_once();
    }
    sub_1001BF15C(0);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1001EC28C()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001EC320, v2, v1);
}

uint64_t sub_1001EC320()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_1002EE6F0 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10030ECB0 object:0];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001EC3F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ECD08(&qword_1002EE6E0, (uint64_t)qword_10030EC80, a1);
}

uint64_t sub_1001EC424@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002EE6E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100007620(&qword_1002FBA48);
  uint64_t v3 = sub_100011554(v2, (uint64_t)qword_10030EC98);
  return sub_10000C3A4(v3, a1, &qword_1002FBA48);
}

uint64_t sub_1001EC49C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100021B58;
  return sub_1001EB558(a1, v4);
}

uint64_t sub_1001EC53C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001EDA10();
  *a1 = result;
  return result;
}

unint64_t sub_1001EC568()
{
  unint64_t result = qword_1002FB8A8;
  if (!qword_1002FB8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8A8);
  }
  return result;
}

unint64_t sub_1001EC5C4()
{
  unint64_t result = qword_1002FB8B0;
  if (!qword_1002FB8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8B0);
  }
  return result;
}

uint64_t sub_1001EC618@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001EC654()
{
  return IntentParameter.wrappedValue.setter();
}

void (*sub_1001EC68C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_1001EC6E8;
}

void sub_1001EC6E8(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_1001EC734()
{
  return 0xD00000000000001DLL;
}

unint64_t sub_1001EC754()
{
  unint64_t result = qword_1002FB8B8;
  if (!qword_1002FB8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8B8);
  }
  return result;
}

unint64_t sub_1001EC7AC()
{
  unint64_t result = qword_1002FB8C0;
  if (!qword_1002FB8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8C0);
  }
  return result;
}

unint64_t sub_1001EC804()
{
  unint64_t result = qword_1002FB8C8;
  if (!qword_1002FB8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8C8);
  }
  return result;
}

unint64_t sub_1001EC85C()
{
  unint64_t result = qword_1002FB8D0;
  if (!qword_1002FB8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB8D0);
  }
  return result;
}

uint64_t sub_1001EC8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EC8C8(a1, a2, a3, (void (*)(void))sub_1001EC754);
}

uint64_t sub_1001EC8C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

NSString sub_1001EC91C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030ECB0 = (uint64_t)result;
  return result;
}

void sub_1001EC954()
{
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setValue:isa forKey:v2];

  char v3 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  LOBYTE(isa) = [v3 BOOLForKey:v4];

  if (isa)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030EA20);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "In listening state. Skipping reloadControls";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, v8, v7, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    type metadata accessor for ControlCenter();
    static ControlCenter.shared.getter();
    dispatch thunk of ControlCenter.reloadControls(ofKind:)();
    swift_release();
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030EA20);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      uint64_t v8 = "Requesting reloadControls update after active state assumption expired";
      goto LABEL_10;
    }
  }
}

uint64_t sub_1001ECBD4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1001ECBF4, 0, 0);
}

uint64_t sub_1001ECBF4()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  unsigned char *v1 = sub_1001EE118() & 1;
  NSString v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001ECC60(uint64_t a1)
{
  return sub_1001ECC84(a1, qword_10030ECB8);
}

uint64_t sub_1001ECC84(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  sub_100013C88(v3, a2);
  sub_100011554(v3, (uint64_t)a2);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1001ECCE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001ECD08(&qword_1002EE6F8, (uint64_t)qword_10030ECB8, a1);
}

uint64_t sub_1001ECD08@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  uint64_t v6 = sub_100011554(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

uint64_t sub_1001ECDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1001ED040();
  *uint64_t v4 = v2;
  v4[1] = sub_1001ECE54;
  return ControlConfigurationIntent.perform()(a2, v5);
}

uint64_t sub_1001ECE54()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1001ECF5C(uint64_t a1)
{
  unint64_t v2 = sub_1001EC754();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t type metadata accessor for ToggleControlStateProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for ToggleSpeechTranslationIntentConfiguration()
{
  return &type metadata for ToggleSpeechTranslationIntentConfiguration;
}

ValueMetadata *type metadata accessor for ToggleSpeechTranslationIntent()
{
  return &type metadata for ToggleSpeechTranslationIntent;
}

unint64_t sub_1001ECFE0()
{
  unint64_t result = qword_1002FB9B8;
  if (!qword_1002FB9B8)
  {
    sub_100007928(&qword_1002FB9C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB9B8);
  }
  return result;
}

unint64_t sub_1001ED040()
{
  unint64_t result = qword_1002FB9C8;
  if (!qword_1002FB9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FB9C8);
  }
  return result;
}

void sub_1001ED094()
{
  uint64_t v0 = sub_100007620(&qword_1002EFD90);
  __chkstk_darwin(v0 - 8);
  uint64_t v41 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v42 - 8);
  uint64_t v3 = __chkstk_darwin(v42);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = type metadata accessor for URLComponents();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002F7640);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v12;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v38 = sub_1001FF7C0(inited);
  URLComponents.init()();
  URLComponents.scheme.setter();
  sub_100007620(&qword_1002FC500);
  type metadata accessor for URLQueryItem();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100247140;
  id v13 = [self standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v13 stringForKey:v14];

  uint64_t v43 = v10;
  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Locale.init(identifier:)();
  Locale.ltIdentifier.getter();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v17 = v7;
  uint64_t v18 = v42;
  v16(v17, v42);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  sub_1001A47C4();
  Locale.ltIdentifier.getter();
  v16(v5, v18);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  unsigned int v19 = v43;
  URLComponents.queryItems.setter();
  id v20 = [self defaultWorkspace];
  if (!v20)
  {
    __break(1u);
LABEL_13:
    __break(1u);
  }
  uint64_t v21 = v20;
  uint64_t v22 = v41;
  URLComponents.url.getter();
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1) {
    goto LABEL_13;
  }
  URL._bridgeToObjectiveC()(v25);
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  sub_10016F420(v38);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v44 = 0;
  unsigned int v29 = [v21 openSensitiveURL:v27 withOptions:isa error:&v44];

  id v30 = v44;
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
  }
  else
  {
    uint64_t v31 = v30;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100011554(v32, (uint64_t)qword_10030EA20);
    swift_errorRetain();
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 138412290;
      uint64_t v37 = (void *)_convertErrorToNSError(_:)();
      id v44 = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v36 = v37;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to open URL with LaunchServices: %@", v35, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1001ED7CC(char a1)
{
  if (qword_1002FB880)
  {
    [(id)qword_1002FB880 invalidate];
    uint64_t v2 = (void *)qword_1002FB880;
  }
  else
  {
    uint64_t v2 = 0;
  }
  qword_1002FB880 = 0;

  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v3 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  if (a1)
  {
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setValue:isa forKey:v5];

    aBlock[4] = sub_1001EC954;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100158A24;
    void aBlock[3] = &unk_1002D2D68;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = [self timerWithTimeInterval:0 repeats:v6 block:1.5];
    _Block_release(v6);
    swift_release();
    uint64_t v8 = (void *)qword_1002FB880;
    qword_1002FB880 = (uint64_t)v7;

    id v9 = [self mainRunLoop];
    if (qword_1002FB880)
    {
      uint64_t v10 = v9;
      [v9 addTimer:qword_1002FB880 forMode:NSDefaultRunLoopMode];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    Class v11 = Bool._bridgeToObjectiveC()().super.super.isa;
    NSString v12 = String._bridgeToObjectiveC()();
    [v3 setValue:v11 forKey:v12];
  }
}

uint64_t sub_1001EDA10()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_100007620(&qword_1002FB9D8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007620(&qword_1002FB9E0);
  __chkstk_darwin(v7 - 8);
  id v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100007620(&qword_1002FB9E8);
  __chkstk_darwin(v10 - 8);
  NSString v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_100007620(&qword_1002FB9F0);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  v18[15] = 2;
  uint64_t v15 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
  uint64_t v16 = type metadata accessor for IntentDialog();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for InputConnectionBehavior.default(_:), v0);
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

void *sub_1001EDD38()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EFD90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)qword_1002FB878;
  if (qword_1002FB878) {
    goto LABEL_2;
  }
  id v9 = [self defaultManager];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 containerURLForSecurityApplicationGroupIdentifier:v10];

  if (!v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v6, 1, 1, v0);
    goto LABEL_8;
  }
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v6, v3, v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v6, 0, 1, v0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
LABEL_8:
    sub_10000B070((uint64_t)v6, &qword_1002EFD90);
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EA20);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_13;
    }
    unsigned int v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v19 = 0;
    id v20 = "Failed to obtain application group container directory to load translation group defaults";
    goto LABEL_12;
  }
  sub_10000B070((uint64_t)v6, &qword_1002EFD90);
  id v12 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithSuiteName:v13];

  if (!v14)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100011554(v22, (uint64_t)qword_10030EA20);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_13;
    }
    unsigned int v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v19 = 0;
    id v20 = "Failed to load translation group defaults";
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v20, v19, 2u);
    swift_slowDealloc();
LABEL_13:

    return 0;
  }
  uint64_t v15 = (void *)qword_1002FB878;
  qword_1002FB878 = (uint64_t)v14;

  uint64_t v7 = (void *)qword_1002FB878;
LABEL_2:
  id v8 = v7;
  return v7;
}

uint64_t sub_1001EE118()
{
  uint64_t v0 = sub_1001EDD38();
  if (v0
    && (uint64_t v1 = v0,
        NSString v2 = String._bridgeToObjectiveC()(),
        unsigned int v3 = [v1 BOOLForKey:v2],
        v1,
        v2,
        v3))
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030EA20);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "AssumeIsLiveActivityListening is on. Skip checking IsLiveActivityListening", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = 1;
  }
  else
  {
    id v9 = sub_1001EDD38();
    if (!v9) {
      return 0;
    }
    NSString v10 = v9;
    uint64_t v5 = String._bridgeToObjectiveC()();
    uint64_t v8 = (uint64_t)[v10 BOOLForKey:v5];
  }
  return v8;
}

unint64_t sub_1001EE29C()
{
  unint64_t result = qword_1002FBA18;
  if (!qword_1002FBA18)
  {
    sub_10000B0CC(255, &qword_1002FBA10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002FBA18);
  }
  return result;
}

uint64_t sub_1001EE304()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001EE344(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1001EBF94(a1, v4, v5, v6);
}

uint64_t sub_1001EE3F8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001EE430()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100021B58;
  return sub_1001EC28C();
}

unint64_t sub_1001EE4DC()
{
  unint64_t result = qword_1002FBA40;
  if (!qword_1002FBA40)
  {
    type metadata accessor for IntentSystemContext.Source();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBA40);
  }
  return result;
}

uint64_t sub_1001EE534(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001EE544()
{
  return swift_release();
}

uint64_t sub_1001EE54C()
{
  return swift_initClassMetadata2();
}

id sub_1001EE5A8()
{
  uint64_t v1 = qword_1002FBA50;
  uint64_t v2 = *(void **)(v0 + qword_1002FBA50);
  if (v2)
  {
    id v3 = *(id *)(v0 + qword_1002FBA50);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for ReadableWidthContainer()) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

double sub_1001EE62C()
{
  id v0 = sub_1001EE5A8();
  [v0 frame];
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;

  uint64_t v9 = v2;
  uint64_t v10 = v4;
  uint64_t v11 = v6;
  uint64_t v12 = v8;

  return CGRectGetMaxY(*(CGRect *)&v9);
}

void sub_1001EE6A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1001EF794();
}

void sub_1001EE6C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)((swift_isaMask & *(void *)v0) + 0x50);
  uint64_t v3 = *(void *)((swift_isaMask & *(void *)v0) + 0x60);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TopAccessoryController();
  [super viewDidLoad];
  [v0 addChildViewController:*(void *)&v0[qword_1002FBA58]];
  [v1 addChildViewController:*(void *)&v1[qword_1002FBA60]];
  sub_1001EECB4();
  sub_1001EEF7C();
  [*(id *)&v1[qword_1002FBA58] didMoveToParentViewController:v1];
  [*(id *)&v1[qword_1002FBA60] didMoveToParentViewController:v1];
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  [v4 _addScrollViewScrollObserver:v1];
}

void sub_1001EE824(void *a1)
{
  id v1 = a1;
  sub_1001EE6C8();
}

id sub_1001EE86C(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for TopAccessoryController();
  [super viewDidAppear:a1 & 1];
  return sub_1001EEBB4();
}

void sub_1001EE908(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_1001EE86C(a3);
}

id sub_1001EE95C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TopAccessoryController();
  [super viewDidLayoutSubviews];
  return sub_1001EEBB4();
}

void sub_1001EE9E8(void *a1)
{
  id v1 = a1;
  sub_1001EE95C();
}

void sub_1001EEA30(void *a1, uint64_t a2)
{
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for TopAccessoryController();
  [super willTransitionToTraitCollection:a1 withTransitionCoordinator:a2];
  objc_super v5 = sub_1001EE5A8();
  BOOL v6 = [a1 horizontalSizeClass] != (id)1;
  v5[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_readableWidthEnabled] = v6;
  uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_wrappedView];
  if (v7)
  {
    id v8 = v7;
    sub_1001870DC(v8);

    objc_super v5 = v8;
  }
}

void sub_1001EEB34(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  sub_1001EEA30(v6, a4);

  swift_unknownObjectRelease();
}

id sub_1001EEBB4()
{
  id result = [*(id *)&v0[qword_1002FBA60] view];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  objc_super v2 = result;
  [result frame];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v17.origin.x = v4;
  v17.origin.y = v6;
  v17.size.width = v8;
  v17.size.height = v10;
  double MaxY = CGRectGetMaxY(v17);
  id result = [v0 view];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v12 = result;
  [result safeAreaInsets];
  double v14 = v13;

  uint64_t v15 = *(void **)&v0[qword_1002FBA58];

  return [v15 setAdditionalSafeAreaInsets:MaxY - v14, 0.0, 0.0, 0.0];
}

void sub_1001EECB4()
{
  id v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  double v3 = v2;
  id v4 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v5 = v4;
  [v3 addSubview:v4];

  id v6 = [v1 view];
  if (!v6)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return;
  }
  double v7 = v6;
  id v8 = sub_1001EE5A8();
  [v7 addSubview:v8];

  double v9 = (char *)sub_1001EE5A8();
  id v10 = [*(id *)&v1[qword_1002FBA60] view];
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_wrappedView;
  [*(id *)&v9[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_wrappedView] removeFromSuperview];
  if (v10)
  {
    id v12 = v10;
    [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v9 addSubview:v12];
    sub_1001870DC(v12);
  }
  double v13 = *(void **)&v9[v11];
  *(void *)&v9[v11] = v10;

  double v14 = sub_1001EE5A8();
  id v15 = [v1 traitCollection];
  id v16 = [v15 horizontalSizeClass];

  v14[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_readableWidthEnabled] = v16 != (id)1;
  CGRect v17 = *(void **)&v14[OBJC_IVAR____TtC17SequoiaTranslator22ReadableWidthContainer_wrappedView];
  if (v17)
  {
    id v18 = v17;
    sub_1001870DC(v18);

    double v14 = v18;
  }

  id v19 = [*(id *)&v1[qword_1002FBA60] view];
  if (!v19) {
    goto LABEL_15;
  }
  id v20 = v19;
  uint64_t v21 = self;
  id v22 = [v21 clearColor];
  [v20 setBackgroundColor:v22];

  id v23 = sub_1001EE5A8();
  id v24 = [v21 systemGroupedBackgroundColor];
  [v23 setBackgroundColor:v24];
}

uint64_t sub_1001EEF68(uint64_t a1)
{
  *(void *)(v1 + qword_1002FBA68) = a1;
  return _objc_release_x1();
}

void sub_1001EEF7C()
{
  uint64_t v1 = v0;
  id v2 = sub_1001EE5A8();
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v3 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v4 = v3;
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v5 = [*(id *)&v1[qword_1002FBA60] view];
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v6 = v5;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v7 = sub_1001EE5A8();
  id v8 = [v7 topAnchor];

  id v9 = [v1 view];
  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v10 = v9;
  id v11 = [v9 topAnchor];

  id v12 = [v8 constraintEqualToAnchor:v11 constant:0.0];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1002580F0;
  id v14 = [v1 view];
  if (!v14)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v15 = v14;
  id v16 = [v14 topAnchor];

  id v17 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v17)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v18 = v17;
  id v19 = [v17 topAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19];
  *(void *)(v13 + 32) = v20;
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id v22 = v21;
  id v23 = [v21 leadingAnchor];

  id v24 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v24)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v25 = v24;
  id v26 = [v24 leadingAnchor];

  id v27 = [v23 constraintEqualToAnchor:v26];
  *(void *)(v13 + 40) = v27;
  id v28 = [v1 view];
  if (!v28)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  unsigned int v29 = v28;
  id v30 = [v28 trailingAnchor];

  id v31 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v31)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v32 = v31;
  id v33 = [v31 trailingAnchor];

  id v34 = [v30 constraintEqualToAnchor:v33];
  *(void *)(v13 + 48) = v34;
  id v35 = [v1 view];
  if (!v35)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  os_log_type_t v36 = v35;
  id v37 = [v35 bottomAnchor];

  id v38 = [*(id *)&v1[qword_1002FBA58] view];
  if (!v38)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v39 = v38;
  id v40 = [v38 bottomAnchor];

  id v41 = [v37 constraintEqualToAnchor:v40];
  *(void *)(v13 + 56) = v41;
  *(void *)(v13 + 64) = v12;
  id v42 = v12;
  id v43 = [v1 view];
  if (!v43)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v44 = v43;
  id v45 = [v43 leadingAnchor];

  id v46 = sub_1001EE5A8();
  id v47 = [v46 leadingAnchor];

  id v48 = [v45 constraintEqualToAnchor:v47];
  *(void *)(v13 + 72) = v48;
  id v49 = [v1 view];
  if (!v49)
  {
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v50 = v49;
  uint64_t v51 = self;
  id v52 = [v50 trailingAnchor];

  id v53 = sub_1001EE5A8();
  id v54 = [v53 trailingAnchor];

  id v55 = [v52 constraintEqualToAnchor:v54];
  *(void *)(v13 + 80) = v55;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v51 activateConstraints:isa];

  __int16 v57 = *(void **)&v1[qword_1002FBA68];
  *(void *)&v1[qword_1002FBA68] = v42;
}

void sub_1001EF524(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_1001EF80C();
}

id sub_1001EF5B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TopAccessoryController();
  return [super dealloc];
}

void sub_1001EF640(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1002FBA68);
}

uint64_t type metadata accessor for TopAccessoryController()
{
  return sub_1000BA700();
}

double sub_1001EF6C4()
{
  return sub_1001EE62C();
}

uint64_t sub_1001EF6E8()
{
  return (*(uint64_t (**)(void))(*(void *)((swift_isaMask & *v0) + 0x60) + 8))(*(void *)((swift_isaMask & *v0) + 0x50));
}

uint64_t sub_1001EF770()
{
  return sub_1001EF6E8();
}

void sub_1001EF794()
{
  *(void *)&v0[qword_1002FBA50] = 0;
  *(void *)&v0[qword_1002FBA68] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001EF80C()
{
}

id TranslateCalloutDisabledTextView.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  if (static Selector.== infix(_:_:)()) {
    return 0;
  }
  sub_1001E87CC(a2, (uint64_t)v15);
  uint64_t v6 = v16;
  if (v16)
  {
    id v7 = sub_100029624(v15, v16);
    uint64_t v8 = *(void *)(v6 - 8);
    __chkstk_darwin(v7);
    id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_10000AB68((uint64_t)v15);
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v12 = (objc_class *)type metadata accessor for TranslateCalloutDisabledTextView();
  v14.receiver = v2;
  v14.super_class = v12;
  [super canPerformAction:a1 withSender:v11];
  swift_unknownObjectRelease();
  return v5;
}

uint64_t type metadata accessor for TranslateCalloutDisabledTextView()
{
  return self;
}

id TranslateCalloutDisabledTextView.init(frame:textContainer:)(void *a1, double a2, double a3, double a4, double a5)
{
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for TranslateCalloutDisabledTextView();
  id v11 = [super initWithFrame:a1 textContainer:a2];

  return v11;
}

id TranslateCalloutDisabledTextView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TranslateCalloutDisabledTextView();
  [super initWithCoder:a1];

  return v3;
}

id TranslateCalloutDisabledTextView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranslateCalloutDisabledTextView();
  return [super dealloc];
}

uint64_t destroy for TranslateCardActionButtons(uint64_t a1)
{
  sub_10000AB68(a1 + 16);
  swift_release();
  swift_release();
  if (*(void *)(a1 + 80)) {
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for TranslateCardActionButtons(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a2 + 16;
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  uint64_t v11 = *(void *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  if (v11)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v13;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranslateCardActionButtons(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  id v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  sub_1001EFE7C((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v8 = *(void *)(a2 + 80);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 88) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t *sub_1001EFE7C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    id v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        id result = (uint64_t *)swift_release();
        *id v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *id result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *id v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for TranslateCardActionButtons(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for TranslateCardActionButtons(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  sub_10000AB68(a1 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  if (!v9)
  {
    if (v8)
    {
      uint64_t v11 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v8;
      *(void *)(a1 + 88) = v11;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v10;
  swift_release();
LABEL_8:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranslateCardActionButtons(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranslateCardActionButtons(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslateCardActionButtons()
{
  return &type metadata for TranslateCardActionButtons;
}

uint64_t sub_1001F0268()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F0284@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1001F0C64(v1, (uint64_t)&v25);
  uint64_t v4 = (_OWORD *)swift_allocObject();
  long long v5 = v30;
  v4[5] = v29;
  v4[6] = v5;
  v4[7] = v31;
  long long v6 = v26;
  v4[1] = v25;
  v4[2] = v6;
  long long v7 = v28;
  v4[3] = v27;
  v4[4] = v7;
  sub_1001F0C64(v1, (uint64_t)&v25);
  uint64_t v8 = (_OWORD *)swift_allocObject();
  long long v9 = v30;
  v8[5] = v29;
  v8[6] = v9;
  v8[7] = v31;
  long long v10 = v26;
  v8[1] = v25;
  v8[2] = v10;
  long long v11 = v28;
  v8[3] = v27;
  v8[4] = v11;
  sub_1001F0C64(v1, (uint64_t)&v25);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = v30;
  v12[5] = v29;
  v12[6] = v13;
  v12[7] = v31;
  long long v14 = v26;
  v12[1] = v25;
  _OWORD v12[2] = v14;
  long long v15 = v28;
  void v12[3] = v27;
  void v12[4] = v15;
  sub_1001F0C64(v1, (uint64_t)&v25);
  uint64_t v16 = (_OWORD *)swift_allocObject();
  long long v17 = v30;
  void v16[5] = v29;
  v16[6] = v17;
  v16[7] = v31;
  long long v18 = v26;
  v16[1] = v25;
  v16[2] = v18;
  long long v19 = v28;
  v16[3] = v27;
  void v16[4] = v19;
  id v20 = *(id *)(v1 + 8);
  char v21 = dispatch thunk of PersistedTranslation.isFavorite.getter();

  sub_100007620(&qword_1002FAF70);
  Binding.projectedValue.getter();
  long long v22 = v25;
  char v23 = v26;
  LOBYTE(v2) = *(unsigned char *)(v2 + 73);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = sub_1001F0CA0;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = sub_1001F0CAC;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = sub_1001F0CB8;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = sub_1001F0CC4;
  *(void *)(a1 + 56) = v16;
  *(unsigned char *)(a1 + 64) = v21 & 1;
  *(_OWORD *)(a1 + 72) = v22;
  *(unsigned char *)(a1 + 88) = v23;
  *(unsigned char *)(a1 + 89) = v2;
  *(void *)(a1 + 96) = result;
  *(unsigned char *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_1001F04A4(uint64_t a1)
{
  sub_100007620(&qword_1002FAF70);
  uint64_t result = Binding.wrappedValue.getter();
  if ((v7 & 1) == 0)
  {
    if (*(void *)(a1 + 96))
    {
      long long v3 = *(void **)(a1 + 8);
      sub_1001F0D7C(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
      uint64_t v4 = self;
      swift_retain();
      id v5 = v3;
      id v6 = [v4 sharedApplication];
      [v6 sendAction:"resignFirstResponder" to:0 from:0 forEvent:0];

      swift_getKeyPath();
      swift_getKeyPath();
      return static Published.subscript.setter();
    }
    else
    {
      type metadata accessor for SceneContext();
      sub_1001F0D7C((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
      uint64_t result = EnvironmentObject.error()();
      __break(1u);
    }
  }
  return result;
}

void sub_1001F0634(uint64_t a1)
{
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  if ((v4 & 1) == 0)
  {
    sub_100029624((void *)(a1 + 16), *(void *)(a1 + 40));
    id v2 = *(id *)(a1 + 8);
    dispatch thunk of TranslationStore.toggleFavoriteBackground(_:)();

    long long v3 = *(void (**)(void))(a1 + 80);
    if (v3) {
      v3();
    }
  }
}

uint64_t sub_1001F06E0()
{
  return swift_release();
}

void sub_1001F0788()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 64);
  char v3 = *(unsigned char *)(v0 + 72);
  *(void *)&long long v18 = *(void *)(v0 + 56);
  *((void *)&v18 + 1) = v2;
  LOBYTE(v19) = v3;
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  if ((v17[0] & 1) == 0)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030EAE0);
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Copying target translation to clipboard", v7, 2u);
      swift_slowDealloc();
    }

    id v8 = [self generalPasteboard];
    id v9 = *(id *)(v1 + 8);
    dispatch thunk of PersistedTranslation.displayText.getter();

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setString:v10];

    NSString v11 = String._bridgeToObjectiveC()();
    sub_1001F0C64(v1, (uint64_t)&v18);
    uint64_t v12 = (_OWORD *)swift_allocObject();
    long long v13 = v23;
    v12[5] = v22;
    v12[6] = v13;
    v12[7] = v24;
    long long v14 = v19;
    v12[1] = v18;
    _OWORD v12[2] = v14;
    long long v15 = v21;
    void v12[3] = v20;
    void v12[4] = v15;
    v17[4] = sub_1001F0D5C;
    v17[5] = v12;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 1107296256;
    void v17[2] = sub_1001BB31C;
    void v17[3] = &unk_1002D2FD0;
    uint64_t v16 = _Block_copy(v17);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v16);
  }
}

unint64_t sub_1001F09FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v16[-v7];
  sub_100007620(&qword_1002F2200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100248B60;
  *(void *)(inited + 32) = 0x6D614E746E657665;
  *(void *)(inited + 40) = 0xE900000000000065;
  sub_1000DD17C();
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 64) = 0xE800000000000000;
  *(void *)(inited + 72) = NSString.init(stringLiteral:)();
  strcpy((char *)(inited + 80), "sourceLocale");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  id v10 = *(id *)(a1 + 8);
  dispatch thunk of PersistedTranslation.sourceLocale.getter();

  Locale.ltIdentifier.getter();
  NSString v11 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v11(v8, v2);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v12;
  strcpy((char *)(inited + 104), "targetLocale");
  *(unsigned char *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  id v13 = *(id *)(a1 + 8);
  dispatch thunk of PersistedTranslation.targetLocale.getter();

  Locale.ltIdentifier.getter();
  v11(v6, v2);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = v14;
  return sub_1001FF7B4(inited);
}

uint64_t sub_1001F0C64(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001F0CA0()
{
  return sub_1001F04A4(v0 + 16);
}

void sub_1001F0CAC()
{
  sub_1001F0634(v0 + 16);
}

uint64_t sub_1001F0CB8()
{
  return sub_1001F06E0();
}

void sub_1001F0CC4()
{
}

uint64_t sub_1001F0CF4()
{
  sub_10000AB68(v0 + 32);
  swift_release();
  swift_release();
  if (*(void *)(v0 + 96)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

unint64_t sub_1001F0D5C()
{
  return sub_1001F09FC(v0 + 16);
}

uint64_t sub_1001F0D64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001F0D74()
{
  return swift_release();
}

uint64_t sub_1001F0D7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001F0DD0()
{
  unint64_t result = qword_1002FBB78;
  if (!qword_1002FBB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBB78);
  }
  return result;
}

uint64_t *sub_1001F0E24(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    id v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1001F0FF0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_1001F1118(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_100007620(&qword_1002F1058);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1001F1294(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10000B070((uint64_t)a1 + v6, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1001F1444(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = sub_100007620(&qword_1002F1058);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_1001F15C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10000B070((uint64_t)a1 + v7, (uint64_t *)&unk_1002F5770);
    uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_100007620(&qword_1002F1058);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001F176C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1780);
}

uint64_t sub_1001F1780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F1068);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001F1834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1848);
}

uint64_t sub_1001F1848(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1068);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TranslateContentView()
{
  uint64_t result = qword_1002FBBD8;
  if (!qword_1002FBBD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001F1940()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1001F19D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001F19F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1200);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F1058);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  long long v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  long long v17 = (char *)&v26 - v16;
  type metadata accessor for TranslateContentView();
  sub_100100194((uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v15, enum case for UserInterfaceSizeClass.regular(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v15, 0, 1, v1);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10000C3A4((uint64_t)v17, (uint64_t)v8, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v15, v18, &qword_1002F1058);
  long long v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v19((uint64_t)v8, 1, v1) != 1)
  {
    sub_10000C3A4((uint64_t)v8, (uint64_t)v12, &qword_1002F1058);
    if (v19(v18, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v18, v1);
      sub_1001F4F24((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_10000B070((uint64_t)v15, &qword_1002F1058);
      sub_10000B070((uint64_t)v17, &qword_1002F1058);
      v21(v12, v1);
      sub_10000B070((uint64_t)v8, &qword_1002F1058);
      if (v20) {
        goto LABEL_8;
      }
LABEL_9:
      long long v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.automatic(_:);
      goto LABEL_10;
    }
    sub_10000B070((uint64_t)v15, &qword_1002F1058);
    sub_10000B070((uint64_t)v17, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
LABEL_6:
    sub_10000B070((uint64_t)v8, &qword_1002F1200);
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v15, &qword_1002F1058);
  sub_10000B070((uint64_t)v17, &qword_1002F1058);
  if (v19(v18, 1, v1) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v8, &qword_1002F1058);
LABEL_8:
  long long v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.inline(_:);
LABEL_10:
  uint64_t v23 = *v22;
  uint64_t v24 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_1001F1E34()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F1058);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v21 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  type metadata accessor for TranslateContentView();
  sub_100100194((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10000C3A4((uint64_t)v16, (uint64_t)v7, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v14, v17, &qword_1002F1058);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v7, 1, v0) != 1)
  {
    sub_10000C3A4((uint64_t)v7, (uint64_t)v11, &qword_1002F1058);
    if (v18(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_1001F4F24((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      long long v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v3, v0);
      sub_10000B070((uint64_t)v14, &qword_1002F1058);
      sub_10000B070((uint64_t)v16, &qword_1002F1058);
      v19(v11, v0);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
      return LocalizedStringKey.init(stringLiteral:)();
    }
    sub_10000B070((uint64_t)v14, &qword_1002F1058);
    sub_10000B070((uint64_t)v16, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v14, &qword_1002F1058);
  sub_10000B070((uint64_t)v16, &qword_1002F1058);
  if (v18(v17, 1, v0) != 1)
  {
LABEL_6:
    sub_10000B070((uint64_t)v7, &qword_1002F1200);
    return LocalizedStringKey.init(stringLiteral:)();
  }
  sub_10000B070((uint64_t)v7, &qword_1002F1058);
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1001F2244@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v2 = type metadata accessor for TranslateContentView();
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v64 = *(void *)(v68 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v73 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v4 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002FBC10);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  uint64_t v59 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002FBC18);
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  __chkstk_darwin(v11);
  uint64_t v56 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100007620(&qword_1002FBC20);
  __chkstk_darwin(v60);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002FBC28);
  uint64_t v66 = *(void *)(v15 - 8);
  uint64_t v67 = (void *)v15;
  __chkstk_darwin(v15);
  uint64_t v61 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100007620(&qword_1002FBC30) - 8;
  __chkstk_darwin(v65);
  uint64_t v72 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100007620(&qword_1002FBC38);
  __chkstk_darwin(v69);
  uint64_t v70 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v1 + 8);
  swift_retain();
  uint64_t v20 = static SafeAreaRegions.container.getter();
  char v21 = static Edge.Set.all.getter();
  uint64_t v22 = static SafeAreaRegions.keyboard.getter();
  char v23 = static Edge.Set.all.getter();
  v79[0] = v19;
  v79[1] = v20;
  LOBYTE(v79[2]) = v21;
  Swift::Int v79[3] = v22;
  LOBYTE(v79[4]) = v23;
  uint64_t v24 = v1;
  sub_1001F19F4((uint64_t)v6);
  uint64_t v25 = sub_100007620(&qword_1002FBC40);
  uint64_t v26 = sub_1001F4934(&qword_1002FBC48, &qword_1002FBC40, (void (*)(void))sub_1001F490C);
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v57);
  swift_release();
  sub_1001F1E34();
  v79[0] = v25;
  v79[1] = v26;
  swift_getOpaqueTypeConformance2();
  uint64_t v27 = v56;
  uint64_t v28 = v58;
  View.navigationBarTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v28);
  uint64_t v29 = v73;
  sub_1001F4F6C(v1, v73, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
  uint64_t v30 = *(unsigned __int8 *)(v68 + 80);
  uint64_t v31 = (v30 + 16) & ~v30;
  uint64_t v68 = v30 | 7;
  uint64_t v32 = swift_allocObject();
  sub_1001F49B8(v29, v32 + v31);
  uint64_t v34 = v62;
  uint64_t v33 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v14, v27, v63);
  id v35 = &v14[*(int *)(v60 + 36)];
  *(void *)id v35 = 0;
  *((void *)v35 + 1) = 0;
  *((void *)v35 + 2) = sub_1001F4A1C;
  *((void *)v35 + 3) = v32;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v33);
  uint64_t v74 = v24;
  sub_100007620(&qword_1002FBC60);
  sub_1001F4A3C();
  sub_100014894(&qword_1002FBC70, &qword_1002FBC60);
  os_log_type_t v36 = v61;
  View.toolbar<A>(content:)();
  sub_10000B070((uint64_t)v14, &qword_1002FBC20);
  uint64_t v37 = static HorizontalAlignment.center.getter();
  sub_1001F44D8(v24, (uint64_t)v79);
  VerticalEdge.rawValue.getter();
  LOBYTE(v33) = Edge.init(rawValue:)();
  uint64_t v38 = static SafeAreaRegions.container.getter();
  sub_10001323C((uint64_t)v79, (uint64_t)v78, &qword_1002FBC78);
  sub_10001323C((uint64_t)v78, (uint64_t)v79, &qword_1002FBC78);
  v79[30] = v38;
  v79[31] = 0;
  LOBYTE(v79[32]) = 1;
  BYTE1(v79[32]) = v33;
  v79[33] = v37;
  uint64_t v39 = v66;
  id v42 = v67;
  uint64_t v40 = v72;
  (*(void (**)(uint64_t, char *, void *))(v66 + 16))(v72, v36, v67);
  memcpy((void *)(v40 + *(int *)(v65 + 44)), v79, 0x110uLL);
  (*(void (**)(char *, id))(v39 + 8))(v36, v42);
  uint64_t v41 = v24;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LODWORD(v42) = (unsigned __int16)v75 | (BYTE2(v75) << 16);
  if ((v42 & 0xFF0000) == 0x80000)
  {
    id v43 = self;
    NSString v44 = String._bridgeToObjectiveC()();
    id v42 = [v43 lt_errorWithCode:0 description:v44 userInfo:0];

    unsigned int v45 = sub_10000A1FC(v42);
    LOBYTE(v42) = v45;
    LODWORD(v67) = v45 >> 8;
    unsigned int v46 = HIWORD(v45);
  }
  else
  {
    LODWORD(v67) = v42 >> 8;
    unsigned int v46 = v42 >> 16;
  }
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1001F4F24(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v47 = v75;
  uint64_t v48 = v76;
  char v49 = v77;
  uint64_t v50 = v73;
  sub_1001F4F6C(v41, v73, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
  uint64_t v51 = swift_allocObject();
  sub_1001F49B8(v50, v51 + v31);
  uint64_t v52 = v72;
  uint64_t v53 = v70;
  sub_10000C3A4(v72, v70, &qword_1002FBC30);
  uint64_t v54 = v53 + *(int *)(v69 + 36);
  *(unsigned char *)uint64_t v54 = (_BYTE)v42;
  *(unsigned char *)(v54 + 1) = (_BYTE)v67;
  *(unsigned char *)(v54 + 2) = v46;
  *(void *)(v54 + 8) = v47;
  *(void *)(v54 + 16) = v48;
  *(unsigned char *)(v54 + 24) = v49;
  *(void *)(v54 + 32) = sub_1001F4B60;
  *(void *)(v54 + 40) = v51;
  sub_10000B070(v52, &qword_1002FBC30);
  return sub_10001323C(v53, v71, &qword_1002FBC38);
}

uint64_t sub_1001F2B9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1) {
    sub_10005D934(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v2) {
    sub_100234200();
  }
  return swift_release();
}

uint64_t sub_1001F2C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v89 = sub_100007620(&qword_1002FBC80);
  __chkstk_darwin(v89);
  uint64_t v88 = &v70[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_100007620(&qword_1002FBC88);
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v87 = v4;
  __chkstk_darwin(v4);
  uint64_t v85 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  __chkstk_darwin(v6);
  char v77 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v79 = (unsigned char *)sub_100007620(&qword_1002F1200);
  __chkstk_darwin(v79);
  os_log_type_t v80 = &v70[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100007620(&qword_1002F1058);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v78 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v84 = &v70[-v13];
  __chkstk_darwin(v12);
  uint64_t v15 = &v70[-v14];
  uint64_t v16 = type metadata accessor for ToolbarItemPlacement();
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  unint64_t v90 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v20 = &v70[-v19];
  uint64_t v21 = sub_100007620(&qword_1002FBC90);
  uint64_t v83 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = &v70[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v26 = &v70[-v25];
  uint64_t v27 = sub_100007620(&qword_1002FBC98);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v30 = &v70[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  uint64_t v92 = a1;
  uint64_t v93 = &v70[-v31];
  uint64_t v32 = *(void *)(*(void *)(a1 + 8) + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
  swift_getKeyPath();
  uint64_t v94 = v32;
  sub_1001F4F24((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  LODWORD(a1) = *(unsigned __int8 *)(v32 + 24);
  swift_release();
  if (a1 == 1)
  {
    uint64_t v33 = (uint64_t)v78;
    uint64_t v75 = v24;
    uint64_t v74 = v20;
    uint64_t v72 = v30;
    uint64_t v76 = v26;
    uint64_t v73 = v21;
    type metadata accessor for TranslateContentView();
    sub_100100194((uint64_t)v15);
    uint64_t v34 = v81;
    uint64_t v35 = v82;
    os_log_type_t v36 = v84;
    (*(void (**)(unsigned char *, void, uint64_t))(v81 + 104))(v84, enum case for UserInterfaceSizeClass.regular(_:), v82);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
    uint64_t v37 = v80;
    uint64_t v38 = (uint64_t)&v80[*((int *)v79 + 12)];
    sub_10000C3A4((uint64_t)v15, (uint64_t)v80, &qword_1002F1058);
    sub_10000C3A4((uint64_t)v36, v38, &qword_1002F1058);
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v39((uint64_t)v37, 1, v35) == 1)
    {
      sub_10000B070((uint64_t)v84, &qword_1002F1058);
      sub_10000B070((uint64_t)v15, &qword_1002F1058);
      int v40 = v39(v38, 1, v35);
      uint64_t v41 = v87;
      uint64_t v42 = v73;
      uint64_t v43 = (uint64_t)v72;
      if (v40 == 1)
      {
        sub_10000B070((uint64_t)v37, &qword_1002F1058);
LABEL_10:
        uint64_t v57 = static ToolbarItemPlacement.navigationBarTrailing.getter();
LABEL_12:
        __chkstk_darwin(v57);
        *(void *)&v70[-16] = v58;
        sub_100007620(&qword_1002FBCC0);
        uint64_t v59 = sub_100007928(&qword_1002FBCC8);
        unint64_t v60 = sub_1001F4CC8();
        uint64_t v94 = v59;
        unint64_t v95 = v60;
        swift_getOpaqueTypeConformance2();
        uint64_t v61 = v75;
        ToolbarItem<>.init(placement:content:)();
        uint64_t v62 = v83;
        uint64_t v63 = v76;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 32))(v76, v61, v42);
        uint64_t v64 = sub_100014894(&qword_1002FBCA8, &qword_1002FBC90);
        static ToolbarContentBuilder.buildBlock<A>(_:)();
        uint64_t v65 = sub_100007620(&qword_1002FBCA0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v43, 0, 1, v65);
        uint64_t v94 = v42;
        unint64_t v95 = v64;
        uint64_t v50 = v92;
        swift_getOpaqueTypeConformance2();
        static ToolbarContentBuilder.buildIf<A>(_:)();
        sub_10000B070(v43, &qword_1002FBC98);
        (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v63, v42);
        uint64_t v46 = (uint64_t)v88;
        uint64_t v47 = v89;
        char v49 = v85;
        uint64_t v48 = v86;
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v51 = v34;
      int v79 = v15;
      sub_10000C3A4((uint64_t)v37, v33, &qword_1002F1058);
      int v52 = v39(v38, 1, v35);
      uint64_t v42 = v73;
      uint64_t v43 = (uint64_t)v72;
      if (v52 != 1)
      {
        uint64_t v53 = v51;
        uint64_t v54 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 32);
        id v55 = v77;
        v54(v77, v38, v35);
        sub_1001F4F24((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        int v71 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v53 + 8);
        v56(v55, v35);
        sub_10000B070((uint64_t)v84, &qword_1002F1058);
        sub_10000B070((uint64_t)v79, &qword_1002F1058);
        v56((unsigned char *)v33, v35);
        sub_10000B070((uint64_t)v37, &qword_1002F1058);
        uint64_t v41 = v87;
        if (v71) {
          goto LABEL_10;
        }
LABEL_11:
        uint64_t v57 = static ToolbarItemPlacement.navigationBarLeading.getter();
        goto LABEL_12;
      }
      sub_10000B070((uint64_t)v84, &qword_1002F1058);
      sub_10000B070((uint64_t)v79, &qword_1002F1058);
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v33, v35);
      uint64_t v41 = v87;
    }
    sub_10000B070((uint64_t)v37, &qword_1002F1200);
    goto LABEL_11;
  }
  uint64_t v44 = sub_100007620(&qword_1002FBCA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v30, 1, 1, v44);
  uint64_t v45 = sub_100014894(&qword_1002FBCA8, &qword_1002FBC90);
  uint64_t v94 = v21;
  unint64_t v95 = v45;
  swift_getOpaqueTypeConformance2();
  static ToolbarContentBuilder.buildIf<A>(_:)();
  sub_10000B070((uint64_t)v30, &qword_1002FBC98);
  uint64_t v46 = (uint64_t)v88;
  uint64_t v47 = v89;
  uint64_t v48 = v86;
  uint64_t v41 = v87;
  char v49 = v85;
  uint64_t v50 = v92;
LABEL_13:
  uint64_t v66 = static ToolbarItemPlacement.topBarTrailing.getter();
  __chkstk_darwin(v66);
  *(void *)&v70[-16] = v50;
  sub_100007620(&qword_1002FBCB0);
  sub_100014894(&qword_1002FBCB8, &qword_1002FBCB0);
  ToolbarItemGroup.init(placement:content:)();
  uint64_t v67 = v46 + *(int *)(v47 + 48);
  uint64_t v68 = v93;
  sub_10000C3A4((uint64_t)v93, v46, &qword_1002FBC98);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v48 + 16))(v67, v49, v41);
  TupleToolbarContent.init(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v49, v41);
  return sub_10000B070((uint64_t)v68, &qword_1002FBC98);
}

uint64_t sub_1001F37DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for TranslateContentView();
  uint64_t v17 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v17 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v19 = sub_100007620(&qword_1002EF0C8);
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002FBCC8);
  __chkstk_darwin(v18);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  sub_1001F4F6C(a1, (uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TranslateContentView);
  unint64_t v10 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1001F49B8((uint64_t)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  Button<>.init(_:action:)();
  uint64_t v12 = static Color.translateAccentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = v19;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v7, v19);
  uint64_t v15 = (uint64_t *)&v9[*(int *)(v18 + 36)];
  uint64_t *v15 = KeyPath;
  v15[1] = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  static Font.Weight.semibold.getter();
  sub_1001F4CC8();
  View.fontWeight(_:)();
  return sub_10000B070((uint64_t)v9, &qword_1002FBCC8);
}

uint64_t sub_1001F3AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v78 = (char *)a1;
  uint64_t v76 = type metadata accessor for MoreOptionsMenu();
  uint64_t v2 = __chkstk_darwin(v76);
  uint64_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v70 - v5;
  uint64_t v80 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v73 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100007620(&qword_1002F1200);
  __chkstk_darwin(v72);
  unint64_t v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F1058);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v70 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v70 - v18;
  uint64_t v20 = type metadata accessor for TranslateContentView();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002FBCD8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v75 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v74 = (char *)&v70 - v26;
  int v27 = _LTIsInternalInstall();
  sub_1001F4F6C((uint64_t)v78, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
  int v79 = v4;
  if (!v27)
  {
    sub_1001F4FD4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
    goto LABEL_6;
  }
  uint64_t v78 = v8;
  int v71 = v14;
  sub_100100194((uint64_t)v19);
  uint64_t v28 = v73;
  uint64_t v29 = v80;
  (*(void (**)(char *, void, uint64_t))(v73 + 104))(v17, enum case for UserInterfaceSizeClass.regular(_:), v80);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v29);
  uint64_t v30 = (uint64_t)&v10[*(int *)(v72 + 48)];
  sub_10000C3A4((uint64_t)v19, (uint64_t)v10, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v17, v30, &qword_1002F1058);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v31((uint64_t)v10, 1, v29) != 1)
  {
    uint64_t v34 = v28;
    uint64_t v35 = (uint64_t)v71;
    sub_10000C3A4((uint64_t)v10, (uint64_t)v71, &qword_1002F1058);
    if (v31(v30, 1, v80) != 1)
    {
      uint64_t v36 = (uint64_t)v78;
      uint64_t v37 = v80;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v78, v30, v80);
      sub_1001F4F24((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      LODWORD(v72) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v38(v36, v37);
      sub_10000B070((uint64_t)v17, &qword_1002F1058);
      sub_10000B070((uint64_t)v19, &qword_1002F1058);
      sub_1001F4FD4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
      v38((uint64_t)v71, v37);
      sub_10000B070((uint64_t)v10, &qword_1002F1058);
      if (v72) {
        goto LABEL_6;
      }
LABEL_11:
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v39 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v41 = v40;
      char v43 = v42 & 1;
      uint64_t v81 = static Color.clear.getter();
      uint64_t v44 = Text.foregroundStyle<A>(_:)();
      uint64_t v46 = v45;
      uint64_t v48 = v47;
      char v50 = v49 & 1;
      sub_10001FC84(v39, v41, v43);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v81 = v44;
      uint64_t v82 = v46;
      char v83 = v50;
      uint64_t v84 = v48;
      uint64_t v51 = v74;
      View.onTapGesture(count:perform:)();
      uint64_t v52 = v46;
      uint64_t v33 = (uint64_t)v51;
      sub_10001FC84(v44, v52, v50);
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_100007620(&qword_1002FBCE0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
      goto LABEL_12;
    }
    sub_10000B070((uint64_t)v17, &qword_1002F1058);
    sub_10000B070((uint64_t)v19, &qword_1002F1058);
    sub_1001F4FD4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v80);
LABEL_9:
    sub_10000B070((uint64_t)v10, &qword_1002F1200);
    goto LABEL_11;
  }
  sub_10000B070((uint64_t)v17, &qword_1002F1058);
  sub_10000B070((uint64_t)v19, &qword_1002F1058);
  sub_1001F4FD4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for TranslateContentView);
  if (v31(v30, 1, v80) != 1) {
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v10, &qword_1002F1058);
LABEL_6:
  uint64_t v32 = sub_100007620(&qword_1002FBCE0);
  uint64_t v33 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v74, 1, 1, v32);
LABEL_12:
  id v55 = (int *)v76;
  uint64_t v54 = v77;
  uint64_t v56 = (uint64_t)v75;
  type metadata accessor for SharedTranslationOptions();
  sub_1001F4F24(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t v57 = EnvironmentObject.init()();
  uint64_t v59 = v58;
  type metadata accessor for SceneContext();
  sub_1001F4F24((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t v60 = EnvironmentObject.init()();
  uint64_t v62 = v61;
  Locale.init(identifier:)();
  Locale.init(identifier:)();
  *(void *)uint64_t v6 = v57;
  *((void *)v6 + 1) = v59;
  *((void *)v6 + 2) = v60;
  *((void *)v6 + 3) = v62;
  *(_DWORD *)(v6 + 47) = 0;
  *((void *)v6 + 4) = 0;
  *((void *)v6 + 5) = 0;
  uint64_t v63 = &v6[v55[12]];
  *((_OWORD *)v63 + 3) = 0u;
  *((_OWORD *)v63 + 4) = 0u;
  *((_OWORD *)v63 + 1) = 0u;
  *((_OWORD *)v63 + 2) = 0u;
  *(_OWORD *)uint64_t v63 = 0u;
  *((void *)v63 + 10) = 0;
  *(void *)&v6[v55[13]] = _swiftEmptyArrayStorage;
  uint64_t v64 = &v6[v55[14]];
  *(void *)uint64_t v64 = 0;
  *((void *)v64 + 1) = 0;
  uint64_t v65 = &v6[v55[15]];
  char v85 = 0;
  State.init(wrappedValue:)();
  uint64_t v66 = v82;
  *uint64_t v65 = v81;
  *((void *)v65 + 1) = v66;
  sub_10000C3A4(v33, v56, &qword_1002FBCD8);
  uint64_t v67 = (uint64_t)v79;
  sub_1001F4F6C((uint64_t)v6, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
  sub_10000C3A4(v56, v54, &qword_1002FBCD8);
  uint64_t v68 = sub_100007620(&qword_1002FBCE8);
  sub_1001F4F6C(v67, v54 + *(int *)(v68 + 48), (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
  sub_1001F4FD4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
  sub_10000B070(v33, &qword_1002FBCD8);
  sub_1001F4FD4(v67, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
  return sub_10000B070(v56, &qword_1002FBCD8);
}

void sub_1001F4418()
{
  if (qword_1002EE6A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10030EB98;
  type metadata accessor for ActivityAuthorizationInfo();
  swift_allocObject();
  ActivityAuthorizationInfo.init()();
  char v1 = ActivityAuthorizationInfo.areActivitiesEnabled.getter();
  swift_release();
  if (v1)
  {
    if (*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity)) {
      sub_1001BF15C(0);
    }
    else {
      sub_1001BE7F8(0);
    }
  }
}

uint64_t sub_1001F44D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TranslateContentView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v40[0] == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    char v7 = v40[0];
    sub_1001F4F6C(a1, (uint64_t)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for TranslateContentView);
    unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v9 = swift_allocObject();
    sub_1001F49B8((uint64_t)&v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8);
    char v10 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    v16[0] = 0;
    LOBYTE(v17) = v7;
    *(_WORD *)((char *)&v17 + 1) = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    *((void *)&v17 + 1) = _swiftEmptyArrayStorage;
    char v20 = 0;
    uint64_t v21 = sub_1001F4C20;
    uint64_t v22 = v9;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = sub_1001F47D8;
    long long v26 = xmmword_1002582E0;
    unint64_t v27 = 0xE800000000000000;
    uint64_t v33 = 0;
    long long v32 = 0u;
    long long v31 = 0u;
    long long v30 = 0u;
    long long v29 = 0u;
    long long v28 = 0u;
    char v34 = v10;
    uint64_t v35 = v11;
    uint64_t v36 = v12;
    uint64_t v37 = v13;
    uint64_t v38 = v14;
    char v39 = 0;
    nullsub_1(&v17);
  }
  else
  {
    sub_1001F4BF4(&v17);
  }
  sub_10001323C((uint64_t)&v17, (uint64_t)v40, &qword_1002FBC78);
  return sub_10001323C((uint64_t)v40, a2, &qword_1002FBC78);
}

uint64_t sub_1001F477C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_retain();
  a3(a2);

  return swift_release();
}

void sub_1001F47D8()
{
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EAE0);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Long press for speech on Translate tab undefined. Doing nothing", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1001F48C0()
{
  swift_retain();
  sub_10005A31C(0, 0);

  return swift_release();
}

uint64_t sub_1001F490C()
{
  return sub_1001F4934(&qword_1002FBC50, &qword_1002FBC58, (void (*)(void))sub_10018D52C);
}

uint64_t sub_1001F4934(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001F49B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F4A1C()
{
  return sub_1001F4B78((uint64_t (*)(uint64_t))sub_1001F2B9C);
}

uint64_t sub_1001F4A34@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F2C9C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001F4A3C()
{
  unint64_t result = qword_1002FBC68;
  if (!qword_1002FBC68)
  {
    sub_100007928(&qword_1002FBC20);
    sub_100007928(&qword_1002FBC10);
    sub_100007928(&qword_1002FBC40);
    sub_1001F4934(&qword_1002FBC48, &qword_1002FBC40, (void (*)(void))sub_1001F490C);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBC68);
  }
  return result;
}

uint64_t sub_1001F4B60()
{
  return sub_1001F4B78((uint64_t (*)(uint64_t))sub_1001F48C0);
}

uint64_t sub_1001F4B78(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for TranslateContentView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

double sub_1001F4BF4(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 217) = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1001F4C20()
{
  return sub_1001F4C3C(0, (void (*)(uint64_t))sub_10005D934);
}

uint64_t sub_1001F4C3C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for TranslateContentView() - 8);
  return sub_1001F477C(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

uint64_t sub_1001F4CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F3AA4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001F4CC0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001F37DC(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001F4CC8()
{
  unint64_t result = qword_1002FBCD0;
  if (!qword_1002FBCD0)
  {
    sub_100007928(&qword_1002FBCC8);
    sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBCD0);
  }
  return result;
}

uint64_t sub_1001F4D90()
{
  uint64_t v1 = (int *)(type metadata accessor for TranslateContentView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1001F4F00()
{
  return sub_1001F4C3C(1, (void (*)(uint64_t))sub_10005C81C);
}

uint64_t sub_1001F4F24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001F4F6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001F4FD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001F5040()
{
  unint64_t result = qword_1002FBCF0;
  if (!qword_1002FBCF0)
  {
    sub_100007928(&qword_1002FBC38);
    sub_1001F50BC();
    sub_1000A6BE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBCF0);
  }
  return result;
}

unint64_t sub_1001F50BC()
{
  unint64_t result = qword_1002FBCF8;
  if (!qword_1002FBCF8)
  {
    sub_100007928(&qword_1002FBC30);
    sub_100007928(&qword_1002FBC20);
    sub_100007928(&qword_1002FBC60);
    sub_1001F4A3C();
    sub_100014894(&qword_1002FBC70, &qword_1002FBC60);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002FBD00, &qword_1002FBD08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBCF8);
  }
  return result;
}

unint64_t sub_1001F51E0(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

id sub_1001F522C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___textInput;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___textInput);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___textInput);
  }
  else
  {
    id v4 = sub_1001F5290(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001F5290(uint64_t a1)
{
  type metadata accessor for TextViewWithPlaceHolder();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  id v4 = self;
  [v3 pointSize];
  id v5 = [v4 systemFontOfSize:];
  id v6 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
  id v7 = [v6 scaledFontForFont:v5 maximumPointSize:1.79769313e308];

  [v2 setFont:v7];
  unint64_t v8 = self;
  id v9 = v2;
  id v10 = [v8 labelColor];
  [v9 setTextColor:v10];

  id v11 = v9;
  id v12 = [v8 clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setDelegate:a1];
  [v11 setTextDropDelegate:a1];
  [v11 setReturnKeyType:0];
  [v11 setForceDisableDictation:1];
  id v13 = v11;
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 setAccessibilityIdentifier:v14];

  [v13 setShowsVerticalScrollIndicator:0];
  [v13 setTextContainerInset:32.0, 32.0, 32.0, 32.0];
  *((unsigned char *)v13 + OBJC_IVAR____TtC17SequoiaTranslator23TextViewWithPlaceHolder_adjustsFontSize) = 1;
  return v13;
}

id sub_1001F555C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___editOrSpeakHint;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___editOrSpeakHint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___editOrSpeakHint);
  }
  else
  {
    id v4 = sub_1001F55BC();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001F55BC()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v0 setFont:v1];

  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [self tertiaryLabelColor];
  [v0 setTextColor:v2];

  [v0 setTextAlignment:1];
  [v0 setNumberOfLines:0];
  id v3 = [self mainBundle];
  v8._countAndFlagsBits = 0xD000000000000024;
  v8._object = (void *)0x8000000100263DB0;
  v4._object = (void *)0x8000000100263D90;
  v4._countAndFlagsBits = 0xD000000000000012;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v6];

  return v0;
}

uint64_t sub_1001F5894(id *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v6 - 8);
  Swift::String v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [*a1 primaryLanguage];
  if (!v13) {
    goto LABEL_4;
  }
  NSString v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  sub_10009A8D8(a2 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    unint64_t v19 = sub_100200F48(45, 0xE100000000000000, v15, v17);
    if (v20)
    {
      uint64_t v27 = Locale.ltLanguageCode.getter();
      if (v28)
      {
        if (v15 == v27 && v28 == v17)
        {
          char v18 = 1;
          goto LABEL_32;
        }
LABEL_31:
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_32;
      }
      char v18 = 0;
LABEL_33:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_bridgeObjectRelease();
      return v18 & 1;
    }
    unint64_t v21 = v19;
    void v38[3] = v3;
    swift_bridgeObjectRetain();
    v38[1] = v21;
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v22 = static String._fromSubstring(_:)();
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = Locale.ltLanguageCode.getter();
    if (v26)
    {
      if (v25 == 26746 && v26 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v30)
      {
LABEL_18:
        if (v22 == 26746 && v24 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v31 = String.index(_:offsetBy:)();
          sub_1001F51E0(v31, v15, v17);
          swift_bridgeObjectRelease();
          uint64_t v32 = static String._fromSubstring(_:)();
          uint64_t v34 = v33;
          swift_bridgeObjectRelease();
          if (Locale.isTraditionalChinese()())
          {
            if (v32 != 1953390920 || v34 != 0xE400000000000000)
            {
LABEL_38:
              char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              goto LABEL_39;
            }
          }
          else if (v32 != 1936613704 || v34 != 0xE400000000000000)
          {
            goto LABEL_38;
          }
          swift_bridgeObjectRelease();
          char v18 = 1;
LABEL_39:
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
          return v18 & 1;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = Locale.ltLanguageCode.getter();
    if (v36)
    {
      if (v22 == v35 && v36 == v24)
      {
        char v18 = 1;
LABEL_32:
        swift_bridgeObjectRelease();
        goto LABEL_33;
      }
      goto LABEL_31;
    }
    char v18 = 0;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  sub_1000CA304((uint64_t)v8);
LABEL_4:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1001F5D4C()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009A8D8(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_1000CA304((uint64_t)v7);
    id v8 = [self mainBundle];
    v17._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0x545F4F545F504154;
    v9._object = (void *)0xEB00000000455059;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v17._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v17)._countAndFlagsBits;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1000CA304((uint64_t)v7);
    id v12 = [self mainBundle];
    v13._uint64_t countAndFlagsBits = 0x545F4F545F504154;
    v13._object = (void *)0xEB00000000455059;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._object = (void *)0xEB00000000656C62;
    uint64_t countAndFlagsBits = Locale.ltLocalizedAppString(_:table:bundle:)(v13, v14, (NSBundle)v12)._countAndFlagsBits;

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return countAndFlagsBits;
}

id sub_1001F5FB8()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___closeButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___closeButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___closeButton);
  }
  else
  {
    id v4 = [self buttonWithType:7];
    [v4 addTarget:v0 action:"closeButtonPressed" forControlEvents:0x2000];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1001F60A4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_verticalHintAnchorConstant] = 0x406C200000000000;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor;
  id v10 = objc_allocWithZone((Class)NSLayoutConstraint);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___textInput] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___editOrSpeakHint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_inputModeBeforeReturnKeyChange] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_editingPair] = 0;
  id v12 = &v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale];
  uint64_t v13 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___closeButton] = 0;
  uint64_t v14 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation;
  id v15 = objc_allocWithZone((Class)type metadata accessor for TypedInputInstrumentation());
  *(void *)&v11[v14] = sub_100237654(0);
  v11[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_uiVisible] = 1;

  v26.receiver = v11;
  v26.super_class = (Class)type metadata accessor for TranslateInputCard();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  Swift::String v17 = self;
  id v18 = v16;
  id v19 = [v17 secondarySystemGroupedBackgroundColor];
  [v18 setBackgroundColor:v19];

  id v20 = [v18 layer];
  [v20 setCornerRadius:_UISheetCornerRadius];

  id v21 = [v18 layer];
  id v22 = [v17 secondarySystemBackgroundColor];
  id v23 = [v22 CGColor];

  [v21 setBorderColor:v23];
  id v24 = [v18 layer];
  [v24 setBorderWidth:0.5];

  [v18 setClipsToBounds:1];
  sub_1001F6514();
  sub_1001F6760();

  return v18;
}

uint64_t sub_1001F6514()
{
  id v1 = sub_1001F555C();
  [v1 setHidden:1];

  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible];
  v0[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible] = 0;
  id v3 = sub_1001F5FB8();
  [v3 setHidden:(*v2 & 1) == 0];

  id v4 = sub_1001F522C();
  [v0 addSubview:v4];

  id v5 = sub_1001F5FB8();
  [v0 addSubview:v5];

  id v6 = sub_1001F555C();
  [v0 addSubview:v6];

  sub_100007620(&qword_1002F4100);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1002488D0;
  *(void *)(v7 + 32) = type metadata accessor for UITraitActiveAppearance();
  *(void *)(v7 + 40) = &protocol witness table for UITraitActiveAppearance;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100007620(&qword_1002F4108);
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_1001F6694()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    id v2 = [Strong layer];

    id v3 = [self secondarySystemBackgroundColor];
    id v4 = [v3 CGColor];

    [v2 setBorderColor:v4];
  }
}

void sub_1001F6760()
{
  id v1 = v0;
  id v2 = sub_1001F522C();
  id v3 = [v2 topAnchor];

  id v4 = [v1 topAnchor];
  id v5 = [v3 constraintEqualToAnchor:v4 constant:0.0];

  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor];
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor] = v5;

  id v49 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100249A50;
  id v9 = sub_1001F5FB8();
  id v10 = [v9 topAnchor];

  id v11 = [v1 topAnchor];
  id v12 = [v10 constraintEqualToSystemSpacingBelowAnchor:v11 multiplier:2.0];

  *(void *)(v8 + 32) = v12;
  id v13 = [v1 trailingAnchor];
  id v14 = sub_1001F5FB8();
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToSystemSpacingAfterAnchor:v15 multiplier:2.0];
  Swift::String v17 = *(void **)&v1[v6];
  *(void *)(v8 + 40) = v16;
  *(void *)(v8 + 48) = v17;
  id v18 = v17;
  id v19 = sub_1001F522C();
  id v20 = [v19 leftAnchor];

  id v21 = [v1 leftAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:0.0];

  *(void *)(v8 + 56) = v22;
  id v23 = sub_1001F522C();
  id v24 = [v23 bottomAnchor];

  id v25 = [v1 bottomAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:0.0];

  *(void *)(v8 + 64) = v26;
  id v27 = sub_1001F522C();
  id v28 = [v27 rightAnchor];

  id v29 = [v1 rightAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:0.0];

  *(void *)(v8 + 72) = v30;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v49 activateConstraints:isa];

  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100249A60;
  id v33 = sub_1001F555C();
  id v34 = [v33 centerXAnchor];

  id v35 = [v1 centerXAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v32 + 32) = v36;
  id v37 = sub_1001F555C();
  id v38 = [v37 leftAnchor];

  id v39 = [v1 leftAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39 constant:24.0];

  *(void *)(v32 + 40) = v40;
  id v41 = sub_1001F555C();
  id v42 = [v41 bottomAnchor];

  id v43 = [v1 bottomAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:-*(double *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_verticalHintAnchorConstant]];

  *(void *)(v32 + 48) = v44;
  id v45 = sub_1001F555C();
  id v46 = [v45 rightAnchor];

  id v47 = [v1 rightAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-24.0];

  *(void *)(v32 + 56) = v48;
  specialized Array._endMutation()();
  Class v50 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v49 activateConstraints:v50];
}

void sub_1001F6D10()
{
  id v0 = sub_1001F522C();
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  id v2 = sub_1001F522C();
  id v3 = self;
  id v4 = [v3 mainBundle];
  v16._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = 0x545F4F545F504154;
  v5._object = (void *)0xEB00000000455059;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v16);

  id v7 = sub_1001E74EC();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8];

  id v9 = sub_1001F522C();
  [v9 setUserInteractionEnabled:1];

  id v10 = sub_1001F522C();
  id v11 = [v3 mainBundle];
  v17._object = (void *)0xE000000000000000;
  v12._uint64_t countAndFlagsBits = 0x545F4F545F504154;
  v12._object = (void *)0xEB00000000455059;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v17);

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setAccessibilityLabel:v14];

  sub_1001F6F18();
}

void sub_1001F6F18()
{
  id v1 = sub_1001F555C();
  [v1 setHidden:1];

  id v2 = sub_1001F522C();
  [v2 resignFirstResponder];

  id v3 = sub_1001F522C();
  id v4 = sub_1001F522C();
  BOOL v5 = [v4 effectiveUserInterfaceLayoutDirection] == (id)1;

  [v3 setTextAlignment:2 * v5];
  id v6 = sub_1001F522C();
  id v7 = [v6 text];

  if (v7)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v10 = v9;

    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      Swift::String v12 = (unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible);
      *(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible) = 1;
    }
    else
    {
      id v13 = sub_1001F522C();
      id v14 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
      id v15 = self;
      [v14 pointSize];
      id v16 = [v15 systemFontOfSize:];
      id v17 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
      id v18 = [v17 scaledFontForFont:v16 maximumPointSize:1.79769313e308];

      [v13 setFont:v18];
      Swift::String v12 = (unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible);
      *(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible) = 0;
    }
    id v19 = sub_1001F5FB8();
    [v19 setHidden:(*v12 & 1) == 0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1001F71F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = sub_1001F522C();
  [v9 reloadInputViews];

  id v10 = sub_1001F522C();
  sub_1001F5D4C();
  id v11 = sub_1001E74EC();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v12];

  id v13 = sub_1001F522C();
  sub_10009A8D8(v1 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    static Locale.current.getter();
    sub_1000CA304((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  Swift::Bool v14 = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v14) {
    uint64_t v15 = 2;
  }
  else {
    uint64_t v15 = 0;
  }
  [v13 setTextAlignment:v15];
}

id sub_1001F7474()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranslateInputCard();
  return [super dealloc];
}

uint64_t sub_1001F7568()
{
  return type metadata accessor for TranslateInputCard();
}

uint64_t type metadata accessor for TranslateInputCard()
{
  uint64_t result = qword_1002FBD78;
  if (!qword_1002FBD78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001F75BC()
{
  sub_1000C9F78();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001F770C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_1001F522C();
  id v9 = [v8 returnKeyType];

  id v10 = [a1 text];
  if (!v10)
  {
    __break(1u);
    return;
  }
  id v11 = v10;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v25[0] = v12;
  v25[1] = v14;
  static CharacterSet.whitespaces.getter();
  sub_10000C350();
  uint64_t v15 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  if (!v18 || (!v15 ? (BOOL v19 = v17 == 0xE000000000000000) : (BOOL v19 = 0), v19))
  {
    swift_bridgeObjectRelease();
    if (!v9) {
      return;
    }
  }
  else
  {
    int v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((id)(~v20 & 1) == v9) {
      return;
    }
  }
  [a1 setReturnKeyType:];
  id v21 = [a1 textInputMode];
  uint64_t v22 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_inputModeBeforeReturnKeyChange;
  id v23 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_inputModeBeforeReturnKeyChange);
  *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_inputModeBeforeReturnKeyChange) = v21;

  [a1 reloadInputViews];
  id v24 = *(void **)(v2 + v22);
  *(void *)(v2 + v22) = 0;
}

void *sub_1001F7B6C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v6);
      id v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v12 = v7;
      char v10 = sub_1001F5894(&v12, a2);
      if (v2)
      {
        swift_bridgeObjectRelease();

        return v8;
      }
      if (v10)
      {
        swift_bridgeObjectRelease();
        return v8;
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1001F7C90()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_verticalHintAnchorConstant] = 0x406C200000000000;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_textInputTopAnchor;
  *(void *)&v1[v2] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___textInput] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___editOrSpeakHint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_inputModeBeforeReturnKeyChange] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_editingPair] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_selectedEditingLocale];
  uint64_t v4 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard____lazy_storage___closeButton] = 0;
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation;
  id v6 = objc_allocWithZone((Class)type metadata accessor for TypedInputInstrumentation());
  *(void *)&v1[v5] = sub_100237654(0);
  v1[OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_uiVisible] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001F7E10()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong willBeginEditing];
    swift_unknownObjectRelease();
  }
  id v3 = sub_1001F555C();
  [v3 setHidden:1];

  uint64_t v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_closeButtonVisible) = 1;
  id v5 = sub_1001F5FB8();
  [v5 setHidden:(*v4 & 1) == 0];

  id v6 = objc_allocWithZone((Class)type metadata accessor for TypedInputInstrumentation());
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation) = sub_100237654(0);

  return _objc_release_x1();
}

uint64_t sub_1001F7EF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for CharacterSet();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 != 10 || a3 != 0xE100000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 1;
  }
  uint64_t result = (uint64_t)[a1 text];
  if (result)
  {
    uint64_t v13 = (void *)result;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    v35[0] = v14;
    v35[1] = v16;
    static CharacterSet.whitespaces.getter();
    sub_10000C350();
    uint64_t v17 = StringProtocol.trimmingCharacters(in:)();
    unint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    uint64_t v20 = HIBYTE(v19) & 0xF;
    if ((v19 & 0x2000000000000000) == 0) {
      uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
    }
    if (v20)
    {
      uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation;
      uint64_t v22 = (char *)*(id *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation);
      *(void *)&v22[OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_characterCount] = String.count.getter();

      uint64_t v23 = *(void *)(v4 + v21);
      id v24 = *(void **)(v4 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_editingPair);
      id v25 = *(void **)(v23 + OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair);
      *(void *)(v23 + OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_localePair) = v24;
      id v26 = v24;

      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v28 = (void *)Strong;
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v30 = *(id *)(v4 + v21);
        [v28 translateWithText:v29 instrumentation:v30];

        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v31 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v31)
      {
        [v31 didPressReturn];
        swift_unknownObjectRelease();
      }
    }
    id v32 = objc_allocWithZone((Class)type metadata accessor for TypedInputInstrumentation());
    id v33 = sub_100237654(0);
    id v34 = *(void **)(v4 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation);
    *(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator18TranslateInputCard_instrumentation) = v33;

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001F81C0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001F81F8()
{
}

id sub_1001F8200()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate____lazy_storage___systemApertureElementProvider;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate____lazy_storage___systemApertureElementProvider);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate____lazy_storage___systemApertureElementProvider);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for SpeechTranslationApertureElementViewController()) initWithNibName:0 bundle:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1001F8364(void *a1)
{
  uint64_t v3 = type metadata accessor for LiveActivityView();
  __chkstk_darwin(v3 - 8);
  id v5 = (uint64_t *)((char *)&v33[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA20);
  id v7 = a1;
  id v8 = v1;
  id v9 = v7;
  uint64_t v10 = (char *)v8;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  uint64_t v13 = (void *)&unk_1002FB000;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    v33[0] = v32;
    *(_DWORD *)uint64_t v14 = 136446466;
    id v15 = [v9 session:v32, v33[0]];
    id v16 = [v15 persistentIdentifier];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v34 = sub_100202FD4(v17, v19, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    if (*(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate_currentActivity])
    {
      swift_retain();
      uint64_t v20 = Activity.id.getter();
      unint64_t v22 = v21;
      swift_release();
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v34 = sub_100202FD4(v20, v22, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Translate Activity scene resigning active [id: %{public}s currentActivity: %s]", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v13 = &unk_1002FB000;
  }
  else
  {
  }
  id v23 = [self sharedApplication];
  id v24 = [v23 delegate];

  if (v24)
  {
    type metadata accessor for AppDelegate();
    uint64_t v25 = swift_dynamicCastClass();
    if (v25)
    {
      uint64_t v26 = *(void *)(v25 + OBJC_IVAR____TtC17SequoiaTranslator11AppDelegate_interruptionController);
      swift_retain();
      swift_unknownObjectRelease();
      if (v26)
      {
        *(void *)(v26 + 40) = 0;
        swift_unknownObjectWeakAssign();
        swift_release();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v27 = sub_1001F8200();
  dispatch thunk of UIHostingController.rootView.getter();
  uint64_t v28 = v5[1];
  v33[0] = *v5;
  v33[1] = v28;
  sub_100007620((uint64_t *)&unk_1002FBDF0);
  State.wrappedValue.getter();
  sub_1001C3D00((uint64_t)v5);

  uint64_t v29 = v13[440];
  uint64_t v30 = swift_retain();
  sub_1001476D4(v30);
  swift_release();
  swift_release();
  *(void *)&v10[v29] = 0;
  return swift_release();
}

void sub_1001F87CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LiveActivityView();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ActivityScene();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    id v8 = (void *)v7;
    id v9 = a1;
    if (objc_msgSend(v8, "SBUI_isHostedBySystemAperture"))
    {
      if (qword_1002EE6A8 != -1) {
        swift_once();
      }
      uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate_currentActivity;
      *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate_currentActivity] = *(void *)(qword_10030EB98 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity);
      swift_retain();
      swift_release();
      id v11 = sub_1001F8200();
      dispatch thunk of UIHostingController.rootView.getter();
      uint64_t v12 = v6[1];
      v36[0] = *v6;
      v36[1] = v12;
      sub_100007620((uint64_t *)&unk_1002FBDF0);
      State.wrappedValue.getter();
      sub_1001C3D00((uint64_t)v6);

      sub_100148444();
      swift_release();
      if (qword_1002EE608 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100011554(v13, (uint64_t)qword_10030EA20);
      id v14 = v9;
      id v15 = v2;
      id v16 = v14;
      uint64_t v17 = v15;
      unint64_t v18 = Logger.logObject.getter();
      int v19 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        int v35 = v19;
        uint64_t v20 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        v36[0] = v34;
        *(_DWORD *)uint64_t v20 = 136446466;
        id v21 = [v16 session];
        id v22 = [v21 persistentIdentifier];

        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        uint64_t v37 = sub_100202FD4(v23, v25, v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        if (*(void *)&v2[v10])
        {
          swift_retain();
          uint64_t v26 = Activity.id.getter();
          unint64_t v28 = v27;
          swift_release();
        }
        else
        {
          uint64_t v26 = 0;
          unint64_t v28 = 0xE000000000000000;
        }
        uint64_t v37 = sub_100202FD4(v26, v28, v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v35, "Translate Activity scene became active [id: %{public}s currentActivity: %s]", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return;
    }
  }
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_100011554(v29, (uint64_t)qword_10030EA20);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Scene not an ActivityScene or not hosted by system aperture", v32, 2u);
    swift_slowDealloc();
  }

  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator36TranslateSystemApertureSceneDelegate_currentActivity] = 0;

  swift_release();
}

id sub_1001F8D68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranslateSystemApertureSceneDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for TranslateSystemApertureSceneDelegate()
{
  return self;
}

void sub_1001F8E1C(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!Strong)
    {
      *(void *)(a3 + 40) = &off_1002D15F8;
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v5)
    {
      *(void *)(a3 + 24) = &off_1002D15F8;
LABEL_19:
      swift_unknownObjectWeakAssign();
      return;
    }
  }
  if (qword_1002EE5B0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100011554(v7, (uint64_t)qword_10030E918);
  oslog = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v14 = v10;
    if (a2) {
      uint64_t v11 = 0x697463416576696CLL;
    }
    else {
      uint64_t v11 = 1852399981;
    }
    if (a2) {
      unint64_t v12 = 0xEC00000079746976;
    }
    else {
      unint64_t v12 = 0xE400000000000000;
    }
    sub_100202FD4(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempting to register %{public}s scene even though one is already registered with the interruption controller; ig"
      "noring new scene",
      v9,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1001F9074(uint64_t a1, char a2, uint64_t a3)
{
  if (a2)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!Strong)
    {
      *(void *)(a3 + 40) = &off_1002CF6E0;
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (!v5)
    {
      *(void *)(a3 + 24) = &off_1002CF6E0;
LABEL_19:
      swift_unknownObjectWeakAssign();
      return;
    }
  }
  if (qword_1002EE5B0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100011554(v7, (uint64_t)qword_10030E918);
  oslog = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)id v9 = 136446210;
    uint64_t v14 = v10;
    if (a2) {
      uint64_t v11 = 0x697463416576696CLL;
    }
    else {
      uint64_t v11 = 1852399981;
    }
    if (a2) {
      unint64_t v12 = 0xEC00000079746976;
    }
    else {
      unint64_t v12 = 0xE400000000000000;
    }
    sub_100202FD4(v11, v12, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempting to register %{public}s scene even though one is already registered with the interruption controller; ig"
      "noring new scene",
      v9,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1001F92CC(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for LiveActivityView();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ActivityScene();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7) {
    goto LABEL_8;
  }
  os_log_type_t v8 = (void *)v7;
  id v9 = a1;
  if (!objc_msgSend(v8, "SBUI_isHostedBySystemAperture"))
  {

LABEL_8:
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100011554(v20, (uint64_t)qword_10030EA20);
    os_log_t v35 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v21, "Scene not an ActivityScene or not hosted by system aperture", v22, 2u);
      swift_slowDealloc();
    }
    os_log_t v23 = v35;

    return;
  }
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030EA20);
  id v11 = v9;
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v36[0] = v34;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v15 = [v11 session:v14 + 4 v34];
    id v16 = [v15 persistentIdentifier];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    os_log_t v35 = v2;
    unint64_t v19 = v18;

    uint64_t v37 = sub_100202FD4(v17, v19, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Connecting to Translate Activity scene [id: %{public}s]", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v24 = v11;
  id v25 = sub_1001F8200();
  [v8 setSystemApertureElementViewControllerProvider:v25];

  id v26 = [self sharedApplication];
  id v27 = [v26 delegate];

  if (!v27) {
    goto LABEL_20;
  }
  type metadata accessor for AppDelegate();
  uint64_t v28 = swift_dynamicCastClass();
  if (v28)
  {
    uint64_t v29 = *(void *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator11AppDelegate_interruptionController);
    swift_retain();
    swift_unknownObjectRelease();
    if (v29)
    {
      id v30 = sub_1001F8200();
      dispatch thunk of UIHostingController.rootView.getter();
      uint64_t v31 = v6[1];
      v36[0] = *v6;
      v36[1] = v31;
      sub_100007620((uint64_t *)&unk_1002FBDF0);
      State.wrappedValue.getter();
      uint64_t v32 = v37;
      sub_1001C3D00((uint64_t)v6);

      sub_1001F9074(v32, 1, v29);
      swift_release();
      swift_release();
    }
LABEL_20:

    return;
  }

  swift_unknownObjectRelease();
}

uint64_t sub_1001F9770()
{
  sub_10014EB80();

  return EnvironmentValues.subscript.getter();
}

ValueMetadata *type metadata accessor for TypesettingLanguage()
{
  return &type metadata for TypesettingLanguage;
}

uint64_t sub_1001F97C8()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale.Language();
  sub_100013C88(v4, qword_10030ECF0);
  sub_100011554(v4, (uint64_t)qword_10030ECF0);
  static Locale.current.getter();
  Locale.language.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1001F98C4@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002EE700 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Locale.Language();
  uint64_t v3 = sub_100011554(v2, (uint64_t)qword_10030ECF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001F996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1001FA478(&qword_1002FBE00, (void (*)(uint64_t))&type metadata accessor for Locale.Language);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t *sub_1001F9A00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Locale.Language();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    id v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1001F9B28(uint64_t a1)
{
  sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for Locale.Language();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_1001F9BCC(void *a1, void *a2, uint64_t a3)
{
  sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Locale.Language();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1001F9CA4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001F9DA0((uint64_t)a1);
    sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Locale.Language();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001F9DA0(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F5790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1001F9E00(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Locale.Language();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1001F9ED4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001F9DA0((uint64_t)a1);
    uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Locale.Language();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1001F9FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F9FDC);
}

uint64_t sub_1001F9FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F69A8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001FA0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA0B8);
}

uint64_t sub_1001FA0B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F69A8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranslateText()
{
  uint64_t result = qword_1002FBE60;
  if (!qword_1002FBE60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001FA1C8()
{
  sub_1001FA25C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001FA25C()
{
  if (!qword_1002F6A18)
  {
    type metadata accessor for Locale.Language();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F6A18);
    }
  }
}

uint64_t sub_1001FA2B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FA2D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Locale.Language();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for KaraokeView(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (uint64_t *)(v1 + *(int *)(a1 + 20));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  sub_10011C340(v11, v12, (uint64_t)v9);
  sub_100100ABC((uint64_t)v6);
  sub_1001FA478(&qword_1002FBE98, (void (*)(uint64_t))type metadata accessor for KaraokeView);
  View.typesettingLanguage(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1001FA4C0((uint64_t)v9);
}

uint64_t sub_1001FA478(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001FA4C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KaraokeView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FA51C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_1001FA5A4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    os_log_type_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *os_log_type_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    unint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v20 = v18[1];
      *uint64_t v17 = v19;
      v17[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

uint64_t sub_1001FA6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 28)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001FA774(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  unint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  void *v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  os_log_type_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_1001FA848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a1 + v13);
  uint64_t v17 = *(void *)(a2 + v13);
  if (!v16)
  {
    if (v17)
    {
      uint64_t v19 = *(void *)(v15 + 8);
      *uint64_t v14 = v17;
      v14[1] = v19;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  if (!v17)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v18 = *(void *)(v15 + 8);
  *uint64_t v14 = v17;
  v14[1] = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001FA96C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = v10[1];
    void *v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  return a1;
}

uint64_t sub_1001FAA18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *(void *)(a1 + v17);
  uint64_t v21 = *v19;
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = v19[1];
      void *v18 = v21;
      v18[1] = v23;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    return a1;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v22 = v19[1];
  void *v18 = v21;
  v18[1] = v22;
  swift_release();
  return a1;
}

uint64_t sub_1001FAB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FAB24);
}

uint64_t sub_1001FAB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001FABE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FABFC);
}

uint64_t sub_1001FABFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranslateTip(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002FBEF8);
}

uint64_t sub_1001FACDC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

int *sub_1001FAD7C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v23._object = (void *)0xE000000000000000;
  v9._object = (void *)0x800000010025C210;
  v9._uint64_t countAndFlagsBits = 0xD000000000000016;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v23);

  uint64_t countAndFlagsBits = 0;
  object = 0;
  if (a1)
  {
    id v14 = [v7 mainBundle];
    v24._object = (void *)0xE000000000000000;
    v15._object = (void *)0x8000000100263EC0;
    v15._uint64_t countAndFlagsBits = 0xD000000000000016;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0;
    Swift::String v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v24);
    uint64_t countAndFlagsBits = v17._countAndFlagsBits;
    object = v17._object;
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  swift_retain();
  UUID.init()();
  uint64_t result = (int *)type metadata accessor for TranslateTip(0);
  *(Swift::String *)(a4 + result[5]) = v11;
  uint64_t v20 = (uint64_t *)(a4 + result[6]);
  *uint64_t v20 = countAndFlagsBits;
  v20[1] = (uint64_t)object;
  uint64_t v21 = (uint64_t (**)())(a4 + result[7]);
  void *v21 = sub_100034114;
  v21[1] = (uint64_t (*)())v18;
  return result;
}

uint64_t sub_1001FAF14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_1001FAF80()
{
  return sub_1001FB8E4(&qword_1002F43C0, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1001FAFC8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1001FAFF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001FB028()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for TranslateTip(0);
  sub_100013C88((uint64_t)v4, qword_10030ED08);
  uint64_t v5 = sub_100011554((uint64_t)v4, (uint64_t)qword_10030ED08);
  id v6 = [self mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v14._object = (void *)0x8000000100263F00;
  v7._object = (void *)0x8000000100263EE0;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  UUID.init()();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(Swift::String *)(v5 + v4[5]) = v9;
  Swift::String v11 = (void *)(v5 + v4[6]);
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v5 + v4[7]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  return result;
}

uint64_t sub_1001FB1D4()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (int *)type metadata accessor for TranslateTip(0);
  sub_100013C88((uint64_t)v4, qword_10030ED20);
  uint64_t v5 = sub_100011554((uint64_t)v4, (uint64_t)qword_10030ED20);
  id v6 = [self mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD000000000000020;
  v14._object = (void *)0x8000000100263F40;
  v7._object = (void *)0x8000000100263F20;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v14);

  UUID.init()();
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(Swift::String *)(v5 + v4[5]) = v9;
  Swift::String v11 = (void *)(v5 + v4[6]);
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v5 + v4[7]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  return result;
}

ValueMetadata *type metadata accessor for TranslateTipsView()
{
  return &type metadata for TranslateTipsView;
}

uint64_t sub_1001FB38C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FB3A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticTipView(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002FBF70);
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DynamicTipView(0);
  __chkstk_darwin(v8);
  Swift::String v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + *(int *)(type metadata accessor for TranslateTip(0) + 28)))
  {
    sub_1001FB96C(a1, (uint64_t)v10, type metadata accessor for TranslateTip);
    sub_1001FB96C((uint64_t)v10, (uint64_t)v7, type metadata accessor for DynamicTipView);
    swift_storeEnumTagMultiPayload();
    sub_1001FB8E4(&qword_1002FBF58, (void (*)(uint64_t))type metadata accessor for DynamicTipView);
    sub_1001FB8E4(&qword_1002FBF60, (void (*)(uint64_t))type metadata accessor for StaticTipView);
    _ConditionalContent<>.init(storage:)();
    Swift::String v11 = type metadata accessor for DynamicTipView;
    uint64_t v12 = (uint64_t)v10;
  }
  else
  {
    sub_1001FB96C(a1, (uint64_t)v4, type metadata accessor for TranslateTip);
    sub_1001FB96C((uint64_t)v4, (uint64_t)v7, type metadata accessor for StaticTipView);
    swift_storeEnumTagMultiPayload();
    sub_1001FB8E4(&qword_1002FBF58, (void (*)(uint64_t))type metadata accessor for DynamicTipView);
    sub_1001FB8E4(&qword_1002FBF60, (void (*)(uint64_t))type metadata accessor for StaticTipView);
    _ConditionalContent<>.init(storage:)();
    Swift::String v11 = type metadata accessor for StaticTipView;
    uint64_t v12 = (uint64_t)v4;
  }
  return sub_1001FB9D4(v12, v11);
}

uint64_t sub_1001FB6CC@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0x401C000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  sub_100007620(&qword_1002FBF38);
  swift_bridgeObjectRetain();
  sub_100007620(&qword_1002F1548);
  type metadata accessor for UUID();
  sub_100007620(&qword_1002FBF40);
  sub_100014894(&qword_1002FBF48, &qword_1002F1548);
  sub_1001FB808();
  sub_1001FB8E4(&qword_1002FBF68, (void (*)(uint64_t))type metadata accessor for TranslateTip);
  return ForEach<>.init(_:content:)();
}

unint64_t sub_1001FB808()
{
  unint64_t result = qword_1002FBF50;
  if (!qword_1002FBF50)
  {
    sub_100007928(&qword_1002FBF40);
    sub_1001FB8E4(&qword_1002FBF58, (void (*)(uint64_t))type metadata accessor for DynamicTipView);
    sub_1001FB8E4(&qword_1002FBF60, (void (*)(uint64_t))type metadata accessor for StaticTipView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBF50);
  }
  return result;
}

uint64_t sub_1001FB8E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DynamicTipView(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002FC060);
}

uint64_t type metadata accessor for StaticTipView(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002FBFD0);
}

uint64_t sub_1001FB96C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001FB9D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001FBA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FBA60);
}

uint64_t sub_1001FBA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FBA78);
}

uint64_t *sub_1001FBA80(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TranslateTip(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    Swift::String v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[7];
    Swift::String v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v19)
    {
      uint64_t v20 = v18[1];
      *Swift::String v17 = v19;
      v17[1] = v20;
      swift_retain();
    }
    else
    {
      *(_OWORD *)Swift::String v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

uint64_t sub_1001FBBB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for TranslateTip(0);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v3 + 28)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_1001FBC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslateTip(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  void *v7 = v10;
  v7[1] = v9;
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = v5[7];
  uint64_t v16 = (void *)(a1 + v15);
  Swift::String v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18)
  {
    uint64_t v19 = v17[1];
    *uint64_t v16 = v18;
    v16[1] = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t sub_1001FBD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslateTip(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *(void *)(a1 + v12);
  uint64_t v16 = *v14;
  if (!v15)
  {
    if (v16)
    {
      uint64_t v18 = v14[1];
      *uint64_t v13 = v16;
      v13[1] = v18;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    return a1;
  }
  if (!v16)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v17 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001FBE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslateTip(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(_OWORD *)(a1 + v5[6]) = *(_OWORD *)(a2 + v5[6]);
  uint64_t v6 = v5[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v9 = *v8;
  if (*v8)
  {
    uint64_t v10 = v8[1];
    void *v7 = v9;
    v7[1] = v10;
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  }
  return a1;
}

uint64_t sub_1001FBF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  int v5 = (int *)type metadata accessor for TranslateTip(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  void *v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v5[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v19 = *(void *)(a1 + v16);
  uint64_t v20 = *v18;
  if (!v19)
  {
    if (v20)
    {
      uint64_t v22 = v18[1];
      *uint64_t v17 = v20;
      v17[1] = v22;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    return a1;
  }
  if (!v20)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v21 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v21;
  swift_release();
  return a1;
}

uint64_t sub_1001FC01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC030);
}

uint64_t sub_1001FC034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateTip(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001FC0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC0B4);
}

uint64_t sub_1001FC0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateTip(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1001FC128()
{
  uint64_t result = type metadata accessor for TranslateTip(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001FC1B4()
{
  return sub_100014894(&qword_1002FC098, &qword_1002FC0A0);
}

uint64_t sub_1001FC1F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FC20C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for TranslateTip(0);
  sub_10000C350();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Color.secondary.getter();
  uint64_t v7 = Text.foregroundColor(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10001FC84(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  LOBYTE(v2) = v16 & 1;
  sub_10001FC84(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  uint64_t v17 = Text.bold()();
  uint64_t v19 = v18;
  LOBYTE(v7) = v20;
  uint64_t v22 = v21;
  sub_10001FC84(v12, v14, v2);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v19;
  *(unsigned char *)(a1 + 16) = v7 & 1;
  *(void *)(a1 + 24) = v22;
  return result;
}

uint64_t sub_1001FC390()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001FC3AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_100007620(&qword_1002FC0B0);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v49 = (char *)&v47 - v7;
  __chkstk_darwin(v6);
  Class v50 = (char *)&v47 - v8;
  uint64_t v9 = type metadata accessor for TranslateTip(0);
  char v10 = (uint64_t *)(a1 + *(int *)(v9 + 24));
  unint64_t v11 = v10[1];
  if (v11)
  {
    uint64_t v58 = *v10;
    unint64_t v59 = v11;
    uint64_t v47 = v9;
    sub_10000C350();
    swift_bridgeObjectRetain();
    uint64_t v12 = Text.init<A>(_:)();
    uint64_t v14 = v13;
    char v16 = v15 & 1;
    static Font.subheadline.getter();
    uint64_t v48 = a1;
    uint64_t v17 = Text.font(_:)();
    uint64_t v19 = v18;
    char v21 = v20;
    swift_release();
    sub_10001FC84(v12, v14, v16);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v22 = Text.foregroundColor(_:)();
    uint64_t v24 = v23;
    char v26 = v25;
    swift_release();
    a1 = v48;
    sub_10001FC84(v17, v19, v21 & 1);
    swift_bridgeObjectRelease();
    uint64_t v27 = Text.bold()();
    uint64_t v56 = v28;
    uint64_t v57 = v27;
    uint64_t v55 = v29;
    uint64_t v31 = (char *)(v30 & 1);
    sub_10001FC84(v22, v24, v26 & 1);
    swift_bridgeObjectRelease();
    uint64_t v9 = v47;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v31 = 0;
    uint64_t v55 = 0;
  }
  if (*(void *)(a1 + *(int *)(v9 + 28)))
  {
    __chkstk_darwin(v9);
    *(&v47 - 2) = a1;
    swift_retain();
    sub_100007620(&qword_1002FC0B8);
    uint64_t v32 = sub_100007928(&qword_1002FC0C0);
    unint64_t v33 = sub_1001FCC00();
    uint64_t v58 = v32;
    unint64_t v59 = v33;
    swift_getOpaqueTypeConformance2();
    uint64_t v34 = v49;
    Button.init(action:label:)();
    uint64_t v36 = v53;
    uint64_t v35 = v54;
    uint64_t v37 = v50;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v50, v34, v54);
    id v38 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    id v39 = v52;
    v38(v52, v37, v35);
    id v40 = v51;
    uint64_t v42 = v56;
    uint64_t v41 = v57;
    *(void *)uint64_t v51 = v57;
    *((void *)v40 + 1) = v42;
    *((void *)v40 + 2) = v31;
    id v49 = v31;
    uint64_t v43 = v55;
    *((void *)v40 + 3) = v55;
    uint64_t v44 = sub_100007620(&qword_1002FC100);
    v38(&v40[*(int *)(v44 + 48)], v39, v35);
    LOBYTE(v38) = (_BYTE)v49;
    sub_1001FCE10(v41, v42, (char)v49, v43);
    id v45 = *(void (**)(char *, uint64_t))(v36 + 8);
    v45(v37, v35);
    v45(v39, v35);
    return sub_1001FCBB4(v41, v42, (char)v38, v43);
  }
  else
  {
    uint64_t result = sub_1001FCBB4(v57, v56, (char)v31, v55);
    __break(1u);
  }
  return result;
}

uint64_t sub_1001FC7C8@<X0>(uint64_t a1@<X8>)
{
  v23[1] = a1;
  uint64_t v1 = sub_100007620(&qword_1002FC0E8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002FC0D8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = sub_100007620(&qword_1002FC0C0);
  __chkstk_darwin(v23[0]);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = static VerticalAlignment.center.getter();
  sub_1001FCA80((uint64_t)&v24);
  uint64_t v11 = v24;
  uint64_t v12 = v25;
  char v13 = v26;
  uint64_t v14 = v27;
  uint64_t v15 = v28;
  uint64_t v24 = v10;
  uint64_t v25 = 0x4014000000000000;
  char v26 = 0;
  uint64_t v27 = v11;
  uint64_t v28 = v12;
  char v29 = v13;
  uint64_t v30 = v14;
  uint64_t v31 = v15;
  sub_100007620(&qword_1002FC0F8);
  sub_100014894(&qword_1002FC0F0, &qword_1002FC0F8);
  View.accessibilityIdentifier(_:)();
  sub_10001FC84(v11, v12, v13);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v16 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v3, (uint64_t)v7, &qword_1002FC0E8);
  uint64_t v18 = (uint64_t *)&v7[*(int *)(v5 + 44)];
  uint64_t *v18 = KeyPath;
  v18[1] = v16;
  sub_10000B070((uint64_t)v3, &qword_1002FC0E8);
  uint64_t v19 = static Color.translateAccentColor.getter();
  uint64_t v20 = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v7, (uint64_t)v9, &qword_1002FC0D8);
  char v21 = (uint64_t *)&v9[*(int *)(v23[0] + 36)];
  uint64_t *v21 = v20;
  v21[1] = v19;
  sub_10000B070((uint64_t)v7, &qword_1002FC0D8);
  sub_1001FCC00();
  View.bold(_:)();
  return sub_10000B070((uint64_t)v9, &qword_1002FC0C0);
}

uint64_t sub_1001FCA80@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for TranslateTip(0);
  sub_10000C350();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = Image.init(systemName:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v9;
  sub_10001FC74(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_10001FC84(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001FCB68@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0x4000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100007620(&qword_1002FC0A8);
  return sub_1001FC3AC(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_1001FCBB4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001FC84(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001FCBF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001FC7C8(a1);
}

unint64_t sub_1001FCC00()
{
  unint64_t result = qword_1002FC0C8;
  if (!qword_1002FC0C8)
  {
    sub_100007928(&qword_1002FC0C0);
    sub_1001FCCA0();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FC0C8);
  }
  return result;
}

unint64_t sub_1001FCCA0()
{
  unint64_t result = qword_1002FC0D0;
  if (!qword_1002FC0D0)
  {
    sub_100007928(&qword_1002FC0D8);
    sub_1001FCD40();
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FC0D0);
  }
  return result;
}

unint64_t sub_1001FCD40()
{
  unint64_t result = qword_1002FC0E0;
  if (!qword_1002FC0E0)
  {
    sub_100007928(&qword_1002FC0E8);
    sub_100014894(&qword_1002FC0F0, &qword_1002FC0F8);
    sub_1001FB8E4((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FC0E0);
  }
  return result;
}

uint64_t sub_1001FCE10(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10001FC74(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001FCE64()
{
  return sub_100014894(&qword_1002FC108, &qword_1002FC110);
}

void *sub_1001FCEA0()
{
  return &protocol witness table for Text;
}

uint64_t sub_1001FCEAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1001FCF20(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v26 - v12;
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100011554(v14, (uint64_t)qword_10030E978);
  swift_retain_n();
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v28 = v16;
    uint64_t v29 = a1;
    uint64_t v30 = v6;
    uint64_t v31 = v13;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v35 = v27;
    *(_DWORD *)uint64_t v17 = 136446210;
    uint64_t v32 = v2;
    uint64_t v18 = v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID;
    swift_beginAccess();
    uint64_t v19 = *(void **)v18;
    unint64_t v20 = *(void *)(v18 + 24);
    uint64_t v33 = *(void *)(v18 + 16);
    uint64_t v34 = v19;
    id v21 = v19;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    unint64_t v22 = v37;
    if (v37)
    {
      uint64_t v33 = v36;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();

      unint64_t v22 = v20;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v36 = sub_100202FD4(v33, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = v32;
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v28, "Suspending conversation session with ID: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v30;
    char v13 = v31;
    a1 = v29;
  }
  else
  {

    swift_release_n();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v23(v13, a1, v7);
  v23(v11, (uint64_t)v13, v7);
  swift_beginAccess();
  v23(v6, (uint64_t)v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  swift_retain();
  swift_setAtWritableKeyPath();
  swift_release();
  sub_100007620(&qword_1002F96E8);
  PassthroughSubject.send(_:)();
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v11, v7);
  swift_endAccess();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v13, v7);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_isSuspended) = 1;
  return result;
}

uint64_t sub_1001FD38C(void (*a1)(char *, uint64_t))
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = sub_100007620(&qword_1002F96E8);
  uint64_t v11 = __chkstk_darwin(v10);
  char v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (id *)((char *)&v44 - v14);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t result = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v44 - v23;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_isSuspended) == 1)
  {
    id v49 = a1;
    uint64_t v50 = OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_isSuspended;
    uint64_t v52 = v22;
    uint64_t v53 = v21;
    uint64_t v54 = v7;
    uint64_t v55 = v10;
    uint64_t v25 = v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__sessionSuspension;
    swift_beginAccess();
    uint64_t v51 = v25;
    sub_10000C3A4(v25, (uint64_t)v15, &qword_1002F96E8);
    id v58 = *v15;
    id v26 = v58;
    swift_getAtKeyPath();

    sub_10000C3A4((uint64_t)v15, (uint64_t)v13, &qword_1002F96E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v24, &v13[*(int *)(v55 + 32)], v16);
      sub_10000B070((uint64_t)v13, &qword_1002F96E8);
      sub_10000B070((uint64_t)v9, &qword_1002F8BA0);
    }
    else
    {
      sub_10000B070((uint64_t)v13, &qword_1002F96E8);
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v9, v16);
    }
    sub_10000B070((uint64_t)v15, &qword_1002F96E8);
    Date.timeIntervalSince(_:)();
    double v28 = v27;
    id v49 = *(void (**)(char *, uint64_t))(v17 + 8);
    v49(v24, v16);
    if (*(double *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_sessionTimeout) < v28) {
      sub_1001FDA44();
    }
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100011554(v29, (uint64_t)qword_10030E978);
    swift_retain_n();
    uint64_t v30 = Logger.logObject.getter();
    int v31 = static os_log_type_t.info.getter();
    BOOL v32 = os_log_type_enabled(v30, (os_log_type_t)v31);
    uint64_t v48 = v17 + 8;
    if (v32)
    {
      int v47 = v31;
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v57 = v46;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v34 = v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID;
      swift_beginAccess();
      uint64_t v35 = *(void **)v34;
      unint64_t v36 = *(void *)(v34 + 24);
      uint64_t v44 = *(void *)(v34 + 16);
      uint64_t v56 = v35;
      id v45 = v35;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_getAtKeyPath();
      unint64_t v37 = v59;
      if (v59)
      {
        uint64_t v38 = (uint64_t)v58;
        swift_release();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_release();

        unint64_t v37 = v36;
        uint64_t v38 = v44;
      }
      swift_release();
      swift_bridgeObjectRelease();
      id v58 = (id)sub_100202FD4(v38, v37, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v47, "Resumed conversation session with ID: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    *(unsigned char *)(v2 + v50) = 0;
    uint64_t v39 = v53;
    Date.init()();
    id v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    uint64_t v41 = v52;
    v40((uint64_t)v52, v39, v16);
    swift_beginAccess();
    uint64_t v42 = v54;
    v40((uint64_t)v54, (uint64_t)v41, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v42, 0, 1, v16);
    swift_retain();
    swift_setAtWritableKeyPath();
    swift_release();
    PassthroughSubject.send(_:)();
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))v49;
    v49(v41, v16);
    swift_endAccess();
    return v43(v39, v16);
  }
  return result;
}

void sub_1001FDA44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v6 = (void *)UUID.uuidString.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID;
  swift_beginAccess();
  v25[0] = (uint64_t)v6;
  v25[1] = v8;
  id v23 = v6;
  uint64_t v24 = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_setAtWritableKeyPath();
  swift_release();
  PassthroughSubject.send(_:)();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1000295C0(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)&v20);
  sub_100029624(&v20, v22);
  dispatch thunk of TranslationStore.clearHistory(completion:)();
  sub_10000AB68((uint64_t)&v20);
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v20 = _swiftEmptyArrayStorage;
  swift_retain();
  static Published.subscript.setter();
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_lidDisambiguationCounter) = 0;
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = 0;

  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100011554(v11, (uint64_t)qword_10030E978);
  swift_retain_n();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v25[0] = v19;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v15 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    id v23 = *(id *)v9;
    id v17 = v23;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    unint64_t v18 = v21;
    if (v21)
    {
      uint64_t v15 = (uint64_t)v20;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();

      unint64_t v18 = v16;
    }
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v20 = (void *)sub_100202FD4(v15, v18, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Started new conversation session with ID: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1001FDE40(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 favoriteDate];
  if (v11)
  {
    uint64_t v12 = v11;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
    {
      sub_10000B070((uint64_t)v10, &qword_1002F8BA0);
      NSString v13 = String._bridgeToObjectiveC()();
      [a1 setSessionID:v13];

      sub_1000295C0(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v33);
      sub_100029624(v33, v34);
      dispatch thunk of TranslationStore.save()();
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  sub_10000B070((uint64_t)v10, &qword_1002F8BA0);
  sub_1000295C0(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v33);
  sub_100029624(v33, v34);
  dispatch thunk of TranslationStore.deleteBackground(_:completion:)();
LABEL_6:
  sub_10000AB68((uint64_t)v33);
  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = a1;
  uint64_t v15 = (void (*)(void *, void))static Published.subscript.modify();
  id v17 = v16;
  uint64_t v18 = sub_1001FF014(v16, v14);

  if (!(*v17 >> 62))
  {
    uint64_t v19 = *(void *)((*v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19 >= v18) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v19 < v18) {
    goto LABEL_20;
  }
LABEL_8:
  sub_10022C2AC(v18, v19);
  v15(v33, 0);
  swift_release();
  swift_release();
  uint64_t v20 = OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation;
  unint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
  if (v21)
  {
    id v22 = [v21 identifier];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
  }
  id v26 = [v14 identifier];
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  if (!v25)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v23 == v27 && v25 == v29)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      return;
    }
  }
  int v31 = *(void **)(v2 + v20);
  *(void *)(v2 + v20) = 0;
}

void sub_1001FE294()
{
  sub_1000295C0(v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)&v15);
  sub_100029624(&v15, v17);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID;
  swift_beginAccess();
  id v14 = *(id *)v1;
  id v2 = v14;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getAtKeyPath();
  if (!v13[1]) {
    swift_bridgeObjectRetain();
  }
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = dispatch thunk of TranslationStore.translations(with:)();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v13[0] = v3;
  swift_retain();
  static Published.subscript.setter();
  sub_10000AB68((uint64_t)&v15);
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E978);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134349314;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
    }
    swift_bridgeObjectRelease();
    unint64_t v15 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v7 + 12) = 2082;
    uint64_t v9 = *(void *)(v1 + 16);
    unint64_t v10 = *(void *)(v1 + 24);
    id v14 = *(id *)v1;
    id v11 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    unint64_t v12 = v16;
    if (v16)
    {
      uint64_t v9 = v15;
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();

      unint64_t v12 = v10;
    }
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v15 = sub_100202FD4(v9, v12, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Loaded %{public}ld translations for conversation session with ID: %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1001FE6BC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__translations;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F9700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__sessionSuspension, &qword_1002F96E8);
  sub_10000AB68(v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001FE7CC()
{
  return type metadata accessor for TranslationAppSession();
}

uint64_t type metadata accessor for TranslationAppSession()
{
  uint64_t result = qword_1002FC168;
  if (!qword_1002FC168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001FE820()
{
  sub_1001FE914();
  if (v0 <= 0x3F)
  {
    sub_1001FE970();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1001FE914()
{
  if (!qword_1002FC178)
  {
    sub_100007928(&qword_1002FCAF0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002FC178);
    }
  }
}

void sub_1001FE970()
{
  if (!qword_1002FC180)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for UserDefault();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002FC180);
    }
  }
}

uint64_t sub_1001FE9C8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TranslationAppSession();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001FEA10(char *a1, void (*a2)(void *, void), int a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v36 = a4;
  LODWORD(v37) = a3;
  uint64_t v15 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v35 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  void v41[3] = a6;
  v41[4] = a8;
  unint64_t v21 = sub_100014830(v41);
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(a6 - 8) + 16))(v21, a1, a6);
  v40[3] = a7;
  v40[4] = a9;
  id v22 = sub_100014830(v40);
  (*(void (**)(uint64_t *, void (*)(void *, void), uint64_t))(*(void *)(a7 - 8) + 16))(v22, a2, a7);
  sub_100022324();
  *uint64_t v20 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  LOBYTE(a7) = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v18 + 8))(v20, v17);
  if (a7)
  {
    uint64_t v23 = a5;
    sub_1000295C0((uint64_t)&a5[OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store], (uint64_t)v39);
    sub_100029624(v39, v39[3]);
    a5 = (char *)dispatch thunk of TranslationStore.insert(speech:translationResult:isFavorite:)();
    if (!a5)
    {
      sub_10000AB68((uint64_t)v39);
LABEL_9:
      sub_10000AB68((uint64_t)v41);
      sub_10000AB68((uint64_t)v40);
      return (uint64_t)a5;
    }
    sub_10000AB68((uint64_t)v39);
    uint64_t v37 = (uint64_t)v23;
    uint64_t v24 = (id *)&v23[OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID];
    swift_beginAccess();
    id v38 = *v24;
    id v25 = v38;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_getAtKeyPath();
    if (!v39[1]) {
      swift_bridgeObjectRetain();
    }
    swift_release();

    uint64_t v26 = v36;
    uint64_t v27 = (uint64_t)v35;
    swift_release();
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a5 setSessionID:v28];

    sub_10000C3A4(v26, v27, (uint64_t *)&unk_1002F33E0);
    dispatch thunk of PersistedTranslation.selfLoggingInvocationId.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    a1 = a5;
    a8 = v37;
    a2 = (void (*)(void *, void))static Published.subscript.modify();
    if (!(*v29 >> 62))
    {
LABEL_8:
      sub_10022B77C(0, 0, (uint64_t)a1);
      a2(v39, 0);
      swift_release();
      swift_release();
      char v30 = *(void **)(a8 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
      *(void *)(a8 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = a5;
      int v31 = a1;

      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v33 & 0x8000000000000000) == 0) {
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001FEE70(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v6 = 0;
    uint64_t v20 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 identifier:v20];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      id v13 = [a2 identifier];
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      if (v10 == v3 && v12 == v15)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        return v6;
      }
      uint64_t v18 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      ++v6;
      if (v18 == v5) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1001FF014(unint64_t *a1, void *a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  id v38 = a2;
  unint64_t v39 = sub_1001FEE70(v5, a2);
  char v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v37 = v2;
  if (v2) {
    return v39;
  }
  if ((v7 & 1) == 0)
  {
    id v8 = (id)(v39 + 1);
    if (__OFADD__(v39, 1)) {
      goto LABEL_60;
    }
    if (*a1 >> 62)
    {
LABEL_61:
      swift_bridgeObjectRetain();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8 != (id)v35) {
        goto LABEL_6;
      }
    }
    else if (v8 != *(id *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v39 + 5; ; ++i)
      {
        unint64_t v10 = i - 4;
        unint64_t v11 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
          if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v12 = *(id *)(v11 + 8 * i);
        }
        id v13 = v12;
        id v14 = [v12 identifier:v37];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        id v8 = [v38 identifier];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        if (v15 == v18 && v17 == v20)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_38;
        }
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_38;
        }
        if (v10 != v39) {
          break;
        }
LABEL_35:
        if (__OFADD__(v39, 1)) {
          goto LABEL_53;
        }
        ++v39;
LABEL_38:
        id v8 = (id)(i - 3);
        if (__OFADD__(v10, 1)) {
          goto LABEL_52;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v32 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v8 == (id)v32) {
          return v39;
        }
      }
      unint64_t v23 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v23 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v10 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v10 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v25 = *(id *)(v23 + 8 * i);
          goto LABEL_24;
        }
      }
      else
      {
        if ((v39 & 0x8000000000000000) != 0) {
          goto LABEL_54;
        }
        if (v39 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_55;
        }
        id v24 = *(id *)(v23 + 8 * v39 + 32);
        if ((v23 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v23 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v23;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v23 & 0x8000000000000000) != 0
        || (v23 & 0x4000000000000000) != 0)
      {
        unint64_t v23 = sub_100098590(v23);
        *a1 = v23;
      }
      uint64_t v27 = *(void **)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20);
      *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 8 * v39 + 0x20) = v25;

      specialized Array._endMutation()();
      unint64_t v28 = *a1;
      int v29 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v28;
      if (!v29 || (v28 & 0x8000000000000000) != 0 || (v28 & 0x4000000000000000) != 0)
      {
        unint64_t v28 = sub_100098590(v28);
        *a1 = v28;
      }
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_58;
      }
      uint64_t v30 = v28 & 0xFFFFFFFFFFFFFF8;
      if (v10 >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
      int v31 = *(void **)(v30 + 8 * i);
      *(void *)(v30 + 8 * i) = v24;

      specialized Array._endMutation()();
      goto LABEL_35;
    }
    return v39;
  }
  unint64_t v33 = *a1;
  if (!(v33 >> 62)) {
    return *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t sub_1001FF3E8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(qword_1002F8BF8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000C3A4(v6, (uint64_t)&v15, &qword_1002FC450);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1002036A8(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100048EC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FF520(uint64_t a1)
{
  return sub_1001FFC48(a1, &qword_1002FC3F0, (uint64_t *)&unk_1002FC400, (uint64_t (*)(uint64_t))sub_1002037B8);
}

unint64_t sub_1001FF548(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(&qword_1002FC498);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000C3A4(v6, (uint64_t)v15, &qword_1002FC4A0);
    unint64_t result = sub_10020384C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100048EC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FF68C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620((uint64_t *)&unk_1002FC4C0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    uint64_t v9 = swift_retain();
    unint64_t result = sub_1002038D4(v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    uint64_t v12 = v2[7] + 24 * result;
    *(void *)uint64_t v12 = v6;
    *(void *)(v12 + 8) = v7;
    *(unsigned char *)(v12 + 16) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 32;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FF7B4(uint64_t a1)
{
  return sub_1001FF8E0(a1, (uint64_t *)&unk_1002F8BB0);
}

unint64_t sub_1001FF7C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(&qword_1002FC4F8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002036A8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FF8D4(uint64_t a1)
{
  return sub_1001FF8E0(a1, &qword_1002FC4B8);
}

unint64_t sub_1001FF8E0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    char v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1002036A8(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FF9F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620((uint64_t *)&unk_1002FC420);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_100203940(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FFAFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(&qword_1002FC458);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1002036A8(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1001FFC20(uint64_t a1)
{
  return sub_1001FFC48(a1, &qword_1002FC460, (uint64_t *)&unk_1002FC468, (uint64_t (*)(uint64_t))sub_1002037B8);
}

unint64_t sub_1001FFC48(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100007620(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10000C3A4(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_100048EC8(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1001FFD78(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v112 = (char *)v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v115 = (char *)v110 - v8;
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  uint64_t v12 = v5;
  uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  v13(v11, 0, 1, v4);
  uint64_t v14 = v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_sourceLocale;
  swift_beginAccess();
  sub_1002018D4((uint64_t)v11, v14);
  swift_endAccess();
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  uint64_t v116 = v4;
  v13(v11, 0, 1, v4);
  uint64_t v15 = v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_targetLocale;
  swift_beginAccess();
  sub_1002018D4((uint64_t)v11, v15);
  swift_endAccess();
  uint64_t v121 = &type metadata for TranslateFeatures;
  unint64_t v122 = sub_10000AB14();
  LOBYTE(v120[0]) = 5;
  LOBYTE(v15) = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v120);
  if (v15)
  {
    BOOL v16 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedTranslation);
    *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedTranslation) = a1;
    id v17 = a1;

    uint64_t v18 = dispatch thunk of PersistedTranslation.disambiguableResult.getter();
    uint64_t v19 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult;
    uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult);
    *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult) = v18;

    unint64_t v21 = *(void **)(v2 + v19);
    if (v21) {
      [v21 setDelegate:v2];
    }
    id v22 = sub_100208CFC();
    [v22 setDelegate:v2];

    id v23 = sub_100209288();
    [v23 setDelegate:v2];
  }
  id v24 = sub_100208888();
  id v25 = v115;
  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  uint64_t v26 = v112;
  static Locale.current.getter();
  Locale.sqDisplayName(context:in:)();
  uint64_t v28 = v27;
  int v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v30 = v26;
  uint64_t v31 = v116;
  v29(v30, v116);
  unint64_t v113 = v29;
  uint64_t v114 = v12 + 8;
  v29(v25, v31);
  if (v28)
  {
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v32 = 0;
  }
  [v24 setText:v32];

  dispatch thunk of PersistedTranslation.speechResult.getter();
  sub_100029624(v120, (uint64_t)v121);
  dispatch thunk of SanitizedResult.sanitizedFormattedString.getter();
  if (v33)
  {
    sub_10000AB68((uint64_t)v120);
    id v34 = sub_100208CFC();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v34 setText:v35];

LABEL_10:
    goto LABEL_15;
  }
  sub_10000AB68((uint64_t)v120);
  dispatch thunk of PersistedTranslation.speechResult.getter();
  sub_100029624(v119, v119[3]);
  dispatch thunk of SpeechResult.alternatives.getter();
  if (v118)
  {
    sub_100048DE4(&v117, (uint64_t)v120);
    sub_10000AB68((uint64_t)v119);
    id v36 = sub_100208CFC();
    sub_1002078B4(v36, v120);

    sub_10000AB68((uint64_t)v120);
  }
  else
  {
    sub_10000B070((uint64_t)&v117, &qword_1002FC3C0);
    sub_10000AB68((uint64_t)v119);
    uint64_t v37 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult);
    if (!v37)
    {
      id v91 = sub_100208CFC();
      dispatch thunk of PersistedTranslation.displaySourceText.getter();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v91 setText:v35];

      goto LABEL_10;
    }
    id v38 = v37;
    id v39 = sub_10020193C(0);

    id v40 = sub_100208CFC();
    [v40 setAttributedText:v39];
  }
LABEL_15:
  sub_10020BC64();
  id v41 = sub_100209068();
  uint64_t v42 = v115;
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  uint64_t v43 = v112;
  static Locale.current.getter();
  Locale.sqDisplayName(context:in:)();
  uint64_t v45 = v44;
  uint64_t v46 = v43;
  uint64_t v47 = v116;
  uint64_t v48 = v113;
  v113(v46, v116);
  v48(v42, v47);
  if (v45)
  {
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v49 = 0;
  }
  [v41 setText:v49];

  id v50 = sub_1002096AC();
  char v51 = 1;
  [v50 setHidden:1];

  v110[1] = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions);
  uint64_t v52 = sub_1000270A8();
  [(objc_class *)v52 setSelected:dispatch thunk of PersistedTranslation.isFavorite.getter() & 1];

  id v53 = sub_100209C48();
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded) & 1) == 0) {
    char v51 = dispatch thunk of PersistedTranslation.isFavorite.getter() ^ 1;
  }
  [v53 setHidden:v51 & 1];

  id v54 = [a1 targetResult];
  if (!v54)
  {
    uint64_t v61 = (uint64_t)v115;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    sub_10020AE1C((uint64_t)_swiftEmptyArrayStorage, v61);
    v113((char *)v61, v116);
    id v62 = sub_100209288();
    NSString v63 = String._bridgeToObjectiveC()();
    [v62 setText:v63];

    if (qword_1002EE5D0 == -1) {
      goto LABEL_24;
    }
    goto LABEL_61;
  }
  if (dispatch thunk of PersistedTranslation.hasAlternatives.getter())
  {
    uint64_t v55 = PersistedTranslation.selectedAlternativeIndex.getter();
    uint64_t v56 = v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex;
    *(void *)uint64_t v56 = v55;
    *(unsigned char *)(v56 + 8) = 0;
    uint64_t v57 = dispatch thunk of PersistedTranslation.alternatives.getter();
    uint64_t v58 = (uint64_t)v115;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    sub_10020AE1C(v57, v58);
    swift_bridgeObjectRelease();
    v113((char *)v58, v116);
    sub_10020B40C();
    v120[0] = a1;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v59 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();
    uint64_t v60 = *(NSObject **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeObservation);
    *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeObservation) = v59;
  }
  else
  {
    uint64_t v67 = (uint64_t)v115;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    sub_10020AE1C((uint64_t)_swiftEmptyArrayStorage, v67);
    v113((char *)v67, v116);
    uint64_t v68 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult);
    if (v68)
    {
      id v69 = v68;
      id v70 = sub_10020193C(1);

      id v71 = sub_100209288();
      [v71 setAttributedText:v70];
    }
    else
    {
      id v70 = sub_100209288();
      dispatch thunk of PersistedTranslation.displayText.getter();
      id v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v70 setText:v71];
    }

    dispatch thunk of PersistedTranslation.translationResult.getter();
    sub_100029624(v120, (uint64_t)v121);
    char v72 = TranslationResult.isLowConfidence.getter();
    sub_10000AB68((uint64_t)v120);
    if ((v72 & 1) == 0) {
      goto LABEL_32;
    }
    uint64_t v60 = sub_1002096AC();
    [v60 setHidden:0];
  }
  while (1)
  {

LABEL_32:
    uint64_t v73 = v115;
    uint64_t v74 = a1;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    Swift::Bool v75 = Locale.isRTL()();
    v113(v73, v116);
    uint64_t v76 = v75 ? 2 : 0;
    id v77 = sub_100208CFC();
    [v77 setTextAlignment:v76];

    uint64_t v78 = (uint64_t *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows);
    swift_beginAccess();
    uint64_t v79 = *v78;
    unint64_t v80 = (unint64_t)*v78 >> 62;
    uint64_t v111 = v2;
    if (v80)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
      if (!v81) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v81 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v81) {
        goto LABEL_48;
      }
    }
    if (v81 >= 1) {
      break;
    }
    __break(1u);
LABEL_61:
    swift_once();
LABEL_24:
    uint64_t v64 = type metadata accessor for Logger();
    sub_100011554(v64, (uint64_t)qword_10030E978);
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v60, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v65, "No target translation, setting to empty string", v66, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v82 = 0;
  do
  {
    if ((v79 & 0xC000000000000001) != 0) {
      id v83 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v83 = *(id *)(v79 + 8 * v82 + 32);
    }
    uint64_t v84 = v83;
    id v85 = sub_1001A35D8();
    [v85 setTextAlignment:v76];

    id v86 = sub_1001A3780();
    [v86 setTextAlignment:v76];

    uint64_t v87 = v115;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    LOBYTE(v86) = Locale.isRTL()();
    v113(v87, v116);
    if (v86) {
      uint64_t v88 = 4;
    }
    else {
      uint64_t v88 = 3;
    }
    ++v82;
    [v84 setSemanticContentAttribute:v88];
    id v89 = sub_1001A3C6C();
    [v89 setSemanticContentAttribute:v88];

    id v90 = sub_1001A3960();
    [v90 setSemanticContentAttribute:v88];
  }
  while (v81 != v82);
LABEL_48:
  swift_bridgeObjectRelease_n();
  uint64_t v92 = v115;
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  Swift::Bool v93 = Locale.isRTL()();
  uint64_t v94 = v116;
  unint64_t v95 = v113;
  v113(v92, v116);
  if (v93) {
    uint64_t v96 = 2;
  }
  else {
    uint64_t v96 = 0;
  }
  uint64_t v97 = v111;
  id v98 = sub_100209288();
  [v98 setTextAlignment:v96];

  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  uint64_t v99 = v112;
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  LOBYTE(v98) = static Locale.== infix(_:_:)();
  v95(v99, v94);
  v95(v92, v94);
  uint64_t v100 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_isIdentity;
  *(unsigned char *)(v97 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_isIdentity) = v98 & 1;
  id v101 = sub_100208A90();
  [v101 setHidden:*(unsigned __int8 *)(v97 + v100)];

  id v102 = sub_100209068();
  [v102 setHidden:*(unsigned __int8 *)(v97 + v100)];

  id v103 = sub_100209288();
  [v103 setHidden:*(unsigned __int8 *)(v97 + v100)];

  sub_10020C170();
  v119[0] = v74;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v104 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  uint64_t v105 = *(void **)(v97 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_favoriteObservation);
  *(void *)(v97 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_favoriteObservation) = v104;

  [v74 ttsPlaybackRateDouble];
  if (v106 == 0.5)
  {
    char v107 = 0;
  }
  else if (v106 == 0.75)
  {
    char v107 = 1;
  }
  else if (v106 == 1.0 || v106 != 1.25)
  {
    char v107 = 2;
  }
  else
  {
    char v107 = 3;
  }
  sub_100028D80(v107);
  v119[0] = v74;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v108 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  unint64_t v109 = *(void **)(v97 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_ttsPlaybackRateObservation);
  *(void *)(v97 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_ttsPlaybackRateObservation) = v108;
}

uint64_t sub_100200C14()
{
  [v0 ttsPlaybackRateDouble];
  if (v1 == 0.5) {
    return 0;
  }
  if (v1 == 0.75) {
    return 1;
  }
  if (v1 == 1.0) {
    return 2;
  }
  if (v1 == 1.25) {
    return 3;
  }
  return 4;
}

unint64_t sub_100200C94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = dispatch thunk of SpeechTokenBin.tokenAlternatives.getter();
  unint64_t result = dispatch thunk of SpeechTokenBin.bestAlternative.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (result >= *(void *)(v2 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  sub_1000295C0(v2 + 40 * result + 32, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100200D20()
{
  uint64_t v0 = dispatch thunk of SpeechTokenBin.tokenAlternatives.getter();
  uint64_t v1 = sub_100207710(v0, (uint64_t (*)(unint64_t, unsigned char *))sub_100207AF8);
  swift_bridgeObjectRelease();
  return v1;
}

id sub_100200DAC()
{
  uint64_t v0 = sub_100200D20();
  uint64_t v1 = sub_100200D20();
  sub_100200C94((uint64_t)v9);
  sub_100029624(v9, v10);
  char v2 = dispatch thunk of SpeechTokenAlternatives.isLowConfidence.getter();
  sub_10000AB68((uint64_t)v9);
  if ((v2 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRelease();
  if (!v3 || !*(void *)(v0 + 16)) {
    goto LABEL_6;
  }
  sub_100200C94((uint64_t)v9);
  sub_100029624(v9, v10);
  dispatch thunk of SpeechTokenAlternatives.text.getter();
  id v4 = objc_allocWithZone((Class)NSTextAlternatives);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v4 initWithPrimaryString:v5 alternativeStrings:isa isLowConfidence:1];

  sub_10000AB68((uint64_t)v9);
  return v7;
}

void sub_100200F34(uint64_t a1, unint64_t a2)
{
}

unint64_t sub_100200F48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (String.subscript.getter() != a1 || v9 != a2)
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = String.index(after:)();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_100201038(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      uint64_t v7 = v6;
      sub_10000B0CC(0, a3);
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          uint64_t v11 = v10;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_1002011D4(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  if (dispatch thunk of SpeechTokenBin.bestAlternative.getter() == a1 && (a4 & 1) == 0) {
    return 0;
  }
  sub_100029624(a2, a2[3]);
  return dispatch thunk of SpeechTokenAlternatives.text.getter();
}

void sub_10020124C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 interactedIndices];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_1002012B4(void *a1, void **a2)
{
  char v2 = *a2;
  if (*a1) {
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  Class isa = v3.super.isa;
  [v2 setInteractedIndices:];
}

void sub_100201324()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex;
    uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex);
    char v4 = *(unsigned char *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex + 8);
    uint64_t v5 = PersistedTranslation.selectedAlternativeIndex.getter();
    if ((v4 & 1) != 0 || v3 != v5)
    {
      *(void *)uint64_t v2 = PersistedTranslation.selectedAlternativeIndex.getter();
      *(unsigned char *)(v2 + 8) = 0;
      sub_10020B40C();
    }
  }
}

uint64_t sub_1002013C4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [*a1 favoriteDate];
  if (v3)
  {
    char v4 = v3;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for Date();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_10020148C(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C3A4(a1, (uint64_t)v6, &qword_1002F8BA0);
  uint64_t v7 = *a2;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  [v7 setFavoriteDate:isa];
}

void sub_1002015C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions);
    id v3 = sub_1000270A8();

    [(objc_class *)v3 setSelected:dispatch thunk of PersistedTranslation.isFavorite.getter() & 1];
    id v4 = sub_100209C48();
    if (v1[OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded]) {
      LOBYTE(v5) = 1;
    }
    else {
      int v5 = dispatch thunk of PersistedTranslation.isFavorite.getter() ^ 1;
    }
    [v4 setHidden:v5 & 1];

    sub_10020C170();
  }
}

void sub_1002016B4(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    id v4 = *(id *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions);
    [v1 ttsPlaybackRateDouble];
    if (v5 == 0.5)
    {
      char v6 = 0;
    }
    else if (v5 == 0.75)
    {
      char v6 = 1;
    }
    else if (v5 == 1.0 || v5 != 1.25)
    {
      char v6 = 2;
    }
    else
    {
      char v6 = 3;
    }
    sub_100028D80(v6);
  }
}

uint64_t sub_1002018D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_10020193C(uint64_t a1)
{
  id v2 = v1;
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v5 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  char v6 = NSForegroundColorAttributeName;
  if (a1) {
    uint64_t v7 = static UIColor.targetTextColor.getter();
  }
  else {
    uint64_t v7 = static UIColor.sourceTextColor.getter();
  }
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 40) = v7;
  sub_1001FFC48(inited, &qword_1002FC3F0, (uint64_t *)&unk_1002FC400, (uint64_t (*)(uint64_t))sub_1002037B8);
  type metadata accessor for Key(0);
  sub_1002087E4((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100201B20;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100202248;
  void aBlock[3] = &unk_1002D3158;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  id v10 = [v2 generateAttributedStringForLocation:a1 withGlobalAttributes:isa attributeProvider:v9];
  _Block_release(v9);

  return v10;
}

uint64_t sub_100201B20(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v53 = a2;
  uint64_t v8 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v52 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - v13;
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v16 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  id v17 = NSForegroundColorAttributeName;
  if (a5) {
    uint64_t v18 = static UIColor.targetLinkColor.getter();
  }
  else {
    uint64_t v18 = static UIColor.sourceLinkColor.getter();
  }
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 40) = v18;
  unint64_t v19 = sub_1001FFC48(inited, &qword_1002FC3F0, (uint64_t *)&unk_1002FC400, (uint64_t (*)(uint64_t))sub_1002037B8);
  id v20 = [a3 links];
  sub_10000B0CC(0, &qword_1002FC3D8);
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100201038(a4, v21, &qword_1002FC3D8);
  uint64_t v23 = v22;
  char v25 = v24;
  swift_bridgeObjectRelease();
  if (v25)
  {
    swift_bridgeObjectRelease();
    if (qword_1002EE5E8 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100011554(v37, (uint64_t)qword_10030E9C0);
    id v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "LinkAttributeProvider gave invalid arguments; can't find linkConfiguration inside node",
        v40,
        2u);
      swift_slowDealloc();
    }

    return 0;
  }
  id v26 = [v53 UUID];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v23 & 0x8000000000000000) == 0)
  {
    DisambiguationLinkInfo.init(sentenceUUID:linkIndex:)();
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    sub_1002087E4((unint64_t *)&unk_1002FC3E0, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
    uint64_t v27 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    uint64_t v28 = v54;
    uint64_t v44 = v27;
    unint64_t v46 = v45;
    swift_release();
    static String.Encoding.utf8.getter();
    uint64_t v47 = String.init(data:encoding:)();
    if (v48)
    {
      uint64_t v58 = &type metadata for String;
      *(void *)&long long v57 = v47;
      *((void *)&v57 + 1) = v48;
      sub_100048EC8(&v57, v56);
      NSString v49 = UITextItemTagAttributeName;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v55 = v19;
      sub_100205D60(v56, v49, isUniquelyReferenced_nonNull_native);
      unint64_t v42 = v55;

      swift_bridgeObjectRelease();
      sub_100101604(v44, v46);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v10);
      return v42;
    }
    swift_bridgeObjectRelease();
    sub_100101604(v44, v46);
    int v29 = v52;
    if (qword_1002EE5E8 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100011554(v30, (uint64_t)qword_10030E9C0);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v29, v14, v10);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136446210;
      id v53 = v33 + 4;
      sub_1002087E4(&qword_1002F6DF8, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v56[0] = sub_100202FD4(v34, v35, (uint64_t *)&v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v36 = *(void (**)(char *, uint64_t))(v28 + 8);
      v36(v29, v10);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Failed to encode link information; won't show link in string for link: %{public}s",
        v33,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v36(v14, v10);
    }
    else
    {

      id v41 = *(void (**)(char *, uint64_t))(v28 + 8);
      v41(v29, v10);
      v41(v14, v10);
    }
    return 0;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Class sub_100202248(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v11 = *(uint64_t (**)(id, id, id, id, uint64_t))(a1 + 32);
  swift_retain();
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  uint64_t v16 = v11(v12, v13, v14, v15, a6);
  swift_release();

  if (v16)
  {
    type metadata accessor for Key(0);
    sub_1002087E4((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
    v17.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v17.super.Class isa = 0;
  }

  return v17.super.isa;
}

const char *sub_100202380()
{
  return "favoriteDate";
}

uint64_t sub_100202394()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002023CC()
{
}

const char *sub_1002023D4()
{
  return "ttsPlaybackRateDouble";
}

id sub_1002023E0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 ttsPlaybackRateDouble];
  *a2 = v4;
  return result;
}

id sub_100202414(double *a1, id *a2)
{
  return [*a2 setTtsPlaybackRateDouble:*a1];
}

void sub_100202428(void **a1)
{
}

const char *sub_100202430()
{
  return "interactedIndices";
}

void sub_100202444()
{
}

void *sub_10020244C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007620(&qword_1002FCAC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10020743C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10020255C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007620(&qword_1002FC4D8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100207530(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10020266C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007620(&qword_1002EE8A0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      id v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      id v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10020761C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10020277C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100202CD8(a1, a2, a3, a4, &qword_1002F21F8, type metadata accessor for TranslateTip, type metadata accessor for TranslateTip);
}

void *sub_1002027B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002027D8(a1, a2, a3, a4, &qword_1002FC488, &qword_1002FC490);
}

void *sub_1002027C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002027D8(a1, a2, a3, a4, &qword_1002FC478, &qword_1002FC480);
}

void *sub_1002027D8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_100007620(a5);
      id v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      uint64_t v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      id v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v13 = _swiftEmptyArrayStorage;
      id v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100207DCC(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_100202908(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100007620(&qword_1002FC4D0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100207B7C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100202A34(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007620(&qword_1002FC508);
  uint64_t v10 = *(void *)(sub_100007620((uint64_t *)&unk_1002FC510) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100007620((uint64_t *)&unk_1002FC510) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100207C70(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100202CA4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100202CD8(a1, a2, a3, a4, &qword_1002FC500, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_100202CD8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007620(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  void v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100207ED8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_100202F58(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002027D8(a1, a2, a3, a4, &qword_1002FC4A8, &qword_1002FC4B0);
}

uint64_t sub_100202F6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100202CD8(a1, a2, a3, a4, &qword_1002FC410, (uint64_t (*)(void))type metadata accessor for SELFLoggingInvocationDescription, (uint64_t (*)(void))type metadata accessor for SELFLoggingInvocationDescription);
}

uint64_t sub_100202FA0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100202CD8(a1, a2, a3, a4, (uint64_t *)&unk_1002FC440, type metadata accessor for StreamingRequestInfo, type metadata accessor for StreamingRequestInfo);
}

uint64_t sub_100202FD4(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1002030A8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10000B170((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10000B170((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_10000AB68((uint64_t)v12);
  return v7;
}

uint64_t sub_1002030A8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100203264(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100203264(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1002032FC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100203558(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100203558(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1002032FC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100203474(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100203474(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100007620(&qword_1002FC3F8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1002034DC(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_100203558(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002FC3F8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1002036A8(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100203A10(a1, a2, v4);
}

unint64_t sub_100203720(uint64_t a1)
{
  type metadata accessor for IndexPath();
  sub_1002087E4((unint64_t *)&unk_1002FC4E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_100203AF4(a1, v2);
}

unint64_t sub_1002037B8(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_100203CB4(a1, v2);
}

unint64_t sub_10020384C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100203E2C(a1, v4);
}

unint64_t sub_100203890(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_100203EF4(a1, v2);
}

unint64_t sub_1002038D4(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_1001302C0();
  Swift::Int v2 = Hasher._finalize()();

  return sub_100203F90(a1, v2);
}

unint64_t sub_100203940(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_100204094(a1, v2);
}

unint64_t sub_100203A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100203AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    BOOL v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1002087E4((unint64_t *)&qword_1002F5FC0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_100203CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100203E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100207B20(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10006E7AC((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_100203EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100203F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    do
    {
      Hasher.init(_seed:)();
      swift_retain();
      sub_1001302C0();
      Swift::Int v7 = Hasher._finalize()();
      Hasher.init(_seed:)();
      sub_1001302C0();
      Swift::Int v8 = Hasher._finalize()();
      swift_release();
      if (v7 == v8) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v6;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_100204094(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v7 = 0x616E6F6974636964;
          uint64_t v8 = 31090;
        }
        else
        {
          uint64_t v7 = 0x6F68706F7263696DLL;
          uint64_t v8 = 25966;
        }
        unint64_t v9 = v8 & 0xFFFFFFFFFFFFLL | 0xEA00000000000000;
        int v10 = a1;
        if (!a1)
        {
LABEL_7:
          unint64_t v11 = 0xE800000000000000;
          if (v7 != 0x6472616F6279656BLL) {
            goto LABEL_19;
          }
          goto LABEL_18;
        }
      }
      else
      {
        unint64_t v9 = 0xE800000000000000;
        uint64_t v7 = 0x6472616F6279656BLL;
        int v10 = a1;
        if (!a1) {
          goto LABEL_7;
        }
      }
      if (v10 == 1) {
        uint64_t v12 = 0x616E6F6974636964;
      }
      else {
        uint64_t v12 = 0x6F68706F7263696DLL;
      }
      if (v10 == 1) {
        unint64_t v11 = 0xEA00000000007972;
      }
      else {
        unint64_t v11 = 0xEA0000000000656ELL;
      }
      if (v7 != v12) {
        goto LABEL_19;
      }
LABEL_18:
      if (v9 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

uint64_t sub_10020423C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100007620(&qword_1002FC4F0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  unint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  id v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1002087E4((unint64_t *)&unk_1002FC4E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100204660(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620(&qword_1002FC3F0);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_100048EC8(v22, v36);
    }
    else
    {
      sub_10000B170((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_100048EC8(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10020499C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620(&qword_1002FC418);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v31 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_41;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v30;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v22 = *(void *)(v5 + 56) + 16 * v17;
      if (a2) {
        sub_100208090(v22, (uint64_t)v32);
      }
      else {
        sub_100208034(v22, (uint64_t)v32);
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      uint64_t result = sub_100208090((uint64_t)v32, *(void *)(v7 + 56) + 16 * v15);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100204C60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620((uint64_t *)&unk_1002FC420);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v15];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_31:
              swift_release();
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v15];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100204F9C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620((uint64_t *)&unk_1002FC4C0);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = v2;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v30 = *(void *)(v5 + 56) + 24 * v20;
    long long v37 = *(_OWORD *)v30;
    char v31 = *(unsigned char *)(v30 + 16);
    if ((v36 & 1) == 0) {
      swift_retain();
    }
    Hasher.init(_seed:)();
    sub_1001302C0();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v29;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v18 = v37;
    *(unsigned char *)(v18 + 16) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1002052B8(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100007620(a3);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          unint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    int64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_1002055C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620(&qword_1002FC498);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_100048EC8((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_100207B20(v25, (uint64_t)&v38);
      sub_10000B170(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = AnyHashable._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_100048EC8(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1002058DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100007620(&qword_1002FC458);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    unint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_100205C04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_100205C10(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_1002038D4(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < result || (a5 & 1) == 0)
  {
    if (v19 >= result && (a5 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100206D30();
      goto LABEL_9;
    }
    sub_100204F9C(result, a5 & 1);
    uint64_t result = sub_1002038D4(a4);
    if ((v18 & 1) == (v20 & 1))
    {
      unint64_t v14 = result;
      goto LABEL_9;
    }
LABEL_15:
    type metadata accessor for LanguageAwareTextViewSizeThatFitsCache.Condition();
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_9:
  int v21 = a3 & 1;
  unint64_t v22 = *v6;
  if (v18)
  {
    uint64_t v23 = v22[7] + 24 * v14;
    *(void *)uint64_t v23 = a1;
    *(void *)(v23 + 8) = a2;
    *(unsigned char *)(v23 + 16) = v21 != 0;
  }
  else
  {
    sub_1002063DC(v14, a4, a1, a2, v21, v22);
    return swift_retain();
  }
  return result;
}

_OWORD *sub_100205D60(_OWORD *a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1002037B8((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_100206814();
      goto LABEL_7;
    }
    sub_100204660(v12, a3 & 1);
    unint64_t v18 = sub_1002037B8((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_10000AB68((uint64_t)v16);
    return sub_100048EC8(a1, v16);
  }
LABEL_13:
  sub_100206430(v9, (uint64_t)a2, a1, v15);

  return a2;
}

void sub_100205EA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_100205EB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1002036A8(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_100206EEC(a5);
LABEL_7:
    char v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1002052B8(v17, a4 & 1, a5);
  unint64_t v22 = sub_1002036A8(a2, a3);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  char v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  int64_t v24 = (uint64_t *)(v20[6] + 16 * v14);
  *int64_t v24 = a2;
  v24[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v25 = v20[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v27;

  swift_bridgeObjectRetain();
}

uint64_t sub_100206038(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_100203890(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1002069DC();
      goto LABEL_7;
    }
    sub_10020499C(v13, a3 & 1);
    unint64_t v19 = sub_100203890(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 16 * v10;
    return sub_10020882C(a1, v17);
  }
LABEL_13:

  return sub_100206498(v10, a2, a1, v16);
}

_OWORD *sub_100206168(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_10020384C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100207098();
      goto LABEL_7;
    }
    sub_1002055C4(v13, a3 & 1);
    unint64_t v19 = sub_10020384C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100207B20(a2, (uint64_t)v21);
      return sub_100206500(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_10000AB68((uint64_t)v17);

  return sub_100048EC8(a1, v17);
}

uint64_t sub_1002062B4(unsigned __int8 a1, char a2, double a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100203940(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100206BA0();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a1;
    *(double *)(v16[7] + 8 * v10) = a3;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_100204C60(result, a2 & 1);
  uint64_t result = sub_100203940(a1);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_1002063DC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(void *)(v6 + 8) = a4;
  *(unsigned char *)(v6 + 16) = a5 & 1;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

_OWORD *sub_100206430(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100048EC8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_100206498(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100208090(a3, a4[7] + 16 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

_OWORD *sub_100206500(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_100048EC8(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

id sub_10020657C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002FC4F0);
  char v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *char v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100206814()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002FC3F0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_10000B170(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100048EC8(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1002069DC()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002FC418);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    sub_100208034(*(void *)(v2 + 56) + 16 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_100208090((uint64_t)v22, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100206BA0()
{
  uint64_t v1 = v0;
  sub_100007620((uint64_t *)&unk_1002FC420);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100206D30()
{
  uint64_t v1 = v0;
  sub_100007620((uint64_t *)&unk_1002FC4C0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 16) = v20;
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100206EEC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100007620(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    long long v21 = *(void **)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    void *v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100207098()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002FC498);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_100207B20(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_10000B170(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_100048EC8(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100207280()
{
  uint64_t v1 = v0;
  sub_100007620(&qword_1002FC458);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10020743C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100207530(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10020761C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100207710(uint64_t a1, uint64_t (*a2)(unint64_t, unsigned char *))
{
  uint64_t v21 = a2;
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v17 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v16 = result + 32;
LABEL_2:
  if (v4 <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v7 = v5 + 40 * v4;
  unint64_t v8 = v4;
  while (1)
  {
    if (v2 == v8)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v17;
    }
    if (v6 == v8) {
      break;
    }
    unint64_t v4 = v8 + 1;
    sub_1000295C0(v7, (uint64_t)v18);
    unint64_t v19 = v8;
    sub_100048DE4(v18, (uint64_t)v20);
    uint64_t v9 = v21(v8, v20);
    uint64_t v11 = v10;
    uint64_t result = sub_10000B070((uint64_t)&v19, &qword_1002FC3C8);
    v7 += 40;
    ++v8;
    if (v11)
    {
      unint64_t v12 = v17;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_10020266C(0, *((void *)v17 + 2) + 1, 1, v17);
        unint64_t v12 = (char *)result;
      }
      unint64_t v14 = *((void *)v12 + 2);
      unint64_t v13 = *((void *)v12 + 3);
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (uint64_t)sub_10020266C((char *)(v13 > 1), v14 + 1, 1, v12);
        unint64_t v12 = (char *)result;
      }
      uint64_t v5 = v16;
      *((void *)v12 + 2) = v14 + 1;
      uint64_t v17 = v12;
      unint64_t v15 = &v12[16 * v14];
      *((void *)v15 + 4) = v9;
      *((void *)v15 + 5) = v11;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1002078B4(void *a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a1 setText:v4];

  sub_100029624(a2, a2[3]);
  uint64_t v5 = dispatch thunk of SpeechSausage.tokenBins.getter();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    do
    {
      sub_1000295C0(v7, (uint64_t)v14);
      sub_100029624(v14, v15);
      sub_100200C94((uint64_t)v12);
      sub_100029624(v14, v15);
      sub_100200D20();
      sub_100029624(v12, v13);
      dispatch thunk of SpeechTokenAlternatives.text.getter();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      sub_100029624(v12, v13);
      [a1 insertText:v8 alternatives:isa style:dispatch thunk of SpeechTokenAlternatives.isLowConfidence.getter() & 1];

      sub_100029624(v12, v13);
      if (dispatch thunk of SpeechTokenAlternatives.hasSpaceAfter.getter())
      {
        NSString v10 = String._bridgeToObjectiveC()();
        [a1 insertText:v10];
      }
      sub_10000AB68((uint64_t)v12);
      sub_10000AB68((uint64_t)v14);
      v7 += 40;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100207AF8(uint64_t a1, void *a2)
{
  return sub_1002011D4(a1, a2, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_100207B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100207B18()
{
  return swift_release();
}

uint64_t sub_100207B20(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100207B7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100207C70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100007620((uint64_t *)&unk_1002FC510) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100207DCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_100007620(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100207ED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100208034(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100208090(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1002080EC(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v1 = sub_100007620(&qword_1002F6DF0);
  __chkstk_darwin(v1 - 8);
  char v42 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F0FA8);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v47 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.Encoding();
  unint64_t v48 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UITextItem.Content();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = &type metadata for TranslateFeatures;
  unint64_t v52 = sub_10000AB14();
  v50[0] = 5;
  char v18 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v50);
  uint64_t v19 = 0;
  if (v18)
  {
    uint64_t v41 = v10;
    unint64_t v20 = v48;
    UITextItem.content.getter();
    if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == enum case for UITextItem.Content.tag(_:))
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      static String.Encoding.utf8.getter();
      uint64_t v21 = String.data(using:allowLossyConversion:)();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v11);
      if (v23 >> 60 != 15)
      {
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_1002087E4((unint64_t *)&unk_1002FC430, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
        unint64_t v24 = v7;
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        uint64_t v26 = v47;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v24, 0, 1, v8);
        int64_t v27 = v41;
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v41, v24, v8);
        unint64_t v28 = *(void **)(v46 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult);
        if (v28)
        {
          id v29 = v28;
          uint64_t v30 = v43;
          DisambiguationLinkInfo.sentenceUUID.getter();
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v45);
          id v32 = [v29 sentenceWithUUID:isa];

          if (v32)
          {
            Swift::UInt v33 = DisambiguationLinkInfo.linkIndex.getter();
            if ((unint64_t)_LTDisambiguableSentence.menu(forLinkIndex:)(v33))
            {
              uint64_t v49 = sub_10000B0CC(0, &qword_1002F6E00);
              uint64_t v34 = enum case for UITextItemMenuConfiguration.Preview.default(_:);
              uint64_t v35 = type metadata accessor for UITextItemMenuConfiguration.Preview();
              uint64_t v36 = *(void *)(v35 - 8);
              unint64_t v48 = v23;
              uint64_t v37 = v36;
              uint64_t v38 = v21;
              long long v39 = v42;
              (*(void (**)(char *, uint64_t, uint64_t))(v36 + 104))(v42, v34, v35);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v35);
              uint64_t v19 = UITextItemMenuConfiguration.init(preview:menu:)();
              sub_1001015F0(v38, v48);

              (*(void (**)(char *, uint64_t))(v26 + 8))(v41, v8);
              return v19;
            }
            (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v8);
            sub_1001015F0(v21, v23);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v8);
            sub_1001015F0(v21, v23);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v8);
          sub_1001015F0(v21, v23);
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1002087E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10020882C(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_100208888()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageOneLabel, (uint64_t (*)(void))sub_1002088A8);
}

id sub_1002088A8()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  id v2 = [self labelColor];
  [v0 setTextColor:v2];

  id v3 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  uint64_t v4 = self;
  [v3 pointSize];
  id v5 = [v4 systemFontOfSize:];
  id v6 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleFootnote];
  id v7 = [v6 scaledFontForFont:v5 maximumPointSize:1.79769313e308];

  [v0 setFont:v7];
  return v0;
}

id sub_100208A90()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separator, (uint64_t (*)(void))sub_100208B10);
}

id sub_100208AB0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100208B10()
{
  id v0 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [v0 heightAnchor];
  id v2 = [v1 constraintEqualToConstant:0.5];

  [v2 setActive:1];
  id v3 = [self secondaryLabelColor];
  id v4 = [v3 colorWithAlphaComponent:0.2];

  [v0 setBackgroundColor:v4];
  return v0;
}

id sub_100208C28()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint);
  }
  else
  {
    id v4 = sub_100208A90();
    id v5 = [v4 widthAnchor];

    id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC17SequoiaTranslator8CardView_container), "widthAnchor"));
    id v7 = [v5 constraintEqualToAnchor:v6];

    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_100208CFC()
{
  return sub_1002092A8(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___sourceView, (uint64_t (*)(uint64_t))sub_100208D1C);
}

id sub_100208D1C(uint64_t a1)
{
  type metadata accessor for HighlightTextView();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  id v5 = self;
  id v6 = v3;
  id v7 = [v5 labelColor];
  [v6 setTextColor:v7];

  [v6 setScrollEnabled:0];
  [v6 setEditable:0];
  [v6 setContentInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [v6 setTextContainerInset:3.0, 0.0, 3.0, 0.0];
  id v8 = [v6 textContainer];
  [v8 setLineFragmentPadding:0.0];

  [v6 setClipsToBounds:0];
  id v9 = self;
  id v10 = v6;
  id v11 = [v9 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  uint64_t v12 = self;
  [v11 pointSize];
  id v13 = [v12 systemFontOfSize:];
  id v14 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
  id v15 = [v14 scaledFontForFont:v13 maximumPointSize:1.79769313e308];

  [v10 setFont:v15];
  uint64_t v19 = &type metadata for TranslateFeatures;
  unint64_t v20 = sub_10000AB14();
  v18[0] = 5;
  LOBYTE(v14) = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v18);
  if ((v14 & 1) == 0)
  {
    id v16 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:a1 action:"sourceTapped:"];
    [v16 setNumberOfTapsRequired:1];
    [v10 addGestureRecognizer:v16];
  }
  return v10;
}

id sub_100209068()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageTwoLabel, (uint64_t (*)(void))sub_100209088);
}

id sub_100209088()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self colorNamed:v2];

  [v0 setTextColor:v3];
  id v4 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  id v5 = self;
  [v4 pointSize];
  id v6 = [v5 systemFontOfSize:];
  id v7 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleFootnote];
  id v8 = [v7 scaledFontForFont:v6 maximumPointSize:1.79769313e308];

  [v0 setFont:v8];
  return v0;
}

id sub_100209288()
{
  return sub_1002092A8(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___targetView, (uint64_t (*)(uint64_t))sub_10020930C);
}

id sub_1002092A8(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10020930C(uint64_t a1)
{
  type metadata accessor for HighlightTextView();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = v2;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self colorNamed:v4];

  [v3 setTextColor:v5];
  [v3 setScrollEnabled:0];
  [v3 setEditable:0];
  [v3 setContentInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [v3 setTextContainerInset:3.0, 0.0, 3.0, 0.0];
  id v6 = [v3 textContainer];
  [v6 setLineFragmentPadding:0.0];

  id v7 = v3;
  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setText:v8];

  [v7 setClipsToBounds:0];
  id v9 = self;
  id v10 = v7;
  id v11 = [v9 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  uint64_t v12 = self;
  [v11 pointSize];
  id v13 = [v12 systemFontOfSize:];
  id v14 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
  id v15 = [v14 scaledFontForFont:v13 maximumPointSize:1.79769313e308];

  [v10 setFont:v15];
  id v16 = [v10 textContainer];
  [v16 setLineBreakMode:0];

  unint64_t v20 = &type metadata for TranslateFeatures;
  unint64_t v21 = sub_10000AB14();
  v19[0] = 5;
  LOBYTE(v16) = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v19);
  if ((v16 & 1) == 0)
  {
    id v17 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:a1 action:"targetTapped:"];
    [v17 setNumberOfTapsRequired:1];
    [v10 addGestureRecognizer:v17];
  }
  return v10;
}

id sub_1002096AC()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___hintView, (uint64_t (*)(void))sub_1002096CC);
}

id sub_1002096CC()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  id v2 = [self systemFontOfSize:11.0];
  [v0 setFont:v2];

  id v3 = [self mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v8._object = (void *)0x8000000100263F00;
  v4._object = (void *)0x8000000100263EE0;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v6];

  [v0 setHidden:1];
  return v0;
}

id sub_100209890()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseHeader, (uint64_t (*)(void))sub_1002098B0);
}

id sub_1002098B0()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:0];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  id v2 = [self systemFontOfSize:12.0];
  [v0 setFont:v2];

  id v3 = [self mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000052;
  v8._object = (void *)0x80000001002646E0;
  v4._object = (void *)0x80000001002646C0;
  v4._uint64_t countAndFlagsBits = 0xD000000000000018;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v8);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v0 setText:v6];

  [v0 setHidden:1];
  return v0;
}

id sub_100209A70()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseRowsStack, (uint64_t (*)(void))sub_100209A90);
}

id sub_100209A90()
{
  id v0 = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAxis:1];
  [v0 setDistribution:0];
  [v0 setAlignment:0];
  [v0 setSpacing:0.0];
  [v0 setLayoutMarginsRelativeArrangement:1];
  [v0 setInsetsLayoutMarginsFromSafeArea:0];
  id v1 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v2 = [self tertiarySystemGroupedBackgroundColor];
  [v1 setBackgroundColor:v2];

  id v3 = [v1 layer];
  [v3 setCornerRadius:10.0];

  [v0 insertSubview:v1 atIndex:0];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10023B960(v1);
  [v0 setHidden:1];

  return v0;
}

id sub_100209C48()
{
  return sub_100208AB0(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___favoritedImageView, (uint64_t (*)(void))sub_100209C68);
}

id sub_100209C68()
{
  id v0 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  id v3 = [self preferredFontForTextStyle:UIFontTextStyleTitle1];
  id v4 = [self configurationWithFont:v3];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setImage:v2];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self colorNamed:v5];

  [v0 setTintColor:v6];
  return v0;
}

id sub_100209E20()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___spacer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___spacer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___spacer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    id v5 = [self clearColor];
    [v4 setBackgroundColor:v5];

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

char *sub_100209EE4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageOneLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___sourceView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageTwoLabel] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___targetView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___hintView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseHeader] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseRowsStack] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___favoritedImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___spacer] = 0;
  v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_isIdentity] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_favoriteObservation] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeObservation] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_ttsPlaybackRateObservation] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedTranslation] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_padding] = 0x4034000000000000;
  uint64_t v11 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternativesBehaviour;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ASRAlternativesBehaviour());
  id v13 = v4;
  *(void *)&v4[v11] = [v12 init];
  v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_enableSelectable] = 1;
  id v14 = &v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex];
  *(void *)id v14 = 0;
  v14[8] = 1;
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives] = _swiftEmptyArrayStorage;
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows] = _swiftEmptyArrayStorage;
  uint64_t v15 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont;
  id v16 = self;
  id v17 = [v16 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  char v18 = self;
  [v17 pointSize];
  id v19 = [v18 systemFontOfSize:];
  id v20 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
  id v21 = [v20 scaledFontForFont:v19 maximumPointSize:1.79769313e308];

  *(void *)&v13[v15] = v21;
  uint64_t v22 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_collapsedFontBold;
  id v23 = [v16 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  [v23 pointSize];
  id v24 = [v18 systemFontOfSize:];
  id v25 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  id v26 = [v25 scaledFontForFont:v24 maximumPointSize:1.79769313e308];

  *(void *)&v13[v22] = v26;
  uint64_t v28 = v35;
  uint64_t v27 = v36;
  id v29 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  v29(&v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_sourceLocale], 1, 1, v36);
  v29(&v13[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_targetLocale], 1, 1, v27);

  uint64_t v30 = (objc_class *)type metadata accessor for TranslationCard();
  v38.receiver = v13;
  v38.super_class = v30;
  uint64_t v31 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a1, a2, a3, a4);
  sub_10020A534();
  *(void *)(*(void *)&v31[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternativesBehaviour]
            + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_delegate
            + 8) = &off_1002D3180;
  swift_unknownObjectWeakAssign();
  uint64_t v32 = (uint64_t)v37;
  Locale.init(identifier:)();
  sub_10020AE1C((uint64_t)_swiftEmptyArrayStorage, v32);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v32, v27);
  sub_10020A9A0();

  return v31;
}

id sub_10020A3E8()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for TranslationCard();
  [super layoutSubviews];
  sub_10020C170();
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];
  [v1 frame];
  double MinY = CGRectGetMinY(v8);
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_container] frame];
  double MaxY = CGRectGetMaxY(v9);
  [v1 frame];
  BOOL v4 = MinY < MaxY - CGRectGetHeight(v10);
  double v5 = 0.0;
  if (v4) {
    double v5 = 1.0;
  }
  return [*(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_background] setAlpha:v5];
}

void sub_10020A534()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_container);
  id v4 = sub_100208888();
  [v3 addArrangedSubview:v4];

  id v5 = *(id *)(v1 + v2);
  id v6 = sub_100208CFC();
  [v5 addArrangedSubview:v6];

  id v7 = *(id *)(v1 + v2);
  id v8 = sub_100209890();
  [v7 addArrangedSubview:v8];

  id v9 = *(id *)(v1 + v2);
  id v10 = sub_100209A70();
  [v9 addArrangedSubview:v10];

  id v11 = *(id *)(v1 + v2);
  id v12 = sub_100208A90();
  [v11 addArrangedSubview:v12];

  id v13 = *(id *)(v1 + v2);
  id v14 = sub_100209068();
  [v13 addArrangedSubview:v14];

  id v15 = *(id *)(v1 + v2);
  id v16 = sub_100209288();
  [v15 addArrangedSubview:v16];

  id v17 = *(id *)(v1 + v2);
  id v18 = sub_1002096AC();
  [v17 addArrangedSubview:v18];

  id v19 = *(id *)(v1 + v2);
  id v20 = sub_100209E20();
  [v19 addArrangedSubview:v20];

  id v21 = *(id *)(v1 + v2);
  id v22 = sub_100209C48();
  [v21 addSubview:v22];

  id v23 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10024E930;
  id v25 = sub_100209C48();
  id v26 = [v25 bottomAnchor];

  id v27 = sub_100209288();
  id v28 = [v27 bottomAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28 constant:-8.0];
  *(void *)(v24 + 32) = v29;
  id v30 = sub_100209C48();
  id v31 = [v30 trailingAnchor];

  id v32 = sub_100209288();
  id v33 = [v32 trailingAnchor];

  id v34 = [v31 constraintEqualToAnchor:v33];
  *(void *)(v24 + 40) = v34;
  id v35 = sub_100209E20();
  id v36 = [v35 heightAnchor];

  id v37 = [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions) heightAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v24 + 48) = v38;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];

  id v40 = sub_100209C48();
  [v40 setHidden:1];
}

uint64_t sub_10020A98C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded);
}

id sub_10020A9A0()
{
  uint64_t v1 = v0;
  sub_10020BC64();
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_container);
  id v4 = sub_100208CFC();
  [v3 setCustomSpacing:v4 afterView:16.0];

  id v5 = *(id *)(v1 + v2);
  id v6 = sub_100209890();
  [v5 setCustomSpacing:v6 afterView:12.0];

  id v7 = *(id *)(v1 + v2);
  id v8 = sub_100209A70();
  [v7 setCustomSpacing:v8 afterView:12.0];

  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded;
  [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions) setHidden:(*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded) & 1) == 0];
  if (*(unsigned char *)(v1 + v9) == 1 && *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_isIdentity) != 1)
  {
    id v14 = sub_100208A90();
    [v14 setHidden:0];

    id v42 = *(id *)(v1 + v2);
    id v15 = sub_100208A90();
    id v16 = [*(id *)(v1 + v2) arrangedSubviews];
    sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
    unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v18 = sub_100209A70();
    sub_100200F34((uint64_t)v18, v17);
    uint64_t v20 = v19;
    char v22 = v21;
    swift_bridgeObjectRelease();

    if (v22) {
      uint64_t v23 = 0;
    }
    else {
      uint64_t v23 = v20;
    }
    [v42 insertArrangedSubview:v15 atIndex:v23];

    id v24 = *(id *)(v1 + v2);
    id v25 = sub_100208A90();
    [v24 setCustomSpacing:v25 afterView:18.0];

    id v13 = sub_100208C28();
    [v13 setActive:1];
  }
  else
  {
    id v10 = sub_100208A90();
    [v10 setHidden:1];

    id v11 = *(id *)(v1 + v2);
    id v12 = sub_100208A90();
    [v11 removeArrangedSubview:v12];

    id v13 = sub_100208C28();
    [v13 setActive:0];
  }

  id v26 = sub_100208CFC();
  [v26 setUserInteractionEnabled:*(unsigned __int8 *)(v1 + v9)];

  id v27 = sub_100209288();
  [v27 setUserInteractionEnabled:*(unsigned __int8 *)(v1 + v9)];

  id v28 = sub_100209890();
  id v29 = v28;
  BOOL v30 = *(unsigned char *)(v1 + v9) != 1
     || *(void *)(*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives) + 16) < 2uLL;
  [v28 setHidden:v30];

  id v31 = sub_100209A70();
  id v32 = v31;
  BOOL v33 = *(unsigned char *)(v1 + v9) != 1
     || *(void *)(*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives) + 16) < 2uLL;
  [v31 setHidden:v33];

  id v34 = sub_100209C48();
  if (*(unsigned char *)(v1 + v9))
  {
    uint64_t v35 = 1;
  }
  else
  {
    id v36 = sub_1000270A8();
    unsigned int v37 = [(objc_class *)v36 isSelected];

    uint64_t v35 = v37 ^ 1;
  }
  [v34 setHidden:v35];

  if ((*(unsigned char *)(v1 + v9) & 1) == 0)
  {
    id v38 = sub_100208CFC();
    [v38 setSelectedTextRange:0];

    id v39 = sub_100209288();
    [v39 setSelectedTextRange:0];
  }
  id v40 = sub_100209E20();
  [v40 setHidden:(*(unsigned char *)(v1 + v9) & 1) == 0];

  return sub_100034FE8();
}

uint64_t sub_10020AE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v4 = type metadata accessor for IndexSet();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  id v42 = v6;
  IndexSet.init()();
  uint64_t v37 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives);
  unint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(v7 + 16);
  uint64_t v43 = v2;
  uint64_t v44 = a1 + 32;
  uint64_t v41 = v7 + 32;
  uint64_t v10 = v7;
  swift_bridgeObjectRetain_n();
  uint64_t v40 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  unint64_t v13 = 0;
  unint64_t v46 = v8;
  BOOL v14 = v8 == 0;
  if (!v8) {
    goto LABEL_8;
  }
LABEL_2:
  if (v14) {
    goto LABEL_41;
  }
  uint64_t result = sub_1000295C0(v44 + 40 * v13++, (uint64_t)&v50);
  if (v12 != v9)
  {
LABEL_4:
    if (v12 < *(void *)(v10 + 16))
    {
      sub_1000295C0(v41 + 40 * v12++, (uint64_t)v49);
      goto LABEL_10;
    }
    goto LABEL_42;
  }
  while (1)
  {
    unint64_t v12 = v9;
    memset(v49, 0, 40);
LABEL_10:
    sub_10001323C((uint64_t)&v50, (uint64_t)&v53, &qword_1002FA730);
    sub_10001323C((uint64_t)v49, (uint64_t)&v56, &qword_1002FA730);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v43;
      if (v57)
      {
        sub_10000B070((uint64_t)&v56, &qword_1002FA730);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
LABEL_38:
      swift_bridgeObjectRelease();
      uint64_t v21 = v39;
LABEL_39:
      sub_100007620(&qword_1002FC628);
      sub_10020D594(&qword_1002FC630);
      sub_10020D594(&qword_1002FC638);
      id v36 = v42;
      RangeReplaceableCollection<>.remove(atOffsets:)();
      *(void *)(v20 + v37) = v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v21);
      return swift_bridgeObjectRelease();
    }
    if (!v57) {
      break;
    }
    sub_100048DE4(&v53, (uint64_t)v48);
    sub_100048DE4(&v56, (uint64_t)v47);
    sub_100029624(v48, v48[3]);
    uint64_t v15 = dispatch thunk of FormattedString.formattedString.getter();
    uint64_t v17 = v16;
    sub_100029624(v47, v47[3]);
    if (v15 == dispatch thunk of FormattedString.formattedString.getter() && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
      sub_10000AB68((uint64_t)v47);
      uint64_t result = sub_10000AB68((uint64_t)v48);
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000AB68((uint64_t)v47);
      uint64_t result = sub_10000AB68((uint64_t)v48);
      if ((v19 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v43;
        unint64_t v8 = v46;
        goto LABEL_19;
      }
    }
    unint64_t v8 = v46;
    BOOL v14 = v13 >= v46;
    if (v13 != v46) {
      goto LABEL_2;
    }
LABEL_8:
    *(void *)&long long v52 = 0;
    unint64_t v13 = v8;
    long long v50 = 0u;
    long long v51 = 0u;
    if (v12 != v9) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  sub_10000AB68((uint64_t)&v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v43;
LABEL_19:
  uint64_t v21 = v39;
  sub_10020BAA4();
  id v22 = sub_100209890();
  uint64_t v23 = v22;
  uint64_t v24 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded;
  int v25 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded);
  if (v8 <= 1) {
    int v25 = 0;
  }
  [v22 setHidden:v25 ^ 1u];

  id v26 = sub_100209A70();
  id v27 = v26;
  int v28 = *(unsigned __int8 *)(v20 + v24);
  if (v8 <= 1) {
    int v28 = 0;
  }
  [v26 setHidden:v28 ^ 1u];

  if (!v8) {
    goto LABEL_39;
  }
  id v29 = (void *)(v20 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v30 = 0;
  BOOL v31 = v8 == 0;
LABEL_25:
  if (!v31)
  {
    sub_1000295C0(v44 + 40 * v30, (uint64_t)&v49[1]);
    *(void *)&long long v50 = v30;
    sub_100048DE4((long long *)&v49[1], (uint64_t)&v50 + 8);
    ++v30;
    while (1)
    {
      sub_10001323C((uint64_t)&v50, (uint64_t)&v53, &qword_1002FC640);
      if (!v55) {
        goto LABEL_38;
      }
      uint64_t v32 = v53;
      sub_100048DE4((long long *)((char *)&v53 + 8), (uint64_t)&v50);
      id v33 = sub_10020B6D4(&v50, v32, v45);
      if (v33)
      {
        id v34 = v33;
        swift_beginAccess();
        id v35 = v34;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();

        uint64_t result = sub_10000AB68((uint64_t)&v50);
        uint64_t v20 = v43;
      }
      else
      {
        IndexSet.insert(_:)(v32);
        uint64_t result = sub_10000AB68((uint64_t)&v50);
      }
      BOOL v31 = v30 >= v46;
      if (v30 != v46) {
        goto LABEL_25;
      }
      long long v51 = 0u;
      long long v52 = 0u;
      unint64_t v30 = v46;
      long long v50 = 0u;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_10020B40C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex + 8) & 1) == 0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex);
    uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives;
    if (v2 < *(void *)(*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives) + 16))
    {
      uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows);
      swift_beginAccess();
      if ((unint64_t)*v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v2 >= v11) {
          return;
        }
      }
      else if (v2 >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        return;
      }
      uint64_t v5 = *v4;
      uint64_t v19 = v3;
      if ((unint64_t)*v4 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        if (!v6) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (!v6) {
          goto LABEL_16;
        }
      }
      if (v6 < 1)
      {
LABEL_29:
        __break(1u);
        return;
      }
      uint64_t v7 = 0;
      do
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v8 = *(id *)(v5 + 8 * v7 + 32);
        }
        unint64_t v9 = v8;
        ++v7;
        id v10 = sub_1001A3960();
        [v10 setAlpha:0.0];
      }
      while (v6 != v7);
LABEL_16:
      swift_bridgeObjectRelease_n();
      uint64_t v12 = *v4;
      if ((v12 & 0xC000000000000001) == 0)
      {
        if (v2 < 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v2 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v13 = *(id *)(v12 + 8 * v2 + 32);
          goto LABEL_20;
        }
        __break(1u);
        goto LABEL_27;
      }
      swift_bridgeObjectRetain();
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_20:
      id v14 = sub_1001A3960();

      [v14 setAlpha:1.0];
      id v15 = sub_100209288();
      if ((v2 & 0x8000000000000000) == 0)
      {
        uint64_t v16 = *(void *)(v1 + v19);
        if ((unint64_t)v2 < *(void *)(v16 + 16))
        {
          uint64_t v17 = v15;
          sub_1000295C0(v16 + 40 * v2 + 32, (uint64_t)v20);
          sub_100029624(v20, v20[3]);
          TranslationAlternative.displayString.getter();
          NSString v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          sub_10000AB68((uint64_t)v20);
          [v17 setText:v18];

          return;
        }
        goto LABEL_28;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
}

id sub_10020B6D4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  uint64_t v12 = dispatch thunk of TranslationAlternative.sensesMeta.getter();
  if (!*(void *)(v12 + 16))
  {
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1000295C0(v12 + 32, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_9:
    sub_10000B070((uint64_t)&v31, &qword_1002FC620);
    return 0;
  }
  sub_100048DE4(&v31, (uint64_t)v34);
  id v13 = sub_100209A70();
  id v14 = [v13 arrangedSubviews];

  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
  if (v16 >= 1)
  {
    id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v18 heightAnchor];
    id v20 = [v19 constraintEqualToConstant:0.5];

    [v20 setActive:1];
    p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
    id v21 = [self separatorColor];
    [v18 setBackgroundColor:v21];

    id v22 = sub_100209A70();
    [v22 addArrangedSubview:v18];
  }
  sub_100029624(a1, a1[3]);
  uint64_t v23 = TranslationAlternative.displayString.getter();
  uint64_t v25 = v24;
  sub_1000295C0((uint64_t)v34, (uint64_t)&v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  id v26 = objc_allocWithZone((Class)type metadata accessor for SenseRow());
  id v27 = sub_1001A3E54(v23, v25, &v31, a2, (uint64_t)v11);
  id v28 = sub_100209A70();
  [v28 p_weak_ivar_lyt[376]:v27];

  id v29 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v4 action:"senseTapped:"];
  [v27 addGestureRecognizer:v29];

  sub_10000AB68((uint64_t)v34);
  return v27;
}

void sub_10020BAA4()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows);
  swift_beginAccess();
  void *v1 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v2 = sub_100209A70();
  id v3 = [v2 arrangedSubviews];

  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    id v10 = sub_100209890();
    [v10 setHidden:1];

    id v11 = sub_100209A70();
    [v11 setHidden:1];

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      ++v6;
      id v9 = sub_100209A70();
      [v9 removeArrangedSubview:v8];

      [v8 removeFromSuperview];
    }
    while (v5 != v6);
    goto LABEL_10;
  }
  __break(1u);
}

void sub_10020BC64()
{
  uint64_t v1 = v0;
  id v2 = sub_100208CFC();
  id v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded)) {
    uint64_t v5 = &OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont;
  }
  else {
    uint64_t v5 = &OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_collapsedFontBold;
  }
  [v2 setFont:*(void *)(v1 + *v5)];

  id v6 = sub_100209288();
  id v7 = v6;
  if (*(unsigned char *)(v1 + v4)) {
    uint64_t v8 = &OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont;
  }
  else {
    uint64_t v8 = &OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_collapsedFontBold;
  }
  [v6 setFont:*(void *)(v1 + *v8)];

  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex + 8) & 1) == 0)
  {
    unint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex);
    uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives;
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives);
    if ((int64_t)v9 < *(void *)(v11 + 16))
    {
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_17;
      }
      sub_1000295C0(v11 + 40 * v9 + 32, (uint64_t)v24);
      sub_100029624(v24, v25);
      uint64_t v12 = *(void *)(dispatch thunk of TranslationAlternative.sensesMeta.getter() + 16);
      swift_bridgeObjectRelease();
      sub_10000AB68((uint64_t)v24);
      if (v12 && *(unsigned char *)(v1 + v4) == 1)
      {
        uint64_t v13 = *(void *)(v1 + v10);
        if (v9 < *(void *)(v13 + 16))
        {
          sub_1000295C0(v13 + 40 * v9 + 32, (uint64_t)v23);
          sub_100029624(v23, v23[3]);
          uint64_t v14 = dispatch thunk of TranslationAlternative.sensesMeta.getter();
          if (*(void *)(v14 + 16))
          {
            sub_1000295C0(v14 + 32, (uint64_t)v24);
            swift_bridgeObjectRelease();
            sub_10000AB68((uint64_t)v23);
            sub_100029624(v24, v25);
            int v15 = dispatch thunk of TranslationSense.sourceMatch.getter();
            int v17 = v16;
            id v18 = sub_100208CFC();
            sub_10020BEC0(v15, v17, v18);
            swift_bridgeObjectRelease();

            sub_100029624(v24, v25);
            int v19 = dispatch thunk of TranslationSense.targetMatch.getter();
            int v21 = v20;
            id v22 = sub_100209288();
            sub_10020BEC0(v19, v21, v22);
            swift_bridgeObjectRelease();

            sub_10000AB68((uint64_t)v24);
            return;
          }
LABEL_18:
          __break(1u);
          return;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
  }
}

void sub_10020BEC0(int a1, int a2, id a3)
{
  id v5 = [a3 attributedText];
  if (!v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  id v6 = v5;
  id v7 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v5];

  id v8 = [v7 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = String.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = self;
  id v11 = [a3 font];
  if (!v11) {
    id v11 = [v10 preferredFontForTextStyle:UIFontTextStyleTitle1];
  }
  uint64_t v12 = v11;
  [v11 pointSize];
  double v14 = v13;

  id v22 = [v10 systemFontOfSize:v14];
  [v7 addAttribute:NSFontAttributeName];
  id v15 = [a3 textColor];
  if (!v15) {
    id v15 = [self labelColor];
  }
  [v7 addAttribute:NSForegroundColorAttributeName value:v15 range:0];

  id v16 = [v7 string];
  if (!v16) {
    goto LABEL_11;
  }
  int v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v17 rangeOfString:v18];
  uint64_t v21 = v20;

  [v7 addAttribute:NSFontAttributeName value:*(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont) range:v19, v21];
  [a3 setAttributedText:v7];
}

void sub_10020C170()
{
  id v0 = sub_100209288();
  id v1 = [v0 textContainer];

  sub_10000B0CC(0, (unint64_t *)&qword_1002F90C8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v1 setExclusionPaths:isa];

  id v3 = sub_100209C48();
  LOBYTE(v1) = [v3 isHidden];

  if ((v1 & 1) == 0)
  {
    id v4 = sub_100209288();
    [v4 bounds];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;

    v50.origin.double x = v6;
    v50.origin.double y = v8;
    v50.size.width = v10;
    v50.size.height = v12;
    double Width = CGRectGetWidth(v50);
    id v14 = sub_100209C48();
    [v14 bounds];
    double v16 = v15;

    CGFloat v17 = Width - v16 * 1.25;
    id v18 = sub_100209288();
    [v18 bounds];
    CGFloat v20 = v19;
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;

    v51.origin.double x = v20;
    v51.origin.double y = v22;
    v51.size.width = v24;
    v51.size.height = v26;
    double Height = CGRectGetHeight(v51);
    id v28 = sub_100209C48();
    [v28 bounds];
    double v30 = v29;

    CGFloat v31 = Height - v30 * 1.25 + -8.0;
    id v32 = sub_100209C48();
    [v32 bounds];
    double v34 = v33;

    id v35 = sub_100209C48();
    [v35 bounds];
    double v37 = v36;

    v52.size.height = v37 * 1.25;
    v52.origin.double x = v17;
    v52.origin.double y = v31;
    v52.size.width = v34 * 1.25;
    CGRect v53 = CGRectStandardize(v52);
    double x = v53.origin.x;
    double y = v53.origin.y;
    double v40 = v53.size.width;
    double v41 = v53.size.height;
    id v42 = sub_100209288();
    id v43 = [v42 textContainer];

    id v44 = [self bezierPathWithRect:x, y, v40, v41];
    id v45 = [v43 exclusionPaths];
    uint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    Class v47 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v43 setExclusionPaths:v47];

    id v48 = sub_100209288();
    [v48 layoutIfNeeded];
  }
}

uint64_t sub_10020C50C(void *a1)
{
  uint64_t result = sub_1000126F8(a1);
  if ((result & 1) == 0)
  {
    uint64_t v4 = v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate;
    swift_beginAccess();
    sub_10000C3A4(v4, (uint64_t)v10, (uint64_t *)&unk_1002F00C0);
    if (v11)
    {
      sub_1000295C0((uint64_t)v10, (uint64_t)v7);
      sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F00C0);
      uint64_t v5 = v8;
      uint64_t v6 = v9;
      sub_100029624(v7, v8);
      (*(void (**)(void *, uint64_t, uint64_t))(v6 + 24))(a1, v5, v6);
      return sub_10000AB68((uint64_t)v7);
    }
    else
    {
      return sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F00C0);
    }
  }
  return result;
}

uint64_t sub_10020C668(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate;
  swift_beginAccess();
  sub_10000C3A4(v3, (uint64_t)v10, (uint64_t *)&unk_1002F00C0);
  if (!v11) {
    return sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F00C0);
  }
  sub_1000295C0((uint64_t)v10, (uint64_t)v7);
  sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F00C0);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  sub_100029624(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, v4, v5);
  return sub_10000AB68((uint64_t)v7);
}

void sub_10020C7AC(void *a1)
{
  id v2 = v1;
  id v3 = [a1 view];
  if (v3)
  {
    id v12 = v3;
    type metadata accessor for SenseRow();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4
      && ((uint64_t v5 = v4,
           uint64_t v6 = &v1[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex],
           uint64_t v7 = OBJC_IVAR____TtC17SequoiaTranslator8SenseRow_index,
           uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator8SenseRow_index),
           (v1[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex + 8] & 1) != 0)
       || *(void *)v6 != v8))
    {
      *(void *)uint64_t v6 = v8;
      v6[8] = 0;
      sub_10020B40C();
      uint64_t v9 = (uint64_t)&v1[OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate];
      swift_beginAccess();
      sub_10000C3A4(v9, (uint64_t)v17, (uint64_t *)&unk_1002F00C0);
      if (v18)
      {
        sub_1000295C0((uint64_t)v17, (uint64_t)v14);
        sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F00C0);
        uint64_t v10 = v15;
        uint64_t v11 = v16;
        sub_100029624(v14, v15);
        (*(void (**)(void, uint64_t, uint64_t))(v11 + 16))(*(void *)(v5 + v7), v10, v11);
        sub_10000AB68((uint64_t)v14);
      }
      else
      {
        sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F00C0);
      }
      [v2 setNeedsLayout:v12];
    }
    else
    {
    }
  }
}

uint64_t sub_10020C9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate;
  swift_beginAccess();
  sub_10000C3A4(v9, (uint64_t)v16, (uint64_t *)&unk_1002F00C0);
  if (!v17) {
    return sub_10000B070((uint64_t)v16, (uint64_t *)&unk_1002F00C0);
  }
  sub_1000295C0((uint64_t)v16, (uint64_t)v13);
  sub_10000B070((uint64_t)v16, (uint64_t *)&unk_1002F00C0);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  sub_100029624(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, a2, a3, a4, v10, v11);
  return sub_10000AB68((uint64_t)v13);
}

id sub_10020CAE8(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = (void *)a3();
  id v6 = [v5 text];

  if (v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
  }
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v7;
}

void sub_10020CBC8(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  uint64_t v5 = (void *)a3();
  id v6 = [v5 text];

  if (v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v8 = v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_10020CD74(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = a1;
  id v5 = (id)a3();
  [v5 sendActionsForControlEvents:64];
}

uint64_t sub_10020CE34()
{
  return sub_10020CE64(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_sourceLocale);
}

uint64_t sub_10020CE58()
{
  return sub_10020CE64(&OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_targetLocale);
}

uint64_t sub_10020CE64(void *a1)
{
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v1 + *a1;
  swift_beginAccess();
  sub_10000C3A4(v10, (uint64_t)v9, (uint64_t *)&unk_1002F4110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F4110);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F4110);
    uint64_t v11 = Locale.identifier.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v11;
}

id sub_10020D04C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_10020D0CC()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_sourceLocale, (uint64_t *)&unk_1002F4110);
  return sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_targetLocale, (uint64_t *)&unk_1002F4110);
}

id sub_10020D268()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranslationCard();
  return [super dealloc];
}

uint64_t sub_10020D440()
{
  return type metadata accessor for TranslationCard();
}

uint64_t type metadata accessor for TranslationCard()
{
  uint64_t result = qword_1002FC610;
  if (!qword_1002FC610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10020D494()
{
  sub_1000C9F78();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10020D594(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(&qword_1002FC628);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10020D5DC()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageOneLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___separatorWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___sourceView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___languageTwoLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___targetView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___hintView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseHeader] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___senseRowsStack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___favoritedImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard____lazy_storage___spacer] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_isIdentity] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_favoriteObservation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeObservation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_ttsPlaybackRateObservation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedDisambiguableResult] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_cachedTranslation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_padding] = 0x4034000000000000;
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternativesBehaviour;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for ASRAlternativesBehaviour()) init];
  v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_enableSelectable] = 1;
  objc_super v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_selectedAlternativeIndex];
  *(void *)objc_super v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_alternatives] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_senseRows] = _swiftEmptyArrayStorage;
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont;
  id v4 = self;
  id v5 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  uint64_t v6 = self;
  [v5 pointSize];
  id v7 = [v6 systemFontOfSize:];
  id v8 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle1];
  id v9 = [v8 scaledFontForFont:v7 maximumPointSize:1.79769313e308];

  *(void *)&v0[v3] = v9;
  uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_collapsedFontBold;
  id v11 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  [v11 pointSize];
  id v12 = [v6 systemFontOfSize:];
  id v13 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  id v14 = [v13 scaledFontForFont:v12 maximumPointSize:1.79769313e308];

  *(void *)&v0[v10] = v14;
  uint64_t v15 = &v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_sourceLocale];
  uint64_t v16 = type metadata accessor for Locale();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  v17(&v0[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_targetLocale], 1, 1, v16);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10020D9A0(void (*a1)(uint64_t))
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v26 - v10;
  a1(v9);
  static Locale.current.getter();
  uint64_t v12 = Locale.sqDisplayName(context:in:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v11, v4);
  if (!v14)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v12 = 0x45474155474E414CLL;
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EAE0);
    id v17 = v3;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      int v29 = v20;
      double v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v31 = v28;
      *(_DWORD *)double v21 = 136315138;
      CGFloat v26 = v21 + 4;
      id v27 = v21;
      dispatch thunk of PersistedTranslation.sourceLocale.getter();
      uint64_t v22 = Locale.identifier.getter();
      unint64_t v24 = v23;
      v15(v11, v4);
      uint64_t v30 = sub_100202FD4(v22, v24, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v29, "Unable to get sqDisplayName for locale %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  return v12;
}

id sub_10020DC98()
{
  type metadata accessor for TranslationCardView();
  sub_100007620(&qword_1002FC648);
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  sub_100217AF4(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v0 = *(id *)(v19 + 72);
  swift_release();
  dispatch thunk of PersistedTranslation.displaySourceText.getter();

  id v1 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithString:v2];
  swift_bridgeObjectRelease();

  id v4 = [v3 length];
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v5 = *(id *)(v19 + 72);
  swift_release();
  dispatch thunk of PersistedTranslation.displayText.getter();

  id v6 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithString:v7];
  swift_bridgeObjectRelease();

  id v9 = [v8 length];
  uint64_t v10 = (id *)&UIFontTextStyleTitle1;
  if ((uint64_t)v9 <= (uint64_t)v4) {
    uint64_t v11 = (uint64_t)v4;
  }
  else {
    uint64_t v11 = (uint64_t)v9;
  }
  if (v11 >= 50) {
    uint64_t v10 = (id *)&UIFontTextStyleTitle3;
  }
  id v12 = *v10;
  id v13 = [self preferredFontDescriptorWithTextStyle:v12 compatibleWithTraitCollection:0];
  uint64_t v14 = self;
  [v13 pointSize];
  id v15 = [v14 systemFontOfSize:];
  id v16 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:v12];
  id v17 = [v16 scaledFontForFont:v15 maximumPointSize:1.79769313e308];

  return v17;
}

uint64_t sub_10020DFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v129 = a1;
  uint64_t v131 = type metadata accessor for TranslationCardView();
  uint64_t v126 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v127 = v2;
  uint64_t v128 = (uint64_t)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100007620(&qword_1002FC708);
  __chkstk_darwin(v117);
  uint64_t v114 = (uint64_t)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v107);
  uint64_t v108 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100007620(&qword_1002FC710);
  __chkstk_darwin(v106);
  uint64_t v105 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100007620(&qword_1002FC718);
  __chkstk_darwin(v116);
  unint64_t v109 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002FC720);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002FC728);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  id v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002FC730);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (char *)&v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002FC738);
  __chkstk_darwin(v18);
  int v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002FC740);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v110 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v112 = (uint64_t)&v105 - v24;
  uint64_t v113 = sub_100007620(&qword_1002FC748);
  __chkstk_darwin(v113);
  uint64_t v115 = (uint64_t)&v105 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100007620(&qword_1002FC750);
  __chkstk_darwin(v119);
  uint64_t v118 = (uint64_t)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007620(&qword_1002FC758);
  uint64_t v124 = *(void *)(v27 - 8);
  uint64_t v125 = v27;
  __chkstk_darwin(v27);
  unint64_t v122 = (char *)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100007620(&qword_1002FC760);
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v120 = (char *)&v105 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v9 = static HorizontalAlignment.leading.getter();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v30 = (uint64_t *)&v9[*(int *)(sub_100007620(&qword_1002FC768) + 44)];
  *uint64_t v30 = sub_10020EE84();
  uint64_t v31 = (uint64_t)v30 + *(int *)(sub_100007620(&qword_1002FC770) + 44);
  uint64_t v32 = v1;
  sub_10020F2B8(v1, v31);
  char v33 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_10000C3A4((uint64_t)v9, (uint64_t)v13, &qword_1002FC720);
  id v42 = &v13[*(int *)(v11 + 44)];
  *id v42 = v33;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  sub_10000B070((uint64_t)v9, &qword_1002FC720);
  char v43 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  sub_10000C3A4((uint64_t)v13, (uint64_t)v17, &qword_1002FC728);
  CGRect v52 = &v17[*(int *)(v15 + 44)];
  *CGRect v52 = v43;
  *((void *)v52 + 1) = v45;
  *((void *)v52 + 2) = v47;
  *((void *)v52 + 3) = v49;
  *((void *)v52 + 4) = v51;
  v52[40] = 0;
  sub_10000B070((uint64_t)v13, &qword_1002FC728);
  LOBYTE(v13) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  sub_10000C3A4((uint64_t)v17, (uint64_t)v20, &qword_1002FC730);
  uint64_t v111 = v18;
  uint64_t v61 = &v20[*(int *)(v18 + 36)];
  *uint64_t v61 = (char)v13;
  *((void *)v61 + 1) = v54;
  *((void *)v61 + 2) = v56;
  *((void *)v61 + 3) = v58;
  *((void *)v61 + 4) = v60;
  v61[40] = 0;
  sub_10000B070((uint64_t)v17, &qword_1002FC730);
  uint64_t v130 = v32;
  sub_100007620(&qword_1002FC648);
  Bindable.wrappedValue.getter();
  uint64_t v62 = v132;
  swift_getKeyPath();
  uint64_t v132 = v62;
  sub_100217AF4(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v63 = *(unsigned __int8 *)(v62 + 227);
  swift_release();
  if (v63 == 1)
  {
    id v64 = [self secondarySystemGroupedBackgroundColor];
    uint64_t v65 = Color.init(uiColor:)();
    char v66 = static Edge.Set.all.getter();
    uint64_t v67 = v105;
    sub_10000C3A4((uint64_t)v20, v105, &qword_1002FC738);
    uint64_t v68 = v67 + *(int *)(v106 + 36);
    *(void *)uint64_t v68 = v65;
    *(unsigned char *)(v68 + 8) = v66;
    id v69 = v108;
    id v70 = &v108[*(int *)(v107 + 20)];
    uint64_t v71 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v72 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 104))(v70, v71, v72);
    __asm { FMOV            V0.2D, #10.0 }
    *id v69 = _Q0;
    uint64_t v78 = (uint64_t)v109;
    uint64_t v79 = (uint64_t)&v109[*(int *)(v116 + 36)];
    sub_10021795C((uint64_t)v69, v79, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v79 + *(int *)(sub_100007620(&qword_1002F11E0) + 36)) = 256;
    sub_10000C3A4(v67, v78, &qword_1002FC710);
    sub_1002179C4((uint64_t)v69, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    sub_10000B070(v67, &qword_1002FC710);
    sub_10000C3A4(v78, v114, &qword_1002FC718);
    swift_storeEnumTagMultiPayload();
    sub_100216EA4();
    sub_100217040(&qword_1002FC788, &qword_1002FC738, (void (*)(void))sub_100217010);
    uint64_t v80 = (uint64_t)v110;
    _ConditionalContent<>.init(storage:)();
    sub_10000B070(v78, &qword_1002FC718);
  }
  else
  {
    sub_10000C3A4((uint64_t)v20, v114, &qword_1002FC738);
    swift_storeEnumTagMultiPayload();
    sub_100216EA4();
    sub_100217040(&qword_1002FC788, &qword_1002FC738, (void (*)(void))sub_100217010);
    uint64_t v80 = (uint64_t)v110;
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v81 = v112;
  sub_10001323C(v80, v112, &qword_1002FC740);
  sub_10000B070((uint64_t)v20, &qword_1002FC738);
  Bindable.wrappedValue.getter();
  uint64_t v82 = v132;
  swift_getKeyPath();
  uint64_t v132 = v82;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v83 = *(unsigned char *)(v82 + 225);
  swift_release();
  uint64_t v84 = v115;
  sub_10000C3A4(v81, v115, &qword_1002FC740);
  *(unsigned char *)(v84 + *(int *)(v113 + 36)) = v83;
  sub_10000B070(v81, &qword_1002FC740);
  uint64_t v85 = v130;
  uint64_t v86 = v128;
  sub_10021795C(v130, v128, (uint64_t (*)(void))type metadata accessor for TranslationCardView);
  unint64_t v87 = (*(unsigned __int8 *)(v126 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
  uint64_t v88 = swift_allocObject();
  sub_100217168(v86, v88 + v87);
  uint64_t v89 = v118;
  sub_10000C3A4(v84, v118, &qword_1002FC748);
  uint64_t v90 = v119;
  id v91 = (void (**)())(v89 + *(int *)(v119 + 36));
  *id v91 = sub_1002171CC;
  v91[1] = (void (*)())v88;
  v91[2] = 0;
  v91[3] = 0;
  sub_10000B070(v84, &qword_1002FC748);
  uint64_t v92 = v131;
  Swift::Bool v93 = *(void **)(v85 + *(int *)(v131 + 32));
  if (v93)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v94 = v93;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v95 = v130;
    sub_10021795C(v130, v86, (uint64_t (*)(void))type metadata accessor for TranslationCardView);
    uint64_t v96 = swift_allocObject();
    sub_100217168(v86, v96 + v87);
    uint64_t v97 = sub_100217040(&qword_1002FC7A8, &qword_1002FC750, (void (*)(void))sub_100217294);
    id v98 = v122;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10000B070(v89, &qword_1002FC750);
    uint64_t v99 = v95 + *(int *)(v92 + 44);
    char v100 = *(unsigned char *)v99;
    uint64_t v101 = *(void *)(v99 + 8);
    char v136 = v100;
    uint64_t v137 = v101;
    sub_100007620(&qword_1002F1168);
    State.projectedValue.getter();
    type metadata accessor for GenderDisambiguationLearnMoreView();
    uint64_t v132 = v90;
    uint64_t v133 = &type metadata for Bool;
    uint64_t v134 = v97;
    uint64_t v135 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2();
    sub_100217AF4(&qword_1002F1188, (void (*)(uint64_t))&type metadata accessor for GenderDisambiguationLearnMoreView);
    id v102 = v120;
    uint64_t v103 = v125;
    View.formSheet<A>(isPresented:content:)();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v98, v103);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v121 + 32))(v129, v102, v123);
  }
  else
  {
    type metadata accessor for SharedTranslationOptions();
    sub_100217AF4(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10020EE84()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F1058);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v22 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  type metadata accessor for TranslationCardView();
  sub_100100194((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10000C3A4((uint64_t)v16, (uint64_t)v7, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v14, v17, &qword_1002F1058);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v7, 1, v0) != 1)
  {
    sub_10000C3A4((uint64_t)v7, (uint64_t)v11, &qword_1002F1058);
    if (v18(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_100217AF4((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      sub_10000B070((uint64_t)v14, &qword_1002F1058);
      sub_10000B070((uint64_t)v16, &qword_1002F1058);
      v20(v11, v0);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
      if (v19) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v23 = static HorizontalAlignment.leading.getter();
      uint64_t v24 = 0;
      char v25 = 1;
      sub_100055E98();
      return AnyLayout.init<A>(_:)();
    }
    sub_10000B070((uint64_t)v14, &qword_1002F1058);
    sub_10000B070((uint64_t)v16, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
LABEL_6:
    sub_10000B070((uint64_t)v7, &qword_1002F1200);
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v14, &qword_1002F1058);
  sub_10000B070((uint64_t)v16, &qword_1002F1058);
  if (v18(v17, 1, v0) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v7, &qword_1002F1058);
LABEL_8:
  uint64_t v23 = static VerticalAlignment.top.getter();
  uint64_t v24 = 0;
  char v25 = 1;
  sub_100055EEC();
  return AnyLayout.init<A>(_:)();
}

uint64_t sub_10020F2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v3 = sub_100007620(&qword_1002FC7C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v133 = (uint64_t *)((char *)v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v131 = sub_100007620(&qword_1002FC7C8);
  uint64_t v5 = __chkstk_darwin(v131);
  uint64_t v135 = (uint64_t)v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v134 = (uint64_t)v106 - v7;
  uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v9 = *(void **)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v109 = (char *)v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F1200);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v127 = (char *)v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v137 = (uint64_t)v106 - v14;
  uint64_t v15 = sub_100007620(&qword_1002F1058);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v108 = (uint64_t)v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v121 = (char *)v106 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  unint64_t v122 = (char *)v106 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v107 = (uint64_t)v106 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v106 - v25;
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v106 - v27;
  uint64_t v119 = type metadata accessor for Divider();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v30 = (char *)v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100007620(&qword_1002FC7D0);
  __chkstk_darwin(v116);
  uint64_t v138 = (uint64_t)v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100007620(&qword_1002FC7D8);
  uint64_t v32 = __chkstk_darwin(v124);
  uint64_t v130 = (uint64_t)v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v123 = (uint64_t)v106 - v35;
  __chkstk_darwin(v34);
  uint64_t v128 = (uint64_t)v106 - v36;
  uint64_t v37 = sub_100007620(&qword_1002FC7E0);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v129 = (uint64_t)v106 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  id v42 = (char *)v106 - v41;
  __chkstk_darwin(v40);
  uint64_t v44 = (char *)v106 - v43;
  *(void *)id v42 = static HorizontalAlignment.leading.getter();
  *((void *)v42 + 1) = 0x4010000000000000;
  v42[16] = 0;
  uint64_t v45 = sub_100007620(&qword_1002FC7E8);
  sub_10021003C(a1, (uint64_t)&v42[*(int *)(v45 + 44)]);
  uint64_t v125 = v44;
  sub_10001323C((uint64_t)v42, (uint64_t)v44, &qword_1002FC7E0);
  uint64_t v117 = v30;
  Divider.init()();
  int v110 = static Edge.Set.vertical.getter();
  uint64_t v46 = *(int *)(type metadata accessor for TranslationCardView() + 36);
  uint64_t v132 = a1;
  uint64_t v47 = v137;
  uint64_t v114 = a1 + v46;
  sub_100100194((uint64_t)v28);
  uint64_t v48 = (void (*)(void))v9[13];
  unsigned int v113 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v112 = (void (*)(char *, void, uint64_t))v48;
  v48(v26);
  uint64_t v111 = (void (*)(char *, void, uint64_t, uint64_t))v9[7];
  v111(v26, 0, 1, v8);
  uint64_t v120 = v11;
  uint64_t v49 = v47 + *(int *)(v11 + 48);
  sub_10000C3A4((uint64_t)v28, v47, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v26, v49, &qword_1002F1058);
  uint64_t v126 = v9;
  uint64_t v50 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v9[6];
  unsigned int v51 = v50(v47, 1, v8);
  uint64_t v115 = v50;
  if (v51 == 1)
  {
    CGRect v52 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v50;
    uint64_t v53 = v47;
    sub_10000B070((uint64_t)v26, &qword_1002F1058);
    sub_10000B070((uint64_t)v28, &qword_1002F1058);
    int v54 = v52(v49, 1, v8);
    uint64_t v55 = (uint64_t)v122;
    if (v54 == 1)
    {
      sub_10000B070(v53, &qword_1002F1058);
      uint64_t v56 = (uint64_t)v127;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v57 = v107;
  sub_10000C3A4(v47, v107, &qword_1002F1058);
  if (v50(v49, 1, v8) == 1)
  {
    uint64_t v53 = v47;
    sub_10000B070((uint64_t)v26, &qword_1002F1058);
    sub_10000B070((uint64_t)v28, &qword_1002F1058);
    ((void (*)(uint64_t, uint64_t))v126[1])(v57, v8);
    uint64_t v55 = (uint64_t)v122;
LABEL_6:
    sub_10000B070(v53, &qword_1002F1200);
    uint64_t v56 = (uint64_t)v127;
    goto LABEL_8;
  }
  uint64_t v58 = v126;
  uint64_t v59 = v109;
  ((void (*)(char *, uint64_t, uint64_t))v126[4])(v109, v49, v8);
  sub_100217AF4((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  v106[1] = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v60 = (void (*)(char *, uint64_t))v58[1];
  v60(v59, v8);
  sub_10000B070((uint64_t)v26, &qword_1002F1058);
  sub_10000B070((uint64_t)v28, &qword_1002F1058);
  v60((char *)v57, v8);
  sub_10000B070(v137, &qword_1002F1058);
  uint64_t v56 = (uint64_t)v127;
  uint64_t v55 = (uint64_t)v122;
LABEL_8:
  EdgeInsets.init(_all:)();
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v67;
  uint64_t v73 = (void *)v118;
  uint64_t v69 = v138;
  id v70 = v117;
  uint64_t v71 = v119;
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 16))(v138, v117, v119);
  uint64_t v72 = v69 + *(int *)(v116 + 36);
  *(unsigned char *)uint64_t v72 = v110;
  *(void *)(v72 + 8) = v62;
  *(void *)(v72 + 16) = v64;
  *(void *)(v72 + 24) = v66;
  *(void *)(v72 + 32) = v68;
  *(unsigned char *)(v72 + 40) = 0;
  ((void (*)(char *, uint64_t))v73[1])(v70, v71);
  LODWORD(v73) = static Edge.Set.horizontal.getter();
  sub_100100194(v55);
  uint64_t v74 = (uint64_t)v121;
  v112(v121, v113, v8);
  v111((char *)v74, 0, 1, v8);
  uint64_t v75 = v56 + *(int *)(v120 + 48);
  sub_10000C3A4(v55, v56, &qword_1002F1058);
  sub_10000C3A4(v74, v75, &qword_1002F1058);
  uint64_t v76 = v115;
  if (v115(v56, 1, v8) != 1)
  {
    uint64_t v77 = v108;
    sub_10000C3A4(v56, v108, &qword_1002F1058);
    if (v76(v75, 1, v8) != 1)
    {
      LODWORD(v137) = v73;
      uint64_t v73 = v126;
      uint64_t v78 = v109;
      ((void (*)(char *, uint64_t, uint64_t))v126[4])(v109, v75, v8);
      sub_100217AF4((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v79 = (void (*)(char *, uint64_t))v73[1];
      v79(v78, v8);
      sub_10000B070(v74, &qword_1002F1058);
      sub_10000B070(v55, &qword_1002F1058);
      v79((char *)v77, v8);
      LOBYTE(v73) = v137;
      sub_10000B070(v56, &qword_1002F1058);
      goto LABEL_15;
    }
    sub_10000B070(v74, &qword_1002F1058);
    sub_10000B070(v55, &qword_1002F1058);
    ((void (*)(uint64_t, uint64_t))v126[1])(v77, v8);
    goto LABEL_13;
  }
  sub_10000B070(v74, &qword_1002F1058);
  sub_10000B070(v55, &qword_1002F1058);
  if (v76(v75, 1, v8) != 1)
  {
LABEL_13:
    sub_10000B070(v56, &qword_1002F1200);
    goto LABEL_15;
  }
  sub_10000B070(v56, &qword_1002F1058);
LABEL_15:
  EdgeInsets.init(_all:)();
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v87 = v86;
  uint64_t v88 = v138;
  uint64_t v89 = v123;
  sub_10000C3A4(v138, v123, &qword_1002FC7D0);
  uint64_t v90 = v89 + *(int *)(v124 + 36);
  *(unsigned char *)uint64_t v90 = (_BYTE)v73;
  *(void *)(v90 + 8) = v81;
  *(void *)(v90 + 16) = v83;
  *(void *)(v90 + 24) = v85;
  *(void *)(v90 + 32) = v87;
  *(unsigned char *)(v90 + 40) = 0;
  sub_10000B070(v88, &qword_1002FC7D0);
  uint64_t v91 = v128;
  sub_10001323C(v89, v128, &qword_1002FC7D8);
  uint64_t v92 = static HorizontalAlignment.leading.getter();
  uint64_t v93 = (uint64_t)v133;
  *uint64_t v133 = v92;
  *(void *)(v93 + 8) = 0;
  *(unsigned char *)(v93 + 16) = 0;
  uint64_t v94 = sub_100007620(&qword_1002FC7F0);
  sub_1002115F4(v132, v93 + *(int *)(v94 + 44));
  uint64_t v95 = static Color.translateAccentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v97 = v135;
  sub_10000C3A4(v93, v135, &qword_1002FC7C0);
  id v98 = (uint64_t *)(v97 + *(int *)(v131 + 36));
  *id v98 = KeyPath;
  v98[1] = v95;
  sub_10000B070(v93, &qword_1002FC7C0);
  uint64_t v99 = v134;
  sub_10001323C(v97, v134, &qword_1002FC7C8);
  uint64_t v100 = (uint64_t)v125;
  uint64_t v101 = v129;
  sub_10000C3A4((uint64_t)v125, v129, &qword_1002FC7E0);
  uint64_t v102 = v130;
  sub_10000C3A4(v91, v130, &qword_1002FC7D8);
  sub_10000C3A4(v99, v97, &qword_1002FC7C8);
  uint64_t v103 = v136;
  sub_10000C3A4(v101, v136, &qword_1002FC7E0);
  uint64_t v104 = sub_100007620(&qword_1002FC7F8);
  sub_10000C3A4(v102, v103 + *(int *)(v104 + 48), &qword_1002FC7D8);
  sub_10000C3A4(v97, v103 + *(int *)(v104 + 64), &qword_1002FC7C8);
  sub_10000B070(v99, &qword_1002FC7C8);
  sub_10000B070(v91, &qword_1002FC7D8);
  sub_10000B070(v100, &qword_1002FC7E0);
  sub_10000B070(v97, &qword_1002FC7C8);
  sub_10000B070(v102, &qword_1002FC7D8);
  return sub_10000B070(v101, &qword_1002FC7E0);
}