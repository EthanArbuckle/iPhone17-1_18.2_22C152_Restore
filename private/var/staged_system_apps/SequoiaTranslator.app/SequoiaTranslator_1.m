uint64_t sub_1000B9D20(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;

  if ((a3 & 1) == 0)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000B9D60(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    char v5 = a3 & 1;
    return sub_1000B9DC0(a1, a2, v5);
  }
}

uint64_t sub_1000B9DC0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1000B9E00()
{
  unint64_t result = qword_1002F3BC0[0];
  if (!qword_1002F3BC0[0])
  {
    type metadata accessor for OpacityTransition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1002F3BC0);
  }
  return result;
}

uint64_t sub_1000B9E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1000B9E60()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000B9EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1000B9FA8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1000B9FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000BA024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000BA074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000BA0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1000BA114(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1000BA270(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1000BA488);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for MaskModifier()
{
  return sub_1000BA700();
}

unsigned char *storeEnumTagSinglePayload for CopyButton.CopyAnimationPhase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BA594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyButton.CopyAnimationPhase()
{
  return &type metadata for CopyButton.CopyAnimationPhase;
}

unint64_t sub_1000BA5D0()
{
  unint64_t result = qword_1002F3C48;
  if (!qword_1002F3C48)
  {
    sub_100007928(&qword_1002F3C50);
    sub_100014894(&qword_1002F3C58, &qword_1002F3B38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3C48);
  }
  return result;
}

uint64_t sub_1000BA670()
{
  return sub_100014894(&qword_1002F3C60, &qword_1002F3B60);
}

uint64_t sub_1000BA6B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BA6F4()
{
  return sub_1000B9070(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_1000BA700()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000BA730()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000BA82C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000BA8A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_1000BA914@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = v8;
  return result;
}

void (*sub_1000BA9A8(void *a1))(void *a1)
{
  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1000BAA34;
}

void sub_1000BAA34(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

void *sub_1000BAA9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F3F18);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  v35 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F3F20);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v30 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  BOOL v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  v0[2] = &_swiftEmptySetSingleton;
  v0[3] = 0;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  static DispatchQoS.unspecified.getter();
  *(void *)&long long v38 = _swiftEmptyArrayStorage;
  sub_1000C291C(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007620(&qword_1002F3490);
  sub_10009A940(&qword_1002F3498, &qword_1002F3490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v28);
  v0[4] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v0[5] = [objc_allocWithZone((Class)AVAudioSession) init];
  static Date.distantPast.getter();
  *(void *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_minTimeIntervalDeviceDiscovery) = 0x3FB999999999999ALL;
  unsigned int v12 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__isAnyHeadsetConnected;
  LOBYTE(v38) = 0;
  int v13 = v29;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v12, v13, v31);
  unsigned int v14 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__audioDevices;
  *(void *)&long long v38 = _swiftEmptyArrayStorage;
  sub_100007620(&qword_1002EF1E0);
  int v15 = v32;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v14, v15, v34);
  v16 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__ownerAudioDevice;
  uint64_t v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v38 = 0u;
  sub_100007620(&qword_1002EF048);
  v17 = v35;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v16, v17, v37);
  v18 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice;
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  *((_OWORD *)v18 + 3) = 0u;
  *((_OWORD *)v18 + 4) = 0u;
  *((void *)v18 + 10) = 0;
  *((void *)&v39 + 1) = &type metadata for TranslateFeatures;
  *(void *)&long long v40 = sub_10000AB14();
  LOBYTE(v38) = 8;
  LOBYTE(v16) = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v38);
  if (v16)
  {
    v19 = (void *)v1[5];
    *(void *)&long long v38 = 0;
    if ([v19 setCategory:AVAudioSessionCategoryPlayAndRecord withOptions:12 error:&v38])
    {
      id v20 = (id)v38;
    }
    else
    {
      id v21 = (id)v38;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
    v22 = self;
    id v23 = [v22 defaultCenter];
    [v23 addObserver:v1 selector:"handleRouteChangeWithNotification:" name:AVAudioSessionRouteChangeNotification object:v1[5]];

    id v24 = [v22 defaultCenter];
    [v24 addObserver:v1 selector:"handlePickableRouteChangeWithNotification:" name:AVAudioSessionPickableRouteChangeNotification object:v1[5]];

    id v25 = [v22 defaultCenter];
    [v25 addObserver:v1 selector:"availableOutputDeviceChangedWithNotification:" name:AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification object:v1[3]];
  }
  sub_1000BB438();
  return v1;
}

id *sub_1000BB184()
{
  int v15 = &type metadata for TranslateFeatures;
  unint64_t v1 = sub_10000AB14();
  unint64_t v16 = v1;
  v14[0] = 8;
  char v2 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v14);
  if (v2)
  {
    int v15 = &type metadata for TranslateFeatures;
    unint64_t v16 = v1;
    v14[0] = 8;
    char v3 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v14);
    if (v3)
    {
      id v4 = v0[3];
      v0[3] = 0;
    }
  }
  swift_bridgeObjectRelease();

  uint64_t v5 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_lastDeviceDiscovery;
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__isAnyHeadsetConnected;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002FCB50);
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  BOOL v9 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__audioDevices;
  uint64_t v10 = sub_100007620(&qword_1002F3F20);
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper__ownerAudioDevice;
  uint64_t v12 = sub_100007620(&qword_1002F3F18);
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_1000194BC(*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 8), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 16), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 24), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 32), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 40), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 48), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 56), *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 64), *(id *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 72), *(id *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 80));
  return v0;
}

uint64_t sub_1000BB38C()
{
  sub_1000BB184();

  return swift_deallocClassInstance();
}

uint64_t sub_1000BB3E4()
{
  return type metadata accessor for DeviceHelper();
}

uint64_t type metadata accessor for DeviceHelper()
{
  uint64_t result = qword_1002F3CA8;
  if (!qword_1002F3CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1000BB438()
{
  uint64_t v6 = &type metadata for TranslateFeatures;
  unint64_t v7 = sub_10000AB14();
  v5[0] = 8;
  char v1 = isFeatureEnabled(_:)();
  id result = (id)sub_10000AB68((uint64_t)v5);
  if (v1)
  {
    id result = *(id *)(v0 + 24);
    if (result) {
      return [result setDiscoveryMode:1];
    }
    id v3 = [objc_allocWithZone((Class)AVOutputDeviceDiscoverySession) initWithDeviceFeatures:1];
    id v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;

    sub_1000BD62C();
    id result = *(id *)(v0 + 24);
    if (result) {
      return [result setDiscoveryMode:1];
    }
  }
  return result;
}

uint64_t sub_1000BB4E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Notification();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v28) {
    return sub_10000B070((uint64_t)aBlock, (uint64_t *)&unk_1002F02C0);
  }
  sub_10000B0CC(0, &qword_1002F3448);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    v22 = v31;
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    uint64_t v23 = static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v24 = v3;
    uint64_t v16 = (v15 + 32) & ~v15;
    uint64_t v17 = swift_allocObject();
    v18 = v22;
    *(void *)(v17 + 16) = v14;
    *(void *)(v17 + 24) = v18;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, v12, v9);
    v29 = sub_1000C3ECC;
    uint64_t v30 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008BA1C;
    uint64_t v28 = &unk_1002CCF28;
    v19 = _Block_copy(aBlock);
    id v20 = v18;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v21 = (void *)v23;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  }
  return result;
}

void sub_1000BB91C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    id v3 = [a2 currentRoute];
    if (qword_1002EE5B8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030E930);
    id v5 = v3;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    v69 = a2;
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      id v9 = [v5 inputs];
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v10 = Array.description.getter();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
      *(void *)&long long v73 = sub_100202FD4(v10, v12, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Audio route change: current route inputs %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v13 = v5;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315138;
      id v17 = [v13 outputs];
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = Array.description.getter();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      *(void *)&long long v73 = sub_100202FD4(v18, v20, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Audio route change current route outputs %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v21 = v69;
    v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 138412290;
      id v26 = [v21 preferredInput];
      id v27 = v26;
      if (v26) {
        v72[0] = (uint64_t)v26;
      }
      else {
        v72[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v25 = v27;

      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Audio preferred input: %@", v24, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v22 = v21;
    }

    uint64_t v28 = Notification.userInfo.getter();
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v29 + 16) && (unint64_t v30 = sub_10020384C((uint64_t)v72), (v31 & 1) != 0))
      {
        sub_10000B170(*(void *)(v29 + 56) + 32 * v30, (uint64_t)&v73);
      }
      else
      {
        long long v73 = 0u;
        long long v74 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10006E7AC((uint64_t)v72);
      if (!*((void *)&v74 + 1))
      {
        swift_release();

        sub_10000B070((uint64_t)&v73, (uint64_t *)&unk_1002F02C0);
        return;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_release();

        return;
      }
      if (v71 == 2)
      {
        uint64_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v36, v37))
        {
          long long v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v38 = 0;
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Audio route change reason: old device unavailable", v38, 2u);
          swift_slowDealloc();
        }

        id v39 = [v13 outputs];
        sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
        unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v70 = v40;
        if (v40 >> 62) {
          goto LABEL_65;
        }
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        for (; v41; uint64_t v41 = _CocoaArrayWrapper.endIndex.getter())
        {
          uint64_t v42 = 4;
          while (1)
          {
            id v43 = (v70 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v70 + 8 * v42);
            v44 = v43;
            uint64_t v45 = v42 - 3;
            if (__OFADD__(v42 - 4, 1)) {
              break;
            }
            id v46 = [v43 portType];
            uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v49 = v48;
            if (v47 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v49 == v50) {
              goto LABEL_57;
            }
            char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v52) {
              goto LABEL_59;
            }
            id v46 = [v44 portType];
            uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v55 = v54;
            if (v53 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v55 == v56) {
              goto LABEL_57;
            }
            char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v57) {
              goto LABEL_59;
            }
            id v46 = [v44 portType];
            uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v60 = v59;
            if (v58 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v60 == v61)
            {
LABEL_57:
              swift_bridgeObjectRelease_n();

LABEL_59:
LABEL_60:
              swift_bridgeObjectRelease_n();
              goto LABEL_61;
            }
            char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v62) {
              goto LABEL_59;
            }
            id v63 = [v44 portType];
            uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v66 = v65;
            if (v64 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v66 == v67)
            {
              swift_bridgeObjectRelease_n();

              goto LABEL_59;
            }
            char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if (v68) {
              goto LABEL_60;
            }
            ++v42;
            if (v45 == v41) {
              goto LABEL_53;
            }
          }
          __break(1u);
LABEL_65:
          swift_bridgeObjectRetain();
        }
LABEL_53:
        swift_bridgeObjectRelease_n();
        v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v32, v33)) {
          goto LABEL_56;
        }
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        v35 = "Route outputs do not contain headphones";
        goto LABEL_55;
      }
      if (v71 == 1)
      {
        v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.info.getter();
        if (!os_log_type_enabled(v32, v33)) {
          goto LABEL_56;
        }
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        v35 = "Audio route change reason: new device available";
LABEL_55:
        _os_log_impl((void *)&_mh_execute_header, v32, v33, v35, v34, 2u);
        swift_slowDealloc();
LABEL_56:

LABEL_61:
        sub_1000BD62C();
      }
    }

    swift_release();
  }
}

uint64_t sub_1000BC4C8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = qword_1002EE5B8;
  swift_retain();
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030E930);
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a4, v13, 2u);
    swift_slowDealloc();
  }

  sub_1000BD62C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1000BC670()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1000AFBD4();
    if (v1 <= 0x3F)
    {
      sub_100022CC4(319, &qword_1002F3CB8, &qword_1002EF1E0);
      if (v2 <= 0x3F)
      {
        sub_100022CC4(319, (unint64_t *)&unk_1002F3CC0, &qword_1002EF048);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

BOOL sub_1000BC80C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v0 = v22;
  uint64_t v1 = *(void *)(v22 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    unint64_t v3 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = v0 + v2;
      uint64_t v6 = *(void *)(v0 + v2 + 88);
      if (*(void *)(v0 + v2 + 80) == 1 && (v6 & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        uint64_t v8 = *(void *)(v5 + 40);
        uint64_t v10 = *(void *)(v5 + 48);
        uint64_t v9 = *(void *)(v5 + 56);
        uint64_t v11 = *(void *)(v5 + 72);
        uint64_t v18 = *(void *)(v5 + 64);
        uint64_t v19 = *(void *)(v5 + 32);
        char v20 = *(unsigned char *)(v5 + 96);
        long long v21 = *(_OWORD *)(v5 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v12 = (id)v21;
        id v13 = *((id *)&v21 + 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v3 = sub_100202908(0, v3[2] + 1, 1, v3);
        }
        unint64_t v15 = v3[2];
        unint64_t v14 = v3[3];
        if (v15 >= v14 >> 1) {
          unint64_t v3 = sub_100202908((void *)(v14 > 1), v15 + 1, 1, v3);
        }
        v3[2] = v15 + 1;
        uint64_t v4 = &v3[11 * v15];
        v4[4] = v19;
        v4[5] = v8;
        v4[6] = v10;
        v4[7] = v9;
        uint64_t v0 = v22;
        v4[8] = v18;
        v4[9] = v11;
        v4[10] = 1;
        v4[11] = v6;
        *((unsigned char *)v4 + 96) = v20;
        *(_OWORD *)(v4 + 13) = v21;
      }
      v2 += 88;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = v3[2];
  swift_bridgeObjectRelease();
  return v16 < 2;
}

void sub_1000BC9F4(void *a1, char a2)
{
  if ((a2 & 0x40) != 0)
  {
    unint64_t v16 = (void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice);
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice);
    uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 8);
    uint64_t v20 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v22 = v16[4];
    uint64_t v21 = v16[5];
    os_log_type_t v23 = (void *)v16[9];
    uint64_t v24 = (void *)v16[10];
    uint64_t v94 = v16[8];
    uint64_t v95 = v16[7];
    uint64_t v101 = v16[6];
    sub_10001959C(v18, v17, v20, v19, v22, v21, v101, v95, v94, v23, v24);
    if (!v17) {
      goto LABEL_50;
    }
LABEL_15:
    uint64_t v25 = v18;
    uint64_t v26 = v20;
    uint64_t v27 = v25;
    uint64_t v28 = v21;
    uint64_t v29 = v22;
    uint64_t v87 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v92 = v23;
    id v30 = v23;
    v91 = v24;
    id v31 = v24;
    id v32 = [a1 availableInputs];
    if (v32)
    {
      os_log_type_t v33 = v32;
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v34 = 0;
    }
    uint64_t v35 = v26;
    uint64_t v36 = sub_1000C2A24(v26, v19, v101, v34);
    swift_bridgeObjectRelease();
    id v103 = v36;
    id v37 = v36;
    id v38 = [a1 availableOutputs];
    uint64_t v89 = v29;
    if (v38)
    {
      id v39 = v38;
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      unint64_t v40 = 0;
    }
    uint64_t v41 = v35;
    uint64_t v42 = v35;
    uint64_t v43 = v19;
    v44 = sub_1000C2A24(v42, v19, v101, v40);

    swift_bridgeObjectRelease();
    uint64_t v90 = v41;
    uint64_t v98 = v27;
    if (!v36)
    {
      id v103 = v44;
      if (!v44)
      {
        uint64_t v50 = 0;
        uint64_t v45 = 0;
        goto LABEL_28;
      }
      id v37 = v44;
    }
    sub_100007620(&qword_1002EE8A0);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1002488D0;
    id v46 = [v37 UID];
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v49 = v48;

    *(void *)(v45 + 32) = v47;
    *(void *)(v45 + 40) = v49;
    if (v44)
    {
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1002488D0;
      id v51 = [v44 UID];
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      *(void *)(v50 + 32) = v52;
      *(void *)(v50 + 40) = v54;
    }
    else
    {
      uint64_t v50 = 0;
    }
LABEL_28:
    uint64_t v88 = v43;
    if (qword_1002EE5B8 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_100011554(v55, (uint64_t)qword_10030E930);
    id v56 = v103;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v57 = v56;
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      id v104 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315650;
      if (v45)
      {
        uint64_t v61 = Array.debugDescription.getter();
        unint64_t v63 = v62;
      }
      else
      {
        uint64_t v61 = 0;
        unint64_t v63 = 0xE000000000000000;
      }
      sub_100202FD4(v61, v63, (uint64_t *)&v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      sub_100007620(&qword_1002F3F30);
      uint64_t v64 = Optional.debugDescription.getter();
      sub_100202FD4(v64, v65, (uint64_t *)&v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 22) = 2080;
      sub_100007620(&qword_1002F3F38);
      uint64_t v66 = Optional.debugDescription.getter();
      id v102 = (id)sub_100202FD4(v66, v67, (uint64_t *)&v104);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Preferred persistent input %s, and output %s with inputPort %s", (uint8_t *)v60, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    if (v45)
    {
      v68.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      if (v50)
      {
LABEL_38:
        v69.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    else
    {
      v68.super.isa = 0;
      if (v50) {
        goto LABEL_38;
      }
    }
    v69.super.isa = 0;
LABEL_41:
    id v104 = 0;
    unsigned int v70 = [a1 setPreferredPersistentInputUIDs:v68.super.isa outputUIDs:v69.super.isa error:&v104];

    id v71 = v104;
    if (v70)
    {
      swift_beginAccess();
      id v72 = v103;
      id v102 = 0;
      id v73 = v71;
      if ([a1 setPreferredInput:v103 error:&v102])
      {
        id v74 = v102;

        sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);
        sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);
      }
      else
      {
        id v76 = v102;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);

        sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);
      }
    }
    else
    {
      id v75 = v104;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);

      sub_1000194BC(v98, v87, v90, v88, v89, v28, v101, v95, v94, v92, v91);
    }
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (a2)
  {
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v18 = (uint64_t)v104;
    uint64_t v17 = v105;
    uint64_t v20 = v106;
    uint64_t v19 = v107;
    uint64_t v22 = v108;
    uint64_t v21 = v109;
    uint64_t v101 = v110;
    os_log_type_t v23 = v113;
    uint64_t v94 = v112;
    uint64_t v95 = v111;
    uint64_t v24 = v114;
    if (!v105) {
      goto LABEL_50;
    }
    goto LABEL_15;
  }
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 8);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 16);
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 24);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 32);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 40);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 48);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 56);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 64);
  id v13 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 72);
  unint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 80);
  if (!v105)
  {
    if (!v5)
    {
LABEL_49:
      uint64_t v18 = 0;
      uint64_t v20 = 0;
      uint64_t v19 = 0;
      uint64_t v22 = 0;
      uint64_t v21 = 0;
      uint64_t v101 = 0;
      uint64_t v94 = 0;
      uint64_t v95 = 0;
      os_log_type_t v23 = 0;
      uint64_t v24 = 0;
      goto LABEL_50;
    }
    goto LABEL_13;
  }
  if (!v5)
  {
LABEL_13:
    uint64_t v115 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice);
    uint64_t v116 = v5;
    uint64_t v117 = v6;
    uint64_t v118 = v7;
    uint64_t v119 = v8;
    uint64_t v120 = v9;
    uint64_t v121 = v10;
    uint64_t v122 = v11;
    uint64_t v123 = v12;
    v124 = v13;
    v125 = v14;
    sub_10001959C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
    sub_1000C2964((uint64_t)&v104);
    goto LABEL_14;
  }
  uint64_t v100 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 48);
  uint64_t v97 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice + 56);
  if (v106 == v6 && v107 == v7)
  {
    uint64_t v15 = v111;
    sub_1000194BC((uint64_t)v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114);
  }
  else
  {
    char v96 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v15 = v111;
    sub_1000194BC((uint64_t)v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114);
    if ((v96 & 1) == 0) {
      goto LABEL_14;
    }
  }
  if (v110 == v100 && v15 == v97) {
    goto LABEL_49;
  }
LABEL_14:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v18 = (uint64_t)v104;
  uint64_t v17 = v105;
  uint64_t v20 = v106;
  uint64_t v19 = v107;
  uint64_t v22 = v108;
  uint64_t v21 = v109;
  uint64_t v101 = v110;
  os_log_type_t v23 = v113;
  uint64_t v94 = v112;
  uint64_t v95 = v111;
  uint64_t v24 = v114;
  if (v105) {
    goto LABEL_15;
  }
LABEL_50:
  v93 = v23;
  if (qword_1002EE5B8 != -1) {
    swift_once();
  }
  uint64_t v77 = type metadata accessor for Logger();
  sub_100011554(v77, (uint64_t)qword_10030E930);
  v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v78, v79))
  {
    v80 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v80 = 0;
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "Preferred persistent reset, audioDevice is not defined", v80, 2u);
    swift_slowDealloc();
  }

  id v104 = 0;
  unsigned int v81 = [a1 setPreferredPersistentInputUIDs:0 outputUIDs:0 error:&v104];
  id v82 = v104;
  if (v81
    && (id v104 = 0,
        id v83 = v82,
        unsigned int v84 = [a1 setPreferredInput:0 error:&v104],
        id v82 = v104,
        v84))
  {
    id v85 = v104;
  }
  else
  {
    id v86 = v82;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  sub_1000194BC(v18, 0, v20, v19, v22, v21, v101, v95, v94, v93, v24);
}

uint64_t sub_1000BD62C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + 32);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1000C3DF0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CCED8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v13 = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_1000BD8E8()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_lastDeviceDiscovery;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
    Date.timeIntervalSinceNow.getter();
    double v7 = v6;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    if (v7 <= -0.1)
    {
      static Date.now.getter();
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v1 + 40))(v5, v3, v0);
      swift_endAccess();
      id v12 = [objc_allocWithZone((Class)AVOutputDeviceDiscoverySession) initWithDeviceFeatures:1];
      [v12 setDiscoveryMode:1];
      id v13 = [v12 availableOutputDevices];
      sub_10000B0CC(0, &qword_1002F3F28);
      uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (qword_1002EE5B8 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100011554(v15, (uint64_t)qword_10030E930);
      swift_bridgeObjectRetain_n();
      unint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v23 = v12;
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        v25[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v19 = Array.description.getter();
        unint64_t v21 = v20;
        swift_bridgeObjectRelease();
        uint64_t v24 = sub_100202FD4(v19, v21, v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v12 = v23;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "availableOutputDevices: %s", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_1000BDD78(v14);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1002EE5B8 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100011554(v8, (uint64_t)qword_10030E930);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v9, v10))
      {
        swift_release();

        return;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Throttling device discovery", v11, 2u);
      swift_slowDealloc();
    }
    swift_release();
  }
}

uint64_t sub_1000BDD78(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  os_log_type_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1000C28FC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CCE88;
  id v12 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000C291C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v15);
}

uint64_t sub_1000BE054(uint64_t a1, uint8_t *a2)
{
  v344 = a2;
  uint64_t v337 = type metadata accessor for UUID();
  unint64_t v3 = *(void *)(v337 - 8);
  __chkstk_darwin(v337);
  v336 = (uint8_t *)v320 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  v353 = (uint8_t *)v320 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE5B8 != -1) {
    goto LABEL_159;
  }
  while (1)
  {
    uint64_t v7 = type metadata accessor for Logger();
    v346 = (uint8_t *)sub_100011554(v7, (uint64_t)qword_10030E930);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Updating available audio devices", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = *(void **)(a1 + 40);
    id v12 = [v11 availableInputs];
    if (v12)
    {
      id v13 = v12;
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      uint64_t v14 = (uint8_t *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v14 = (uint8_t *)_swiftEmptyArrayStorage;
    }
    id v15 = [v11 availableOutputs];
    if (v15)
    {
      unint64_t v16 = v15;
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
      os_log_type_t v17 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      os_log_type_t v17 = _swiftEmptyArrayStorage;
    }
    v356 = v14;
    sub_1001D0670((unint64_t)v17);
    unint64_t v18 = (unint64_t)v356;
    v338 = (uint8_t **)(a1 + 16);
    swift_beginAccess();
    *(void *)(a1 + 16) = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    if ((unint64_t)v344 >> 62) {
      break;
    }
    uint64_t v19 = *(void *)(((unint64_t)v344 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v343 = a1;
    if (!v19) {
      goto LABEL_161;
    }
LABEL_12:
    DWORD2(v334) = 0;
    unint64_t v21 = 0;
    uint64_t v321 = a1 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice;
    *((void *)&v345 + 1) = (unint64_t)v344 & 0xC000000000000001;
    v340 = v344 + 32;
    uint64_t v341 = (unint64_t)v344 & 0xFFFFFFFFFFFFFF8;
    AVAudioSessionPort v351 = AVAudioSessionPortHeadsetMic;
    uint64_t v22 = v18 & 0xFFFFFFFFFFFFFF8;
    unint64_t v339 = v18 & 0xFFFFFFFFFFFFFF8;
    if ((v18 & 0x8000000000000000) != 0) {
      uint64_t v22 = v18;
    }
    v320[1] = v22;
    unint64_t v354 = v18 & 0xC000000000000001;
    AVAudioSessionPort v349 = AVAudioSessionPortHeadphones;
    v335 = (void (**)(void *, uint64_t))(v3 + 8);
    AVAudioSessionPort v331 = AVAudioSessionPortBuiltInMic;
    v320[2] = (char *)&v371 + 8;
    AVAudioSessionPort v350 = AVAudioSessionPortBluetoothA2DP;
    AVAudioSessionPort v348 = AVAudioSessionPortBluetoothHFP;
    unint64_t v322 = (unint64_t)"er.DetailedDeviceDiscovery";
    *(void *)&long long v20 = 136315138;
    long long v333 = v20;
    v320[3] = (char *)&type metadata for Any + 8;
    long long v329 = xmmword_1002488D0;
    long long v330 = xmmword_10024E780;
    long long v323 = 0x8000100uLL;
    uint64_t v355 = v18;
    v342 = (uint8_t *)v19;
    while (1)
    {
LABEL_18:
      if (*((void *)&v345 + 1))
      {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v21 >= *(void *)(v341 + 16)) {
          goto LABEL_155;
        }
        id v23 = *(id *)&v340[8 * v21];
      }
      uint64_t v24 = v23;
      if (__OFADD__(v21++, 1)) {
        goto LABEL_154;
      }
      id v26 = [v23 deviceType];
      if (v26 == (id)1) {
        break;
      }
      if (v26 != (id)3)
      {
        if (v26 != (id)4)
        {
          id v39 = Logger.logObject.getter();
          os_log_type_t v40 = static os_log_type_t.info.getter();
          unint64_t v3 = v40;
          if (!os_log_type_enabled(v39, v40)) {
            goto LABEL_119;
          }
          uint64_t v41 = v24;
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          uint64_t v43 = v39;
          os_log_type_t v44 = v3;
          uint64_t v45 = "Discovered device that is not a headphone or builtIn";
LABEL_39:
          _os_log_impl((void *)&_mh_execute_header, v43, v44, v45, v42, 2u);
          swift_slowDealloc();

          goto LABEL_17;
        }
        if ([v24 deviceSubType] != (id)2 && objc_msgSend(v24, "deviceSubType") != (id)3)
        {
          id v39 = Logger.logObject.getter();
          os_log_type_t v182 = static os_log_type_t.info.getter();
          unint64_t v3 = v182;
          if (!os_log_type_enabled(v39, v182))
          {
LABEL_119:

            goto LABEL_17;
          }
          uint64_t v41 = v24;
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          uint64_t v43 = v39;
          os_log_type_t v44 = v3;
          uint64_t v45 = "Discovered wired non-headphone device";
          goto LABEL_39;
        }
        v347 = v24;
        id v27 = [v24 deviceName];
        if (v27)
        {
          uint64_t v28 = v27;
          uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v3 = v30;
        }
        else
        {
          unint64_t v3 = 0xEA00000000007365;
          uint64_t v29 = 0x6E6F687064616548;
        }
        v356 = (uint8_t *)v29;
        uint64_t v357 = v3;
        *(void *)&long long v371 = 59;
        *((void *)&v371 + 1) = 0xE100000000000000;
        sub_10000C350();
        uint64_t v101 = (void *)StringProtocol.components<A>(separatedBy:)();
        if (!v101[2]) {
          goto LABEL_156;
        }
        uint64_t v102 = v101[4];
        *((void *)&v352 + 1) = v101[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v345 = v21;
        *(void *)&long long v352 = v102;
        if (!(v18 >> 62))
        {
          unint64_t v3 = *(void *)(v339 + 16);
          swift_bridgeObjectRetain_n();
          if (v3) {
            goto LABEL_67;
          }
          goto LABEL_144;
        }
        swift_bridgeObjectRetain_n();
        unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3)
        {
LABEL_144:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          unint64_t v3 = v347;
          v220 = Logger.logObject.getter();
          os_log_type_t v221 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v220, v221))
          {
            uint64_t v222 = swift_slowAlloc();
            v356 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v222 = v333;
            id v223 = [(id)v3 debugDescription];
            uint64_t v224 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v226 = v225;

            *(void *)(v222 + 4) = sub_100202FD4(v224, v226, (uint64_t *)&v356);
            unint64_t v18 = v355;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v220, v221, "Found no port match for %s", (uint8_t *)v222, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          a1 = v343;
          goto LABEL_16;
        }
LABEL_67:
        uint64_t v103 = 4;
        while (1)
        {
          if (v354) {
            id v111 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v111 = *(id *)(v18 + 8 * v103);
          }
          uint64_t v112 = v111;
          a1 = v103 - 3;
          if (__OFADD__(v103 - 4, 1)) {
            goto LABEL_151;
          }
          id v113 = [v111 portType];
          uint64_t v114 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v116 = v115;
          if (v114 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v116 == v117)
          {

            swift_bridgeObjectRelease_n();
            unint64_t v18 = v355;
          }
          else
          {
            char v119 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v18 = v355;
            if ((v119 & 1) == 0) {
              goto LABEL_70;
            }
          }
          id v104 = [v112 portName];
          uint64_t v105 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v107 = v106;

          v356 = v105;
          uint64_t v357 = v107;
          long long v371 = v352;
          uint64_t v108 = type metadata accessor for Locale();
          uint64_t v109 = (uint64_t)v353;
          (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v353, 1, 1, v108);
          StringProtocol.range<A>(of:options:range:locale:)();
          LOBYTE(v104) = v110;
          sub_10000B070(v109, (uint64_t *)&unk_1002F4110);
          swift_bridgeObjectRelease();
          if ((v104 & 1) == 0)
          {
LABEL_112:
            swift_bridgeObjectRelease_n();
            id v156 = v112;
            v157 = v347;
            v158 = (uint8_t *)sub_1000C3898(v347);
            uint64_t v160 = v159;
            v161 = (uint8_t *)[v157 deviceSubType];
            id v162 = [v156 portType];
            id v163 = v156;
            v164 = v336;
            UUID.init()();
            v165 = (uint8_t *)UUID.uuidString.getter();
            uint64_t v167 = v166;
            (*v335)(v164, v337);
            v326 = v165;
            v327 = v161;
            v394[0] = v165;
            v394[1] = v167;
            long long v395 = v352;
            v328 = v158;
            v396 = v158;
            uint64_t v397 = v160;
            uint64_t v398 = 4;
            v399 = v161;
            char v400 = 1;
            id v401 = v162;
            id v402 = v163;
            swift_beginAccess();
            *(void *)&long long v334 = v167;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            *((void *)&v334 + 1) = v160;
            swift_bridgeObjectRetain();
            *(void *)&long long v332 = v162;
            *((void *)&v332 + 1) = v163;
            sub_100195C64((uint64_t)&v356, v394);
            swift_endAccess();
            v168 = *(void **)&v362[8];

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(v356) = 1;
            a1 = v343;
            swift_retain();
            static Published.subscript.setter();
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            uint64_t v169 = v357;
            sub_1000194BC((uint64_t)v356, v357, v358, *((uint64_t *)&v358 + 1), (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
            uint64_t v19 = (uint64_t)v342;
            unint64_t v21 = v345;
            if (!v169)
            {
              uint64_t KeyPath = swift_getKeyPath();
              *(void *)&long long v324 = swift_getKeyPath();
              v356 = v326;
              uint64_t v357 = v334;
              unint64_t v170 = *((void *)&v352 + 1);
              long long v358 = v352;
              v359 = v328;
              uint64_t v360 = *((void *)&v334 + 1);
              *(void *)&long long v361 = 4;
              *((void *)&v361 + 1) = v327;
              *(void *)v362 = 1;
              long long v171 = v332;
              *(_OWORD *)&v362[8] = v332;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v172 = (id)v171;
              id v173 = *((id *)&v171 + 1);
              static Published.subscript.setter();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v174 = v172;
              v175 = (uint8_t *)v173;
              v176 = Logger.logObject.getter();
              os_log_type_t v177 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v176, v177))
              {
                uint64_t v178 = swift_slowAlloc();
                v326 = v175;
                v179 = (uint8_t *)v178;
                v180 = (uint8_t *)swift_slowAlloc();
                v327 = v179;
                v328 = v180;
                v356 = v180;
                *(_DWORD *)v179 = v333;
                swift_bridgeObjectRetain();
                *(void *)&long long v371 = sub_100202FD4(v352, v170, (uint64_t *)&v356);
                uint64_t v19 = (uint64_t)v342;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                _os_log_impl((void *)&_mh_execute_header, v176, v177, "Set ownerAudioDevice to %s", v327, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            v207 = Logger.logObject.getter();
            os_log_type_t v211 = static os_log_type_t.info.getter();
            unint64_t v3 = v211;
            if (os_log_type_enabled(v207, v211))
            {
              v212 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v212 = 0;
              _os_log_impl((void *)&_mh_execute_header, v207, (os_log_type_t)v3, "Discovered wired headphones", v212, 2u);
              swift_slowDealloc();

              unint64_t v3 = *((void *)&v332 + 1);
              v210 = (void *)v332;
LABEL_136:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v213 = (void *)*((void *)&v332 + 1);
            }
            goto LABEL_138;
          }
LABEL_70:

          ++v103;
          if (a1 == v3)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRetain_n();
            uint64_t v140 = 4;
            while (1)
            {
              if (v354) {
                id v148 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v148 = *(id *)(v18 + 8 * v140);
              }
              uint64_t v112 = v148;
              a1 = v140 - 3;
              if (__OFADD__(v140 - 4, 1)) {
                goto LABEL_153;
              }
              id v149 = [v148 portType];
              uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v152 = v151;
              if (v150 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v152 == v153) {
                break;
              }
              char v155 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v18 = v355;
              if (v155) {
                goto LABEL_100;
              }
LABEL_101:

              ++v140;
              if (a1 == v3) {
                goto LABEL_144;
              }
            }

            swift_bridgeObjectRelease_n();
            unint64_t v18 = v355;
LABEL_100:
            id v141 = [v112 portName];
            v142 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v144 = v143;

            v356 = v142;
            uint64_t v357 = v144;
            long long v371 = v352;
            uint64_t v145 = type metadata accessor for Locale();
            uint64_t v146 = (uint64_t)v353;
            (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v353, 1, 1, v145);
            StringProtocol.range<A>(of:options:range:locale:)();
            LOBYTE(v141) = v147;
            sub_10000B070(v146, (uint64_t *)&unk_1002F4110);
            swift_bridgeObjectRelease();
            if ((v141 & 1) == 0) {
              goto LABEL_112;
            }
            goto LABEL_101;
          }
        }
      }
      if ([v24 deviceSubType])
      {
        unint64_t v3 = v24;
        id v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v31, v32))
        {
          unint64_t v33 = v21;
          uint64_t v34 = swift_slowAlloc();
          *(_DWORD *)uint64_t v34 = v323;
          *(void *)(v34 + 4) = [(id)v3 deviceSubType];

          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Discovered builtIn non-standard device subType: %ld", (uint8_t *)v34, 0xCu);
          unint64_t v21 = v33;
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_17;
      }
      id v46 = (uint8_t *)sub_1000C3898(v24);
      unint64_t v3 = v47;
      v356 = v46;
      uint64_t v357 = v47;
      *(void *)&long long v371 = 46;
      *((void *)&v371 + 1) = 0xE100000000000000;
      sub_10000C350();
      uint64_t v48 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (!v48[2]) {
        goto LABEL_158;
      }
      v347 = v24;
      *(void *)&long long v345 = v21;
      uint64_t v49 = v48[4];
      unint64_t v50 = v48[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      id v51 = sub_1000C2A24(v49, v50, 3, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v51)
      {
        uint64_t v52 = self;
        id v53 = v51;
        *((void *)&v352 + 1) = v51;
        id v54 = v53;
        id v55 = [v52 currentDevice];
        id v56 = [v55 name];

        uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)&long long v352 = v57;
        uint64_t v59 = v58;

        id v60 = v54;
        uint64_t v61 = v331;
        unint64_t v62 = v336;
        UUID.init()();
        uint64_t v63 = UUID.uuidString.getter();
        *(void *)&long long v334 = v63;
        uint64_t v65 = v64;
        (*v335)(v62, v337);
        v389[0] = v63;
        v389[1] = v65;
        v389[2] = v57;
        v389[3] = v59;
        v389[4] = v46;
        v389[5] = v3;
        long long v390 = v330;
        char v391 = 3;
        v392 = v61;
        id v393 = v60;
        uint64_t v66 = v338;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *((void *)&v332 + 1) = v61;
        id v67 = v60;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v370 = *v66;
        *uint64_t v66 = (uint8_t *)0x8000000000000000;
        sub_1000C244C((uint64_t)v389, isUniquelyReferenced_nonNull_native, (uint64_t)&v356);
        *uint64_t v66 = v370;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1000194BC((uint64_t)v356, v357, v358, *((uint64_t *)&v358 + 1), (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
        uint64_t v69 = v321;
        uint64_t v70 = *(void *)v321;
        uint64_t v71 = *(void *)(v321 + 8);
        uint64_t v72 = *(void *)(v321 + 16);
        *(void *)&long long v332 = *(void *)(v321 + 24);
        id v73 = *(uint8_t **)(v321 + 32);
        v327 = *(uint8_t **)(v321 + 40);
        v328 = v73;
        id v74 = *(uint8_t **)(v321 + 48);
        uint64_t KeyPath = *(void *)(v321 + 56);
        v326 = v74;
        long long v324 = *(_OWORD *)(v321 + 64);
        id v75 = *(void **)(v321 + 80);
        *(void *)uint64_t v321 = v334;
        *(void *)(v69 + 8) = v65;
        *(void *)(v69 + 16) = v352;
        *(void *)(v69 + 24) = v59;
        *(void *)(v69 + 32) = v46;
        *(void *)(v69 + 40) = v3;
        *(_OWORD *)(v69 + 48) = v330;
        *(void *)(v69 + 64) = 3;
        uint64_t v76 = *((void *)&v352 + 1);
        *(void *)(v69 + 72) = v331;
        *(void *)(v69 + 80) = v76;
        *(void *)&long long v352 = v65;
        swift_bridgeObjectRetain();
        *((void *)&v352 + 1) = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v77 = *((id *)&v332 + 1);
        id v78 = v67;
        sub_1000194BC(v70, v71, v72, v332, (uint64_t)v328, (uint64_t)v327, (uint64_t)v326, KeyPath, v324, *((void **)&v324 + 1), v75);
        os_log_type_t v79 = Logger.logObject.getter();
        os_log_type_t v80 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v79, v80))
        {
          unsigned int v81 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned int v81 = 0;
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "Discovered builtIn device", v81, 2u);
          swift_slowDealloc();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        a1 = v343;
        unint64_t v18 = v355;
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      unint64_t v3 = v347;
      v205 = Logger.logObject.getter();
      os_log_type_t v206 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v205, v206))
      {
LABEL_142:
        uint64_t v215 = swift_slowAlloc();
        v356 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v215 = v333;
        id v216 = [(id)v3 debugDescription];
        uint64_t v217 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v219 = v218;

        *(void *)(v215 + 4) = sub_100202FD4(v217, v219, (uint64_t *)&v356);
        unint64_t v18 = v355;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v205, v206, "Found no port match for %s", (uint8_t *)v215, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_16;
      }
LABEL_15:

LABEL_16:
      uint64_t v19 = (uint64_t)v342;
      unint64_t v21 = v345;
LABEL_17:
      if (v21 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((BYTE8(v334) & 1) == 0) {
          goto LABEL_162;
        }
        goto LABEL_165;
      }
    }
    if ([v24 deviceSubType] != (id)2 && objc_msgSend(v24, "deviceSubType") != (id)3)
    {
      id v39 = Logger.logObject.getter();
      os_log_type_t v181 = static os_log_type_t.info.getter();
      unint64_t v3 = v181;
      if (!os_log_type_enabled(v39, v181)) {
        goto LABEL_119;
      }
      uint64_t v41 = v24;
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v42 = 0;
      uint64_t v43 = v39;
      os_log_type_t v44 = v3;
      uint64_t v45 = "Discovered Bluetooth non-headphone device";
      goto LABEL_39;
    }
    v347 = v24;
    id v35 = [v24 deviceName];
    if (v35)
    {
      uint64_t v36 = v35;
      id v37 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v3 = v38;
    }
    else
    {
      unint64_t v3 = v322 | 0x8000000000000000;
      id v37 = (uint8_t *)0xD000000000000014;
    }
    v356 = v37;
    uint64_t v357 = v3;
    *(void *)&long long v371 = 59;
    *((void *)&v371 + 1) = 0xE100000000000000;
    sub_10000C350();
    id v82 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v82[2]) {
      goto LABEL_157;
    }
    uint64_t v83 = v82[4];
    *((void *)&v352 + 1) = v82[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v345 = v21;
    *(void *)&long long v352 = v83;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3)
      {
LABEL_141:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        unint64_t v3 = v347;
        v205 = Logger.logObject.getter();
        os_log_type_t v206 = static os_log_type_t.info.getter();
        BOOL v214 = os_log_type_enabled(v205, v206);
        a1 = v343;
        if (v214) {
          goto LABEL_142;
        }
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v3 = *(void *)(v339 + 16);
      swift_bridgeObjectRetain_n();
      if (!v3) {
        goto LABEL_141;
      }
    }
    uint64_t v84 = 4;
    while (1)
    {
      id v92 = v354 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v18 + 8 * v84);
      v93 = v92;
      a1 = v84 - 3;
      if (__OFADD__(v84 - 4, 1)) {
        break;
      }
      id v94 = [v92 portType];
      uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v97 = v96;
      BOOL v99 = v95 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v97 == v98;
      if (v99)
      {

        swift_bridgeObjectRelease_n();
        unint64_t v18 = v355;
      }
      else
      {
        char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v18 = v355;
        if ((v100 & 1) == 0) {
          goto LABEL_52;
        }
      }
      id v85 = [v93 portName];
      id v86 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v88 = v87;

      v356 = v86;
      uint64_t v357 = v88;
      long long v371 = v352;
      uint64_t v89 = type metadata accessor for Locale();
      uint64_t v90 = (uint64_t)v353;
      (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v353, 1, 1, v89);
      StringProtocol.range<A>(of:options:range:locale:)();
      LOBYTE(v85) = v91;
      sub_10000B070(v90, (uint64_t *)&unk_1002F4110);
      swift_bridgeObjectRelease();
      if ((v85 & 1) == 0)
      {
LABEL_95:
        swift_bridgeObjectRelease_n();
        id v136 = v93;
        v137 = (void *)MRAVOutputDeviceCreateFromAVOutputDevice();
        unint64_t v21 = v345;
        if (v137
          && (v138 = v137,
              unsigned __int8 v139 = [v137 isAirpodsDevice],
              v138,
              (v139 & 1) != 0))
        {
          *(void *)&long long v332 = 0;
        }
        else
        {
          *(void *)&long long v332 = 2;
        }
        v183 = (uint8_t *)sub_1000C3898(v347);
        uint64_t v185 = v184;
        id v186 = [v136 portType];
        id v187 = v136;
        v188 = v336;
        UUID.init()();
        v189 = (uint8_t *)UUID.uuidString.getter();
        uint64_t v191 = v190;
        (*v335)(v188, v337);
        v327 = v189;
        v328 = v183;
        v381[0] = v189;
        v381[1] = v191;
        long long v382 = v352;
        v383 = v183;
        uint64_t v384 = v185;
        long long v385 = v329;
        char v386 = v332;
        id v387 = v186;
        id v388 = v187;
        swift_beginAccess();
        *(void *)&long long v334 = v191;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        *((void *)&v334 + 1) = v185;
        swift_bridgeObjectRetain();
        *((void *)&v332 + 1) = v186;
        id v192 = v187;
        a1 = v343;
        char v193 = swift_isUniquelyReferenced_nonNull_native();
        v370 = *(uint8_t **)(a1 + 16);
        *(void *)(a1 + 16) = 0x8000000000000000;
        sub_1000C244C((uint64_t)v381, v193, (uint64_t)&v356);
        *(void *)(a1 + 16) = v370;
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1000194BC((uint64_t)v356, v357, v358, *((uint64_t *)&v358 + 1), (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
        swift_getKeyPath();
        swift_getKeyPath();
        LOBYTE(v356) = 1;
        swift_retain();
        static Published.subscript.setter();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v194 = v357;
        sub_1000194BC((uint64_t)v356, v357, v358, *((uint64_t *)&v358 + 1), (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
        uint64_t v19 = (uint64_t)v342;
        if (!v194)
        {
          v326 = (uint8_t *)swift_getKeyPath();
          uint64_t KeyPath = swift_getKeyPath();
          v356 = v327;
          uint64_t v357 = v334;
          unint64_t v195 = *((void *)&v352 + 1);
          long long v358 = v352;
          v359 = v328;
          uint64_t v360 = *((void *)&v334 + 1);
          long long v361 = v329;
          v196 = (void *)*((void *)&v332 + 1);
          *(_OWORD *)v362 = v332;
          *(void *)&v362[16] = v192;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v197 = v196;
          *(void *)&long long v332 = v192;
          id v198 = v192;
          swift_retain();
          static Published.subscript.setter();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v199 = (uint8_t *)v197;
          v200 = (uint8_t *)v198;
          v201 = Logger.logObject.getter();
          os_log_type_t v202 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v201, v202))
          {
            uint64_t v203 = swift_slowAlloc();
            v327 = v199;
            v204 = (uint8_t *)v203;
            v328 = (uint8_t *)swift_slowAlloc();
            v356 = v328;
            v326 = v200;
            *(_DWORD *)v204 = v333;
            swift_bridgeObjectRetain();
            *(void *)&long long v371 = sub_100202FD4(v352, v195, (uint64_t *)&v356);
            uint64_t v19 = (uint64_t)v342;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v201, v202, "Set ownerAudioDevice to %s", v204, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          a1 = v343;
          id v192 = (id)v332;
        }
        v207 = Logger.logObject.getter();
        os_log_type_t v208 = static os_log_type_t.info.getter();
        unint64_t v3 = v208;
        if (os_log_type_enabled(v207, v208))
        {
          v209 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v209 = 0;
          _os_log_impl((void *)&_mh_execute_header, v207, (os_log_type_t)v3, "Discovered Bluetooth headphones", v209, 2u);
          swift_slowDealloc();

          v210 = (void *)*((void *)&v332 + 1);
          goto LABEL_136;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

LABEL_138:
        DWORD2(v334) = 1;
        if (v21 == v19)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_165;
        }
        goto LABEL_18;
      }
LABEL_52:

      ++v84;
      if (a1 == v3)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRetain_n();
        uint64_t v120 = 4;
        while (1)
        {
          if (v354) {
            id v128 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v128 = *(id *)(v18 + 8 * v120);
          }
          v93 = v128;
          a1 = v120 - 3;
          if (__OFADD__(v120 - 4, 1)) {
            goto LABEL_152;
          }
          id v129 = [v128 portType];
          uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v132 = v131;
          if (v130 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v132 == v133) {
            break;
          }
          char v135 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v18 = v355;
          if (v135) {
            goto LABEL_83;
          }
LABEL_84:

          ++v120;
          if (a1 == v3) {
            goto LABEL_141;
          }
        }

        swift_bridgeObjectRelease_n();
        unint64_t v18 = v355;
LABEL_83:
        id v121 = [v93 portName];
        uint64_t v122 = (uint8_t *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v124 = v123;

        v356 = v122;
        uint64_t v357 = v124;
        long long v371 = v352;
        uint64_t v125 = type metadata accessor for Locale();
        uint64_t v126 = (uint64_t)v353;
        (*(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v353, 1, 1, v125);
        StringProtocol.range<A>(of:options:range:locale:)();
        LOBYTE(v121) = v127;
        sub_10000B070(v126, (uint64_t *)&unk_1002F4110);
        swift_bridgeObjectRelease();
        if ((v121 & 1) == 0) {
          goto LABEL_95;
        }
        goto LABEL_84;
      }
    }
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v343 = a1;
  if (v19) {
    goto LABEL_12;
  }
LABEL_161:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_162:
  v227 = Logger.logObject.getter();
  os_log_type_t v228 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v227, v228))
  {
    v229 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v229 = 0;
    _os_log_impl((void *)&_mh_execute_header, v227, v228, "Did not discover headphones", v229, 2u);
    swift_slowDealloc();
  }

  sub_1000C0FF4();
LABEL_165:
  uint64_t v230 = swift_bridgeObjectRetain();
  v231 = (uint8_t *)sub_1002256D0(v230);
  swift_bridgeObjectRelease();
  v356 = v231;
  swift_retain();
  sub_1000C1800((uint64_t *)&v356);
  swift_release();
  v232 = v356;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v233 = sub_1000E5D48((uint64_t)v356, (uint64_t)v232);
  swift_bridgeObjectRelease();
  if (v233) {
    return swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v356 = v232;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v357) {
    goto LABEL_207;
  }
  *(void *)&long long v333 = v357;
  AVAudioSessionPort v331 = (AVAudioSessionPort)v356;
  long long v332 = v358;
  v336 = v359;
  uint64_t v337 = v360;
  long long v334 = v361;
  *(void *)&long long v330 = *(void *)v362;
  v328 = *(uint8_t **)&v362[16];
  *(void *)&long long v329 = *(void *)&v362[8];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v235 = v356;
  v236 = (NSString *)*((void *)v356 + 2);
  v335 = 0;
  if (!v236)
  {
    v297 = 0;
    uint64_t v265 = 0;
    v353 = 0;
    uint64_t v259 = 0;
    v346 = 0;
    v347 = 0;
    uint64_t v264 = 0;
    AVAudioSessionPort v348 = 0;
    uint64_t v269 = 0;
    *((void *)&v345 + 1) = 0;
    uint64_t v268 = 0;
    goto LABEL_185;
  }
  swift_bridgeObjectRetain();
  v237 = 0;
  v342 = v235;
  while (2)
  {
    AVAudioSessionPort v349 = v237;
    AVAudioSessionPort v350 = v236;
    v238 = (char *)v237 + (void)v235;
    v239 = (uint8_t *)*((void *)v238 + 4);
    unint64_t v240 = *((void *)v238 + 5);
    uint64_t v241 = *((void *)v238 + 7);
    v353 = (uint8_t *)*((void *)v238 + 6);
    v242 = (uint8_t *)*((void *)v238 + 8);
    uint64_t v243 = *((void *)v238 + 9);
    AVAudioSessionPort v348 = (AVAudioSessionPort)*((void *)v238 + 10);
    v244 = (void *)*((void *)v238 + 11);
    v346 = v242;
    v347 = v244;
    v246 = (void *)*((void *)v238 + 13);
    v245 = (void *)*((void *)v238 + 14);
    uint64_t v247 = v238[96];
    v344 = v239;
    *(void *)&long long v345 = v247;
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v354 = v240;
    swift_bridgeObjectRetain_n();
    uint64_t v355 = v241;
    swift_bridgeObjectRetain_n();
    *((void *)&v352 + 1) = v243;
    swift_bridgeObjectRetain_n();
    *((void *)&v345 + 1) = v246;
    id v248 = v246;
    id v249 = v245;
    *(void *)&long long v352 = v248;
    AVAudioSessionPort v351 = (AVAudioSessionPort)v249;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    v250 = v356;
    uint64_t v251 = v357;
    long long v252 = v358;
    uint64_t v254 = (uint64_t)v359;
    uint64_t v253 = v360;
    long long v255 = v361;
    uint64_t v256 = *(void *)v362;
    v257 = *(void **)&v362[8];
    v258 = *(void **)&v362[16];
    if (v357)
    {
      uint64_t v341 = (uint64_t)v245;
      if (v358 == __PAIR128__(v355, (unint64_t)v353))
      {
        uint64_t v259 = v355;
        v261 = (void *)*((void *)&v361 + 1);
        uint64_t v260 = v361;
        sub_1000194BC((uint64_t)v356, v357, (uint64_t)v353, v355, (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
        AVAudioSessionPort v262 = v351;

        v263 = (void *)v352;
        uint64_t v264 = *((void *)&v352 + 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v265 = v354;
        swift_bridgeObjectRelease();
        v235 = v342;
LABEL_177:
        BOOL v99 = v348 == (AVAudioSessionPort)v260;
        a1 = v343;
        if (v99 && v347 == v261)
        {
          v297 = v344;
          goto LABEL_183;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v266 = *((void *)&v361 + 1);
        v338 = (uint8_t **)v361;
        unint64_t v339 = v360;
        LODWORD(v340) = _stringCompareWithSmolCheck(_:_:expecting:)();
        v319 = v258;
        uint64_t v260 = (uint64_t)v338;
        uint64_t v267 = v251;
        v261 = (void *)v266;
        sub_1000194BC((uint64_t)v250, v267, v252, *((uint64_t *)&v252 + 1), v254, v339, (uint64_t)v338, v266, v256, v257, v319);
        AVAudioSessionPort v262 = v351;

        v263 = (void *)v352;
        uint64_t v264 = *((void *)&v352 + 1);
        swift_bridgeObjectRelease();
        uint64_t v259 = v355;
        swift_bridgeObjectRelease();
        uint64_t v265 = v354;
        swift_bridgeObjectRelease();
        v235 = v342;
        if (v340) {
          goto LABEL_177;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v343;
      }
    }
    else
    {
      v356 = v344;
      uint64_t v357 = v354;
      *(void *)&long long v358 = v353;
      *((void *)&v358 + 1) = v355;
      v359 = v346;
      uint64_t v360 = *((void *)&v352 + 1);
      *(void *)&long long v361 = v348;
      *((void *)&v361 + 1) = v347;
      *(_OWORD *)v362 = v345;
      *(void *)&v362[16] = v245;
      v363 = v250;
      uint64_t v364 = 0;
      long long v365 = v252;
      *(void *)&long long v366 = v254;
      *((void *)&v366 + 1) = v253;
      long long v367 = v255;
      *(void *)&long long v368 = v256;
      *((void *)&v368 + 1) = v257;
      v369 = v258;
      sub_1000C2964((uint64_t)&v356);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v235 = v342;
      a1 = v343;
    }
    v237 = v349 + 11;
    v236 = (AVAudioSessionPort)((char *)v350 - 1);
    if (v350 != (AVAudioSessionPort)1) {
      continue;
    }
    break;
  }
  v297 = 0;
  uint64_t v265 = 0;
  v353 = 0;
  uint64_t v259 = 0;
  v346 = 0;
  v347 = 0;
  uint64_t v264 = 0;
  AVAudioSessionPort v348 = 0;
  long long v345 = 0uLL;
  uint64_t v341 = 0;
LABEL_183:
  swift_bridgeObjectRelease();
  uint64_t v268 = v341;
  uint64_t v269 = v345;
LABEL_185:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v356 = v297;
  uint64_t v357 = v265;
  *(void *)&long long v358 = v353;
  *((void *)&v358 + 1) = v259;
  v359 = v346;
  uint64_t v360 = v264;
  *(void *)&long long v361 = v348;
  *((void *)&v361 + 1) = v347;
  *(void *)v362 = v269;
  *(void *)&v362[8] = *((void *)&v345 + 1);
  *(void *)&v362[16] = v268;
  swift_retain();
  static Published.subscript.setter();
  v271 = sub_1000BA9A8(&v356);
  if (v270[1])
  {
    uint64_t v272 = v337;
    v270[4] = v336;
    v270[5] = v272;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  ((void (*)(uint8_t **, void))v271)(&v356, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v273 = v357;
  sub_1000194BC((uint64_t)v356, v357, v358, *((uint64_t *)&v358 + 1), (uint64_t)v359, v360, v361, *((uint64_t *)&v361 + 1), *(uint64_t *)v362, *(void **)&v362[8], *(void **)&v362[16]);
  if (!v273)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v356 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      v274 = v356;
      v275 = (uint8_t *)*((void *)v356 + 2);
      if (v275)
      {
        uint64_t v276 = 0;
        uint64_t v277 = a1 + OBJC_IVAR____TtC17SequoiaTranslator12DeviceHelper_builtInAudioDevice;
        v353 = v356;
        while (1)
        {
          uint64_t v278 = *(void *)&v274[v276 + 32];
          v279 = *(NSString **)&v274[v276 + 48];
          unint64_t v354 = *(void *)&v274[v276 + 40];
          v280 = *(void **)&v274[v276 + 56];
          *(void *)&long long v352 = *(void *)&v274[v276 + 64];
          *((void *)&v352 + 1) = v278;
          v281 = *(NSString **)&v274[v276 + 80];
          uint64_t v355 = *(void *)&v274[v276 + 72];
          uint64_t v282 = *(void *)&v274[v276 + 88];
          v284 = *(void **)&v274[v276 + 104];
          AVAudioSessionPort v283 = *(AVAudioSessionPort *)&v274[v276 + 112];
          v285 = (NSString *)v274[v276 + 96];
          v286 = *(NSString **)(v277 + 16);
          v287 = *(void **)(v277 + 24);
          v289 = *(NSString **)(v277 + 48);
          uint64_t v288 = *(void *)(v277 + 56);
          if (!*(void *)(v277 + 8))
          {
            v298 = *(void **)(v277 + 80);
            v299 = *(uint8_t **)v277;
            v275 = (uint8_t *)*((void *)&v352 + 1);
            v356 = (uint8_t *)*((void *)&v352 + 1);
            v296 = (uint8_t *)v352;
            uint64_t v357 = v354;
            *(void *)&long long v358 = v279;
            *((void *)&v358 + 1) = v280;
            v359 = (uint8_t *)v352;
            uint64_t v360 = v355;
            *(void *)&long long v361 = v281;
            *((void *)&v361 + 1) = v282;
            *(void *)v362 = v285;
            *(void *)&v362[8] = v284;
            *(void *)&v362[16] = v283;
            v363 = v299;
            uint64_t v364 = 0;
            *(void *)&long long v365 = v286;
            *((void *)&v365 + 1) = v287;
            long long v366 = *(_OWORD *)(v277 + 32);
            *(void *)&long long v367 = v289;
            *((void *)&v367 + 1) = v288;
            long long v368 = *(_OWORD *)(v277 + 64);
            v369 = v298;
            AVAudioSessionPort v295 = v279;
            v300 = v280;
            AVAudioSessionPort v348 = v281;
            swift_bridgeObjectRetain_n();
            v347 = v300;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            id v301 = v284;
            v302 = v283;
            id v303 = v301;
            v304 = v302;
            sub_1000C2964((uint64_t)&v356);
            swift_bridgeObjectRelease();
            goto LABEL_205;
          }
          AVAudioSessionPort v349 = *(AVAudioSessionPort *)&v274[v276 + 112];
          AVAudioSessionPort v350 = v285;
          AVAudioSessionPort v351 = v279;
          if (v279 == v286 && v287 == v280)
          {
            v290 = v280;
          }
          else
          {
            v290 = v280;
            v291 = v284;
            uint64_t v292 = v282;
            v293 = v281;
            char v294 = _stringCompareWithSmolCheck(_:_:expecting:)();
            v281 = v293;
            uint64_t v282 = v292;
            v284 = v291;
            if ((v294 & 1) == 0) {
              goto LABEL_202;
            }
          }
          if (v281 != v289)
          {
LABEL_202:
            AVAudioSessionPort v348 = v281;
            goto LABEL_204;
          }
          if (v282 != v288) {
            break;
          }
          v276 += 88;
          --v275;
          v274 = v353;
          if (!v275) {
            goto LABEL_199;
          }
        }
        AVAudioSessionPort v348 = v281;
LABEL_204:
        swift_bridgeObjectRetain();
        v347 = v290;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v305 = v284;
        AVAudioSessionPort v283 = v349;
        v306 = v349;
        swift_bridgeObjectRelease();
        v275 = (uint8_t *)*((void *)&v352 + 1);
        v296 = (uint8_t *)v352;
        v285 = v350;
        AVAudioSessionPort v295 = v351;
      }
      else
      {
LABEL_199:
        swift_bridgeObjectRelease();
        unint64_t v354 = 0;
        uint64_t v355 = 0;
        AVAudioSessionPort v295 = 0;
        v347 = 0;
        AVAudioSessionPort v348 = 0;
        v296 = 0;
        uint64_t v282 = 0;
        v285 = 0;
        v284 = 0;
        AVAudioSessionPort v283 = 0;
      }
LABEL_205:
      v353 = (uint8_t *)swift_getKeyPath();
      *((void *)&v352 + 1) = swift_getKeyPath();
      v356 = v275;
      uint64_t v357 = v354;
      *(void *)&long long v358 = v295;
      *((void *)&v358 + 1) = v347;
      v359 = v296;
      uint64_t v360 = v355;
      *(void *)&long long v361 = v348;
      *((void *)&v361 + 1) = v282;
      *(void *)v362 = v285;
      *(void *)&v362[8] = v284;
      *(void *)&v362[16] = v283;
      swift_retain();
      static Published.subscript.setter();
    }
  }
  sub_1000194BC((uint64_t)v331, v333, v332, *((uint64_t *)&v332 + 1), (uint64_t)v336, v337, v334, *((uint64_t *)&v334 + 1), v330, (void *)v329, v328);
LABEL_207:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v307 = v356;
  v370 = v356;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v308 = v357;
  if (v357)
  {
    v309 = v356;
    uint64_t v310 = v358;
    uint64_t v311 = *((void *)&v361 + 1);
    v313 = *(void **)&v362[8];
    uint64_t v312 = *(void *)v362;
    v314 = *(void **)&v362[16];
    *((void *)&v352 + 1) = *((void *)&v358 + 1);
    v353 = v359;
    unint64_t v354 = v360;
    uint64_t v355 = v361;
    unint64_t v315 = sub_1000C2824((uint64_t)v307, (uint64_t)&v356);
    if (v316)
    {
      sub_1000194BC((uint64_t)v309, v308, v310, *((uint64_t *)&v352 + 1), (uint64_t)v353, v354, v355, v311, v312, v313, v314);
      swift_bridgeObjectRelease();
    }
    else
    {
      *(void *)&long long v352 = v311;
      sub_1000C0EEC(v315, (uint64_t)&v371);
      AVAudioSessionPort v350 = v373;
      AVAudioSessionPort v351 = (AVAudioSessionPort)*((void *)&v371 + 1);
      v317 = v379;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v318 = *((void *)v370 + 2);
      *(void *)&long long v371 = v309;
      *((void *)&v371 + 1) = v308;
      uint64_t v372 = v310;
      v373 = (NSString *)*((void *)&v352 + 1);
      uint64_t v374 = (uint64_t)v353;
      unint64_t v375 = v354;
      uint64_t v376 = v355;
      uint64_t v377 = v352;
      char v378 = v312;
      v379 = v313;
      id v380 = v314;
      sub_10022BA68(v318, v318, (uint64_t)&v371);
      swift_bridgeObjectRelease();
      v307 = v370;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v370 = v307;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000C0EEC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_10009860C(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = &v5[11 * a1];
    long long v9 = *((_OWORD *)v7 + 2);
    long long v10 = *((_OWORD *)v7 + 3);
    uint64_t v8 = v7 + 4;
    unint64_t v11 = v6 - 1;
    uint64_t v12 = v8[4];
    uint64_t v13 = v8[5];
    char v14 = *((unsigned char *)v8 + 64);
    *(_OWORD *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v10;
    *(void *)(a2 + 32) = v12;
    *(void *)(a2 + 40) = v13;
    *(_OWORD *)(a2 + 48) = *((_OWORD *)v8 + 3);
    *(unsigned char *)(a2 + 64) = v14;
    *(_OWORD *)(a2 + 72) = *(_OWORD *)(v8 + 9);
    if ((uint64_t)(v11 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8, v8 + 11, 88 * (v11 - a1));
      v5[2] = v11;
      void *v2 = v5;
      return result;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C0FF4()
{
  if (qword_1002EE5B8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E930);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Clearing headset connection", v3, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000C1168(uint64_t a1)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v38 = *(void *)(a1 + 32);
  uint64_t v40 = *(void *)(a1 + 24);
  uint64_t v35 = *(void *)(a1 + 48);
  uint64_t v36 = *(void *)(a1 + 40);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 64);
  id v31 = *(void **)(a1 + 72);
  uint64_t v33 = *(void *)(a1 + 56);
  unint64_t v30 = *(void **)(a1 + 80);
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030E978);
  sub_1000C172C(a1);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v29 = v5;
    long long v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    *(_DWORD *)long long v9 = 136315138;
    uint64_t v28 = v3;
    uint64_t v10 = v4;
    uint64_t v11 = v2;
    uint64_t v12 = *(void *)(a1 + 16);
    unint64_t v13 = *(void *)(a1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v14 = v12;
    uint64_t v2 = v11;
    uint64_t v4 = v10;
    v43[0] = sub_100202FD4(v14, v13, &v47);
    uint64_t v5 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    sub_1000C178C(a1);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "setOwnerDevice: ownerAudioDevice set to %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000C178C(a1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v47 = v2;
  uint64_t v48 = v3;
  uint64_t v49 = v4;
  uint64_t v50 = v40;
  uint64_t v51 = v38;
  uint64_t v52 = v36;
  uint64_t v53 = v35;
  uint64_t v54 = v33;
  uint64_t v55 = v5;
  id v56 = v31;
  uint64_t v57 = v30;
  sub_1000C172C(a1);
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v15 = v47;
  uint64_t v42 = v47;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v16 = v48;
  if (v48)
  {
    uint64_t v17 = v47;
    uint64_t v18 = v49;
    uint64_t v19 = v50;
    uint64_t v20 = v54;
    uint64_t v21 = v55;
    uint64_t v22 = v56;
    id v23 = v57;
    uint64_t v37 = v51;
    uint64_t v39 = v52;
    uint64_t v41 = v53;
    unint64_t v24 = sub_1000C2824(v15, (uint64_t)&v47);
    if (v25)
    {
      sub_1000194BC(v17, v16, v18, v19, v37, v39, v41, v20, v21, v22, v23);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1000C0EEC(v24, (uint64_t)v43);
      os_log_type_t v32 = v45;
      uint64_t v34 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v26 = *(void *)(v42 + 16);
      v43[0] = v17;
      v43[1] = v16;
      v43[2] = v18;
      v43[3] = v19;
      v43[4] = v37;
      v43[5] = v39;
      v43[6] = v41;
      v43[7] = v20;
      char v44 = v21;
      uint64_t v45 = v22;
      id v46 = v23;
      sub_10022BA68(v26, v26, (uint64_t)v43);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000C15F0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for DeviceHelper();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000C1630@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000C16B0()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000C172C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  uint64_t v3 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  id v5 = v3;
  return a1;
}

uint64_t sub_1000C178C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

Swift::Int sub_1000C1800(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10023B90C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000C186C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000C186C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_156;
    }
    if (v3) {
      return sub_1000C2054(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_164;
  }
  Swift::Int v113 = result;
  char v110 = a1;
  if (v3 < 2)
  {
    os_log_type_t v8 = _swiftEmptyArrayStorage;
    id v121 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_122:
      uint64_t v101 = v11;
      uint64_t v112 = v8;
      if (v12 >= 2)
      {
        uint64_t v102 = *v110;
        do
        {
          unint64_t v103 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_151;
          }
          if (!v102) {
            goto LABEL_163;
          }
          id v104 = v101;
          uint64_t v105 = *(void *)&v101[16 * v103 + 32];
          uint64_t v106 = *(void *)&v101[16 * v12 + 24];
          sub_1000C216C((char *)(v102 + 88 * v105), (char *)(v102 + 88 * *(void *)&v101[16 * v12 + 16]), v102 + 88 * v106, v121);
          if (v1) {
            break;
          }
          if (v106 < v105) {
            goto LABEL_152;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v104 = sub_10023B8E4((uint64_t)v104);
          }
          if (v103 >= *((void *)v104 + 2)) {
            goto LABEL_153;
          }
          uint64_t v107 = &v104[16 * v103 + 32];
          *(void *)uint64_t v107 = v105;
          *((void *)v107 + 1) = v106;
          unint64_t v108 = *((void *)v104 + 2);
          if (v12 > v108) {
            goto LABEL_154;
          }
          memmove(&v104[16 * v12 + 16], &v104[16 * v12 + 32], 16 * (v108 - v12));
          uint64_t v101 = v104;
          *((void *)v104 + 2) = v108 - 1;
          unint64_t v12 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      v112[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v112 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v112 = (void *)v7;
    id v121 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v111 = *a1 + 24;
  uint64_t v109 = *a1 + 72;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v120 = v3;
  uint64_t v122 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3)
    {
LABEL_23:
      if (v9 < v3) {
        goto LABEL_24;
      }
      goto LABEL_71;
    }
    uint64_t v14 = v10 + 88 * v9;
    uint64_t v15 = *(void *)(v14 + 16);
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t v17 = v10 + 88 * v13;
    if (*(void *)(v17 + 16) == v15 && *(void *)(v17 + 24) == v16) {
      break;
    }
    int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    int v20 = v19;
    Swift::Int v21 = v13 + 2;
    if (v13 + 2 < v3) {
      goto LABEL_45;
    }
    Swift::Int v9 = v13 + 2;
    if ((v19 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_60:
    if (v21 < v13) {
      goto LABEL_159;
    }
LABEL_61:
    if (v13 >= v21)
    {
      Swift::Int v9 = v21;
      if (v21 < v3) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v44 = 88 * v21;
      Swift::Int v45 = v21;
      Swift::Int v46 = v13;
      uint64_t v47 = 88 * v13;
      do
      {
        if (v46 != --v45)
        {
          if (!v10) {
            goto LABEL_162;
          }
          uint64_t v48 = (_OWORD *)(v10 + v47);
          uint64_t v49 = v122 + v44;
          long long v116 = v48[1];
          long long v117 = *v48;
          uint64_t v50 = *((void *)v48 + 5);
          uint64_t v115 = *((void *)v48 + 4);
          char v119 = *((unsigned char *)v48 + 64);
          long long v118 = *(_OWORD *)((char *)v48 + 72);
          long long v114 = v48[3];
          memmove(v48, (const void *)(v122 + v44 - 88), 0x58uLL);
          *(_OWORD *)(v49 - 88) = v117;
          *(_OWORD *)(v49 - 72) = v116;
          *(void *)(v49 - 56) = v115;
          *(void *)(v49 - 48) = v50;
          *(_OWORD *)(v49 - 40) = v114;
          *(unsigned char *)(v49 - 24) = v119;
          *(_OWORD *)(v49 - 16) = v118;
          uint64_t v10 = v122;
        }
        ++v46;
        v44 -= 88;
        v47 += 88;
      }
      while (v46 < v45);
      Swift::Int v9 = v21;
      Swift::Int v3 = v120;
      if (v21 < v120)
      {
LABEL_24:
        if (__OFSUB__(v9, v13)) {
          goto LABEL_155;
        }
        if (v9 - v13 < v113)
        {
          if (__OFADD__(v13, v113)) {
            goto LABEL_157;
          }
          if (v13 + v113 >= v3) {
            Swift::Int v22 = v3;
          }
          else {
            Swift::Int v22 = v13 + v113;
          }
          if (v22 < v13)
          {
LABEL_158:
            __break(1u);
            goto LABEL_159;
          }
          if (v9 != v22)
          {
            uint64_t v23 = v109 + 88 * v9;
            do
            {
              uint64_t v24 = v10 + 88 * v9;
              uint64_t v25 = *(void *)(v24 + 16);
              uint64_t v26 = *(void *)(v24 + 24);
              Swift::Int v27 = v13;
              uint64_t v28 = v23;
              do
              {
                BOOL v29 = *(void *)(v28 - 144) == v25 && *(void *)(v28 - 136) == v26;
                if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                  break;
                }
                if (!v10) {
                  goto LABEL_160;
                }
                unint64_t v30 = (_OWORD *)(v28 - 72);
                uint64_t v31 = *(void *)(v28 - 72);
                uint64_t v32 = *(void *)(v28 - 64);
                uint64_t v25 = *(void *)(v28 - 56);
                uint64_t v26 = *(void *)(v28 - 48);
                uint64_t v33 = *(void *)(v28 - 40);
                uint64_t v34 = *(void *)(v28 - 32);
                char v35 = *(unsigned char *)(v28 - 8);
                long long v36 = *(_OWORD *)v28;
                long long v37 = *(_OWORD *)(v28 - 24);
                long long v38 = *(_OWORD *)(v28 - 112);
                v30[2] = *(_OWORD *)(v28 - 128);
                v30[3] = v38;
                v30[4] = *(_OWORD *)(v28 - 96);
                *(void *)(v28 + 8) = *(void *)(v28 - 80);
                long long v39 = *(_OWORD *)(v28 - 144);
                *unint64_t v30 = *(_OWORD *)(v28 - 160);
                v30[1] = v39;
                *(_OWORD *)(v28 - 88) = v36;
                v28 -= 88;
                *(void *)(v28 - 72) = v31;
                *(void *)(v28 - 64) = v32;
                *(void *)(v28 - 56) = v25;
                *(void *)(v28 - 48) = v26;
                *(void *)(v28 - 40) = v33;
                *(void *)(v28 - 32) = v34;
                *(_OWORD *)(v28 - 24) = v37;
                ++v27;
                *(unsigned char *)(v28 - 8) = v35;
              }
              while (v9 != v27);
              ++v9;
              v23 += 88;
            }
            while (v9 != v22);
            Swift::Int v9 = v22;
          }
        }
      }
    }
LABEL_71:
    if (v9 < v13) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10023B4F4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v52 = *((void *)v11 + 2);
    unint64_t v51 = *((void *)v11 + 3);
    unint64_t v12 = v52 + 1;
    if (v52 >= v51 >> 1) {
      uint64_t v11 = sub_10023B4F4((char *)(v51 > 1), v52 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v53 = v11 + 32;
    uint64_t v54 = &v11[16 * v52 + 32];
    *(void *)uint64_t v54 = v13;
    *((void *)v54 + 1) = v9;
    if (v52)
    {
      uint64_t v10 = v122;
      while (1)
      {
        unint64_t v55 = v12 - 1;
        if (v12 >= 4)
        {
          id v60 = &v53[16 * v12];
          uint64_t v61 = *((void *)v60 - 8);
          uint64_t v62 = *((void *)v60 - 7);
          BOOL v66 = __OFSUB__(v62, v61);
          uint64_t v63 = v62 - v61;
          if (v66) {
            goto LABEL_139;
          }
          uint64_t v65 = *((void *)v60 - 6);
          uint64_t v64 = *((void *)v60 - 5);
          BOOL v66 = __OFSUB__(v64, v65);
          uint64_t v58 = v64 - v65;
          char v59 = v66;
          if (v66) {
            goto LABEL_140;
          }
          unint64_t v67 = v12 - 2;
          NSArray v68 = &v53[16 * v12 - 32];
          uint64_t v70 = *(void *)v68;
          uint64_t v69 = *((void *)v68 + 1);
          BOOL v66 = __OFSUB__(v69, v70);
          uint64_t v71 = v69 - v70;
          if (v66) {
            goto LABEL_142;
          }
          BOOL v66 = __OFADD__(v58, v71);
          uint64_t v72 = v58 + v71;
          if (v66) {
            goto LABEL_145;
          }
          if (v72 >= v63)
          {
            uint64_t v90 = &v53[16 * v55];
            uint64_t v92 = *(void *)v90;
            uint64_t v91 = *((void *)v90 + 1);
            BOOL v66 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            if (v66) {
              goto LABEL_149;
            }
            BOOL v83 = v58 < v93;
            goto LABEL_109;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v84 = *((void *)v11 + 4);
            uint64_t v85 = *((void *)v11 + 5);
            BOOL v66 = __OFSUB__(v85, v84);
            uint64_t v77 = v85 - v84;
            char v78 = v66;
            goto LABEL_103;
          }
          uint64_t v57 = *((void *)v11 + 4);
          uint64_t v56 = *((void *)v11 + 5);
          BOOL v66 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          char v59 = v66;
        }
        if (v59) {
          goto LABEL_141;
        }
        unint64_t v67 = v12 - 2;
        id v73 = &v53[16 * v12 - 32];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v76 = __OFSUB__(v74, v75);
        uint64_t v77 = v74 - v75;
        char v78 = v76;
        if (v76) {
          goto LABEL_144;
        }
        os_log_type_t v79 = &v53[16 * v55];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v66 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v66) {
          goto LABEL_147;
        }
        if (__OFADD__(v77, v82)) {
          goto LABEL_148;
        }
        if (v77 + v82 >= v58)
        {
          BOOL v83 = v58 < v82;
LABEL_109:
          if (v83) {
            unint64_t v55 = v67;
          }
          goto LABEL_111;
        }
LABEL_103:
        if (v78) {
          goto LABEL_143;
        }
        id v86 = &v53[16 * v55];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v66 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v66) {
          goto LABEL_146;
        }
        if (v89 < v77) {
          goto LABEL_15;
        }
LABEL_111:
        unint64_t v94 = v55 - 1;
        if (v55 - 1 >= v12)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        if (!v10) {
          goto LABEL_161;
        }
        uint64_t v95 = v10;
        uint64_t v96 = &v53[16 * v94];
        uint64_t v97 = *(void *)v96;
        uint64_t v98 = &v53[16 * v55];
        uint64_t v99 = *((void *)v98 + 1);
        sub_1000C216C((char *)(v95 + 88 * *(void *)v96), (char *)(v95 + 88 * *(void *)v98), v95 + 88 * v99, v121);
        if (v1) {
          goto LABEL_119;
        }
        if (v99 < v97) {
          goto LABEL_136;
        }
        if (v55 > *((void *)v11 + 2)) {
          goto LABEL_137;
        }
        *(void *)uint64_t v96 = v97;
        *(void *)&v53[16 * v94 + 8] = v99;
        unint64_t v100 = *((void *)v11 + 2);
        if (v55 >= v100) {
          goto LABEL_138;
        }
        unint64_t v12 = v100 - 1;
        memmove(&v53[16 * v55], v98 + 16, 16 * (v100 - 1 - v55));
        *((void *)v11 + 2) = v100 - 1;
        BOOL v83 = v100 > 2;
        uint64_t v10 = v122;
        if (!v83) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v122;
LABEL_15:
    Swift::Int v3 = v120;
    if (v9 >= v120)
    {
      os_log_type_t v8 = v112;
      goto LABEL_122;
    }
  }
  Swift::Int v21 = v13 + 2;
  if (v13 + 2 >= v3)
  {
    Swift::Int v9 = v13 + 2;
    goto LABEL_71;
  }
  int v20 = 0;
LABEL_45:
  uint64_t v40 = (void *)(v111 + 88 * v21);
  while (1)
  {
    uint64_t v42 = v10 + 88 * v9;
    if (*(void *)(v42 + 16) != *(v40 - 1) || *(void *)(v42 + 24) != *v40)
    {
      if ((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)())) {
        goto LABEL_59;
      }
      goto LABEL_47;
    }
    if (v20) {
      break;
    }
LABEL_47:
    Swift::Int v41 = v21 + 1;
    v40 += 11;
    Swift::Int v9 = v21;
    Swift::Int v21 = v41;
    if (v41 >= v120)
    {
      Swift::Int v21 = v41;
LABEL_59:
      Swift::Int v3 = v120;
      Swift::Int v9 = v21;
      if ((v20 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_60;
    }
  }
  Swift::Int v3 = v120;
  if (v21 >= v13) {
    goto LABEL_61;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C2054(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 88 * a3 + 72;
LABEL_5:
    uint64_t v9 = v7 + 88 * v4;
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v12 = v6;
    uint64_t v13 = v8;
    while (1)
    {
      Swift::Int result = *(void *)(v13 - 144);
      BOOL v14 = result == v10 && *(void *)(v13 - 136) == v11;
      if (v14 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 88;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v15 = (_OWORD *)(v13 - 72);
      uint64_t v16 = *(void *)(v13 - 72);
      uint64_t v17 = *(void *)(v13 - 64);
      uint64_t v10 = *(void *)(v13 - 56);
      uint64_t v11 = *(void *)(v13 - 48);
      uint64_t v18 = *(void *)(v13 - 40);
      uint64_t v19 = *(void *)(v13 - 32);
      char v20 = *(unsigned char *)(v13 - 8);
      long long v21 = *(_OWORD *)v13;
      long long v22 = *(_OWORD *)(v13 - 24);
      long long v23 = *(_OWORD *)(v13 - 112);
      v15[2] = *(_OWORD *)(v13 - 128);
      v15[3] = v23;
      v15[4] = *(_OWORD *)(v13 - 96);
      *(void *)(v13 + 8) = *(void *)(v13 - 80);
      long long v24 = *(_OWORD *)(v13 - 144);
      *uint64_t v15 = *(_OWORD *)(v13 - 160);
      v15[1] = v24;
      *(_OWORD *)(v13 - 88) = v21;
      v13 -= 88;
      *(void *)(v13 - 72) = v16;
      *(void *)(v13 - 64) = v17;
      *(void *)(v13 - 56) = v10;
      *(void *)(v13 - 48) = v11;
      *(void *)(v13 - 40) = v18;
      *(void *)(v13 - 32) = v19;
      *(_OWORD *)(v13 - 24) = v22;
      ++v12;
      *(unsigned char *)(v13 - 8) = v20;
      if (v4 == v12) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000C216C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 88;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 88;
  uint64_t v25 = __src;
  long long v24 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -87)
    {
      if (__dst != a2 || &a2[88 * v11] <= __dst) {
        memmove(__dst, a2, 88 * v11);
      }
      uint64_t v17 = &v4[88 * v11];
      long long v23 = v17;
      uint64_t v25 = v6;
      if (v7 < v6 && v10 >= 88)
      {
        uint64_t v18 = (char *)(a3 - 88);
        do
        {
          uint64_t v19 = v18 + 88;
          BOOL v20 = *((void *)v6 - 9) == *((void *)v17 - 9) && *((void *)v6 - 8) == *((void *)v17 - 8);
          if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            long long v23 = v17 - 88;
            if (v19 < v17 || v18 >= v17 || v19 != v17) {
              memmove(v18, v17 - 88, 0x58uLL);
            }
            long long v21 = v6;
            v17 -= 88;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 88;
            if (v19 != v6 || v18 >= v6) {
              memmove(v18, v6 - 88, 0x58uLL);
            }
            uint64_t v25 = v6 - 88;
            if (v21 <= v7) {
              break;
            }
          }
          v18 -= 88;
          uint64_t v6 = v21;
        }
        while (v17 > v4);
      }
LABEL_48:
      sub_10023B6AC((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -87)
  {
    if (__dst != __src || &__src[88 * v9] <= __dst) {
      memmove(__dst, __src, 88 * v9);
    }
    uint64_t v12 = &v4[88 * v9];
    long long v23 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 88)
    {
      uint64_t v13 = v4;
      while (1)
      {
        BOOL v14 = *((void *)v13 + 2) == *((void *)v6 + 2) && *((void *)v13 + 3) == *((void *)v6 + 3);
        if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          uint64_t v4 = v13 + 88;
          uint64_t v16 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 88;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v13 += 88;
          }
        }
        else
        {
          uint64_t v15 = v6 + 88;
          uint64_t v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_22;
          }
        }
        memmove(v7, v16, 0x58uLL);
LABEL_22:
        v7 += 88;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        long long v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_48;
      }
    }
    goto LABEL_48;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_1000C244C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::UInt v64 = *(void *)(a1 + 48);
  Hasher._combine(_:)(v64);
  Swift::UInt v11 = *(void *)(a1 + 56);
  Hasher._combine(_:)(v11);
  Swift::Int v12 = Hasher._finalize()();
  uint64_t v13 = (void *)v8;
  uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v15 = v12 & ~v14;
  uint64_t v16 = v8 + 56;
  if ((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    char v58 = a2;
    id v60 = v3;
    uint64_t v63 = a3;
    uint64_t v17 = ~v14;
    uint64_t v57 = v13;
    uint64_t v18 = v13[6];
    while (1)
    {
      uint64_t v19 = (void *)(v18 + 88 * v15);
      uint64_t v21 = v19[6];
      uint64_t v20 = v19[7];
      BOOL v22 = v19[2] == v9 && v19[3] == v10;
      if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)()) && v21 == v64 && v20 == v11) {
        break;
      }
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v16 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        char v24 = 0;
        a3 = v63;
        uint64_t v4 = v60;
        a2 = v58;
        uint64_t v13 = v57;
        goto LABEL_15;
      }
    }
    uint64_t v25 = 0;
    char v24 = 1;
    a3 = v63;
    uint64_t v4 = v60;
    a2 = v58;
    uint64_t v13 = v57;
  }
  else
  {
    char v24 = 0;
LABEL_15:
    uint64_t v25 = 1;
  }
  uint64_t v26 = v13[2];
  Swift::Int result = v26 + v25;
  if (__OFADD__(v26, v25))
  {
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  Swift::Int v28 = v13[3];
  if (v28 < result || (a2 & 1) == 0)
  {
    if (a2)
    {
      sub_10019663C();
    }
    else
    {
      if (v28 >= result)
      {
        Swift::Int result = (Swift::Int)sub_100197C88();
        if ((v24 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_46;
      }
      sub_100198398();
    }
    uint64_t v31 = *v4;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v64);
    Hasher._combine(_:)(v11);
    Swift::Int result = Hasher._finalize()();
    uint64_t v32 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v15 = result & ~v32;
    uint64_t v33 = v31 + 56;
    unint64_t v29 = v15 >> 6;
    uint64_t v30 = 1 << v15;
    if (((1 << v15) & *(void *)(v31 + 56 + 8 * (v15 >> 6))) == 0)
    {
      if (v24)
      {
LABEL_50:
        Swift::Int result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      goto LABEL_43;
    }
    char v59 = v24;
    uint64_t v61 = v4;
    uint64_t v62 = a1;
    uint64_t v34 = ~v32;
    uint64_t v35 = *(void *)(v31 + 48);
    while (1)
    {
      long long v36 = (void *)(v35 + 88 * v15);
      Swift::Int result = v36[2];
      uint64_t v38 = v36[6];
      uint64_t v37 = v36[7];
      BOOL v39 = result == v9 && v36[3] == v10;
      if (v39 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
      {
        if (v38 == v64 && v37 == v11) {
          break;
        }
      }
      unint64_t v15 = (v15 + 1) & v34;
      unint64_t v29 = v15 >> 6;
      uint64_t v30 = 1 << v15;
      if ((*(void *)(v33 + 8 * (v15 >> 6)) & (1 << v15)) == 0)
      {
        a1 = v62;
        uint64_t v4 = v61;
        if ((v59 & 1) == 0) {
          goto LABEL_43;
        }
        goto LABEL_50;
      }
    }
    a1 = v62;
    uint64_t v4 = v61;
    if ((v59 & 1) == 0) {
      goto LABEL_50;
    }
    goto LABEL_46;
  }
  if ((v24 & 1) == 0)
  {
LABEL_21:
    unint64_t v29 = v15 >> 6;
    uint64_t v30 = 1 << v15;
LABEL_43:
    uint64_t v41 = *v4;
    *(void *)(*v4 + 8 * v29 + 56) |= v30;
    uint64_t v42 = *(void *)(v41 + 48) + 88 * v15;
    long long v43 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)a1;
    *(_OWORD *)(v42 + 16) = v43;
    *(void *)(v42 + 80) = *(void *)(a1 + 80);
    long long v44 = *(_OWORD *)(a1 + 64);
    long long v45 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v42 + 48) = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v42 + 64) = v44;
    *(_OWORD *)(v42 + 32) = v45;
    uint64_t v46 = *(void *)(v41 + 16);
    BOOL v47 = __OFADD__(v46, 1);
    uint64_t v48 = v46 + 1;
    if (!v47)
    {
      *(void *)(v41 + 16) = v48;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_OWORD *)(a3 + 32) = 0u;
      *(_OWORD *)(a3 + 48) = 0u;
      *(_OWORD *)(a3 + 64) = 0u;
      *(void *)(a3 + 80) = 0;
      return result;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v49 = *(void *)(*v4 + 48) + 88 * v15;
  long long v50 = *(_OWORD *)(v49 + 16);
  uint64_t v51 = *(void *)(v49 + 32);
  uint64_t v52 = *(void *)(v49 + 40);
  char v53 = *(unsigned char *)(v49 + 64);
  *(_OWORD *)a3 = *(_OWORD *)v49;
  *(_OWORD *)(a3 + 16) = v50;
  *(void *)(a3 + 32) = v51;
  *(void *)(a3 + 40) = v52;
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(v49 + 48);
  *(unsigned char *)(a3 + 64) = v53;
  *(_OWORD *)(a3 + 72) = *(_OWORD *)(v49 + 72);
  *(void *)(v49 + 80) = *(void *)(a1 + 80);
  long long v54 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)a1;
  *(_OWORD *)(v49 + 16) = v54;
  long long v55 = *(_OWORD *)(a1 + 64);
  long long v56 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v49 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v49 + 64) = v55;
  *(_OWORD *)(v49 + 32) = v56;
  return result;
}

uint64_t sub_1000C2824(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  for (i = (void *)(a1 + 56); ; i += 11)
  {
    BOOL v7 = *(i - 1) == v4 && *i == v5;
    if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      break;
    }
    if (v2 == ++v3) {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1000C28BC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C28FC()
{
  return sub_1000BE054(*(void *)(v0 + 16), *(uint8_t **)(v0 + 24));
}

uint64_t sub_1000C2904(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C2914()
{
  return swift_release();
}

uint64_t sub_1000C291C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C2964(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  long long v12 = *(_OWORD *)(a1 + 152);
  uint64_t v10 = *(void **)(a1 + 168);
  sub_1000194BC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80));
  sub_1000194BC(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((void **)&v12 + 1), v10);
  return a1;
}

void *sub_1000C2A24(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v107 = a1;
  unint64_t v108 = a2;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a4) {
    return 0;
  }
  switch(a3)
  {
    case 4:
      AVAudioSessionPort v9 = AVAudioSessionPortHeadsetMic;
      uint64_t v10 = a4 >> 62;
      if (a4 >> 62) {
        goto LABEL_93;
      }
      uint64_t v28 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      unint64_t v29 = AVAudioSessionPortHeadsetMic;
      if (v28) {
        goto LABEL_23;
      }
LABEL_94:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_95:
      swift_bridgeObjectRelease();

      AVAudioSessionPort v61 = AVAudioSessionPortHeadphones;
      if (v10)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v84 = AVAudioSessionPortHeadphones;
        uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
        if (!v82) {
          goto LABEL_113;
        }
      }
      else
      {
        uint64_t v82 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        BOOL v83 = AVAudioSessionPortHeadphones;
        if (!v82) {
          goto LABEL_113;
        }
      }
      uint64_t v105 = (NSString *)(a4 & 0xC000000000000001);
      unint64_t v106 = a4;
      uint64_t v85 = 4;
      while (1)
      {
        id v92 = v105 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a4 + 8 * v85);
        uint64_t v20 = v92;
        uint64_t v93 = v85 - 3;
        if (__OFADD__(v85 - 4, 1)) {
          break;
        }
        uint64_t v94 = v82;
        id v95 = [v92 portType];
        uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v98 = v97;
        AVAudioSessionPort v9 = v61;
        if (v96 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v98 == v99)
        {

          swift_bridgeObjectRelease_n();
LABEL_101:
          id v86 = [v20 portName:v103];
          uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v89 = v88;

          uint64_t v111 = v87;
          uint64_t v112 = v89;
          uint64_t v109 = v107;
          unint64_t v110 = v108;
          uint64_t v90 = type metadata accessor for Locale();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v8, 1, 1, v90);
          sub_10000C350();
          StringProtocol.range<A>(of:options:range:locale:)();
          LOBYTE(v86) = v91;
          sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
          swift_bridgeObjectRelease();
          if ((v86 & 1) == 0) {
            goto LABEL_114;
          }
          goto LABEL_102;
        }
        char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v101) {
          goto LABEL_101;
        }
LABEL_102:

        ++v85;
        uint64_t v82 = v94;
        BOOL v27 = v93 == v94;
        AVAudioSessionPort v61 = v9;
        a4 = v106;
        if (v27) {
          goto LABEL_113;
        }
      }
      __break(1u);
LABEL_118:
      swift_bridgeObjectRetain();
      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
      if (!v44) {
        goto LABEL_61;
      }
LABEL_39:
      unint64_t v108 = a4 & 0xC000000000000001;
      uint64_t v10 = (uint64_t)AVAudioSessionPortBuiltInMic;
      uint64_t v45 = 4;
      while (1)
      {
        id v46 = v108 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a4 + 8 * v45);
        uint64_t v20 = v46;
        AVAudioSessionPort v9 = (AVAudioSessionPort)(v45 - 3);
        if (__OFADD__(v45 - 4, 1)) {
          break;
        }
        id v47 = [v46 portType];
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v49;
        if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v50)
        {
LABEL_66:

          swift_bridgeObjectRelease_n();
LABEL_67:
          swift_bridgeObjectRelease();
          return v20;
        }
        char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v52) {
          goto LABEL_67;
        }

        ++v45;
        if (v9 == (AVAudioSessionPort)v44)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = (uint64_t)AVAudioSessionPortBuiltInSpeaker;
          swift_bridgeObjectRetain();
          uint64_t v53 = 4;
          while (1)
          {
            id v54 = v108 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a4 + 8 * v53);
            uint64_t v20 = v54;
            AVAudioSessionPort v9 = (AVAudioSessionPort)(v53 - 3);
            if (__OFADD__(v53 - 4, 1)) {
              goto LABEL_71;
            }
            id v47 = [v54 portType];
            uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v8 = v56;
            if (v55 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v57) {
              goto LABEL_66;
            }
            char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v59) {
              goto LABEL_67;
            }

            ++v53;
            if (v9 == (AVAudioSessionPort)v44) {
              goto LABEL_61;
            }
          }
        }
      }
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      swift_bridgeObjectRetain_n();
      id v60 = v9;
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_73;
      }
LABEL_7:
      uint64_t v105 = v9;
      uint64_t v103 = v10;
      unint64_t v104 = a4 & 0xC000000000000001;
      uint64_t v13 = 4;
      while (1)
      {
        if (v104) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v19 = *(id *)(a4 + 8 * v13);
        }
        uint64_t v20 = v19;
        uint64_t v21 = (NSString *)(v13 - 3);
        if (__OFADD__(v13 - 4, 1))
        {
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        AVAudioSessionPort v9 = (AVAudioSessionPort)v11;
        id v22 = [v19 portType];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;
        BOOL v27 = v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26;
        if (v27) {
          break;
        }
        uint64_t v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_9;
        }
LABEL_10:

        ++v13;
        uint64_t v11 = (uint64_t)v9;
        if (v21 == v9)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          AVAudioSessionPort v9 = v105;
          uint64_t v10 = v103;
          goto LABEL_74;
        }
      }

      swift_bridgeObjectRelease_n();
LABEL_9:
      id v14 = [v20 portName:v103];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      uint64_t v111 = v10;
      uint64_t v112 = v16;
      uint64_t v109 = v107;
      unint64_t v110 = v108;
      uint64_t v17 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
      sub_10000C350();
      StringProtocol.range<A>(of:options:range:locale:)();
      LOBYTE(v14) = v18;
      sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_63;
      }
      goto LABEL_10;
    case 3:
      if (a4 >> 62) {
        goto LABEL_118;
      }
      uint64_t v44 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v44) {
        goto LABEL_39;
      }
LABEL_61:
      swift_bridgeObjectRelease();
      break;
    case 1:
      AVAudioSessionPort v9 = AVAudioSessionPortBluetoothA2DP;
      uint64_t v10 = a4 >> 62;
      if (a4 >> 62) {
        goto LABEL_72;
      }
      uint64_t v11 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      long long v12 = AVAudioSessionPortBluetoothA2DP;
      swift_bridgeObjectRetain();
      if (v11) {
        goto LABEL_7;
      }
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_74:
      swift_bridgeObjectRelease();

      AVAudioSessionPort v61 = AVAudioSessionPortBluetoothHFP;
      if (!v10)
      {
        uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v62 = AVAudioSessionPortBluetoothHFP;
        if (!v10) {
          goto LABEL_113;
        }
        goto LABEL_78;
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v63 = AVAudioSessionPortBluetoothHFP;
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (v10)
      {
LABEL_78:
        uint64_t v105 = (NSString *)(a4 & 0xC000000000000001);
        unint64_t v106 = a4;
        uint64_t v64 = 4;
        do
        {
          if (v105) {
            id v71 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v71 = *(id *)(a4 + 8 * v64);
          }
          uint64_t v20 = v71;
          uint64_t v72 = v64 - 3;
          if (__OFADD__(v64 - 4, 1))
          {
            __break(1u);
LABEL_93:
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v81 = v9;
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            if (!v28) {
              goto LABEL_94;
            }
LABEL_23:
            uint64_t v105 = v9;
            uint64_t v103 = v10;
            unint64_t v104 = a4 & 0xC000000000000001;
            uint64_t v30 = 4;
            while (2)
            {
              if (v104) {
                id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v36 = *(id *)(a4 + 8 * v30);
              }
              uint64_t v20 = v36;
              uint64_t v37 = (NSString *)(v30 - 3);
              if (__OFADD__(v30 - 4, 1)) {
                goto LABEL_69;
              }
              AVAudioSessionPort v9 = (AVAudioSessionPort)v28;
              id v38 = [v36 portType];
              uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v41 = v40;
              if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42)
              {

                swift_bridgeObjectRelease_n();
              }
              else
              {
                uint64_t v10 = _stringCompareWithSmolCheck(_:_:expecting:)();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v10 & 1) == 0)
                {
LABEL_26:

                  ++v30;
                  uint64_t v28 = (uint64_t)v9;
                  if (v37 == v9)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    AVAudioSessionPort v9 = v105;
                    uint64_t v10 = v103;
                    goto LABEL_95;
                  }
                  continue;
                }
              }
              break;
            }
            id v31 = [v20 portName:v103];
            uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v33 = v32;

            uint64_t v111 = v10;
            uint64_t v112 = v33;
            uint64_t v109 = v107;
            unint64_t v110 = v108;
            uint64_t v34 = type metadata accessor for Locale();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v8, 1, 1, v34);
            sub_10000C350();
            StringProtocol.range<A>(of:options:range:locale:)();
            LOBYTE(v31) = v35;
            sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
            swift_bridgeObjectRelease();
            if ((v31 & 1) == 0)
            {
LABEL_63:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return v20;
            }
            goto LABEL_26;
          }
          uint64_t v73 = v10;
          id v74 = [v71 portType];
          uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v77 = v76;
          AVAudioSessionPort v9 = v61;
          if (v75 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v77 == v78)
          {

            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v80 & 1) == 0) {
              goto LABEL_81;
            }
          }
          id v65 = [v20 portName:v103];
          uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v68 = v67;

          uint64_t v111 = v66;
          uint64_t v112 = v68;
          uint64_t v109 = v107;
          unint64_t v110 = v108;
          uint64_t v69 = type metadata accessor for Locale();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v8, 1, 1, v69);
          sub_10000C350();
          StringProtocol.range<A>(of:options:range:locale:)();
          LOBYTE(v65) = v70;
          sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
          {
LABEL_114:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            AVAudioSessionPort v61 = v9;
            goto LABEL_115;
          }
LABEL_81:

          ++v64;
          uint64_t v10 = v73;
          BOOL v27 = v72 == v73;
          AVAudioSessionPort v61 = v9;
          a4 = v106;
        }
        while (!v27);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = 0;
LABEL_115:
      swift_bridgeObjectRelease();

      return v20;
  }
  return 0;
}

uint64_t sub_1000C365C(void *a1)
{
  if ([a1 deviceType] == (id)1
    && ([a1 deviceSubType] == (id)2 || objc_msgSend(a1, "deviceSubType") == (id)3)
    || [a1 deviceType] == (id)4
    && ([a1 deviceSubType] == (id)2 || objc_msgSend(a1, "deviceSubType") == (id)3)
    || [a1 deviceType] == (id)3)
  {
    return 1;
  }
  if (qword_1002EE5B8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100011554(v3, (uint64_t)qword_10030E930);
  id v4 = a1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218240;
    id v8 = [v4 deviceType];
    Hasher.init(_seed:)();
    Hasher._combine(_:)((Swift::UInt)v8);
    Hasher._finalize()();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    [v4 deviceSubType];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Invalid audio device: device type: %ld device subtype: %ld", (uint8_t *)v7, 0x16u);
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

uint64_t sub_1000C3898(void *a1)
{
  uint64_t v2 = 0x6C6C69662E63696DLL;
  uint64_t v28 = 0x6C6C69662E63696DLL;
  unint64_t v29 = 0xE800000000000000;
  v27[3] = (uint64_t)&type metadata for TranslateFeatures;
  v27[4] = sub_10000AB14();
  LOBYTE(v27[0]) = 8;
  char v3 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v27);
  if (v3)
  {
    if ((sub_1000C365C(a1) & 1) == 0)
    {
      if (qword_1002EE5B8 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100011554(v15, (uint64_t)qword_10030E930);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        char v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Invalid audio device: returning generic symbol", v18, 2u);
        swift_slowDealloc();
      }

      return v28;
    }
    if (([a1 deviceSubType] == (id)2 || objc_msgSend(a1, "deviceSubType") == (id)3)
      && ([a1 isAppleAccessory] & 1) == 0)
    {
      uint64_t v2 = 0x6E6F687064616568;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = MRAVOutputDeviceCreateFromAVOutputDevice();
      if (!v4)
      {
LABEL_20:
        swift_beginAccess();
        return v28;
      }
      uint64_t v5 = (void *)v4;
      swift_bridgeObjectRelease();
      id v6 = [self symbolNameForOutputDevice:v5];
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v9 = v8;

      uint64_t v28 = v7;
      unint64_t v29 = v9;
      uint64_t v10 = qword_1002EE5B8;
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100011554(v11, (uint64_t)qword_10030E930);
      swift_bridgeObjectRetain_n();
      long long v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        id v14 = (uint8_t *)swift_slowAlloc();
        v27[0] = swift_slowAlloc();
        *(_DWORD *)id v14 = 136446210;
        swift_bridgeObjectRetain();
        sub_100202FD4(v7, v9, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "MRAVOutputDeviceSymbolProvider found symbol %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v20 = [self systemImageNamed:v19];

      if (v20)
      {

        goto LABEL_20;
      }
      uint64_t v22 = v28;
      unint64_t v21 = v29;
      swift_bridgeObjectRetain();
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        v27[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136446210;
        swift_bridgeObjectRetain();
        sub_100202FD4(v22, v21, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Invalid symbol %{public}s: returning generic symbol", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v2 = 0x6E6F687064616568;
    }
  }
  return v2;
}

uint64_t sub_1000C3DB8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C3DF0()
{
}

uint64_t sub_1000C3DF8()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1000C3ECC()
{
  type metadata accessor for Notification();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);

  sub_1000BB91C(v1, v2);
}

id sub_1000C3F40()
{
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_availableDictionaries] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_pairAvailability] = &_swiftEmptySetSingleton;
  uint64_t v6 = self;
  uint64_t v7 = v0;
  id result = [v6 assetManager];
  if (result)
  {
    *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryManager] = result;
    uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryQueue;
    sub_100022324();
    static DispatchQoS.unspecified.getter();
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_1000C5CFC(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_100007620(&qword_1002F3490);
    sub_10009A940(&qword_1002F3498, &qword_1002F3490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
    *(void *)&v7[v12] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();

    unint64_t v9 = (objc_class *)type metadata accessor for DictionaryManager();
    v14.receiver = v7;
    v14.super_class = v9;
    id v10 = [super init];
    sub_1000C4248();

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000C4248()
{
  uint64_t v1 = v0;
  if (qword_1002EE5E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E9A8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Update available dictionaries cache", v5, 2u);
    swift_slowDealloc();
  }

  id result = [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryManager) _allAvailableDefinitionDictionaries];
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v9 = sub_10015D0C8(v8);
    id result = (id)swift_bridgeObjectRelease();
    if (v9)
    {
      *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_availableDictionaries) = v9;
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1000C43AC(void *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_pairAvailability);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  id v5 = [a1 canonicalIdentifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  LOBYTE(v5) = sub_1000F8844(v6, v8, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    sub_1000C4248();
    v24[3] = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_availableDictionaries);
    id v9 = a1;
    unint64_t v10 = swift_bridgeObjectRetain();
    unint64_t v11 = sub_1000C5B6C(v10, v9);
    char v13 = v12;

    __chkstk_darwin(v14);
    if (v13)
    {
      uint64_t v15 = 0;
    }
    else
    {
      v24[0] = v11;
      sub_1000C5C78(v24, (unint64_t *)&v23);
      uint64_t v15 = v23;
    }
    swift_bridgeObjectRelease();
    if (v15)
    {
      id v16 = [v15 rawAsset];
      if (v16)
      {
        os_log_type_t v17 = v16;
        unsigned int v18 = [v16 wasLocal];

        if (v18)
        {
          id v19 = [v9 canonicalIdentifier];
          Swift::Int v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::Int v22 = v21;

          swift_beginAccess();
          sub_100195EB0((Swift::Int *)v24, v20, v22);
          swift_endAccess();

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1000C45C0(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1000C5C90;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CD090;
  char v12 = _Block_copy(aBlock);
  id v13 = v10;
  Swift::Int v21 = v1;
  id v22 = a1;
  static DispatchQoS.unspecified.getter();
  os_log_type_t v24 = &_swiftEmptyArrayStorage;
  sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
  swift_release();
  uint64_t v14 = (uint64_t *)&v21[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_pairAvailability];
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  id v16 = [v22 canonicalIdentifier];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  LOBYTE(v16) = sub_1000F8844(v17, v19, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16 & 1;
}

void sub_1000C4908(uint64_t a1, void *a2)
{
}

uint64_t sub_1000C4930(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0]);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1000C5B08;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CD040;
  char v12 = _Block_copy(aBlock);
  id v13 = v10;
  uint64_t v14 = v1;
  id v15 = a1;
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, void))(v7 + 8))(v9, v17[0]);
  return swift_release();
}

void sub_1000C4BEC(uint64_t a1, void *a2)
{
  sub_1000C43AC(a2);
  uint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_pairAvailability);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  id v6 = [a2 canonicalIdentifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  LOBYTE(v6) = sub_1000F8844(v7, v9, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (qword_1002EE5E0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100011554(v10, (uint64_t)qword_10030E9A8);
    uint64_t v11 = a2;
    char v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543362;
      char v35 = v11;
      id v16 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v15 = v11;

      uint64_t v17 = "Dictionary already available for pair: %{public}@";
LABEL_18:
      _os_log_impl((void *)&_mh_execute_header, v12, v13, v17, v14, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  id v18 = a2;
  unint64_t v19 = swift_bridgeObjectRetain();
  unint64_t v20 = sub_1000C5B6C(v19, v18);
  char v22 = v21;

  __chkstk_darwin(v23);
  if (v22)
  {
    char v12 = 0;
  }
  else
  {
    unint64_t v34 = v20;
    sub_1000C5C78(&v34, (unint64_t *)&v35);
    char v12 = v35;
  }
  swift_bridgeObjectRelease();
  if (!v12)
  {
    if (qword_1002EE5E0 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100011554(v30, (uint64_t)qword_10030E9A8);
    uint64_t v11 = v18;
    char v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      id v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543362;
      char v35 = v11;
      uint64_t v32 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v31 = v11;

      uint64_t v17 = "Dictionary not available for: %{public}@";
      goto LABEL_18;
    }
LABEL_19:

    char v12 = v11;
    goto LABEL_22;
  }
  if (qword_1002EE5E0 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100011554(v24, (uint64_t)qword_10030E9A8);
  uint64_t v25 = v18;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138543362;
    char v35 = v25;
    unint64_t v29 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v25;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Starting download for dictionary: %{public}@", v28, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v26 = v25;
  }

  sub_1000C5110(v12);
LABEL_22:
}

void sub_1000C5110(void *a1)
{
  id v10 = [objc_allocWithZone((Class)MADownloadOptions) init];
  [v10 setAllowsCellularAccess:0];
  [v10 setDiscretionary:1];
  id v2 = [a1 rawAsset];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t v5[2] = v4;
    v5[3] = a1;
    v5[4] = v3;
    aBlock[4] = sub_1000C5A50;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000C58B8;
    void aBlock[3] = &unk_1002CCFA0;
    id v6 = _Block_copy(aBlock);
    id v7 = v3;
    id v8 = v10;
    id v9 = a1;
    swift_release();
    [v7 startDownload:v8 then:v6];

    _Block_release(v6);
  }
  else
  {
  }
}

uint64_t sub_1000C52D0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  os_log_type_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v15 = (void *)result;
    id v16 = *(id *)(result + OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryQueue);

    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = a3;
    v17[3] = a2;
    v17[4] = a4;
    aBlock[4] = sub_1000C5ABC;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008BA1C;
    void aBlock[3] = &unk_1002CCFF0;
    id v18 = _Block_copy(aBlock);
    id v19 = a4;
    id v20 = a3;
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v23 = _swiftEmptyArrayStorage;
    sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
    return swift_release();
  }
  return result;
}

void sub_1000C55CC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE5E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100011554(v6, (uint64_t)qword_10030E9A8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  id v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    v27[0] = v23;
    *(_DWORD *)uint64_t v14 = 136446210;
    id v15 = [v11 localizedLanguageName];
    if (!v15)
    {

      __break(1u);
      return;
    }
    id v16 = v15;
    uint64_t v22 = v14 + 4;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    uint64_t v26 = sub_100202FD4(v17, v19, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Finished downloading dictionary %{public}s; updating local dictionaries",
      v14,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a3 = v25;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = (void *)Strong;
    sub_1000C4248();
  }
  [a3 refreshState];
}

uint64_t sub_1000C58B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

id sub_1000C590C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DictionaryManager();
  [super dealloc];
}

uint64_t type metadata accessor for DictionaryManager()
{
  return self;
}

uint64_t sub_1000C59D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C5A08()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C5A50(uint64_t a1)
{
  return sub_1000C52D0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1000C5A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C5A6C()
{
  return swift_release();
}

uint64_t sub_1000C5A74()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000C5ABC()
{
  sub_1000C55CC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000C5AC8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000C5B08()
{
  sub_1000C4BEC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1000C5B10(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

unint64_t sub_1000C5B6C(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    do
    {
      while (__OFSUB__(v4--, 1))
      {
        __break(1u);
LABEL_13:
        __break(1u);
LABEL_14:
        __break(1u);
LABEL_15:
        swift_bridgeObjectRetain();
        unint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v4) {
          return v4;
        }
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
      if ((v4 & 0x8000000000000000) != 0) {
        goto LABEL_13;
      }
      if (v4 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_14;
      }
      id v6 = *(id *)(a1 + 32 + 8 * v4);
LABEL_9:
      uint64_t v7 = v6;
      sub_1000C6384(a2);
      char v9 = v8;
    }
    while ((v9 & 1) == 0 && v4);
  }
  return v4;
}

unint64_t sub_1000C5C78@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_1000C5CB8(a1, a2);
}

void sub_1000C5C90()
{
  sub_1000C43AC(*(void **)(v0 + 24));
}

unint64_t sub_1000C5CB8@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_1000C5B10(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1000C5CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C5D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  long long v56 = (char *)&v52 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v52 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v52 - v15;
  uint64_t v17 = Locale.ltLanguageCode.getter();
  uint64_t v57 = a2;
  if (v18)
  {
    if (v17 == a2 && v18 == a3) {
      char v19 = 1;
    }
    else {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = 0;
  }
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v20(v16, a1, v6);
  if (v19)
  {
    char v21 = 1;
  }
  else
  {
    if (Locale.identifier.getter() == v57 && v22 == a3) {
      char v21 = 1;
    }
    else {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
  v24(v16, v6);
  v20(v14, a1, v6);
  if (v21) {
    goto LABEL_21;
  }
  id v54 = v24;
  uint64_t v25 = Locale.identifier.getter();
  uint64_t v53 = a3;
  uint64_t v62 = v25;
  uint64_t v63 = v26;
  uint64_t v60 = 45;
  unint64_t v61 = 0xE100000000000000;
  uint64_t v58 = 95;
  unint64_t v59 = 0xE100000000000000;
  unint64_t v27 = sub_10000C350();
  uint64_t v28 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v30 = v29;
  uint64_t v31 = v53;
  swift_bridgeObjectRelease();
  if (v28 == v57 && v30 == v31)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = v54;
LABEL_21:
    v24(v14, v6);
    uint64_t v32 = v56;
    v20(v56, a1, v6);
    uint64_t v33 = v24;
LABEL_22:
    v33(v32, v6);
LABEL_23:
    unint64_t v34 = v55;
    v20(v55, a1, v6);
LABEL_24:
    v33(v34, v6);
    char v35 = 1;
    return v35 & 1;
  }
  unint64_t v52 = v27;
  uint64_t v37 = v57;
  uint64_t v38 = v31;
  char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t v33 = v54;
  v54(v14, v6);
  uint64_t v32 = v56;
  v20(v56, a1, v6);
  if (v39) {
    goto LABEL_22;
  }
  uint64_t v62 = v37;
  uint64_t v63 = v38;
  uint64_t v60 = 0x736E61482DLL;
  unint64_t v61 = 0xE500000000000000;
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  uint64_t v40 = v32;
  uint64_t v41 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v43 = v42;
  uint64_t v44 = Locale.ltLanguageCode.getter();
  if (v45)
  {
    if (v41 == v44 && v45 == v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v54;
      v54(v56, v6);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = v54;
    v54(v56, v6);
    swift_bridgeObjectRelease();
    unint64_t v34 = v55;
    v20(v55, a1, v6);
    if (v46) {
      goto LABEL_24;
    }
  }
  else
  {
    v54(v40, v6);
    swift_bridgeObjectRelease();
    unint64_t v34 = v55;
    v20(v55, a1, v6);
  }
  uint64_t v62 = v57;
  uint64_t v63 = v53;
  uint64_t v60 = 0x746E61482DLL;
  unint64_t v61 = 0xE500000000000000;
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  uint64_t v47 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v49 = v48;
  uint64_t v50 = Locale.ltLanguageCode.getter();
  if (v51)
  {
    if (v47 == v50 && v51 == v49) {
      char v35 = 1;
    }
    else {
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    v54(v34, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v54(v34, v6);
    swift_bridgeObjectRelease();
    char v35 = 0;
  }
  return v35 & 1;
}

void sub_1000C6384(void *a1)
{
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 rawAsset];
  if (!v7) {
    goto LABEL_22;
  }
  uint64_t v8 = v7;
  id v9 = [v7 attributes];

  if (!v9)
  {
LABEL_23:
    __break(1u);
    return;
  }
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  strcpy((char *)v28, "IndexLanguages");
  HIBYTE(v28[1]) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10020384C((uint64_t)v29), (v12 & 1) != 0))
  {
    sub_10000B170(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v29);
  if (!*((void *)&v31 + 1))
  {
    sub_1000132A0((uint64_t)&v30);
    return;
  }
  sub_100007620(&qword_1002EE8A8);
  if (swift_dynamicCast())
  {
    uint64_t v13 = (void *)v28[0];
    if (*(void *)(v28[0] + 16) < 2uLL)
    {
LABEL_18:
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v14 = *(void *)(v28[0] + 32);
    uint64_t v15 = *(void *)(v28[0] + 40);
    swift_bridgeObjectRetain();
    id v16 = [a1 sourceLocale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v14) = sub_1000C5D60((uint64_t)v6, v14, v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v6, v3);
    if (v14)
    {
      if (v13[2] < 2uLL)
      {
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v18 = v13[6];
      uint64_t v19 = v13[7];
      swift_bridgeObjectRetain();
      id v20 = [a1 targetLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v18) = sub_1000C5D60((uint64_t)v6, v18, v19);
      swift_bridgeObjectRelease();
      v17(v6, v3);
      if (v18)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    if (v13[2] >= 2uLL)
    {
      uint64_t v21 = v13[6];
      uint64_t v22 = v13[7];
      swift_bridgeObjectRetain();
      id v23 = [a1 sourceLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v21) = sub_1000C5D60((uint64_t)v6, v21, v22);
      swift_bridgeObjectRelease();
      v17(v6, v3);
      if (v21)
      {
        uint64_t v24 = v13[4];
        uint64_t v25 = v13[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v26 = [a1 targetLocale];
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        sub_1000C5D60((uint64_t)v6, v24, v25);
        swift_bridgeObjectRelease();
        v17(v6, v3);
        return;
      }
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_21;
  }
}

void sub_1000C676C()
{
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  id v2 = [v0 subviews];
  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    sub_1000C676C();
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

id sub_1000C68C0()
{
  return sub_1000C68E8(&OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___webview, (Class *)WKWebView_ptr);
}

id sub_1000C68D4()
{
  return sub_1000C68E8(&OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___notFoundLabel, (Class *)UILabel_ptr);
}

id sub_1000C68E8(uint64_t *a1, Class *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = [objc_allocWithZone(*a2) initWithFrame:0.0, 0.0, 0.0, 0.0];
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1000C6964()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___queue;
  id v8 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___queue);
  if (v8)
  {
    id v9 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___queue);
  }
  else
  {
    uint64_t v16 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    static DispatchQoS.unspecified.getter();
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1000C5CFC(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    uint64_t v14 = v1;
    uint64_t v15 = v0;
    sub_100007620(&qword_1002F3490);
    sub_10009A940(&qword_1002F3498, &qword_1002F3490);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v14);
    uint64_t v10 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    unint64_t v11 = *(void **)(v15 + v7);
    *(void *)(v15 + v7) = v10;
    id v9 = v10;

    id v8 = 0;
  }
  id v12 = v8;
  return v9;
}

id sub_1000C6BF0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___dictionaryManager;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___dictionaryManager);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___dictionaryManager);
LABEL_5:
    id v6 = v2;
    return v3;
  }
  id result = [self assetManager];
  if (result)
  {
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_1000C6C74(uint64_t a1, uint64_t a2, void *a3)
{
  v22[1] = a1;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_sourceLocale];
  uint64_t v11 = type metadata accessor for Locale();
  id v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v12(&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_targetLocale], 1, 1, v11);
  uint64_t v13 = &v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___webview] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___notFoundLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___queue] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___dictionaryManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_analytics] = &_swiftEmptyDictionarySingleton;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordsInspected] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordCountNotFound] = 0;
  uint64_t v14 = &v3[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_timeStamp];
  uint64_t v15 = self;
  uint64_t v16 = v3;
  id v17 = [v15 now];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v9, v6);
  *(void *)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_observer] = 0;

  if (a2)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  uint64_t v19 = (objc_class *)type metadata accessor for DictionaryViewController();
  v23.receiver = v16;
  v23.super_class = v19;
  [super initWithNibName:v18 bundle:a3];

  return v20;
}

id sub_1000C6F64(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = &v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_sourceLocale];
  uint64_t v8 = type metadata accessor for Locale();
  id v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_targetLocale], 1, 1, v8);
  uint64_t v10 = &v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___webview] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___notFoundLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___queue] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController____lazy_storage___dictionaryManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_analytics] = &_swiftEmptyDictionarySingleton;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordsInspected] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordCountNotFound] = 0;
  uint64_t v11 = &v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_timeStamp];
  id v12 = self;
  uint64_t v13 = v1;
  id v14 = [v12 now];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v6, v3);
  *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_observer] = 0;

  uint64_t v15 = (objc_class *)type metadata accessor for DictionaryViewController();
  v18.receiver = v13;
  v18.super_class = v15;
  [super initWithCoder:a1];

  return v16;
}

void sub_1000C72BC()
{
  uint64_t v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for DictionaryViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [self systemGroupedBackgroundColor];
    [v3 setBackgroundColor:v4];

    id v5 = [self mainBundle];
    v16._object = (void *)0x800000010025DAA0;
    v6._object = (void *)0x800000010025DA80;
    v6._countAndFlagsBits = 0xD000000000000010;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v16._countAndFlagsBits = 0xD000000000000010;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v16);

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setTitle:v8];

    sub_1000C7958();
    sub_1000C7AFC();
    id v14 = sub_1000C68C0();
    swift_getKeyPath();
    uint64_t v9 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();

    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_observer];
    *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_observer] = v9;

    id v11 = [self buttonWithType:7];
    [v11 addTarget:v1 action:"closeActionWithSender:" forControlEvents:0x2000];
    id v12 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v11];
    id v13 = [v1 navigationItem];
    [v13 setRightBarButtonItem:v12];

    sub_1000C8CC8();
  }
  else
  {
    __break(1u);
  }
}

void sub_1000C7534()
{
}

uint64_t sub_1000C75A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_analytics);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordCountNotFound);
  id v9 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain();
  id v10 = [v9 initWithInteger:v8];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v7;
  sub_100205C04((uint64_t)v10, 0xD000000000000011, 0x800000010025D740, isUniquelyReferenced_nonNull_native);
  uint64_t v12 = v22;
  swift_bridgeObjectRelease();
  id v13 = [objc_allocWithZone((Class)NSNumber) initWithInteger:*(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordsInspected)];
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v12;
  sub_100205C04((uint64_t)v13, 0x736E497364726F77, 0xEE00646574636570, v14);
  uint64_t v15 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_timeStamp, v2);
  Date.timeIntervalSinceNow.getter();
  double v17 = v16;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v18 = [objc_allocWithZone((Class)NSNumber) initWithDouble:-v17];
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v15;
  sub_100205C04((uint64_t)v18, 0x7275446C61746F74, 0xED00006E6F697461, v19);
  uint64_t v20 = v22;
  swift_bridgeObjectRelease();
  return v20;
}

void sub_1000C7958()
{
  id v0 = sub_1000C68C0();
  [v0 setHidden:1];

  id v1 = sub_1000C68C0();
  [v1 setOpaque:0];

  id v2 = sub_1000C68C0();
  sub_1000C676C();

  id v3 = sub_1000C68C0();
  id v4 = [v3 scrollView];

  id v5 = self;
  id v6 = [v5 clearColor];
  [v4 setBackgroundColor:v6];

  id v7 = sub_1000C68D4();
  [v7 setHidden:1];

  id v8 = sub_1000C68D4();
  [v8 setNumberOfLines:0];

  id v9 = sub_1000C68D4();
  [v9 setTextAlignment:1];

  id v10 = sub_1000C68D4();
  id v11 = [v5 secondaryLabelColor];
  [v10 setTextColor:v11];
}

void sub_1000C7AFC()
{
  id v1 = v0;
  id v2 = sub_1000C68C0();
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v3 = sub_1000C68D4();
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];

  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10024E930;
  id v5 = sub_1000C68D4();
  id v6 = [v5 leadingAnchor];

  id v7 = [v1 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  id v8 = v7;
  id v9 = [v7 leadingAnchor];

  id v10 = [v6 constraintEqualToSystemSpacingAfterAnchor:v9 multiplier:2.0];
  *(void *)(v4 + 32) = v10;
  id v11 = [v1 view];
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  id v13 = [v11 trailingAnchor];

  id v14 = sub_1000C68D4();
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToSystemSpacingAfterAnchor:v15 multiplier:2.0];
  *(void *)(v4 + 40) = v16;
  id v17 = [v1 view];
  if (!v17)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v18 = v17;
  char v19 = self;
  id v20 = [v18 centerYAnchor];

  id v21 = sub_1000C68D4();
  id v22 = [v21 centerYAnchor];

  id v23 = [v20 constraintEqualToAnchor:v22];
  *(void *)(v4 + 48) = v23;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 activateConstraints:isa];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v26 = v25;
  id v27 = sub_1000C68C0();
  sub_10023B960(v27);
}

void sub_1000C7E00()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    oslog = Strong;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
  }
  else
  {
    if (qword_1002EE5E0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030E9A8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "User pressed dictionary close button but there's no delegate to handle dismissal", v7, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000C7F94(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v69 = a2;
  id v71 = (char *)a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  __chkstk_darwin(v4);
  id v65 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  id v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v62 - v12;
  id v14 = (void *)type metadata accessor for Locale();
  uint64_t v72 = *(v14 - 1);
  uint64_t v15 = __chkstk_darwin(v14);
  id v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v70 = (char *)&v62 - v18;
  unint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (void **)((char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  id *v22 = sub_1000C6964();
  (*(void (**)(id *, void, unint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  char v23 = _dispatchPreconditionTest(_:)();
  (*(void (**)(id *, unint64_t))(v20 + 8))(v22, v19);
  if (v23)
  {
    id v24 = sub_1000C6BF0();
    id v25 = [v24 _allAvailableDefinitionDictionaries];

    if (!v25) {
      return;
    }
    unint64_t v26 = v3;
    uint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v19 = (unint64_t)sub_10015D0C8(v27);
    swift_bridgeObjectRelease();
    if (!v19) {
      return;
    }
    uint64_t v63 = v7;
    sub_10009A8D8((uint64_t)v71, (uint64_t)v13);
    uint64_t v28 = v72;
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, void *))(v72 + 48);
    if (v29(v13, 1, v14) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v30 = (uint64_t)v13;
LABEL_8:
      sub_1000CA304(v30);
      return;
    }
    uint64_t v62 = (void *)v26;
    id v71 = v17;
    long long v31 = *(void (**)(char *, char *, void *))(v28 + 32);
    uint64_t v32 = v70;
    v31(v70, v13, v14);
    sub_10009A8D8(v69, (uint64_t)v11);
    if (v29(v11, 1, v14) == 1)
    {
      (*(void (**)(char *, void *))(v28 + 8))(v32, v14);
      swift_bridgeObjectRelease();
      uint64_t v30 = (uint64_t)v11;
      goto LABEL_8;
    }
    uint64_t v33 = (uint64_t)v71;
    unint64_t v3 = (unint64_t)v14;
    v31(v71, v11, v14);
    id v34 = objc_allocWithZone((Class)_LTLocalePair);
    id v17 = (char *)v33;
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v36 = Locale._bridgeToObjectiveC()().super.isa;
    id v14 = [v34 initWithSourceLocale:isa targetLocale:v36];

    if (!(v19 >> 62))
    {
      uint64_t v37 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v69 = v3;
      if (v37) {
        goto LABEL_11;
      }
LABEL_25:

      swift_bridgeObjectRelease();
      uint64_t v60 = *(void (**)(char *, uint64_t))(v72 + 8);
      uint64_t v61 = v69;
      v60(v17, v69);
      v60(v70, v61);
      return;
    }
  }
  else
  {
LABEL_23:
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v69 = v3;
  if (!v37) {
    goto LABEL_25;
  }
LABEL_11:
  unint64_t v3 = v19 & 0xC000000000000001;
  uint64_t v38 = 4;
  while (1)
  {
    if (v3) {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v39 = *(id *)(v19 + 8 * v38);
    }
    uint64_t v40 = v39;
    uint64_t v41 = v38 - 3;
    if (__OFADD__(v38 - 4, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if ([v39 activated])
    {
      sub_1000C6384(v14);
      if (v42) {
        break;
      }
    }

    ++v38;
    if (v41 == v37) {
      goto LABEL_25;
    }
  }
  id v43 = [v40 rawAsset];
  if (v43)
  {
    uint64_t v44 = v43;
    id v45 = [v43 assetId];

    char v46 = v62;
    if (v45)
    {
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = v48;

      swift_bridgeObjectRelease();
      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      uint64_t v50 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v51 = (void *)swift_allocObject();
      v51[2] = v46;
      v51[3] = v14;
      v51[4] = v47;
      v51[5] = v49;
      aBlock[4] = sub_1000CA644;
      aBlock[5] = v51;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10008BA1C;
      void aBlock[3] = &unk_1002CD1A8;
      unint64_t v52 = _Block_copy(aBlock);
      id v53 = v46;
      id v54 = v14;
      uint64_t v55 = v63;
      static DispatchQoS.unspecified.getter();
      uint64_t v73 = _swiftEmptyArrayStorage;
      sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      long long v56 = v65;
      uint64_t v57 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v52);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v56, v57);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v55, v66);
      uint64_t v58 = *(void (**)(char *, uint64_t))(v72 + 8);
      uint64_t v59 = v69;
      v58(v71, v69);
      v58(v70, v59);
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1000C879C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a2 sourceLocale:v23, v24];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Locale.ltIdentifier.getter();
  id v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v11(v9, v6);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_analytics);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v13;
  *id v13 = 0x8000000000000000;
  sub_100205C04((uint64_t)v12, 0x6F4C656372756F73, 0xEC000000656C6163, isUniquelyReferenced_nonNull_native);
  *id v13 = v25;
  swift_bridgeObjectRelease();
  swift_endAccess();
  id v15 = [a2 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Locale.ltIdentifier.getter();
  v11(v9, v6);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v13;
  *id v13 = 0x8000000000000000;
  sub_100205C04((uint64_t)v16, 0x6F4C746567726174, 0xEC000000656C6163, v17);
  *id v13 = v25;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_100006274();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v19 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v13;
  *id v13 = 0x8000000000000000;
  sub_100205C04((uint64_t)v18, 0x6150656C61636F6CLL, 0xEA00000000007269, v19);
  *id v13 = v25;
  swift_bridgeObjectRelease();
  swift_endAccess();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_beginAccess();
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = *v13;
  *id v13 = 0x8000000000000000;
  sub_100205C04((uint64_t)v20, 0x44497465737361, 0xE700000000000000, v21);
  *id v13 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1000C8B08(uint64_t a1, NSString a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (id *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v10 = sub_1000C6964();
  (*(void (**)(id *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(id *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    sub_1000C7F94(a3, a4);
    if (v13)
    {
      id v14 = v13;
      if (a2) {
        NSString v15 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v15 = 0;
      }
      unsigned int v16 = [v14 _hasDefinitionForTerm:v15];

      if (v16)
      {
        if (a2) {
          a2 = String._bridgeToObjectiveC()();
        }
        id v17 = [v14 _definitionValueForTerm:a2];

        return (uint64_t)v17;
      }
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1000C8CC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5 - 8);
  uint64_t v48 = (uint64_t)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v8);
  char v11 = (char *)&v44 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)&v44 - v12;
  if (qword_1002EE5E0 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_100011554(v14, (uint64_t)qword_10030E9A8);
  unsigned int v16 = v1;
  uint64_t v47 = v15;
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v49 = v4;
  if (v19)
  {
    uint64_t v44 = v11;
    uint64_t v45 = v6;
    uint64_t v20 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136643075;
    char v21 = (uint64_t *)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
    unint64_t v22 = *(void *)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text + 8];
    char v46 = v13;
    if (v22)
    {
      uint64_t v23 = *v21;
      unint64_t v24 = v22;
    }
    else
    {
      unint64_t v24 = 0xE300000000000000;
      uint64_t v23 = 7104878;
    }
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100202FD4(v23, v24, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v20 + 12) = 2048;
    if (v21[1])
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = String.count.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
    }
    char v11 = v44;

    uint64_t v50 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Load dictionary item for: %{sensitive}s of length %ld", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v49;
    uint64_t v6 = v45;
    id v13 = v46;
  }
  else
  {
  }
  id v26 = [v16 viewIfLoaded];

  if (v26)
  {
    uint64_t v27 = *(void *)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text + 8];
    uint64_t v47 = *(void *)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
    uint64_t v28 = (uint64_t)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_sourceLocale];
    swift_beginAccess();
    sub_10009A8D8(v28, (uint64_t)v13);
    uint64_t v29 = (uint64_t)&v16[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_targetLocale];
    swift_beginAccess();
    uint64_t v30 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v4, 1, 1, v30);
    sub_10009A8D8((uint64_t)v13, (uint64_t)v11);
    uint64_t v31 = (uint64_t)v11;
    uint64_t v32 = v48;
    sub_10009A8D8(v29, v48);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    uint64_t v33 = (uint64_t)v13;
    id v34 = v16;
    uint64_t v35 = static MainActor.shared.getter();
    uint64_t v36 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v37 = (v36 + 56) & ~v36;
    uint64_t v38 = (v7 + v36 + v37) & ~v36;
    id v39 = (void *)swift_allocObject();
    v39[2] = v35;
    v39[3] = &protocol witness table for MainActor;
    uint64_t v40 = v47;
    v39[4] = v34;
    v39[5] = v40;
    v39[6] = v27;
    sub_1000CA158(v31, (uint64_t)v39 + v37);
    sub_1000CA158(v32, (uint64_t)v39 + v38);
    sub_100056780((uint64_t)v49, (uint64_t)&unk_1002F3FE8, (uint64_t)v39);
    swift_release();
    sub_1000CA304(v33);
  }
  else
  {
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Not updating currentText yet because view hasn't loaded yet; it will be updated when the view loads",
        v43,
        2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000C922C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[17] = v10;
  v8[18] = *(void *)(v10 - 8);
  v8[19] = swift_task_alloc();
  uint64_t v11 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  v8[20] = v11;
  v8[21] = *(void *)(v11 + 64);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[24] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000C93F8, v13, v12);
}

uint64_t sub_1000C93F8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[20];
  uint64_t v18 = v0[19];
  uint64_t v23 = v0[18];
  uint64_t v24 = v0[17];
  uint64_t v22 = v0[15];
  uint64_t v5 = v0[13];
  uint64_t v20 = v0[16];
  uint64_t v21 = v0[14];
  uint64_t v7 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v9 = (void *)v0[9];
  uint64_t v8 = v0[10];
  swift_release();
  id v19 = sub_1000C6964();
  sub_10009A8D8(v6, v1);
  sub_10009A8D8(v5, v3);
  uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = (v10 + 40) & ~v10;
  uint64_t v12 = (v2 + v10 + v11) & ~v10;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v8;
  v13[4] = v7;
  sub_1000CA158(v1, (uint64_t)v13 + v11);
  sub_1000CA158(v3, (uint64_t)v13 + v12);
  v0[6] = sub_1000CA4E4;
  v0[7] = v13;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10008BA1C;
  v0[5] = &unk_1002CD108;
  uint64_t v14 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  id v15 = v9;
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v18, v24);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1000C96A8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v16 = (void *)sub_1000C8B08(a2, a3, a4, a5);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = v16;
  aBlock[4] = sub_1000CA5D4;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CD158;
  id v19 = _Block_copy(aBlock);
  id v20 = v16;
  id v21 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000C5CFC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v23);
}

void sub_1000C99B0(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordsInspected);
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = v1;
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordsInspected) = v4;
  if (a1)
  {
    id v6 = a1;
    id v7 = [v6 longDefinition];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      uint64_t v29 = v9;
      unint64_t v28 = sub_10000C350();
      StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      swift_bridgeObjectRelease();
      id v12 = sub_1000C68C0();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();

      id v14 = sub_1000C68C0();
      [v14 setHidden:0];

      id v15 = sub_1000C68D4();
      [v15 setHidden:1];

      id v16 = sub_1000C68C0();
      sub_10023BBA8();

      return;
    }
    goto LABEL_10;
  }
  id v17 = sub_1000C68C0();
  NSString v18 = String._bridgeToObjectiveC()();

  id v19 = sub_1000C68C0();
  [v19 setHidden:1];

  id v20 = sub_1000C68D4();
  [v20 setHidden:0];

  id v21 = sub_1000C68D4();
  id v22 = [self mainBundle];
  v30._countAndFlagsBits = 0xD00000000000001ELL;
  v30._object = (void *)0x800000010025D790;
  v23._object = (void *)0x800000010025D770;
  v23._countAndFlagsBits = 0xD000000000000010;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v30);

  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v21 setText:v25];

  uint64_t v26 = *(void *)(v5 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordCountNotFound);
  BOOL v3 = __OFADD__(v26, 1);
  uint64_t v27 = v26 + 1;
  if (v3)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  *(void *)(v5 + OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_wordCountNotFound) = v27;
}

id sub_1000C9CCC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DictionaryViewController();
  [super dealloc];
}

uint64_t sub_1000C9E18()
{
  return type metadata accessor for DictionaryViewController();
}

uint64_t type metadata accessor for DictionaryViewController()
{
  uint64_t result = qword_1002F3FD0;
  if (!qword_1002F3FD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000C9E6C()
{
  sub_1000C9F78();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000C9F78()
{
  if (!qword_1002F6D40)
  {
    type metadata accessor for Locale();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F6D40);
    }
  }
}

uint64_t sub_1000C9FD0()
{
  uint64_t v1 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (!v9(v0 + v5, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v5, v7);
  }

  return _swift_deallocObject(v0, v5 + v4, v2 | 7);
}

uint64_t sub_1000CA158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CA1C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 56) & ~v5;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  uint64_t v12 = (uint64_t)v1 + v6;
  uint64_t v13 = (uint64_t)v1 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *id v14 = v2;
  v14[1] = sub_100021B58;
  return sub_1000C922C(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1000CA304(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000CA364()
{
  uint64_t v1 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  if (!v9(v0 + v5, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v5, v7);
  }

  return _swift_deallocObject(v0, v5 + v4, v2 | 7);
}

uint64_t sub_1000CA4E4()
{
  uint64_t v1 = *(void *)(sub_100007620((uint64_t *)&unk_1002F4110) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = (void *)v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = (void *)v0[4];
  uint64_t v7 = (uint64_t)v0 + ((*(void *)(v1 + 64) + v2 + v3) & ~v2);

  return sub_1000C96A8(v4, v5, v6, (uint64_t)v0 + v3, v7);
}

uint64_t sub_1000CA57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000CA58C()
{
  return swift_release();
}

uint64_t sub_1000CA594()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CA5D4()
{
  sub_1000C99B0(*(void **)(v0 + 24));
}

uint64_t sub_1000CA5FC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000CA644()
{
  return sub_1000C879C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000CA650()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CA688()
{
  return sub_1000C75A0(*(void *)(v0 + 16));
}

const char *sub_1000CA690()
{
  return "isLoading";
}

id sub_1000CA69C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isLoading];
  *a2 = (_BYTE)result;
  return result;
}

unsigned char *sub_1000CA6E8()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___cardCell;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___cardCell];
  if (v2)
  {
    uint64_t v3 = *(unsigned char **)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___cardCell];
  }
  else
  {
    uint64_t v4 = sub_1000CA74C(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unsigned char *sub_1000CA74C(void *a1)
{
  uint64_t v2 = [objc_allocWithZone((Class)type metadata accessor for CardCollectionViewCell()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  char v3 = v2[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded];
  v2[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded] = 1;
  if ((v3 & 1) == 0) {
    sub_10002A648();
  }
  id v4 = sub_1000298E0();
  v12[3] = type metadata accessor for DictionaryWordSelectionController();
  v12[4] = &off_1002CD230;
  v12[0] = a1;
  uint64_t v5 = (uint64_t)v4 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate;
  swift_beginAccess();
  id v6 = a1;
  sub_1000344BC((uint64_t)v12, v5, (uint64_t *)&unk_1002F00C0);
  swift_endAccess();

  uint64_t v7 = sub_1000298E0();
  uint64_t v8 = OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_enableSelectable;
  v7[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_enableSelectable] = 0;
  id v9 = sub_100208CFC();
  [v9 setSelectable:v7[v8]];

  id v10 = sub_100209288();
  [v10 setSelectable:v7[v8]];

  return v2;
}

id sub_1000CA894()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___scrollView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___scrollView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___scrollView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIScrollView) init];
    uint64_t v5 = self;
    id v6 = v4;
    id v7 = [v5 clearColor];
    [v6 setBackgroundColor:v7];

    [v6 _setContentInsetAdjustmentBehavior:2];
    [v6 setContentSize:*(double *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame + 16), *(double *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame + 24)+ *(double *)(v0+ OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_scrollViewAdditionalContentHeight)];
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1000CA9A0(double a1)
{
  id v3 = &v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame];
  *id v3 = 0u;
  v3[1] = 0u;
  id v4 = &v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalVisibleScrollRect];
  *id v4 = 0u;
  v4[1] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___cardCell] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translationAlternativeSelectedHandler];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController] = 0;
  id v6 = &v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initialTouchPointInTargetView];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initiallySetHighlightToFirstWord] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation] = 0;
  id v7 = &v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_word];
  *id v7 = 0;
  v7[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_scrollViewAdditionalContentHeight] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___scrollView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView] = 0;
  uint64_t v8 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundView;
  id v9 = objc_allocWithZone((Class)UIView);
  id v10 = v1;
  id v11 = [v9 init];
  id v12 = [self secondarySystemBackgroundColor];
  [v11 setBackgroundColor:v12];

  *(void *)&v1[v8] = v11;
  *(void *)&v10[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView] = 0;
  *(double *)&v10[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundHeight] = a1;

  v14.receiver = v10;
  v14.super_class = (Class)type metadata accessor for DictionaryWordSelectionController();
  return [super initWithNibName:0 bundle:0];
}

void sub_1000CAC10(char a1)
{
  uint64_t v2 = v1;
  v48.receiver = v2;
  v48.super_class = (Class)type metadata accessor for DictionaryWordSelectionController();
  [super viewDidAppear:a1 & 1];
  id v4 = (CGFloat *)&v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initialTouchPointInTargetView];
  if ((v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initialTouchPointInTargetView + 16] & 1) == 0)
  {
    sub_1000CCAE8(*v4, v4[1]);
    *id v4 = 0.0;
    v4[1] = 0.0;
    *((unsigned char *)v4 + 16) = 1;
  }
  if (v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initiallySetHighlightToFirstWord] != 1) {
    goto LABEL_16;
  }
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView;
  id v6 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView];
  if (v6)
  {
    id v7 = v6;
    HighlightTextView.removeHighlights()();
  }
  uint64_t v8 = sub_1000CA6E8();
  id v9 = sub_1000298E0();

  id v10 = sub_100209288();
  uint64_t v47 = 0;
  sub_100007620((uint64_t *)&unk_1002F40F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1002488D0;
  *(void *)(v11 + 32) = NSLinguisticTagSchemeTokenType;
  id v12 = objc_allocWithZone((Class)NSLinguisticTagger);
  type metadata accessor for NSLinguisticTagScheme(0);
  uint64_t v13 = NSLinguisticTagSchemeTokenType;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithTagSchemes:isa options:0];

  id v16 = [v10 text];
  [v15 setString:v16];

  id v17 = [v10 text];
  if (v17)
  {
    NSString v18 = v17;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = String.UTF16View.count.getter();
    swift_bridgeObjectRelease();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = &v47;
    *(void *)(v20 + 24) = v10;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_1000CD804;
    *(void *)(v21 + 24) = v20;
    aBlock[4] = sub_1000CD808;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000CD360;
    void aBlock[3] = &unk_1002CD460;
    id v22 = _Block_copy(aBlock);
    Swift::String v23 = (char *)v10;
    swift_retain();
    swift_release();
    [v15 enumerateTagsInRange:0 unit:v19 scheme:0 options:6 usingBlock:v22];

    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      NSString v25 = v47;
      swift_release();
      if (v25)
      {
        HighlightTextView.removeHighlights()();
        HighlightTextView.addHighlight(to:)(v25);
        id v26 = [v23 textInRange:v25];
        if (v26)
        {
          uint64_t v27 = v26;
          uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v30 = v29;
        }
        else
        {
          uint64_t v28 = 0;
          uint64_t v30 = 0;
        }
        uint64_t v31 = (uint64_t *)&v23[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
        *uint64_t v31 = v28;
        v31[1] = v30;

        swift_bridgeObjectRelease();
      }
      else
      {
      }
      uint64_t v32 = sub_1000CA6E8();
      id v33 = sub_1000298E0();

      id v34 = sub_100209288();
      uint64_t v35 = *(void **)&v2[v5];
      *(void *)&v2[v5] = v34;

      uint64_t v36 = *(void **)&v2[v5];
      if (v36)
      {
        [v36 frame];
        double v38 = v37;
        double v40 = v39;
        double v42 = v41;
        double v44 = v43;
        id v45 = sub_1000CA894();
        [v45 scrollRectToVisible:0, v38, v40, v42, v44];
      }
LABEL_16:
      sub_1000CB0D0();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_1000CB0D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DictionaryViewController();
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController;
  id v7 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController];
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController] = v5;

  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation];
  if (v8)
  {
    id v9 = *(void **)&v1[v6];
    if (v9)
    {
      id v10 = v8;
      uint64_t v11 = v9;
      dispatch thunk of PersistedTranslation.sourceLocale.getter();
      uint64_t v12 = type metadata accessor for Locale();
      uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
      v13(v4, 0, 1, v12);
      uint64_t v14 = (uint64_t)&v11[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_sourceLocale];
      swift_beginAccess();
      sub_1000344BC((uint64_t)v4, v14, (uint64_t *)&unk_1002F4110);
      swift_endAccess();
      dispatch thunk of PersistedTranslation.targetLocale.getter();
      v13(v4, 0, 1, v12);
      uint64_t v15 = (uint64_t)&v11[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_targetLocale];
      swift_beginAccess();
      sub_1000344BC((uint64_t)v4, v15, (uint64_t *)&unk_1002F4110);
      swift_endAccess();
      uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_word + 8];
      id v17 = &v11[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
      *(void *)id v17 = *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_word];
      *((void *)v17 + 1) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1000C8CC8();
      *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_delegate + 8] = &off_1002CD220;
      swift_unknownObjectWeakAssign();
      id v18 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v11];
      [v18 setModalPresentationStyle:7];
      id v19 = [v18 presentationController];
      if (v19)
      {
        uint64_t v20 = v19;
        [v19 setDelegate:v1];
      }
      id v21 = [v18 popoverPresentationController];
      if (v21)
      {
        id v22 = v21;
        [v21 setSourceView:*(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView]];
      }
      Swift::String v23 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView];
      if (v23)
      {
        id v24 = v23;
        HighlightTextView.currentHightlightFrame()((uint64_t)v54);

        sub_1000CD4BC((uint64_t)v54, (uint64_t)v55);
        if ((v56 & 1) == 0)
        {
          double v25 = *(double *)v55;
          double v26 = *(double *)&v55[1];
          double v27 = *(double *)&v55[2];
          double v28 = *(double *)&v55[3];
          id v29 = [v18 popoverPresentationController];
          [v29 setSourceRect:v25, v26, v27, v28];
        }
      }
      id v30 = [v18 popoverPresentationController];
      if (v30)
      {
        uint64_t v31 = v30;
        [v30 setPermittedArrowDirections:1];
      }
      id v32 = [v18 popoverPresentationController];
      if (v32)
      {
        id v33 = v32;
        sub_100007620((uint64_t *)&unk_1002F0270);
        uint64_t v34 = swift_allocObject();
        *(_OWORD *)(v34 + 16) = xmmword_10024CE10;
        uint64_t v35 = sub_1000CA6E8();
        id v36 = sub_1000298E0();

        *(void *)(v34 + 32) = v36;
        aBlock[0] = v34;
        specialized Array._endMutation()();
        sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v33 setPassthroughViews:isa];
      }
      id v38 = [v18 popoverPresentationController];
      if (v38)
      {
        double v39 = v38;
        [v38 setCanOverlapSourceViewRect:0];
      }
      id v40 = [v18 popoverPresentationController];
      if (v40)
      {
        double v41 = v40;
        id v42 = [v40 adaptiveSheetPresentationController];

        if (v42)
        {
          double v43 = self;
          NSString v44 = String._bridgeToObjectiveC()();
          uint64_t v45 = swift_allocObject();
          swift_unknownObjectUnownedInit();
          aBlock[4] = sub_1000CD5A4;
          aBlock[5] = v45;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000CB97C;
          void aBlock[3] = &unk_1002CD398;
          char v46 = _Block_copy(aBlock);
          swift_release();
          id v47 = [v43 _detentWithIdentifier:v44 resolutionContextBlock:v46];
          _Block_release(v46);

          [v42 setDelegate:v1];
          [v42 _setShouldDismissWhenTappedOutside:0];
          sub_100007620((uint64_t *)&unk_1002F0270);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_100249BA0;
          *(void *)(v48 + 32) = v47;
          id v49 = v47;
          *(void *)(v48 + 40) = [v43 largeDetent];
          aBlock[0] = v48;
          specialized Array._endMutation()();
          sub_10000B0CC(0, &qword_1002FCA10);
          Class v50 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v42 setDetents:v50];

          id v51 = [v49 _identifier];
          [v42 setLargestUndimmedDetentIdentifier:v51];

          [v42 setPrefersGrabberVisible:1];
        }
      }
      [v1 presentViewController:v18 animated:1 completion:0];
    }
  }
}

double sub_1000CB7C8()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = sub_1000CA6E8();
  uint64_t v2 = (char *)sub_1000298E0();

  id v3 = *(id *)&v2[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];
  [v3 setHidden:1];

  id v4 = [self mainScreen];
  [v4 bounds];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;

  v33.origin.x = v6;
  v33.origin.y = v8;
  v33.size.width = v10;
  v33.size.height = v12;
  double Height = CGRectGetHeight(v33);
  uint64_t v14 = (char *)swift_unknownObjectUnownedLoadStrong();
  CGFloat v15 = *(double *)&v14[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame];
  CGFloat v16 = *(double *)&v14[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame + 8];
  CGFloat v17 = *(double *)&v14[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame + 16];
  CGFloat v18 = *(double *)&v14[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame + 24];

  v34.origin.x = v15;
  v34.origin.y = v16;
  v34.size.width = v17;
  v34.size.height = v18;
  double MaxY = CGRectGetMaxY(v34);
  uint64_t v20 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v21 = sub_1000CA6E8();
  id v22 = (char *)sub_1000298E0();

  id v23 = *(id *)&v22[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];
  [v23 frame];
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;

  v35.origin.x = v25;
  v35.origin.y = v27;
  v35.size.width = v29;
  v35.size.height = v31;
  return Height - (MaxY - CGRectGetHeight(v35));
}

double sub_1000CB97C(uint64_t a1)
{
  uint64_t v1 = *(double (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  double v3 = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

id sub_1000CB9E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView];
  if (v2)
  {
    id v3 = v2;
    id result = [v1 view];
    if (!result)
    {
LABEL_11:
      __break(1u);
      return result;
    }
    double v5 = result;
    [result addSubview:v3];
  }
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  CGFloat v6 = result;
  [result addSubview:*(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundView]];

  id result = [v1 view];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v7 = result;
  id v8 = sub_1000CA894();
  [v7 addSubview:v8];

  id v9 = sub_1000CA894();
  CGFloat v10 = sub_1000CA6E8();
  id v11 = sub_1000298E0();

  [v9 addSubview:v11];
  sub_100007620(&qword_1002F4100);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1002488D0;
  *(void *)(v12 + 32) = type metadata accessor for UITraitUserInterfaceIdiom();
  *(void *)(v12 + 40) = &protocol witness table for UITraitUserInterfaceIdiom;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100007620(&qword_1002F4108);
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return (id)swift_release();
}

void sub_1000CBBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = Strong;
    id v6 = [Strong presentedViewController];

    if (v6)
    {
      aBlock[4] = sub_1000CD564;
      aBlock[5] = a3;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10008BA1C;
      void aBlock[3] = &unk_1002CD348;
      double v7 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v6 dismissViewControllerAnimated:1 completion:v7];
      _Block_release(v7);
    }
  }
}

void sub_1000CBCE0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:0 completion:0];
  }
}

void sub_1000CBD44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView];
  if (v2)
  {
    id v3 = v2;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v0 view];
    if (!v4)
    {
LABEL_17:
      __break(1u);
      return;
    }
    double v5 = v4;
    sub_10023B960(v3);
  }
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundView;
  [*(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = sub_1000CA894();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v8 = sub_1000CA6E8();
  id v9 = sub_1000298E0();

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  CGFloat v10 = sub_1000CA6E8();
  id v11 = sub_1000298E0();

  id v12 = [v11 layer];
  [v12 setCornerRadius:10.0];

  id v13 = [*(id *)&v1[v6] layer];
  [v13 setCornerRadius:10.0];

  id v14 = [v1 view];
  if (!v14)
  {
    __break(1u);
    goto LABEL_13;
  }
  CGFloat v15 = v14;
  [v14 convertRect:0 fromView:[v1 originalCardFrame]];
  double v17 = v16;
  double v19 = v18;

  id v20 = [v1 view];
  if (!v20)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v21 = v20;
  [v20 convertRect:0 fromView:[self originalVisibleScrollRect]];
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;

  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_10024EA10;
  id v31 = sub_1000CA894();
  id v32 = [v31 topAnchor];

  id v33 = [v1 view];
  if (!v33)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  CGRect v34 = v33;
  id v35 = [v33 topAnchor];

  v85.origin.x = v23;
  v85.origin.y = v25;
  v85.size.width = v27;
  v85.size.height = v29;
  id v36 = [v32 constraintEqualToAnchor:v35 constant:CGRectGetMinY(v85)];

  *(void *)(v30 + 32) = v36;
  id v37 = sub_1000CA894();
  id v38 = [v37 heightAnchor];

  v86.origin.x = v23;
  v86.origin.y = v25;
  v86.size.width = v27;
  v86.size.height = v29;
  id v39 = [v38 constraintEqualToConstant:CGRectGetHeight(v86)];

  *(void *)(v30 + 40) = v39;
  id v40 = sub_1000CA894();
  id v41 = [v40 leadingAnchor];

  id v42 = [v1 view];
  if (!v42)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v43 = v42;
  id v44 = [v42 leadingAnchor];

  v87.origin.x = v23;
  v87.origin.y = v25;
  v87.size.width = v27;
  v87.size.height = v29;
  id v45 = [v41 constraintEqualToAnchor:v44 constant:CGRectGetMinX(v87)];

  *(void *)(v30 + 48) = v45;
  id v46 = sub_1000CA894();
  id v47 = [v46 widthAnchor];

  v88.origin.x = v23;
  v88.origin.y = v25;
  v88.size.width = v27;
  v88.size.height = v29;
  id v48 = [v47 constraintEqualToConstant:CGRectGetWidth(v88)];

  *(void *)(v30 + 56) = v48;
  id v49 = sub_1000CA6E8();
  id v50 = sub_1000298E0();

  id v51 = [v50 topAnchor];
  id v52 = sub_1000CA894();
  id v53 = [v52 topAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53];
  *(void *)(v30 + 64) = v54;
  uint64_t v55 = sub_1000CA6E8();
  id v56 = sub_1000298E0();

  id v57 = [v56 heightAnchor];
  id v58 = [v57 constraintEqualToConstant:v19];

  *(void *)(v30 + 72) = v58;
  uint64_t v59 = sub_1000CA6E8();
  id v60 = sub_1000298E0();

  id v61 = [v60 centerXAnchor];
  id v62 = sub_1000CA894();
  id v63 = [v62 centerXAnchor];

  id v64 = [v61 constraintEqualToAnchor:v63];
  *(void *)(v30 + 80) = v64;
  id v65 = sub_1000CA6E8();
  id v66 = sub_1000298E0();

  id v67 = [v66 widthAnchor];
  id v68 = [v67 constraintEqualToConstant:v17];

  *(void *)(v30 + 88) = v68;
  id v69 = [*(id *)&v1[v6] topAnchor];
  id v70 = [v1 view];
  if (!v70)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v71 = v70;
  uint64_t v72 = self;
  id v73 = [v71 topAnchor];

  v89.origin.x = v23;
  v89.origin.y = v25;
  v89.size.width = v27;
  v89.size.height = v29;
  id v74 = [v69 constraintEqualToAnchor:v73 constant:CGRectGetMinY(v89)];

  *(void *)(v30 + 96) = v74;
  id v75 = [*(id *)&v1[v6] heightAnchor];
  id v76 = [v75 constraintEqualToConstant:*(double *)&v1[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundHeight]];

  *(void *)(v30 + 104) = v76;
  id v77 = [*(id *)&v1[v6] centerXAnchor];
  id v78 = sub_1000CA894();
  id v79 = [v78 centerXAnchor];

  id v80 = [v77 constraintEqualToAnchor:v79];
  *(void *)(v30 + 112) = v80;
  id v81 = [*(id *)&v1[v6] widthAnchor];
  id v82 = [v81 constraintEqualToConstant:v17];

  *(void *)(v30 + 120) = v82;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v72 activateConstraints:isa];
}

void sub_1000CC55C(uint64_t a1, double a2, double a3)
{
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for DictionaryWordSelectionController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2 a3];
  id v7 = [v3 presentedViewController];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v3;
    v12[4] = sub_1000CD828;
    void v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10008BA1C;
    v12[3] = &unk_1002CD3E8;
    CGFloat v10 = _Block_copy(v12);
    id v11 = v3;
    swift_release();
    [v8 dismissViewControllerAnimated:1 completion:v10];
    _Block_release(v10);
  }
}

void sub_1000CC710(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 view];
  if (v4)
  {
    id v48 = v4;
    type metadata accessor for HighlightTextView();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5
      && (uint64_t v6 = (char *)v5,
          [a1 locationInView:v5],
          CGFloat v8 = v7,
          CGFloat v10 = v9,
          HighlightTextView.getWordAtPoint(_:)(v7, v9),
          v11))
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView;
      objc_super v13 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView];
      if (v13)
      {
        id v14 = v13;
        HighlightTextView.removeHighlights()();
      }
      HighlightTextView.removeHighlights()();
      id v15 = sub_1000FCC60(v8, v10);
      if (v15)
      {
        double v16 = v15;
        HighlightTextView.addHighlight(to:)(v15);
        id v17 = [v6 textInRange:v16];
        if (v17)
        {
          double v18 = v17;
          uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v21 = v20;
        }
        else
        {
          uint64_t v19 = 0;
          uint64_t v21 = 0;
        }
        double v22 = (uint64_t *)&v6[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
        uint64_t *v22 = v19;
        v22[1] = v21;

        swift_bridgeObjectRelease();
      }
      CGFloat v23 = *(void **)&v2[v12];
      *(void *)&v2[v12] = v6;
      id v24 = v48;

      id v25 = [v2 presentedViewController];
      if (v25)
      {
        double v26 = v25;
        id v27 = [v25 popoverPresentationController];

        if (v27)
        {
          [v27 setSourceView:*(void *)&v2[v12]];
        }
      }
      double v28 = *(void **)&v2[v12];
      if (v28)
      {
        id v29 = v28;
        HighlightTextView.currentHightlightFrame()((uint64_t)v49);

        sub_1000CD4BC((uint64_t)v49, (uint64_t)v50);
        if ((v51 & 1) == 0)
        {
          double v30 = *(double *)v50;
          double v31 = *(double *)&v50[1];
          double v32 = *(double *)&v50[2];
          double v33 = *(double *)&v50[3];
          id v34 = [v2 presentedViewController];
          id v35 = [v34 popoverPresentationController];

          [v35 setSourceRect:v30, v31, v32, v33];
        }
      }
      id v36 = [v2 presentedViewController];
      if (v36)
      {
        id v37 = v36;
        id v38 = [v36 popoverPresentationController];

        if (v38)
        {
          id v39 = [v38 containerView];

          [v39 setNeedsLayout];
        }
      }
      id v40 = [v2 presentedViewController];
      if (v40)
      {
        id v41 = v40;
        id v42 = [v40 popoverPresentationController];

        if (v42)
        {
          id v43 = [v42 containerView];

          [v43 layoutIfNeeded];
        }
      }
      id v44 = *(char **)&v2[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController];
      if (v44)
      {
        uint64_t v45 = *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord + 8];
        id v46 = &v44[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
        *(void *)id v46 = *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
        *((void *)v46 + 1) = v45;
        id v47 = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1000C8CC8();
      }
    }
    else
    {
    }
  }
}

void sub_1000CCAE8(CGFloat a1, CGFloat a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView;
  CGFloat v7 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView);
  if (v7)
  {
    id v8 = v7;
    HighlightTextView.removeHighlights()();
  }
  CGFloat v9 = sub_1000CA6E8();
  id v10 = sub_1000298E0();

  uint64_t v11 = (char *)sub_100209288();
  HighlightTextView.removeHighlights()();
  id v12 = sub_1000FCC60(a1, a2);
  if (v12)
  {
    objc_super v13 = v12;
    HighlightTextView.addHighlight(to:)(v12);
    id v14 = [v11 textInRange:v13];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    uint64_t v19 = (uint64_t *)&v11[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
    uint64_t *v19 = v16;
    v19[1] = v18;

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  uint64_t v20 = sub_1000CA6E8();
  id v21 = sub_1000298E0();

  id v22 = sub_100209288();
  CGFloat v23 = *(void **)(v3 + v6);
  *(void *)(v3 + v6) = v22;
}

id sub_1000CCC78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DictionaryWordSelectionController();
  [super dealloc];
}

uint64_t type metadata accessor for DictionaryWordSelectionController()
{
  return self;
}

void sub_1000CCD94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView);
  id v6 = v5;
  CGFloat v7 = sub_1000CA6E8();
  id v8 = sub_1000298E0();

  id v9 = sub_100209288();
  if (!v5)
  {

    goto LABEL_15;
  }
  type metadata accessor for HighlightTextView();
  id v10 = v6;
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v43 = a1;
  id v12 = sub_1000CA6E8();
  id v13 = sub_1000298E0();

  id v14 = sub_100209288();
  uint64_t v45 = 0;
  sub_100007620((uint64_t *)&unk_1002F40F0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1002488D0;
  *(void *)(v15 + 32) = NSLinguisticTagSchemeTokenType;
  id v16 = objc_allocWithZone((Class)NSLinguisticTagger);
  type metadata accessor for NSLinguisticTagScheme(0);
  uint64_t v17 = NSLinguisticTagSchemeTokenType;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithTagSchemes:isa options:0];

  id v20 = [v14 text];
  [v19 setString:v20];

  id v21 = [v14 text];
  if (!v21)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v22 = v21;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = String.UTF16View.count.getter();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = &v45;
  *(void *)(v24 + 24) = v14;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000CD414;
  *(void *)(v25 + 24) = v24;
  aBlock[4] = sub_1000CD42C;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000CD360;
  void aBlock[3] = &unk_1002CD2A8;
  double v26 = _Block_copy(aBlock);
  id v27 = (char *)v14;
  swift_retain();
  swift_release();
  [v19 enumerateTagsInRange:0 unit:v23 scheme:0 options:6 usingBlock:v26];

  _Block_release(v26);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v29 = v45;
  swift_release();
  if (v29)
  {
    HighlightTextView.removeHighlights()();
    HighlightTextView.addHighlight(to:)(v29);
    id v30 = [v27 textInRange:v29];
    if (v30)
    {
      double v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v34 = 0;
    }
    a1 = v43;
    id v36 = (uint64_t *)&v27[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
    *id v36 = v32;
    v36[1] = v34;

    swift_bridgeObjectRelease();
    id v35 = *(char **)(v2 + v4);
    if (!v35) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }

  a1 = v43;
  id v35 = *(char **)(v2 + v4);
  if (v35)
  {
LABEL_13:
    id v37 = *(char **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController);
    if (v37)
    {
      uint64_t v38 = *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord + 8];
      id v39 = &v37[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
      *(void *)id v39 = *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
      *((void *)v39 + 1) = v38;
      id v40 = v35;
      id v41 = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1000C8CC8();
    }
  }
LABEL_15:
  id v42 = *(void (**)(uint64_t))(v2
                                       + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translationAlternativeSelectedHandler);
  if (v42)
  {
    swift_retain();
    v42(a1);
    sub_1000324E4((uint64_t)v42);
  }
}

void sub_1000CD208(uint64_t a1)
{
}

void sub_1000CD22C(void *a1)
{
}

void sub_1000CD264()
{
  id v1 = [v0 presentedViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    v6[4] = sub_1000CD4A4;
    v6[5] = v3;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    v6[2] = sub_10008BA1C;
    v6[3] = &unk_1002CD2F8;
    uint64_t v4 = _Block_copy(v6);
    id v5 = v0;
    swift_release();
    [v2 dismissViewControllerAnimated:1 completion:v4];
    _Block_release(v4);
  }
}

void sub_1000CD360(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  id v10 = a2;
  v9(a2, a3, a4, a5);
}

uint64_t sub_1000CD3DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CD414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000FD954(a1, a2, a3, a4, *(id **)(v4 + 16));
}

uint64_t sub_1000CD41C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CD42C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000CD454(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000CD464()
{
  return swift_release();
}

uint64_t sub_1000CD46C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000CD4A4()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:0 completion:0];
}

uint64_t sub_1000CD4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002EF8E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CD524()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000CD55C(uint64_t a1, uint64_t a2)
{
  sub_1000CBBCC(a1, a2, v2);
}

void sub_1000CD564()
{
}

uint64_t sub_1000CD56C()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

double sub_1000CD5A4()
{
  return sub_1000CB7C8();
}

uint64_t sub_1000CD5AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000CD5BC()
{
  id v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame];
  *id v1 = 0u;
  v1[1] = 0u;
  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalVisibleScrollRect];
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___cardCell] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translationAlternativeSelectedHandler];
  *uint64_t v3 = 0;
  v3[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initialTouchPointInTargetView];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initiallySetHighlightToFirstWord] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation] = 0;
  id v5 = &v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_word];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_scrollViewAdditionalContentHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController____lazy_storage___scrollView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView] = 0;
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_cardBackgroundView;
  id v7 = [objc_allocWithZone((Class)UIView) init];
  id v8 = [self secondarySystemBackgroundColor];
  [v7 setBackgroundColor:v8];

  *(void *)&v0[v6] = v7;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_highlightedView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1000CD744()
{
  id v0 = sub_1000CA894();
  [v0 contentSize];
  double v2 = v1;

  id v3 = sub_1000CA894();
  [v3 bounds];
  double v5 = v4;

  double v6 = v2 - v5;
  id v7 = sub_1000CA894();
  [v7 contentInset];
  double v9 = v8;

  id v10 = sub_1000CA894();
  [v10 setContentOffset:0, 0.0, v6 + v9];
}

uint64_t (**DisambiguationResultModel.defaultGlobalAttributeProvider.unsafeMutableAddressor())()
{
  return &static DisambiguationResultModel.defaultGlobalAttributeProvider;
}

unint64_t sub_1000CD84C(uint64_t a1, uint64_t a2)
{
  return sub_1000CD8C0(a1, a2, (uint64_t (*)(void))&static UIColor.sourceTextColor.getter, (uint64_t (*)(void))&static UIColor.targetTextColor.getter);
}

unint64_t (*static DisambiguationResultModel.defaultGlobalAttributeProvider.getter())(uint64_t a1, uint64_t a2)
{
  return sub_1000CD84C;
}

unint64_t sub_1000CD894(uint64_t a1, uint64_t a2)
{
  return sub_1000CD8C0(a1, a2, (uint64_t (*)(void))&static UIColor.sourceLinkColor.getter, (uint64_t (*)(void))&static UIColor.targetLinkColor.getter);
}

unint64_t sub_1000CD8C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v6 = type metadata accessor for DisambiguationResultModel.TextLocation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  double v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DisambiguationResultModel.TextLocation.source(_:), v6);
  char v10 = static DisambiguationResultModel.TextLocation.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v11 = sub_100055020();
  if (v10) {
    uint64_t v12 = a3();
  }
  else {
    uint64_t v12 = a4();
  }
  uint64_t v13 = v12;
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  *(void *)(inited + 40) = v13;
  uint64_t v15 = NSForegroundColorAttributeName;
  return sub_1001FF520(inited);
}

id sub_1000CDA3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)&v17 - v9;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  id v11 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v13 = Locale._bridgeToObjectiveC()().super.isa;
  id v14 = [v11 initWithSourceLocale:isa targetLocale:v13];

  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return v14;
}

uint64_t sub_1000CDBD0(uint64_t a1, uint64_t a2)
{
  double v2 = (*(double (**)(void))(a2 + 96))();
  if (v2 == 0.5) {
    return 0;
  }
  if (v2 == 0.75) {
    return 1;
  }
  if (v2 == 1.0) {
    return 2;
  }
  if (v2 == 1.25) {
    return 3;
  }
  return 4;
}

id sub_1000CDC54(uint64_t a1, uint64_t a2)
{
  double v2 = (void *)(*(uint64_t (**)(void))(a2 + 48))();
  id v3 = [v2 isPassthrough];

  return v3;
}

uint64_t sub_1000CDCA0()
{
  dispatch thunk of PersistedTranslation.translationResult.getter();
  sub_100029624(&v8, *((uint64_t *)&v9 + 1));
  uint64_t v0 = dispatch thunk of TranslationResult.disambiguableResult.getter();
  if (!v0)
  {
    sub_10000AB68((uint64_t)&v8);
    dispatch thunk of PersistedTranslation.translationResult.getter();
    sub_100029624(v7, v7[3]);
    uint64_t v5 = dispatch thunk of TranslationResult.alternatives.getter();
    if (*(void *)(v5 + 16))
    {
      sub_1000295C0(v5 + 32, (uint64_t)&v8);
    }
    else
    {
      uint64_t v10 = 0;
      long long v8 = 0u;
      long long v9 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v9 + 1))
    {
      sub_100029624(&v8, *((uint64_t *)&v9 + 1));
      uint64_t v4 = dispatch thunk of TranslationAlternative.romanization.getter();
      sub_10000AB68((uint64_t)&v8);
      sub_10000AB68((uint64_t)v7);
      return v4;
    }
    sub_10000AB68((uint64_t)v7);
    sub_10000B070((uint64_t)&v8, &qword_1002FA730);
    return 0;
  }
  double v1 = (void *)v0;
  sub_10000AB68((uint64_t)&v8);
  id v2 = [v1 romanization];
  if (!v2)
  {

    return 0;
  }
  id v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_1000CDE18()
{
  id v1 = [v0 identifier];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_1000CDE88()
{
  return [v0 ttsPlaybackRateDouble];
}

id sub_1000CDE98()
{
  return [v0 setTtsPlaybackRateDouble:];
}

uint64_t sub_1000CDEAC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000CF3D8(&qword_1002F4190, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  uint64_t result = sub_1000CF3D8(&qword_1002F4198, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000CDF30@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PersistedTranslation();
  uint64_t result = Identifiable<>.id.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000CDF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14)
{
  id v20 = (void *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization);
  *id v20 = 0;
  v20[1] = 0;
  uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble;
  *(void *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble) = 0x3FF0000000000000;
  uint64_t v22 = v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId;
  uint64_t v23 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v24 = v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale;
  uint64_t v25 = type metadata accessor for Locale();
  double v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);
  v26(v24, a3, v25);
  v26(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale, a4, v25);
  *(unsigned char *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_isFavorite) = a5;
  id v27 = (void *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText);
  *id v27 = a6;
  v27[1] = a7;
  double v28 = (void *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText);
  *double v28 = a8;
  v28[1] = a10;
  *id v20 = a11;
  v20[1] = a12;
  swift_bridgeObjectRelease();
  *(double *)(v14 + v21) = a9;
  *(unsigned char *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_showDisambiguation) = a13;
  swift_beginAccess();
  sub_1000A6A2C(a14, v22);
  swift_endAccess();
  return v14;
}

void sub_1000CE178()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v23 = v2;
  __chkstk_darwin(v2);
  id v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v21 = (uint64_t)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v10(v9, v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale, v6);
  Locale.identifier.getter();
  id v11 = *(void (**)(char *, uint64_t))(v7 + 8);
  v11(v9, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  v10(v9, v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale, v6);
  Locale.identifier.getter();
  v11(v9, v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_isFavorite));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  if ((*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v12 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble);
  }
  else {
    Swift::UInt64 v12 = 0;
  }
  Hasher._combine(_:)(v12);
  Hasher._combine(_:)(*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_showDisambiguation));
  uint64_t v13 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId;
  swift_beginAccess();
  uint64_t v14 = v13;
  uint64_t v15 = v21;
  sub_100021C4C(v14, v21);
  uint64_t v17 = v22;
  uint64_t v16 = v23;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v23) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v18 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v20, v15, v16);
    Hasher._combine(_:)(1u);
    sub_1000CF3D8(&qword_1002F43C0, (void (*)(uint64_t))&type metadata accessor for UUID);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
  }
}

uint64_t sub_1000CE5F4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId, (uint64_t *)&unk_1002F33E0);

  return swift_deallocClassInstance();
}

uint64_t sub_1000CE720()
{
  return type metadata accessor for TestableTranslation();
}

uint64_t type metadata accessor for TestableTranslation()
{
  uint64_t result = qword_1002F41C8;
  if (!qword_1002F41C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000CE774()
{
  type metadata accessor for Locale();
  if (v0 <= 0x3F)
  {
    sub_1000CE870();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000CE870()
{
  if (!qword_1002F38E0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F38E0);
    }
  }
}

uint64_t sub_1000CE8C8()
{
  return sub_1000CF3D8(&qword_1002F4398, (void (*)(uint64_t))type metadata accessor for TestableTranslation);
}

uint64_t sub_1000CE910()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000CE940@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CE958(&OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale, a1);
}

uint64_t sub_1000CE94C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CE958(&OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale, a1);
}

uint64_t sub_1000CE958@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1000CE9C8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000CEA04()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_1000CEA40()
{
  return *(double *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble);
}

void sub_1000CEA50(double a1)
{
  *(double *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble) = a1;
}

uint64_t sub_1000CEA60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId;
  swift_beginAccess();
  return sub_100021C4C(v3, a1);
}

uint64_t sub_1000CEAB4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TestableTranslation();
  uint64_t result = Identifiable<>.id.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000CEAF8(uint64_t *a1, uint64_t *a2)
{
  return sub_1000CEC30(*a1, *a2);
}

Swift::Int sub_1000CEB04()
{
  return Hasher._finalize()();
}

void sub_1000CEB48()
{
}

Swift::Int sub_1000CEB6C()
{
  return Hasher._finalize()();
}

uint64_t sub_1000CEBAC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000CF3D8(&qword_1002F43A0, (void (*)(uint64_t))type metadata accessor for TestableTranslation);
  uint64_t result = sub_1000CF3D8(&qword_1002F43A8, (void (*)(uint64_t))type metadata accessor for TestableTranslation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000CEC30(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  id v63 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100007620(&qword_1002F43B0);
  __chkstk_darwin(v65);
  uint64_t v68 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F33E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v64 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v63 - v9;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v73 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v72 = (char *)&v63 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v63 - v17;
  __chkstk_darwin(v16);
  id v20 = (char *)&v63 - v19;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)
    || (char v21 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    uint64_t v74 = a1;
    uint64_t v22 = a1 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale;
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v23(v20, v22, v10);
    uint64_t v24 = Locale.identifier.getter();
    uint64_t v26 = v25;
    id v27 = *(void (**)(char *, uint64_t))(v11 + 8);
    v27(v20, v10);
    uint64_t v71 = a2;
    v23(v18, a2 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_sourceLocale, v10);
    uint64_t v28 = Locale.identifier.getter();
    uint64_t v30 = v29;
    id v70 = v27;
    v27(v18, v10);
    if (v24 != v28) {
      goto LABEL_7;
    }
    if (v26 == v30)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v31 = v71;
      uint64_t v32 = v74;
    }
    else
    {
LABEL_7:
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v21 = 0;
      uint64_t v31 = v71;
      uint64_t v32 = v74;
      if ((v33 & 1) == 0) {
        return v21 & 1;
      }
    }
    uint64_t v34 = v72;
    v23(v72, v32 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale, v10);
    uint64_t v35 = Locale.identifier.getter();
    uint64_t v37 = v36;
    uint64_t v38 = v70;
    v70(v34, v10);
    uint64_t v39 = v31;
    uint64_t v40 = v31 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_targetLocale;
    id v41 = v73;
    v23(v73, v40, v10);
    uint64_t v42 = Locale.identifier.getter();
    uint64_t v44 = v43;
    v38(v41, v10);
    if (v35 != v42) {
      goto LABEL_11;
    }
    if (v37 == v44)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v45 = v74;
    }
    else
    {
LABEL_11:
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v21 = 0;
      uint64_t v45 = v74;
      if ((v46 & 1) == 0) {
        return v21 & 1;
      }
    }
    if (*(unsigned __int8 *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_isFavorite) != *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_isFavorite))
    {
LABEL_13:
      char v21 = 0;
      return v21 & 1;
    }
    if (*(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText) == *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText)
      && *(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText + 8) == *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displaySourceText + 8)
      || (char v21 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      if (*(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText) == *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText)
        && *(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText + 8) == *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_displayTargetText + 8)
        || (char v21 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        uint64_t v48 = *(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization + 8);
        uint64_t v49 = *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization + 8);
        if (v48)
        {
          if (!v49) {
            goto LABEL_13;
          }
          if (*(void *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization) != *(void *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_romanization)
            || v48 != v49)
          {
            char v21 = 0;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              return v21 & 1;
            }
          }
        }
        else if (v49)
        {
          goto LABEL_13;
        }
        if (*(double *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble) != *(double *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_ttsPlaybackRateDouble)
          || *(unsigned __int8 *)(v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_showDisambiguation) != *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_showDisambiguation))
        {
          goto LABEL_13;
        }
        uint64_t v50 = v45 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId;
        swift_beginAccess();
        uint64_t v51 = v66;
        sub_100021C4C(v50, v66);
        uint64_t v52 = v39 + OBJC_IVAR____TtC17SequoiaTranslator19TestableTranslation_selfLoggingInvocationId;
        swift_beginAccess();
        uint64_t v53 = v68;
        uint64_t v54 = v68 + *(int *)(v65 + 48);
        sub_100021C4C(v51, v68);
        sub_100021C4C(v52, v54);
        uint64_t v55 = v67;
        id v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
        uint64_t v57 = v69;
        if (v56(v53, 1, v69) == 1)
        {
          sub_10000B070(v51, (uint64_t *)&unk_1002F33E0);
          int v58 = v56(v54, 1, v57);
          if (v58 == 1) {
            uint64_t v59 = (uint64_t *)&unk_1002F33E0;
          }
          else {
            uint64_t v59 = &qword_1002F43B0;
          }
          if (v58 == 1) {
            char v21 = -1;
          }
          else {
            char v21 = 0;
          }
        }
        else
        {
          uint64_t v60 = v64;
          sub_100021C4C(v53, v64);
          if (v56(v54, 1, v57) == 1)
          {
            sub_10000B070(v51, (uint64_t *)&unk_1002F33E0);
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v60, v57);
            char v21 = 0;
            uint64_t v59 = &qword_1002F43B0;
          }
          else
          {
            id v61 = v63;
            (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v63, v54, v57);
            sub_1000CF3D8((unint64_t *)&qword_1002F43B8, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
            id v62 = *(void (**)(char *, uint64_t))(v55 + 8);
            v62(v61, v57);
            uint64_t v59 = (uint64_t *)&unk_1002F33E0;
            sub_10000B070(v51, (uint64_t *)&unk_1002F33E0);
            v62((char *)v60, v57);
          }
        }
        sub_10000B070(v53, v59);
      }
    }
  }
  return v21 & 1;
}

uint64_t sub_1000CF3D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DownloadLanguagesButton()
{
  return &type metadata for DownloadLanguagesButton;
}

uint64_t sub_1000CF430()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000CF44C()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for MainActor();
  uint64_t v4 = static MainActor.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  sub_100056954((uint64_t)v2, (uint64_t)&unk_1002F43D0, v5);
  return swift_release();
}

uint64_t sub_1000CF54C(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for URL();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000CF640, v4, v3);
}

uint64_t sub_1000CF640()
{
  swift_release();
  id v1 = [self defaultWorkspace];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v5 = *(void *)(v0 + 24);
    static URL.downloadLanguagesURL.getter();
    URL._bridgeToObjectiveC()(v6);
    uint64_t v8 = v7;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    sub_1001FF3E8((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v10 = [v2 openSensitiveURL:v8 withOptions:isa];
  }
  else
  {
    unsigned __int8 v10 = 2;
  }
  **(unsigned char **)(v0 + 16) = v10;
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1000CF784()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_1000CF7EC()
{
  uint64_t v0 = sub_100007620(&qword_1002EEF60);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002EED40);
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  Button.init(action:label:)();
  sub_100014894(&qword_1002EEF68, &qword_1002EEF60);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000CF988()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000CF9C0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021B58;
  return sub_1000CF54C(a1);
}

uint64_t sub_1000CFA70@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v46[1] = a2;
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v46 - v8;
  id v10 = [a1 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  static Locale.current.getter();
  uint64_t v11 = Locale.sqDisplayName(context:in:)();
  unint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v14(v7, v3);
  v14(v9, v3);
  if (v13) {
    uint64_t v15 = v11;
  }
  else {
    uint64_t v15 = 0x45474155474E414CLL;
  }
  if (v13) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = 0xE800000000000000;
  }
  unint64_t v47 = v16;
  uint64_t v48 = v15;
  id v17 = [a1 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  static Locale.current.getter();
  uint64_t v18 = Locale.sqDisplayName(context:in:)();
  unint64_t v20 = v19;
  v14(v7, v3);
  v14(v9, v3);
  if (v20) {
    uint64_t v21 = v18;
  }
  else {
    uint64_t v21 = 0x45474155474E414CLL;
  }
  if (!v20) {
    unint64_t v20 = 0xE800000000000000;
  }
  static UIContentUnavailableConfiguration.empty()();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [self _systemImageNamed:v22];

  UIContentUnavailableConfiguration.image.setter();
  uint64_t v24 = self;
  id v25 = [v24 mainBundle];
  v26._countAndFlagsBits = 0xD000000000000010;
  v50._object = (void *)0xE000000000000000;
  v26._object = (void *)0x800000010025DF30;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v50._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v50);

  UIContentUnavailableConfiguration.text.setter();
  id v28 = [v24 mainBundle];
  v51._object = (void *)0xE000000000000000;
  v29._object = (void *)0x800000010025DF50;
  v29._countAndFlagsBits = 0xD000000000000014;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v51._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v51);

  sub_100007620(&qword_1002EEC80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100247140;
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v32 = sub_1000149B4();
  unint64_t v33 = v47;
  *(void *)(v31 + 32) = v48;
  *(void *)(v31 + 40) = v33;
  *(void *)(v31 + 96) = &type metadata for String;
  *(void *)(v31 + 104) = v32;
  *(void *)(v31 + 64) = v32;
  *(void *)(v31 + 72) = v21;
  *(void *)(v31 + 80) = v20;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  UIContentUnavailableConfiguration.secondaryText.setter();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = (id)SFLocalizableWAPIStringKeyForKey();

  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;

  id v39 = [v24 mainBundle];
  v52._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = v36;
  v40._object = v38;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  v52._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v52);
  swift_bridgeObjectRelease();

  uint64_t v42 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
  UIButton.Configuration.title.setter();
  v42(v49, 0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  static UIColor.translateAccentColor.getter();
  uint64_t v43 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
  UIButton.Configuration.baseForegroundColor.setter();
  v43(v49, 0);
  UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v44 = (uint64_t (*)(unsigned char *, void))UIContentUnavailableConfiguration.buttonProperties.modify();
  UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
  return v44(v49, 0);
}

void sub_1000D0014()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v13 = &type metadata for TranslateFeatures;
  unint64_t v14 = sub_10000AB14();
  v12[0] = 2;
  char v4 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v12);
  if (v4)
  {
    id v5 = [self defaultWorkspace];
    if (v5)
    {
      uint64_t v6 = v5;
      static URL.downloadLanguagesURL.getter();
      URL._bridgeToObjectiveC()(v7);
      uint64_t v9 = v8;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_1001FF3E8((uint64_t)_swiftEmptyArrayStorage);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v6 openSensitiveURL:v9 withOptions:isa];
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v12[0] = 1;
    swift_retain();
    static Published.subscript.setter();
  }
}

void sub_1000D01F4()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultWorkspace];
  if (v4)
  {
    id v5 = v4;
    static URL.topLevelSettingsURL.getter();
    URL._bridgeToObjectiveC()(v6);
    uint64_t v8 = v7;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_1001FF3E8((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 openSensitiveURL:v8 withOptions:isa];
  }
}

uint64_t sub_1000D034C()
{
  static UIContentUnavailableConfiguration.empty()();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self _systemImageNamed:v0];

  UIContentUnavailableConfiguration.image.setter();
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v10._object = (void *)0x800000010025E020;
  v4._countAndFlagsBits = 0x524F5641465F4F4ELL;
  v4._object = (void *)0xEC00000053455449;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000011;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v10);

  UIContentUnavailableConfiguration.text.setter();
  id v6 = [v2 mainBundle];
  v11._countAndFlagsBits = 0xD000000000000013;
  v7._countAndFlagsBits = 0xD000000000000014;
  v11._object = (void *)0x800000010025E060;
  v7._object = (void *)0x800000010025E040;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v11);

  UIContentUnavailableConfiguration.secondaryText.setter();
  return UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
}

uint64_t sub_1000D050C()
{
  static UIContentUnavailableConfiguration.empty()();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self _systemImageNamed:v0];

  UIContentUnavailableConfiguration.image.setter();
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._countAndFlagsBits = 0xD000000000000016;
  v24._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000010025DF70;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v24._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v24);

  UIContentUnavailableConfiguration.text.setter();
  id v6 = [v2 mainBundle];
  v7._countAndFlagsBits = 0xD00000000000001DLL;
  v25._object = (void *)0xE000000000000000;
  v7._object = (void *)0x800000010025DF90;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v25);

  Swift::String v23 = v9;
  v10._countAndFlagsBits = 10;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  id v11 = [v2 mainBundle];
  v12._countAndFlagsBits = 0xD000000000000031;
  v26._object = (void *)0xE000000000000000;
  v12._object = (void *)0x800000010025DFB0;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v26);

  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  UIContentUnavailableConfiguration.secondaryText.setter();
  id v15 = [v2 mainBundle];
  v27._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = 0x45535F4F545F4F47;
  v16._object = (void *)0xEE0053474E495454;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v27);

  uint64_t v18 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
  UIButton.Configuration.title.setter();
  v18(v22, 0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  static UIColor.translateAccentColor.getter();
  unint64_t v19 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.button.modify();
  UIButton.Configuration.baseForegroundColor.setter();
  v19(v22, 0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  unint64_t v20 = (void (*)(unsigned char *, void))UIContentUnavailableConfiguration.buttonProperties.modify();
  UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
  v20(v22, 0);
  return UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
}

void sub_1000D08B8()
{
  uint64_t v0 = sub_100007620(&qword_1002EFD90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultWorkspace];
  if (v3)
  {
    Swift::String v4 = v3;
    URL.init(string:)();
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    Swift::String v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      Swift::String v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    sub_1001FF3E8((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 openSensitiveURL:v8 withOptions:isa];
  }
}

unint64_t sub_1000D0A68()
{
  unint64_t result = qword_1002F43D8;
  if (!qword_1002F43D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F43D8);
  }
  return result;
}

uint64_t sub_1000D0ABC()
{
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

uint64_t sub_1000D0B1C()
{
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

uint64_t sub_1000D0B78()
{
  sub_1000D10D8();
  EnvironmentValues.subscript.getter();
  return v1;
}

void sub_1000D0BB4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1000D0BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1000D0F8C();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_1000D0C34@<X0>(unsigned char *a1@<X8>)
{
  sub_1000D1030();
  uint64_t result = UITraitCollection.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1000D0C84(uint64_t a1)
{
  return sub_1000D0ABC();
}

uint64_t sub_1000D0CD0()
{
  type metadata accessor for GenderTipManager(0);
  uint64_t v0 = swift_allocObject();
  sub_100007620(&qword_1002F1378);
  Published.init(initialValue:)();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator16GenderTipManager_mostRecentCreationDate;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_10030E890 = v0;
  return result;
}

uint64_t sub_1000D0D8C@<X0>(void *a1@<X8>)
{
  return sub_1000D0E38(&qword_1002EE590, &qword_10030E890, a1);
}

uint64_t sub_1000D0DB0()
{
  if (qword_1002EE590 != -1) {
    swift_once();
  }
  qword_10030E898 = qword_10030E890;

  return swift_retain();
}

uint64_t sub_1000D0E14@<X0>(void *a1@<X8>)
{
  return sub_1000D0E38(&qword_1002EE598, &qword_10030E898, a1);
}

uint64_t sub_1000D0E38@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_retain();
}

uint64_t sub_1000D0E94@<X0>(void *a1@<X8>)
{
  sub_1000D1084();
  uint64_t result = UITraitCollection.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1000D0EE4(uint64_t a1)
{
  return sub_1000D0B1C();
}

unint64_t sub_1000D0F38()
{
  unint64_t result = qword_1002F43E0;
  if (!qword_1002F43E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F43E0);
  }
  return result;
}

unint64_t sub_1000D0F8C()
{
  unint64_t result = qword_1002F43E8;
  if (!qword_1002F43E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F43E8);
  }
  return result;
}

uint64_t sub_1000D0FE0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1000D1030()
{
  unint64_t result = qword_1002F9860;
  if (!qword_1002F9860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9860);
  }
  return result;
}

unint64_t sub_1000D1084()
{
  unint64_t result = qword_1002FCA00;
  if (!qword_1002FCA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FCA00);
  }
  return result;
}

unint64_t sub_1000D10D8()
{
  unint64_t result = qword_1002F43F0;
  if (!qword_1002F43F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F43F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GenderTipManagerTrait()
{
  return &type metadata for GenderTipManagerTrait;
}

ValueMetadata *type metadata accessor for SequoiaAppLayoutTrait()
{
  return &type metadata for SequoiaAppLayoutTrait;
}

unsigned char *storeEnumTagSinglePayload for SequoiaAppNavigationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D1218);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SequoiaAppNavigationStyle()
{
  return &type metadata for SequoiaAppNavigationStyle;
}

ValueMetadata *type metadata accessor for SequoiaAppLayoutKey()
{
  return &type metadata for SequoiaAppLayoutKey;
}

ValueMetadata *type metadata accessor for GenderTipManagerKey()
{
  return &type metadata for GenderTipManagerKey;
}

uint64_t destroy for ErrorAlert()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ErrorAlert(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ErrorAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ErrorAlert(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ErrorAlert(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorAlert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ErrorAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorAlert()
{
  return &type metadata for ErrorAlert;
}

uint64_t sub_1000D14D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D14F4()
{
  sub_100009AF8(*v0);
  sub_100007620(&qword_1002FAF70);
  Binding.projectedValue.getter();
  sub_100007620(&qword_1002F43F8);
  sub_100007620(&qword_1002EF0C8);
  sub_100014894(&qword_1002F4400, &qword_1002F43F8);
  sub_10000C350();
  sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
  View.alert<A, B, C, D>(_:isPresented:presenting:actions:message:)();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000D16A8(uint64_t a1, _OWORD *a2)
{
  LocalizedStringKey.init(stringLiteral:)();
  long long v3 = (_OWORD *)swift_allocObject();
  long long v4 = a2[1];
  v3[1] = *a2;
  v3[2] = v4;
  v3[3] = a2[2];
  sub_1000D187C((uint64_t)a2);

  return Button<>.init(_:action:)();
}

uint64_t sub_1000D176C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100009AF8(*(unsigned char *)(a1 + 1));
  sub_10000C350();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1000D17C8()
{
  return sub_1000D14F4();
}

uint64_t sub_1000D1804(uint64_t a1)
{
  return sub_1000D16A8(a1, *(_OWORD **)(v1 + 16));
}

uint64_t sub_1000D180C()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1000D1854()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1000D187C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000D18C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D19CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100237050(*a1, *a2);
}

Swift::Int sub_1000D19D8()
{
  return sub_1000F7938();
}

uint64_t sub_1000D19E0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D1A74()
{
  return sub_1000F8228();
}

unint64_t sub_1000D1A7C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000D40B4(*a1);
  *a2 = result;
  return result;
}

void sub_1000D1AAC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0xE90000000000006BLL;
  unint64_t v4 = 0x726F7774654E6F6ELL;
  if (*v1 != 1)
  {
    unint64_t v4 = 0xD000000000000014;
    unint64_t v3 = 0x8000000100259F00;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x8000000100259EE0;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_1000D1B10()
{
  return sub_10002249C();
}

uint64_t sub_1000D1B24()
{
  return sub_10002249C();
}

uint64_t sub_1000D1B38()
{
  return sub_10002249C();
}

uint64_t sub_1000D1B4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v77 = *(void *)(v2 - 8);
  uint64_t v78 = v2;
  __chkstk_darwin(v2);
  id v76 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  id v73 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F2C00);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  uint64_t v72 = v8;
  __chkstk_darwin(v7);
  id v70 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v66 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v80 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F2BE8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v68 = v13;
  uint64_t v69 = v14;
  __chkstk_darwin(v13);
  uint64_t v65 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F2BF8);
  __chkstk_darwin(v16 - 8);
  id v79 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F2BF0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  Swift::String v25 = (char *)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = [objc_allocWithZone((Class)type metadata accessor for AirplaneModeConfiguration()) init];
  uint64_t v26 = v1 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__airplaneModeEnabled;
  LOBYTE(v81) = 0;
  Published.init(initialValue:)();
  Swift::String v27 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v27(v26, v25, v22);
  uint64_t v28 = v1 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__onDeviceModeEnabled;
  LOBYTE(v81) = 0;
  Published.init(initialValue:)();
  v27(v28, v25, v22);
  uint64_t v29 = v1 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__noNetwork;
  LOBYTE(v81) = 0;
  Published.init(initialValue:)();
  v27(v29, v25, v22);
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext_subscriptions) = _swiftEmptyArrayStorage;
  uint64_t v30 = OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext_networkMonitor;
  type metadata accessor for NWPathMonitor();
  swift_allocObject();
  *(void *)(v1 + v30) = NWPathMonitor.init()();
  id v31 = *(id *)(v1 + 16);
  uint64_t v32 = dispatch thunk of AirplaneModeConfiguration.isEnabled.getter();

  id v81 = (void *)v32;
  id v63 = self;
  id v82 = [v63 mainRunLoop];
  uint64_t v61 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v33 = *(void *)(v61 - 8);
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v62 = v33 + 56;
  uint64_t v34 = (uint64_t)v79;
  v60(v79, 1, 1, v61);
  sub_100007620(&qword_1002F2C60);
  uint64_t v58 = sub_10000B0CC(0, &qword_1002F2C40);
  sub_100014894(&qword_1002F2C68, &qword_1002F2C60);
  uint64_t v59 = sub_10007854C(&qword_1002F2C48, &qword_1002F2C40);
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v34, &qword_1002F2BF8);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  id v56 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100014894(&qword_1002F2C70, &qword_1002F2BF0);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v53 = v1 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext_subscriptions;
  swift_beginAccess();
  uint64_t v55 = sub_100007620((uint64_t *)&unk_1002F9850);
  uint64_t v54 = sub_100014894(&qword_1002F2C58, (uint64_t *)&unk_1002F9850);
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v35 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  LOBYTE(v32) = NSUserDefaults.onDeviceOnly.getter();

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v81) = v32 & 1;
  swift_retain();
  static Published.subscript.setter();
  id v52 = self;
  id v36 = [v52 defaultCenter];
  NSString v37 = String._bridgeToObjectiveC()();
  uint64_t v38 = v64;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v57 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v81 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v40 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v66, 1, 1, v39);
  v51[1] = sub_1000D4190(&qword_1002FAF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_10007854C((unint64_t *)&qword_1002F9840, (unint64_t *)&qword_1002EEE30);
  Swift::String v41 = v65;
  uint64_t v42 = v67;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v40, &qword_1002FAEF0);

  uint64_t v43 = *(char **)(v80 + 8);
  v80 += 8;
  uint64_t v66 = v43;
  ((void (*)(char *, uint64_t))v43)(v38, v42);
  sub_100014894(&qword_1002F2C78, &qword_1002F2BE8);
  swift_retain();
  uint64_t v44 = v68;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v44);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v45 = [v52 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  id v81 = [v63 mainRunLoop];
  uint64_t v46 = (uint64_t)v79;
  v60(v79, 1, 1, v61);
  unint64_t v47 = v70;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v46, &qword_1002F2BF8);

  ((void (*)(char *, uint64_t))v66)(v38, v42);
  sub_100014894(&qword_1002F2C50, &qword_1002F2C00);
  swift_retain();
  uint64_t v48 = v71;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v48);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v81 = _swiftEmptyArrayStorage;
  sub_1000D4190(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007620(&qword_1002F3490);
  sub_100014894(&qword_1002F3498, &qword_1002F3490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v78);
  uint64_t v49 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  NWPathMonitor.start(queue:)();
  swift_release();

  swift_retain();
  swift_retain();
  sub_100019614((uint64_t)sub_1000D41F4);
  NWPathMonitor.pathUpdateHandler.setter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000D2984()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000D2A10()
{
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSUserDefaults.onDeviceOnly.getter();

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000D2AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v14 + ((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v17;
  aBlock[4] = sub_1000D42A0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CD890;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000D4190((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v19);
}

uint64_t sub_1000D2E70()
{
  uint64_t v0 = type metadata accessor for NWPath.Status();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NWPath.status.getter();
  int v4 = (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 88))(v3, v0);
  int v5 = enum case for NWPath.Status.unsatisfied(_:);
  swift_getKeyPath();
  swift_getKeyPath();
  if (v4 == v5)
  {
    v7[14] = 1;
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    v7[15] = 0;
    swift_retain();
    static Published.subscript.setter();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_1000D2FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v27 = sub_100007620(&qword_1002F4608);
  uint64_t v29 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v26 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100007620(&qword_1002F4610);
  uint64_t v28 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v22 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F2128);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_100007620((uint64_t *)&unk_1002FCB50);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F2170, &qword_1002F2128);
  uint64_t v20 = Publisher.eraseToAnyPublisher()();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v8, v5);
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v19 = Publisher.eraseToAnyPublisher()();
  v9(v8, v5);
  sub_100007620(&qword_1002F20C0);
  sub_100014894(&qword_1002F45E8, &qword_1002F20C0);
  uint64_t v10 = Publisher.eraseToAnyPublisher()();
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v11 = Publisher.eraseToAnyPublisher()();
  v9(v8, v5);
  uint64_t v32 = v10;
  swift_allocObject();
  swift_weakInit();
  sub_100007620(&qword_1002F45F0);
  sub_100007620(&qword_1002FAED0);
  sub_100014894(&qword_1002F45F8, &qword_1002F45F0);
  sub_100014894(&qword_1002F31D8, &qword_1002FAED0);
  uint64_t v12 = v22;
  Publisher.combineLatest<A, B, C>(_:_:_:)();
  swift_release();
  uint64_t v31 = v20;
  uint64_t v32 = v19;
  uint64_t v30 = v11;
  sub_100007620(&qword_1002F2C60);
  sub_100007620(&qword_1002F1568);
  sub_100014894(&qword_1002F2C68, &qword_1002F2C60);
  sub_100014894(&qword_1002F4618, &qword_1002F4610);
  uint64_t v14 = v25;
  unint64_t v13 = v26;
  Publisher.combineLatest<A, B, C, D>(_:_:_:_:)();
  sub_100014894(&qword_1002F4620, &qword_1002F4608);
  uint64_t v15 = v27;
  uint64_t v16 = v13;
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v15);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v14);
  return v17;
}

uint64_t sub_1000D3584@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v9 = sub_1000D45A8(a2, a3, v7);
    uint64_t result = swift_release();
    char v10 = v9 & 1;
  }
  else
  {
    char v10 = 0;
  }
  *a4 = v10;
  return result;
}

unsigned char *sub_1000D361C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X2>, unsigned char *a4@<X3>, char *a5@<X8>)
{
  char v5 = 3;
  if ((*a2 & 1) == 0)
  {
    if (*a4) {
      char v5 = 1;
    }
    else {
      char v5 = 3;
    }
    if (*a3) {
      char v5 = 0;
    }
    if (*result) {
      char v5 = 2;
    }
  }
  *a5 = v5;
  return result;
}

uint64_t sub_1000D3658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a3;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for Locale();
  uint64_t v39 = *(void *)(v42 - 8);
  uint64_t v41 = *(void *)(v39 + 64);
  uint64_t v4 = __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v33 - v6;
  uint64_t v7 = sub_100007620(&qword_1002F45E0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v47 = v8;
  __chkstk_darwin(v7);
  id v45 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F2128);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v3;
  swift_beginAccess();
  sub_100007620((uint64_t *)&unk_1002FCB50);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F2170, &qword_1002F2128);
  uint64_t v35 = Publisher.eraseToAnyPublisher()();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v11 + 8);
  v14(v13, v10);
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v15 = Publisher.eraseToAnyPublisher()();
  uint64_t v36 = v15;
  v14(v13, v10);
  sub_100007620(&qword_1002F20C0);
  sub_100014894(&qword_1002F45E8, &qword_1002F20C0);
  uint64_t v16 = Publisher.eraseToAnyPublisher()();
  uint64_t v37 = v16;
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v17 = Publisher.eraseToAnyPublisher()();
  v14(v13, v10);
  uint64_t v50 = v16;
  uint64_t v51 = v15;
  uint64_t v48 = v17;
  uint64_t v49 = v35;
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = v38;
  uint64_t v19 = v39;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  uint64_t v22 = v42;
  v21(v38, v43, v42);
  uint64_t v23 = v40;
  v21(v40, v44, v22);
  uint64_t v24 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v25 = (v24 + 24) & ~v24;
  uint64_t v26 = (v41 + v24 + v25) & ~v24;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v18;
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(v19 + 32);
  v28(v27 + v25, v20, v22);
  v28(v27 + v26, v23, v22);
  sub_100007620(&qword_1002F2C60);
  sub_100007620(&qword_1002F45F0);
  sub_100007620(&qword_1002F1568);
  sub_100014894(&qword_1002F2C68, &qword_1002F2C60);
  sub_100014894(&qword_1002F45F8, &qword_1002F45F0);
  uint64_t v29 = v45;
  Publisher.combineLatest<A, B, C, D>(_:_:_:_:)();
  swift_release();
  sub_100014894(&qword_1002F4600, &qword_1002F45E0);
  uint64_t v30 = v46;
  uint64_t v31 = Publisher.eraseToAnyPublisher()();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v30);
  return v31;
}

uint64_t sub_1000D3C18@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, void (*a5)(char *, uint64_t)@<X5>, uint64_t a6@<X6>, char *a7@<X8>)
{
  unsigned __int8 v10 = *a1;
  uint64_t v11 = *a2;
  int v12 = *a3;
  int v13 = *a4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  char v15 = 3;
  if (result)
  {
    unsigned __int8 v16 = sub_1000D45A8(a5, a6, v11);
    uint64_t result = swift_release();
    if (v16) {
      char v17 = 3;
    }
    else {
      char v17 = 2;
    }
    if (v13) {
      char v18 = 1;
    }
    else {
      char v18 = 3;
    }
    if (v12) {
      char v18 = 0;
    }
    if ((v16 | v10)) {
      char v15 = v17;
    }
    else {
      char v15 = v18;
    }
  }
  *a7 = v15;
  return result;
}

uint64_t sub_1000D3CEC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__airplaneModeEnabled;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__onDeviceModeEnabled, v2);
  v3(v0 + OBJC_IVAR____TtC17SequoiaTranslator17ErrorStateContext__noNetwork, v2);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000D3E04()
{
  return type metadata accessor for ErrorStateContext();
}

uint64_t type metadata accessor for ErrorStateContext()
{
  uint64_t result = qword_1002F4450;
  if (!qword_1002F4450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D3E58()
{
  sub_1000AFBD4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for ErrorStateContext.StateError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D3FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ErrorStateContext.StateError()
{
  return &type metadata for ErrorStateContext.StateError;
}

unint64_t sub_1000D4020()
{
  unint64_t result = qword_1002F45D8;
  if (!qword_1002F45D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F45D8);
  }
  return result;
}

uint64_t sub_1000D4074@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ErrorStateContext();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1000D40B4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C85D0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000D4100()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D4138()
{
  return sub_1000D2984();
}

uint64_t sub_1000D4140@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000D4168()
{
  return sub_1000694BC();
}

uint64_t sub_1000D4190(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000D41D8()
{
  return sub_1000D2A10();
}

uint64_t sub_1000D41F4(uint64_t a1)
{
  return sub_1000D2AB4(a1, v1);
}

uint64_t sub_1000D41FC()
{
  uint64_t v1 = type metadata accessor for NWPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000D42A0()
{
  type metadata accessor for NWPath();

  return sub_1000D2E70();
}

uint64_t sub_1000D432C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000D433C()
{
  return swift_release();
}

uint64_t sub_1000D4344@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000D436C()
{
  return sub_1000694BC();
}

uint64_t sub_1000D4394@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000D43BC()
{
  return sub_1000694BC();
}

uint64_t sub_1000D43E4()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_release();
  uint64_t v9 = v0 + v4;
  unsigned __int8 v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_1000D44D8@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, char *a5@<X8>)
{
  uint64_t v11 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v12 + 24) & ~v12;
  uint64_t v14 = v5 + ((*(void *)(v11 + 64) + v12 + v13) & ~v12);

  return sub_1000D3C18(a1, a2, a3, a4, (void (*)(char *, uint64_t))(v5 + v13), v14, a5);
}

uint64_t sub_1000D45A8(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v81 = a2;
  BOOL v83 = a1;
  uint64_t v4 = type metadata accessor for LanguageState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unsigned __int8 v10 = (char *)&v67 - v9;
  uint64_t v11 = type metadata accessor for LanguageModel();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v82 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  __chkstk_darwin(v20);
  uint64_t v25 = *(void *)(a3 + 16);
  if (!v25) {
    return 0;
  }
  uint64_t v71 = v22;
  uint64_t v72 = (char *)v24;
  uint64_t v70 = v23;
  uint64_t v76 = v5;
  uint64_t v77 = (char *)&v67 - v21;
  id v73 = v10;
  uint64_t v74 = v8;
  uint64_t v75 = v4;
  uint64_t v78 = v12;
  uint64_t v79 = a3;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v26 = v12 + 16;
  uint64_t v28 = a3 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
  uint64_t v84 = *(void *)(v26 + 56);
  CGRect v85 = v27;
  uint64_t v29 = (uint64_t (**)(char *, uint64_t))(v26 - 8);
  swift_bridgeObjectRetain();
  uint64_t v30 = v25;
  uint64_t v31 = v28;
  uint64_t v80 = v30;
  while (1)
  {
    v85(v19, v31, v11);
    uint64_t v32 = LanguageModel.id.getter();
    uint64_t v34 = v33;
    if (v32 == Locale.ltIdentifier.getter() && v34 == v35) {
      break;
    }
    char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36) {
      goto LABEL_9;
    }
    (*v29)(v19, v11);
    v31 += v84;
    if (!--v30)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v37 = v76;
  swift_bridgeObjectRelease();
  uint64_t v38 = v78 + 32;
  uint64_t v39 = *(void (**)(void, char *, uint64_t))(v78 + 32);
  uint64_t v40 = v72;
  v39(v72, v19, v11);
  uint64_t v78 = v38;
  uint64_t v72 = (char *)v39;
  v39(v77, v40, v11);
  uint64_t v41 = v73;
  LanguageModel.state.getter();
  uint64_t v43 = v37 + 104;
  uint64_t v42 = *(void (**)(void))(v37 + 104);
  id v45 = v74;
  uint64_t v44 = v75;
  unsigned int v69 = enum case for LanguageState.installed(_:);
  uint64_t v68 = (void (*)(char *, void, uint64_t))v42;
  v42(v74);
  LODWORD(v83) = static LanguageState.== infix(_:_:)();
  uint64_t v48 = *(void (**)(void, void))(v37 + 8);
  uint64_t v46 = v37 + 8;
  uint64_t v47 = (void (*)(char *, uint64_t))v48;
  v48(v45, v44);
  v48(v41, v44);
  if ((v83 & 1) == 0)
  {
    (*v29)(v77, v11);
    return 0;
  }
  uint64_t v67 = v43;
  BOOL v83 = v47;
  uint64_t v76 = v46;
  uint64_t result = swift_bridgeObjectRetain();
  for (uint64_t i = 0; ; ++i)
  {
    uint64_t v51 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      return result;
    }
    v85(v82, v28, v11);
    uint64_t v52 = LanguageModel.id.getter();
    uint64_t v54 = v53;
    if (v52 == Locale.ltIdentifier.getter() && v54 == v55) {
      break;
    }
    char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_19;
    }
    uint64_t v57 = *v29;
    uint64_t result = (*v29)(v82, v11);
    v28 += v84;
    if (v51 == v80)
    {
      swift_bridgeObjectRelease();
      v57(v77, v11);
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v58 = v70;
  uint64_t v59 = (void (*)(char *, uint64_t, uint64_t))v72;
  ((void (*)(uint64_t, char *, uint64_t))v72)(v70, v82, v11);
  uint64_t v60 = v71;
  v59(v71, v58, v11);
  uint64_t v61 = v73;
  LanguageModel.state.getter();
  id v63 = v74;
  uint64_t v62 = v75;
  v68(v74, v69, v75);
  char v64 = static LanguageState.== infix(_:_:)();
  uint64_t v65 = v83;
  v83(v63, v62);
  v65(v61, v62);
  uint64_t v66 = *v29;
  (*v29)(v60, v11);
  v66(v77, v11);
  return (v64 & 1) != 0;
}

uint64_t sub_1000D4BB0@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1000D3584(a1, a2, a3, a4);
}

uint64_t sub_1000D4BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F46D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Axis.Set.vertical.getter();
  uint64_t v15 = a2;
  uint64_t v16 = a1;
  sub_100007620(&qword_1002F46E0);
  uint64_t v8 = sub_100007928(&qword_1002F46E8);
  uint64_t v9 = sub_100007928(&qword_1002F46F0);
  uint64_t v10 = sub_100014894(&qword_1002F46F8, &qword_1002F46F0);
  unint64_t v11 = sub_1000D6D44();
  uint64_t v17 = v9;
  uint64_t v18 = &type metadata for UnitPoint;
  uint64_t v19 = v10;
  unint64_t v20 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v17 = v8;
  uint64_t v18 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  ScrollView.init(_:showsIndicators:content:)();
  sub_100014894(&qword_1002F4708, &qword_1002F46D8);
  View.scrollDisabled(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000D4DCC@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v4 = type metadata accessor for ScrollViewProxy();
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  uint64_t v85 = *(void *)(v83 + 64);
  __chkstk_darwin(v4);
  id v82 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ExpandingLineLimitedTextView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v79 = v6 - 8;
  uint64_t v77 = v7;
  uint64_t v76 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TranslateText();
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v66 - v14;
  uint64_t v70 = (uint64_t (*)(void))sub_100007620(&qword_1002EF528);
  __chkstk_darwin(v70);
  uint64_t v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100007620(&qword_1002F4710);
  uint64_t v18 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  unint64_t v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100007620(&qword_1002F4718);
  __chkstk_darwin(v69);
  uint64_t v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100007620(&qword_1002F4720);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100007620(&qword_1002F46F0);
  __chkstk_darwin(v89);
  CGRect v88 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100007620(&qword_1002F46E8);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v80 = v25;
  uint64_t v81 = v26;
  __chkstk_darwin(v25);
  uint64_t v78 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v29 = *a1;
  uint64_t v28 = *((void *)a1 + 1);
  *uint64_t v13 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5790);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = (double *)((char *)v13 + *(int *)(v10 + 28));
  *uint64_t v30 = v29;
  *((void *)v30 + 1) = v28;
  sub_1000D6DA0((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TranslateText);
  swift_bridgeObjectRetain();
  static Alignment.topLeading.getter();
  sub_10001C8C0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v17, 0.0, 1, 0.0, 1);
  sub_1000D7528((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TranslateText);
  double v32 = a1[7];
  uint64_t v95 = *((void *)a1 + 6);
  uint64_t v31 = v95;
  double v96 = v32;
  sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  sub_1000D6E08();
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  sub_10000B070((uint64_t)v17, &qword_1002EF528);
  uint64_t v33 = v71;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v20, v71);
  *(_WORD *)&v22[*(int *)(v69 + 36)] = 256;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v33);
  uint64_t v90 = v31;
  double v91 = v32;
  State.wrappedValue.getter();
  uint64_t v34 = v75;
  sub_1000D6C4C((uint64_t)a1, v75);
  uint64_t v35 = *(unsigned __int8 *)(v77 + 80);
  uint64_t v71 = ((v35 + 16) & ~v35) + v76;
  uint64_t v77 = (v35 + 16) & ~v35;
  uint64_t v68 = v35 | 7;
  uint64_t v36 = swift_allocObject();
  uint64_t v70 = (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView;
  sub_1000D6DA0(v34, v36 + ((v35 + 16) & ~v35), (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
  sub_1000D6F38();
  sub_1000D6FE8();
  uint64_t v37 = v72;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10000B070((uint64_t)v22, &qword_1002F4718);
  double v39 = *a1;
  uint64_t v38 = *((void *)a1 + 1);
  uint64_t v40 = v73;
  uint64_t v41 = v88;
  uint64_t v42 = v37;
  uint64_t v43 = v37;
  uint64_t v44 = v74;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v88, v42, v74);
  id v45 = &v41[*(int *)(v89 + 52)];
  *(double *)id v45 = v39;
  *((void *)v45 + 1) = v38;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
  swift_bridgeObjectRetain();
  v46(v43, v44);
  uint64_t v47 = *(void *)((char *)a1 + *(int *)(v79 + 52));
  uint64_t v67 = a1;
  swift_getKeyPath();
  uint64_t v90 = v47;
  sub_1000D7044(&qword_1002F4748, (void (*)(uint64_t))type metadata accessor for KaraokeProgressMonitor);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v94 = *(_DWORD *)(v47 + 16);
  uint64_t v90 = 0x3F80000000000000;
  sub_1000D708C();
  BinaryFloatingPoint.clip(to:)();
  uint64_t v90 = 0x3FE0000000000000;
  double v91 = *(float *)&v95;
  uint64_t v49 = v82;
  uint64_t v48 = v83;
  uint64_t v50 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v86, v84);
  sub_1000D6C4C((uint64_t)a1, v34);
  uint64_t v51 = v48;
  unint64_t v52 = (*(unsigned __int8 *)(v48 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v53 = (v85 + v35 + v52) & ~v35;
  uint64_t v54 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v54 + v52, v49, v50);
  uint64_t v55 = v34;
  uint64_t v56 = v34;
  uint64_t v57 = v70;
  sub_1000D6DA0(v55, v54 + v53, v70);
  uint64_t v58 = sub_100014894(&qword_1002F46F8, &qword_1002F46F0);
  unint64_t v59 = sub_1000D6D44();
  uint64_t v60 = v78;
  uint64_t v61 = (uint64_t)v88;
  uint64_t v62 = v89;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10000B070(v61, &qword_1002F46F0);
  sub_1000D6C4C((uint64_t)v67, v56);
  uint64_t v63 = swift_allocObject();
  sub_1000D6DA0(v56, v63 + v77, v57);
  uint64_t v90 = v62;
  double v91 = COERCE_DOUBLE(&type metadata for UnitPoint);
  uint64_t v92 = v58;
  unint64_t v93 = v59;
  swift_getOpaqueTypeConformance2();
  uint64_t v64 = v80;
  View.onTapGesture(count:perform:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v60, v64);
}

void sub_1000D5814(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for ExpandingLineLimitedTextView();
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v43 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v42 = (uint64_t)v41 - v9;
  uint64_t v10 = sub_100007620(&qword_1002F4758);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v14 = a3 + *(int *)(v6 + 48);
  uint64_t v15 = *(void *)(a3 + 8);
  *(void *)&long long v45 = *(void *)a3;
  *((void *)&v45 + 1) = v15;
  unint64_t v16 = sub_10000C350();
  swift_bridgeObjectRetain();
  v41[1] = v16;
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = type metadata accessor for Text.WritingMode();
  v41[0] = *(void *)(*(void *)(v22 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41[0])(v12, 1, 1, v22);
  v41[2] = v14;
  uint64_t v23 = Text.Measurements.numberOfLines(of:in:writingMode:)();
  sub_10001FC84(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v12, &qword_1002F4758);
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    long long v45 = *(_OWORD *)(a3 + 32);
    uint64_t v44 = v23;
    sub_100007620(&qword_1002F3B50);
    State.wrappedValue.setter();
    uint64_t v24 = *(void *)(a3 + 8);
    *(void *)&long long v45 = *(void *)a3;
    *((void *)&v45 + 1) = v24;
    swift_bridgeObjectRetain();
    uint64_t v25 = Text.init<A>(_:)();
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41[0])(v12, 1, 1, v22);
    Text.Measurements.size(of:in:writingMode:)();
    uint64_t v31 = v30;
    sub_10001FC84(v25, v27, v29);
    swift_bridgeObjectRelease();
    sub_10000B070((uint64_t)v12, &qword_1002F4758);
    uint64_t v32 = *(void *)(a3 + 72);
    *(void *)&long long v45 = *(void *)(a3 + 64);
    *((void *)&v45 + 1) = v32;
    uint64_t v44 = v31;
    sub_100007620(&qword_1002EF470);
    State.wrappedValue.setter();
    if (qword_1002EE608 == -1) {
      goto LABEL_3;
    }
  }
  swift_once();
LABEL_3:
  uint64_t v33 = type metadata accessor for Logger();
  sub_100011554(v33, (uint64_t)qword_10030EA20);
  uint64_t v34 = v42;
  sub_1000D6C4C(a3, v42);
  uint64_t v35 = v43;
  sub_1000D6C4C(a3, v43);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 134218496;
    *(void *)&long long v45 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 12) = 2048;
    long long v45 = *(_OWORD *)(v34 + 32);
    State.wrappedValue.getter();
    uint64_t v39 = v44;
    sub_1000D7528(v34, (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
    *(void *)&long long v45 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v38 + 22) = 2048;
    uint64_t v40 = *(void *)(v35 + 72);
    *(void *)&long long v45 = *(void *)(v35 + 64);
    *((void *)&v45 + 1) = v40;
    State.wrappedValue.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_1000D7528(v35, (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "availableWidth changed to %f, %ld lines, %f pt high", (uint8_t *)v38, 0x20u);
    swift_slowDealloc();
  }
  else
  {
    sub_1000D7528(v34, (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
    sub_1000D7528(v35, (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
  }
}

void sub_1000D5CF4(double *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  double v6 = *a1;
  double v5 = a1[1];
  uint64_t v8 = *(void *)a2;
  double v7 = *(double *)(a2 + 8);
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100011554(v9, (uint64_t)qword_10030EA20);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v22 = *(void *)&v6;
    double v23 = v5;
    uint64_t v13 = String.init<A>(describing:)();
    uint64_t v22 = sub_100202FD4(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v22 = v8;
    double v23 = v7;
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v22 = sub_100202FD4(v15, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "monitor changed from %s to %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  double v17 = round(v5);
  if (v7 != 0.0 || v17 != 1.0)
  {
    double v19 = *((double *)a4 + 1);
    uint64_t v22 = *a4;
    double v23 = v19;
    uint64_t v20 = *(uint64_t *)((char *)a4 + *(int *)(type metadata accessor for ExpandingLineLimitedTextView() + 44));
    swift_getKeyPath();
    uint64_t v21 = v20;
    sub_1000D7044(&qword_1002F4748, (void (*)(uint64_t))type metadata accessor for KaraokeProgressMonitor);
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v21 = 0x3F80000000000000;
    sub_1000D708C();
    BinaryFloatingPoint.clip(to:)();
    ScrollViewProxy.scrollTo<A>(_:anchor:)();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000D5FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  State.init(wrappedValue:)();
  *(_OWORD *)(a5 + 32) = v10;
  State.init(wrappedValue:)();
  *(_OWORD *)(a5 + 48) = v10;
  State.init(wrappedValue:)();
  *(_OWORD *)(a5 + 64) = v10;
  sub_100007620(&qword_1002F4628);
  State.init(wrappedValue:)();
  *(void *)(a5 + 80) = v10;
  *(unsigned char *)(a5 + 88) = BYTE8(v10);
  *(void *)(a5 + 96) = v11;
  uint64_t v6 = type metadata accessor for ExpandingLineLimitedTextView();
  Text.Measurements.init()();
  uint64_t v7 = *(int *)(v6 + 44);
  type metadata accessor for KaraokeProgressMonitor(0);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  uint64_t result = ObservationRegistrar.init()();
  *(void *)(a5 + v7) = v8;
  return result;
}

uint64_t type metadata accessor for ExpandingLineLimitedTextView()
{
  uint64_t result = qword_1002F4688;
  if (!qword_1002F4688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D6178(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v9 = a2 + 2;
    uint64_t v8 = a2[2];
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *v9;
    }
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v12;
    uint64_t v13 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v13;
    uint64_t v14 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = a2[10];
    *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    uint64_t v15 = *(int *)(a3 + 40);
    uint64_t v19 = (uint64_t)a2 + v15;
    uint64_t v20 = a1 + v15;
    *(void *)(a1 + 96) = a2[12];
    uint64_t v16 = type metadata accessor for Text.Measurements();
    double v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v17(v20, v19, v16);
    *(void *)(a1 + *(int *)(a3 + 44)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 44));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000D62F8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

uint64_t sub_1000D63B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v8;
  }
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  uint64_t v12 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v17 = a2 + v13;
  uint64_t v18 = a1 + v13;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v14 = type metadata accessor for Text.Measurements();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v15(v18, v17, v14);
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_retain();
  return a1;
}

uint64_t sub_1000D64E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000D6688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v10 = *(int *)(a3 + 40);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v13 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  return a1;
}

uint64_t sub_1000D675C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 16);
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_release();
LABEL_8:
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v10;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  *(void *)(a1 + *(int *)(a3 + 44)) = *(void *)(a2 + *(int *)(a3 + 44));
  swift_release();
  return a1;
}

uint64_t sub_1000D68B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D68C4);
}

uint64_t sub_1000D68C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Text.Measurements();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000D6974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D6988);
}

uint64_t sub_1000D6988(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Text.Measurements();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000D6A30()
{
  uint64_t result = type metadata accessor for Text.Measurements();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000D6AEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000D6B08@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1 - 8;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1);
  uint64_t v7 = static Alignment.bottomTrailing.getter();
  uint64_t v9 = v8;
  sub_1000D6C4C(v2, (uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1000D6DA0((uint64_t)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t (*)(void))type metadata accessor for ExpandingLineLimitedTextView);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = *(void *)(v2 + *(int *)(v4 + 52));
  *a2 = v7;
  a2[1] = v9;
  a2[2] = (uint64_t)sub_1000D6CB4;
  a2[3] = v11;
  a2[4] = KeyPath;
  a2[5] = v13;
  return swift_retain();
}

uint64_t sub_1000D6C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExpandingLineLimitedTextView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D6CB4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ExpandingLineLimitedTextView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000D4BB8(a1, v4);
}

uint64_t sub_1000D6D3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D4DCC(*(double **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1000D6D44()
{
  unint64_t result = qword_1002F4700;
  if (!qword_1002F4700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4700);
  }
  return result;
}

uint64_t sub_1000D6DA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000D6E08()
{
  unint64_t result = qword_1002F4728;
  if (!qword_1002F4728)
  {
    sub_100007928(&qword_1002EF528);
    sub_1000D7044(&qword_1002F4730, (void (*)(uint64_t))type metadata accessor for TranslateText);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4728);
  }
  return result;
}

void sub_1000D6EB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ExpandingLineLimitedTextView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1000D5814(a1, a2, v6);
}

unint64_t sub_1000D6F38()
{
  unint64_t result = qword_1002F4738;
  if (!qword_1002F4738)
  {
    sub_100007928(&qword_1002F4718);
    sub_100007928(&qword_1002EF528);
    sub_1000D6E08();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4738);
  }
  return result;
}

unint64_t sub_1000D6FE8()
{
  unint64_t result = qword_1002F4740;
  if (!qword_1002F4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4740);
  }
  return result;
}

uint64_t sub_1000D7044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000D708C()
{
  unint64_t result = qword_1002F4750;
  if (!qword_1002F4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4750);
  }
  return result;
}

uint64_t sub_1000D70E0()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for ExpandingLineLimitedTextView();
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v8 + 16)) {
    swift_release();
  }
  uint64_t v10 = v3 | v7 | 7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v0 + v8 + *(int *)(v6 + 40);
  uint64_t v12 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_release();

  return _swift_deallocObject(v0, v8 + v9, v10);
}

void sub_1000D72A0(double *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for ExpandingLineLimitedTextView() - 8);
  uint64_t v9 = (uint64_t *)(v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));

  sub_1000D5CF4(a1, a2, v2 + v6, v9);
}

uint64_t sub_1000D7388()
{
  uint64_t v1 = type metadata accessor for ExpandingLineLimitedTextView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + 16)) {
    swift_release();
  }
  uint64_t v6 = v3 + v4;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v5 + *(int *)(v1 + 40);
  uint64_t v8 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  return _swift_deallocObject(v0, v6, v2 | 7);
}

uint64_t sub_1000D74BC()
{
  uint64_t v1 = type metadata accessor for ExpandingLineLimitedTextView();
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = *(uint64_t (**)(void))(v0
                           + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                           + 16);
  if (v4) {
    return v4();
  }
  return result;
}

uint64_t sub_1000D7528(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000D7588()
{
  return sub_100014894(&qword_1002F4760, &qword_1002F4768);
}

uint64_t sub_1000D75C4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v18 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = (void *)a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a3[8];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    id v14 = v7;
    swift_retain();
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
      {
        uint64_t v17 = sub_100007620(&qword_1002F1058);
        memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v12, v13, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[9];
    uint64_t v20 = a3[10];
    uint64_t v21 = (void *)(v4 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    *uint64_t v21 = v23;
    v21[1] = v24;
    uint64_t v25 = (void *)(v4 + v20);
    uint64_t v26 = (uint64_t *)((char *)a2 + v20);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    *uint64_t v25 = v28;
    v25[1] = v27;
    uint64_t v29 = a3[12];
    *(void *)(v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    uint64_t v30 = (void *)(v4 + v29);
    uint64_t v31 = (uint64_t *)((char *)a2 + v29);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    *(void *)(v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1000D7824(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000D7960(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = a3[8];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  id v13 = v6;
  swift_retain();
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      uint64_t v16 = sub_100007620(&qword_1002F1058);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v11, v12, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  void *v19 = v21;
  v19[1] = v22;
  uint64_t v23 = (void *)(a1 + v18);
  uint64_t v24 = (uint64_t *)(a2 + v18);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  uint64_t v27 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1000D7B74(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v9 = a3[8];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10000B070(a1 + v9, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_retain();
  swift_release();
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1000D7E0C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a3[8];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      uint64_t v13 = sub_100007620(&qword_1002F1058);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v14 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1000D7FE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v10 = a3[8];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10000B070(a1 + v10, (uint64_t *)&unk_1002F5770);
    uint64_t v13 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        uint64_t v16 = sub_100007620(&qword_1002F1058);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_release();
  *(void *)(v18 + 8) = *(void *)(v19 + 8);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  uint64_t v23 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_release();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1000D8238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000D824C);
}

uint64_t sub_1000D824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F1068);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000D8300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000D8314);
}

uint64_t sub_1000D8314(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1068);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FaceToFaceHalfView()
{
  uint64_t result = qword_1002F47C8;
  if (!qword_1002F47C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000D840C()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000D84CC()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_1000D84E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FaceToFaceHalfView();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = *(char **)(v0 + 8);
  id v9 = *(id *)&v8[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions];
  uint64_t v10 = v8;
  id v11 = sub_1000A7684();

  swift_retain();
  char v12 = sub_1001A6530(v11);

  swift_release();
  sub_1000DCFB8(v1, (uint64_t)v7);
  if (v12)
  {
    uint64_t v23 = &type metadata for TranslateFeatures;
    unint64_t v24 = sub_10000AB14();
    LOBYTE(v20) = 8;
    char v13 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v20);
    sub_1000DCFB8((uint64_t)v7, (uint64_t)v5);
    if (v13)
    {
      uint64_t v14 = (void *)*((void *)v5 + 1);
      swift_getKeyPath();
      swift_getKeyPath();
      id v15 = v14;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v21)
      {
        uint64_t v16 = v27;
        sub_1000194BC(v20, v21, v22, (uint64_t)v23, v24, v25, v26, v27, v28, v29, v30);

        BOOL v17 = (v16 & 0xFFFFFFFFFFFFFFFELL) == 2;
LABEL_8:
        sub_1000DD670((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
        goto LABEL_9;
      }
    }
    BOOL v17 = 0;
    goto LABEL_8;
  }
  BOOL v17 = 1;
LABEL_9:
  sub_1000DD670((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
  return v17;
}

uint64_t sub_1000D873C()
{
  uint64_t v1 = type metadata accessor for FaceToFaceHalfView();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  BOOL v4 = sub_1000D84E8();
  sub_1000DCFB8(v0, (uint64_t)v3);
  if (v4)
  {
    char v5 = 1;
  }
  else
  {
    uint64_t v6 = *(void **)(*((void *)v3 + 1) + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions);
    swift_getKeyPath();
    swift_getKeyPath();
    id v7 = v6;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    char v5 = v9[15] ^ 1;
  }
  sub_1000DD670((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
  return v5 & 1;
}

uint64_t sub_1000D8854()
{
  uint64_t v1 = *(void **)(v0 + 8);
  if (*(unsigned char *)(v0 + 48))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = v1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    return v6;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v1;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    return v5;
  }
}

uint64_t sub_1000D8930()
{
  if (*(void *)(v0 + *(int *)(type metadata accessor for FaceToFaceHalfView() + 36)))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    type metadata accessor for ConversationContext(0);
    sub_1000DDCFC(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D8AA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F4820);
  __chkstk_darwin(v3 - 8);
  unsigned __int8 v5 = (uint64_t *)((char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100007620(&qword_1002F4828);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  id v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F4830);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v2 + 8);
  char v15 = *(unsigned char *)(v2 + 48);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v13[*(int *)(type metadata accessor for ConversationList() + 24)] = KeyPath;
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  *(void *)char v13 = v14;
  v13[8] = v15;
  id v17 = v14;
  uint64_t v18 = static HorizontalAlignment.center.getter();
  uint64_t v19 = (uint64_t)&v13[*(int *)(sub_100007620(&qword_1002F4838) + 36)];
  sub_1000D8E08(v2, v19);
  VerticalEdge.rawValue.getter();
  char v20 = Edge.init(rawValue:)();
  uint64_t v21 = static SafeAreaRegions.container.getter();
  uint64_t v22 = v19 + *(int *)(sub_100007620(&qword_1002F4840) + 36);
  *(void *)uint64_t v22 = v21;
  *(void *)(v22 + 8) = 0;
  *(unsigned char *)(v22 + 16) = 1;
  *(unsigned char *)(v22 + 17) = v20;
  *(void *)(v22 + 24) = v18;
  uint64_t v23 = static HorizontalAlignment.center.getter();
  uint64_t v24 = (uint64_t)&v13[*(int *)(v11 + 44)];
  *unsigned __int8 v5 = static Alignment.top.getter();
  v5[1] = v25;
  uint64_t v26 = sub_100007620(&qword_1002F4848);
  sub_1000DBE24(v2, (uint64_t *)((char *)v5 + *(int *)(v26 + 44)));
  static Alignment.top.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10000C3A4((uint64_t)v5, (uint64_t)v9, &qword_1002F4820);
  uint64_t v27 = &v9[*(int *)(v7 + 44)];
  long long v28 = v40;
  *(_OWORD *)uint64_t v27 = v39;
  *((_OWORD *)v27 + 1) = v28;
  *((_OWORD *)v27 + 2) = v41;
  sub_10000B070((uint64_t)v5, &qword_1002F4820);
  uint64_t v29 = static SafeAreaRegions.all.getter();
  LOBYTE(v18) = static Edge.Set.all.getter();
  sub_10000C3A4((uint64_t)v9, v24, &qword_1002F4828);
  uint64_t v30 = v24 + *(int *)(sub_100007620(&qword_1002F4850) + 36);
  *(void *)uint64_t v30 = v29;
  *(unsigned char *)(v30 + 8) = v18;
  sub_10000B070((uint64_t)v9, &qword_1002F4828);
  VerticalEdge.rawValue.getter();
  LOBYTE(v29) = Edge.init(rawValue:)();
  uint64_t v31 = static SafeAreaRegions.container.getter();
  uint64_t v32 = v24 + *(int *)(sub_100007620(&qword_1002F4858) + 36);
  *(void *)uint64_t v32 = v31;
  *(void *)(v32 + 8) = 0;
  *(unsigned char *)(v32 + 16) = 1;
  *(unsigned char *)(v32 + 17) = v29;
  *(void *)(v32 + 24) = v23;
  uint64_t v33 = static SafeAreaRegions.all.getter();
  LOBYTE(v24) = static Edge.Set.vertical.getter();
  uint64_t v34 = v38;
  sub_10000C3A4((uint64_t)v13, v38, &qword_1002F4830);
  uint64_t v35 = v34 + *(int *)(sub_100007620(&qword_1002F4860) + 36);
  *(void *)uint64_t v35 = v33;
  *(unsigned char *)(v35 + 8) = v24;
  return sub_10000B070((uint64_t)v13, &qword_1002F4830);
}

uint64_t sub_1000D8E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v327 = a2;
  uint64_t v314 = sub_100007620(&qword_1002F4898);
  __chkstk_darwin(v314);
  uint64_t v315 = (uint64_t)&v270 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v312 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v4 = *(void *)(v312 - 8);
  __chkstk_darwin(v312);
  AVAudioSessionPort v283 = (char *)&v270 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v309 = sub_100007620(&qword_1002F1200);
  uint64_t v6 = __chkstk_darwin(v309);
  uint64_t v295 = (uint64_t)&v270 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v299 = (uint64_t)&v270 - v8;
  uint64_t v9 = sub_100007620(&qword_1002F1058);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v281 = (uint64_t)&v270 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v270 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v300 = (uint64_t)&v270 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v282 = (uint64_t)&v270 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v270 - v20;
  __chkstk_darwin(v19);
  uint64_t v301 = (uint64_t)&v270 - v22;
  uint64_t v23 = type metadata accessor for Locale();
  uint64_t v288 = *(void *)(v23 - 8);
  uint64_t v289 = v23;
  uint64_t v24 = __chkstk_darwin(v23);
  id v303 = (char *)&v270 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v287 = (char *)&v270 - v26;
  uint64_t v306 = type metadata accessor for MoreOptionsMenu();
  uint64_t v27 = __chkstk_darwin(v306);
  v285 = (char *)&v270 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v291 = (uint64_t *)((char *)&v270 - v29);
  uint64_t v30 = sub_100007620(&qword_1002EF4F0);
  uint64_t v307 = *(void *)(v30 - 8);
  uint64_t v308 = v30;
  uint64_t v31 = __chkstk_darwin(v30);
  v286 = (char *)&v270 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v292 = (char *)&v270 - v33;
  uint64_t v34 = sub_100007620(&qword_1002EF4F8);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  *(void *)&long long v304 = (char *)&v270 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v305 = (uint64_t)&v270 - v37;
  uint64_t v313 = sub_100007620(&qword_1002F48A0);
  uint64_t v38 = __chkstk_darwin(v313);
  uint64_t v290 = (uint64_t)&v270 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v293 = (uint64_t)&v270 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v296 = (uint64_t)&v270 - v43;
  __chkstk_darwin(v42);
  v298 = (char *)&v270 - v44;
  uint64_t v45 = sub_100007620(&qword_1002F48A8);
  uint64_t v324 = *(void *)(v45 - 8);
  uint64_t v325 = v45;
  __chkstk_darwin(v45);
  uint64_t v311 = (char *)&v270 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100007620(&qword_1002F48B0);
  uint64_t v48 = __chkstk_darwin(v47 - 8);
  uint64_t v326 = (uint64_t)&v270 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v328 = (char *)&v270 - v50;
  uint64_t v322 = sub_100007620(&qword_1002F48B8);
  uint64_t v51 = __chkstk_darwin(v322);
  *(void *)&long long v316 = (char *)&v270 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  *(void *)&long long v317 = (char *)&v270 - v53;
  uint64_t v320 = sub_100007620(&qword_1002F48C0);
  __chkstk_darwin(v320);
  uint64_t v321 = (uint64_t)&v270 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100007620(&qword_1002F48C8);
  uint64_t v275 = *(void *)(v55 - 8);
  uint64_t v276 = v55;
  __chkstk_darwin(v55);
  uint64_t v273 = (char *)&v270 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_100007620(&qword_1002F48D0);
  __chkstk_darwin(v272);
  uint64_t v277 = (char *)&v270 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v279 = sub_100007620(&qword_1002F48D8);
  __chkstk_darwin(v279);
  uint64_t v278 = (uint64_t)&v270 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v319 = sub_100007620(&qword_1002F48E0);
  uint64_t v59 = __chkstk_darwin(v319);
  v274 = (char *)&v270 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  uint64_t v280 = (uint64_t)&v270 - v61;
  uint64_t v329 = type metadata accessor for FaceToFaceHalfView();
  *(void *)&long long v318 = *(void *)(v329 - 8);
  uint64_t v62 = *(void *)(v318 + 64);
  uint64_t v63 = __chkstk_darwin(v329);
  uint64_t v64 = (char *)&v270 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __chkstk_darwin(v63);
  uint64_t v67 = (char *)&v270 - v66;
  __chkstk_darwin(v65);
  uint64_t v69 = (char *)&v270 - v68;
  uint64_t v70 = sub_100007620(&qword_1002F48E8);
  uint64_t v71 = __chkstk_darwin(v70 - 8);
  uint64_t v323 = (uint64_t)&v270 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v71);
  uint64_t v330 = (uint64_t)&v270 - v73;
  *((void *)&v332 + 1) = &type metadata for TranslateFeatures;
  unint64_t v302 = sub_10000AB14();
  *(void *)&long long v333 = v302;
  LOBYTE(v331) = 8;
  char v74 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v331);
  sub_1000DCFB8(a1, (uint64_t)v69);
  uint64_t v310 = v4;
  v297 = v21;
  char v294 = v14;
  if ((v74 & 1) == 0)
  {
    sub_1000DD670((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
    sub_1000DCFB8(a1, (uint64_t)v67);
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v75 = v331;
  sub_1000DD670((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
  sub_1000DCFB8(a1, (uint64_t)v67);
  if (v75 != 1)
  {
LABEL_7:
    sub_1000DD670((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
LABEL_8:
    char v105 = sub_1000D8854();
    unint64_t v106 = *(void **)(a1 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v107 = v106;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LOBYTE(v107) = v331;
    sub_1000DCFB8(a1, (uint64_t)v64);
    uint64_t v108 = a1;
    unint64_t v109 = (*(unsigned __int8 *)(v318 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v318 + 80);
    uint64_t v110 = swift_allocObject();
    sub_1000DD020((uint64_t)v64, v110 + v109);
    sub_1000DCFB8(v108, (uint64_t)v64);
    uint64_t v111 = swift_allocObject();
    uint64_t v112 = v111 + v109;
    uint64_t v97 = v108;
    sub_1000DD020((uint64_t)v64, v112);
    LOBYTE(v350) = v105 & 1;
    *(_WORD *)((char *)&v350 + 1) = v107;
    *((void *)&v350 + 1) = _swiftEmptyArrayStorage;
    long long v351 = 0uLL;
    LOBYTE(v352) = 0;
    *((void *)&v352 + 1) = sub_1000DD1C8;
    long long v353 = (unint64_t)v110;
    *(void *)&long long v354 = 0;
    *((void *)&v354 + 1) = sub_1000DD248;
    *(void *)&long long v355 = v111;
    *((void *)&v355 + 1) = 0x6C6C69662E63696DLL;
    *(void *)&v356[0] = 0xE800000000000000;
    *(_OWORD *)((char *)v356 + 8) = 0u;
    *(_OWORD *)((char *)&v356[1] + 8) = 0u;
    *(_OWORD *)((char *)&v356[2] + 8) = 0u;
    *(_OWORD *)((char *)&v356[3] + 8) = 0u;
    *(_OWORD *)((char *)&v356[4] + 8) = 0u;
    *((void *)&v356[5] + 1) = 0;
    LOBYTE(v111) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v114 = v113;
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    long long v367 = v356[2];
    long long v368 = v356[3];
    long long v369 = v356[4];
    long long v370 = v356[5];
    long long v363 = v354;
    long long v364 = v355;
    long long v365 = v356[0];
    long long v366 = v356[1];
    long long v359 = v350;
    long long v360 = v351;
    long long v361 = v352;
    long long v362 = v353;
    char v357 = 0;
    char v121 = static Edge.Set.bottom.getter();
    sub_1000D8930();
    EdgeInsets.init(_all:)();
    char v358 = 0;
    v337[2] = v367;
    v337[3] = v368;
    v337[4] = v369;
    v337[5] = v370;
    long long v335 = v363;
    long long v336 = v364;
    v337[0] = v365;
    v337[1] = v366;
    long long v331 = v359;
    long long v332 = v360;
    long long v333 = v361;
    long long v334 = v362;
    char v338 = v111;
    uint64_t v339 = v114;
    uint64_t v340 = v116;
    uint64_t v341 = v118;
    uint64_t v342 = v120;
    char v343 = v357;
    char v344 = v121;
    uint64_t v345 = v122;
    uint64_t v346 = v123;
    uint64_t v347 = v124;
    uint64_t v348 = v125;
    char v349 = 0;
    sub_100007620(&qword_1002F48F0);
    sub_1000DD250();
    uint64_t v126 = v316;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    sub_1000DD380((uint64_t)&v350);
    uint64_t v127 = v317;
    sub_10001323C(v126, v317, &qword_1002F48B8);
    sub_10000C3A4(v127, v321, &qword_1002F48B8);
    swift_storeEnumTagMultiPayload();
    sub_1000DD55C(&qword_1002F4918, &qword_1002F48E0, (void (*)(void))sub_1000DD470);
    sub_1000DD55C(&qword_1002F4930, &qword_1002F48B8, (void (*)(void))sub_1000DD250);
    _ConditionalContent<>.init(storage:)();
    sub_10000B070(v127, &qword_1002F48B8);
    uint64_t v128 = (uint64_t)v328;
    if ((*(unsigned char *)(v97 + 48) & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  char v76 = v67[48];
  sub_1000DD670((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for FaceToFaceHalfView);
  if (v76) {
    goto LABEL_8;
  }
  LODWORD(v317) = sub_1000D8854();
  uint64_t v77 = *(void **)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v78 = v77;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  LODWORD(v316) = v331;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v271 = v331;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v270 = v331;
  uint64_t v79 = *(void **)(a1 + 8);
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = v79;
  uint64_t v81 = a1;
  uint64_t v82 = *(void *)(a1 + 24);
  sub_1000DCFB8(v81, (uint64_t)v64);
  unint64_t v83 = (*(unsigned __int8 *)(v318 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v318 + 80);
  uint64_t v84 = swift_allocObject();
  sub_1000DD020((uint64_t)v64, v84 + v83);
  uint64_t v85 = *(void **)(v81 + 8);
  id v86 = v79;
  swift_retain();
  id v87 = v85;
  uint64_t v88 = sub_1000A824C();
  uint64_t v90 = v89;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v91 = v336;
  long long v92 = v331;
  long long v93 = v332;
  long long v94 = v333;
  long long v95 = v334;
  long long v96 = v335;
  LOBYTE(v331) = v317 & 1;
  BYTE1(v331) = v316;
  BYTE2(v331) = v271;
  *((void *)&v331 + 1) = v270;
  long long v332 = 0uLL;
  LOBYTE(v333) = 0;
  *((void *)&v333 + 1) = sub_1000A6934;
  *(void *)&long long v334 = v80;
  *((void *)&v334 + 1) = sub_1000A6C3C;
  *(void *)&long long v335 = v82;
  uint64_t v97 = v81;
  *((void *)&v335 + 1) = sub_1000DD248;
  *(void *)&long long v336 = v84;
  *((void *)&v336 + 1) = v88;
  *(void *)&v337[0] = v90;
  *(_OWORD *)((char *)v337 + 8) = v92;
  *(_OWORD *)((char *)&v337[1] + 8) = v93;
  *(_OWORD *)((char *)&v337[2] + 8) = v94;
  *(_OWORD *)((char *)&v337[3] + 8) = v95;
  *(_OWORD *)((char *)&v337[4] + 8) = v96;
  *((void *)&v337[5] + 1) = v91;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v98 = *((void *)&v359 + 1);
  if (*((void *)&v359 + 1))
  {
    *(void *)&long long v318 = v359;
    uint64_t v100 = *((void *)&v360 + 1);
    uint64_t v99 = v360;
    *(void *)&long long v316 = *((void *)&v361 + 1);
    *(void *)&long long v317 = v361;
    long long v101 = v362;
    uint64_t v102 = (void *)*((void *)&v363 + 1);
    uint64_t v103 = v363;
    unint64_t v104 = (void *)v364;
    swift_bridgeObjectRetain();
    uint64_t v269 = v103;
    uint64_t v97 = v81;
    sub_1000194BC(v318, v98, v99, v100, v317, v316, v101, *((uint64_t *)&v101 + 1), v269, v102, v104);
  }
  else
  {
    id v130 = [self mainBundle];
    v371._object = (void *)0xE000000000000000;
    v131._countAndFlagsBits = 0x495645445F57454ELL;
    v131._object = (void *)0xEA00000000004543;
    v132._countAndFlagsBits = 0;
    v132._object = (void *)0xE000000000000000;
    v371._countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v131, (Swift::String_optional)0, (NSBundle)v130, v132, v371);

    uint64_t v99 = String.init(format:_:)();
    uint64_t v100 = v133;
    swift_bridgeObjectRelease();
  }
  uint64_t v128 = (uint64_t)v328;
  *(void *)&long long v350 = v99;
  *((void *)&v350 + 1) = v100;
  sub_1000DD32C();
  sub_100014A08();
  v134 = v273;
  View.popoverTip<A>(_:arrowEdge:action:)();
  swift_bridgeObjectRelease();
  long long v367 = v337[2];
  long long v368 = v337[3];
  long long v369 = v337[4];
  long long v370 = v337[5];
  long long v363 = v335;
  long long v364 = v336;
  long long v365 = v337[0];
  long long v366 = v337[1];
  long long v359 = v331;
  long long v360 = v332;
  long long v361 = v333;
  long long v362 = v334;
  sub_1000DD380((uint64_t)&v359);
  char v135 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v137 = v136;
  uint64_t v139 = v138;
  uint64_t v141 = v140;
  uint64_t v143 = v142;
  uint64_t v145 = v275;
  uint64_t v144 = v276;
  uint64_t v146 = (uint64_t)v277;
  (*(void (**)(char *, char *, uint64_t))(v275 + 16))(v277, v134, v276);
  uint64_t v147 = v146 + *(int *)(v272 + 36);
  *(unsigned char *)uint64_t v147 = v135;
  *(void *)(v147 + 8) = v137;
  *(void *)(v147 + 16) = v139;
  *(void *)(v147 + 24) = v141;
  *(void *)(v147 + 32) = v143;
  *(unsigned char *)(v147 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v145 + 8))(v134, v144);
  LOBYTE(v144) = static Edge.Set.bottom.getter();
  sub_1000D8930();
  EdgeInsets.init(_all:)();
  uint64_t v149 = v148;
  uint64_t v151 = v150;
  uint64_t v153 = v152;
  uint64_t v155 = v154;
  uint64_t v156 = v278;
  sub_10000C3A4(v146, v278, &qword_1002F48D0);
  uint64_t v157 = v156 + *(int *)(v279 + 36);
  *(unsigned char *)uint64_t v157 = v144;
  *(void *)(v157 + 8) = v149;
  *(void *)(v157 + 16) = v151;
  *(void *)(v157 + 24) = v153;
  *(void *)(v157 + 32) = v155;
  *(unsigned char *)(v157 + 40) = 0;
  sub_10000B070(v146, &qword_1002F48D0);
  sub_1000DD470();
  uint64_t v158 = (uint64_t)v274;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v156, &qword_1002F48D8);
  uint64_t v159 = v280;
  sub_10001323C(v158, v280, &qword_1002F48E0);
  sub_10000C3A4(v159, v321, &qword_1002F48E0);
  swift_storeEnumTagMultiPayload();
  sub_1000DD55C(&qword_1002F4918, &qword_1002F48E0, (void (*)(void))sub_1000DD470);
  sub_1000DD55C(&qword_1002F4930, &qword_1002F48B8, (void (*)(void))sub_1000DD250);
  _ConditionalContent<>.init(storage:)();
  sub_10000B070(v159, &qword_1002F48E0);
  if ((*(unsigned char *)(v97 + 48) & 1) == 0)
  {
LABEL_12:
    *((void *)&v332 + 1) = &type metadata for TranslateFeatures;
    *(void *)&long long v333 = v302;
    LOBYTE(v331) = 8;
    char v160 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v331);
    uint64_t v284 = v97;
    if (v160)
    {
      LODWORD(v322) = sub_1000D84E8();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      if ((unint64_t)v331 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v161 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v161 = *(void *)((v331 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      LODWORD(v321) = v161 != 0;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      LODWORD(v320) = v331;
      id v162 = *(void **)(v97 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      id v163 = v162;
      v164 = v287;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      v165 = *(void **)(v97 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      id v166 = v165;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      long long v318 = v332;
      long long v319 = v331;
      long long v316 = v334;
      long long v317 = v333;
      long long v304 = v335;
      unint64_t v302 = v336;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v167 = v331;
      uint64_t v168 = *(void *)(v97 + 24);
      type metadata accessor for SharedTranslationOptions();
      sub_1000DDCFC(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
      swift_retain();
      uint64_t v169 = EnvironmentObject.init()();
      uint64_t v171 = v170;
      type metadata accessor for SceneContext();
      sub_1000DDCFC((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
      uint64_t v172 = EnvironmentObject.init()();
      uint64_t v173 = (uint64_t)v291;
      uint64_t *v291 = v169;
      *(void *)(v173 + 8) = v171;
      *(void *)(v173 + 16) = v172;
      *(void *)(v173 + 24) = v174;
      *(_OWORD *)(v173 + 32) = xmmword_10024D860;
      *(unsigned char *)(v173 + 48) = v322 & 1;
      *(unsigned char *)(v173 + 49) = v321;
      *(unsigned char *)(v173 + 50) = v320;
      v175 = (int *)v306;
      v176 = *(void (**)(uint64_t, char *, uint64_t))(v288 + 32);
      os_log_type_t v177 = v164;
      uint64_t v178 = v289;
      v176(v173 + *(int *)(v306 + 40), v177, v289);
      v176(v173 + v175[11], v303, v178);
      uint64_t v179 = v173 + v175[12];
      long long v180 = v318;
      *(_OWORD *)uint64_t v179 = v319;
      *(_OWORD *)(v179 + 16) = v180;
      long long v181 = v316;
      *(_OWORD *)(v179 + 32) = v317;
      *(_OWORD *)(v179 + 48) = v181;
      *(_OWORD *)(v179 + 64) = v304;
      *(void *)(v179 + 80) = v302;
      *(void *)(v173 + v175[13]) = v167;
      os_log_type_t v182 = (void *)(v173 + v175[14]);
      *os_log_type_t v182 = sub_1000A6958;
      v182[1] = v168;
      uint64_t v183 = v173 + v175[15];
      LOBYTE(v359) = 0;
      State.init(wrappedValue:)();
      uint64_t v184 = *((void *)&v331 + 1);
      *(unsigned char *)uint64_t v183 = v331;
      *(void *)(v183 + 8) = v184;
      uint64_t v185 = LocalizedStringKey.init(stringLiteral:)();
      uint64_t v321 = v186;
      uint64_t v322 = v185;
      LODWORD(v319) = v187;
      uint64_t v320 = v188;
      EnvironmentObject.projectedValue.getter();
      swift_getKeyPath();
      EnvironmentObject.Wrapper.subscript.getter();
      swift_release();
      uint64_t v189 = swift_release();
      *(void *)&long long v318 = &v270;
      __chkstk_darwin(v189);
      sub_100007620(&qword_1002F3728);
      sub_1000DDCFC(&qword_1002F3730, (void (*)(uint64_t))type metadata accessor for MoreOptionsMenu);
      sub_100014894(&qword_1002F3738, &qword_1002F3728);
      uint64_t v190 = v292;
      View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_1000DD670(v173, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
      uint64_t v191 = static Alignment.trailing.getter();
      double v193 = sub_10001CA78(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v305, 0.0, 1, 0.0, 1, v191, v192);
      (*(void (**)(char *, uint64_t, double))(v307 + 8))(v190, v308, v193);
      LODWORD(v322) = static Edge.Set.trailing.getter();
      uint64_t v194 = v301;
      sub_100100194(v301);
      uint64_t v195 = v310;
      uint64_t v196 = (uint64_t)v297;
      uint64_t v197 = v312;
      (*(void (**)(char *, void, uint64_t))(v310 + 104))(v297, enum case for UserInterfaceSizeClass.compact(_:), v312);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v195 + 56))(v196, 0, 1, v197);
      uint64_t v198 = v299;
      uint64_t v199 = v299 + *(int *)(v309 + 48);
      sub_10000C3A4(v194, v299, &qword_1002F1058);
      sub_10000C3A4(v196, v199, &qword_1002F1058);
      v200 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v195 + 48);
      if (v200(v198, 1, v197) == 1)
      {
        sub_10000B070(v196, &qword_1002F1058);
        sub_10000B070(v194, &qword_1002F1058);
        int v201 = v200(v199, 1, v197);
        uint64_t v128 = (uint64_t)v328;
        uint64_t v202 = (uint64_t)v298;
        if (v201 == 1)
        {
          sub_10000B070(v198, &qword_1002F1058);
LABEL_30:
          EdgeInsets.init(_all:)();
          uint64_t v238 = v237;
          uint64_t v240 = v239;
          uint64_t v242 = v241;
          uint64_t v244 = v243;
          uint64_t v245 = v305;
          uint64_t v246 = v296;
          sub_10000C3A4(v305, v296, &qword_1002EF4F8);
          uint64_t v247 = v246 + *(int *)(v313 + 36);
          *(unsigned char *)uint64_t v247 = v322;
          *(void *)(v247 + 8) = v238;
          *(void *)(v247 + 16) = v240;
          *(void *)(v247 + 24) = v242;
          *(void *)(v247 + 32) = v244;
          *(unsigned char *)(v247 + 40) = 0;
          sub_10000B070(v245, &qword_1002EF4F8);
          sub_10001323C(v246, v202, &qword_1002F48A0);
          sub_10000C3A4(v202, v315, &qword_1002F48A0);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          sub_1000DD2B0(&qword_1002F4940, &qword_1002F48A0, (void (*)(void))sub_1000DD6D0);
          uint64_t v262 = (uint64_t)v311;
          _ConditionalContent<>.init(storage:)();
          sub_10000B070(v202, &qword_1002F48A0);
          sub_10001323C(v262, v128, &qword_1002F48A8);
          uint64_t v129 = 0;
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v233 = v282;
        sub_10000C3A4(v198, v282, &qword_1002F1058);
        if (v200(v199, 1, v197) != 1)
        {
          v235 = v283;
          (*(void (**)(char *, uint64_t, uint64_t))(v195 + 32))(v283, v199, v197);
          sub_1000DDCFC((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
          dispatch thunk of static Equatable.== infix(_:_:)();
          v236 = *(void (**)(char *, uint64_t))(v195 + 8);
          v236(v235, v197);
          sub_10000B070(v196, &qword_1002F1058);
          sub_10000B070(v301, &qword_1002F1058);
          v236((char *)v233, v197);
          sub_10000B070(v198, &qword_1002F1058);
          uint64_t v128 = (uint64_t)v328;
          uint64_t v202 = (uint64_t)v298;
          goto LABEL_30;
        }
        sub_10000B070(v196, &qword_1002F1058);
        sub_10000B070(v301, &qword_1002F1058);
        (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v233, v197);
        uint64_t v128 = (uint64_t)v328;
        uint64_t v202 = (uint64_t)v298;
      }
      sub_10000B070(v198, &qword_1002F1200);
      goto LABEL_30;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if ((unint64_t)v331 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v203 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v203 = *(void *)((v331 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    LODWORD(v322) = v203 != 0;
    type metadata accessor for SharedTranslationOptions();
    sub_1000DDCFC(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
    uint64_t v204 = EnvironmentObject.init()();
    uint64_t v206 = v205;
    type metadata accessor for SceneContext();
    sub_1000DDCFC((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t v207 = EnvironmentObject.init()();
    uint64_t v209 = v208;
    v210 = (int *)v306;
    uint64_t v211 = (uint64_t)v285;
    Locale.init(identifier:)();
    Locale.init(identifier:)();
    *(void *)uint64_t v211 = v204;
    *(void *)(v211 + 8) = v206;
    *(void *)(v211 + 16) = v207;
    *(void *)(v211 + 24) = v209;
    *(_OWORD *)(v211 + 32) = xmmword_10024D860;
    *(unsigned char *)(v211 + 48) = 0;
    *(unsigned char *)(v211 + 49) = v322;
    *(unsigned char *)(v211 + 50) = 0;
    uint64_t v212 = v211 + v210[12];
    *(_OWORD *)(v212 + 48) = 0u;
    *(_OWORD *)(v212 + 64) = 0u;
    *(_OWORD *)(v212 + 16) = 0u;
    *(_OWORD *)(v212 + 32) = 0u;
    *(_OWORD *)uint64_t v212 = 0u;
    *(void *)(v212 + 80) = 0;
    *(void *)(v211 + v210[13]) = _swiftEmptyArrayStorage;
    v213 = (void *)(v211 + v210[14]);
    void *v213 = 0;
    v213[1] = 0;
    uint64_t v214 = v211 + v210[15];
    LOBYTE(v359) = 0;
    State.init(wrappedValue:)();
    uint64_t v215 = *((void *)&v331 + 1);
    *(unsigned char *)uint64_t v214 = v331;
    *(void *)(v214 + 8) = v215;
    uint64_t v216 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v321 = v217;
    uint64_t v322 = v216;
    LODWORD(v319) = v218;
    uint64_t v320 = v219;
    EnvironmentObject.projectedValue.getter();
    swift_getKeyPath();
    EnvironmentObject.Wrapper.subscript.getter();
    swift_release();
    uint64_t v220 = swift_release();
    *(void *)&long long v318 = &v270;
    __chkstk_darwin(v220);
    sub_100007620(&qword_1002F3728);
    sub_1000DDCFC(&qword_1002F3730, (void (*)(uint64_t))type metadata accessor for MoreOptionsMenu);
    sub_100014894(&qword_1002F3738, &qword_1002F3728);
    os_log_type_t v221 = v286;
    View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1000DD670(v211, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
    uint64_t v222 = static Alignment.trailing.getter();
    double v224 = sub_10001CA78(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v304, 0.0, 1, 0.0, 1, v222, v223);
    (*(void (**)(char *, uint64_t, double))(v307 + 8))(v221, v308, v224);
    LODWORD(v322) = static Edge.Set.trailing.getter();
    uint64_t v225 = v300;
    sub_100100194(v300);
    uint64_t v226 = v310;
    uint64_t v227 = (uint64_t)v294;
    uint64_t v228 = v312;
    (*(void (**)(char *, void, uint64_t))(v310 + 104))(v294, enum case for UserInterfaceSizeClass.compact(_:), v312);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v226 + 56))(v227, 0, 1, v228);
    uint64_t v229 = v295;
    uint64_t v230 = v295 + *(int *)(v309 + 48);
    sub_10000C3A4(v225, v295, &qword_1002F1058);
    sub_10000C3A4(v227, v230, &qword_1002F1058);
    v231 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v226 + 48);
    if (v231(v229, 1, v228) == 1)
    {
      sub_10000B070(v227, &qword_1002F1058);
      sub_10000B070(v225, &qword_1002F1058);
      int v232 = v231(v230, 1, v228);
      uint64_t v128 = (uint64_t)v328;
      if (v232 == 1)
      {
        sub_10000B070(v229, &qword_1002F1058);
LABEL_32:
        EdgeInsets.init(_all:)();
        uint64_t v251 = v250;
        uint64_t v253 = v252;
        uint64_t v255 = v254;
        uint64_t v257 = v256;
        uint64_t v258 = v304;
        uint64_t v259 = v290;
        sub_10000C3A4(v304, v290, &qword_1002EF4F8);
        uint64_t v260 = v259 + *(int *)(v313 + 36);
        *(unsigned char *)uint64_t v260 = v322;
        *(void *)(v260 + 8) = v251;
        *(void *)(v260 + 16) = v253;
        *(void *)(v260 + 24) = v255;
        *(void *)(v260 + 32) = v257;
        *(unsigned char *)(v260 + 40) = 0;
        sub_10000B070(v258, &qword_1002EF4F8);
        uint64_t v261 = v259;
        uint64_t v202 = v293;
        sub_10001323C(v261, v293, &qword_1002F48A0);
        sub_10000C3A4(v202, v315, &qword_1002F48A0);
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v234 = v281;
      sub_10000C3A4(v229, v281, &qword_1002F1058);
      if (v231(v230, 1, v228) != 1)
      {
        id v248 = v283;
        (*(void (**)(char *, uint64_t, uint64_t))(v226 + 32))(v283, v230, v228);
        sub_1000DDCFC((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        dispatch thunk of static Equatable.== infix(_:_:)();
        id v249 = *(void (**)(char *, uint64_t))(v226 + 8);
        v249(v248, v228);
        sub_10000B070(v227, &qword_1002F1058);
        sub_10000B070(v300, &qword_1002F1058);
        v249((char *)v234, v228);
        sub_10000B070(v229, &qword_1002F1058);
        uint64_t v128 = (uint64_t)v328;
        goto LABEL_32;
      }
      sub_10000B070(v227, &qword_1002F1058);
      sub_10000B070(v300, &qword_1002F1058);
      (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v234, v228);
      uint64_t v128 = (uint64_t)v328;
    }
    sub_10000B070(v229, &qword_1002F1200);
    goto LABEL_32;
  }
LABEL_9:
  uint64_t v129 = 1;
LABEL_34:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v324 + 56))(v128, v129, 1, v325);
  uint64_t v263 = v330;
  uint64_t v264 = v323;
  sub_10000C3A4(v330, v323, &qword_1002F48E8);
  uint64_t v265 = v326;
  sub_10000C3A4(v128, v326, &qword_1002F48B0);
  uint64_t v266 = v327;
  sub_10000C3A4(v264, v327, &qword_1002F48E8);
  uint64_t v267 = sub_100007620(&qword_1002F4938);
  sub_10000C3A4(v265, v266 + *(int *)(v267 + 48), &qword_1002F48B0);
  sub_10000B070(v128, &qword_1002F48B0);
  sub_10000B070(v263, &qword_1002F48E8);
  sub_10000B070(v265, &qword_1002F48B0);
  return sub_10000B070(v264, &qword_1002F48E8);
}

void sub_1000DB670()
{
  uint64_t v1 = *(void **)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v9 == 1)
  {

LABEL_4:
    id v3 = v2;
    sub_1000AC2B0(0, 0, 1);
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v8 == 1) {
    goto LABEL_4;
  }
  char v4 = sub_1000D873C();
  uint64_t v5 = *(void **)(v0 + 8);
  if (v4)
  {
    int v6 = *(unsigned __int8 *)(v0 + 48);
    id v3 = v5;
    int v7 = v6;
  }
  else
  {
    id v3 = v5;
    int v7 = 2;
  }
  sub_1000ABAC0(v7, 1);
LABEL_9:
}

uint64_t sub_1000DB7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v55 = a3;
  uint64_t v50 = a2;
  uint64_t v47 = a1;
  uint64_t v58 = a6;
  uint64_t v7 = type metadata accessor for FaceToFaceHalfView();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v51 + 64);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F22B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EF0C8);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v54 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v53 = (char *)v42 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v52 = (char *)v42 - v20;
  __chkstk_darwin(v19);
  uint64_t v49 = (char *)v42 - v21;
  uint64_t v22 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v44 = v23;
  uint64_t v45 = v22;
  v42[3] = v24;
  uint64_t v43 = v25;
  static ButtonRole.destructive.getter();
  uint64_t v26 = type metadata accessor for ButtonRole();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v46 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
  uint64_t v48 = v27 + 56;
  v46(v12, 0, 1, v26);
  sub_1000DCFB8(a1, (uint64_t)v9);
  unint64_t v28 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v29 = swift_allocObject();
  sub_1000DD020((uint64_t)v9, v29 + v28);
  Button<>.init(_:role:action:)();
  uint64_t v55 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v51 = v30;
  static ButtonRole.cancel.getter();
  v46(v12, 0, 1, v26);
  sub_1000DCFB8(v47, (uint64_t)v9);
  uint64_t v31 = swift_allocObject();
  sub_1000DD020((uint64_t)v9, v31 + v28);
  uint64_t v32 = v52;
  Button<>.init(_:role:action:)();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v34 = v53;
  uint64_t v35 = v49;
  v33(v53, v49, v13);
  uint64_t v36 = v54;
  uint64_t v37 = v32;
  v33(v54, v32, v13);
  uint64_t v38 = v58;
  v33(v58, v34, v13);
  uint64_t v39 = sub_100007620(&qword_1002F3748);
  v33(&v38[*(int *)(v39 + 48)], v36, v13);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v14 + 8);
  v40(v37, v13);
  v40(v35, v13);
  v40(v36, v13);
  return ((uint64_t (*)(char *, uint64_t))v40)(v34, v13);
}

uint64_t sub_1000DBBFC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 8) + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session);
  sub_100029624((void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store), *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store + 24));
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of TranslationStore.clearHistory(sessionID:completion:)();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_lidDisambiguationCounter) = 0;
  return swift_release();
}

uint64_t sub_1000DBD40(uint64_t a1)
{
  if (*(void *)(a1 + *(int *)(type metadata accessor for FaceToFaceHalfView() + 40)))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000DDCFC((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DBE24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v84 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v77 = (char *)v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100007620(&qword_1002F1200);
  __chkstk_darwin(v87);
  int v6 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F1058);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v78 = (uint64_t)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v90 = (uint64_t)v71 - v11;
  __chkstk_darwin(v10);
  uint64_t v86 = (uint64_t)v71 - v12;
  uint64_t v91 = type metadata accessor for FaceToFaceHalfView();
  uint64_t v13 = *(void *)(v91 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v91);
  uint64_t v15 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100007620(&qword_1002F4868);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100007620(&qword_1002F4870);
  __chkstk_darwin(v79);
  uint64_t v85 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F4878);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v89 = (uint64_t)v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v88 = (uint64_t)v71 - v22;
  uint64_t v23 = sub_100007620(&qword_1002F4880);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v28 = (char *)v71 - v27;
  uint64_t v92 = static Color.clear.getter();
  if ((*(unsigned char *)(a1 + 48) & 1) == 0)
  {
    uint64_t v72 = v28;
    uint64_t v73 = v19;
    char v74 = v26;
    uint64_t v75 = v18;
    char v76 = a2;
    v71[1] = a1;
    sub_1000DCFB8(a1, (uint64_t)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v29 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v30 = swift_allocObject();
    sub_1000DD020((uint64_t)v15, v30 + v29);
    LOBYTE(v95) = 0;
    State.init(wrappedValue:)();
    char v31 = v96;
    uint64_t v32 = v97;
    LOWORD(v96) = 257;
    BYTE2(v96) = 1;
    uint64_t v97 = sub_1000DD084;
    uint64_t v98 = v30;
    char v99 = v31;
    uint64_t v100 = v32;
    uint64_t v33 = (uint64_t *)(a1 + *(int *)(v91 + 48));
    uint64_t v35 = (uint64_t (*)())v33[1];
    uint64_t v93 = *v33;
    uint64_t v34 = v93;
    long long v94 = v35;
    sub_100007620(&qword_1002EF470);
    State.projectedValue.getter();
    uint64_t v36 = v6;
    sub_1000DD09C();
    uint64_t v37 = v80;
    View.bindGeometry(to:reader:)();
    swift_release();
    uint64_t v38 = v84;
    uint64_t v39 = (uint64_t)v36;
    uint64_t v40 = v83;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v96 = v34;
    uint64_t v97 = v35;
    State.wrappedValue.getter();
    double v41 = v95 * -0.5;
    uint64_t v42 = v81;
    uint64_t v43 = (uint64_t)v85;
    uint64_t v44 = v82;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v85, v37, v82);
    uint64_t v45 = v43 + *(int *)(v79 + 36);
    *(void *)uint64_t v45 = 0;
    *(double *)(v45 + 8) = v41;
    uint64_t v46 = v37;
    uint64_t v47 = v39;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v46, v44);
    LODWORD(v82) = static Edge.Set.horizontal.getter();
    uint64_t v48 = v86;
    sub_100100194(v86);
    uint64_t v49 = v90;
    (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))(v90, enum case for UserInterfaceSizeClass.compact(_:), v38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v49, 0, 1, v38);
    uint64_t v50 = v39 + *(int *)(v87 + 48);
    sub_10000C3A4(v48, v39, &qword_1002F1058);
    sub_10000C3A4(v49, v50, &qword_1002F1058);
    uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    if (v51(v39, 1, v38) == 1)
    {
      sub_10000B070(v49, &qword_1002F1058);
      sub_10000B070(v48, &qword_1002F1058);
      int v52 = v51(v50, 1, v38);
      uint64_t v26 = v74;
      uint64_t v53 = v73;
      if (v52 == 1)
      {
        sub_10000B070(v47, &qword_1002F1058);
        unint64_t v28 = v72;
LABEL_10:
        EdgeInsets.init(_all:)();
        uint64_t v58 = v57;
        uint64_t v60 = v59;
        uint64_t v62 = v61;
        uint64_t v64 = v63;
        uint64_t v65 = v89;
        sub_10000C3A4(v43, v89, &qword_1002F4870);
        uint64_t v66 = v75;
        uint64_t v67 = v65 + *(int *)(v75 + 36);
        *(unsigned char *)uint64_t v67 = v82;
        *(void *)(v67 + 8) = v58;
        *(void *)(v67 + 16) = v60;
        *(void *)(v67 + 24) = v62;
        *(void *)(v67 + 32) = v64;
        *(unsigned char *)(v67 + 40) = 0;
        sub_10000B070(v43, &qword_1002F4870);
        uint64_t v68 = v88;
        sub_10001323C(v65, v88, &qword_1002F4878);
        sub_10001323C(v68, (uint64_t)v28, &qword_1002F4878);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v28, 0, 1, v66);
        a2 = v76;
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v54 = v78;
      sub_10000C3A4(v39, v78, &qword_1002F1058);
      if (v51(v50, 1, v38) != 1)
      {
        uint64_t v55 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v77, v50, v38);
        sub_1000DDCFC((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v40 + 8);
        v56(v55, v38);
        sub_10000B070(v90, &qword_1002F1058);
        sub_10000B070(v48, &qword_1002F1058);
        v56((char *)v54, v38);
        sub_10000B070(v39, &qword_1002F1058);
        uint64_t v26 = v74;
        uint64_t v53 = v73;
        unint64_t v28 = v72;
        goto LABEL_10;
      }
      sub_10000B070(v90, &qword_1002F1058);
      sub_10000B070(v48, &qword_1002F1058);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v54, v38);
      uint64_t v26 = v74;
      uint64_t v53 = v73;
    }
    sub_10000B070(v47, &qword_1002F1200);
    unint64_t v28 = v72;
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v28, 1, 1, v18);
LABEL_11:
  sub_10000C3A4((uint64_t)v28, (uint64_t)v26, &qword_1002F4880);
  *a2 = v92;
  uint64_t v69 = sub_100007620(&qword_1002F4888);
  sub_10000C3A4((uint64_t)v26, (uint64_t)a2 + *(int *)(v69 + 48), &qword_1002F4880);
  swift_retain();
  sub_10000B070((uint64_t)v28, &qword_1002F4880);
  sub_10000B070((uint64_t)v26, &qword_1002F4880);
  return swift_release();
}

uint64_t sub_1000DC894()
{
  uint64_t v1 = v0;
  uint64_t v30 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v30 - 8);
  uint64_t v3 = __chkstk_darwin(v30);
  char v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v28 - v6;
  __chkstk_darwin(v5);
  unint64_t v29 = (char *)&v28 - v8;
  uint64_t v9 = type metadata accessor for FaceToFaceHalfView();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  NSString v12 = String._bridgeToObjectiveC()();
  sub_1000DCFB8(v1, (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1000DD020((uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  aBlock[4] = sub_1000DD0F4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001BB31C;
  void aBlock[3] = &unk_1002CD9D0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v15);

  uint64_t v16 = *(void **)(v1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v17 = v16;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v18 = *(void **)(v1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v19 = v18;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v21 = v30;
  v20(v31, v7, v30);
  id v22 = v19;
  static Published.subscript.setter();
  sub_1000A748C();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v28 = v2 + 8;
  v23(v7, v21);

  uint64_t v24 = *(void **)(v1 + 8);
  uint64_t v25 = v29;
  v20(v7, v29, v21);
  swift_getKeyPath();
  swift_getKeyPath();
  v20(v31, v7, v21);
  id v26 = v24;
  static Published.subscript.setter();
  sub_1000A74C4();
  v23(v7, v21);

  return ((uint64_t (*)(char *, uint64_t))v23)(v25, v21);
}

unint64_t sub_1000DCCD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v18[-v7];
  sub_100007620(&qword_1002F2200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100248B60;
  *(void *)(inited + 32) = 0x6D614E746E657665;
  *(void *)(inited + 40) = 0xE900000000000065;
  sub_1000DD17C();
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 64) = 0xE800000000000000;
  *(void *)(inited + 72) = NSString.init(stringLiteral:)();
  strcpy((char *)(inited + 80), "sourceLocale");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  uint64_t v10 = *(void **)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v11 = v10;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  NSString v12 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v12(v8, v2);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v13;
  strcpy((char *)(inited + 104), "targetLocale");
  *(unsigned char *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  uint64_t v14 = *(void **)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v15 = v14;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  v12(v6, v2);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 120) = v16;
  return sub_1001FF7B4(inited);
}

uint64_t sub_1000DCFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FaceToFaceHalfView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DD020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FaceToFaceHalfView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DD084()
{
  return sub_1000DD1E0(sub_1000DC894);
}

unint64_t sub_1000DD09C()
{
  unint64_t result = qword_1002F4890;
  if (!qword_1002F4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4890);
  }
  return result;
}

unint64_t sub_1000DD0F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FaceToFaceHalfView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000DCCD8(v2);
}

uint64_t sub_1000DD154(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DD164()
{
  return swift_release();
}

unint64_t sub_1000DD17C()
{
  unint64_t result = qword_1002EEC78;
  if (!qword_1002EEC78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002EEC78);
  }
  return result;
}

uint64_t sub_1000DD1C8()
{
  return sub_1000DD1E0((uint64_t (*)(void))sub_1000DB670);
}

uint64_t sub_1000DD1E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000DD248()
{
  return type metadata accessor for FaceToFaceHalfView();
}

uint64_t sub_1000DD250()
{
  return sub_1000DD2B0(&qword_1002F48F8, &qword_1002F48F0, (void (*)(void))sub_1000DD280);
}

uint64_t sub_1000DD280()
{
  return sub_1000DD2B0(&qword_1002F4900, &qword_1002F4908, (void (*)(void))sub_1000DD32C);
}

uint64_t sub_1000DD2B0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000DD32C()
{
  unint64_t result = qword_1002F4910;
  if (!qword_1002F4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4910);
  }
  return result;
}

uint64_t sub_1000DD380(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 104);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 144);
  uint64_t v11 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 160);
  uint64_t v9 = *(void *)(a1 + 152);
  long long v7 = *(_OWORD *)(a1 + 168);
  uint64_t v5 = *(void **)(a1 + 184);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000324E4(v2);
  sub_1000324E4(v3);
  swift_bridgeObjectRelease();
  sub_1000194BC(v14, v4, v13, v12, v11, v10, v9, v8, v7, *((void **)&v7 + 1), v5);
  return a1;
}

uint64_t sub_1000DD470()
{
  return sub_1000DD2B0(&qword_1002F4920, &qword_1002F48D8, (void (*)(void))sub_1000DD4A0);
}

unint64_t sub_1000DD4A0()
{
  unint64_t result = qword_1002F4928;
  if (!qword_1002F4928)
  {
    sub_100007928(&qword_1002F48D0);
    sub_1000DD32C();
    sub_100014A08();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4928);
  }
  return result;
}

uint64_t sub_1000DD55C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    sub_1000DDCFC((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DD61C@<X0>(char *a1@<X8>)
{
  return sub_1000DB7A4(*(void *)(v1 + 16), (uint64_t)&unk_1002CDAF8, (uint64_t)sub_1000DD8A8, (uint64_t)&unk_1002CDB20, (uint64_t)sub_1000DD8B0, a1);
}

uint64_t sub_1000DD670(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000DD6D0()
{
  unint64_t result = qword_1002F4948;
  if (!qword_1002F4948)
  {
    sub_100007928(&qword_1002EF4F8);
    type metadata accessor for MoreOptionsMenu();
    sub_100007928(&qword_1002F3728);
    sub_1000DDCFC(&qword_1002F3730, (void (*)(uint64_t))type metadata accessor for MoreOptionsMenu);
    sub_100014894(&qword_1002F3738, &qword_1002F3728);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4948);
  }
  return result;
}

uint64_t sub_1000DD814@<X0>(char *a1@<X8>)
{
  return sub_1000DB7A4(*(void *)(v1 + 16), (uint64_t)&unk_1002CDAA8, (uint64_t)sub_1000DD8A8, (uint64_t)&unk_1002CDAD0, (uint64_t)sub_1000DD8B0, a1);
}

uint64_t sub_1000DD868()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DD8B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for FaceToFaceHalfView() - 8);
  return sub_1000DBD40(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1000DD914()
{
  uint64_t v1 = *(void *)(type metadata accessor for FaceToFaceHalfView() - 8);
  return sub_1000DBBFC(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1000DD96C()
{
  uint64_t v1 = type metadata accessor for FaceToFaceHalfView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 32);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000DDB48()
{
  return sub_1000DD2B0(&qword_1002F4950, &qword_1002F4860, (void (*)(void))sub_1000DDB8C);
}

unint64_t sub_1000DDB8C()
{
  unint64_t result = qword_1002F4958;
  if (!qword_1002F4958)
  {
    sub_100007928(&qword_1002F4830);
    sub_1000DDC2C();
    sub_100014894(&qword_1002F4970, &qword_1002F4858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4958);
  }
  return result;
}

unint64_t sub_1000DDC2C()
{
  unint64_t result = qword_1002F4960;
  if (!qword_1002F4960)
  {
    sub_100007928(&qword_1002F4838);
    sub_1000DDCFC(&qword_1002F30B8, (void (*)(uint64_t))type metadata accessor for ConversationList);
    sub_100014894(&qword_1002F4968, &qword_1002F4840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4960);
  }
  return result;
}

uint64_t sub_1000DDCFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FaceToFacePresentation(uint64_t a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for FaceToFacePresentation(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  id v5 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FaceToFacePresentation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FaceToFacePresentation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FaceToFacePresentation()
{
  return &type metadata for FaceToFacePresentation;
}

uint64_t sub_1000DDED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000DDEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v40 = a1;
  uint64_t v42 = a2;
  uint64_t v4 = sub_100007620(&qword_1002F4978);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620(&qword_1002F4980);
  __chkstk_darwin(v41);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + 16);
  long long v48 = *(_OWORD *)(v2 + 24);
  v60[0] = *(_OWORD *)(v2 + 24);
  id v11 = v10;
  sub_100007620(&qword_1002F4988);
  State.wrappedValue.getter();
  int v39 = v49;
  uint64_t v12 = type metadata accessor for ConversationContext(0);
  v38[0] = sub_1000DE368(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  v38[1] = v12;
  uint64_t v13 = EnvironmentObject.init()();
  uint64_t v15 = v14;
  type metadata accessor for SceneContext();
  sub_1000DE368((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t v16 = EnvironmentObject.init()();
  uint64_t v18 = v17;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v49 = v13;
  uint64_t v50 = v15;
  uint64_t v51 = v16;
  uint64_t v52 = v18;
  id v53 = v11;
  char v54 = v39;
  uint64_t v55 = v43;
  char v56 = v44;
  uint64_t v57 = v45;
  char v58 = v46;
  long long v59 = v47;
  static Alignment.center.getter();
  sub_10001CCD0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v60, 0.0, 1, 0.0, 1);

  swift_release();
  swift_release();
  uint64_t v19 = static Alignment.center.getter();
  uint64_t v21 = v20;
  uint64_t v22 = sub_100007620(&qword_1002F4990);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v7, v40, v22);
  uint64_t v23 = &v7[*(int *)(v5 + 44)];
  long long v24 = v60[11];
  *((_OWORD *)v23 + 10) = v60[10];
  *((_OWORD *)v23 + 11) = v24;
  *((_OWORD *)v23 + 12) = v60[12];
  long long v25 = v60[7];
  *((_OWORD *)v23 + 6) = v60[6];
  *((_OWORD *)v23 + 7) = v25;
  long long v26 = v60[9];
  *((_OWORD *)v23 + 8) = v60[8];
  *((_OWORD *)v23 + 9) = v26;
  long long v27 = v60[3];
  *((_OWORD *)v23 + 2) = v60[2];
  *((_OWORD *)v23 + 3) = v27;
  long long v28 = v60[5];
  *((_OWORD *)v23 + 4) = v60[4];
  *((_OWORD *)v23 + 5) = v28;
  long long v29 = v60[1];
  *(_OWORD *)uint64_t v23 = v60[0];
  *((_OWORD *)v23 + 1) = v29;
  *((void *)v23 + 26) = v19;
  *((void *)v23 + 27) = v21;
  uint64_t v30 = *(void *)v3;
  if (*(void *)v3)
  {
    swift_retain();
    uint64_t v31 = sub_10017C7CC((uint64_t)v11, v30);
    swift_release();
    uint64_t v32 = swift_allocObject();
    long long v33 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v32 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v32 + 32) = v33;
    *(void *)(v32 + 48) = *(void *)(v3 + 32);
    sub_1000DE400((uint64_t)v7, (uint64_t)v9);
    uint64_t v34 = v41;
    *(void *)&v9[*(int *)(v41 + 52)] = v31;
    uint64_t v35 = (uint64_t (**)(unsigned __int8 *))&v9[*(int *)(v34 + 56)];
    char *v35 = sub_1000DE3F8;
    v35[1] = (uint64_t (*)(unsigned __int8 *))v32;
    id v36 = v11;
    swift_retain();
    sub_10001F2D8((uint64_t)&v48);
    sub_1000DE468((uint64_t)v7);
    return sub_1000DE4C8((uint64_t)v9, v42);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DE2E0(unsigned __int8 *a1)
{
  int v1 = *a1;
  sub_100007620(&qword_1002F4988);
  uint64_t result = State.wrappedValue.getter();
  if (v3 != v1) {
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1000DE368(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DE3B0()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000DE3F8(unsigned __int8 *a1)
{
  return sub_1000DE2E0(a1);
}

uint64_t sub_1000DE400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F4978);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DE468(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F4978);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000DE4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F4980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000DE534()
{
  unint64_t result = qword_1002F4998;
  if (!qword_1002F4998)
  {
    sub_100007928(&qword_1002F4980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4998);
  }
  return result;
}

void destroy for FaceToFacePresenter(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t initializeWithCopy for FaceToFacePresenter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for FaceToFacePresenter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FaceToFacePresenter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;

  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceToFacePresenter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceToFacePresenter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceToFacePresenter()
{
  return &type metadata for FaceToFacePresenter;
}

void sub_1000DE7C0(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (void *)type metadata accessor for DispatchQoS();
  uint64_t v41 = *(v7 - 1);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *((void *)v1 + 2);
  if (!v10)
  {
    type metadata accessor for SceneContext();
    sub_1000DF30C((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    EnvironmentObject.error()();
    __break(1u);
    goto LABEL_21;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v11 = LOBYTE(aBlock[0]);
  if (*((unsigned char *)v1 + 40))
  {
    if (aBlock[0])
    {
      id v12 = [a1 presentedViewController];
      if (v12)
      {
        uint64_t v13 = v12;
        type metadata accessor for FaceToFaceViewController();
        uint64_t v14 = swift_dynamicCastClass();

        if (v14)
        {
          sub_100022324();
          uint64_t v40 = static OS_dispatch_queue.main.getter();
          long long v44 = *v2;
          uint64_t v15 = (void *)*((void *)v2 + 4);
          uint64_t v16 = swift_allocObject();
          long long v17 = v2[1];
          *(_OWORD *)(v16 + 16) = *v2;
          *(_OWORD *)(v16 + 32) = v17;
          *(_OWORD *)(v16 + 41) = *(long long *)((char *)v2 + 25);
          *(void *)(v16 + 64) = a1;
          aBlock[4] = sub_1000DF2D4;
          aBlock[5] = v16;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10008BA1C;
          void aBlock[3] = &unk_1002CDCC0;
          int v39 = _Block_copy(aBlock);
          swift_retain();
          sub_10001C05C((uint64_t)&v44);
          id v18 = v15;
          id v19 = a1;
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_1000DF30C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100007620(&qword_1002EEE40);
          sub_1000116B4();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v21 = v39;
          uint64_t v20 = (void *)v40;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v21);

          (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
          (*(void (**)(char *, void *))(v41 + 8))(v9, v7);
        }
      }
    }
  }
  id v22 = [a1 presentedViewController];

  if (v22) {
    int v23 = 0;
  }
  else {
    int v23 = v11;
  }
  if (v23 != 1) {
    goto LABEL_13;
  }
  uint64_t v7 = (void *)*((void *)v2 + 4);
  uint64_t v24 = *(void *)v2;
  if (!*(void *)v2)
  {
LABEL_21:
    type metadata accessor for ConversationContext(0);
    sub_1000DF30C(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    uint64_t v38 = v7;
    EnvironmentObject.error()();
    __break(1u);
    return;
  }
  id v25 = objc_allocWithZone((Class)type metadata accessor for FaceToFaceViewController());
  swift_retain();
  long long v26 = v7;
  swift_retain();
  long long v27 = (char *)sub_1000DF5AC(v26, v24, v10);
  [v27 setModalPresentationStyle:5];
  [v27 setModalTransitionStyle:2];
  uint64_t v28 = swift_allocObject();
  long long v29 = v2[1];
  *(_OWORD *)(v28 + 16) = *v2;
  *(_OWORD *)(v28 + 32) = v29;
  *(_OWORD *)(v28 + 41) = *(long long *)((char *)v2 + 25);
  *(void *)(v28 + 64) = a1;
  uint64_t v30 = (uint64_t (**)())&v27[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_onCloseTap];
  uint64_t v31 = *(void *)&v27[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_onCloseTap];
  *uint64_t v30 = sub_1000DF2C4;
  v30[1] = (uint64_t (*)())v28;
  swift_retain();
  id v32 = a1;
  long long v33 = v26;
  swift_retain();
  sub_1000324E4(v31);
  [v32 presentViewController:v27 animated:1 completion:0];

LABEL_13:
  id v34 = [a1 presentedViewController];
  if (v34)
  {
    uint64_t v35 = v34;
    type metadata accessor for FaceToFaceViewController();
    uint64_t v36 = swift_dynamicCastClass();

    if (v36) {
      char v37 = v11;
    }
    else {
      char v37 = 1;
    }
    if ((v37 & 1) == 0) {
      [a1 dismissViewControllerAnimated:1 completion:0];
    }
  }
}

uint64_t sub_1000DEDA0(long long *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100022324();
  int v11 = (void *)static OS_dispatch_queue.main.getter();
  long long v12 = *a1;
  long long v23 = a1[1];
  long long v24 = v12;
  uint64_t v13 = (void *)*((void *)a1 + 4);
  uint64_t v14 = swift_allocObject();
  long long v15 = a1[1];
  *(_OWORD *)(v14 + 16) = *a1;
  *(_OWORD *)(v14 + 32) = v15;
  *(_OWORD *)(v14 + 41) = *(long long *)((char *)a1 + 25);
  *(void *)(v14 + 64) = a2;
  aBlock[4] = sub_1000DF404;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CDD10;
  uint64_t v16 = _Block_copy(aBlock);
  sub_10001C05C((uint64_t)&v24);
  sub_10001C05C((uint64_t)&v23);
  id v17 = v13;
  id v18 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000DF30C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v21);
}

id sub_1000DF080(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    return [a2 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000DF30C((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    id result = (id)EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000DF170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000DF3A8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000DF1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000DF3A8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000DF238()
{
}

unint64_t sub_1000DF264()
{
  unint64_t result = qword_1002F49A0;
  if (!qword_1002F49A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F49A0);
  }
  return result;
}

uint64_t sub_1000DF2C4()
{
  return sub_1000DEDA0((long long *)(v0 + 16), *(void **)(v0 + 64));
}

id sub_1000DF2D4()
{
  return sub_1000DF080(v0 + 16, *(void **)(v0 + 64));
}

uint64_t sub_1000DF2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DF304()
{
  return swift_release();
}

uint64_t sub_1000DF30C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DF358()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

unint64_t sub_1000DF3A8()
{
  unint64_t result = qword_1002F49A8;
  if (!qword_1002F49A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F49A8);
  }
  return result;
}

id sub_1000DF408()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController____lazy_storage___closeButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController____lazy_storage___closeButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController____lazy_storage___closeButton);
  }
  else
  {
    id v4 = [self buttonWithType:7];
    [v4 addTarget:v0 action:"closeButtonPressed" forControlEvents:0x2000];
    id v3 = v4;
    NSString v5 = String._bridgeToObjectiveC()();
    [v3 setAccessibilityIdentifier:v5];

    unint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_1000DF4E4()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 != (id)1) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v3;
}

id sub_1000DF5AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F4A80);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007620(&qword_1002F4A88);
  uint64_t v14 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController____lazy_storage___closeButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint] = 0;
  id v17 = v3;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    id v18 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    id v18 = &_swiftEmptySetSingleton;
  }
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_subscriptions] = v18;
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_transitionAnimationDuration] = 0x3FD0000000000000;
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding] = 0x4040000000000000;
  id v19 = &v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_onCloseTap];
  *(void *)id v19 = 0;
  *((void *)v19 + 1) = 0;
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_viewModel] = a1;
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_conversationContext] = a2;
  *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sceneContext] = a3;
  id v28 = a1;
  swift_retain();
  swift_retain();

  uint64_t v20 = (objc_class *)type metadata accessor for FaceToFaceViewController();
  v31.receiver = v17;
  v31.super_class = v20;
  id v21 = [super initWithNibName:0 bundle:0];
  uint64_t v27 = a3;
  id v22 = v21;
  swift_beginAccess();
  id v23 = v22;
  sub_100007620(&qword_1002F2C10);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v30 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
  sub_100014894(&qword_1002F4A90, &qword_1002F4A80);
  sub_100022364();
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v9, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F4A98, &qword_1002F4A88);
  uint64_t v25 = v29;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v25);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  swift_release();
  swift_release();
  return v23;
}

void sub_1000DFA88(double *a1)
{
  double v1 = *a1;
  double v2 = a1[2];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    NSString v5 = *(void **)(Strong + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint);
    if (v5)
    {
      double v6 = *(double *)(Strong
                     + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding);
      if (v6 <= v1) {
        double v6 = v1;
      }
      if (v6 > v2) {
        double v2 = v6;
      }
      id v7 = v5;
      [v7 setConstant:v2];
      if ([v7 isActive])
      {
        id v8 = [v4 view];
        if (!v8)
        {
          __break(1u);
          return;
        }
        uint64_t v9 = v8;
        [v8 setNeedsLayout];
      }
      id v4 = v7;
    }
  }
}

uint64_t sub_1000DFBAC()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for FaceToFaceViewController();
  [super viewDidLoad];
  sub_1000E01D0();
  uint64_t result = sub_1000DF4E4();
  if ((result & 1) == 0)
  {
    double v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow];
    if (v2) {
      [v2 setAlpha:0.0];
    }
    uint64_t result = *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow];
    if (result) {
      return (uint64_t)[(id)result setAlpha:0.0];
    }
  }
  return result;
}

void sub_1000DFD98(void *a1, double a2, double a3)
{
  id v4 = v3;
  v44.receiver = v3;
  v44.super_class = (Class)type metadata accessor for FaceToFaceViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  [v3 setNeedsStatusBarAppearanceUpdate];
  id v8 = [self sharedApplication];
  uint64_t v9 = sub_1002389D4();

  id v10 = [v9 windowScene];
  if (v10)
  {
    sub_1000E0CE0();
    uint64_t v11 = self;
    id v12 = [v11 mainScreen];
    [v12 bounds];
    double v14 = v13;

    id v15 = [v4 view];
    if (v15)
    {
      uint64_t v16 = v15;
      [v15 frame];
      double v18 = v17;

      if (v14 != v18) {
        goto LABEL_6;
      }
      id v19 = [v4 view];
      if (v19)
      {
        uint64_t v20 = v19;
        [v19 frame];
        double v22 = v21;

        if (v22 != a2)
        {
          id v24 = [v4 view];
          if (!v24)
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          uint64_t v25 = v24;
          [v24 frame];
          double v27 = v26;

          BOOL v23 = v27 == a3;
          goto LABEL_9;
        }
LABEL_6:
        BOOL v23 = 0;
LABEL_9:
        id v28 = [v11 mainScreen];
        [v28 bounds];
        double v30 = v29;

        if (v30 != a2) {
          goto LABEL_12;
        }
        id v31 = [v4 view];
        if (v31)
        {
          id v32 = v31;
          [v31 frame];
          double v34 = v33;

          if (v34 == a2)
          {
LABEL_12:
            if (v23)
            {
LABEL_13:
              uint64_t v35 = swift_allocObject();
              *(void *)(v35 + 16) = v4;
              v43[4] = sub_1000E2F04;
              v43[5] = v35;
              v43[0] = _NSConcreteStackBlock;
              v43[1] = 1107296256;
              v43[2] = sub_100218A34;
              v43[3] = &unk_1002CDDB0;
              uint64_t v36 = _Block_copy(v43);
              id v37 = v4;
              swift_release();
              [a1 animateAlongsideTransition:0 completion:v36];
              _Block_release(v36);
              return;
            }
            goto LABEL_19;
          }
          id v38 = [v4 view];
          if (v38)
          {
            int v39 = v38;
            [v38 frame];
            double v41 = v40;

            char v42 = v41 == a3 || v23;
            if (v42) {
              goto LABEL_13;
            }
LABEL_19:
            sub_1000E01D0();
            return;
          }
LABEL_25:
          __break(1u);
          return;
        }
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
}

void sub_1000E01D0()
{
  uint64_t v1 = type metadata accessor for FaceToFaceHalfView();
  double v2 = (int *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100007620(&qword_1002F4A40) - 8;
  __chkstk_darwin(v120);
  double v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100007620(&qword_1002F4A48) - 8;
  __chkstk_darwin(v122);
  uint64_t v116 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100007620(&qword_1002F4A50) - 8;
  __chkstk_darwin(v121);
  uint64_t v117 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100007620(&qword_1002F4A58) - 8;
  __chkstk_darwin(v124);
  uint64_t v118 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100007620(&qword_1002F4A60) - 8;
  __chkstk_darwin(v123);
  uint64_t v119 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v0;
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_viewModel);
  uint64_t v111 = (char *)OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_deviceHelper;
  uint64_t v110 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session;
  id v12 = v11;
  uint64_t v108 = v11;
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding);
  *(void *)&v4[v2[10]] = swift_getKeyPath();
  uint64_t v109 = sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = type metadata accessor for ConversationContext(0);
  uint64_t v115 = sub_1000E2E58(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  double v14 = v12;
  swift_retain();
  swift_retain();
  uint64_t v103 = EnvironmentObject.init()();
  uint64_t v102 = v15;
  uint64_t v125 = type metadata accessor for SceneContext();
  uint64_t v112 = sub_1000E2E58((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t v16 = EnvironmentObject.init()();
  uint64_t v18 = v17;
  uint64_t v126 = type metadata accessor for ConversationViewModel();
  uint64_t v96 = sub_1000E2E58(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  *(void *)id v4 = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 1) = v19;
  uint64_t v107 = type metadata accessor for DeviceHelper();
  uint64_t v106 = sub_1000E2E58(&qword_1002F4A68, (void (*)(uint64_t))type metadata accessor for DeviceHelper);
  *((void *)v4 + 2) = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 3) = v20;
  uint64_t v105 = type metadata accessor for TranslationSession_RD();
  uint64_t v104 = sub_1000E2E58(&qword_1002F4A70, (void (*)(uint64_t))type metadata accessor for TranslationSession_RD);
  *((void *)v4 + 4) = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 5) = v21;
  v4[48] = 0;
  double v22 = (uint64_t *)&v4[v2[11]];
  uint64_t v23 = v102;
  uint64_t *v22 = v103;
  v22[1] = v23;
  id v24 = (uint64_t *)&v4[v2[12]];
  *id v24 = v16;
  v24[1] = v18;
  *(void *)&v4[v2[13]] = v13;
  uint64_t v25 = v2[14];
  double v95 = v2;
  double v26 = &v4[v25];
  uint64_t v127 = 0x4044000000000000;
  State.init(wrappedValue:)();
  uint64_t v27 = v129;
  *(void *)double v26 = v128;
  *((void *)v26 + 1) = v27;
  *(void *)&v4[v2[15]] = 0x4034000000000000;
  uint64_t v28 = static Color.translateAccentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000DCFB8((uint64_t)v4, (uint64_t)v6);
  double v30 = (uint64_t *)&v6[*(int *)(v120 + 44)];
  *double v30 = KeyPath;
  v30[1] = v28;
  sub_1000E2EA8((uint64_t)v4);
  uint64_t v103 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions;
  id v31 = *(void **)&v14[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions];
  uint64_t v32 = type metadata accessor for SharedTranslationOptions();
  uint64_t v102 = sub_1000E2E58(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  id v33 = v31;
  uint64_t v101 = v32;
  uint64_t v34 = static ObservableObject.environmentStore.getter();
  uint64_t v97 = v6;
  uint64_t v35 = v116;
  sub_10000C3A4((uint64_t)v6, v116, &qword_1002F4A40);
  uint64_t v36 = (uint64_t *)(v35 + *(int *)(v122 + 44));
  *uint64_t v36 = v34;
  v36[1] = (uint64_t)v33;
  sub_10000B070((uint64_t)v6, &qword_1002F4A40);
  uint64_t v37 = v113;
  uint64_t v38 = *(void *)(v113 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sceneContext);
  uint64_t v39 = static ObservableObject.environmentStore.getter();
  uint64_t v40 = v117;
  sub_10000C3A4(v35, v117, &qword_1002F4A48);
  double v41 = (uint64_t *)(v40 + *(int *)(v121 + 44));
  *double v41 = v39;
  v41[1] = v38;
  uint64_t v100 = v38;
  swift_retain();
  sub_10000B070(v35, &qword_1002F4A48);
  uint64_t v42 = static ObservableObject.environmentStore.getter();
  uint64_t v43 = v118;
  sub_10000C3A4(v40, v118, &qword_1002F4A50);
  objc_super v44 = (uint64_t *)(v43 + *(int *)(v124 + 44));
  uint64_t *v44 = v42;
  v44[1] = (uint64_t)v14;
  long long v94 = v14;
  uint64_t v93 = v14;
  sub_10000B070(v40, &qword_1002F4A50);
  uint64_t v45 = *(void *)(v37 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_conversationContext);
  uint64_t v46 = static ObservableObject.environmentStore.getter();
  uint64_t v47 = v43;
  uint64_t v48 = v43;
  uint64_t v49 = v119;
  sub_10000C3A4(v47, v119, &qword_1002F4A58);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(v123 + 44));
  *uint64_t v50 = v46;
  v50[1] = v45;
  uint64_t v99 = v45;
  swift_retain();
  sub_10000B070(v48, &qword_1002F4A58);
  Class v98 = (Class)sub_100007620(&qword_1002F4A78);
  id v51 = objc_allocWithZone(v98);
  uint64_t v52 = UIHostingController.init(rootView:)();
  id v53 = *(void **)(v37 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController);
  *(void *)(v37 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController) = v52;

  uint64_t v54 = swift_getKeyPath();
  uint64_t v55 = v95;
  *(void *)&v4[v95[10]] = v54;
  swift_storeEnumTagMultiPayload();
  uint64_t v111 = v93;
  swift_retain();
  swift_retain();
  uint64_t v56 = EnvironmentObject.init()();
  uint64_t v58 = v57;
  uint64_t v59 = EnvironmentObject.init()();
  uint64_t v61 = v60;
  *(void *)id v4 = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 1) = v62;
  *((void *)v4 + 2) = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 3) = v63;
  *((void *)v4 + 4) = ObservedObject.init(wrappedValue:)();
  *((void *)v4 + 5) = v64;
  v4[48] = 1;
  uint64_t v65 = (uint64_t *)&v4[v55[11]];
  *uint64_t v65 = v56;
  v65[1] = v58;
  uint64_t v66 = (uint64_t *)&v4[v55[12]];
  *uint64_t v66 = v59;
  v66[1] = v61;
  *(void *)&v4[v55[13]] = v13;
  uint64_t v67 = &v4[v55[14]];
  uint64_t v127 = 0x4044000000000000;
  State.init(wrappedValue:)();
  uint64_t v68 = v129;
  *(void *)uint64_t v67 = v128;
  *((void *)v67 + 1) = v68;
  *(void *)&v4[v55[15]] = 0x4034000000000000;
  uint64_t v69 = static Color.translateAccentColor.getter();
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = (uint64_t)v97;
  sub_1000DCFB8((uint64_t)v4, (uint64_t)v97);
  uint64_t v72 = (uint64_t *)(v71 + *(int *)(v120 + 44));
  *uint64_t v72 = v70;
  v72[1] = v69;
  sub_1000E2EA8((uint64_t)v4);
  uint64_t v73 = v94;
  id v74 = *(id *)&v94[v103];
  uint64_t v75 = static ObservableObject.environmentStore.getter();
  uint64_t v76 = v116;
  sub_10000C3A4(v71, v116, &qword_1002F4A40);
  uint64_t v77 = (uint64_t *)(v76 + *(int *)(v122 + 44));
  *uint64_t v77 = v75;
  v77[1] = (uint64_t)v74;
  sub_10000B070(v71, &qword_1002F4A40);
  uint64_t v78 = static ObservableObject.environmentStore.getter();
  uint64_t v79 = v117;
  sub_10000C3A4(v76, v117, &qword_1002F4A48);
  uint64_t v80 = (uint64_t *)(v79 + *(int *)(v121 + 44));
  uint64_t v81 = v100;
  uint64_t *v80 = v78;
  v80[1] = v81;
  swift_retain();
  sub_10000B070(v76, &qword_1002F4A48);
  uint64_t v82 = static ObservableObject.environmentStore.getter();
  uint64_t v83 = v118;
  sub_10000C3A4(v79, v118, &qword_1002F4A50);
  uint64_t v84 = (uint64_t *)(v83 + *(int *)(v124 + 44));
  *uint64_t v84 = v82;
  v84[1] = (uint64_t)v73;
  uint64_t v85 = v111;
  sub_10000B070(v79, &qword_1002F4A50);
  uint64_t v86 = static ObservableObject.environmentStore.getter();
  uint64_t v87 = v119;
  sub_10000C3A4(v83, v119, &qword_1002F4A58);
  uint64_t v88 = (uint64_t *)(v87 + *(int *)(v123 + 44));
  *uint64_t v88 = v86;
  uint64_t v89 = v113;
  v88[1] = v99;
  swift_retain();
  sub_10000B070(v83, &qword_1002F4A58);
  id v90 = objc_allocWithZone(v98);
  uint64_t v91 = UIHostingController.init(rootView:)();
  uint64_t v92 = *(void **)(v89 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController);
  *(void *)(v89 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController) = v91;

  if (sub_1000DF4E4()) {
    sub_1000E0E38();
  }
  else {
    sub_1000E197C();
  }
}

void sub_1000E0CE0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow);
  if (v2) {
    [v2 setHidden:1];
  }
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow);
  if (v4) {
    [v4 setHidden:1];
  }
  uint64_t v5 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  double v6 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;

  id v7 = sub_1000DF408();
  [v7 removeFromSuperview];

  uint64_t v8 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController;
  [*(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController) removeFromParentViewController];
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController;
  [*(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController) removeFromParentViewController];
  uint64_t v10 = *(void **)(v0 + v8);
  if (v10)
  {
    id v11 = [v10 view];
    if (!v11)
    {
      __break(1u);
      goto LABEL_15;
    }
    id v12 = v11;
    [v11 removeFromSuperview];
  }
  uint64_t v13 = *(void **)(v0 + v9);
  if (!v13) {
    return;
  }
  id v14 = [v13 view];
  if (!v14)
  {
LABEL_15:
    __break(1u);
    return;
  }
  id v15 = v14;
  [v14 removeFromSuperview];
}

void sub_1000E0E38()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController];
  if (v1)
  {
    double v2 = v0;
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController];
    if (v3)
    {
      id v4 = v1;
      id v5 = v3;
      id v6 = [v2 view];
      if (v6)
      {
        id v7 = v6;
        sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
        uint64_t v8 = (void *)static UIColor.appBackgroundColor.getter();
        [v7 setBackgroundColor:v8];

        id v9 = [v4 view];
        if (v9)
        {
          uint64_t v10 = v9;
          id v11 = self;
          id v12 = [v11 clearColor];
          [v10 setBackgroundColor:v12];

          id v13 = [v5 view];
          if (v13)
          {
            id v14 = v13;
            id v15 = [v11 clearColor];
            [v14 setBackgroundColor:v15];

            [v2 addChildViewController:v4];
            id v16 = [v2 view];
            if (v16)
            {
              uint64_t v17 = v16;
              id v18 = [v4 view];
              if (v18)
              {
                uint64_t v19 = v18;
                [v17 addSubview:v18];

                [v4 didMoveToParentViewController:v2];
                [v2 addChildViewController:v5];
                id v20 = [v2 view];
                if (v20)
                {
                  uint64_t v21 = v20;
                  id v22 = [v5 view];
                  if (v22)
                  {
                    uint64_t v23 = v22;
                    [v21 addSubview:v22];

                    [v5 didMoveToParentViewController:v2];
                    id v24 = [v2 view];
                    if (v24)
                    {
                      uint64_t v25 = v24;
                      id v26 = sub_1000DF408();
                      [v25 addSubview:v26];

                      id v27 = [v4 view];
                      if (v27)
                      {
                        uint64_t v28 = v27;
                        [v27 setTranslatesAutoresizingMaskIntoConstraints:0];

                        id v29 = [v5 view];
                        if (v29)
                        {
                          double v30 = v29;
                          [v29 setTranslatesAutoresizingMaskIntoConstraints:0];

                          id v31 = sub_1000DF408();
                          [v31 setTranslatesAutoresizingMaskIntoConstraints:0];

                          double v32 = *(double *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding];
                          swift_getKeyPath();
                          swift_getKeyPath();
                          static Published.subscript.getter();
                          swift_release();
                          swift_release();
                          swift_getKeyPath();
                          swift_getKeyPath();
                          static Published.subscript.getter();
                          swift_release();
                          swift_release();
                          id v33 = sub_1000DF408();
                          id v34 = [v33 topAnchor];

                          id v35 = [v2 view];
                          if (v35)
                          {
                            uint64_t v36 = v35;
                            if (v32 > v114) {
                              double v37 = v32;
                            }
                            else {
                              double v37 = v114;
                            }
                            if (v37 > v115) {
                              double v38 = v37;
                            }
                            else {
                              double v38 = v115;
                            }
                            id v39 = [v35 topAnchor];

                            id v40 = [v34 constraintEqualToAnchor:v39 constant:v38];
                            uint64_t v41 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint;
                            uint64_t v42 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint];
                            *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint] = v40;

                            sub_100007620((uint64_t *)&unk_1002F0270);
                            uint64_t v43 = swift_allocObject();
                            *(_OWORD *)(v43 + 16) = xmmword_10024F920;
                            id v44 = [v4 view];
                            if (v44)
                            {
                              uint64_t v45 = v44;
                              id v46 = [v44 heightAnchor];

                              id v47 = [v2 view];
                              if (v47)
                              {
                                uint64_t v48 = v47;
                                id v49 = [v47 heightAnchor];

                                id v50 = [v46 constraintEqualToAnchor:v49 multiplier:0.5];
                                *(void *)(v43 + 32) = v50;
                                id v51 = [v4 view];
                                if (v51)
                                {
                                  uint64_t v52 = v51;
                                  id v53 = [v51 bottomAnchor];

                                  id v54 = [v2 view];
                                  if (v54)
                                  {
                                    uint64_t v55 = v54;
                                    id v56 = [v54 bottomAnchor];

                                    id v57 = [v53 constraintEqualToAnchor:v56];
                                    *(void *)(v43 + 40) = v57;
                                    id v58 = [v4 view];
                                    if (v58)
                                    {
                                      uint64_t v59 = v58;
                                      id v60 = [v58 leadingAnchor];

                                      id v61 = [v2 view];
                                      if (v61)
                                      {
                                        uint64_t v62 = v61;
                                        id v63 = [v61 leadingAnchor];

                                        id v64 = [v60 constraintEqualToAnchor:v63];
                                        *(void *)(v43 + 48) = v64;
                                        id v65 = [v4 view];
                                        if (v65)
                                        {
                                          uint64_t v66 = v65;
                                          id v67 = [v65 trailingAnchor];

                                          id v68 = [v2 view];
                                          if (v68)
                                          {
                                            uint64_t v69 = v68;
                                            id v70 = [v68 trailingAnchor];

                                            id v71 = [v67 constraintEqualToAnchor:v70];
                                            *(void *)(v43 + 56) = v71;
                                            id v72 = [v5 view];
                                            if (v72)
                                            {
                                              uint64_t v73 = v72;
                                              id v74 = [v72 heightAnchor];

                                              id v75 = [v2 view];
                                              if (v75)
                                              {
                                                uint64_t v76 = v75;
                                                id v77 = [v75 heightAnchor];

                                                id v78 = [v74 constraintEqualToAnchor:v77 multiplier:0.5];
                                                *(void *)(v43 + 64) = v78;
                                                id v79 = [v5 view];
                                                if (v79)
                                                {
                                                  uint64_t v80 = v79;
                                                  id v81 = [v79 topAnchor];

                                                  id v82 = [v2 view];
                                                  if (v82)
                                                  {
                                                    uint64_t v83 = v82;
                                                    id v84 = [v82 topAnchor];

                                                    id v85 = [v81 constraintEqualToAnchor:v84];
                                                    *(void *)(v43 + 72) = v85;
                                                    id v86 = [v5 view];
                                                    if (v86)
                                                    {
                                                      uint64_t v87 = v86;
                                                      id v88 = [v86 leadingAnchor];

                                                      id v89 = [v2 view];
                                                      if (v89)
                                                      {
                                                        id v90 = v89;
                                                        id v91 = [v89 leadingAnchor];

                                                        id v92 = [v88 constraintEqualToAnchor:v91];
                                                        *(void *)(v43 + 80) = v92;
                                                        id v93 = [v5 view];
                                                        if (v93)
                                                        {
                                                          long long v94 = v93;
                                                          id v95 = [v93 trailingAnchor];

                                                          id v96 = [v2 view];
                                                          if (v96)
                                                          {
                                                            uint64_t v97 = v96;
                                                            id v98 = [v96 trailingAnchor];

                                                            id v99 = [v95 constraintEqualToAnchor:v98];
                                                            *(void *)(v43 + 88) = v99;
                                                            uint64_t v100 = *(void **)&v2[v41];
                                                            if (v100)
                                                            {
                                                              *(void *)(v43 + 96) = v100;
                                                              id v101 = v100;
                                                              id v102 = [v2 view];
                                                              if (v102)
                                                              {
                                                                uint64_t v103 = v102;
                                                                uint64_t v104 = self;
                                                                id v105 = [v103 trailingAnchor];

                                                                id v106 = sub_1000DF408();
                                                                id v107 = [v106 trailingAnchor];

                                                                id v108 = [v105 constraintEqualToAnchor:v107 constant:32.0];
                                                                *(void *)(v43 + 104) = v108;
                                                                specialized Array._endMutation()();
                                                                sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
                                                                Class isa = Array._bridgeToObjectiveC()().super.isa;
                                                                swift_bridgeObjectRelease();
                                                                [v104 activateConstraints:isa];

                                                                id v110 = [v4 view];
                                                                if (v110)
                                                                {
                                                                  uint64_t v111 = v110;
                                                                  id v112 = [v5 view];
                                                                  if (v112)
                                                                  {
                                                                    uint64_t v113 = v112;
                                                                    sub_1000E2838(v111, v112);

                                                                    return;
                                                                  }
LABEL_72:
                                                                  __break(1u);
                                                                  return;
                                                                }
LABEL_71:
                                                                __break(1u);
                                                                goto LABEL_72;
                                                              }
LABEL_70:
                                                              __break(1u);
                                                              goto LABEL_71;
                                                            }
LABEL_69:
                                                            __break(1u);
                                                            goto LABEL_70;
                                                          }
LABEL_68:
                                                          __break(1u);
                                                          goto LABEL_69;
                                                        }
LABEL_67:
                                                        __break(1u);
                                                        goto LABEL_68;
                                                      }
LABEL_66:
                                                      __break(1u);
                                                      goto LABEL_67;
                                                    }
LABEL_65:
                                                    __break(1u);
                                                    goto LABEL_66;
                                                  }
LABEL_64:
                                                  __break(1u);
                                                  goto LABEL_65;
                                                }
LABEL_63:
                                                __break(1u);
                                                goto LABEL_64;
                                              }
LABEL_62:
                                              __break(1u);
                                              goto LABEL_63;
                                            }
LABEL_61:
                                            __break(1u);
                                            goto LABEL_62;
                                          }
LABEL_60:
                                          __break(1u);
                                          goto LABEL_61;
                                        }
LABEL_59:
                                        __break(1u);
                                        goto LABEL_60;
                                      }
LABEL_58:
                                      __break(1u);
                                      goto LABEL_59;
                                    }
LABEL_57:
                                    __break(1u);
                                    goto LABEL_58;
                                  }
LABEL_56:
                                  __break(1u);
                                  goto LABEL_57;
                                }
LABEL_55:
                                __break(1u);
                                goto LABEL_56;
                              }
LABEL_54:
                              __break(1u);
                              goto LABEL_55;
                            }
LABEL_53:
                            __break(1u);
                            goto LABEL_54;
                          }
LABEL_52:
                          __break(1u);
                          goto LABEL_53;
                        }
LABEL_51:
                        __break(1u);
                        goto LABEL_52;
                      }
LABEL_50:
                      __break(1u);
                      goto LABEL_51;
                    }
LABEL_49:
                    __break(1u);
                    goto LABEL_50;
                  }
LABEL_48:
                  __break(1u);
                  goto LABEL_49;
                }
LABEL_47:
                __break(1u);
                goto LABEL_48;
              }
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
LABEL_45:
            __break(1u);
            goto LABEL_46;
          }
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_44;
    }
  }
}

void sub_1000E197C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController];
  if (v1)
  {
    double v2 = v0;
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController];
    if (v3)
    {
      id v4 = self;
      id v5 = v1;
      id v99 = v3;
      id v6 = [v4 sharedApplication];
      id v7 = sub_1002389D4();

      if (v7 && (id v98 = [v7 windowScene], v7, v98))
      {
        id v8 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v98];
        uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow;
        uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow];
        *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow] = v8;

        id v11 = [objc_allocWithZone((Class)type metadata accessor for HitPassthroughWindow()) initWithWindowScene:v98];
        uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow;
        id v13 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow];
        *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow] = v11;

        id v14 = *(void **)&v2[v9];
        if (v14)
        {
          id v15 = *(void **)&v2[v12];
          if (v15)
          {
            id v16 = v14;
            id v17 = v15;
            id v18 = [v2 view];
            if (v18)
            {
              uint64_t v19 = v18;
              NSString v20 = String._bridgeToObjectiveC()();
              uint64_t v21 = self;
              id v22 = [v21 colorNamed:v20];

              [v19 setBackgroundColor:v22];
              id v23 = v16;
              id v24 = [v21 clearColor];
              [v23 setBackgroundColor:v24];

              id v25 = v17;
              id v26 = [v21 clearColor];
              [v25 setBackgroundColor:v26];

              id v27 = [v5 view];
              if (v27)
              {
                uint64_t v28 = v27;
                id v29 = [v21 clearColor];
                [v28 setBackgroundColor:v29];

                id v30 = [v99 view];
                if (v30)
                {
                  id v31 = v30;
                  id v32 = [v21 clearColor];
                  [v31 setBackgroundColor:v32];

                  [v23 makeKeyAndVisible];
                  [v25 makeKeyAndVisible];
                  [v23 setRootViewController:v5];
                  [v25 setRootViewController:v99];
                  id v33 = sub_1000DF408();
                  [v25 addSubview:v33];

                  id v34 = [v5 view];
                  if (v34)
                  {
                    id v35 = v34;
                    [v34 setTranslatesAutoresizingMaskIntoConstraints:0];

                    id v36 = [v99 view];
                    if (v36)
                    {
                      double v37 = v36;
                      [v36 setTranslatesAutoresizingMaskIntoConstraints:0];

                      id v38 = sub_1000DF408();
                      [v38 setTranslatesAutoresizingMaskIntoConstraints:0];

                      double v39 = *(double *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding];
                      swift_getKeyPath();
                      swift_getKeyPath();
                      static Published.subscript.getter();
                      swift_release();
                      swift_release();
                      swift_getKeyPath();
                      swift_getKeyPath();
                      static Published.subscript.getter();
                      swift_release();
                      swift_release();
                      if (v39 > v100) {
                        double v40 = v39;
                      }
                      else {
                        double v40 = v100;
                      }
                      if (v40 > v101) {
                        double v41 = v40;
                      }
                      else {
                        double v41 = v101;
                      }
                      id v42 = [v25 bottomAnchor];
                      id v43 = sub_1000DF408();
                      id v44 = [v43 bottomAnchor];

                      id v45 = [v42 constraintEqualToAnchor:v44 constant:v41];
                      id v46 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint];
                      uint64_t v97 = OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint;
                      *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint] = v45;

                      sub_100007620((uint64_t *)&unk_1002F0270);
                      uint64_t v47 = swift_allocObject();
                      *(_OWORD *)(v47 + 16) = xmmword_10024F920;
                      id v48 = [v5 view];
                      if (v48)
                      {
                        id v49 = v48;
                        id v50 = [v48 topAnchor];

                        id v51 = [v23 topAnchor];
                        id v52 = [v50 constraintEqualToAnchor:v51];

                        *(void *)(v47 + 32) = v52;
                        id v53 = [v5 view];
                        if (v53)
                        {
                          id v54 = v53;
                          id v55 = [v53 bottomAnchor];

                          id v56 = [v23 bottomAnchor];
                          id v57 = [v55 constraintEqualToAnchor:v56];

                          *(void *)(v47 + 40) = v57;
                          id v58 = [v5 view];
                          if (v58)
                          {
                            uint64_t v59 = v58;
                            id v60 = [v58 leadingAnchor];

                            id v61 = [v23 leadingAnchor];
                            id v62 = [v60 constraintEqualToAnchor:v61];

                            *(void *)(v47 + 48) = v62;
                            id v63 = [v5 view];
                            if (v63)
                            {
                              id v64 = v63;
                              id v65 = [v63 trailingAnchor];

                              id v66 = [v23 trailingAnchor];
                              id v67 = [v65 constraintEqualToAnchor:v66];

                              *(void *)(v47 + 56) = v67;
                              id v68 = [v99 view];
                              if (v68)
                              {
                                uint64_t v69 = v68;
                                id v70 = [v68 topAnchor];

                                id v71 = [v25 topAnchor];
                                id v72 = [v70 constraintEqualToAnchor:v71];

                                *(void *)(v47 + 64) = v72;
                                id v73 = [v99 view];
                                if (v73)
                                {
                                  id v74 = v73;
                                  id v75 = [v73 bottomAnchor];

                                  id v76 = [v25 bottomAnchor];
                                  id v77 = [v75 constraintEqualToAnchor:v76];

                                  *(void *)(v47 + 72) = v77;
                                  id v78 = [v99 view];
                                  if (v78)
                                  {
                                    id v79 = v78;
                                    id v80 = [v78 leadingAnchor];

                                    id v81 = [v25 leadingAnchor];
                                    id v82 = [v80 constraintEqualToAnchor:v81];

                                    *(void *)(v47 + 80) = v82;
                                    id v83 = [v99 view];
                                    if (v83)
                                    {
                                      id v84 = v83;
                                      id v85 = [v83 trailingAnchor];

                                      id v86 = [v25 trailingAnchor];
                                      id v87 = [v85 constraintEqualToAnchor:v86];

                                      *(void *)(v47 + 88) = v87;
                                      id v88 = *(void **)&v2[v97];
                                      if (v88)
                                      {
                                        id v89 = self;
                                        *(void *)(v47 + 96) = v88;
                                        id v90 = v88;
                                        id v91 = [v25 leadingAnchor];
                                        id v92 = sub_1000DF408();
                                        id v93 = [v92 leadingAnchor];

                                        id v94 = [v91 constraintEqualToAnchor:v93 constant:-32.0];
                                        *(void *)(v47 + 104) = v94;
                                        specialized Array._endMutation()();
                                        sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
                                        Class isa = Array._bridgeToObjectiveC()().super.isa;
                                        swift_bridgeObjectRelease();
                                        [v89 activateConstraints:isa];

                                        sub_1000E2424();
                                        sub_1000E2838(v23, v25);

                                        return;
                                      }
LABEL_47:
                                      __break(1u);
                                      return;
                                    }
LABEL_46:
                                    __break(1u);
                                    goto LABEL_47;
                                  }
LABEL_45:
                                  __break(1u);
                                  goto LABEL_46;
                                }
LABEL_44:
                                __break(1u);
                                goto LABEL_45;
                              }
LABEL_43:
                              __break(1u);
                              goto LABEL_44;
                            }
LABEL_42:
                            __break(1u);
                            goto LABEL_43;
                          }
LABEL_41:
                          __break(1u);
                          goto LABEL_42;
                        }
LABEL_40:
                        __break(1u);
                        goto LABEL_41;
                      }
LABEL_39:
                      __break(1u);
                      goto LABEL_40;
                    }
LABEL_38:
                    __break(1u);
                    goto LABEL_39;
                  }
LABEL_37:
                  __break(1u);
                  goto LABEL_38;
                }
LABEL_36:
                __break(1u);
                goto LABEL_37;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_36;
          }
        }

        id v96 = v98;
      }
      else
      {

        id v96 = v99;
      }
    }
  }
}

void sub_1000E2424()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow);
  if (v1)
  {
    double v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow);
    if (v2)
    {
      uint64_t v3 = self;
      id v4 = v1;
      id v5 = v2;
      id v6 = [v3 sharedApplication];
      id v7 = sub_1002389D4();

      if (v7
        && (id v8 = [v7 windowScene], v7, v8)
        && (id v9 = [v8 interfaceOrientation], v8, !sub_1000E2E38((uint64_t)v9)))
      {
        uint64_t v10 = self;
        id v22 = [v10 mainScreen];
        [v22 bounds];
        double v13 = v23;

        id v24 = [v10 mainScreen];
        [v24 bounds];
        double v26 = v25;

        double v20 = 0.5;
        double v18 = v26 * 0.5;
        [v4 setFrame:0.0, 0.0, v13, v18];
        double v21 = 0.25;
        double v17 = 0.75;
        double v19 = 0.5;
      }
      else
      {
        uint64_t v10 = self;
        id v11 = [v10 mainScreen];
        [v11 bounds];
        double v13 = v12;

        id v14 = [v10 mainScreen];
        [v14 bounds];
        double v16 = v15;

        double v17 = 0.5;
        double v18 = v16 * 0.5;
        [v4 setFrame:0.0, 0.0, v13, v18];
        double v19 = 0.25;
        double v20 = 0.75;
        double v21 = 0.5;
      }
      [v5 setFrame:0.0, 0.0, v13, v18];
      id v66 = v4;
      id v27 = [v10 mainScreen];
      [v27 bounds];
      CGFloat v29 = v28;
      CGFloat v31 = v30;
      CGFloat v33 = v32;
      CGFloat v35 = v34;

      v68.origin.x = v29;
      v68.origin.y = v31;
      v68.size.width = v33;
      v68.size.height = v35;
      CGFloat v36 = CGRectGetWidth(v68) * v20;
      id v37 = [v10 mainScreen];
      [v37 bounds];
      CGFloat v39 = v38;
      CGFloat v41 = v40;
      CGFloat v43 = v42;
      CGFloat v45 = v44;

      v69.origin.x = v39;
      v69.origin.y = v41;
      v69.size.width = v43;
      v69.size.height = v45;
      [v66 setCenter:v36, CGRectGetHeight(v69) * v17];

      id v46 = v5;
      id v47 = [v10 mainScreen];
      [v47 bounds];
      CGFloat v49 = v48;
      CGFloat v51 = v50;
      CGFloat v53 = v52;
      CGFloat v55 = v54;

      v70.origin.x = v49;
      v70.origin.y = v51;
      v70.size.width = v53;
      v70.size.height = v55;
      CGFloat v56 = CGRectGetWidth(v70) * v19;
      id v57 = [v10 mainScreen];
      [v57 bounds];
      CGFloat v59 = v58;
      CGFloat v61 = v60;
      CGFloat v63 = v62;
      CGFloat v65 = v64;

      v71.origin.x = v59;
      v71.origin.y = v61;
      v71.size.width = v63;
      v71.size.height = v65;
      [v46 setCenter:v56, CGRectGetHeight(v71) * v21];
    }
  }
}

id sub_1000E2838(void *a1, void *a2)
{
  *(_OWORD *)&v10.a = 0x3FF0000000000000uLL;
  v10.c = 0.0;
  v10.d = 1.0;
  *(_OWORD *)&v10.tx = 0uLL;
  [a1 setTransform:&v10];
  *(_OWORD *)&v10.a = 0x3FF0000000000000uLL;
  v10.c = 0.0;
  v10.d = 1.0;
  *(_OWORD *)&v10.tx = 0uLL;
  [a2 setTransform:&v10];
  id v4 = [self sharedApplication];
  id v5 = sub_1002389D4();

  if (v5)
  {
    id v6 = [v5 windowScene];

    if (v6)
    {
      id v7 = [v6 interfaceOrientation];

      if (!sub_1000E2E38((uint64_t)v7)) {
        goto LABEL_5;
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v10.a))
  {
LABEL_5:
    CGAffineTransformMakeRotation(&v10, 0.0);
    [a1 setTransform:&v10];
    CGFloat v8 = 3.14159265;
  }
  else
  {
    CGAffineTransformMakeRotation(&v10, -1.57079633);
    [a1 setTransform:&v10];
    CGFloat v8 = 1.57079633;
  }
  CGAffineTransformMakeRotation(&v10, v8);
  return [a2 setTransform:&v10];
}

void sub_1000E2A24()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  void v7[4] = sub_1000E2DF8;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10008BA1C;
  v7[3] = &unk_1002CDD60;
  uint64_t v3 = _Block_copy(v7);
  id v4 = v0;
  swift_release();
  [v1 animateWithDuration:v3 animations:0.25];
  _Block_release(v3);
  id v5 = *(void (**)(uint64_t))&v4[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_onCloseTap];
  if (v5)
  {
    uint64_t v6 = swift_retain();
    v5(v6);
    sub_1000324E4((uint64_t)v5);
  }
}

uint64_t sub_1000E2B44(uint64_t a1, double a2)
{
  uint64_t result = sub_1000DF4E4();
  if ((result & 1) == 0)
  {
    id v5 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow);
    if (v5) {
      [v5 setAlpha:a2];
    }
    uint64_t result = *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow);
    if (result)
    {
      return (uint64_t)[(id)result setAlpha:a2];
    }
  }
  return result;
}

id sub_1000E2C4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FaceToFaceViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FaceToFaceViewController()
{
  return self;
}

uint64_t sub_1000E2D84@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FaceToFaceViewController();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000E2DC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E2DF8()
{
  return sub_1000E2B44(*(void *)(v0 + 16), 0.0);
}

uint64_t sub_1000E2E18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E2E28()
{
  return swift_release();
}

BOOL sub_1000E2E38(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_1000E2E58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E2EA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FaceToFaceHalfView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000E2F04()
{
}

uint64_t sub_1000E2F28()
{
  return sub_1000E2B44(*(void *)(v0 + 16), 1.0);
}

void sub_1000E2F48()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceWindow] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetWindow] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_sourceViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_targetViewController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController____lazy_storage___closeButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_closeBottomConstraint] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v1 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v1 = &_swiftEmptySetSingleton;
  }
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_subscriptions] = v1;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_transitionAnimationDuration] = 0x3FD0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_speakButtonMinimumBottomPadding] = 0x4040000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator24FaceToFaceViewController_onCloseTap];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000E3064()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000E309C(double *a1)
{
}

void sub_1000E3280()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  [v1 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v26[4] = sub_1000E7120;
  v26[5] = v11;
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 1107296256;
  v26[2] = sub_100218A94;
  v26[3] = &unk_1002CDFD0;
  double v13 = _Block_copy(v26);
  id v14 = [v12 initWithSectionProvider:v13];
  _Block_release(v13);
  swift_release();
  id v15 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v14 collectionViewLayout:v4];

  uint64_t v16 = OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView;
  double v17 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView];
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView] = v15;

  double v18 = *(void **)&v0[v16];
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  double v19 = self;
  id v20 = v18;
  id v21 = [v19 systemGroupedBackgroundColor];
  [v20 setBackgroundColor:v21];

  id v22 = *(void **)&v0[v16];
  if (!v22)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  [v22 setAutoresizingMask:18];
  double v23 = *(void **)&v0[v16];
  if (!v23)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  [v23 setAllowsSelection:0];
  id v24 = [v0 view];
  if (!v24)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(void *)&v0[v16])
  {
    double v25 = v24;
    [v24 addSubview:];

    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1000E34E0(unint64_t a1)
{
  uint64_t v3 = sub_100007620(&qword_1002F4BA8);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F4B98);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_7;
  }
  id v11 = v10;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_7:
    sub_10000B070((uint64_t)v5, &qword_1002F4BA8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  uint64_t result = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(result + 16) > a1)
  {
    uint64_t v13 = result + 24 * a1;
    uint64_t v14 = *(void *)(v13 + 32);
    unint64_t v15 = *(void *)(v13 + 40);
    sub_1000E70D8(v14, v15);
    swift_bridgeObjectRelease();
    BOOL v16 = v15 != 0;
    sub_1000E6FE8(v14, v15);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E372C(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v27 = a2;
  uint64_t v5 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v13 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  unint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v9);
  UICollectionLayoutListConfiguration.init(appearance:)();
  UICollectionLayoutListConfiguration.showsSeparators.setter();
  char v16 = sub_1000E34E0(a1);
  uint64_t v17 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  if ((v16 & 1) == 0) {
    uint64_t v17 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v17, v5);
  UICollectionLayoutListConfiguration.headerMode.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  sub_10000B0CC(0, &qword_1002F4BA0);
  uint64_t result = static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  double v19 = *(void **)(v3 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView);
  if (v19)
  {
    id v20 = (void *)result;
    id v21 = v19;
    id v22 = [v21 traitCollection];
    [v22 displayScale];
    double v24 = v23;

    double v25 = 16.0;
    if (v24 != 0.0) {
      double v25 = sub_1000E70D0(v24 * 16.0) / v24;
    }
    [v20 setInterGroupSpacing:v25, v26, v27];
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v26);
    return (uint64_t)v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1000E3A74(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void **)(Strong + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
    if (v4)
    {
      id v5 = v4;
      dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

      if ((~v12 & 0xF000000000000007) != 0)
      {
        if (!(v12 >> 62))
        {
          id v11 = (id)(v12 & 0x3FFFFFFFFFFFFFFFLL);
          id v6 = (id)v12;
          uint64_t v7 = a1;
          char v8 = 1;
          goto LABEL_11;
        }
        if (v12 >> 62 == 1)
        {
          id v6 = (id)(v12 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v7 = a1;
          char v8 = 0;
LABEL_11:
          id v9 = sub_1000E4584(v6, v7, v8);
          sub_1000E6FC0(v12);
          sub_1000E6FC0(v12);

          return v9;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1000E3B6C(uint64_t a1, uint64_t a2)
{
  uint64_t countAndFlagsBits = 0;
  if (a2)
  {
    if (a2 == 1)
    {
      id v4 = [self mainBundle];
      v8._uint64_t countAndFlagsBits = 0xD000000000000015;
      v8._object = (void *)0x800000010025E460;
      v5._object = (void *)0x800000010025E440;
      v5._uint64_t countAndFlagsBits = 0xD000000000000011;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v8)._countAndFlagsBits;
    }
    else if (a2 != 2)
    {
      swift_bridgeObjectRetain();
      return a1;
    }
  }
  return countAndFlagsBits;
}

uint64_t sub_1000E3C60(unint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  Swift::String v5 = (void *)Strong;
  uint64_t v6 = sub_1000E372C(a1, a2);

  return v6;
}

uint64_t sub_1000E3CE0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_100007620(&qword_1002F4B98);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
  if (v10)
  {
    id v11 = v10;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    uint64_t v12 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1000E5EC4(v12, a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v13[2])
    {
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100011554(v14, (uint64_t)qword_10030E9D8);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        id v26 = v11;
        v29[0] = v18;
        *(_DWORD *)uint64_t v17 = 136446466;
        uint64_t v27 = v6;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_100202FD4(a1, a2, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v17 + 12) = 2050;
        uint64_t v19 = v13[2];
        swift_bridgeObjectRelease();
        uint64_t v28 = v19;
        uint64_t v6 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Forcing reload of item with identifier %{public}s; found in %{public}ld cells",
          (uint8_t *)v17,
          0x16u);
        swift_arrayDestroy();
        id v11 = v26;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v13);
      swift_bridgeObjectRelease();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100011554(v20, (uint64_t)qword_10030E9D8);
      swift_bridgeObjectRetain_n();
      id v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v21, v22))
      {
        id v26 = v11;
        double v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v27 = v6;
        v29[0] = v24;
        *(_DWORD *)double v23 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v28 = sub_100202FD4(a1, a2, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Received request to force reconfigure translation cell with identifier %{public}s, but it wasn't found in the data store; ignoring the request",
          v23,
          0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v5);
      }
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t sub_1000E41BC(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GenderTipManager.Registration(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (void *)((char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_store];
  uint64_t v10 = *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_ttsManager];
  swift_retain();
  swift_retain();
  swift_retain();
  id v11 = a1;
  id v12 = [v3 traitCollection];
  sub_1000D1084();
  UITraitCollection.subscript.getter();

  uint64_t v13 = v18[1];
  type metadata accessor for CommittedTranslationViewModel();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_1000E6070(v11, a2, v9, v10, 0, 3, v13, 0, (uint64_t)nullsub_1, 0, (uint64_t)nullsub_1, 0, v14);

  swift_release();
  swift_release();
  swift_release();
  id v16 = [v3 traitCollection];
  UITraitCollection.subscript.getter();

  sub_1000F5AFC(v11, 0, v8);
  sub_1000F6070(v8);
  sub_1000E718C((uint64_t)v8, type metadata accessor for GenderTipManager.Registration);
  swift_release();
  return v15;
}

uint64_t sub_1000E43D4(char a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4B80);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    uint64_t v8 = type metadata accessor for UIContentUnavailableConfiguration();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    goto LABEL_5;
  }
  sub_1000D034C();
  uint64_t v5 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F4B80);
    long long v10 = 0u;
    long long v11 = 0u;
    id v12 = 0;
    return UIViewController.contentUnavailableConfiguration.setter();
  }
  *((void *)&v11 + 1) = v5;
  id v12 = &protocol witness table for UIContentUnavailableConfiguration;
  uint64_t v7 = sub_100014830((uint64_t *)&v10);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 32))(v7, v4, v5);
  return UIViewController.contentUnavailableConfiguration.setter();
}

id sub_1000E4584(void *a1, uint64_t a2, char a3)
{
  uint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = a3 & 1;
  long long v10 = sub_1000E6CFC;
  if (!v9) {
    long long v10 = sub_1000E6E04;
  }
  uint64_t v27 = v10;
  v25[1] = sub_1000E492C(v9);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a1;
  *(unsigned char *)(v13 + 32) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v12, v8, v5);
  id v14 = a1;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = v27;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10021827C;
  void aBlock[3] = &unk_1002CDF30;
  id v16 = _Block_copy(aBlock);
  id v17 = [self contextualActionWithStyle:1 title:v15 handler:v16];

  _Block_release(v16);
  swift_release();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [self _systemImageNamed:v18];

  [v17 setImage:v19];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10024CE10;
  *(void *)(v20 + 32) = v17;
  aBlock[0] = v20;
  specialized Array._endMutation()();
  sub_10000B0CC(0, &qword_1002F4B70);
  id v21 = v17;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [self configurationWithActions:isa];

  [v23 _setSwipeActionsStyle:3];
  return v23;
}

uint64_t sub_1000E492C(char a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (a1)
  {
    unint64_t v8 = 0xD00000000000002BLL;
    unint64_t v11 = 0x800000010025B550;
    uint64_t v3 = 0x49524F5641464E55;
    unint64_t v4 = 0xEA00000000004554;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  else
  {
    unint64_t v11 = 0x800000010025E480;
    uint64_t v3 = 0x4554454C4544;
    unint64_t v4 = 0xE600000000000000;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xD000000000000013;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000E4A2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a3();
  }
  unint64_t v12 = (char *)Strong;
  if (qword_1002EE5D8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030E990);
  id v14 = a6;
  NSString v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  uint64_t v33 = a8;
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    unint64_t v34 = swift_slowAlloc();
    *(_DWORD *)id v17 = 136446210;
    id v18 = [v14 identifier];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v21 = v20;

    sub_100202FD4(v19, v21, (uint64_t *)&v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "User deleted card item %{public}s via swipe action", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100249BA0;
  *(void *)(inited + 32) = *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession];
  *(void *)(inited + 40) = *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession];
  unint64_t v34 = inited;
  specialized Array._endMutation()();
  unint64_t v24 = v34;
  id v25 = v14;
  swift_retain();
  swift_retain();
  uint64_t v26 = sub_1000F2024(v24, v25);
  swift_bridgeObjectRelease();

  uint64_t v27 = swift_allocObject();
  if (v26)
  {
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = v25;
    uint64_t v28 = (void (*)(uint64_t))sub_1000E6F98;
  }
  else
  {
    *(void *)(v27 + 16) = v12;
    *(void *)(v27 + 24) = v25;
    CGFloat v29 = v12;
    uint64_t v28 = (void (*)(uint64_t))sub_1000E6F10;
  }
  double v30 = v28;
  id v31 = v25;
  sub_1000E6404(v33, (uint64_t)v12);
  uint64_t v32 = ((uint64_t (*)(uint64_t))a3)(1);
  v30(v32);

  return swift_release();
}

void sub_1000E4D80(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    if (dispatch thunk of PersistedTranslation.isFavorite.getter())
    {
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100011554(v13, (uint64_t)qword_10030E9D8);
      id v14 = a6;
      NSString v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v34 = a8;
        id v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)id v17 = 136446210;
        buf = v17;
        id v18 = a3;
        id v19 = [v14 identifier];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v22 = v21;

        a3 = v18;
        uint64_t v23 = v20;
        a8 = v34;
        sub_100202FD4(v23, v22, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Unfavoriting translation with id %{public}s via swipe action", buf, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_1000E6404(a8, (uint64_t)v12);
      ((void (*)(uint64_t))a3)(1);
      swift_retain();
      TranslationStoreCoreData.toggleFavoriteBackground(_:)();

      swift_release();
    }
    else
    {
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100011554(v24, (uint64_t)qword_10030E9D8);
      id v25 = a6;
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v26, v27))
      {
        CGFloat v35 = a3;
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 136446210;
        id v29 = [v25 identifier];
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v32 = v31;

        sub_100202FD4(v30, v32, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        a3 = v35;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Translation %{public}s was already unfavorited, doing nothing", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      ((void (*)(void))a3)(0);
    }
  }
  else
  {
    a3();
  }
}

id sub_1000E51EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FavoritesCardListController();
  return [super dealloc];
}

uint64_t type metadata accessor for FavoritesCardListController()
{
  return self;
}

void sub_1000E52D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a3 >= 3)
  {
    Hasher._combine(_:)(1uLL);
    String.hash(into:)();
    Swift::UInt v5 = *(void *)(a4 + 16);
    Hasher._combine(_:)(v5);
    if (v5)
    {
      uint64_t v6 = (uint64_t *)(a4 + 32);
      do
      {
        uint64_t v7 = *v6++;
        id v8 = (id)(v7 & 0x3FFFFFFFFFFFFFFFLL);
        FavoritesItem.hash(into:)();

        --v5;
      }
      while (v5);
    }
  }
  else
  {
    Hasher._combine(_:)(qword_10024FBA0[a3]);
  }
}

Swift::Int sub_1000E537C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  Hasher.init(_seed:)();
  sub_1000E52D0((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_1000E53D8(uint64_t a1)
{
  sub_1000E52D0(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16));
}

Swift::Int sub_1000E53E4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  Hasher.init(_seed:)();
  sub_1000E52D0((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_1000E543C(uint64_t a1, uint64_t a2)
{
  return sub_1000E5E0C(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void **)(a2 + 16));
}

unint64_t destroy for FavoritesCardListController.FavoritesSection(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17SequoiaTranslator27FavoritesCardListControllerC16FavoritesSectionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for FavoritesCardListController.FavoritesSection(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for FavoritesCardListController.FavoritesSection(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FavoritesCardListController.FavoritesSection(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FavoritesCardListController.FavoritesSection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FavoritesCardListController.FavoritesSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

void *sub_1000E5A34(void *result, int a2)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *__n128 result = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FavoritesCardListController.FavoritesSection()
{
  return &type metadata for FavoritesCardListController.FavoritesSection;
}

unint64_t sub_1000E5A6C()
{
  unint64_t result = qword_1002F4B58;
  if (!qword_1002F4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4B58);
  }
  return result;
}

uint64_t sub_1000E5AC0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v5 = a1[4];
  id v6 = (id)(a2[4] & 0x3FFFFFFFFFFFFFFFLL);
  id v7 = (id)(v5 & 0x3FFFFFFFFFFFFFFFLL);
  LOBYTE(v5) = static FavoritesItem.== infix(_:_:)();

  if ((v5 & 1) == 0)
  {
LABEL_7:
    char v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v10 = v2 - 2;
  unint64_t v11 = a1 + 5;
  unint64_t v12 = a2 + 5;
  do
  {
    uint64_t v14 = *v11++;
    uint64_t v13 = v14;
    uint64_t v15 = *v12++;
    id v16 = (id)(v15 & 0x3FFFFFFFFFFFFFFFLL);
    id v17 = (id)(v13 & 0x3FFFFFFFFFFFFFFFLL);
    char v8 = static FavoritesItem.== infix(_:_:)();

    BOOL v19 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v19);
  return v8 & 1;
}

uint64_t sub_1000E5BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateTip(0) - 8;
  uint64_t v5 = __chkstk_darwin(v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_1000E7128(a1 + v12, (uint64_t)v10);
        sub_1000E7128(a2 + v12, (uint64_t)v7);
        char v15 = static UUID.== infix(_:_:)();
        sub_1000E718C((uint64_t)v7, type metadata accessor for TranslateTip);
        sub_1000E718C((uint64_t)v10, type metadata accessor for TranslateTip);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1000E5D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (uint64_t *)(a1 + 88);
    uint64_t v4 = (uint64_t *)(a2 + 88);
    do
    {
      uint64_t v7 = *(v3 - 1);
      uint64_t v6 = *v3;
      uint64_t v9 = *(v4 - 1);
      uint64_t v8 = *v4;
      if (*(v3 - 5) == *(v4 - 5) && *(v3 - 4) == *(v4 - 4))
      {
        if (v7 != v9 || v6 != v8) {
          return 0;
        }
      }
      else
      {
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = 0;
        if ((v11 & 1) == 0) {
          return result;
        }
        if (v7 != v9 || v6 != v8) {
          return result;
        }
      }
      v4 += 11;
      v3 += 11;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1000E5E0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, void *a6)
{
  switch(a2)
  {
    case 0:
      return !a5;
    case 1:
      return a5 == 1;
    case 2:
      return a5 == 2;
  }
  if (a5 < 3) {
    return 0;
  }
  if (a1 == a4 && a2 == a5 || (v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v9 & 1) != 0))
  {
    return sub_1000E5AC0(a3, a6);
  }
  return result;
}

void *sub_1000E5EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = *(void *)(a1 + 8 * v5 + 32);
    id v8 = (id)(v7 & 0x3FFFFFFFFFFFFFFFLL);
    if ((static FavoritesItem.== infix(_:_:)() & 1) != 0 || (char v9 = (void *)FavoritesItem.translation.getter()) == 0)
    {
LABEL_3:

      goto LABEL_4;
    }
    uint64_t v10 = v9;
    id v11 = [v9 identifier];

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    if (v12 == a2 && v14 == a3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        goto LABEL_3;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_10020244C(0, v6[2] + 1, 1, v6);
    }
    unint64_t v18 = v6[2];
    unint64_t v17 = v6[3];
    if (v18 >= v17 >> 1) {
      uint64_t v6 = sub_10020244C((void *)(v17 > 1), v18 + 1, 1, v6);
    }
    v6[2] = v18 + 1;
    v6[v18 + 4] = v7;
LABEL_4:
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1000E6070(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  v29[3] = type metadata accessor for TranslationStoreCoreData();
  v29[4] = &protocol witness table for TranslationStoreCoreData;
  v29[0] = a3;
  *(void *)(a13 + 16) = 0;
  *(void *)(a13 + 136) = 0;
  *(_WORD *)(a13 + 144) = 0;
  *(_OWORD *)(a13 + 80) = 0u;
  *(_OWORD *)(a13 + 96) = 0u;
  *(_OWORD *)(a13 + 112) = 0u;
  *(unsigned char *)(a13 + 128) = 0;
  *(unsigned char *)(a13 + 146) = 4;
  *(void *)(a13 + 160) = 0;
  *(void *)(a13 + 168) = 0;
  *(void *)(a13 + 152) = 0;
  *(_DWORD *)(a13 + 175) = 0;
  *(void *)(a13 + 184) = 0;
  *(void *)(a13 + 192) = 0;
  *(unsigned char *)(a13 + 200) = 1;
  *(void *)(a13 + 208) = 0;
  *(void *)(a13 + 216) = 0;
  *(unsigned char *)(a13 + 224) = 1;
  *(_WORD *)(a13 + 225) = 1;
  *(unsigned char *)(a13 + 227) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      uint64_t v26 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      uint64_t v26 = &_swiftEmptySetSingleton;
    }
    *(void *)(a13 + 232) = v26;
    if (_CocoaArrayWrapper.endIndex.getter()) {
      uint64_t v19 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      uint64_t v19 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    uint64_t v19 = &_swiftEmptySetSingleton;
    *(void *)(a13 + 232) = &_swiftEmptySetSingleton;
  }
  *(void *)(a13 + 240) = v19;
  *(void *)(a13 + 296) = 0;
  *(_OWORD *)(a13 + 264) = 0u;
  *(_OWORD *)(a13 + 280) = 0u;
  ObservationRegistrar.init()();
  *(void *)(a13 + 72) = a1;
  id v20 = a1;
  swift_retain();
  swift_release();
  *(void *)(a13 + 16) = a2;
  sub_1000295C0((uint64_t)v29, a13 + 24);
  *(void *)(a13 + 64) = a4;
  unint64_t v21 = *(void **)(a13 + 80);
  swift_retain();
  id v22 = a8;

  *(void *)(a13 + 80) = a8;
  swift_retain();
  swift_release();
  *(void *)(a13 + 136) = a7;
  *(void *)(a13 + 248) = a5;
  *(void *)(a13 + 256) = a6;
  *(void *)(a13 + 304) = [objc_allocWithZone((Class)_LTDisambiguationChangeManager) init];
  sub_10003F29C(v20, 1);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_100019614(a9);
  sub_1000E7058(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4(a9);
  swift_release();
  uint64_t v24 = swift_getKeyPath();
  __chkstk_darwin(v24);
  sub_100019614(a11);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4(a11);
  swift_release();
  sub_10003FE10();
  sub_10000AB68((uint64_t)v29);
  return a13;
}

void sub_1000E6404(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F4B78);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(a2 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
  if (v12)
  {
    id v13 = v12;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    uint64_t v14 = v28;
    if ((~v28 & 0xF000000000000007) != 0)
    {
      uint64_t v27 = v9;
      IndexPath.section.getter();
      dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
      unint64_t v15 = v29;
      if (v29 != 3)
      {
        uint64_t v22 = v30;
        uint64_t v23 = v28;
        UICollectionViewDiffableDataSource.snapshot(for:)();
        sub_100007620(&qword_1002FCAC0);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1002488D0;
        *(void *)(v24 + 32) = v14;
        id v25 = (id)(v14 & 0x3FFFFFFFFFFFFFFFLL);
        NSDiffableDataSourceSectionSnapshot.delete(_:)((Swift::OpaquePointer)v24);
        swift_bridgeObjectRelease();
        uint64_t v28 = v23;
        unint64_t v29 = v15;
        uint64_t v30 = v22;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

        sub_1000E6FC0(v14);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v8);
        sub_1000E6FD8(v23, v15);
        return;
      }
      sub_1000E6FC0(v14);
    }
  }
  if (qword_1002EE5F0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030E9D8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446210;
    sub_1000E7058((unint64_t *)&qword_1002EF290, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = sub_100202FD4(v20, v21, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to remove item at indexPath %{public}s from snapshot because it can't be found in the data source", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1000E6844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4B60);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)v30 - v10;
  if (a3 == 4)
  {
    if (qword_1002EE5F0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    uint64_t v13 = sub_100011554(v12, (uint64_t)qword_10030E9D8);
    sub_1000E6C58(a2, (uint64_t)v11);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      v30[1] = v13;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v31 = a1;
      unint64_t v17 = (uint8_t *)v16;
      v34[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v17 = 136446210;
      sub_1000E6C58((uint64_t)v11, (uint64_t)v9);
      uint64_t v18 = String.init<A>(describing:)();
      v32[0] = (id)sub_100202FD4(v18, v19, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4B60);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Got an update for item at indexPath %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v31;
      swift_slowDealloc();
    }
    else
    {
      sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4B60);
    }

    sub_10000B170(a1, (uint64_t)v34);
    type metadata accessor for PersistedTranslation();
    if (swift_dynamicCast())
    {
      id v20 = v32[0];
      id v21 = [v32[0] identifier];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      sub_1000E3CE0(v22, v24);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000B170(a1, (uint64_t)v34);
      id v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136380675;
        sub_10000B170((uint64_t)v34, (uint64_t)v32);
        uint64_t v28 = String.init<A>(describing:)();
        v32[0] = (id)sub_100202FD4(v28, v29, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000AB68((uint64_t)v34);
          v27,
          0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000AB68((uint64_t)v34);
      }
    }
  }
}

uint64_t sub_1000E6C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E6CC0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E6CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E6E1C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E4D80);
}

uint64_t sub_1000E6D14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E6D24()
{
  return swift_release();
}

uint64_t sub_1000E6D30()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000E6E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E6E1C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1000E4A2C);
}

uint64_t sub_1000E6E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v13 = *(unsigned __int8 *)(v5 + 32);
  uint64_t v14 = v5 + ((*(unsigned __int8 *)(v10 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return a5(a1, a2, a3, a4, v11, v12, v13, v14);
}

uint64_t sub_1000E6ED0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E6F10()
{
  return TranslationStoreCoreData.deleteBackground(_:completion:)();
}

uint64_t sub_1000E6F58()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000E6F98()
{
  sub_100229680(*(void **)(v0 + 24));
}

void sub_1000E6FC0(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0) {
}
  }

uint64_t sub_1000E6FD8(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return sub_1000E6FE8(a1, a2);
  }
  return a1;
}

uint64_t sub_1000E6FE8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000E7038()
{
  return sub_10003BE34(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000E7058(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E70A8()
{
  return sub_10003C17C(v0[2], v0[3], v0[4]);
}

id sub_1000E70C8(uint64_t a1)
{
  return sub_1000E3A74(a1);
}

double sub_1000E70D0(double a1)
{
  return round(a1);
}

uint64_t sub_1000E70D8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000E7120(unint64_t a1, uint64_t a2)
{
  return sub_1000E3C60(a1, a2);
}

uint64_t sub_1000E7128(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateTip(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E718C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for FavoritesDetailList()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for FavoritesDetailList(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FavoritesDetailList(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FavoritesDetailList(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FavoritesDetailList(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FavoritesDetailList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FavoritesDetailList()
{
  return &type metadata for FavoritesDetailList;
}

unint64_t sub_1000E7480()
{
  unint64_t result = qword_1002F4BB0;
  if (!qword_1002F4BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4BB0);
  }
  return result;
}

id sub_1000E74D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  id v7 = objc_allocWithZone((Class)type metadata accessor for FavoritesDetailListController());
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1000E76B0(v1, v2, v3, v5, v4, v6);
}

uint64_t sub_1000E756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E765C();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000E75D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000E765C();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000E7634()
{
}

unint64_t sub_1000E765C()
{
  unint64_t result = qword_1002F4BB8;
  if (!qword_1002F4BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4BB8);
  }
  return result;
}

id sub_1000E76B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator29FavoritesDetailListController____lazy_storage___favoritesLocalePairResultsController] = 1;
  id v7 = &v6[OBJC_IVAR____TtC17SequoiaTranslator29FavoritesDetailListController_displayLocalePairText];
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = a2;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource] = 0;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_store] = a3;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_ttsManager] = a4;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession] = a5;
  *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession] = a6;
  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for FavoritesCardListController();
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_1000E78C0()
{
  uint64_t v36 = sub_100007620(&qword_1002F4C08);
  uint64_t v1 = *(void *)(v36 - 8);
  uint64_t v2 = __chkstk_darwin(v36);
  uint64_t v31 = v3;
  unint64_t v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  CGFloat v35 = (char *)&v31 - v4;
  uint64_t v5 = sub_100007620(&qword_1002F4C10);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  objc_super v9 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - v10;
  *(void *)(swift_allocObject() + 16) = v0;
  unint64_t v12 = sub_1000E8EC8();
  uint64_t v13 = v0;
  unint64_t v34 = v12;
  uint64_t result = UICollectionView.CellRegistration.init(handler:)();
  os_log_type_t v15 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView];
  if (v15)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
    uint64_t v33 = v5;
    v18(v17 + v16, v9, v5);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1000E8F14;
    *(void *)(v19 + 24) = v17;
    objc_allocWithZone((Class)sub_100007620(&qword_1002F4C20));
    id v20 = v15;
    uint64_t v21 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v22 = OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource;
    unint64_t v23 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource];
    *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource] = v21;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v24 = v35;
    UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
    id v25 = *(void **)&v13[v22];
    uint64_t v26 = v36;
    if (v25)
    {
      uint64_t v27 = v32;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v32, v24, v36);
      unint64_t v28 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      uint64_t v29 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v29 + v28, v27, v26);
      id v30 = v25;
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v24, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E7CD8(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002FCA80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = (unint64_t)*a3;
  unint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  UICollectionViewCell.contentConfiguration.setter();
  if (v10 >> 62 == 2)
  {
    if (qword_1002EE5F0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100011554(v12, (uint64_t)qword_10030E9D8);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unsupported item in FavoritesDetailListController UICollectionView cell registration", v15, 2u);
      swift_slowDealloc();
    }

    unint64_t v24 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    return UICollectionViewCell.contentConfiguration.setter();
  }
  else
  {
    uint64_t v11 = (void *)(v10 & 0x3FFFFFFFFFFFFFFFLL);
    if (v10 >> 62 == 1) {
      v10 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    sub_100007620((uint64_t *)&unk_1002F0270);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100249BA0;
    *(void *)(inited + 32) = *(void *)(a4
                                         + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession);
    *(void *)(inited + 40) = *(void *)(a4
                                         + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession);
    *(void *)&long long v22 = inited;
    specialized Array._endMutation()();
    unint64_t v18 = v22;
    id v19 = v11;
    swift_retain();
    swift_retain();
    uint64_t v20 = sub_1000F2024(v18, (void *)v10);
    swift_bridgeObjectRelease();

    sub_1000E41BC((void *)v10, v20);
    swift_release();
    type metadata accessor for TranslationCardView();
    sub_1000E91AC(&qword_1002F4C28, (void (*)(uint64_t))type metadata accessor for TranslationCardView);
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    *((void *)&v23 + 1) = v6;
    unint64_t v24 = sub_1000E9148();
    sub_100014830((uint64_t *)&v22);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter();
    return swift_release();
  }
}

uint64_t sub_1000E8030@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  UUID.init()();
  type metadata accessor for SharedTranslationOptions();
  sub_1000E91AC(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t v6 = EnvironmentObject.init()();
  uint64_t v8 = v7;
  uint64_t KeyPath = swift_getKeyPath();
  unint64_t v10 = (int *)type metadata accessor for TranslationCardView();
  *(void *)(a1 + v10[9]) = KeyPath;
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 32))(a1, v5, v2);
  type metadata accessor for CommittedTranslationViewModel();
  sub_1000E91AC(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  Bindable<A>.init(wrappedValue:)();
  uint64_t v11 = (void *)(a1 + v10[6]);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(a1 + v10[7]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t *)(a1 + v10[8]);
  *uint64_t v13 = v6;
  v13[1] = v8;
  os_log_type_t v14 = (uint64_t *)(a1 + v10[10]);
  type metadata accessor for SceneContext();
  sub_1000E91AC((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  *os_log_type_t v14 = EnvironmentObject.init()();
  v14[1] = v15;
  uint64_t v16 = a1 + v10[11];
  v21[15] = 0;
  State.init(wrappedValue:)();
  uint64_t v17 = v22;
  *(unsigned char *)uint64_t v16 = v21[16];
  *(void *)(v16 + 8) = v17;
  unint64_t v18 = (unint64_t (**)(uint64_t, uint64_t, Swift::UInt))(a1 + v10[12]);
  void *v18 = sub_1002154F4;
  v18[1] = 0;
  uint64_t v19 = v10[13];
  uint64_t result = Image.init(systemName:)();
  *(void *)(a1 + v19) = result;
  return result;
}

uint64_t sub_1000E8300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a3 & 0x3FFFFFFFFFFFFFFFLL);
  sub_1000E8EC8();
  id v4 = v3;
  uint64_t v5 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

  return v5;
}

unint64_t sub_1000E8388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v25[1] = a4;
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  objc_super v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v12 = sub_100007620(&qword_1002F4B98);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (void *)result;
    unint64_t v18 = *(void **)(result + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
    if (v18)
    {
      v25[0] = a1;
      id v19 = v18;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v20 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      unint64_t result = IndexPath.section.getter();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)(v20 + 16))
      {
        unint64_t v21 = v20 + 24 * result;
        uint64_t v22 = *(void *)(v21 + 32);
        unint64_t v23 = *(void *)(v21 + 40);
        sub_1000E70D8(v22, v23);
        swift_bridgeObjectRelease();
        static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
        if (v23 != 3)
        {
          sub_1000E3B6C(v22, v23);
          UIListContentConfiguration.text.setter();
        }
        goto LABEL_9;
      }
      __break(1u);
      return result;
    }
    static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
    uint64_t v22 = 0;
    unint64_t v23 = 3;
LABEL_9:
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v9, v5);
    sub_1000E6FD8(v22, v23);
    v26[3] = v5;
    v26[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    unint64_t v24 = sub_100014830(v26);
    (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v24, v11, v5);
    UICollectionViewCell.contentConfiguration.setter();

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return result;
}

uint64_t sub_1000E867C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F4B98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8DE0();
  sub_1000E8E34();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1002C8638);
  id v8 = sub_1000E8980();
  if (v8)
  {
    objc_super v9 = v8;
    id v10 = [v8 fetchedObjects];

    if (v10)
    {
      type metadata accessor for PersistedTranslation();
      unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v12) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v12)
        {
LABEL_5:
          *(void *)&long long v27 = _swiftEmptyArrayStorage;
          uint64_t result = sub_1000B2D04(0, v12 & ~(v12 >> 63), 0);
          if (v12 < 0)
          {
            __break(1u);
            return result;
          }
          v23[1] = a1;
          uint64_t v24 = v5;
          uint64_t v25 = v2;
          uint64_t v26 = v4;
          uint64_t v14 = 0;
          uint64_t v15 = v27;
          do
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v16 = *(id *)(v11 + 8 * v14 + 32);
            }
            id v17 = v16;
            *(void *)&long long v27 = v15;
            unint64_t v19 = *(void *)(v15 + 16);
            unint64_t v18 = *(void *)(v15 + 24);
            if (v19 >= v18 >> 1)
            {
              sub_1000B2D04(v18 > 1, v19 + 1, 1);
              uint64_t v15 = v27;
            }
            ++v14;
            *(void *)(v15 + 16) = v19 + 1;
            *(void *)(v15 + 8 * v19 + 32) = v17;
          }
          while (v12 != v14);
          swift_bridgeObjectRelease();
          uint64_t v2 = v25;
          uint64_t v4 = v26;
          uint64_t v5 = v24;
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
LABEL_16:
      long long v27 = xmmword_10024D860;
      uint64_t v28 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
  if (v20)
  {
    id v21 = v20;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  char v22 = NSDiffableDataSourceSnapshot.numberOfItems.getter() < 1;
  sub_1000E43D4(v22);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1000E8980()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator29FavoritesDetailListController____lazy_storage___favoritesLocalePairResultsController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator29FavoritesDetailListController____lazy_storage___favoritesLocalePairResultsController);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = sub_1000E89F0(v0);
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1000E8DD0(v4);
  }
  sub_1000E91F4(v2);
  return v3;
}

id sub_1000E89F0(uint64_t a1)
{
  type metadata accessor for PersistedTranslation();
  uint64_t v2 = (id)static PersistedTranslation.favoritedSortedByCreationDateFetchRequest(localePair:)();
  id v3 = (void *)dispatch thunk of TranslationStoreCoreData.viewContext.getter();
  id v4 = objc_allocWithZone((Class)NSFetchedResultsController);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithFetchRequest:v2 managedObjectContext:v3 sectionNameKeyPath:v5 cacheName:0];

  [v6 setDelegate:a1];
  id v16 = 0;
  if ([v6 performFetch:&v16])
  {
    id v7 = v16;
  }
  else
  {
    id v8 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1002EE5D8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030E990);
    swift_errorRetain();
    swift_errorRetain();
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      uint64_t v14 = (void *)_convertErrorToNSError(_:)();
      id v16 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed initial fetch of favorites data: %@", v12, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v2 = v10;
    }
  }

  return v6;
}

void sub_1000E8CE4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator29FavoritesDetailListController____lazy_storage___favoritesLocalePairResultsController);

  sub_1000E8DD0(v1);
}

id sub_1000E8D28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FavoritesDetailListController();
  return [super dealloc];
}

uint64_t type metadata accessor for FavoritesDetailListController()
{
  return self;
}

void sub_1000E8DD0(id a1)
{
  if (a1 != (id)1) {
}
  }

unint64_t sub_1000E8DE0()
{
  unint64_t result = qword_1002F4BF8;
  if (!qword_1002F4BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4BF8);
  }
  return result;
}

unint64_t sub_1000E8E34()
{
  unint64_t result = qword_1002F4C00;
  if (!qword_1002F4C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4C00);
  }
  return result;
}

uint64_t sub_1000E8E88()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000E8EC0(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_1000E7CD8(a1, a2, a3, *(void *)(v3 + 16));
}

unint64_t sub_1000E8EC8()
{
  unint64_t result = qword_1002F4C18;
  if (!qword_1002F4C18)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F4C18);
  }
  return result;
}

uint64_t sub_1000E8F08()
{
  return sub_1000E902C(&qword_1002F4C10);
}

uint64_t sub_1000E8F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100007620(&qword_1002F4C10);

  return sub_1000E8300(a1, a2, a3);
}

uint64_t sub_1000E8FA0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000E8FD8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000ED40C(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16));
}

uint64_t sub_1000E8FE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1000E9018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E8388(a1, a2, a3, a4);
}

uint64_t sub_1000E9020()
{
  return sub_1000E902C(&qword_1002F4C08);
}

uint64_t sub_1000E902C(uint64_t *a1)
{
  uint64_t v2 = sub_100007620(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1000E90B8()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_1000E9140@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E8030(a1);
}

unint64_t sub_1000E9148()
{
  unint64_t result = qword_1002FCA90;
  if (!qword_1002FCA90)
  {
    sub_100007928((uint64_t *)&unk_1002FCA80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FCA90);
  }
  return result;
}

uint64_t sub_1000E91AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000E91F4(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t *sub_1000E9204(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    id v10 = (uint64_t *)((char *)a2 + v8);
    a1[4] = a2[4];
    a1[5] = v7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100007620(&qword_1002F1058);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000E9408(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_1000E9550(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100007620(&qword_1002F1058);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000E9704(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10000B070((uint64_t)a1 + v6, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1000E9914(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      uint64_t v11 = sub_100007620(&qword_1002F1058);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_1000E9A9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10000B070((uint64_t)a1 + v7, (uint64_t *)&unk_1002F5770);
    uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_100007620(&qword_1002F1058);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000E9C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E9C98);
}

uint64_t sub_1000E9C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F1068);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000E9D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E9D60);
}

uint64_t sub_1000E9D60(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1068);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FavoritesDetailView()
{
  uint64_t result = qword_1002F4C88;
  if (!qword_1002F4C88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000E9E58()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000E9F04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000E9F20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1200);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F1058);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v26 - v16;
  type metadata accessor for FavoritesDetailView();
  sub_100100194((uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v15, enum case for UserInterfaceSizeClass.regular(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v15, 0, 1, v1);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_1000860A4((uint64_t)v17, (uint64_t)v8);
  sub_1000860A4((uint64_t)v15, v18);
  unint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v19((uint64_t)v8, 1, v1) != 1)
  {
    sub_1000860A4((uint64_t)v8, (uint64_t)v12);
    if (v19(v18, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v18, v1);
      sub_1000EAB04();
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_10000B070((uint64_t)v15, &qword_1002F1058);
      sub_10000B070((uint64_t)v17, &qword_1002F1058);
      v21(v12, v1);
      sub_10000B070((uint64_t)v8, &qword_1002F1058);
      if (v20) {
        goto LABEL_8;
      }
LABEL_9:
      char v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.automatic(_:);
      goto LABEL_10;
    }
    sub_10000B070((uint64_t)v15, &qword_1002F1058);
    sub_10000B070((uint64_t)v17, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
LABEL_6:
    sub_10000B070((uint64_t)v8, &qword_1002F1200);
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v15, &qword_1002F1058);
  sub_10000B070((uint64_t)v17, &qword_1002F1058);
  if (v19(v18, 1, v1) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v8, &qword_1002F1058);
LABEL_8:
  char v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.inline(_:);
LABEL_10:
  uint64_t v23 = *v22;
  uint64_t v24 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_1000EA31C()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F1058);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v21 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  type metadata accessor for FavoritesDetailView();
  sub_100100194((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1000860A4((uint64_t)v16, (uint64_t)v7);
  sub_1000860A4((uint64_t)v14, v17);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v7, 1, v0) != 1)
  {
    sub_1000860A4((uint64_t)v7, (uint64_t)v11);
    if (v18(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_1000EAB04();
      dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v3, v0);
      sub_10000B070((uint64_t)v14, &qword_1002F1058);
      sub_10000B070((uint64_t)v16, &qword_1002F1058);
      v19(v11, v0);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
      return LocalizedStringKey.init(stringLiteral:)();
    }
    sub_10000B070((uint64_t)v14, &qword_1002F1058);
    sub_10000B070((uint64_t)v16, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v14, &qword_1002F1058);
  sub_10000B070((uint64_t)v16, &qword_1002F1058);
  if (v18(v17, 1, v0) != 1)
  {
LABEL_6:
    sub_10000B070((uint64_t)v7, &qword_1002F1200);
    return LocalizedStringKey.init(stringLiteral:)();
  }
  sub_10000B070((uint64_t)v7, &qword_1002F1058);
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1000EA6E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v31 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v3 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100007620(&qword_1002F4CD0);
  uint64_t v35 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100007620(&qword_1002F4CD8);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  id v30 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  unint64_t v8 = v1[1];
  uint64_t v11 = v2[4];
  uint64_t v10 = v2[5];
  uint64_t v12 = v2[2];
  uint64_t v13 = v2[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = static SafeAreaRegions.container.getter();
  char v15 = static Edge.Set.all.getter();
  uint64_t v37 = v9;
  unint64_t v38 = v8;
  uint64_t v39 = v12;
  uint64_t v40 = v11;
  uint64_t v41 = v10;
  uint64_t v42 = v13;
  uint64_t v43 = v14;
  char v44 = v15;
  sub_1000E9F20((uint64_t)v5);
  uint64_t v16 = sub_100007620(&qword_1002F4CE0);
  unint64_t v17 = sub_1000EAA88();
  uint64_t v18 = v29;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v31);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000EA31C();
  uint64_t v37 = v16;
  unint64_t v38 = v17;
  swift_getOpaqueTypeConformance2();
  unint64_t v19 = v30;
  uint64_t v20 = v33;
  View.navigationBarTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v20);
  uint64_t v22 = *v2;
  uint64_t v21 = v2[1];
  uint64_t v23 = v32;
  uint64_t v24 = v36;
  uint64_t v25 = v34;
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v36, v19, v34);
  uint64_t v26 = (void *)(v24 + *(int *)(sub_100007620(&qword_1002F4CF0) + 52));
  *uint64_t v26 = v22;
  v26[1] = v21;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
  swift_bridgeObjectRetain();
  return v27(v19, v25);
}

unint64_t sub_1000EAA88()
{
  unint64_t result = qword_1002F4CE8;
  if (!qword_1002F4CE8)
  {
    sub_100007928(&qword_1002F4CE0);
    sub_1000E7480();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4CE8);
  }
  return result;
}

unint64_t sub_1000EAB04()
{
  unint64_t result = qword_1002F1240;
  if (!qword_1002F1240)
  {
    type metadata accessor for UserInterfaceSizeClass();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1240);
  }
  return result;
}

unint64_t sub_1000EAB60()
{
  unint64_t result = qword_1002F4CF8;
  if (!qword_1002F4CF8)
  {
    sub_100007928(&qword_1002F4CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4CF8);
  }
  return result;
}

id sub_1000EABBC(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_label;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_button;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = &v11[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_buttonAction];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for FavoritesHeaderView();
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  char v15 = self;
  id v16 = v14;
  id v17 = [v15 clearColor];
  [v16 setBackgroundColor:v17];

  sub_1000EAD74();
  sub_1000EAF78();

  return v16;
}

id sub_1000EAD74()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_label];
  [v0 addSubview:v1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_button];
  [v0 addSubview:v2];
  id v3 = [self systemFontOfSize:22.0 weight:UIFontWeightBold];
  [v1 setFont:v3];

  id v4 = [self mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000011;
  v12._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v12._object = (void *)0x800000010025E660;
  v5._object = (void *)0x800000010025E640;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v12);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v7 forState:0];

  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self colorNamed:v8];

  [v2 setTitleColor:v9 forState:0];

  return [v2 addTarget:v0 action:"buttonPressed" forControlEvents:64];
}

void sub_1000EAF78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_label];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_button];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v2 bottomAnchor];
  id v5 = [v1 bottomAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5 constant:-17.0];

  LODWORD(v7) = 1148829696;
  [v6 setPriority:v7];
  uint64_t v25 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100249A50;
  id v9 = [v2 leadingAnchor];
  id v10 = [v1 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10 constant:17.0];

  *(void *)(v8 + 32) = v11;
  id v12 = [v2 trailingAnchor];
  id v13 = [v3 leadingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13 constant:-8.0];

  *(void *)(v8 + 40) = v14;
  id v15 = [v2 topAnchor];
  id v16 = [v1 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 constant:17.0];

  *(void *)(v8 + 48) = v17;
  *(void *)(v8 + 56) = v6;
  id v18 = v6;
  id v19 = [v3 trailingAnchor];
  id v20 = [v1 trailingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20 constant:-17.0];

  *(void *)(v8 + 64) = v21;
  id v22 = [v3 firstBaselineAnchor];
  id v23 = [v2 firstBaselineAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v8 + 72) = v24;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];
}

id sub_1000EB378()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FavoritesHeaderView();
  return [super dealloc];
}

uint64_t type metadata accessor for FavoritesHeaderView()
{
  return self;
}

void sub_1000EB430()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_label;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_button;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = &v0[OBJC_IVAR____TtC17SequoiaTranslator19FavoritesHeaderView_buttonAction];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *sub_1000EB50C(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_subscriptions] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_translationStore] = a1;
  type metadata accessor for SharedTranslations();
  uint64_t v2 = v1;
  swift_retain();
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_sharedFavorites] = static SharedTranslations.translationGroupSharedTranslations()();

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for FavoritesImporter();
  id v3 = [super init];
  id v4 = *(void **)&v3[OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_sharedFavorites];
  *(void *)(swift_allocObject() + 16) = v3;
  id v5 = v3;
  id v6 = v4;
  dispatch thunk of SharedTranslations.presentedItemChangedAction.setter();

  swift_release();
  return v5;
}

uint64_t sub_1000EB61C()
{
  return sub_1000EB898("Running FavoritesImporter", (uint64_t)&unk_1002CE200, (uint64_t)&unk_1002F4DA0);
}

uint64_t sub_1000EB644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000EB664, 0, 0);
}

uint64_t sub_1000EB664()
{
  id v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of SharedTranslations.loadTranslations()
                         + async function pointer to dispatch thunk of SharedTranslations.loadTranslations());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000EB714;
  return v3();
}

uint64_t sub_1000EB714()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000EB810, 0, 0);
}

uint64_t sub_1000EB810()
{
  sub_1000EB870();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000EB870()
{
  return sub_1000EB898("Running FavoritesImporter without loading first", (uint64_t)&unk_1002CE188, (uint64_t)&unk_1002F4D88);
}

uint64_t sub_1000EB898(const char *a1, uint64_t a2, uint64_t a3)
{
  id v6 = v3;
  uint64_t v7 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE5F0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030E9D8);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a1, v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  id v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v6;
  id v16 = v6;
  sub_100056780((uint64_t)v9, a3, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_1000EBA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000EBA6C, 0, 0);
}

uint64_t sub_1000EBA6C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_translationStore);
  v0[3] = v2;
  v0[4] = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17FavoritesImporter_sharedFavorites);
  swift_retain();
  uint64_t v3 = dispatch thunk of SharedTranslations.translations.getter();
  v0[5] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000EBB4C;
  v4[3] = v3;
  v4[4] = v2;
  return _swift_task_switch(sub_1000EBDF4, 0, 0);
}

uint64_t sub_1000EBB4C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  id v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of SharedTranslations.clear()
                         + async function pointer to dispatch thunk of SharedTranslations.clear());
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1000EBCE0;
  return v5();
}

uint64_t sub_1000EBCE0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000EBDD4(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_1000EBDF4, 0, 0);
}

uint64_t sub_1000EBDF4()
{
  if (qword_1002EE5F0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030E9D8);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[3];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    v0[2] = *(void *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Importing %ld favorites", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v7 = v0[3];
  v0[5] = TranslationStoreCoreData.persistentContainer.getter();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  v0[6] = v9;
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[7] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1000EC030;
  return NSPersistentContainer.performBackgroundTask<A>(_:)();
}

uint64_t sub_1000EC030()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();

  return _swift_task_switch(sub_1000EC160, 0, 0);
}

uint64_t sub_1000EC160()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1000EC1A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FavoritesImporter();
  return [super dealloc];
}

uint64_t type metadata accessor for FavoritesImporter()
{
  return self;
}

uint64_t sub_1000EC258@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FavoritesImporter();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000EC294()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000EC2CC()
{
  return sub_1000EB870();
}

uint64_t sub_1000EC2F0(void *a1, uint64_t a2, uint64_t a3)
{
  id v63 = a1;
  uint64_t v51 = type metadata accessor for Date();
  CGFloat v53 = *(void (***)(char *, uint64_t))(v51 - 8);
  __chkstk_darwin(v51);
  double v50 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for UUID();
  double v52 = *(void (***)(char *, void *))(v49 - 8);
  __chkstk_darwin(v49);
  double v48 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StoredTranslationResult();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for SpeechResultOrigin();
  id v57 = *(void (***)(char *, void, uint64_t))(v61 - 8);
  __chkstk_darwin(v61);
  double v60 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  CGFloat v59 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)type metadata accessor for StoredSpeechResult();
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  id v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v62 = result;
  if (result)
  {
    v44[2] = v3;
    CGFloat v45 = *(char **)(a3 + 16);
    if (v45)
    {
      uint64_t v19 = *(void *)(type metadata accessor for SharedTranslations.Translation() - 8);
      uint64_t v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      uint64_t v58 = *(void *)(v19 + 72);
      v57 += 13;
      CGFloat v56 = (void (**)(uint64_t *, char *, void *))(v15 + 16);
      CGFloat v55 = (void (**)(uint64_t *, char *, uint64_t))(v8 + 16);
      unsigned int v54 = enum case for SpeechResultOrigin.text(_:);
      id v47 = (void (**)(char *, uint64_t))(v52 + 1);
      id v46 = v53 + 1;
      CGFloat v53 = (void (**)(char *, uint64_t))(v8 + 8);
      double v52 = (void (**)(char *, void *))(v15 + 8);
      v44[1] = a3;
      swift_bridgeObjectRetain();
      id v21 = v45;
      double v64 = v17;
      do
      {
        SharedTranslations.Translation.sourceText.getter();
        SharedTranslations.Translation.sourceLocale.getter();
        (*v57)(v60, v54, v61);
        StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
        SharedTranslations.Translation.targetText.getter();
        SharedTranslations.Translation.targetLocale.getter();
        id v22 = v64;
        StoredTranslationResult.init(text:locale:isOffline:romanization:)();
        v66[3] = v14;
        v66[4] = (id)sub_1000ECE9C(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
        id v23 = sub_100014830((uint64_t *)v66);
        (*v56)(v23, v22, v14);
        v65[3] = v7;
        v65[4] = sub_1000ECE9C((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
        id v24 = sub_100014830(v65);
        (*v55)(v24, v10, v7);
        uint64_t v25 = (void *)TranslationStoreCoreData.insert(speech:translationResult:context:isFavorite:)();
        sub_10000AB68((uint64_t)v65);
        sub_10000AB68((uint64_t)v66);
        if (v25)
        {
          uint64_t v26 = v48;
          UUID.init()();
          UUID.uuidString.getter();
          (*v47)(v26, v49);
          NSString v27 = String._bridgeToObjectiveC()();
          id v22 = v64;
          swift_bridgeObjectRelease();
          [v25 setRequestID:v27];

          NSString v28 = String._bridgeToObjectiveC()();
          [v25 setSessionID:v28];

          uint64_t v29 = v50;
          Date.init()();
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          (*v46)(v29, v51);
          [v25 setFavoriteDate:isa];
        }
        (*v53)(v10, v7);
        (*v52)(v22, v14);
        v20 += v58;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
    }
    v66[0] = 0;
    if ([v63 save:v66])
    {
      uint64_t v31 = qword_1002EE5F0;
      id v32 = v66[0];
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_100011554(v33, (uint64_t)qword_10030E9D8);
      swift_bridgeObjectRetain();
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 134217984;
        v66[0] = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Imported %ld favorites", v36, 0xCu);
        swift_slowDealloc();

        return swift_release();
      }
      else
      {

        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v37 = v66[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      sub_100011554(v38, (uint64_t)qword_10030E9D8);
      swift_errorRetain();
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 138412290;
        uint64_t v43 = (void *)_convertErrorToNSError(_:)();
        v66[0] = v43;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v42 = v43;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to import favorites: %@", v41, 0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
      }

      [v63 reset];
      swift_release();
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_1000ECD60()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100021B58;
  v3[2] = v2;
  return _swift_task_switch(sub_1000EBA6C, 0, 0);
}

uint64_t sub_1000ECE08()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000ECE40()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000ECE80(void *a1)
{
  return sub_1000EC2F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000ECE9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000ECEE8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000ECF28()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000496A4;
  v3[2] = v2;
  return _swift_task_switch(sub_1000EB664, 0, 0);
}

uint64_t destroy for FavoritesList()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for FavoritesList(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FavoritesList(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FavoritesList(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FavoritesList(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FavoritesList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FavoritesList()
{
  return &type metadata for FavoritesList;
}

unint64_t sub_1000ED1F8()
{
  unint64_t result = qword_1002F4DA8;
  if (!qword_1002F4DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4DA8);
  }
  return result;
}

id sub_1000ED24C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  id v5 = objc_allocWithZone((Class)type metadata accessor for FavoritesListController());
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1000F1A40(v1, v3, v2, v4);
}

uint64_t sub_1000ED2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000ED3B8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000ED32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000ED3B8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000ED390()
{
}

unint64_t sub_1000ED3B8()
{
  unint64_t result = qword_1002F4DB0;
  if (!qword_1002F4DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4DB0);
  }
  return result;
}

uint64_t sub_1000ED40C(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t, void))
{
  return a4(a1, a2, *a3);
}

void sub_1000ED438()
{
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoriteTranslationsTip) == 1)
    *(unsigned char *)(v0
             + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoriteTranslationsTip) = 0;
}

uint64_t (*sub_1000ED454())()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip);
  uint64_t v2 = *(void *)(v0
                 + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip);
  if (v2)
  {
    uint64_t v3 = *(uint64_t (**)())(v0
                         + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip);
  }
  else
  {
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = *v1;
    uint64_t v3 = sub_1000F2288;
    *uint64_t v1 = (uint64_t)sub_1000F2288;
    v1[1] = v4;
    swift_retain();
    sub_1000324E4(v5);
  }
  sub_100019614(v2);
  return v3;
}

uint64_t sub_1000ED510()
{
  uint64_t v0 = type metadata accessor for Tips.InvalidationReason();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    sub_1000ED438();

    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Tips.InvalidationReason.actionPerformed(_:), v0);
    sub_1000F1D54();
    Tip.invalidate(reason:)();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

void *sub_1000ED640()
{
  uint64_t v1 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F20D0);
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v6 = sub_100007620(&qword_1002F4EC0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F4EC8);
  uint64_t v20 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (objc_class *)type metadata accessor for FavoritesListController();
  v23.receiver = v0;
  v23.super_class = v12;
  [super viewDidLoad];
  uint64_t result = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView];
  if (result)
  {
    [result setTag:206];
    swift_beginAccess();
    sub_100007620(&qword_1002EF7B0);
    Published.projectedValue.getter();
    swift_endAccess();
    swift_beginAccess();
    Published.projectedValue.getter();
    swift_endAccess();
    sub_100014894(&qword_1002F21B0, &qword_1002F20D0);
    Publishers.CombineLatest.init(_:_:)();
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    id v22 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
    sub_100014894(&qword_1002F4ED0, &qword_1002F4EC0);
    sub_100022364();
    uint64_t v15 = v19;
    Publisher.receive<A>(on:options:)();
    sub_10000B070((uint64_t)v3, &qword_1002FAEF0);

    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v15);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100014894(&qword_1002F4ED8, &qword_1002F4EC8);
    uint64_t v16 = v21;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v16);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EDB10(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    sub_100007620(&qword_1002EE8A0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100247140;
    *(void *)(v7 + 32) = v2;
    *(void *)(v7 + 40) = v1;
    *(void *)(v7 + 48) = v4;
    *(void *)(v7 + 56) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000F16C8();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000EDC14(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for FavoritesListController();
  v15.receiver = v2;
  v15.super_class = v7;
  [super viewWillAppear:a1 & 1];
  uint64_t v8 = OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_favoriteTranslationsTipUpdates;
  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_favoriteTranslationsTipUpdates];
  if (!v9)
  {
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1000ED438();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    swift_release();
    uint64_t v9 = sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F4E80, (uint64_t)v13);
  }
  *(void *)&v2[v8] = v9;
  swift_retain();
  return swift_release();
}

uint64_t sub_1000EDDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a4;
  sub_100007620(&qword_1002F4E88);
  v4[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Tips.Status();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = sub_100007620(&qword_1002F4E90);
  v4[15] = swift_task_alloc();
  v4[16] = sub_100007620(&qword_1002F4E98);
  v4[17] = swift_task_alloc();
  uint64_t v6 = sub_100007620(&qword_1002F4EA0);
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v7 = sub_100007620(&qword_1002F4EA8);
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = type metadata accessor for MainActor();
  v4[26] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[27] = v9;
  v4[28] = v8;
  return _swift_task_switch(sub_1000EE020, v9, v8);
}

uint64_t sub_1000EE020()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  sub_1000F1D54();
  Tip.shouldDisplayUpdates.getter();
  AsyncMapSequence.base.getter();
  sub_100014894(&qword_1002F4EB0, &qword_1002F4E90);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[29] = v4;
  if (v4)
  {
    swift_getObjectType();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  v0[30] = v5;
  v0[31] = v7;
  return _swift_task_switch(sub_1000EE1C0, v5, v7);
}

uint64_t sub_1000EE1C0()
{
  uint64_t v1 = v0[29];
  v0[32] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100014894(&qword_1002F4EB8, &qword_1002F4E98);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[33] = v2;
  void *v2 = v0;
  v2[1] = sub_1000EE2BC;
  uint64_t v3 = v0[10];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_1000EE2BC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_1000EE5E0;
  }
  else
  {
    (*(void (**)(void))(v2 + 256))();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_1000EE3E4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000EE3E4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10000B070(v3, &qword_1002F4E88);
    swift_release();
    uint64_t v4 = v0[27];
    uint64_t v5 = v0[28];
    return _swift_task_switch(sub_1000EE8B4, v4, v5);
  }
  else
  {
    uint64_t v7 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[22];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[13], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    v0[34] = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    objc_super v15 = (int *)((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[35] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1000EE5F8;
    uint64_t v13 = v0[13];
    return ((uint64_t (*)(void *, uint64_t))v15)(v0 + 36, v13);
  }
}

uint64_t sub_1000EE5E0()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_1000EE5F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 104);
  uint64_t v3 = *(void *)(*v0 + 96);
  uint64_t v4 = *(void *)(*v0 + 88);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 248);
  uint64_t v6 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_1000EE798, v6, v5);
}

uint64_t sub_1000EE798()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  return _swift_task_switch(sub_1000EE7FC, v1, v2);
}

uint64_t sub_1000EE7FC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    sub_1000F034C(1);
  }
  uint64_t v3 = static MainActor.shared.getter();
  v0[29] = v3;
  if (v3)
  {
    swift_getObjectType();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  v0[30] = v4;
  v0[31] = v6;
  return _swift_task_switch(sub_1000EE1C0, v4, v6);
}

uint64_t sub_1000EE8B4()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[24], v0[21]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000EEA9C()
{
  uint64_t v36 = sub_100007620(&qword_1002F4C08);
  uint64_t v1 = *(void *)(v36 - 8);
  uint64_t v2 = __chkstk_darwin(v36);
  uint64_t v31 = v3;
  id v32 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  os_log_type_t v35 = (char *)&v31 - v4;
  uint64_t v5 = sub_100007620(&qword_1002F4C10);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - v10;
  *(void *)(swift_allocObject() + 16) = v0;
  uint64_t v12 = sub_10000B0CC(0, (unint64_t *)&qword_1002F4C18);
  uint64_t v13 = v0;
  uint64_t v34 = v12;
  uint64_t result = UICollectionView.CellRegistration.init(handler:)();
  objc_super v15 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView];
  if (v15)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
    uint64_t v33 = v5;
    v18(v17 + v16, v9, v5);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1000F1DF4;
    *(void *)(v19 + 24) = v17;
    objc_allocWithZone((Class)sub_100007620(&qword_1002F4C20));
    id v20 = v15;
    uint64_t v21 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v22 = OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource;
    objc_super v23 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource];
    *(void *)&v13[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource] = v21;

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v24 = v35;
    UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
    uint64_t v25 = *(void **)&v13[v22];
    uint64_t v26 = v36;
    if (v25)
    {
      NSString v27 = v32;
      (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v32, v24, v36);
      unint64_t v28 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
      uint64_t v29 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v29 + v28, v27, v26);
      id v30 = v25;
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v24, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EEEC4(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002FCA80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v26[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100007620(&qword_1002F4E50);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v26[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v14 = (unint64_t)*a3;
  uint64_t v29 = 0;
  long long v27 = 0u;
  long long v28 = 0u;
  uint64_t v15 = UICollectionViewCell.contentConfiguration.setter();
  if (v14 >> 62 == 2)
  {
    __chkstk_darwin(v15);
    *(void *)&v26[-16] = a4;
    sub_100007620(&qword_1002F4E58);
    uint64_t v17 = sub_100007928(&qword_1002F4E60);
    uint64_t v18 = sub_100014894(&qword_1002F4E68, &qword_1002F4E60);
    *(void *)&long long v27 = v17;
    *((void *)&v27 + 1) = &type metadata for Color;
    *(void *)&long long v28 = v18;
    *((void *)&v28 + 1) = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    *((void *)&v28 + 1) = v10;
    uint64_t v29 = sub_100014894(&qword_1002F4E70, &qword_1002F4E50);
    sub_100014830((uint64_t *)&v27);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return UICollectionViewCell.contentConfiguration.setter();
  }
  else
  {
    unint64_t v16 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
    if (v14 >> 62 == 1) {
      v14 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    sub_100007620((uint64_t *)&unk_1002F0270);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100249BA0;
    *(void *)(inited + 32) = *(void *)(a4
                                         + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession);
    *(void *)(inited + 40) = *(void *)(a4
                                         + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession);
    *(void *)&long long v27 = inited;
    specialized Array._endMutation()();
    unint64_t v21 = v27;
    id v22 = v16;
    swift_retain();
    swift_retain();
    uint64_t v23 = sub_1000F2024(v21, (void *)v14);
    swift_bridgeObjectRelease();

    uint64_t v24 = sub_1000E41BC((void *)v14, v23);
    uint64_t v25 = swift_release();
    __chkstk_darwin(v25);
    *(void *)&v26[-16] = v24;
    *(void *)&v26[-8] = a4;
    type metadata accessor for TranslationCardView();
    sub_1000F2230(&qword_1002F4C28, (void (*)(uint64_t))type metadata accessor for TranslationCardView);
    UIHostingConfiguration<>.init(content:)();
    static Edge.Set.all.getter();
    *((void *)&v28 + 1) = v6;
    uint64_t v29 = sub_100014894((unint64_t *)&qword_1002FCA90, (uint64_t *)&unk_1002FCA80);
    sub_100014830((uint64_t *)&v27);
    UIHostingConfiguration.margins(_:_:)();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    UICollectionViewCell.contentConfiguration.setter();
    return swift_release();
  }
}

uint64_t sub_1000EF36C()
{
  uint64_t v0 = sub_100007620(&qword_1002F4E60);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000ED438();
  sub_1000F1D54();
  TipView.init(_:arrowEdge:action:)();
  id v4 = [self secondarySystemGroupedBackgroundColor];
  v6[1] = Color.init(_:)();
  sub_100014894(&qword_1002F4E68, &qword_1002F4E60);
  View.tipBackground<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000EF500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v6 = sub_1000ED454();
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  UUID.init()();
  type metadata accessor for SharedTranslationOptions();
  sub_1000F2230(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t v8 = EnvironmentObject.init()();
  uint64_t v10 = v9;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = (int *)type metadata accessor for TranslationCardView();
  *(void *)(a1 + v12[9]) = KeyPath;
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
  type metadata accessor for CommittedTranslationViewModel();
  sub_1000F2230(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  Bindable<A>.init(wrappedValue:)();
  uint64_t v13 = (void *)(a1 + v12[6]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  unint64_t v14 = (uint64_t (**)())(a1 + v12[7]);
  uint64_t v15 = v25;
  *unint64_t v14 = v26;
  v14[1] = v15;
  unint64_t v16 = (uint64_t *)(a1 + v12[8]);
  uint64_t *v16 = v8;
  v16[1] = v10;
  uint64_t v17 = (uint64_t *)(a1 + v12[10]);
  type metadata accessor for SceneContext();
  sub_1000F2230((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t *v17 = EnvironmentObject.init()();
  v17[1] = v18;
  uint64_t v19 = a1 + v12[11];
  char v27 = 0;
  State.init(wrappedValue:)();
  uint64_t v20 = v29;
  *(unsigned char *)uint64_t v19 = v28;
  *(void *)(v19 + 8) = v20;
  unint64_t v21 = (unint64_t (**)(uint64_t, uint64_t, Swift::UInt))(a1 + v12[12]);
  *unint64_t v21 = sub_1002154F4;
  v21[1] = 0;
  uint64_t v22 = v12[13];
  uint64_t result = Image.init(systemName:)();
  *(void *)(a1 + v22) = result;
  return result;
}

uint64_t sub_1000EF7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a3 & 0x3FFFFFFFFFFFFFFFLL);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F4C18);
  id v4 = v3;
  uint64_t v5 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

  return v5;
}

unint64_t sub_1000EF87C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v76 = a4;
  id v77 = a1;
  uint64_t v4 = type metadata accessor for UICellAccessory();
  uint64_t v72 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CGRect v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F4E30);
  __chkstk_darwin(v6 - 8);
  id v67 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v64 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  id v66 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  __chkstk_darwin(v9);
  CGRect v68 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIButton.Configuration();
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  id v63 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v75 = (char *)&v61 - v14;
  uint64_t v15 = type metadata accessor for UIListContentConfiguration();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v61 - v20;
  uint64_t v22 = sub_100007620(&qword_1002F4B98);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v27 = (void *)result;
    char v28 = *(void **)(result + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
    if (v28)
    {
      uint64_t v62 = v4;
      id v29 = v28;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v30 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      unint64_t result = IndexPath.section.getter();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)(v30 + 16))
      {
        uint64_t v31 = (void *)(v30 + 24 * result);
        uint64_t v33 = v31[4];
        unint64_t v32 = v31[5];
        uint64_t v34 = v31[6];
        sub_1000E70D8(v33, v32);
        swift_bridgeObjectRelease();
        static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
        if (v32 != 3)
        {
          sub_1000E3B6C(v33, v32);
          UIListContentConfiguration.text.setter();
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v19, v15);
          if (v32)
          {
            if (v32 == 1)
            {
              uint64_t v35 = v33;
              unint64_t v36 = 1;
            }
            else if (v32 == 2)
            {
              uint64_t v35 = v33;
              unint64_t v36 = 2;
            }
            else
            {
              if (*(void *)(v34 + 16) > 3uLL)
              {
                static UIButton.Configuration.plain()();
                id v37 = [self mainBundle];
                v79._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
                v79._object = (void *)0x800000010025E660;
                v38._object = (void *)0x800000010025E640;
                v38._uint64_t countAndFlagsBits = 0xD000000000000011;
                v39._uint64_t countAndFlagsBits = 0;
                v39._object = (void *)0xE000000000000000;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v79);

                os_log_type_t v40 = v75;
                UIButton.Configuration.title.setter();
                uint64_t v76 = sub_10000B0CC(0, &qword_1002F4E38);
                (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v63, v40, v74);
                sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
                uint64_t v41 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v42 = (void *)swift_allocObject();
                v42[2] = v41;
                v42[3] = v33;
                _DWORD v42[4] = v32;
                v42[5] = v34;
                UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
                uint64_t v43 = (void *)UIButton.init(configuration:primaryAction:)();
                uint64_t v44 = sub_100007620(&qword_1002F4E40);
                CGFloat v45 = v66;
                id v46 = (uint64_t (**)())&v66[*(int *)(v44 + 48)];
                uint64_t v47 = enum case for UICellAccessory.DisplayedState.always(_:);
                uint64_t v48 = type metadata accessor for UICellAccessory.DisplayedState();
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(v45, v47, v48);
                *id v46 = variable initialization expression of PlaceholderTextView.placeholderColor;
                v46[1] = 0;
                (*(void (**)(char *, void, uint64_t))(v64 + 104))(v45, enum case for UICellAccessory.Placement.trailing(_:), v65);
                uint64_t v49 = type metadata accessor for UICellAccessory.LayoutDimension();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v67, 1, 1, v49);
                id v50 = v43;
                uint64_t v51 = v68;
                UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
                double v52 = v71;
                static UICellAccessory.customView(configuration:)();
                sub_100007620(&qword_1002F4E48);
                uint64_t v53 = v72;
                unint64_t v54 = (*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
                uint64_t v55 = swift_allocObject();
                *(_OWORD *)(v55 + 16) = xmmword_1002488D0;
                unint64_t v56 = v55 + v54;
                uint64_t v57 = v62;
                (*(void (**)(unint64_t, char *, uint64_t))(v53 + 16))(v56, v52, v62);
                uint64_t v58 = v77;
                UICollectionViewListCell.accessories.setter();

                (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v57);
                (*(void (**)(char *, uint64_t))(v69 + 8))(v51, v70);
                (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v74);
LABEL_19:
                v78[3] = v15;
                v78[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
                CGFloat v59 = sub_100014830(v78);
                (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v59, v21, v15);
                UICollectionViewCell.contentConfiguration.setter();
                NSString v60 = String._bridgeToObjectiveC()();
                [v58 setAccessibilityIdentifier:v60];

                return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, v15);
              }
              uint64_t v35 = v33;
              unint64_t v36 = v32;
            }
          }
          else
          {
            uint64_t v35 = v33;
            unint64_t v36 = 0;
          }
          sub_1000E6FD8(v35, v36);
LABEL_18:
          uint64_t v58 = v77;
          UICollectionViewListCell.accessories.setter();
          goto LABEL_19;
        }
LABEL_11:
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v19, v15);
        goto LABEL_18;
      }
      __break(1u);
      return result;
    }
    static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
    goto LABEL_11;
  }
  return result;
}

void sub_1000F01E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    uint64_t v8 = sub_1000E3B6C(a3, a4);
    uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_store];
    if (v9) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_ttsManager];
    uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession];
    if (v9) {
      uint64_t v14 = v9;
    }
    else {
      uint64_t v14 = 0xE000000000000000;
    }
    uint64_t v15 = *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession];
    objc_allocWithZone((Class)type metadata accessor for FavoritesDetailListController());
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v16 = sub_1000E76B0(v11, v14, v10, v12, v13, v15);
    id v17 = [v7 navigationController];
    if (v17)
    {
      uint64_t v18 = v17;
      [v17 pushViewController:v16 animated:1];
    }
  }
}

uint64_t sub_1000F034C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v81 = sub_100007620(&qword_1002F4B98);
  uint64_t v73 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E8DE0();
  sub_1000E8E34();
  NSDiffableDataSourceSnapshot.init()();
  sub_1000ED438();
  sub_1000F1D54();
  if (Tip.shouldDisplay.getter())
  {
    uint64_t v6 = sub_1000F119C();
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 fetchedObjects];

      if (v8)
      {
        type metadata accessor for PersistedTranslation();
        unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v10)
        {
          NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1002C8160);
          long long v83 = 0uLL;
          id v84 = 0;
          NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
        }
      }
    }
  }
  uint64_t v11 = sub_1000F0E98();
  uint64_t v12 = &selRef_initWithTagSchemes_options_;
  if (v11)
  {
    uint64_t v13 = v11;
    id v14 = [v11 sections];

    if (v14)
    {
      sub_100007620(&qword_1002F4E18);
      unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v72 = v2;
      id v80 = v5;
      HIDWORD(v71) = a1;
      if (v15 >> 62) {
        goto LABEL_44;
      }
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
      {
        uint64_t v17 = 0;
        unint64_t v79 = v15 & 0xC000000000000001;
        unint64_t v74 = v15 + 32;
        uint64_t v76 = (char *)&type metadata for Any + 8;
        long long v75 = xmmword_1002488D0;
        uint64_t v77 = v16;
        unint64_t v78 = v15;
        while (v79)
        {
          uint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v19 = __OFADD__(v17++, 1);
          if (v19) {
            goto LABEL_43;
          }
LABEL_20:
          id v20 = [v18 objects];
          if (v20)
          {
            unint64_t v21 = v20;
            uint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v23 = *(void *)(v22 + 16);
            if (v23)
            {
              uint64_t v24 = v22 + 32;
              swift_bridgeObjectRetain();
              uint64_t v25 = _swiftEmptyArrayStorage;
              do
              {
                sub_10000B170(v24, (uint64_t)&v83);
                sub_10000B170((uint64_t)&v83, (uint64_t)v82);
                type metadata accessor for PersistedTranslation();
                if (swift_dynamicCast())
                {
                  uint64_t v26 = v85;
                  sub_10000AB68((uint64_t)&v83);
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v25 = sub_10020244C(0, v25[2] + 1, 1, v25);
                  }
                  unint64_t v28 = v25[2];
                  unint64_t v27 = v25[3];
                  if (v28 >= v27 >> 1) {
                    uint64_t v25 = sub_10020244C((void *)(v27 > 1), v28 + 1, 1, v25);
                  }
                  void v25[2] = v28 + 1;
                  v25[v28 + 4] = v26;
                }
                else
                {
                  sub_10000AB68((uint64_t)&v83);
                }
                v24 += 32;
                --v23;
              }
              while (v23);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v25 = _swiftEmptyArrayStorage;
            }
            id v29 = [v18 name];
            uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v32 = v31;

            sub_100007620(&qword_1002F4E28);
            uint64_t v33 = swift_allocObject();
            *(_OWORD *)(v33 + 16) = v75;
            *(void *)(v33 + 32) = v30;
            *(void *)(v33 + 40) = v32;
            *(void *)(v33 + 48) = v25;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v33);
            swift_bridgeObjectRelease();
            if (v25[2] >= 3uLL) {
              uint64_t v34 = 3;
            }
            else {
              uint64_t v34 = v25[2];
            }
            type metadata accessor for __ContiguousArrayStorageBase();
            swift_unknownObjectRetain_n();
            uint64_t v35 = (void *)swift_dynamicCastClass();
            if (!v35)
            {
              swift_bridgeObjectRelease();
              uint64_t v35 = _swiftEmptyArrayStorage;
            }
            uint64_t v36 = v35[2];
            swift_release();
            if (v36 == v34)
            {
              if (!swift_dynamicCastClass()) {
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_100225544((uint64_t)v25, (uint64_t)(v25 + 4), 0, (2 * v34) | 1);
            }
            swift_bridgeObjectRelease();
            *(void *)&long long v83 = v30;
            *((void *)&v83 + 1) = v32;
            id v84 = v25;
            NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v16 = v77;
            unint64_t v15 = v78;
            if (v17 == v77) {
              goto LABEL_45;
            }
          }
          else
          {
            swift_unknownObjectRelease();
            if (v17 == v16) {
              goto LABEL_45;
            }
          }
        }
        uint64_t v18 = *(void **)(v74 + 8 * v17);
        swift_unknownObjectRetain();
        BOOL v19 = __OFADD__(v17++, 1);
        if (!v19) {
          goto LABEL_20;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        swift_bridgeObjectRetain();
      }
LABEL_45:
      swift_bridgeObjectRelease_n();
      uint64_t v2 = v72;
      uint64_t v5 = v80;
      a1 = HIDWORD(v71);
      uint64_t v12 = &selRef_initWithTagSchemes_options_;
    }
  }
  id v37 = sub_1000F119C();
  if (!v37
    || (Swift::String v38 = v37, v39 = [v37 fetchedObjects],
                   v38,
                   !v39))
  {
LABEL_58:
    if (a1) {
      goto LABEL_69;
    }
    goto LABEL_59;
  }
  type metadata accessor for PersistedTranslation();
  unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v72 = v2;
  HIDWORD(v71) = a1;
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    int64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v41 >= 1)
    {
LABEL_50:
      NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1002C81C0);
      *(void *)&long long v83 = _swiftEmptyArrayStorage;
      sub_1000B2D04(0, v41, 0);
      uint64_t v42 = 0;
      uint64_t v43 = v83;
      do
      {
        if ((v40 & 0xC000000000000001) != 0) {
          id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v44 = *(id *)(v40 + 8 * v42 + 32);
        }
        unint64_t v45 = (unint64_t)v44;
        *(void *)&long long v83 = v43;
        unint64_t v47 = *(void *)(v43 + 16);
        unint64_t v46 = *(void *)(v43 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1000B2D04(v46 > 1, v47 + 1, 1);
          uint64_t v43 = v83;
        }
        ++v42;
        *(void *)(v43 + 16) = v47 + 1;
        *(void *)(v43 + 8 * v47 + 32) = v45 | 0x4000000000000000;
      }
      while (v41 != v42);
      swift_bridgeObjectRelease();
      long long v83 = xmmword_10024FEC0;
      id v84 = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      uint64_t v2 = v72;
      LOBYTE(a1) = BYTE4(v71);
      uint64_t v12 = &selRef_initWithTagSchemes_options_;
      goto LABEL_58;
    }
  }
  else
  {
    int64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v41 >= 1) {
      goto LABEL_50;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = v72;
  if ((v71 & 0x100000000) != 0) {
    goto LABEL_69;
  }
LABEL_59:
  uint64_t v48 = sub_1000F119C();
  if (v48)
  {
    uint64_t v49 = v48;
    id v50 = [v48 fetchedObjects];

    if (v50)
    {
      type metadata accessor for PersistedTranslation();
      unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v51 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v52)
      {
        if (qword_1002EE6C8 != -1) {
          swift_once();
        }
        uint64_t v53 = sub_100007620(&qword_1002F4E20);
        sub_100011554(v53, (uint64_t)qword_10030EC38);
        Tips.Event.sendDonation<>(_:)();
      }
    }
  }
LABEL_69:
  unint64_t v54 = sub_1000F0E98();
  if (v54 && (uint64_t v55 = v54, v56 = [v54 v12[59]], v55, v56))
  {
    sub_100007620(&qword_1002F4E18);
    unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v57 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v59 = v58 != 0;
  }
  else
  {
    BOOL v59 = 0;
  }
  if (qword_1002EE6D0 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_100007620(&qword_1002EEEE8);
  sub_100011554(v60, (uint64_t)qword_10030EC50);
  v82[0] = v59;
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  swift_endAccess();
  if (qword_1002EE5F0 != -1) {
    swift_once();
  }
  uint64_t v61 = type metadata accessor for Logger();
  sub_100011554(v61, (uint64_t)qword_10030E9D8);
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 134217984;
    swift_beginAccess();
    uint64_t v65 = *(void *)(NSDiffableDataSourceSnapshot.itemIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    *(void *)&long long v83 = v65;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "Snapshot identifiers count: %ld", v64, 0xCu);
    swift_slowDealloc();
  }

  id v66 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource);
  if (v66)
  {
    swift_beginAccess();
    id v67 = v66;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  swift_beginAccess();
  uint64_t v68 = v81;
  char v69 = NSDiffableDataSourceSnapshot.numberOfSections.getter() < 1;
  sub_1000E43D4(v69);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v5, v68);
}

void *sub_1000F0E98()
{
  return sub_1000F11BC(&OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoritesResultsController, (uint64_t (*)(uint64_t))sub_1000F0EB8);
}

id sub_1000F0EB8(uint64_t a1)
{
  type metadata accessor for PersistedTranslation();
  uint64_t v2 = (id)static PersistedTranslation.favoritedSortedByLocalePairAndCreationDateFetchRequest()();
  uint64_t v3 = (void *)dispatch thunk of TranslationStoreCoreData.viewContext.getter();
  id v4 = objc_allocWithZone((Class)NSFetchedResultsController);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithFetchRequest:v2 managedObjectContext:v3 sectionNameKeyPath:v5 cacheName:0];

  [v6 setDelegate:a1];
  id v16 = 0;
  if ([v6 performFetch:&v16])
  {
    id v7 = v16;
  }
  else
  {
    id v8 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1002EE5F0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030E9D8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      id v14 = (void *)_convertErrorToNSError(_:)();
      id v16 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to do initial fetch of favorites results: %@", v12, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v2 = v10;
    }
  }

  return v6;
}

void *sub_1000F119C()
{
  return sub_1000F11BC(&OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___recentsResultsController, (uint64_t (*)(uint64_t))sub_1000F122C);
}

void *sub_1000F11BC(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  NSString v5 = v4;
  if (v4 == (void *)1)
  {
    NSString v5 = (void *)a2(v2);
    id v6 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v5;
    id v7 = v5;
    sub_1000E8DD0(v6);
  }
  sub_1000E91F4(v4);
  return v5;
}

id sub_1000F122C(uint64_t a1)
{
  id v29 = (unint64_t *)&_swiftEmptyArrayStorage;
  swift_retain();
  swift_retain();
  sub_1000B2CE4(0, 2, 0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  id v2 = v27;
  unint64_t v3 = v28;
  id v4 = (unint64_t *)&_swiftEmptyArrayStorage;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1000B2CE4(0, *((void *)&_swiftEmptyArrayStorage + 2) + 1, 1);
    id v4 = v29;
  }
  unint64_t v6 = v4[2];
  unint64_t v5 = v4[3];
  if (v6 >= v5 >> 1)
  {
    sub_1000B2CE4(v5 > 1, v6 + 1, 1);
    id v4 = v29;
  }
  v4[2] = v6 + 1;
  id v7 = (char *)&v4[2 * v6];
  *((void *)v7 + 4) = v2;
  *((void *)v7 + 5) = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v8 = (unint64_t)v27;
  unint64_t v9 = v28;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_1000B2CE4(0, v4[2] + 1, 1);
  }
  uint64_t v10 = v29;
  unint64_t v12 = v29[2];
  unint64_t v11 = v29[3];
  if (v12 >= v11 >> 1)
  {
    sub_1000B2CE4(v11 > 1, v12 + 1, 1);
    uint64_t v10 = v29;
  }
  v10[2] = v12 + 1;
  uint64_t v13 = &v10[2 * v12];
  v13[4] = v8;
  v13[5] = v9;
  swift_release();
  swift_release();
  type metadata accessor for PersistedTranslation();
  id v14 = (void *)static PersistedTranslation.sortedByCreationDateFetchRequest(sessionIDs:)();
  swift_release();
  unint64_t v15 = v14;
  id v16 = (void *)dispatch thunk of TranslationStoreCoreData.viewContext.getter();
  id v17 = [objc_allocWithZone((Class)NSFetchedResultsController) initWithFetchRequest:v15 managedObjectContext:v16 sectionNameKeyPath:0 cacheName:0];

  [v17 setDelegate:a1];
  id v27 = 0;
  if ([v17 performFetch:&v27])
  {
    id v18 = v27;
  }
  else
  {
    id v19 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1002EE5F0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100011554(v20, (uint64_t)qword_10030E9D8);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      uint64_t v25 = (void *)_convertErrorToNSError(_:)();
      id v27 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v24 = v25;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed initial fetch of recents: %@", v23, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      unint64_t v15 = v21;
    }
  }

  return v17;
}

void sub_1000F16C8()
{
  uint64_t v0 = sub_1000F119C();
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [v0 fetchRequest];
    type metadata accessor for PersistedTranslation();
    unint64_t v3 = (void *)static PersistedTranslation.sortedByCreationDateFetchRequest(sessionIDs:)();
    id v4 = [v3 predicate];

    [v2 setPredicate:v4];
    id v16 = 0;
    if ([v1 performFetch:&v16])
    {
      id v5 = v16;
    }
    else
    {
      id v6 = v16;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1002EE5F0 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030E9D8);
      swift_bridgeObjectRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_errorRetain();
      unint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        unint64_t v11 = (void *)swift_slowAlloc();
        id v16 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 136446466;
        swift_bridgeObjectRetain();
        uint64_t v12 = Array.description.getter();
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        sub_100202FD4(v12, v14, (uint64_t *)&v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2112;
        uint64_t v15 = _convertErrorToNSError(_:)();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v11 = v15;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to update recent query for session IDs %{public}s: %@", (uint8_t *)v10, 0x16u);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

id sub_1000F1A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_subscriptions] = &_swiftEmptySetSingleton;
  v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoriteTranslationsTip] = 1;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_favoriteTranslationsTipUpdates] = 0;
  id v5 = &v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip];
  *id v5 = 0;
  v5[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoritesResultsController] = 1;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___recentsResultsController] = 1;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_collectionView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_dataSource] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_store] = a1;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_ttsManager] = a2;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_translationSession] = a3;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator27FavoritesCardListController_conversationSession] = a4;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for FavoritesCardListController();
  return [super initWithNibName:0 bundle:0];
}

id sub_1000F1B38(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_subscriptions] = &_swiftEmptySetSingleton;
  v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoriteTranslationsTip] = 1;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController_favoriteTranslationsTipUpdates] = 0;
  unint64_t v3 = &v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip];
  *unint64_t v3 = 0;
  v3[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoritesResultsController] = 1;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___recentsResultsController] = 1;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for FavoritesListController();
  id v4 = [super initWithCoder:a1];

  return v4;
}

void sub_1000F1C08()
{
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000324E4(*(void *)(v0
                          + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___invalidateFavoriteTranslationsTip));
  sub_1000E8DD0(*(id *)(v0
                      + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___favoritesResultsController));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator23FavoritesListController____lazy_storage___recentsResultsController);

  sub_1000E8DD0(v1);
}

id sub_1000F1C7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FavoritesListController();
  return [super dealloc];
}

uint64_t type metadata accessor for FavoritesListController()
{
  return self;
}

unint64_t sub_1000F1D54()
{
  unint64_t result = qword_1002F4E10;
  if (!qword_1002F4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4E10);
  }
  return result;
}

uint64_t sub_1000F1DA8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F1DE0(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_1000EEEC4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000F1DE8()
{
  return sub_1000E902C(&qword_1002F4C10);
}

uint64_t sub_1000F1DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100007620(&qword_1002F4C10);

  return sub_1000EF7E4(a1, a2, a3);
}

uint64_t sub_1000F1E80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F1EB8(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 16))(a1, a2, *a3);
}

uint64_t sub_1000F1EE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1000F1F1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000EF87C(a1, a2, a3, a4);
}

uint64_t sub_1000F1F24()
{
  return sub_1000E902C(&qword_1002F4C08);
}

uint64_t sub_1000F1F30()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_1000F1FC8()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000F2018(uint64_t a1)
{
  sub_1000F01E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000F2024(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      do
      {
        uint64_t v5 = v4 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v6 = *(void *)(a1 + 8 * v4);
          swift_retain();
          uint64_t v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v19 = v7;
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v8 = v6;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        id v9 = [a2 sessionID];
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;

        if (v17 == v10 && v18 == v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_17;
        }
        swift_release();
        ++v4;
      }
      while (v19 != v3);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000F2220@<X0>(uint64_t a1@<X8>)
{
  return sub_1000EF500(a1);
}

uint64_t sub_1000F2228()
{
  return sub_1000EF36C();
}

uint64_t sub_1000F2230(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F2288()
{
  return sub_1000ED510();
}

uint64_t sub_1000F2290()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F22D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100021B58;
  return sub_1000EDDC0(a1, v4, v5, v6);
}

uint64_t sub_1000F2384(uint64_t *a1)
{
  return sub_1000EDB10(a1);
}

char *sub_1000F238C(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = &v13[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    char v8 = *((unsigned char *)a2 + 8);
    sub_1000F2480(*a2, v8);
    *(void *)a1 = v7;
    a1[8] = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_100007620(&qword_1002F4EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

id sub_1000F2480(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_1000F248C(uint64_t a1, uint64_t a2)
{
  sub_1000F250C(*(id *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_100007620(&qword_1002F4EE0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void sub_1000F250C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_1000F2518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000F2480(*(id *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100007620(&qword_1002F4EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_1000F25BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *(id *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1000F2480(*(id *)a2, v7);
  uint64_t v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000F250C(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100007620(&qword_1002F4EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1000F266C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100007620(&qword_1002F4EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1000F26F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void **)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_1000F250C(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = sub_100007620(&qword_1002F4EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1000F2790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F27A4);
}

uint64_t sub_1000F27A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F4EE0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F2850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F2864);
}

uint64_t sub_1000F2864(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F4EE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FavoritesSideBarListView()
{
  uint64_t result = qword_1002F4F40;
  if (!qword_1002F4F40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F2958()
{
  sub_1000F29F0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000F29F0()
{
  if (!qword_1002F4F50)
  {
    type metadata accessor for PersistedTranslation();
    unint64_t Request = type metadata accessor for FetchRequest();
    if (!v1) {
      atomic_store(Request, (unint64_t *)&qword_1002F4F50);
    }
  }
}

uint64_t sub_1000F2A48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F2A64()
{
  uint64_t v0 = sub_100007620(&qword_1002F4FF0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FavoritesSideBarListView();
  sub_100007620(&qword_1002F4EE0);
  FetchRequest.wrappedValue.getter();
  sub_100014894(&qword_1002F4FF8, &qword_1002F4FF0);
  uint64_t v4 = dispatch thunk of Collection.count.getter();
  if (!v4)
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    unint64_t v21 = &_swiftEmptySetSingleton;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000F3B48(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  uint64_t v5 = v4;
  os_log_type_t v22 = _swiftEmptyArrayStorage;
  sub_1000B2CE4(0, v4 & ~(v4 >> 63), 0);
  uint64_t v6 = v22;
  uint64_t result = dispatch thunk of Collection.startIndex.getter();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = v1;
    do
    {
      uint64_t v8 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
      id v10 = *v9;
      v8(&v21, 0);
      id v11 = [v10 displayLocalePairText];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      os_log_type_t v22 = v6;
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        sub_1000B2CE4(v15 > 1, v16 + 1, 1);
        uint64_t v6 = v22;
      }
      void v6[2] = v16 + 1;
      uint64_t v17 = &v6[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
      dispatch thunk of Collection.formIndex(after:)();
      --v5;
    }
    while (v5);
    uint64_t v1 = v20;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000F2D00()
{
  uint64_t v0 = sub_100007620(&qword_1002F3AA8);
  __chkstk_darwin(v0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v1 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  View.accessibilityIdentifier(_:)();
  sub_10001FC84(v1, v3, v5);
  swift_bridgeObjectRelease();
  sub_100007620(&qword_1002F4F80);
  sub_1000B8970();
  sub_100014894(&qword_1002F4F88, &qword_1002F4F80);
  return Section<>.init(header:content:)();
}

uint64_t sub_1000F2EC4@<X0>(char *a1@<X8>)
{
  id v27 = a1;
  uint64_t v1 = sub_100007620(&qword_1002F4F90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v28 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_100007620(&qword_1002F4F98);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = v26;
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  long long v31 = xmmword_100248B00;
  sub_100007620(&qword_1002F4FA0);
  sub_1000F38E8();
  sub_10000CA98();
  uint64_t v25 = v13;
  NavigationLink<>.init<A>(value:label:)();
  *(void *)&long long v31 = sub_1000F2A64();
  swift_getKeyPath();
  sub_100007620(&qword_1002EE8A8);
  sub_100007620(&qword_1002F4FD0);
  sub_100014894(&qword_1002F4FD8, &qword_1002EE8A8);
  sub_100014894(&qword_1002F4FE0, &qword_1002F4FD0);
  uint64_t v23 = v6;
  ForEach<>.init(_:id:content:)();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v24 = v11;
  v14(v11, v13, v7);
  uint64_t v15 = v29;
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v17 = v28;
  v16(v28, v6, v29);
  uint64_t v18 = v27;
  v14(v27, v11, v7);
  uint64_t v19 = sub_100007620(&qword_1002F4FE8);
  v16(&v18[*(int *)(v19 + 48)], v17, v15);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v30 + 8);
  v20(v23, v15);
  unint64_t v21 = *(void (**)(char *, uint64_t))(v26 + 8);
  v21(v25, v7);
  v20(v17, v15);
  return ((uint64_t (*)(char *, uint64_t))v21)(v24, v7);
}

uint64_t sub_1000F3270@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v1 = sub_100007620(&qword_1002F5000);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EED40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F4FB8);
  uint64_t v9 = __chkstk_darwin(v8);
  id v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v15 - v12;
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  swift_storeEnumTagMultiPayload();
  sub_100007620(&qword_1002F4FC8);
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  sub_1000F3A28(&qword_1002F4FC0, &qword_1002F4FC8, (void (*)(void))sub_10000C164);
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000F3CB4((uint64_t)v11, (uint64_t)v13);
  sub_1000F3964();
  View.accessibilityIdentifier(_:)();
  return sub_10000B070((uint64_t)v13, &qword_1002F4FB8);
}

uint64_t sub_1000F3544()
{
  return NavigationLink<>.init<A>(value:label:)();
}

uint64_t sub_1000F35FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v18[1] = a3;
  uint64_t v5 = sub_100007620(&qword_1002EED48);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002EED30);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_100007620(&qword_1002EED38);
  __chkstk_darwin(v18[0]);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EED40);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v18[2] = a1;
  v18[3] = a2;
  sub_10000C350();
  swift_bridgeObjectRetain();
  Label<>.init<A>(_:systemImage:)();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v16, v13);
  swift_storeEnumTagMultiPayload();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  _ConditionalContent<>.init(storage:)();
  sub_1000F3AE0((uint64_t)v12, (uint64_t)v7);
  swift_storeEnumTagMultiPayload();
  sub_100007620(&qword_1002EED68);
  sub_10000C164();
  sub_10000C2CC();
  _ConditionalContent<>.init(storage:)();
  sub_10000B070((uint64_t)v12, &qword_1002EED38);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1000F38E0@<X0>(char *a1@<X8>)
{
  return sub_1000F2EC4(a1);
}

unint64_t sub_1000F38E8()
{
  unint64_t result = qword_1002F4FA8;
  if (!qword_1002F4FA8)
  {
    sub_100007928(&qword_1002F4FA0);
    sub_1000F3964();
    sub_100015068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4FA8);
  }
  return result;
}

unint64_t sub_1000F3964()
{
  unint64_t result = qword_1002F4FB0;
  if (!qword_1002F4FB0)
  {
    sub_100007928(&qword_1002F4FB8);
    sub_100014894(&qword_1002EED78, &qword_1002EED40);
    sub_1000F3A28(&qword_1002F4FC0, &qword_1002F4FC8, (void (*)(void))sub_10000C164);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F4FB0);
  }
  return result;
}

uint64_t sub_1000F3A28(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    sub_10000C2CC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F3AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = String.hashValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000F3AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000F35FC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1000F3AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EED38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F3B48(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  uint64_t v5 = _swiftEmptyArrayStorage;
  uint64_t v15 = result + 40;
  unint64_t v16 = *(void *)(result + 16);
  do
  {
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (uint64_t i = (Swift::Int *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      Swift::Int v10 = *(i - 1);
      Swift::Int v9 = *i;
      swift_bridgeObjectRetain_n();
      char v11 = sub_100195EB0(&v17, v10, v9);
      swift_bridgeObjectRelease();
      if (v11) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return (uint64_t)v5;
      }
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v5;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000B2CE4(0, v5[2] + 1, 1);
      uint64_t v5 = v18;
    }
    unint64_t v13 = v5[2];
    unint64_t v12 = v5[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t result = sub_1000B2CE4(v12 > 1, v13 + 1, 1);
      uint64_t v5 = v18;
    }
    uint64_t v5[2] = v13 + 1;
    uint64_t v14 = &v5[2 * v13];
    v14[4] = v10;
    v14[5] = v9;
    uint64_t v3 = v15;
    unint64_t v1 = v16;
  }
  while (v4 + v2);
  return (uint64_t)v5;
}

uint64_t sub_1000F3CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F4FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000F3D20()
{
  unint64_t result = qword_1002F5008;
  if (!qword_1002F5008)
  {
    sub_100007928(&qword_1002F5010);
    sub_1000B8970();
    sub_100014894(&qword_1002F4F88, &qword_1002F4F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5008);
  }
  return result;
}

uint64_t *sub_1000F3DCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    a1[3] = a2[3];
    uint64_t v7 = *(int *)(a3 + 32);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    Swift::Int v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100007620(&qword_1002F1058);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000F3FB8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_1000F40F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_100007620(&qword_1002F1058);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1000F4294(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10000B070((uint64_t)a1 + v6, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1000F4484(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      uint64_t v11 = sub_100007620(&qword_1002F1058);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v6, v7, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

void *sub_1000F4604(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_10000B070((uint64_t)a1 + v6, (uint64_t *)&unk_1002F5770);
    uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000F47DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F47F0);
}

uint64_t sub_1000F47F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F1068);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F48A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F48B8);
}

void *sub_1000F48B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1068);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FavoritesView()
{
  uint64_t result = qword_1002F5070;
  if (!qword_1002F5070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F49B0()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000F4A50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000F4A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1200);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F1058);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  Swift::Int v17 = (char *)&v26 - v16;
  type metadata accessor for FavoritesView();
  sub_100100194((uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v15, enum case for UserInterfaceSizeClass.regular(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v15, 0, 1, v1);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_1000860A4((uint64_t)v17, (uint64_t)v8);
  sub_1000860A4((uint64_t)v15, v18);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v19((uint64_t)v8, 1, v1) != 1)
  {
    sub_1000860A4((uint64_t)v8, (uint64_t)v12);
    if (v19(v18, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v18, v1);
      sub_1000EAB04();
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_10000B070((uint64_t)v15, &qword_1002F1058);
      sub_10000B070((uint64_t)v17, &qword_1002F1058);
      v21(v12, v1);
      sub_10000B070((uint64_t)v8, &qword_1002F1058);
      if (v20) {
        goto LABEL_8;
      }
LABEL_9:
      os_log_type_t v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.automatic(_:);
      goto LABEL_10;
    }
    sub_10000B070((uint64_t)v15, &qword_1002F1058);
    sub_10000B070((uint64_t)v17, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
LABEL_6:
    sub_10000B070((uint64_t)v8, &qword_1002F1200);
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v15, &qword_1002F1058);
  sub_10000B070((uint64_t)v17, &qword_1002F1058);
  if (v19(v18, 1, v1) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v8, &qword_1002F1058);
LABEL_8:
  os_log_type_t v22 = (unsigned int *)&enum case for NavigationBarItem.TitleDisplayMode.inline(_:);
LABEL_10:
  uint64_t v23 = *v22;
  uint64_t v24 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_1000F4E68()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F1058);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v21 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v21 - v15;
  type metadata accessor for FavoritesView();
  sub_100100194((uint64_t)v16);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_1000860A4((uint64_t)v16, (uint64_t)v7);
  sub_1000860A4((uint64_t)v14, v17);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v7, 1, v0) != 1)
  {
    sub_1000860A4((uint64_t)v7, (uint64_t)v11);
    if (v18(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_1000EAB04();
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v1 + 8);
      v19(v3, v0);
      sub_10000B070((uint64_t)v14, &qword_1002F1058);
      sub_10000B070((uint64_t)v16, &qword_1002F1058);
      v19(v11, v0);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
      return LocalizedStringKey.init(stringLiteral:)();
    }
    sub_10000B070((uint64_t)v14, &qword_1002F1058);
    sub_10000B070((uint64_t)v16, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v14, &qword_1002F1058);
  sub_10000B070((uint64_t)v16, &qword_1002F1058);
  if (v18(v17, 1, v0) != 1)
  {
LABEL_6:
    sub_10000B070((uint64_t)v7, &qword_1002F1200);
    return LocalizedStringKey.init(stringLiteral:)();
  }
  sub_10000B070((uint64_t)v7, &qword_1002F1058);
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_1000F5234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v3 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F50B8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  uint64_t v23 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  unint64_t v12 = v2[1];
  uint64_t v13 = v2[2];
  uint64_t v14 = v2[3];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v15 = static SafeAreaRegions.container.getter();
  char v16 = static Edge.Set.all.getter();
  uint64_t v25 = v11;
  unint64_t v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v14;
  uint64_t v29 = v15;
  char v30 = v16;
  sub_1000F4A6C((uint64_t)v6);
  uint64_t v17 = sub_100007620(&qword_1002F50C0);
  unint64_t v18 = sub_1000F54C0();
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000F4E68();
  uint64_t v25 = v17;
  unint64_t v26 = v18;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v22;
  View.navigationBarTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v19);
}

unint64_t sub_1000F54C0()
{
  unint64_t result = qword_1002F50C8;
  if (!qword_1002F50C8)
  {
    sub_100007928(&qword_1002F50C0);
    sub_1000ED1F8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F50C8);
  }
  return result;
}

uint64_t sub_1000F553C()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for VisualIntelligenceFeatures(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000F5668);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisualIntelligenceFeatures()
{
  return &type metadata for VisualIntelligenceFeatures;
}

uint64_t getEnumTagSinglePayload for TranslateFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranslateFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F57FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranslateFeatures()
{
  return &type metadata for TranslateFeatures;
}

unint64_t sub_1000F5838()
{
  unint64_t result = qword_1002F50D0;
  if (!qword_1002F50D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F50D0);
  }
  return result;
}

const char *sub_1000F588C()
{
  return "VisualIntelligence";
}

const char *sub_1000F58A0()
{
  return "OpticalFlowTracking";
}

const char *sub_1000F58B4(char a1)
{
  unint64_t result = "camera_input";
  switch(a1)
  {
    case 1:
      unint64_t result = "kakapo";
      break;
    case 2:
      unint64_t result = "refresh_translate_app";
      break;
    case 3:
      unint64_t result = "refresh_system_translation";
      break;
    case 4:
      unint64_t result = "refresh_streaming";
      break;
    case 5:
      unint64_t result = "genderDisambiguation";
      break;
    case 6:
      unint64_t result = "romanization";
      break;
    case 7:
      unint64_t result = "staccato";
      break;
    case 8:
      unint64_t result = "extendedConversation";
      break;
    case 9:
      unint64_t result = "recordingTonesAndHaptics";
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000F59C0()
{
  unint64_t result = qword_1002F50D8;
  if (!qword_1002F50D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F50D8);
  }
  return result;
}

const char *sub_1000F5A14()
{
  return "Translate";
}

const char *sub_1000F5A28()
{
  return sub_1000F58B4(*v0);
}

id sub_1000F5AA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FlamesView.Coordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for FlamesView.Coordinator()
{
  return self;
}

void sub_1000F5AFC(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *a3 = v10;
  a3[1] = v12;
  id v13 = [a1 creationDate];
  if (v13)
  {
    uint64_t v14 = v13;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
  }
  else
  {
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  }
  uint64_t v17 = (int *)type metadata accessor for GenderTipManager.Registration(0);
  sub_1000F6A18((uint64_t)v8, (uint64_t)a3 + v17[5]);
  unint64_t v18 = (void *)dispatch thunk of PersistedTranslation.disambiguableResult.getter();
  if (v18)
  {
    uint64_t v19 = v18;
    unsigned __int8 v20 = [v18 hasDisambiguationsOfType:1];
  }
  else
  {
    unsigned __int8 v20 = 0;
  }

  *((unsigned char *)a3 + v17[6]) = v20;
  *((unsigned char *)a3 + v17[7]) = a2 & 1;
}

uint64_t sub_1000F5CB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000F5D28(void *a1)
{
  uint64_t v3 = sub_100007620(&qword_1002F8BA0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)v29 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = type metadata accessor for GenderTipManager.Registration(0);
  if (*((unsigned char *)a1 + *(int *)(v16 + 24)) == 1)
  {
    uint64_t v17 = v16;
    v29[0] = v10;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v30)
    {
      if (v29[1] == *a1 && v30 == a1[1])
      {
        swift_bridgeObjectRelease();
        char v18 = 1;
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v19 = v1 + OBJC_IVAR____TtC17SequoiaTranslator16GenderTipManager_mostRecentCreationDate;
      swift_beginAccess();
      sub_1000786D8(v19, (uint64_t)v8);
      uint64_t v20 = v29[0];
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29[0] + 48);
      if (v21(v8, 1, v9) == 1)
      {
        uint64_t v22 = (uint64_t)v8;
      }
      else
      {
        uint64_t v23 = v8;
        uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
        v24(v15, v23, v9);
        sub_1000786D8((uint64_t)a1 + *(int *)(v17 + 20), (uint64_t)v6);
        if (v21(v6, 1, v9) != 1)
        {
          v24(v13, v6, v9);
          Date.timeIntervalSince(_:)();
          double v26 = v25;
          uint64_t v27 = *(void (**)(char *, uint64_t))(v29[0] + 8);
          v27(v13, v9);
          v27(v15, v9);
          char v18 = v26 > 0.0;
          return v18 & 1;
        }
        (*(void (**)(char *, uint64_t))(v29[0] + 8))(v15, v9);
        uint64_t v22 = (uint64_t)v6;
      }
      sub_1000F6A80(v22);
      char v18 = 1;
    }
  }
  else
  {
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1000F6070(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v53 - v6;
  uint64_t v7 = (int *)type metadata accessor for GenderTipManager.Registration(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F8BA0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v56 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v55 = (char *)&v53 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v53 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t result = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v24 = v7[6];
  BOOL v59 = a1;
  if (*((unsigned char *)a1 + v24) == 1)
  {
    uint64_t v25 = (uint64_t)v59;
    uint64_t v26 = (uint64_t)v59 + v7[5];
    sub_1000786D8(v26, (uint64_t)&v53 - v22);
    uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    uint64_t v54 = v2;
    unsigned int v27 = v53(v23, 1, v2);
    sub_1000F6A80((uint64_t)v23);
    sub_1000F6AE0(v25, (uint64_t)v9);
    if (v27 == 1)
    {
      char v28 = v9[v7[7]];
      uint64_t result = sub_1000492B4((uint64_t)v9);
      uint64_t v29 = v54;
      uint64_t v30 = v5;
      if ((v28 & 1) == 0) {
        return result;
      }
    }
    else
    {
      sub_1000492B4((uint64_t)v9);
      uint64_t v29 = v54;
      uint64_t v30 = v5;
    }
    sub_1000786D8(v26, (uint64_t)v20);
    long long v31 = v53;
    if (v53(v20, 1, v29) == 1)
    {
      uint64_t v32 = v58;
      static Date.now.getter();
      sub_1000F6A80((uint64_t)v20);
    }
    else
    {
      uint64_t v32 = v58;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v58, v20, v29);
    }
    uint64_t v33 = v57 + OBJC_IVAR____TtC17SequoiaTranslator16GenderTipManager_mostRecentCreationDate;
    swift_beginAccess();
    sub_1000786D8(v33, (uint64_t)v17);
    if (v31(v17, 1, v29) == 1)
    {
      sub_1000F6A80((uint64_t)v17);
      uint64_t v34 = v60;
      uint64_t v35 = v55;
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v55, v32, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v29);
      uint64_t v36 = (uint64_t)v35;
      uint64_t v37 = v56;
      sub_1000F6A18(v36, v56);
      swift_beginAccess();
      sub_10006E800(v37, v33);
      swift_endAccess();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v38 = *v59;
      uint64_t v39 = v59[1];
      if (v62)
      {
        if (v61 == v38 && v62 == v39)
        {
          swift_bridgeObjectRelease();
          uint64_t v40 = v54;
          return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v58, v40);
        }
        char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v40 = v54;
        if (v50) {
          return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v58, v40);
        }
      }
      else
      {
        uint64_t v40 = v54;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v61 = v38;
      uint64_t v62 = v39;
      swift_retain();
      swift_bridgeObjectRetain();
      static Published.subscript.setter();
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v58, v40);
    }
    uint64_t v41 = v60;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v30, v17, v29);
    Date.timeIntervalSince(_:)();
    if (v42 <= 0.0)
    {
      uint64_t v49 = *(void (**)(char *, uint64_t))(v41 + 8);
      v49(v30, v29);
      return ((uint64_t (*)(char *, uint64_t))v49)(v32, v29);
    }
    uint64_t v43 = v55;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v55, v32, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v43, 0, 1, v29);
    uint64_t v44 = (uint64_t)v43;
    uint64_t v45 = v56;
    sub_1000F6A18(v44, v56);
    swift_beginAccess();
    sub_10006E800(v45, v33);
    swift_endAccess();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v47 = *v59;
    uint64_t v46 = v59[1];
    if (v62)
    {
      if (v61 == v47 && v62 == v46)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = v54;
        goto LABEL_27;
      }
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v48 = v54;
      if (v51)
      {
LABEL_27:
        uint64_t v52 = *(void (**)(char *, uint64_t))(v41 + 8);
        v52(v30, v48);
        return ((uint64_t (*)(char *, uint64_t))v52)(v58, v48);
      }
    }
    else
    {
      uint64_t v48 = v54;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v61 = v47;
    uint64_t v62 = v46;
    swift_bridgeObjectRetain();
    swift_retain();
    static Published.subscript.setter();
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_1000F675C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator16GenderTipManager__allowedTranslationID;
  uint64_t v2 = sub_100007620(&qword_1002EF7C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000F6A80(v0 + OBJC_IVAR____TtC17SequoiaTranslator16GenderTipManager_mostRecentCreationDate);

  return swift_deallocClassInstance();
}

uint64_t sub_1000F6810()
{
  return type metadata accessor for GenderTipManager(0);
}

uint64_t type metadata accessor for GenderTipManager(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F51A8);
}

void sub_1000F6838()
{
  sub_1000F6904();
  if (v0 <= 0x3F)
  {
    sub_1000F6960();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000F6904()
{
  if (!qword_1002F32F0)
  {
    sub_100007928(&qword_1002F1378);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F32F0);
    }
  }
}

void sub_1000F6960()
{
  if (!qword_1002F2B90)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F2B90);
    }
  }
}

uint64_t sub_1000F69B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GenderTipManager(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for GenderTipManager.Registration(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F5308);
}

uint64_t sub_1000F6A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F6A80(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8BA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000F6AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GenderTipManager.Registration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1000F6B44@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000F6BC8()
{
  return static Published.subscript.setter();
}

void *sub_1000F6C50(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100007620(&qword_1002F8BA0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v16) = *((unsigned char *)a2 + v16);
  }
  return v4;
}

uint64_t sub_1000F6DE8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1000F6EB8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100007620(&qword_1002F8BA0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  return a1;
}

void *sub_1000F7000(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_1000F71B8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *sub_1000F72F0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007620(&qword_1002F8BA0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v16) = *((unsigned char *)a2 + v16);
  return a1;
}

uint64_t sub_1000F7494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F74A8);
}

uint64_t sub_1000F74A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F8BA0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F755C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F7570);
}

uint64_t sub_1000F7570(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F8BA0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000F761C()
{
  sub_1000F6960();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for GenderTipManager.Registration.Location(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F778CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenderTipManager.Registration.Location()
{
  return &type metadata for GenderTipManager.Registration.Location;
}

unint64_t sub_1000F77C8()
{
  unint64_t result = qword_1002F5348;
  if (!qword_1002F5348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5348);
  }
  return result;
}

Swift::Int sub_1000F781C()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F7938()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F79E4()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F7AE4()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F7BCC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F7CE4()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F7E04()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F7F3C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F8040()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F812C()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F8228()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F82D0()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F83E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F84CC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F85E0()
{
  return Hasher._finalize()();
}

Swift::Int sub_1000F86FC()
{
  return Hasher._finalize()();
}

uint64_t sub_1000F8844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000F897C(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE800000000000000;
        unint64_t v10 = 0x6E776F44776F6C73;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x74786554646E6966;
            break;
          case 2:
            unint64_t v9 = 0x8000000100259F30;
            unint64_t v10 = 0xD000000000000013;
            break;
          case 3:
            unint64_t v10 = 0xD000000000000018;
            unint64_t v9 = 0x8000000100259F50;
            break;
          case 4:
            unint64_t v10 = 0xD000000000000017;
            unint64_t v9 = 0x8000000100259F70;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE800000000000000;
        unint64_t v12 = 0x6E776F44776F6C73;
        switch(v8)
        {
          case 1:
            if (v10 == 0x74786554646E6966) {
              goto LABEL_16;
            }
            goto LABEL_17;
          case 2:
            unint64_t v11 = 0x8000000100259F30;
            if (v10 != 0xD000000000000013) {
              goto LABEL_17;
            }
            goto LABEL_16;
          case 3:
            unint64_t v12 = 0xD000000000000018;
            unint64_t v11 = 0x8000000100259F50;
            goto LABEL_15;
          case 4:
            unint64_t v11 = 0x8000000100259F70;
            if (v10 != 0xD000000000000017) {
              goto LABEL_17;
            }
            goto LABEL_16;
          default:
LABEL_15:
            if (v10 != v12) {
              goto LABEL_17;
            }
LABEL_16:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_17:
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1000F8CC4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    switch(a2)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
        break;
      default:
        String.hash(into:)();
        break;
    }
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = ~v7;
      uint64_t v11 = *(void *)(a3 + 48);
      while (1)
      {
        unint64_t v12 = (void *)(v11 + 16 * v8);
        uint64_t v13 = v12[1];
        switch(v13)
        {
          case 0:
            if (a2) {
              goto LABEL_7;
            }
            return 1;
          case 1:
            if (a2 == 1) {
              return 1;
            }
            goto LABEL_7;
          case 2:
            if (a2 == 2) {
              return 1;
            }
            goto LABEL_7;
          case 3:
            if (a2 == 3) {
              return 1;
            }
            goto LABEL_7;
          case 4:
            if (a2 != 4) {
              goto LABEL_7;
            }
            return 1;
          default:
            if (a2 >= 5)
            {
              BOOL v14 = *v12 == a1 && v13 == a2;
              if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                return 1;
              }
            }
LABEL_7:
            unint64_t v8 = (v8 + 1) & v10;
            if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
              return 0;
            }
            break;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1000F8F28(char a1)
{
  uint64_t v1 = (void *)0xE800000000000000;
  uint64_t v2 = 0x6E776F44776F6C73;
  switch(a1)
  {
    case 1:
      uint64_t v2 = 0x74786554646E6966;
      break;
    case 2:
      uint64_t v1 = (void *)0x8000000100259F30;
      uint64_t v2 = 0xD000000000000013;
      break;
    case 3:
      uint64_t v2 = 0xD000000000000018;
      int v3 = "translationTakingTooLong";
      goto LABEL_6;
    case 4:
      uint64_t v2 = 0xD000000000000017;
      int v3 = "tapShutterButtonToPause";
LABEL_6:
      uint64_t v1 = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
      break;
    default:
      break;
  }
  id v4 = [self mainBundle];
  v9._object = (void *)0xE000000000000000;
  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v1;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v9)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

unint64_t sub_1000F9070(char a1)
{
  unint64_t result = 0x6E776F44776F6C73;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x74786554646E6966;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000F9128()
{
  swift_bridgeObjectRetain();
  uint64_t v1 = String.init<A>(_:)();
  String.append<A>(contentsOf:)();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000F926C(unsigned __int8 *a1, char *a2)
{
  return sub_1002371F4(*a1, *a2);
}

Swift::Int sub_1000F9278()
{
  return sub_1000F79E4();
}

uint64_t sub_1000F9280()
{
  return sub_1000F8040();
}

Swift::Int sub_1000F9288()
{
  return sub_1000F812C();
}

unint64_t sub_1000F9290@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000FBE7C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1000F92C0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000F9070(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_1000F92EC(char *a1, char *a2)
{
  return qword_100250550[*a1] < qword_100250550[*a2];
}

BOOL sub_1000F9310(char *a1, char *a2)
{
  return qword_100250550[*a2] >= qword_100250550[*a1];
}

BOOL sub_1000F9334(char *a1, char *a2)
{
  return qword_100250550[*a1] >= qword_100250550[*a2];
}

BOOL sub_1000F9358(char *a1, char *a2)
{
  return qword_100250550[*a2] < qword_100250550[*a1];
}

uint64_t sub_1000F937C()
{
  type metadata accessor for GuidanceModel();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1000FAC9C();
  qword_10030E8A8 = v0;
  return result;
}

uint64_t sub_1000F93BC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_1000F9430(Swift::Int a1, char a2)
{
  uint64_t v3 = v2;
  Swift::String v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_guidances);
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  char v8 = sub_1000F897C(a1, v7);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030E960);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)unint64_t v12 = 136446210;
      uint64_t v13 = String.init<A>(describing:)();
      uint64_t v28 = sub_100202FD4(v13, v14, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Adding guidance: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_beginAccess();
    sub_100196060(&v28, a1);
    swift_endAccess();
  }
  unint64_t v15 = (void **)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer);
  if (!*(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer))
  {
    uint64_t v16 = (void **)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer);
    if (!*(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (aBlock == 5)
      {
        if (a2) {
          double v17 = 3.0;
        }
        else {
          double v17 = 0.0;
        }
        uint64_t v18 = self;
        uint64_t v19 = swift_allocObject();
        swift_weakInit();
        uint64_t v33 = sub_1000FBF08;
        uint64_t v34 = v19;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v30 = 1107296256;
        long long v31 = sub_100158A24;
        uint64_t v32 = &unk_1002CE620;
        uint64_t v20 = _Block_copy(&aBlock);
        swift_release();
        id v21 = [v18 scheduledTimerWithTimeInterval:0 repeats:v20 block:v17];
        unint64_t v15 = v16;
LABEL_14:
        id v22 = v21;
        _Block_release(v20);
        uint64_t v23 = *v15;
        *unint64_t v15 = v22;

        return;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v24)
      {
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x1000F99A0);
      }
      int v25 = aBlock;
      if ((sub_1002371F4(aBlock, a1) & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        unint64_t v26 = 1;
        switch(v25)
        {
          case 0:
            goto LABEL_23;
          case 1:
            unint64_t v26 = 5;
            goto LABEL_23;
          case 2:
            unint64_t v26 = 10;
            goto LABEL_23;
          case 3:
            unint64_t v26 = 8;
            goto LABEL_23;
          case 4:
            unint64_t v26 = 0;
LABEL_23:
            if (v26 >= qword_100250550[(char)a1]) {
              return;
            }
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(aBlock) = a1;
            swift_retain();
            static Published.subscript.setter();
            unsigned int v27 = self;
            uint64_t v33 = sub_1000FBF28;
            uint64_t v34 = v3;
            uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
            uint64_t v30 = 1107296256;
            long long v31 = sub_100158A24;
            uint64_t v32 = &unk_1002CE648;
            uint64_t v20 = _Block_copy(&aBlock);
            swift_retain();
            swift_release();
            id v21 = [v27 scheduledTimerWithTimeInterval:0 repeats:v20 block:2.0];
            break;
          case 5:
            goto LABEL_26;
          default:
            JUMPOUT(0);
        }
        goto LABEL_14;
      }
    }
  }
}

void sub_1000F99B8(void *a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v2 = swift_bridgeObjectRetain();
      uint64_t v3 = sub_1002258EC(v2);
      swift_bridgeObjectRelease();
      aBlock[0] = (uint64_t)v3;
      sub_1000FAEB0(aBlock);
      swift_bridgeObjectRelease();
      uint64_t v4 = *(void *)(aBlock[0] + 16);
      if (v4) {
        char v5 = *(unsigned char *)(v4 + aBlock[0] + 31);
      }
      else {
        char v5 = 5;
      }
      swift_release();
    }
    else
    {
      char v5 = 5;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock[0]) = v5;
    static Published.subscript.setter();
  }
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030E960);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      char v10 = v24;
    }
    else
    {
      char v10 = 5;
    }
    LOBYTE(v24) = v10;
    sub_100007620((uint64_t *)&unk_1002F53C0);
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v24 = sub_100202FD4(v11, v12, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Current guidance set: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (LOBYTE(aBlock[0]) != 5)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v14 = Strong;
        swift_beginAccess();
        uint64_t v15 = swift_weakLoadStrong();
        if (v15)
        {
          uint64_t v16 = v15;
          double v17 = self;
          aBlock[4] = (uint64_t)sub_1000FBF28;
          aBlock[5] = v16;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_100158A24;
          void aBlock[3] = (uint64_t)&unk_1002CE698;
          uint64_t v18 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          id v19 = [v17 scheduledTimerWithTimeInterval:0 repeats:v18 block:2.0];
          _Block_release(v18);
          swift_release();
        }
        else
        {
          id v19 = 0;
        }
        uint64_t v20 = *(void **)(v14 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer);
        *(void *)(v14 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer) = v19;
        swift_release();
      }
    }
  }
  [a1 invalidate];
  swift_beginAccess();
  uint64_t v21 = swift_weakLoadStrong();
  if (v21)
  {
    id v22 = *(void **)(v21 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer);
    *(void *)(v21 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer) = 0;
    swift_release();
  }
}

uint64_t sub_1000F9F00(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_guidances);
  swift_beginAccess();
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  char v6 = sub_1000F897C(a1, v5);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030E960);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v12 = String.init<A>(describing:)();
      sub_100202FD4(v12, v13, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Dropping guidance: %{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_beginAccess();
    sub_1000FB844(a1);
    uint64_t result = swift_endAccess();
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer)
    && !*(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer))
  {
    uint64_t v14 = *v4;
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1002258EC(v14);
    swift_bridgeObjectRelease();
    v18[0] = (uint64_t)v15;
    sub_1000FAEB0(v18);
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v18[0] + 16);
    if (v16) {
      char v17 = *(unsigned char *)(v16 + v18[0] + 31);
    }
    else {
      char v17 = 5;
    }
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v18[0]) = v17;
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

void sub_1000FA1D0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer) invalidate];
  uint64_t v2 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = 0;

  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer) invalidate];
  uint64_t v4 = *(void **)(v0 + v3);
  *(void *)(v0 + v3) = 0;

  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_guidances);
  swift_beginAccess();
  *uint64_t v5 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030E960);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Resetting all guidance", v9, 2u);
    swift_slowDealloc();
  }
}

void sub_1000FA36C(void *a1, uint64_t a2)
{
  [a1 invalidate];
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer;
  uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer);
  *(void *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer) = 0;

  uint64_t v5 = (uint64_t *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_guidances);
  swift_beginAccess();
  uint64_t v6 = *v5;
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1002258EC(v6);
  swift_bridgeObjectRelease();
  aBlock[0] = (uint64_t)v7;
  sub_1000FAEB0(aBlock);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(aBlock[0] + 16);
  if (v8) {
    int v9 = *(unsigned __int8 *)(v8 + aBlock[0] + 31);
  }
  else {
    int v9 = 5;
  }
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(aBlock[0]) == 5)
  {
    if (v9 != 5) {
      goto LABEL_13;
    }
LABEL_9:
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100011554(v10, (uint64_t)qword_10030E960);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Dwell timer fired, but guidance hasn't changed", v13, 2u);
      swift_slowDealloc();
    }
    goto LABEL_19;
  }
  if (v9 != 5 && (sub_1002371F4(aBlock[0], v9) & 1) != 0) {
    goto LABEL_9;
  }
LABEL_13:
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100011554(v14, (uint64_t)qword_10030E960);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)char v17 = 136446210;
    sub_100007620((uint64_t *)&unk_1002F53C0);
    uint64_t v18 = String.init<A>(describing:)();
    sub_100202FD4(v18, v19, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Dwell timer fired and guidance should change; displaying new guidance: %{public}s",
      v17,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(aBlock[0]) = v9;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(aBlock[0]) != 5)
  {
    uint64_t v20 = self;
    aBlock[4] = (uint64_t)sub_1000FBF28;
    aBlock[5] = a2;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100158A24;
    void aBlock[3] = (uint64_t)&unk_1002CE670;
    uint64_t v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v22 = [v20 scheduledTimerWithTimeInterval:0 repeats:v21 block:2.0];
    _Block_release(v21);
    uint64_t v11 = *(NSObject **)(a2 + v3);
    *(void *)(a2 + v3) = v22;
LABEL_19:
  }
}

uint64_t sub_1000FA828()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel__current;
  uint64_t v4 = sub_100007620(&qword_1002F5510);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1000FA940()
{
  return type metadata accessor for GuidanceModel();
}

uint64_t type metadata accessor for GuidanceModel()
{
  uint64_t result = qword_1002F53A8;
  if (!qword_1002F53A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000FA994()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000FAA88();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000FAA88()
{
  if (!qword_1002F53B8)
  {
    sub_100007928((uint64_t *)&unk_1002F53C0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F53B8);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CameraGuidance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FABB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraGuidance()
{
  return &type metadata for CameraGuidance;
}

unint64_t sub_1000FABEC()
{
  unint64_t result = qword_1002F5508;
  if (!qword_1002F5508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5508);
  }
  return result;
}

unint64_t sub_1000FAC44()
{
  unint64_t result = qword_1002F43C0;
  if (!qword_1002F43C0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002F43C0);
  }
  return result;
}

uint64_t sub_1000FAC9C()
{
  uint64_t v1 = sub_100007620(&qword_1002F5510);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  UUID.init()();
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delaySeconds) = 0x4008000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellSeconds) = 0x4000000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_guidances) = &_swiftEmptySetSingleton;
  uint64_t v5 = v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel__current;
  v7[15] = 5;
  sub_100007620((uint64_t *)&unk_1002F53C0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32))(v5, v4, v1);
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_dwellTimer) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_delayTimer) = 0;
  return v0;
}

uint64_t sub_1000FADF8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for GuidanceModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000FAE38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC17SequoiaTranslator13GuidanceModel_id;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

Swift::Int sub_1000FAEB0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10023B934(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000FAF1C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1000FAF1C(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        char v81 = *(unsigned char *)(v79 + i);
        unint64_t v82 = qword_100250550[v81];
        uint64_t v83 = v78;
        do
        {
          uint64_t v84 = *(char *)(v79 + v83);
          if (v82 >= qword_100250550[v84]) {
            break;
          }
          if (!v79) {
            goto LABEL_140;
          }
          *(unsigned char *)(v79 + v83 + 1) = v84;
          *(unsigned char *)(v79 + v83--) = v81;
        }
        while (v83 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v95 = result;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v85 = v11;
      id v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          id v88 = v85;
          uint64_t v89 = *(void *)&v85[16 * v87 + 32];
          uint64_t v90 = *(void *)&v85[16 * v12 + 24];
          sub_1000FB5DC((char *)(v86 + v89), (char *)(v86 + *(void *)&v85[16 * v12 + 16]), v86 + v90, __dst);
          if (v1) {
            break;
          }
          if (v90 < v89) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v88 = sub_10023B8E4((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          id v91 = &v88[16 * v87 + 32];
          *(void *)id v91 = v89;
          *((void *)v91 + 1) = v90;
          unint64_t v92 = *((void *)v88 + 2);
          if (v12 > v92) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v92 - v12));
          uint64_t v85 = v88;
          *((void *)v88 + 2) = v92 - 1;
          unint64_t v12 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    id v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    id v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  id v93 = v2;
  uint64_t v10 = *v2;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v96 = v3;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(char *)(v10 + v9);
      unint64_t v15 = qword_100250550[v14];
      unint64_t v16 = qword_100250550[*(char *)(v10 + v13)];
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (v15 < v16 != qword_100250550[*(char *)(v10 + v9)] >= qword_100250550[(char)v14])
        {
          LOBYTE(v14) = *(unsigned char *)(v10 + v9++);
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          Swift::Int v17 = v9 - 1;
          Swift::Int v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v10) {
                goto LABEL_143;
              }
              char v19 = *(unsigned char *)(v10 + v18);
              *(unsigned char *)(v10 + v18) = *(unsigned char *)(v10 + v17);
              *(unsigned char *)(v10 + v17) = v19;
            }
            BOOL v59 = ++v18 < v17--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_46;
    }
    Swift::Int v20 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_138;
    }
    if (v20 >= v3) {
      Swift::Int v20 = v3;
    }
    if (v20 < v13) {
      break;
    }
    if (v9 != v20)
    {
      uint64_t v21 = (unsigned char *)(v10 + v9);
      do
      {
        char v22 = *(unsigned char *)(v10 + v9);
        unint64_t v23 = qword_100250550[v22];
        Swift::Int v24 = v13;
        int v25 = v21;
        do
        {
          uint64_t v26 = (char)*(v25 - 1);
          if (v23 >= qword_100250550[v26]) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *int v25 = v26;
          *--int v25 = v22;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v21;
      }
      while (v9 != v20);
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10023B4F4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_10023B4F4((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_119;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_120;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_122;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_125;
          }
          if (v48 >= v39)
          {
            id v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_129;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_77;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_121;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_124;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_127;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_128;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_83:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v54) {
          goto LABEL_123;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_126;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        unint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1000FB5DC((char *)(v10 + *(void *)v71), (char *)(v10 + *(void *)v74), v10 + v75, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v75 < v72) {
          goto LABEL_116;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_118;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v2 = v93;
      uint64_t v8 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000FB5DC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char v22 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      uint64_t v14 = &v4[v9];
      Swift::Int v20 = &v4[v9];
      char v22 = v6;
      if (v7 < v6 && (char *)a3 != v6)
      {
        unint64_t v15 = (char *)(a3 - 1);
        while (1)
        {
          unint64_t v16 = v6 - 1;
          uint64_t v17 = *(v6 - 1);
          Swift::Int v18 = v15 + 1;
          if (qword_100250550[*(v14 - 1)] >= qword_100250550[v17])
          {
            Swift::Int v20 = v14 - 1;
            if (v18 < v14 || v15 >= v14 || v18 != v14) {
              *unint64_t v15 = *(v14 - 1);
            }
            --v14;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v18 != v6 || v15 >= v6) {
              *unint64_t v15 = v17;
            }
            char v22 = --v6;
            if (v16 <= v7) {
              goto LABEL_38;
            }
          }
          --v15;
          if (v14 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    Swift::Int v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        uint64_t v11 = *v6;
        uint64_t v12 = *v4;
        if (qword_100250550[v11] >= qword_100250550[v12])
        {
          if (v7 != v4) {
            *uint64_t v7 = v12;
          }
          uint64_t v21 = ++v4;
          Swift::Int v13 = v6;
        }
        else
        {
          Swift::Int v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6) {
            *uint64_t v7 = v11;
          }
        }
        ++v7;
        if (v4 >= v10) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      char v22 = v7;
    }
LABEL_38:
    sub_10023B840((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000FB844(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return 5;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a1;
  while (2)
  {
    unint64_t v10 = 0xE800000000000000;
    unint64_t v11 = 0x6E776F44776F6C73;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v11 = 0x74786554646E6966;
        break;
      case 2:
        unint64_t v10 = 0x8000000100259F30;
        unint64_t v11 = 0xD000000000000013;
        break;
      case 3:
        unint64_t v11 = 0xD000000000000018;
        unint64_t v10 = 0x8000000100259F50;
        break;
      case 4:
        unint64_t v11 = 0xD000000000000017;
        unint64_t v10 = 0x8000000100259F70;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE800000000000000;
    unint64_t v13 = 0x6E776F44776F6C73;
    switch(v9)
    {
      case 1:
        if (v11 == 0x74786554646E6966) {
          goto LABEL_15;
        }
        goto LABEL_16;
      case 2:
        unint64_t v12 = 0x8000000100259F30;
        if (v11 != 0xD000000000000013) {
          goto LABEL_16;
        }
        goto LABEL_15;
      case 3:
        unint64_t v13 = 0xD000000000000018;
        unint64_t v12 = 0x8000000100259F50;
        goto LABEL_14;
      case 4:
        unint64_t v12 = 0x8000000100259F70;
        if (v11 != 0xD000000000000017) {
          goto LABEL_16;
        }
        goto LABEL_15;
      default:
LABEL_14:
        if (v11 != v13) {
          goto LABEL_16;
        }
LABEL_15:
        if (v10 == v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
LABEL_16:
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_24:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *v2;
        uint64_t v19 = *v2;
        uint64_t *v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100198058();
          uint64_t v17 = v19;
        }
        uint64_t v15 = *(unsigned __int8 *)(*(void *)(v17 + 48) + v7);
        sub_1000FBC00(v7);
        uint64_t *v2 = v19;
        swift_bridgeObjectRelease();
        return v15;
    }
  }
}

unint64_t sub_1000FBC00(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        unint64_t v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          unint64_t v12 = (unsigned char *)(v11 + v2);
          unint64_t v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *unint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x1000FBE68);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1000FBE7C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8670, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1000FBED0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000FBF08(void *a1)
{
}

uint64_t sub_1000FBF10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FBF20()
{
  return swift_release();
}

void sub_1000FBF28(void *a1)
{
  sub_1000FA36C(a1, v1);
}

uint64_t sub_1000FBF48()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights];
  swift_beginAccess();
  unint64_t v2 = *(void *)v1;
  if (v2 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v16 = OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode;
    for (uint64_t i = 4; ; ++i)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * i);
      unint64_t v6 = v5;
      uint64_t v7 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      int v8 = v0[v16];
      id v9 = [v0 traitCollection];
      [v9 userInterfaceStyle];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v10 = [v6 layer];
      if (v8 == 1) {
        NSString v11 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v11 = 0;
      }
      swift_bridgeObjectRelease();
      [v10 setCompositingFilter:v11];

      swift_unknownObjectRelease();
      id v12 = [v6 superview];
      if (v12)
      {
        unint64_t v13 = v12;
        id v14 = [v12 layer];

        [v14 setAllowsGroupBlending:v8 ^ 1u];
        if (v7 == v3) {
          return swift_bridgeObjectRelease_n();
        }
      }
      else
      {

        if (v7 == v3) {
          return swift_bridgeObjectRelease_n();
        }
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

id sub_1000FC19C(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightRanges] = _swiftEmptyArrayStorage;
  NSString v11 = &v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
  *NSString v11 = 0;
  v11[1] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor] = 0;
  v5[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode] = 0;
  v29.receiver = v5;
  v29.super_class = (Class)type metadata accessor for HighlightTextView();
  id v12 = [super initWithFrame:a1 textContainer:a2];
  unint64_t v13 = self;
  id v14 = v12;
  id v15 = [v13 clearColor];
  [v14 setBackgroundColor:v15];

  id v16 = [v14 textLayoutManager];
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = _UITextViewportLayoutControllerDidLayoutNotification;
    id v19 = [self defaultCenter];
    id v20 = [v17 textViewportLayoutController];
    id v21 = [self mainQueue];
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28[4] = sub_1000FDCDC;
    v28[5] = v22;
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 1107296256;
    void v28[2] = sub_10018FADC;
    v28[3] = &unk_1002CE6E8;
    unint64_t v23 = _Block_copy(v28);
    swift_release();
    id v24 = [v19 addObserverForName:v18 object:v20 queue:v21 usingBlock:v23];
    _Block_release(v23);

    swift_unknownObjectRelease();
  }
  sub_100007620(&qword_1002F4100);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1002488D0;
  *(void *)(v25 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v25 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v26 = v14;
  sub_100007620(&qword_1002F4108);
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v26;
}

void sub_1000FC508()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    HighlightTextView.updateHighlightsForNewTextLayoutIfNeeded()();
  }
}

void sub_1000FC55C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned __int8 *)Strong;
    unint64_t v2 = (uint64_t *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights);
    swift_beginAccess();
    uint64_t v3 = *v2;
    if ((unint64_t)*v2 >> 62) {
      goto LABEL_18;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v16 = OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode;
      for (uint64_t i = 4; ; ++i)
      {
        id v6 = (v3 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v3 + 8 * i);
        uint64_t v7 = v6;
        if (__OFADD__(i - 4, 1)) {
          break;
        }
        uint64_t v8 = v4;
        int v9 = v1[v16];
        id v10 = [v1 traitCollection];
        [v10 userInterfaceStyle];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v11 = [v7 layer];
        if (v9 == 1) {
          NSString v12 = String._bridgeToObjectiveC()();
        }
        else {
          NSString v12 = 0;
        }
        swift_bridgeObjectRelease();
        [v11 setCompositingFilter:v12];

        swift_unknownObjectRelease();
        id v13 = [v7 superview];
        if (v13)
        {
          id v14 = v13;
          id v15 = [v13 layer];

          [v15 setAllowsGroupBlending:v9 ^ 1u];
        }
        else
        {
        }
        uint64_t v4 = v8;
        if (i - 3 == v8) {
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain_n();
    }
LABEL_19:
    swift_bridgeObjectRelease_n();
  }
}

id TranslateCalloutDisabledTextView.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

Swift::Void __swiftcall HighlightTextView.setHighlights(toRange:)(__C::_NSRange_optional toRange)
{
  Swift::Bool is_nil = toRange.is_nil;
  Swift::Int length = toRange.value.length;
  Swift::Int location = toRange.value.location;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  HighlightTextView.removeHighlights()();
  if (!is_nil && length >= 1)
  {
    id v9 = HighlightTextView.convertToTextRange(_:)(location, length);
    if (v9)
    {
      id v10 = v9;
      HighlightTextView.addHighlight(to:)(v9);
      id v11 = [v1 textInRange:v10];
      if (v11)
      {
        NSString v12 = v11;
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        uint64_t v15 = 0;
      }
      unint64_t v28 = (uint64_t *)&v1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
      *unint64_t v28 = v13;
      v28[1] = v15;

      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_100011554(v5, (uint64_t)qword_10030EAE0);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v16, v5);
      os_log_t v17 = v1;
      uint64_t v18 = Logger.logObject.getter();
      int v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, (os_log_type_t)v19))
      {
        int v31 = v19;
        os_log_t v32 = v18;
        uint64_t v20 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        uint64_t v34 = v30;
        *(_DWORD *)uint64_t v20 = 136446466;
        v36.Swift::Int location = location;
        v36.Swift::Int length = length;
        id v21 = NSStringFromRange(v36);
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;

        uint64_t v33 = sub_100202FD4(v22, v24, &v34);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2050;
        id v25 = [v17 text];
        if (!v25)
        {

          __break(1u);
          return;
        }
        id v26 = v25;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v27 = String.count.getter();
        swift_bridgeObjectRelease();
        uint64_t v33 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        os_log_t v17 = v32;
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v31, "Unable to find valid text range for NSRange %{public}s in text view of length %{public}ld, not highlighting any range", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

id sub_1000FCC60(CGFloat a1, CGFloat a2)
{
  id v5 = [v2 closestPositionToPoint:];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  id v7 = objc_msgSend(objc_msgSend(v2, "tokenizer"), "rangeEnclosingPosition:withGranularity:inDirection:", v5, 1, 1);
  swift_unknownObjectRelease();
  if (!v7
    || ([v2 firstRectForRange:v7],
        v10.x = a1,
        v10.y = a2,
        BOOL v8 = CGRectContainsPoint(v11, v10),
        v6,
        uint64_t v6 = v7,
        !v8))
  {

    return 0;
  }
  return v7;
}

void HighlightTextView.addHighlight(to:)(void *a1)
{
  unint64_t v2 = v1;
  [v1 firstRectForRange:a1];
  double v4 = 0.0;
  CGRect v46 = CGRectInset(v45, -4.0, 0.0);
  double x = v46.origin.x;
  double y = v46.origin.y;
  double width = v46.size.width;
  double height = v46.size.height;
  id v9 = [v1 superview];
  double v10 = 0.0;
  double v11 = 0.0;
  double v12 = 0.0;
  if (v9)
  {
    uint64_t v13 = v9;
    [v9 convertRect:v2 fromCoordinateSpace:x, y, width, height];
    double v11 = v14;
    double v12 = v15;
    double v4 = v16;
    double v10 = v17;
  }
  id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:v11, v12, v4, v10];
  id v19 = [v18 layer];
  [v19 setCornerRadius:5.0];

  uint64_t v20 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor];
  if (v20)
  {
    id v21 = *(void **)&v2[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor];
  }
  else
  {
    sub_100055020();
    id v21 = (void *)static UIColor.dictionaryHighlightColor.getter();
    uint64_t v20 = 0;
  }
  id v22 = v20;
  [v18 setBackgroundColor:v21];

  uint64_t v23 = OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode;
  int v24 = v2[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode];
  id v25 = [v2 superview];
  id v26 = v25;
  uint64_t v27 = &selRef_insertSubview_aboveSubview_;
  if (!v24) {
    uint64_t v27 = &selRef_insertSubview_belowSubview_;
  }
  [v25 *v27 v18 v2];

  if (v2[v23] == 1) {
    HighlightTextView.setBlendMode(_:on:)(1, v18);
  }
  unint64_t v28 = &v2[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights];
  swift_beginAccess();
  id v29 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v28 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v30 = &v2[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightRanges];
  swift_beginAccess();
  id v31 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v30 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v33 = (char *)Strong;
    uint64_t v34 = *(void **)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25TranslationListController_dictionaryTextView);
    *(void *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator25TranslationListController_dictionaryTextView) = v2;
    char v35 = v2;

    NSRange v36 = (double *)&v33[OBJC_IVAR____TtC17SequoiaTranslator25TranslationListController_dictionaryHighlightRect];
    *NSRange v36 = v11;
    v36[1] = v12;
    v36[2] = v4;
    v36[3] = v10;
    *((unsigned char *)v36 + 32) = 0;
    id v37 = [v33 presentedViewController];
    if (v37)
    {
      uint64_t v38 = v37;
      id v39 = [v37 popoverPresentationController];

      if (v39)
      {
        [v39 setSourceView:v35];
      }
    }
    id v40 = [v33 presentedViewController];
    id v41 = [v40 popoverPresentationController];

    [v41 setSourceRect:v11, v12, v4, v10];
    id v42 = [v33 presentedViewController];
    if (v42
      && (unint64_t v43 = v42,
          id v44 = [v42 popoverPresentationController],
          v43,
          v44))
    {
      [v44 setPermittedArrowDirections:3];

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
}

Swift::Void __swiftcall HighlightTextView.removeHighlights()()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    *uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    id v7 = (void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightRanges);
    swift_beginAccess();
    *id v7 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    BOOL v8 = (void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord);
    *BOOL v8 = 0;
    v8[1] = 0;
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      [v5 removeFromSuperview];
    }
    goto LABEL_10;
  }
  __break(1u);
}

void HighlightTextView.setBlendMode(_:on:)(char a1, void *a2)
{
  uint64_t v3 = v2;
  id v6 = [v3 traitCollection];
  [v6 userInterfaceStyle];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = [a2 layer];
  if (a1) {
    NSString v8 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v8 = 0;
  }
  swift_bridgeObjectRelease();
  [v7 setCompositingFilter:v8];

  swift_unknownObjectRelease();
  id v9 = [a2 superview];
  if (v9)
  {
    double v10 = v9;
    id v11 = [v9 layer];

    [v11 setAllowsGroupBlending:(a1 & 1) == 0];
  }
}

uint64_t HighlightTextView.updateHighlightsForNewTextLayoutIfNeeded()()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v2 = sub_10021B250();
    uint64_t result = swift_unknownObjectRelease();
    if (v2)
    {
      uint64_t v3 = (unint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightRanges);
      uint64_t result = swift_beginAccess();
      if (*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (!v9) {
          return result;
        }
      }
      else if (!*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        return result;
      }
      unint64_t v4 = *v3;
      swift_bridgeObjectRetain();
      HighlightTextView.removeHighlights()();
      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v5 = result;
        if (result) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v5)
        {
LABEL_7:
          if (v5 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v5; ++i)
          {
            if ((v4 & 0xC000000000000001) != 0) {
              id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v7 = *(id *)(v4 + 8 * i + 32);
            }
            NSString v8 = v7;
            HighlightTextView.addHighlight(to:)(v7);
          }
        }
      }
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

void HighlightTextView.currentHightlightFrame()(uint64_t a1@<X8>)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (*(void *)v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v6 = 0;
  double x = 0.0;
  double y = 0.0;
  double width = 0.0;
  double height = 0.0;
  if (v5)
  {
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_20;
    }
    if ((v4 & 0xC000000000000001) != 0) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v4 + 32);
    }
    double v12 = v11;
    [v11 frame];
    double x = v13;
    double y = v14;
    double width = v15;
    double height = v16;

    if (v5 != 1)
    {
      uint64_t v26 = 0;
      do
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v27 = *(id *)(v4 + 8 * v26 + 40);
        }
        unint64_t v28 = v27;
        [v27 frame];
        v35.origin.double x = v29;
        v35.origin.double y = v30;
        v35.size.double width = v31;
        v35.size.double height = v32;
        v33.origin.double x = x;
        v33.origin.double y = y;
        v33.size.double width = width;
        v33.size.double height = height;
        CGRect v34 = CGRectUnion(v33, v35);
        double x = v34.origin.x;
        double y = v34.origin.y;
        double width = v34.size.width;
        double height = v34.size.height;

        ++v26;
      }
      while (v5 - 1 != v26);
    }
  }
  swift_bridgeObjectRelease();
  id v17 = [v1 superview];
  id v18 = v17;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  if (!v17)
  {
LABEL_12:
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v19;
    *(void *)(a1 + 16) = v20;
    *(void *)(a1 + 24) = v21;
    *(unsigned char *)(a1 + 32) = v18 == 0;
    return;
  }
  if (v5)
  {
    [v17 convertRect:v1 toCoordinateSpace:x, y, width, height];
    uint64_t v6 = v22;
    uint64_t v19 = v23;
    uint64_t v20 = v24;
    uint64_t v21 = v25;

    goto LABEL_12;
  }
LABEL_20:
  __break(1u);
}

uint64_t HighlightTextView.getWordAtPoint(_:)(CGFloat a1, CGFloat a2)
{
  id v5 = [v2 closestPositionToPoint:];
  if (!v5) {
    return 0;
  }
  id v6 = objc_msgSend(objc_msgSend(v2, "tokenizer"), "rangeEnclosingPosition:withGranularity:inDirection:", v5, 1, 1);
  swift_unknownObjectRelease();
  if (!v6)
  {

    return 0;
  }
  [v2 firstRectForRange:v6];
  v12.double x = a1;
  v12.double y = a2;
  BOOL v7 = CGRectContainsPoint(v13, v12);

  if (!v7 || (id v8 = [v2 textInRange:v6]) == 0)
  {

    return 0;
  }
  uint64_t v9 = v8;
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v10;
}

void sub_1000FD954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id *a5)
{
  if (!*a5)
  {
    *a5 = HighlightTextView.convertToTextRange(_:)(a2, a3);
    _objc_release_x1();
  }
}

id HighlightTextView.convertToTextRange(_:)(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 beginningOfDocument];
  id v6 = [v2 positionFromPosition:v5 offset:a1];
  if (!v6) {
    goto LABEL_5;
  }
  BOOL v7 = v6;
  id v8 = [v2 positionFromPosition:v6 offset:a2];
  if (!v8)
  {

LABEL_5:
    return 0;
  }
  uint64_t v9 = v8;
  id v10 = [v2 textRangeFromPosition:v7 toPosition:v8];

  return v10;
}

void sub_1000FDA90()
{
  sub_100013384(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor);
}

id HighlightTextView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HighlightTextView();
  return [super dealloc];
}

void _s17SequoiaTranslator17HighlightTextViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightRanges] = _swiftEmptyArrayStorage;
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightedWord];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for HighlightTextView()
{
  return self;
}

uint64_t sub_1000FDC9C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000FDCD4()
{
}

void sub_1000FDCDC()
{
}

uint64_t sub_1000FDCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FDCF4()
{
  return swift_release();
}

id sub_1000FDD2C()
{
  return sub_1000FDF98(type metadata accessor for HitPassthroughView);
}

uint64_t type metadata accessor for HitPassthroughView()
{
  return self;
}

id sub_1000FDEA8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7();
  return [super initWithFrame:a2, a3, a4, a5];
}

id sub_1000FDF34(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return [super initWithCoder:a3];
}

id sub_1000FDF80()
{
  return sub_1000FDF98(type metadata accessor for HitPassthroughWindow);
}

id sub_1000FDF98(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for HitPassthroughWindow()
{
  return self;
}

uint64_t sub_1000FDFF4()
{
  uint64_t v0 = sub_100007620(&qword_1002F5740);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for PHPickerConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v19 - v8;
  id v10 = [self sharedPhotoLibrary];
  PHPickerConfiguration.init(photoLibrary:)();
  PHPickerConfiguration.selectionLimit.setter();
  sub_100007620(&qword_1002F5748);
  uint64_t v11 = type metadata accessor for PHPickerFilter();
  uint64_t v12 = *(void *)(v11 - 8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1002488D0;
  static PHPickerFilter.images.getter();
  static PHPickerFilter.any(of:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v2, 0, 1, v11);
  PHPickerConfiguration.filter.setter();
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030E960);
  double v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    double v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Presenting image picker to the user", v16, 2u);
    swift_slowDealloc();
  }

  sub_10000B0CC(0, &qword_1002F5750);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  uint64_t v17 = PHPickerViewController.init(configuration:)();
  sub_100007620(&qword_1002F5758);
  UIViewControllerRepresentableContext.coordinator.getter();
  sub_1001016BC(&qword_1002F5760, (void (*)(uint64_t))type metadata accessor for ImagePicker.Coordinator);
  PHPickerViewController.delegate.setter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  return v17;
}

uint64_t sub_1000FE39C()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E960);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Dismissing photo picker", v7, 2u);
    swift_slowDealloc();
  }

  sub_1000FFEDC(&qword_1002EEF88, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, (uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_1000FE574(NSObject *a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030E960);
    swift_errorRetain();
    swift_errorRetain();
    CGRect v46 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)id v18 = 138412290;
      swift_errorRetain();
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      aBlock[0] = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v19 = v20;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v17, "Representation failed to load with error: %@", v18, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    goto LABEL_12;
  }
  if (a2 >> 60 == 15)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100011554(v21, (uint64_t)qword_10030E960);
    CGRect v46 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v46, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v22, "No image data provided, with no accompanying error.", v23, 2u);
      swift_slowDealloc();
    }
LABEL_12:
    uint64_t v24 = v46;
    goto LABEL_13;
  }
  uint64_t v25 = a1;
  id v26 = objc_allocWithZone((Class)UIImage);
  sub_100101584((uint64_t)v25, a2);
  CGRect v46 = v25;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v28 = [v26 initWithData:isa];
  CGFloat v29 = a2;
  CGFloat v30 = v28;

  if (v30)
  {
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    CGRect v45 = v29;
    uint64_t v44 = static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a4;
    *(void *)(v31 + 24) = v30;
    aBlock[4] = (uint64_t)sub_10010169C;
    aBlock[5] = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10008BA1C;
    void aBlock[3] = (uint64_t)&unk_1002CE760;
    CGFloat v32 = _Block_copy(aBlock);
    id v33 = a4;
    id v34 = v30;
    static DispatchQoS.unspecified.getter();
    uint64_t v48 = _swiftEmptyArrayStorage;
    sub_1001016BC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_1000116B4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    CGRect v35 = (void *)v44;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);

    sub_1001015F0((uint64_t)v46, (unint64_t)v45);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    return;
  }
  NSRange v36 = v46;
  unint64_t v37 = (unint64_t)v29;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  sub_100011554(v38, (uint64_t)qword_10030E960);
  sub_1001015DC((uint64_t)v36, (unint64_t)v29);
  sub_100101584((uint64_t)v36, (unint64_t)v29);
  CGRect v45 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v39))
  {
    id v40 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v40 = 136315138;
    sub_100101584((uint64_t)v36, v37);
    uint64_t v41 = Data.description.getter();
    unint64_t v43 = v42;
    sub_1001015F0((uint64_t)v36, v37);
    uint64_t v48 = (void *)sub_100202FD4(v41, v43, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001015F0((uint64_t)v36, v37);
    sub_1001015F0((uint64_t)v36, v37);
    _os_log_impl((void *)&_mh_execute_header, v45, v39, "Unable to coerce data into an instance of UIImage (using UIImage(data:%s)", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1001015F0((uint64_t)v36, v37);
    return;
  }
  sub_1001015F0((uint64_t)v36, (unint64_t)v29);
  sub_1001015F0((uint64_t)v36, (unint64_t)v29);
  sub_100101604((uint64_t)v36, (unint64_t)v29);
  uint64_t v24 = v45;
LABEL_13:
}

void sub_1000FECEC(uint64_t a1, void *a2)
{
  type metadata accessor for ImagePicker(0);
  id v3 = a2;
  sub_100007620((uint64_t *)&unk_1002F5730);
  Binding.wrappedValue.setter();
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E960);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    BOOL v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Successfully picked image, dismissing photo picker", v7, 2u);
    swift_slowDealloc();
  }
}

id sub_1000FEE5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImagePicker.Coordinator(0);
  return [super dealloc];
}

uint64_t sub_1000FEEA4()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F5648);
}

uint64_t sub_1000FEECC()
{
  uint64_t result = type metadata accessor for ImagePicker(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F56C0);
}

uint64_t *sub_1000FEF7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = v11 + 16;
    int v14 = v11[24];
    swift_retain();
    swift_retain();
    if (v14 == 255)
    {
      *((void *)v10 + 2) = *(void *)v13;
      v10[24] = v13[8];
    }
    else
    {
      os_log_type_t v15 = *(void **)v13;
      *((void *)v10 + 2) = *(void *)v13;
      v10[24] = v14;
      id v16 = v15;
    }
  }
  return a1;
}

void sub_1000FF0EC(uint64_t a1, uint64_t a2)
{
  sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v5 + 24) != 255)
  {
    os_log_type_t v6 = *(void **)(v5 + 16);
  }
}

void *sub_1000FF1B8(void *a1, void *a2, uint64_t a3)
{
  sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *((void *)v9 + 1);
  *(void *)uint64_t v8 = *(void *)v9;
  *((void *)v8 + 1) = v10;
  uint64_t v11 = v9 + 16;
  int v12 = v9[24];
  swift_retain();
  swift_retain();
  if (v12 == 255)
  {
    *((void *)v8 + 2) = *(void *)v11;
    v8[24] = v11[8];
  }
  else
  {
    uint64_t v13 = *(void **)v11;
    *((void *)v8 + 2) = *(void *)v11;
    v8[24] = v12;
    id v14 = v13;
  }
  return a1;
}

void *sub_1000FF2D8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000FF470((uint64_t)a1);
    sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = (void **)(v8 + 16);
  uint64_t v11 = (void **)(v9 + 16);
  int v12 = v9[24];
  if (v8[24] == 255)
  {
    if (v12 == 255)
    {
      uint64_t v19 = *v11;
      v8[24] = v9[24];
      *uint64_t v10 = v19;
    }
    else
    {
      id v16 = *v11;
      *((void *)v8 + 2) = *v11;
      v8[24] = v12;
      id v17 = v16;
    }
  }
  else if (v12 == 255)
  {
    sub_1000FF4D0((uint64_t)(v8 + 16));
    char v18 = v9[24];
    *uint64_t v10 = *v11;
    v8[24] = v18;
  }
  else
  {
    uint64_t v13 = *v11;
    id v14 = (void *)*((void *)v8 + 2);
    *((void *)v8 + 2) = *v11;
    v8[24] = v12;
    id v15 = v13;
  }
  return a1;
}

uint64_t sub_1000FF470(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002EEF88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FF4D0(uint64_t a1)
{
  return a1;
}

char *sub_1000FF524(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 9) = *(_OWORD *)(v10 + 9);
  return a1;
}

char *sub_1000FF608(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000FF470((uint64_t)a1);
    uint64_t v6 = sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = v10 + 16;
  if (v9[24] == 255) {
    goto LABEL_9;
  }
  int v12 = v10[24];
  if (v12 == 255)
  {
    sub_1000FF4D0((uint64_t)(v9 + 16));
LABEL_9:
    *((void *)v9 + 2) = *v11;
    v9[24] = v10[24];
    return a1;
  }
  uint64_t v13 = (void *)*((void *)v9 + 2);
  *((void *)v9 + 2) = *v11;
  v9[24] = v12;

  return a1;
}

uint64_t sub_1000FF764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FF778);
}

uint64_t sub_1000FF778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F5660);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000FF840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FF854);
}

uint64_t sub_1000FF854(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F5660);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1000FF918()
{
  sub_10001695C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000FF9AC(uint64_t a1, uint64_t a2)
{
  return sub_100101190(a2);
}

uint64_t sub_1000FF9B4()
{
  return sub_1000FDFF4();
}

uint64_t sub_1000FF9CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100101704(v2, (uint64_t)v5);
  uint64_t v6 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  id v7 = objc_allocWithZone(v6);
  sub_100101704((uint64_t)v5, (uint64_t)v7 + OBJC_IVAR____TtCV17SequoiaTranslator11ImagePicker11Coordinator_parent);
  v10.receiver = v7;
  v10.super_class = v6;
  id v8 = [super init];
  uint64_t result = sub_100101768((uint64_t)v5);
  *a2 = v8;
  return result;
}

uint64_t sub_1000FFA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001016BC(&qword_1002F5768, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1000FFB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001016BC(&qword_1002F5768, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000FFBB8()
{
}

uint64_t sub_1000FFC10()
{
  return sub_1001016BC((unint64_t *)&unk_1002F5700, (void (*)(uint64_t))type metadata accessor for ImagePicker);
}

uint64_t sub_1000FFC58@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC(&qword_1002EEF88, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1000FFC98(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100202FD4(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10002485C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_1000FFE9C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC(&qword_1002F05A8, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_1000FFEDC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(a1);
  __chkstk_darwin(v15);
  id v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C3A4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    uint64_t v21 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_100202FD4(v27, v25, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100100194@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F5770);
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C3A4(v2, (uint64_t)v10, (uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1001017C4((uint64_t)v10, a1);
  }
  os_log_type_t v12 = static os_log_type_t.fault.getter();
  uint64_t v13 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v17[1] = a1;
    uint64_t v18 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    void v17[2] = sub_100202FD4(0xD000000000000020, 0x800000010025ED00, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10010041C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC(&qword_1002FACB0, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_10010045C@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC(&qword_1002F3598, (uint64_t (*)(void))&type metadata accessor for ScenePhase, 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_100100494(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_100202FD4(0xD00000000000001ELL, 0x800000010025ED90, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_10010182C(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

double sub_1001006A8(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100202FD4(0x656C62756F44, 0xE600000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10002485C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_1001008B0(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_100202FD4(0xD000000000000020, 0x800000010025EDB0, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    j__swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_100100ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC((uint64_t *)&unk_1002F5790, (uint64_t (*)(void))&type metadata accessor for Locale.Language, 0x65676175676E614CLL, 0xE800000000000000, a1);
}

uint64_t sub_100100AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC((uint64_t *)&unk_1002F5780, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, 0x414C52556E65704FLL, 0xED00006E6F697463, a1);
}

uint64_t sub_100100B30(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_100202FD4(0xD000000000000015, 0x800000010025ED50, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_100100D38(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100202FD4(0xD000000000000019, 0x800000010025ED70, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10002485C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_100100F48@<X0>(uint64_t a1@<X8>)
{
  return sub_1000FFEDC((uint64_t *)&unk_1002F57A0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

double sub_100100F84(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100202FD4(0x74616F6C464743, 0xE700000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_10002485C(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_100101190(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    type metadata accessor for PHPickerResult();
    os_log_type_t v8 = (void *)PHPickerResult.itemProvider.getter();
    static UTType.image.getter();
    Class isa = UTType._bridgeToObjectiveC()().super.isa;
    os_log_type_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
    v10(v7, v4);
    id v11 = [v8 registeredContentTypesConformingToContentType:isa];

    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    if (v13)
    {
      static UTType.image.getter();
      *(void *)(swift_allocObject() + 16) = v2;
      id v14 = v2;
      uint64_t v15 = NSItemProvider.loadDataRepresentation(for:completionHandler:)();

      swift_release();
      v10(v7, v4);
    }
    else
    {
      if (qword_1002EE5C8 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100011554(v20, (uint64_t)qword_10030E960);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to load image; item provider has no images",
          v23,
          2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030E960);
    swift_bridgeObjectRetain();
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134217984;
      v25[1] = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Can't load itemProvider from %ld results; the user likely cancelled the picker",
        v19,
        0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  return sub_1000FE39C();
}

uint64_t sub_100101544()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10010157C(NSObject *a1, unint64_t a2, uint64_t a3)
{
  sub_1000FE574(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_100101584(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1001015DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100101584(a1, a2);
  }
  return a1;
}

uint64_t sub_1001015F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100101604(a1, a2);
  }
  return a1;
}

uint64_t sub_100101604(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10010165C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10010169C()
{
  sub_1000FECEC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001016A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001016B4()
{
  return swift_release();
}

uint64_t sub_1001016BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100101704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100101768(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001017C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F1058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010182C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

void *sub_10010183C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v38 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v8 = a2[9];
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    uint64_t v9 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v9;
    uint64_t v10 = a3[11];
    uint64_t v60 = (uint64_t)a2 + v10;
    uint64_t v61 = a1 + v10;
    *(void *)(a1 + 72) = v8;
    uint64_t v11 = type metadata accessor for Date();
    BOOL v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v59(v61, v60, v11);
    uint64_t v12 = sub_100007620(&qword_1002F57B0);
    *(void *)(v61 + *(int *)(v12 + 28)) = *(void *)(v60 + *(int *)(v12 + 28));
    uint64_t v13 = a3[12];
    uint64_t v14 = a3[13];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    os_log_type_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[14];
    uint64_t v22 = a3[15];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t)a2 + v21;
    uint64_t v26 = *(void **)v24;
    uint64_t v25 = *(void *)(v24 + 8);
    *uint64_t v23 = v26;
    v23[1] = v25;
    uint64_t v27 = (void *)((char *)v4 + v22);
    uint64_t v28 = (uint64_t *)((char *)a2 + v22);
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    *uint64_t v27 = v30;
    v27[1] = v29;
    uint64_t v31 = a3[16];
    CGFloat v32 = (void *)((char *)v4 + v31);
    id v33 = (uint64_t *)((char *)a2 + v31);
    swift_retain();
    swift_retain();
    swift_retain();
    id v34 = v26;
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
      {
        uint64_t v37 = sub_100007620(&qword_1002F1058);
        memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v36 + 16))(v32, v33, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
      }
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = a3[17];
    id v40 = (char *)v4 + v39;
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v42 = *v41;
    uint64_t v43 = v41[1];
    char v44 = *((unsigned char *)v41 + 16);
    sub_100101C14();
    *(void *)id v40 = v42;
    *((void *)v40 + 1) = v43;
    v40[16] = v44;
    uint64_t v45 = a3[18];
    uint64_t v46 = a3[19];
    uint64_t v47 = (void *)((char *)v4 + v45);
    uint64_t v48 = (uint64_t *)((char *)a2 + v45);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = (char *)v4 + v46;
    uint64_t v51 = (char *)a2 + v46;
    *uint64_t v50 = *v51;
    *((void *)v50 + 1) = *((void *)v51 + 1);
    uint64_t v52 = a3[20];
    uint64_t v53 = (char *)v4 + v52;
    char v54 = (uint64_t *)((char *)a2 + v52);
    uint64_t v55 = *v54;
    uint64_t v56 = v54[1];
    char v57 = *((unsigned char *)v54 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100101C14();
    *(void *)uint64_t v53 = v55;
    *((void *)v53 + 1) = v56;
    v53[16] = v57;
  }
  return v4;
}

uint64_t sub_100101C14()
{
  return swift_retain();
}

uint64_t sub_100101C1C(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100007620(&qword_1002F57B0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v6 = a1 + a2[16];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  sub_100101E28();
  swift_release();
  swift_release();
  swift_release();

  return sub_100101E28();
}

uint64_t sub_100101E28()
{
  return swift_release();
}

uint64_t sub_100101E30(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = a3[11];
  uint64_t v58 = a1 + v8;
  uint64_t v9 = a2 + v8;
  *(void *)(a1 + 72) = v6;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v56(v58, v9, v10);
  uint64_t v11 = sub_100007620(&qword_1002F57B0);
  *(void *)(v58 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)(a1 + v13);
  os_log_type_t v18 = (void *)(a2 + v13);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[14];
  uint64_t v21 = a3[15];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = a2 + v20;
  uint64_t v25 = *(void **)v23;
  uint64_t v24 = *(void *)(v23 + 8);
  void *v22 = v25;
  v22[1] = v24;
  uint64_t v26 = (void *)(a1 + v21);
  uint64_t v27 = (uint64_t *)(a2 + v21);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  uint64_t v30 = a3[16];
  uint64_t v31 = (void *)(a1 + v30);
  CGFloat v32 = (void *)(a2 + v30);
  swift_retain();
  swift_retain();
  swift_retain();
  id v33 = v25;
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      uint64_t v36 = sub_100007620(&qword_1002F1058);
      memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v31, v32, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
  }
  else
  {
    *uint64_t v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[17];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  char v42 = *((unsigned char *)v39 + 16);
  sub_100101C14();
  *(void *)uint64_t v38 = v40;
  *(void *)(v38 + 8) = v41;
  *(unsigned char *)(v38 + 16) = v42;
  uint64_t v43 = a3[18];
  uint64_t v44 = a3[19];
  uint64_t v45 = (void *)(a1 + v43);
  uint64_t v46 = (void *)(a2 + v43);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a1 + v44;
  uint64_t v49 = a2 + v44;
  *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  uint64_t v50 = a3[20];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *v52;
  uint64_t v54 = v52[1];
  LOBYTE(v38) = *((unsigned char *)v52 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100101C14();
  *(void *)uint64_t v51 = v53;
  *(void *)(v51 + 8) = v54;
  *(unsigned char *)(v51 + 16) = v38;
  return a1;
}

uint64_t sub_1001021BC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v6 = a3[11];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = sub_100007620(&qword_1002F57B0);
  *(void *)(v7 + *(int *)(v10 + 28)) = *(void *)(v8 + *(int *)(v10 + 28));
  swift_retain();
  swift_release();
  uint64_t v11 = a3[12];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  uint64_t v17 = a3[14];
  os_log_type_t v18 = (void *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void **)(a1 + v17);
  uint64_t v21 = *(void **)(a2 + v17);
  void *v18 = v21;
  id v22 = v21;

  v18[1] = *(void *)(v19 + 8);
  uint64_t v23 = a3[15];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  swift_retain();
  swift_release();
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  if (a1 != a2)
  {
    uint64_t v26 = a3[16];
    uint64_t v27 = (void *)(a1 + v26);
    uint64_t v28 = (void *)(a2 + v26);
    sub_10000B070(a1 + v26, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = sub_100007620(&qword_1002F1058);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = a3[17];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (uint64_t *)(a2 + v32);
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  char v37 = *((unsigned char *)v34 + 16);
  sub_100101C14();
  *(void *)uint64_t v33 = v35;
  *(void *)(v33 + 8) = v36;
  *(unsigned char *)(v33 + 16) = v37;
  sub_100101E28();
  uint64_t v38 = a3[18];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  swift_retain();
  swift_release();
  *(void *)(v39 + 8) = *(void *)(v40 + 8);
  swift_retain();
  swift_release();
  uint64_t v41 = a3[19];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  swift_retain();
  swift_release();
  uint64_t v44 = a3[20];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  uint64_t v48 = v46[1];
  LOBYTE(v35) = *((unsigned char *)v46 + 16);
  sub_100101C14();
  *(void *)uint64_t v45 = v47;
  *(void *)(v45 + 8) = v48;
  *(unsigned char *)(v45 + 16) = v35;
  sub_100101E28();
  return a1;
}

uint64_t sub_100102610(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = a3[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = sub_100007620(&qword_1002F57B0);
  *(void *)(v11 + *(int *)(v14 + 28)) = *(void *)(v12 + *(int *)(v14 + 28));
  uint64_t v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  uint64_t v16 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[16];
  os_log_type_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
    {
      uint64_t v23 = sub_100007620(&qword_1002F1058);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v24 = a3[17];
  uint64_t v25 = a3[18];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = (long long *)(a2 + v24);
  long long v28 = *v27;
  *(unsigned char *)(v26 + 16) = *((unsigned char *)v27 + 16);
  *(_OWORD *)uint64_t v26 = v28;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v29 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
  return a1;
}

uint64_t sub_100102888(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v7 = a3[11];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = sub_100007620(&qword_1002F57B0);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  swift_release();
  uint64_t v12 = a3[12];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_release();
  uint64_t v15 = a3[13];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_release();
  uint64_t v18 = a3[14];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = *(void **)(a1 + v18);
  void *v19 = *v20;

  v19[1] = v20[1];
  uint64_t v22 = a3[15];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_release();
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  if (a1 != a2)
  {
    uint64_t v25 = a3[16];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(a2 + v25);
    sub_10000B070(a1 + v25, (uint64_t *)&unk_1002F5770);
    uint64_t v28 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        uint64_t v31 = sub_100007620(&qword_1002F1058);
        memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v30 + 32))(v26, v27, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  uint64_t v32 = a3[17];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  char v35 = *(unsigned char *)(v34 + 16);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(unsigned char *)(v33 + 16) = v35;
  sub_100101E28();
  uint64_t v36 = a3[18];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  *(void *)(a1 + v36) = *(void *)(a2 + v36);
  swift_release();
  *(void *)(v37 + 8) = *(void *)(v38 + 8);
  swift_release();
  uint64_t v39 = a3[19];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  swift_release();
  uint64_t v42 = a3[20];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  char v45 = *(unsigned char *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(unsigned char *)(v43 + 16) = v45;
  sub_100101E28();
  return a1;
}

uint64_t sub_100102C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100102C64);
}

uint64_t sub_100102C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F57B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F1068);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 64);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100102D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100102DAC);
}

uint64_t sub_100102DAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 40) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F57B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F1068);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 64);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ImageTranslationView()
{
  uint64_t result = qword_1002F5810;
  if (!qword_1002F5810) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100102F2C()
{
  sub_100103040();
  if (v0 <= 0x3F)
  {
    sub_1000542E0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100103040()
{
  if (!qword_1002F5820)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F5820);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ImageTranslationView.UIState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100103164);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageTranslationView.UIState()
{
  return &type metadata for ImageTranslationView.UIState;
}

unint64_t sub_1001031A0()
{
  unint64_t result = qword_1002F5890;
  if (!qword_1002F5890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5890);
  }
  return result;
}

uint64_t sub_1001031F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100103210()
{
  return sub_100103D20((void (*)(void))type metadata accessor for CameraConfiguration, sub_100023C88);
}

uint64_t sub_10010323C(char a1)
{
  int v17 = a1 & 1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for ImageTranslationView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_100022324();
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  sub_10011328C(v1, (uint64_t)&v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  sub_100111E6C((uint64_t)&v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v13 + v12, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  *(unsigned char *)(v13 + v12 + v10) = v17;
  aBlock[4] = sub_100111468;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CE9D0;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100113814((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v4, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v18);
}

uint64_t sub_1001035D8(uint64_t a1)
{
  if (*(void *)(a1 + *(int *)(type metadata accessor for ImageTranslationView() + 60)))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for ConversationContext(0);
    sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

BOOL sub_1001036C4()
{
  type metadata accessor for ImageTranslationView();
  type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  sub_100007620((uint64_t *)&unk_1002F5730);
  Binding.wrappedValue.getter();
  swift_release();
  swift_release();
  sub_10010D860(v3, v4);
  if (v2 != 255) {
    sub_10010D860(v1, v2);
  }
  return v2 != 255;
}

uint64_t sub_100103804@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10010388C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10010D874(v1, v2);
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_10010391C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for ImageTranslationView() + 56));
  if (v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v3;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v5 = enum case for LanguageOption.locale(_:);
    uint64_t v6 = type metadata accessor for LanguageOption();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104);
    return v7(a2, v5, v6);
  }
  else
  {
    type metadata accessor for ConversationManager();
    sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_100103A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = *(void **)(a4 + *(int *)(type metadata accessor for ImageTranslationView() + 56));
  if (v15)
  {
    id v16 = v15;
    LanguageOption.locale.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      Locale.init(identifier:)();
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    id v17 = v16;
    static Published.subscript.setter();
    sub_10008C964();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    type metadata accessor for ConversationManager();
    sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_100103CF4()
{
  return sub_100103D20((void (*)(void))&type metadata accessor for VisualTranslationObservable, (uint64_t (*)(void))&VisualTranslationObservable.init());
}

uint64_t sub_100103D20(void (*a1)(void), uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100103D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = type metadata accessor for ImageTranslationView();
  uint64_t v4 = v3 - 8;
  uint64_t v36 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v37 = v5;
  uint64_t v38 = (uint64_t)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100007620(&qword_1002F5898);
  __chkstk_darwin(v35);
  uint64_t v7 = (void *)((char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100007620(&qword_1002F58A0);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v34 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F58A8);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v39 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v7 = static Alignment.center.getter();
  v7[1] = v12;
  uint64_t v13 = sub_100007620(&qword_1002F58B0);
  sub_10010437C(v2, (uint64_t)v7 + *(int *)(v13 + 44));
  sub_100007620(&qword_1002F58B8);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1002488D0;
  static UTType.jpeg.getter();
  uint64_t v14 = (void *)(v2 + *(int *)(v4 + 68));
  uint64_t v15 = type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  v32[1] = v15;
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  long long v33 = v50;
  uint64_t v16 = v51;
  char v17 = (char)v52;
  uint64_t v18 = *(void *)(v2 + 88);
  char v45 = *(unsigned char *)(v2 + 80);
  uint64_t v46 = v18;
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  id v19 = v47;
  uint64_t v20 = v48;
  char v21 = v49;
  uint64_t v52 = &type metadata for ImageDropDelegate;
  unint64_t v53 = sub_10010D724();
  uint64_t v22 = swift_allocObject();
  *(void *)&long long v50 = v22;
  *(_OWORD *)(v22 + 16) = v33;
  *(void *)(v22 + 32) = v16;
  *(unsigned char *)(v22 + 40) = v17;
  *(void *)(v22 + 48) = v19;
  *(void *)(v22 + 56) = v20;
  *(unsigned char *)(v22 + 64) = v21;
  uint64_t v24 = v34;
  uint64_t v23 = v35;
  uint64_t v25 = sub_100014894(&qword_1002F58C8, &qword_1002F5898);
  View.onDrop(of:delegate:)();
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v7, &qword_1002F5898);
  sub_10000AB68((uint64_t)&v50);
  if (*v14)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v47 = (id)v50;
    LOBYTE(v48) = BYTE8(v50);
    uint64_t v26 = v38;
    sub_10011328C(v2, v38, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    unint64_t v27 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v28 = swift_allocObject();
    sub_100111E6C(v26, v28 + v27, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    sub_100007620(&qword_1002F24F8);
    *(void *)&long long v50 = v23;
    *((void *)&v50 + 1) = v25;
    swift_getOpaqueTypeConformance2();
    sub_10010D798();
    uint64_t v29 = v39;
    uint64_t v30 = v43;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    sub_10010D860(v47, v48);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v30);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v44, v29, v41);
  }
  else
  {
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_10010437C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v171 = a1;
  uint64_t v165 = a2;
  uint64_t v2 = sub_100007620(&qword_1002F58E8);
  __chkstk_darwin(v2 - 8);
  uint64_t v158 = (uint64_t *)((char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v159 = sub_100007620(&qword_1002F58F0);
  __chkstk_darwin(v159);
  uint64_t v160 = (uint64_t)&v134 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F58F8);
  uint64_t v163 = *(void *)(v5 - 8);
  uint64_t v164 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v162 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v161 = (char *)&v134 - v8;
  uint64_t v9 = type metadata accessor for ImageTranslationView();
  uint64_t v167 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v168 = v10;
  uint64_t v157 = (uint64_t)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F5900);
  __chkstk_darwin(v11 - 8);
  uint64_t v154 = (uint64_t *)((char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100007620(&qword_1002F5908);
  uint64_t v155 = *(void *)(v13 - 8);
  uint64_t v156 = v13;
  __chkstk_darwin(v13);
  uint64_t v153 = (uint64_t)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v152 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F1200);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  char v21 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002F1058);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v134 - v27;
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v134 - v29;
  uint64_t v31 = sub_100007620(&qword_1002F5910);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v169 = (uint64_t)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v170 = (uint64_t)&v134 - v34;
  id v166 = (int *)v9;
  sub_100100194((uint64_t)v30);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v28, enum case for UserInterfaceSizeClass.regular(_:), v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  uint64_t v35 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_10000C3A4((uint64_t)v30, (uint64_t)v21, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v28, v35, &qword_1002F1058);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v36((uint64_t)v21, 1, v15) == 1)
  {
    sub_10000B070((uint64_t)v28, &qword_1002F1058);
    sub_10000B070((uint64_t)v30, &qword_1002F1058);
    if (v36(v35, 1, v15) == 1)
    {
      sub_10000B070((uint64_t)v21, &qword_1002F1058);
      uint64_t v37 = v171;
      uint64_t v38 = v156;
LABEL_8:
      uint64_t v44 = static VerticalAlignment.center.getter();
      uint64_t v45 = (uint64_t)v154;
      *uint64_t v154 = v44;
      *(void *)(v45 + 8) = 0;
      *(unsigned char *)(v45 + 16) = 1;
      uint64_t v46 = sub_100007620(&qword_1002F59B8);
      sub_10010590C(v45 + *(int *)(v46 + 44));
      uint64_t v47 = v153;
      sub_10000C3A4(v45, v153, &qword_1002F5900);
      *(void *)(v47 + *(int *)(v38 + 36)) = 0x3FF0000000000000;
      sub_10000B070(v45, &qword_1002F5900);
      uint64_t v40 = v170;
      sub_10001323C(v47, v170, &qword_1002F5908);
      uint64_t v39 = 0;
      goto LABEL_10;
    }
LABEL_6:
    sub_10000B070((uint64_t)v21, &qword_1002F1200);
    uint64_t v39 = 1;
    uint64_t v40 = v170;
    uint64_t v37 = v171;
    uint64_t v38 = v156;
    goto LABEL_10;
  }
  sub_10000C3A4((uint64_t)v21, (uint64_t)v25, &qword_1002F1058);
  if (v36(v35, 1, v15) == 1)
  {
    sub_10000B070((uint64_t)v28, &qword_1002F1058);
    sub_10000B070((uint64_t)v30, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
    goto LABEL_6;
  }
  uint64_t v41 = v152;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v152, v35, v15);
  sub_100113814((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v16 + 8);
  v43(v41, v15);
  sub_10000B070((uint64_t)v28, &qword_1002F1058);
  sub_10000B070((uint64_t)v30, &qword_1002F1058);
  v43(v25, v15);
  sub_10000B070((uint64_t)v21, &qword_1002F1058);
  uint64_t v37 = v171;
  uint64_t v38 = v156;
  if (v42) {
    goto LABEL_8;
  }
  uint64_t v39 = 1;
  uint64_t v40 = v170;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v155 + 56))(v40, v39, 1, v38);
  if (sub_1001036C4())
  {
    uint64_t v48 = v166;
    uint64_t v145 = type metadata accessor for VisualTranslationObservable();
    uint64_t v144 = sub_100113814(&qword_1002F58E0, (void (*)(uint64_t))&type metadata accessor for VisualTranslationObservable);
    uint64_t v143 = StateObject.wrappedValue.getter();
    type metadata accessor for ConversationContext(0);
    sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    EnvironmentObject.projectedValue.getter();
    swift_getKeyPath();
    EnvironmentObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v153 = v175[1];
    uint64_t v154 = (uint64_t *)v175[0];
    uint64_t v152 = (char *)v175[2];
    LODWORD(v151) = LOBYTE(v175[3]);
    uint64_t v49 = *(void *)(v37 + 72);
    LOBYTE(v173[0]) = *(unsigned char *)(v37 + 64);
    v173[1] = v49;
    sub_100007620(&qword_1002F1168);
    State.projectedValue.getter();
    uint64_t v149 = *((void *)&v174[0] + 1);
    uint64_t v150 = *(void *)&v174[0];
    LODWORD(v148) = LOBYTE(v174[1]);
    type metadata accessor for CameraConfiguration(0);
    sub_100113814(&qword_1002F59A8, (void (*)(uint64_t))type metadata accessor for CameraConfiguration);
    StateObject.wrappedValue.getter();
    long long v50 = (uint64_t *)(v37 + v48[12]);
    uint64_t v51 = *v50;
    uint64_t v52 = v50[1];
    v173[0] = v51;
    v173[1] = v52;
    sub_100007620(&qword_1002EF470);
    State.projectedValue.getter();
    uint64_t v146 = *((void *)&v174[0] + 1);
    uint64_t v147 = *(void *)&v174[0];
    uint64_t v53 = *(void *)&v174[1];
    uint64_t v54 = (uint64_t *)(v37 + v48[13]);
    uint64_t v55 = *v54;
    uint64_t v56 = v54[1];
    v173[0] = v55;
    v173[1] = v56;
    State.projectedValue.getter();
    uint64_t v141 = *((void *)&v174[0] + 1);
    uint64_t v142 = *(void *)&v174[0];
    uint64_t v57 = *(void *)&v174[1];
    uint64_t v58 = (uint64_t *)(v37 + v48[18]);
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    v173[0] = v60;
    v173[1] = v59;
    sub_100007620(&qword_1002F5918);
    State.projectedValue.getter();
    uint64_t v139 = *(void *)&v174[0];
    long long v140 = *(_OWORD *)((char *)v174 + 8);
    type metadata accessor for ConversationManager();
    sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t v61 = EnvironmentObject.init()();
    uint64_t v155 = v62;
    uint64_t v156 = v61;
    uint64_t v63 = EnvironmentObject.init()();
    uint64_t v137 = v64;
    uint64_t v138 = v63;
    type metadata accessor for FavoritesImporter();
    sub_100113814(&qword_1002F59B0, (void (*)(uint64_t))type metadata accessor for FavoritesImporter);
    uint64_t v65 = EnvironmentObject.init()();
    uint64_t v135 = v66;
    *(void *)&long long v136 = v65;
    uint64_t v67 = ObservedObject.init(wrappedValue:)();
    uint64_t v69 = v68;
    uint64_t v70 = ObservedObject.init(wrappedValue:)();
    uint64_t v72 = v71;
    if (qword_1002EE5A0 != -1) {
      swift_once();
    }
    uint64_t v73 = qword_10030E8A8;
    swift_retain();
    char v74 = static Edge.Set.all.getter();
    char v75 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    char v76 = Edge.Set.init(rawValue:)();
    uint64_t v77 = v167;
    if (v76 != v74) {
      char v75 = Edge.Set.init(rawValue:)();
    }
    uint64_t v78 = v157;
    sub_10011328C(v171, v157, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    unint64_t v79 = (*(unsigned __int8 *)(v77 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    uint64_t v80 = swift_allocObject();
    sub_100111E6C(v78, v80 + v79, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    *(void *)&v174[0] = v156;
    *((void *)&v174[0] + 1) = v155;
    *(void *)&v174[1] = v138;
    *((void *)&v174[1] + 1) = v137;
    *(void *)&v174[2] = v136;
    *((void *)&v174[2] + 1) = v135;
    *(void *)&v174[3] = v67;
    *((void *)&v174[3] + 1) = v69;
    *(void *)&v174[4] = v154;
    *((void *)&v174[4] + 1) = v153;
    *(void *)&v174[5] = v152;
    BYTE8(v174[5]) = v151;
    *(void *)&v174[6] = v150;
    *((void *)&v174[6] + 1) = v149;
    LOBYTE(v174[7]) = v148;
    *((void *)&v174[7] + 1) = v70;
    *(void *)&v174[8] = v72;
    *((void *)&v174[8] + 1) = v147;
    *(void *)&v174[9] = v146;
    *((void *)&v174[9] + 1) = v53;
    *(void *)&v174[10] = v142;
    *((void *)&v174[10] + 1) = v141;
    *(void *)&v174[11] = v57;
    *((void *)&v174[11] + 1) = v73;
    *(void *)&v174[12] = v139;
    *(_OWORD *)((char *)&v174[12] + 8) = v140;
    BYTE8(v174[13]) = v75;
    v174[14] = 0uLL;
    *(void *)&v174[15] = sub_10010F7AC;
    *((void *)&v174[15] + 1) = v80;
    sub_10010F7C4((uint64_t)v174);
  }
  else
  {
    char v81 = v166;
    type metadata accessor for ConversationContext(0);
    sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    EnvironmentObject.projectedValue.getter();
    swift_getKeyPath();
    EnvironmentObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v155 = v175[1];
    uint64_t v156 = v175[0];
    uint64_t v154 = (uint64_t *)v175[2];
    LODWORD(v153) = LOBYTE(v175[3]);
    uint64_t v82 = *(void *)(v37 + 24);
    LOBYTE(v173[0]) = *(unsigned char *)(v37 + 16);
    v173[1] = v82;
    sub_100007620(&qword_1002F1168);
    State.projectedValue.getter();
    uint64_t v151 = *((void *)&v174[0] + 1);
    uint64_t v152 = *(char **)&v174[0];
    LODWORD(v150) = LOBYTE(v174[1]);
    uint64_t v83 = *(void *)(v37 + 8);
    LOBYTE(v173[0]) = *(unsigned char *)v37;
    v173[1] = v83;
    State.projectedValue.getter();
    uint64_t v148 = *((void *)&v174[0] + 1);
    uint64_t v149 = *(void *)&v174[0];
    LODWORD(v147) = LOBYTE(v174[1]);
    uint64_t v84 = *(void *)(v37 + 56);
    LOBYTE(v173[0]) = *(unsigned char *)(v37 + 48);
    v173[1] = v84;
    State.projectedValue.getter();
    uint64_t v145 = *((void *)&v174[0] + 1);
    uint64_t v146 = *(void *)&v174[0];
    LODWORD(v144) = LOBYTE(v174[1]);
    uint64_t v85 = *(void *)(v37 + 88);
    LOBYTE(v173[0]) = *(unsigned char *)(v37 + 80);
    v173[1] = v85;
    State.projectedValue.getter();
    uint64_t v142 = *((void *)&v174[0] + 1);
    uint64_t v143 = *(void *)&v174[0];
    LODWORD(v141) = LOBYTE(v174[1]);
    uint64_t v86 = (uint64_t *)(v37 + v81[12]);
    uint64_t v87 = *v86;
    uint64_t v88 = v86[1];
    v173[0] = v87;
    v173[1] = v88;
    sub_100007620(&qword_1002EF470);
    State.projectedValue.getter();
    uint64_t v139 = *((void *)&v174[0] + 1);
    *(void *)&long long v140 = *(void *)&v174[0];
    uint64_t v89 = *(void *)&v174[1];
    uint64_t v90 = (uint64_t *)(v37 + v81[13]);
    uint64_t v91 = *v90;
    uint64_t v92 = v90[1];
    v173[0] = v91;
    v173[1] = v92;
    State.projectedValue.getter();
    uint64_t v137 = *((void *)&v174[0] + 1);
    uint64_t v138 = *(void *)&v174[0];
    uint64_t v93 = *(void *)&v174[1];
    id v94 = (uint64_t *)(v37 + v81[18]);
    uint64_t v96 = *v94;
    uint64_t v95 = v94[1];
    v173[0] = v96;
    v173[1] = v95;
    sub_100007620(&qword_1002F5918);
    State.projectedValue.getter();
    uint64_t v135 = *(void *)&v174[0];
    long long v136 = *(_OWORD *)((char *)v174 + 8);
    type metadata accessor for ConversationManager();
    sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t v97 = EnvironmentObject.init()();
    uint64_t v99 = v98;
    uint64_t v100 = EnvironmentObject.init()();
    uint64_t v102 = v101;
    if (qword_1002EE5A0 != -1) {
      swift_once();
    }
    uint64_t v103 = qword_10030E8A8;
    swift_retain();
    unsigned __int8 v104 = static Edge.Set.all.getter();
    char v105 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v104) {
      char v105 = Edge.Set.init(rawValue:)();
    }
    uint64_t v106 = v157;
    sub_10011328C(v37, v157, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    unint64_t v107 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
    uint64_t v108 = swift_allocObject();
    uint64_t v109 = v108 + v107;
    uint64_t v78 = v106;
    sub_100111E6C(v106, v109, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    *(void *)&v174[0] = v97;
    *((void *)&v174[0] + 1) = v99;
    *(void *)&v174[1] = v100;
    *((void *)&v174[1] + 1) = v102;
    *(void *)&v174[2] = v156;
    *((void *)&v174[2] + 1) = v155;
    *(void *)&v174[3] = v154;
    BYTE8(v174[3]) = v153;
    *(void *)&v174[4] = v152;
    *((void *)&v174[4] + 1) = v151;
    LOBYTE(v174[5]) = v150;
    *((void *)&v174[5] + 1) = v149;
    *(void *)&v174[6] = v148;
    BYTE8(v174[6]) = v147;
    *(void *)&v174[7] = v103;
    *((void *)&v174[7] + 1) = v146;
    *(void *)&v174[8] = v145;
    BYTE8(v174[8]) = v144;
    *(void *)&v174[9] = v143;
    *((void *)&v174[9] + 1) = v142;
    LOBYTE(v174[10]) = v141;
    *((void *)&v174[10] + 1) = v140;
    *(void *)&v174[11] = v139;
    *((void *)&v174[11] + 1) = v89;
    *(void *)&v174[12] = v138;
    *((void *)&v174[12] + 1) = v137;
    *(void *)&v174[13] = v93;
    *((void *)&v174[13] + 1) = v135;
    v174[14] = v136;
    LOBYTE(v174[15]) = v105;
    *(void *)&v174[16] = 0;
    *((void *)&v174[15] + 1) = 0;
    *((void *)&v174[16] + 1) = sub_10010EEAC;
    *(void *)&v174[17] = v108;
    sub_10010EEC4((uint64_t)v174);
  }
  sub_10001323C((uint64_t)v174, (uint64_t)v173, &qword_1002F5920);
  sub_100007620(&qword_1002F5928);
  sub_100007620(&qword_1002F5930);
  sub_10010EF00(&qword_1002F5938, &qword_1002F5928, (void (*)(void))sub_10010EED0);
  sub_10010EF00(&qword_1002F5958, &qword_1002F5930, (void (*)(void))sub_10010EFD0);
  _ConditionalContent<>.init(storage:)();
  uint64_t v110 = static HorizontalAlignment.center.getter();
  uint64_t v111 = (uint64_t)v158;
  uint64_t *v158 = v110;
  *(void *)(v111 + 8) = 0;
  *(unsigned char *)(v111 + 16) = 1;
  uint64_t v112 = sub_100007620(&qword_1002F5978);
  uint64_t v113 = v171;
  sub_1001094A8(v171, v111 + *(int *)(v112 + 44));
  uint64_t v114 = static SafeAreaRegions.keyboard.getter();
  char v115 = static Edge.Set.all.getter();
  uint64_t v116 = v160;
  sub_10000C3A4(v111, v160, &qword_1002F58E8);
  uint64_t v117 = v116 + *(int *)(v159 + 36);
  *(void *)uint64_t v117 = v114;
  *(unsigned char *)(v117 + 8) = v115;
  sub_10000B070(v111, &qword_1002F58E8);
  uint64_t v118 = v113 + v166[19];
  char v119 = *(unsigned char *)v118;
  uint64_t v120 = *(void *)(v118 + 8);
  LOBYTE(v173[0]) = v119;
  v173[1] = v120;
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  sub_10011328C(v113, v78, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  unint64_t v121 = (*(unsigned __int8 *)(v167 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
  uint64_t v122 = swift_allocObject();
  sub_100111E6C(v78, v122 + v121, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  sub_100007620(&qword_1002F5980);
  sub_10010F0C8();
  sub_10010F168();
  uint64_t v123 = v162;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10000B070(v116, &qword_1002F58F0);
  uint64_t v125 = v163;
  uint64_t v124 = v164;
  uint64_t v126 = v161;
  (*(void (**)(char *, char *, uint64_t))(v163 + 32))(v161, v123, v164);
  uint64_t v127 = v169;
  sub_10000C3A4(v170, v169, &qword_1002F5910);
  memcpy(v172, v175, sizeof(v172));
  uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
  v128(v123, v126, v124);
  uint64_t v129 = v165;
  sub_10000C3A4(v127, v165, &qword_1002F5910);
  uint64_t v130 = sub_100007620(&qword_1002F59A0);
  Swift::String v131 = (void *)(v129 + *(int *)(v130 + 48));
  memcpy(v173, v172, 0x119uLL);
  memcpy(v131, v172, 0x119uLL);
  v128((char *)(v129 + *(int *)(v130 + 64)), v123, v124);
  sub_10010F49C((uint64_t)v173, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10010F214);
  Swift::String v132 = *(void (**)(char *, uint64_t))(v125 + 8);
  v132(v126, v124);
  sub_10000B070(v170, &qword_1002F5910);
  v132(v123, v124);
  memcpy(v174, v172, 0x119uLL);
  sub_10010F49C((uint64_t)v174, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_10010F530);
  return sub_10000B070(v169, &qword_1002F5910);
}

uint64_t sub_10010590C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100007620(&qword_1002F59C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F59C8);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0x403E000000000000;
  v4[16] = 0;
  uint64_t v12 = sub_100007620(&qword_1002F59D0);
  sub_100105AFC(&v4[*(int *)(v12 + 44)]);
  char v13 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_10000C3A4((uint64_t)v4, (uint64_t)v9, &qword_1002F59C0);
  uint64_t v22 = &v9[*(int *)(v6 + 44)];
  char *v22 = v13;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_10000B070((uint64_t)v4, &qword_1002F59C0);
  sub_10001323C((uint64_t)v9, (uint64_t)v11, &qword_1002F59C8);
  sub_10000C3A4((uint64_t)v11, (uint64_t)v9, &qword_1002F59C8);
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  uint64_t v23 = sub_100007620(&qword_1002F59D8);
  sub_10000C3A4((uint64_t)v9, a1 + *(int *)(v23 + 48), &qword_1002F59C8);
  sub_10000B070((uint64_t)v11, &qword_1002F59C8);
  return sub_10000B070((uint64_t)v9, &qword_1002F59C8);
}

uint64_t sub_100105AFC@<X0>(char *a1@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v1 = sub_100007620(&qword_1002F59E0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v36 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v35 = sub_100007620(&qword_1002F59E8);
  uint64_t v31 = *(void *)(v35 - 8);
  uint64_t v6 = v31;
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_100007620(&qword_1002F59F0);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v12 = v34;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v29 - v16;
  uint64_t v33 = (char *)&v29 - v16;
  sub_100105E58((uint64_t)&v29 - v16);
  uint64_t v30 = v10;
  sub_10010683C((uint64_t)v10);
  uint64_t v29 = v5;
  sub_1001072D0((uint64_t)v5);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v32 = v15;
  v18(v15, v17, v11);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v20 = v38;
  uint64_t v21 = v35;
  v19(v38, v10, v35);
  uint64_t v22 = (uint64_t)v5;
  uint64_t v23 = v36;
  sub_10000C3A4(v22, v36, &qword_1002F59E0);
  uint64_t v24 = v37;
  v18(v37, v15, v11);
  uint64_t v25 = sub_100007620(&qword_1002F59F8);
  v19(&v24[*(int *)(v25 + 48)], v20, v21);
  sub_10000C3A4(v23, (uint64_t)&v24[*(int *)(v25 + 64)], &qword_1002F59E0);
  sub_10000B070((uint64_t)v29, &qword_1002F59E0);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v31 + 8);
  v26(v30, v21);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v34 + 8);
  v27(v33, v11);
  sub_10000B070(v23, &qword_1002F59E0);
  v26(v38, v21);
  return ((uint64_t (*)(char *, uint64_t))v27)(v32, v11);
}

uint64_t sub_100105E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  __chkstk_darwin(v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ImageTranslationButtonStyle.Style();
  uint64_t v53 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ImageTranslationButtonStyle();
  uint64_t v59 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ImageTranslationView();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v50 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v51 = sub_100007620(&qword_1002EFEB0);
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100007620(&qword_1002F5A00);
  uint64_t v13 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100007620(&qword_1002F5A08);
  __chkstk_darwin(v54);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100007620(&qword_1002F5A10);
  uint64_t v18 = __chkstk_darwin(v61);
  uint64_t v56 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v60 = (char *)&v48 - v20;
  uint64_t v63 = sub_100007620(&qword_1002F5A18);
  __chkstk_darwin(v63);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002F5A20);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v64 = v23;
  uint64_t v65 = v24;
  __chkstk_darwin(v23);
  uint64_t v62 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011328C(v2, (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  unint64_t v26 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v27 = swift_allocObject();
  sub_100111E6C((uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  Button.init(action:label:)();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v6, enum case for ImageTranslationButtonStyle.Style.secondary(_:), v57);
  ImageTranslationButtonStyle.init(style:highlighted:)();
  sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
  sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
  uint64_t v28 = v51;
  uint64_t v29 = v55;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v29);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v12, v28);
  uint64_t v30 = v49;
  uint64_t v31 = *(void *)(v49 + 88);
  LOBYTE(v70) = *(unsigned char *)(v49 + 80);
  uint64_t v71 = v31;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  LOBYTE(v10) = v72;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = v10;
  uint64_t v34 = v58;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v15, v58);
  uint64_t v35 = (uint64_t *)&v17[*(int *)(v54 + 36)];
  uint64_t *v35 = KeyPath;
  v35[1] = (uint64_t)sub_100113968;
  v35[2] = v33;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v34);
  LocalizedStringKey.init(stringLiteral:)();
  sub_100110F98(&qword_1002F5A80, &qword_1002F5A08, &qword_1002EFEB0, &qword_1002EFEC8);
  uint64_t v36 = (uint64_t)v56;
  View.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v17, &qword_1002F5A08);
  uint64_t v37 = (uint64_t)v60;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_10000B070(v36, &qword_1002F5A10);
  uint64_t v38 = *(void *)(v30 + 88);
  LOBYTE(v70) = *(unsigned char *)(v30 + 80);
  uint64_t v71 = v38;
  State.wrappedValue.getter();
  if (v72) {
    double v39 = 0.6;
  }
  else {
    double v39 = 1.0;
  }
  sub_10000C3A4(v37, (uint64_t)v22, &qword_1002F5A10);
  uint64_t v40 = v63;
  *(double *)&v22[*(int *)(v63 + 36)] = v39;
  sub_10000B070(v37, &qword_1002F5A10);
  char v42 = v66;
  uint64_t v41 = v67;
  uint64_t v43 = v68;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, enum case for DynamicTypeSize.large(_:), v68);
  uint64_t v44 = sub_10010EF00(&qword_1002F5A98, &qword_1002F5A18, (void (*)(void))sub_10010FE48);
  uint64_t v45 = v62;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  sub_10000B070((uint64_t)v22, &qword_1002F5A18);
  sub_100007620(&qword_1002EED40);
  uint64_t v70 = v40;
  uint64_t v71 = v44;
  swift_getOpaqueTypeConformance2();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  uint64_t v46 = v64;
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v45, v46);
}

uint64_t sub_10010683C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v68 = a1;
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for ImageTranslationButtonStyle.Style();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for ImageTranslationButtonStyle();
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ImageTranslationView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = sub_100007620(&qword_1002F5AF8);
  uint64_t v50 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100007620(&qword_1002F5B00);
  uint64_t v13 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F5B08);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100007620(&qword_1002F5B10);
  uint64_t v19 = __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v59 = (char *)&v49 - v21;
  uint64_t v61 = sub_100007620(&qword_1002F5B18);
  __chkstk_darwin(v61);
  uint64_t v60 = (uint64_t)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002F5B20);
  uint64_t v63 = *(void *)(v23 - 8);
  uint64_t v64 = v23;
  __chkstk_darwin(v23);
  uint64_t v62 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011328C(v2, (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  unint64_t v25 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v26 = swift_allocObject() + v25;
  uint64_t v27 = v16;
  sub_100111E6C((uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v26, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  uint64_t v69 = v2;
  sub_100007620(&qword_1002F5B28);
  sub_100110F1C();
  Button.init(action:label:)();
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for ImageTranslationButtonStyle.Style.primary(_:), v53);
  ImageTranslationButtonStyle.init(style:highlighted:)();
  sub_100014894(&qword_1002F5B38, &qword_1002F5AF8);
  sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
  uint64_t v28 = v49;
  uint64_t v29 = v55;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v29);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v28);
  uint64_t v30 = *(void *)(v2 + 88);
  LOBYTE(v70) = *(unsigned char *)(v2 + 80);
  uint64_t v71 = v30;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  LOBYTE(v28) = v72;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v28;
  uint64_t v33 = v54;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v54);
  uint64_t v34 = (uint64_t *)&v18[*(int *)(v27 + 36)];
  *uint64_t v34 = KeyPath;
  v34[1] = (uint64_t)sub_100113968;
  v34[2] = v32;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
  sub_1001036C4();
  LocalizedStringKey.init(stringLiteral:)();
  sub_100110F98(&qword_1002F5B40, &qword_1002F5B08, &qword_1002F5AF8, &qword_1002F5B38);
  uint64_t v35 = (uint64_t)v57;
  View.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v18, &qword_1002F5B08);
  sub_1001036C4();
  uint64_t v36 = (uint64_t)v59;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10000B070(v35, &qword_1002F5B10);
  uint64_t v37 = *(void *)(v2 + 88);
  LOBYTE(v70) = *(unsigned char *)(v2 + 80);
  uint64_t v71 = v37;
  State.wrappedValue.getter();
  if (v72) {
    double v38 = 0.6;
  }
  else {
    double v38 = 1.0;
  }
  uint64_t v39 = v60;
  sub_10000C3A4(v36, v60, &qword_1002F5B10);
  uint64_t v40 = v61;
  *(double *)(v39 + *(int *)(v61 + 36)) = v38;
  sub_10000B070(v36, &qword_1002F5B10);
  char v42 = v65;
  uint64_t v41 = v66;
  uint64_t v43 = v67;
  (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, enum case for DynamicTypeSize.large(_:), v67);
  uint64_t v44 = sub_10010EF00(&qword_1002F5B48, &qword_1002F5B18, (void (*)(void))sub_1001110D8);
  uint64_t v45 = v62;
  View.dynamicTypeSize(_:)();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
  uint64_t v46 = sub_10000B070(v39, &qword_1002F5B18);
  __chkstk_darwin(v46);
  *(&v49 - 2) = v2;
  sub_100007620(&qword_1002EED40);
  uint64_t v70 = v40;
  uint64_t v71 = v44;
  swift_getOpaqueTypeConformance2();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  uint64_t v47 = v64;
  View.accessibilityShowsLargeContentViewer<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v45, v47);
}

uint64_t sub_1001072D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v189 = a1;
  uint64_t v157 = sub_100007620(&qword_1002EFEB0);
  uint64_t v156 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v155 = (char *)&v132 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_100007620(&qword_1002F5A00);
  uint64_t v159 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v158 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100007620(&qword_1002F5A08);
  __chkstk_darwin(v161);
  uint64_t v163 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100007620(&qword_1002F5A10);
  uint64_t v6 = __chkstk_darwin(v164);
  id v162 = (char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v165 = (char *)&v132 - v8;
  uint64_t v185 = sub_100007620(&qword_1002F5A18);
  __chkstk_darwin(v185);
  uint64_t v166 = (uint64_t)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_100007620(&qword_1002F5A20);
  uint64_t v169 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v168 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100007620(&qword_1002F59F0);
  uint64_t v171 = *(void *)(v188 - 8);
  uint64_t v11 = __chkstk_darwin(v188);
  uint64_t v167 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v170 = (char *)&v132 - v13;
  uint64_t v184 = sub_100007620(&qword_1002F5A28);
  __chkstk_darwin(v184);
  uint64_t v186 = (char *)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for DynamicTypeSize();
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  long long v180 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for ImageTranslationButtonStyle.Style();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v172 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ImageTranslationButtonStyle();
  uint64_t v176 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v175 = (char *)&v132 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007620(&qword_1002F5A30);
  __chkstk_darwin(v19 - 8);
  Swift::String v132 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100007620(&qword_1002F5A38);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v133 = (char *)&v132 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100007620(&qword_1002F5A40);
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  long long v136 = (char *)&v132 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100007620(&qword_1002F5A48);
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v139 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100007620(&qword_1002F5A50);
  __chkstk_darwin(v142);
  uint64_t v144 = (char *)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_100007620(&qword_1002F5A58);
  uint64_t v25 = __chkstk_darwin(v145);
  uint64_t v143 = (char *)&v132 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v146 = (char *)&v132 - v27;
  uint64_t v178 = sub_100007620(&qword_1002F5A60);
  __chkstk_darwin(v178);
  uint64_t v147 = (uint64_t)&v132 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100007620(&qword_1002F5A68);
  uint64_t v150 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v149 = (char *)&v132 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_100007620(&qword_1002F5A70);
  uint64_t v152 = *(void *)(v183 - 8);
  uint64_t v30 = __chkstk_darwin(v183);
  uint64_t v148 = (char *)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v151 = (char *)&v132 - v32;
  uint64_t v33 = (int *)type metadata accessor for ImageTranslationView();
  uint64_t v153 = *((void *)v33 - 1);
  uint64_t v34 = *(void *)(v153 + 64);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v154 = (uint64_t)&v132 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v35);
  double v38 = (char *)&v132 - v37;
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v132 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v132 - v43;
  __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v132 - v45;
  uint64_t v47 = *(void *)(v1 + 88);
  LOBYTE(v193) = *(unsigned char *)(v1 + 80);
  uint64_t v194 = v47;
  uint64_t v190 = sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  int v48 = v197;
  sub_10011328C(v1, (uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  uint64_t OpaqueTypeConformance2 = v1;
  uint64_t v177 = v17;
  uint64_t v191 = v33;
  if (v48 == 1)
  {
    sub_1001132F4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    int v49 = 1;
  }
  else
  {
    type metadata accessor for ConversationContext(0);
    sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
    EnvironmentObject.projectedValue.getter();
    swift_getKeyPath();
    EnvironmentObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v50 = v195;
    char v51 = v196;
    uint64_t v197 = (uint64_t)v193;
    uint64_t v198 = v194;
    uint64_t v199 = v195;
    char v200 = v196;
    sub_100007620((uint64_t *)&unk_1002F5730);
    Binding.wrappedValue.getter();
    swift_release();
    swift_release();
    sub_10010D860(v50, v51);
    if (v202 == 255)
    {
      sub_10011328C((uint64_t)v46, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      sub_1001132F4((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      sub_1001132F4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      int v49 = 0;
    }
    else
    {
      sub_10010D860(v201, v202);
      sub_10011328C((uint64_t)v46, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      uint64_t v52 = *((void *)v44 + 9);
      LOBYTE(v193) = v44[64];
      uint64_t v194 = v52;
      State.wrappedValue.getter();
      sub_1001132F4((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      sub_1001132F4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
      int v49 = v197 ^ 1;
    }
    uint64_t v2 = OpaqueTypeConformance2;
    uint64_t v17 = v177;
  }
  BOOL v53 = sub_1001036C4();
  sub_10011328C(v2, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  if (!v53)
  {
    uint64_t v54 = *((void *)v41 + 1);
    LOBYTE(v193) = *v41;
    uint64_t v194 = v54;
    State.wrappedValue.getter();
  }
  sub_1001132F4((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  BOOL v55 = sub_1001036C4();
  sub_10011328C(v2, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  if (v55)
  {
    sub_1001132F4((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  }
  else
  {
    uint64_t v56 = *((void *)v38 + 3);
    LOBYTE(v193) = v38[16];
    uint64_t v194 = v56;
    State.wrappedValue.getter();
    sub_1001132F4((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    double v57 = 0.0;
    if (v197 != 1) {
      goto LABEL_15;
    }
  }
  if (v49) {
    double v57 = 0.6;
  }
  else {
    double v57 = 1.0;
  }
LABEL_15:
  if (!sub_1001036C4())
  {
    uint64_t v98 = v154;
    sub_10011328C(v2, v154, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    unint64_t v99 = (*(unsigned __int8 *)(v153 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
    uint64_t v100 = swift_allocObject();
    uint64_t v101 = sub_100111E6C(v98, v100 + v99, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
    __chkstk_darwin(v101);
    uint64_t v102 = v155;
    Button.init(action:label:)();
    (*(void (**)(char *, void, uint64_t))(v173 + 104))(v172, enum case for ImageTranslationButtonStyle.Style.secondary(_:), v174);
    uint64_t v103 = v175;
    ImageTranslationButtonStyle.init(style:highlighted:)();
    sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
    sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
    unsigned __int8 v104 = v158;
    char v105 = v49;
    uint64_t v106 = v157;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v176 + 8))(v103, v17);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v102, v106);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = v105 & 1;
    uint64_t v109 = v159;
    uint64_t v110 = (uint64_t)v163;
    uint64_t v111 = v160;
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v163, v104, v160);
    uint64_t v112 = (uint64_t *)(v110 + *(int *)(v161 + 36));
    *uint64_t v112 = KeyPath;
    v112[1] = (uint64_t)sub_10010FE30;
    v112[2] = v108;
    (*(void (**)(char *, uint64_t))(v109 + 8))(v104, v111);
    LocalizedStringKey.init(stringLiteral:)();
    sub_100110F98(&qword_1002F5A80, &qword_1002F5A08, &qword_1002EFEB0, &qword_1002EFEC8);
    uint64_t v113 = (uint64_t)v162;
    View.accessibilityLabel(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10000B070(v110, &qword_1002F5A08);
    uint64_t v114 = (uint64_t)v165;
    ModifiedContent<>.accessibilityIdentifier(_:)();
    sub_10000B070(v113, &qword_1002F5A10);
    uint64_t v115 = v166;
    sub_10000C3A4(v114, v166, &qword_1002F5A10);
    uint64_t v116 = v185;
    *(double *)(v115 + *(int *)(v185 + 36)) = v57;
    sub_10000B070(v114, &qword_1002F5A10);
    uint64_t v117 = v181;
    uint64_t v118 = v180;
    uint64_t v119 = v182;
    (*(void (**)(char *, void, uint64_t))(v181 + 104))(v180, enum case for DynamicTypeSize.large(_:), v182);
    uint64_t v120 = sub_10010EF00(&qword_1002F5A98, &qword_1002F5A18, (void (*)(void))sub_10010FE48);
    unint64_t v121 = v168;
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v118, v119);
    uint64_t v122 = sub_10000B070(v115, &qword_1002F5A18);
    __chkstk_darwin(v122);
    uint64_t v123 = sub_100007620(&qword_1002EED40);
    double v193 = (int *)v116;
    uint64_t v194 = v120;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v124 = sub_100014894(&qword_1002EED78, &qword_1002EED40);
    uint64_t v125 = v167;
    uint64_t v126 = v187;
    View.accessibilityShowsLargeContentViewer<A>(_:)();
    (*(void (**)(char *, uint64_t))(v169 + 8))(v121, v126);
    uint64_t v127 = v171;
    uint64_t v128 = v170;
    uint64_t v129 = v188;
    (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v170, v125, v188);
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v186, v128, v129);
    swift_storeEnumTagMultiPayload();
    uint64_t v130 = sub_10010EF00(&qword_1002F5AA8, &qword_1002F5A60, (void (*)(void))sub_10010FF1C);
    double v193 = (int *)v178;
    uint64_t v194 = v130;
    uint64_t v131 = swift_getOpaqueTypeConformance2();
    double v193 = (int *)v179;
    uint64_t v194 = v123;
    uint64_t v195 = (void *)v131;
    uint64_t v196 = v124;
    swift_getOpaqueTypeConformance2();
    double v193 = (int *)v126;
    uint64_t v194 = v123;
    uint64_t v195 = (void *)OpaqueTypeConformance2;
    uint64_t v196 = v124;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v128, v129);
  }
  uint64_t v58 = (void *)(v2 + v191[15]);
  if (*v58)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    int v59 = v194;
    if (v194 == 255)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    LODWORD(v171) = v49;
    uint64_t v60 = v193;
    type metadata accessor for VisualTranslationObservable();
    sub_100113814(&qword_1002F58E0, (void (*)(uint64_t))&type metadata accessor for VisualTranslationObservable);
    uint64_t v61 = StateObject.wrappedValue.getter();
    double v193 = v60;
    uint64_t v194 = v61;
    swift_retain();
    uint64_t v191 = v60;
    sub_10010D874(v60, v59);
    LocalizedStringKey.init(stringLiteral:)();
    if (*v58)
    {
      uint64_t v190 = v61;
      LODWORD(OpaqueTypeConformance2) = v59;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      if (v198 != 255)
      {
        uint64_t v197 = Image.init(uiImage:)();
        sub_10011014C();
        SharePreview<>.init(_:image:)();
        sub_1001101A0();
        uint64_t v62 = v133;
        ShareLink.init<A>(item:subject:message:preview:label:)();
        sub_100007620(&qword_1002F5AD8);
        type metadata accessor for PresentationDetent();
        uint64_t v63 = swift_allocObject();
        *(_OWORD *)(v63 + 16) = xmmword_100247140;
        static PresentationDetent.medium.getter();
        static PresentationDetent.large.getter();
        sub_100110BD0(v63);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v64 = sub_100014894(&qword_1002F5AC0, &qword_1002F5A38);
        uint64_t v65 = v136;
        uint64_t v66 = v135;
        View.presentationDetents(_:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v134 + 8))(v62, v66);
        (*(void (**)(char *, void, uint64_t))(v173 + 104))(v172, enum case for ImageTranslationButtonStyle.Style.secondary(_:), v174);
        uint64_t v67 = v175;
        ImageTranslationButtonStyle.init(style:highlighted:)();
        double v193 = (int *)v66;
        uint64_t v194 = v64;
        swift_getOpaqueTypeConformance2();
        sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
        uint64_t v68 = v139;
        uint64_t v69 = v138;
        uint64_t v70 = v177;
        View.buttonStyle<A>(_:)();
        (*(void (**)(char *, uint64_t))(v176 + 8))(v67, v70);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v65, v69);
        uint64_t v71 = swift_getKeyPath();
        uint64_t v72 = swift_allocObject();
        *(unsigned char *)(v72 + 16) = v171 & 1;
        uint64_t v73 = v140;
        uint64_t v74 = (uint64_t)v144;
        uint64_t v75 = v141;
        (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v144, v68, v141);
        char v76 = (uint64_t *)(v74 + *(int *)(v142 + 36));
        *char v76 = v71;
        v76[1] = (uint64_t)sub_100113968;
        v76[2] = v72;
        (*(void (**)(char *, uint64_t))(v73 + 8))(v68, v75);
        LocalizedStringKey.init(stringLiteral:)();
        sub_10010FFC8();
        uint64_t v77 = (uint64_t)v143;
        View.accessibilityLabel(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10000B070(v74, &qword_1002F5A50);
        uint64_t v78 = (uint64_t)v146;
        ModifiedContent<>.accessibilityIdentifier(_:)();
        sub_10000B070(v77, &qword_1002F5A58);
        uint64_t v79 = v147;
        sub_10000C3A4(v78, v147, &qword_1002F5A58);
        uint64_t v80 = v178;
        *(double *)(v79 + *(int *)(v178 + 36)) = v57;
        sub_10000B070(v78, &qword_1002F5A58);
        uint64_t v81 = v181;
        uint64_t v82 = v180;
        uint64_t v83 = v182;
        (*(void (**)(char *, void, uint64_t))(v181 + 104))(v180, enum case for DynamicTypeSize.large(_:), v182);
        uint64_t v84 = sub_10010EF00(&qword_1002F5AA8, &qword_1002F5A60, (void (*)(void))sub_10010FF1C);
        uint64_t v85 = v149;
        View.dynamicTypeSize(_:)();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
        sub_10000B070(v79, &qword_1002F5A60);
        uint64_t v86 = sub_100007620(&qword_1002EED40);
        double v193 = (int *)v80;
        uint64_t v194 = v84;
        uint64_t v87 = swift_getOpaqueTypeConformance2();
        uint64_t v88 = sub_100014894(&qword_1002EED78, &qword_1002EED40);
        uint64_t v89 = v148;
        uint64_t v90 = v179;
        View.accessibilityShowsLargeContentViewer<A>(_:)();
        (*(void (**)(char *, uint64_t))(v150 + 8))(v85, v90);
        uint64_t v91 = v152;
        uint64_t v92 = v151;
        uint64_t v93 = v89;
        uint64_t v94 = v183;
        (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v151, v93, v183);
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v186, v92, v94);
        swift_storeEnumTagMultiPayload();
        double v193 = (int *)v90;
        uint64_t v194 = v86;
        uint64_t v195 = (void *)v87;
        uint64_t v196 = v88;
        swift_getOpaqueTypeConformance2();
        uint64_t v95 = sub_10010EF00(&qword_1002F5A98, &qword_1002F5A18, (void (*)(void))sub_10010FE48);
        double v193 = (int *)v185;
        uint64_t v194 = v95;
        uint64_t v96 = swift_getOpaqueTypeConformance2();
        double v193 = (int *)v187;
        uint64_t v194 = v86;
        uint64_t v195 = (void *)v96;
        uint64_t v196 = v88;
        swift_getOpaqueTypeConformance2();
        _ConditionalContent<>.init(storage:)();
        sub_10010D860(v191, OpaqueTypeConformance2);
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v92, v94);
      }
      goto LABEL_23;
    }
  }
LABEL_24:
  type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

void sub_10010922C()
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E960);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Camera preview is going away, removing guidance", v3, 2u);
    swift_slowDealloc();
  }

  sub_1000FA1D0();
}

uint64_t sub_100109310()
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E960);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Camera preview is going away, removing guidance", v3, 2u);
    swift_slowDealloc();
  }

  sub_1000FA1D0();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Camera preview is going away, turning off flashlight", v6, 2u);
    swift_slowDealloc();
  }

  sub_100007620(&qword_1002F1168);
  return State.wrappedValue.setter();
}

uint64_t sub_1001094A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v266 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F5B58);
  __chkstk_darwin(v3 - 8);
  uint64_t v211 = (uint64_t *)((char *)&v209 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = sub_100007620(&qword_1002F5B60);
  __chkstk_darwin(v209);
  uint64_t v213 = (uint64_t)&v209 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = sub_100007620(&qword_1002F5B68);
  __chkstk_darwin(v210);
  uint64_t v215 = (uint64_t)&v209 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = sub_100007620(&qword_1002F5B70);
  __chkstk_darwin(v212);
  uint64_t v217 = (uint64_t)&v209 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v214 = sub_100007620(&qword_1002F5B78);
  __chkstk_darwin(v214);
  uint64_t v219 = (uint64_t)&v209 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_100007620(&qword_1002F5B80);
  __chkstk_darwin(v216);
  uint64_t v218 = (uint64_t)&v209 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_100007620(&qword_1002F5B88);
  __chkstk_darwin(v221);
  uint64_t v222 = (uint64_t)&v209 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = sub_100007620(&qword_1002F5B90);
  uint64_t v263 = *(void *)(v264 - 8);
  __chkstk_darwin(v264);
  uint64_t v220 = (char *)&v209 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F5B98);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v265 = (uint64_t)&v209 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v269 = (char *)&v209 - v15;
  uint64_t v16 = sub_100007620(&qword_1002F04A0);
  __chkstk_darwin(v16 - 8);
  int v232 = (char *)&v209 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ImageTranslationView();
  uint64_t v223 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v224 = v19;
  uint64_t v225 = (uint64_t)&v209 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007620(&qword_1002F0498);
  __chkstk_darwin(v20 - 8);
  uint64_t v228 = (char *)&v209 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for CombinedLanguagePickerPill();
  uint64_t v259 = *(void *)(v270 - 8);
  uint64_t v22 = __chkstk_darwin(v270);
  uint64_t v231 = (uint64_t)&v209 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v230 = (uint64_t)&v209 - v24;
  uint64_t v25 = sub_100007620(&qword_1002F5BA0);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v262 = (uint64_t)&v209 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v274 = (uint64_t)&v209 - v28;
  uint64_t v242 = sub_100007620(&qword_1002EED40);
  uint64_t v240 = *(void *)(v242 - 8);
  __chkstk_darwin(v242);
  v236 = (char *)&v209 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_100007620(&qword_1002F22C8);
  __chkstk_darwin(v239);
  uint64_t v238 = (char *)&v209 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = sub_100007620(&qword_1002F5BA8);
  uint64_t v241 = *(void *)(v243 - 8);
  __chkstk_darwin(v243);
  uint64_t v237 = (char *)&v209 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = sub_100007620(&qword_1002F5BB0);
  __chkstk_darwin(v235);
  uint64_t v245 = (char *)&v209 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_100007620(&qword_1002F5BB8);
  __chkstk_darwin(v244);
  uint64_t v248 = (uint64_t)&v209 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_100007620(&qword_1002F5BC0);
  uint64_t v34 = __chkstk_darwin(v247);
  uint64_t v261 = (uint64_t)&v209 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v246 = (uint64_t)&v209 - v37;
  __chkstk_darwin(v36);
  uint64_t v272 = (uint64_t)&v209 - v38;
  uint64_t v234 = type metadata accessor for Material();
  __chkstk_darwin(v234);
  uint64_t v233 = (char *)&v209 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v227 = (char *)&v209 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007620(&qword_1002F1200);
  uint64_t v44 = __chkstk_darwin(v43);
  uint64_t v258 = (uint64_t)&v209 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v209 - v46;
  uint64_t v48 = sub_100007620(&qword_1002F1058);
  uint64_t v49 = __chkstk_darwin(v48 - 8);
  uint64_t v226 = (uint64_t)&v209 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v267 = (uint64_t)&v209 - v52;
  uint64_t v53 = __chkstk_darwin(v51);
  uint64_t v257 = (uint64_t)&v209 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  double v57 = (char *)&v209 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v209 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v209 - v61;
  uint64_t v63 = sub_100007620(&qword_1002F5BC8);
  uint64_t v64 = __chkstk_darwin(v63 - 8);
  uint64_t v260 = (uint64_t)&v209 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v64);
  uint64_t v271 = (uint64_t)&v209 - v66;
  uint64_t v268 = v18;
  uint64_t v67 = *(int *)(v18 + 64);
  uint64_t v273 = a1;
  uint64_t v254 = a1 + v67;
  sub_100100194((uint64_t)v62);
  uint64_t v68 = *(void (**)(void))(v41 + 104);
  unsigned int v251 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v253 = v41 + 104;
  uint64_t v250 = (void (*)(uint64_t, void, uint64_t))v68;
  v68(v60);
  uint64_t v69 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56);
  uint64_t v252 = v41 + 56;
  id v249 = v69;
  v69((uint64_t)v60, 0, 1, v40);
  uint64_t v256 = v43;
  uint64_t v70 = (uint64_t)&v47[*(int *)(v43 + 48)];
  sub_10000C3A4((uint64_t)v62, (uint64_t)v47, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v60, v70, &qword_1002F1058);
  uint64_t v72 = v41 + 48;
  uint64_t v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  unsigned int v73 = v71(v47, 1, v40);
  uint64_t v229 = v41;
  uint64_t v255 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v71;
  if (v73 != 1)
  {
    sub_10000C3A4((uint64_t)v47, (uint64_t)v57, &qword_1002F1058);
    if (v71((char *)v70, 1, v40) != 1)
    {
      char v76 = v227;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v227, v70, v40);
      sub_100113814((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v77 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v78 = *(void (**)(char *, uint64_t))(v41 + 8);
      v78(v76, v40);
      sub_10000B070((uint64_t)v60, &qword_1002F1058);
      sub_10000B070((uint64_t)v62, &qword_1002F1058);
      v78(v57, v40);
      sub_10000B070((uint64_t)v47, &qword_1002F1058);
      if (v77) {
        goto LABEL_9;
      }
LABEL_7:
      uint64_t v74 = sub_100007620(&qword_1002F5BD0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v271, 1, 1, v74);
      uint64_t v75 = v273;
      goto LABEL_10;
    }
    sub_10000B070((uint64_t)v60, &qword_1002F1058);
    sub_10000B070((uint64_t)v62, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v57, v40);
LABEL_6:
    sub_10000B070((uint64_t)v47, &qword_1002F1200);
    goto LABEL_7;
  }
  sub_10000B070((uint64_t)v60, &qword_1002F1058);
  sub_10000B070((uint64_t)v62, &qword_1002F1058);
  if (v71((char *)v70, 1, v40) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v47, &qword_1002F1058);
LABEL_9:
  uint64_t v79 = static Color.clear.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v80 = v287;
  char v81 = v288;
  uint64_t v82 = v289;
  char v83 = v290;
  uint64_t v84 = v291;
  uint64_t v85 = v292;
  static Material.bar.getter();
  uint64_t v86 = AnyShapeStyle.init<A>(_:)();
  char v87 = static Edge.Set.all.getter();
  *(void *)&long long v275 = v79;
  WORD4(v275) = 256;
  *(void *)&long long v276 = v80;
  BYTE8(v276) = v81;
  *(void *)&long long v277 = v82;
  BYTE8(v277) = v83;
  uint64_t v278 = v84;
  uint64_t v279 = v85;
  uint64_t v280 = v86;
  char v281 = v87;
  uint64_t v75 = v273;
  uint64_t v88 = (uint64_t *)(v273 + *(int *)(v268 + 48));
  uint64_t v89 = *v88;
  uint64_t v90 = v88[1];
  uint64_t v282 = v89;
  uint64_t v283 = v90;
  sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  sub_100007620(&qword_1002F5C38);
  sub_100111ED4();
  uint64_t v91 = v271;
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v92 = sub_100007620(&qword_1002F5BD0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v91, 0, 1, v92);
LABEL_10:
  uint64_t v93 = v270;
  uint64_t v94 = v236;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v95 = v75;
  if (v275 == 5)
  {
    uint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
  }
  else
  {
    uint64_t v96 = sub_1000F8F28(v275);
  }
  *(void *)&long long v275 = v96;
  *((void *)&v275 + 1) = v97;
  sub_10000C350();
  Label<>.init<A>(_:systemImage:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v275 != 5) {
    sub_1000F9128();
  }
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  uint64_t v98 = (uint64_t)v238;
  uint64_t v99 = v242;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v240 + 8))(v94, v99);
  sub_100071808();
  sub_100111864();
  uint64_t v100 = v237;
  View.labelStyle<A>(_:)();
  sub_10000B070(v98, &qword_1002F22C8);
  uint64_t v101 = v241;
  uint64_t v102 = (uint64_t)v245;
  uint64_t v103 = v243;
  (*(void (**)(char *, char *, uint64_t))(v241 + 16))(v245, v100, v243);
  *(_OWORD *)(v102 + *(int *)(v235 + 36)) = xmmword_100250730;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v103);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v275 == 5) {
    double v104 = 0.0;
  }
  else {
    double v104 = 1.0;
  }
  uint64_t v105 = v248;
  sub_10000C3A4(v102, v248, &qword_1002F5BB0);
  *(double *)(v105 + *(int *)(v244 + 36)) = v104;
  sub_10000B070(v102, &qword_1002F5BB0);
  uint64_t v106 = static Animation.easeInOut.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v107 = v275;
  uint64_t v108 = v246;
  sub_10000C3A4(v105, v246, &qword_1002F5BB8);
  uint64_t v109 = v108 + *(int *)(v247 + 36);
  *(void *)uint64_t v109 = v106;
  *(unsigned char *)(v109 + 8) = v107;
  sub_10000B070(v105, &qword_1002F5BB8);
  sub_10001323C(v108, v272, &qword_1002F5BC0);
  *((void *)&v276 + 1) = &type metadata for TranslateFeatures;
  *(void *)&long long v277 = sub_10000AB14();
  LOBYTE(v275) = 2;
  LOBYTE(v106) = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v275);
  if ((v106 & 1) == 0)
  {
    uint64_t v137 = 1;
    uint64_t v136 = v274;
LABEL_22:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v259 + 56))(v136, v137, 1, v93);
    uint64_t v138 = v257;
    sub_100100194(v257);
    uint64_t v139 = v267;
    v250(v267, v251, v40);
    v249(v139, 0, 1, v40);
    uint64_t v140 = v258;
    uint64_t v141 = v258 + *(int *)(v256 + 48);
    sub_10000C3A4(v138, v258, &qword_1002F1058);
    sub_10000C3A4(v139, v141, &qword_1002F1058);
    uint64_t v142 = v255;
    if (v255(v140, 1, v40) == 1)
    {
      sub_10000B070(v139, &qword_1002F1058);
      sub_10000B070(v138, &qword_1002F1058);
      if (v142(v141, 1, v40) == 1)
      {
        sub_10000B070(v140, &qword_1002F1058);
LABEL_30:
        uint64_t v151 = static VerticalAlignment.center.getter();
        uint64_t v152 = (uint64_t)v211;
        *uint64_t v211 = v151;
        *(void *)(v152 + 8) = 0;
        *(unsigned char *)(v152 + 16) = 1;
        uint64_t v153 = sub_100007620(&qword_1002F5BE8);
        sub_10010B6AC((char *)(v152 + *(int *)(v153 + 44)));
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v154 = v213;
        sub_10000C3A4(v152, v213, &qword_1002F5B58);
        uint64_t v155 = (_OWORD *)(v154 + *(int *)(v209 + 36));
        long long v156 = v276;
        *uint64_t v155 = v275;
        v155[1] = v156;
        v155[2] = v277;
        sub_10000B070(v152, &qword_1002F5B58);
        char v157 = static Edge.Set.horizontal.getter();
        EdgeInsets.init(_all:)();
        uint64_t v159 = v158;
        uint64_t v161 = v160;
        uint64_t v163 = v162;
        uint64_t v165 = v164;
        uint64_t v166 = v215;
        sub_10000C3A4(v154, v215, &qword_1002F5B60);
        uint64_t v167 = v166 + *(int *)(v210 + 36);
        *(unsigned char *)uint64_t v167 = v157;
        *(void *)(v167 + 8) = v159;
        *(void *)(v167 + 16) = v161;
        *(void *)(v167 + 24) = v163;
        *(void *)(v167 + 32) = v165;
        *(unsigned char *)(v167 + 40) = 0;
        sub_10000B070(v154, &qword_1002F5B60);
        char v168 = static Edge.Set.bottom.getter();
        EdgeInsets.init(_all:)();
        uint64_t v170 = v169;
        uint64_t v172 = v171;
        uint64_t v174 = v173;
        uint64_t v176 = v175;
        uint64_t v177 = v217;
        sub_10000C3A4(v166, v217, &qword_1002F5B68);
        uint64_t v178 = v177 + *(int *)(v212 + 36);
        *(unsigned char *)uint64_t v178 = v168;
        *(void *)(v178 + 8) = v170;
        *(void *)(v178 + 16) = v172;
        *(void *)(v178 + 24) = v174;
        *(void *)(v178 + 32) = v176;
        *(unsigned char *)(v178 + 40) = 0;
        sub_10000B070(v166, &qword_1002F5B68);
        char v179 = static Edge.Set.top.getter();
        EdgeInsets.init(_all:)();
        uint64_t v181 = v180;
        uint64_t v183 = v182;
        uint64_t v185 = v184;
        uint64_t v187 = v186;
        uint64_t v188 = v219;
        sub_10000C3A4(v177, v219, &qword_1002F5B70);
        uint64_t v189 = v188 + *(int *)(v214 + 36);
        *(unsigned char *)uint64_t v189 = v179;
        *(void *)(v189 + 8) = v181;
        *(void *)(v189 + 16) = v183;
        *(void *)(v189 + 24) = v185;
        *(void *)(v189 + 32) = v187;
        *(unsigned char *)(v189 + 40) = 0;
        sub_10000B070(v177, &qword_1002F5B70);
        static Material.bar.getter();
        uint64_t v190 = AnyShapeStyle.init<A>(_:)();
        LOBYTE(v152) = static Edge.Set.all.getter();
        uint64_t v191 = v218;
        sub_10000C3A4(v188, v218, &qword_1002F5B78);
        uint64_t v192 = v191 + *(int *)(v216 + 36);
        *(void *)uint64_t v192 = v190;
        *(unsigned char *)(v192 + 8) = v152;
        sub_10000B070(v188, &qword_1002F5B78);
        uint64_t v193 = v222;
        sub_10000C3A4(v191, v222, &qword_1002F5B80);
        *(_WORD *)(v193 + *(int *)(v221 + 36)) = 256;
        sub_10000B070(v191, &qword_1002F5B80);
        uint64_t v194 = (uint64_t *)(v95 + *(int *)(v268 + 52));
        uint64_t v195 = *v194;
        uint64_t v196 = v194[1];
        uint64_t v282 = v195;
        uint64_t v283 = v196;
        sub_100007620(&qword_1002EF470);
        State.projectedValue.getter();
        sub_10010EF00(&qword_1002F5BF0, &qword_1002F5B88, (void (*)(void))sub_1001118B8);
        uint64_t v197 = v220;
        View.bindGeometry(to:reader:)();
        swift_release();
        swift_release();
        sub_10000B070(v193, &qword_1002F5B88);
        uint64_t v146 = v263;
        uint64_t v145 = v264;
        (*(void (**)(char *, char *, uint64_t))(v263 + 32))(v269, v197, v264);
        uint64_t v144 = 0;
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v143 = v226;
      sub_10000C3A4(v140, v226, &qword_1002F1058);
      if (v142(v141, 1, v40) != 1)
      {
        uint64_t v147 = v229;
        uint64_t v148 = v227;
        (*(void (**)(char *, uint64_t, uint64_t))(v229 + 32))(v227, v141, v40);
        sub_100113814((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        char v149 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v150 = *(void (**)(char *, uint64_t))(v147 + 8);
        v150(v148, v40);
        sub_10000B070(v267, &qword_1002F1058);
        sub_10000B070(v138, &qword_1002F1058);
        v150((char *)v143, v40);
        sub_10000B070(v140, &qword_1002F1058);
        if (v149) {
          goto LABEL_30;
        }
LABEL_28:
        uint64_t v144 = 1;
        uint64_t v145 = v264;
        uint64_t v146 = v263;
LABEL_31:
        uint64_t v198 = (uint64_t)v269;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v269, v144, 1, v145);
        uint64_t v199 = v271;
        uint64_t v200 = v260;
        sub_10000C3A4(v271, v260, &qword_1002F5BC8);
        uint64_t v201 = v272;
        uint64_t v202 = v261;
        sub_10000C3A4(v272, v261, &qword_1002F5BC0);
        uint64_t v203 = v262;
        sub_10000C3A4(v274, v262, &qword_1002F5BA0);
        uint64_t v204 = v265;
        sub_10000C3A4(v198, v265, &qword_1002F5B98);
        uint64_t v205 = v266;
        sub_10000C3A4(v200, v266, &qword_1002F5BC8);
        uint64_t v206 = (int *)sub_100007620(&qword_1002F5BE0);
        sub_10000C3A4(v202, v205 + v206[12], &qword_1002F5BC0);
        uint64_t v207 = v205 + v206[16];
        *(void *)uint64_t v207 = 0;
        *(unsigned char *)(v207 + 8) = 1;
        sub_10000C3A4(v203, v205 + v206[20], &qword_1002F5BA0);
        sub_10000C3A4(v204, v205 + v206[24], &qword_1002F5B98);
        sub_10000B070(v198, &qword_1002F5B98);
        sub_10000B070(v274, &qword_1002F5BA0);
        sub_10000B070(v201, &qword_1002F5BC0);
        sub_10000B070(v199, &qword_1002F5BC8);
        sub_10000B070(v204, &qword_1002F5B98);
        sub_10000B070(v203, &qword_1002F5BA0);
        sub_10000B070(v202, &qword_1002F5BC0);
        return sub_10000B070(v200, &qword_1002F5BC8);
      }
      sub_10000B070(v139, &qword_1002F1058);
      sub_10000B070(v138, &qword_1002F1058);
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v143, v40);
    }
    sub_10000B070(v140, &qword_1002F1200);
    goto LABEL_28;
  }
  uint64_t v247 = v40;
  uint64_t v248 = v72;
  uint64_t v110 = v225;
  sub_10011328C(v95, v225, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  type metadata accessor for MainActor();
  uint64_t v111 = static MainActor.shared.getter();
  unint64_t v112 = (*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80);
  uint64_t v113 = swift_allocObject();
  *(void *)(v113 + 16) = v111;
  *(void *)(v113 + 24) = &protocol witness table for MainActor;
  sub_100111E6C(v110, v113 + v112, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  sub_10011328C(v273, v110, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  uint64_t v114 = static MainActor.shared.getter();
  uint64_t v115 = swift_allocObject();
  *(void *)(v115 + 16) = v114;
  *(void *)(v115 + 24) = &protocol witness table for MainActor;
  uint64_t v116 = v273;
  sub_100111E6C(v110, v115 + v112, (uint64_t (*)(void))type metadata accessor for ImageTranslationView);
  type metadata accessor for LanguageOption();
  uint64_t v117 = v228;
  Binding.init(get:set:)();
  uint64_t v118 = v268;
  type metadata accessor for ConversationManager();
  sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
  uint64_t v119 = (void *)EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v120 = (uint64_t)v232;
  EnvironmentObject.Wrapper.subscript.getter();

  swift_release();
  LOBYTE(v284) = 0;
  static Binding.constant(_:)();
  long long v121 = v275;
  char v122 = v276;
  LOBYTE(v282) = 0;
  static Binding.constant(_:)();
  if (*(void *)(v116 + *(int *)(v118 + 60)))
  {
    char v123 = v286;
    uint64_t v125 = v284;
    uint64_t v124 = v285;
    uint64_t v126 = (uint64_t)v117;
    uint64_t v127 = v231;
    sub_10001323C(v126, v231, &qword_1002F0498);
    uint64_t v128 = (int *)v270;
    sub_10001323C(v120, v127 + *(int *)(v270 + 20), &qword_1002F04A0);
    uint64_t v129 = v127 + v128[6];
    *(_OWORD *)uint64_t v129 = v121;
    *(unsigned char *)(v129 + 16) = v122;
    uint64_t v130 = v127 + v128[7];
    *(void *)uint64_t v130 = v125;
    *(void *)(v130 + 8) = v124;
    *(unsigned char *)(v130 + 16) = v123;
    *(unsigned char *)(v127 + v128[8]) = 0;
    *(unsigned char *)(v127 + v128[9]) = 1;
    uint64_t v131 = (uint64_t *)(v127 + v128[10]);
    type metadata accessor for LanguagesService();
    sub_100113814((unint64_t *)&unk_1002FCA70, (void (*)(uint64_t))&type metadata accessor for LanguagesService);
    swift_retain();
    *uint64_t v131 = ObservedObject.init(wrappedValue:)();
    v131[1] = v132;
    uint64_t v133 = v127;
    uint64_t v93 = (uint64_t)v128;
    uint64_t v134 = v230;
    sub_100111E6C(v133, v230, (uint64_t (*)(void))type metadata accessor for CombinedLanguagePickerPill);
    uint64_t v135 = v134;
    uint64_t v136 = v274;
    sub_100111E6C(v135, v274, (uint64_t (*)(void))type metadata accessor for CombinedLanguagePickerPill);
    uint64_t v137 = 0;
    uint64_t v95 = v273;
    uint64_t v40 = v247;
    goto LABEL_22;
  }
  type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

double sub_10010B560()
{
  uint64_t v0 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  CGFloat v5 = v4;
  double v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v14.origin.double x = v5;
  v14.origin.double y = v7;
  v14.size.double width = v9;
  v14.size.double height = v11;
  return v7 + CGRectGetHeight(v14);
}

uint64_t sub_10010B670()
{
  return sub_10010FA1C();
}

uint64_t sub_10010B684(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10010FABC(a1, a2, a3, a4, (uint64_t)&unk_1002509E0, (uint64_t)&unk_100250A08, (void (*)(uint64_t))sub_10008C99C);
}

uint64_t sub_10010B6AC@<X0>(char *a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_100007620(&qword_1002F59E0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v41 = (uint64_t)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  CGFloat v5 = (char *)&v33 - v4;
  uint64_t v40 = sub_100007620(&qword_1002F59E8);
  uint64_t v36 = *(void *)(v40 - 8);
  uint64_t v6 = v36;
  uint64_t v7 = __chkstk_darwin(v40);
  CGFloat v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  CGFloat v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_100007620(&qword_1002F59F0);
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v13 = v39;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v38 = (char *)&v33 - v17;
  sub_100105E58((uint64_t)&v33 - v17);
  uint64_t v35 = v11;
  sub_10010683C((uint64_t)v11);
  uint64_t v34 = v5;
  sub_1001072D0((uint64_t)v5);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v37 = v16;
  v19(v16, v18, v12);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v21 = v9;
  uint64_t v33 = v9;
  uint64_t v22 = v11;
  uint64_t v23 = v40;
  v20(v9, v22, v40);
  uint64_t v24 = (uint64_t)v5;
  uint64_t v25 = v41;
  sub_10000C3A4(v24, v41, &qword_1002F59E0);
  uint64_t v26 = v42;
  v19(v42, v16, v12);
  uint64_t v27 = (int *)sub_100007620(&qword_1002F5C68);
  uint64_t v28 = &v26[v27[12]];
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  v20(&v26[v27[16]], v21, v23);
  uint64_t v29 = &v26[v27[20]];
  *(void *)uint64_t v29 = 0;
  v29[8] = 1;
  sub_10000C3A4(v25, (uint64_t)&v26[v27[24]], &qword_1002F59E0);
  sub_10000B070((uint64_t)v34, &qword_1002F59E0);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v36 + 8);
  v30(v35, v23);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v39 + 8);
  v31(v38, v12);
  sub_10000B070(v25, &qword_1002F59E0);
  v30(v33, v23);
  return ((uint64_t (*)(char *, uint64_t))v31)(v37, v12);
}

double sub_10010BA2C()
{
  uint64_t v0 = type metadata accessor for GlobalCoordinateSpace();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CoordinateSpaceProtocol<>.global.getter();
  GeometryProxy.frame<A>(in:)();
  double v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_10010BB14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ImagePicker(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  double v5 = (uint64_t *)((char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ImageTranslationView();
  type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  EnvironmentObject.projectedValue.getter();
  swift_getKeyPath();
  EnvironmentObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  v12[0] = v12[1];
  uint64_t v6 = v13;
  char v7 = v14;
  *double v5 = swift_getKeyPath();
  sub_100007620(&qword_1002EEF88);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (char *)v5 + *(int *)(v3 + 28);
  *(_OWORD *)uint64_t v8 = v12[0];
  *((void *)v8 + 2) = v6;
  v8[24] = v7;
  uint64_t v9 = static SafeAreaRegions.keyboard.getter();
  LOBYTE(v6) = static Edge.Set.all.getter();
  sub_10011328C((uint64_t)v5, a1, type metadata accessor for ImagePicker);
  uint64_t v10 = a1 + *(int *)(sub_100007620(&qword_1002F5980) + 36);
  *(void *)uint64_t v10 = v9;
  *(unsigned char *)(v10 + 8) = v6;
  return sub_1001132F4((uint64_t)v5, type metadata accessor for ImagePicker);
}

uint64_t sub_10010BCF0()
{
  type metadata accessor for ImageTranslationView();
  type metadata accessor for VisualTranslationObservable();
  sub_100113814(&qword_1002F58E0, (void (*)(uint64_t))&type metadata accessor for VisualTranslationObservable);
  StateObject.wrappedValue.getter();
  dispatch thunk of VisualTranslationObservable.removeAll()();

  return swift_release();
}

uint64_t sub_10010BDA4()
{
  return State.wrappedValue.setter();
}

uint64_t sub_10010BE10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10010BE50()
{
  return sub_10010CF08();
}

uint64_t sub_10010BE88(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002EF8C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v29 = (uint64_t)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)v24 - v5;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v24 - v11;
  uint64_t v13 = a1 + *(int *)(type metadata accessor for ImageTranslationView() + 44);
  uint64_t v14 = sub_100007620(&qword_1002F57B0);
  State.wrappedValue.getter();
  Date.timeIntervalSinceNow.getter();
  double v16 = v15;
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t result = v17(v12, v6);
  if (v16 <= -*(double *)(a1 + 96))
  {
    uint64_t v27 = v17;
    if (sub_1001036C4())
    {
      sub_10010323C(1);
      uint64_t v25 = v10;
      type metadata accessor for ConversationContext(0);
      v24[1] = v13;
      sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
      v24[0] = v14;
      EnvironmentObject.projectedValue.getter();
      swift_getKeyPath();
      EnvironmentObject.Wrapper.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v19 = v38;
      uint64_t v26 = v7;
      char v20 = v39;
      uint64_t v32 = v36;
      uint64_t v33 = v37;
      uint64_t v34 = v38;
      char v35 = v39;
      uint64_t v30 = 0;
      char v31 = -1;
      sub_100007620((uint64_t *)&unk_1002F5730);
      Binding.wrappedValue.setter();
      swift_release();
      swift_release();
      sub_10010D860(v19, v20);
      type metadata accessor for CameraConfiguration(0);
      sub_100113814(&qword_1002F59A8, (void (*)(uint64_t))type metadata accessor for CameraConfiguration);
      StateObject.wrappedValue.getter();
      uint64_t v21 = type metadata accessor for CameraConfiguration.StaticImage(0);
      uint64_t v22 = (uint64_t)v28;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10000C3A4(v22, v29, &qword_1002EF8C8);
      swift_retain();
      uint64_t v10 = v25;
      uint64_t v7 = v26;
      static Published.subscript.setter();
      sub_10000B070(v22, &qword_1002EF8C8);
      swift_release();
      uint64_t v23 = *(void *)(a1 + 56);
      LOBYTE(v36) = *(unsigned char *)(a1 + 48);
      uint64_t v37 = v23;
      LOBYTE(v32) = 0;
      sub_100007620(&qword_1002F1168);
      State.wrappedValue.setter();
    }
    else
    {
      sub_10010323C(0);
    }
    static Date.now.getter();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    State.wrappedValue.setter();
    return v27(v12, v6);
  }
  return result;
}

uint64_t sub_10010C31C@<X0>(uint64_t a1@<X8>)
{
  sub_1001036C4();
  Image.init(systemName:)();
  uint64_t result = _ConditionalContent<>.init(storage:)();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10010C3C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100007620(&qword_1002EED40);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001036C4();
  LocalizedStringKey.init(stringLiteral:)();
  sub_1001036C4();
  Label<>.init(_:systemImage:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
}

uint64_t sub_10010C540@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  char v35 = a5;
  uint64_t v34 = sub_100007620(&qword_1002F5DA0) - 8;
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VisualTranslationOptions();
  __chkstk_darwin(v9);
  uint64_t v29 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for VisualTranslationView();
  uint64_t v11 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = a1;
  uint64_t v30 = Image.init(uiImage:)();
  sub_100007620(&qword_1002F5DA8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1002488D0;
  swift_retain();
  static VisualTranslationOptions.backgroundRendering.getter();
  uint64_t v36 = v15;
  sub_100113814(&qword_1002F5DB0, (void (*)(uint64_t))&type metadata accessor for VisualTranslationOptions);
  sub_100007620((uint64_t *)&unk_1002FB000);
  sub_100014894(&qword_1002F5DB8, (uint64_t *)&unk_1002FB000);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  double v16 = (void *)swift_allocObject();
  v16[2] = v14;
  v16[3] = a2;
  uint64_t v17 = v32;
  uint64_t v18 = v33;
  v16[4] = v32;
  v16[5] = v18;
  id v19 = v17;
  id v20 = v14;
  swift_retain();
  VisualTranslationView.init(observable:options:systemTranslationDismissHandler:)();
  uint64_t v21 = static Alignment.center.getter();
  uint64_t v23 = v22;
  uint64_t v24 = v31;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v13, v31);
  uint64_t v25 = (uint64_t *)&v8[*(int *)(v34 + 44)];
  *uint64_t v25 = v21;
  v25[1] = v23;
  uint64_t v26 = sub_100007620(&qword_1002F5DC0);
  uint64_t v27 = v35;
  sub_10000C3A4((uint64_t)v8, (uint64_t)v35 + *(int *)(v26 + 36), &qword_1002F5DA0);
  *uint64_t v27 = v30;
  swift_retain();
  sub_10000B070((uint64_t)v8, &qword_1002F5DA0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v24);
  return swift_release();
}

void sub_10010C8D8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    sub_1000EB61C();
  }
  else
  {
    type metadata accessor for FavoritesImporter();
    sub_100113814(&qword_1002F59B0, (void (*)(uint64_t))type metadata accessor for FavoritesImporter);
    EnvironmentObject.error()();
    __break(1u);
  }
}

uint64_t sub_10010C980@<X0>(uint64_t *a1@<X8>)
{
  return sub_10010C540(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10010C98C(_OWORD *a1)
{
  *(_OWORD *)(v1 + 48) = *a1;
  return _swift_task_switch(sub_10010C9B0, 0, 0);
}

uint64_t sub_10010C9B0()
{
  uint64_t v1 = (void *)v0[6];
  type metadata accessor for FavoritesImporter();
  sub_100113814(&qword_1002F59B0, (void (*)(uint64_t))type metadata accessor for FavoritesImporter);
  id v2 = v1;
  swift_retain();
  v0[8] = EnvironmentObject.init()();
  v0[9] = v3;
  v0[10] = type metadata accessor for MainActor();
  v0[11] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10010CAB4, v5, v4);
}

uint64_t sub_10010CAB4()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  long long v4 = *(_OWORD *)(v0 + 48);
  swift_release();
  *(_OWORD *)(v0 + 16) = v4;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 40) = v1;
  sub_100007620(&qword_1002F5CB0);
  swift_allocObject();
  *(void *)(v0 + 96) = ImageRenderer.init(content:)();
  return _swift_task_switch(sub_10010CB6C, 0, 0);
}

uint64_t sub_10010CB6C()
{
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10010CBF8, v2, v1);
}

uint64_t sub_10010CBF8()
{
  swift_release();
  *(void *)(v0 + 112) = ImageRenderer.uiImage.getter();
  return _swift_task_switch(sub_10010CC68, 0, 0);
}

uint64_t sub_10010CC68()
{
  uint64_t v1 = *(void **)(v0 + 112);
  if (v1
    && (uint64_t v2 = UIImagePNGRepresentation(*(UIImage **)(v0 + 112)), v1, v2))
  {
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    swift_release();
  }
  else
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100011554(v6, (uint64_t)qword_10030E960);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to create image data for sharing", v9, 2u);
      swift_slowDealloc();
    }

    swift_release();
    uint64_t v3 = 0;
    unint64_t v5 = 0xC000000000000000;
  }
  uint64_t v10 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
  return v10(v3, v5);
}

uint64_t sub_10010CDE4()
{
  uint64_t v0 = type metadata accessor for UTType();
  __chkstk_darwin(v0 - 8);
  static UTType.png.getter();
  return DataRepresentation.init(exportedContentType:exporting:)();
}

uint64_t sub_10010CE90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10010CED0()
{
  return sub_10010CF08();
}

uint64_t sub_10010CF08()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_10010CF5C()
{
  return swift_release();
}

uint64_t sub_10010CFEC@<X0>(uint64_t *a1@<X8>)
{
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10010D080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002EED40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v8 = *(void *)(a1 + 8);
  v10[8] = *(unsigned char *)a1;
  uint64_t v11 = v8;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  Label<>.init(_:systemImage:)();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_10010D20C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - v7;
  LOBYTE(v36) = 0;
  State.init(wrappedValue:)();
  uint64_t v9 = v38;
  *(unsigned char *)a1 = v37;
  *(void *)(a1 + 8) = v9;
  LOBYTE(v36) = 0;
  State.init(wrappedValue:)();
  uint64_t v10 = v38;
  *(unsigned char *)(a1 + 16) = v37;
  *(void *)(a1 + 24) = v10;
  if (qword_1002EE5A0 != -1) {
    swift_once();
  }
  type metadata accessor for GuidanceModel();
  sub_100113814(&qword_1002F5D98, (void (*)(uint64_t))type metadata accessor for GuidanceModel);
  swift_retain();
  *(void *)(a1 + 32) = ObservedObject.init(wrappedValue:)();
  *(void *)(a1 + 40) = v11;
  LOBYTE(v36) = 0;
  State.init(wrappedValue:)();
  uint64_t v12 = v38;
  *(unsigned char *)(a1 + 48) = v37;
  *(void *)(a1 + 56) = v12;
  LOBYTE(v36) = 0;
  State.init(wrappedValue:)();
  uint64_t v13 = v38;
  *(unsigned char *)(a1 + 64) = v37;
  *(void *)(a1 + 72) = v13;
  LOBYTE(v36) = 0;
  State.init(wrappedValue:)();
  uint64_t v14 = v38;
  *(unsigned char *)(a1 + 80) = v37;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = 0x3FB999999999999ALL;
  uint64_t v15 = (int *)type metadata accessor for ImageTranslationView();
  static Date.distantPast.getter();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  double v16 = (void *)(a1 + v15[12]);
  uint64_t v36 = 0;
  State.init(wrappedValue:)();
  uint64_t v17 = v38;
  void *v16 = v37;
  v16[1] = v17;
  uint64_t v18 = (void *)(a1 + v15[13]);
  uint64_t v36 = 0;
  State.init(wrappedValue:)();
  uint64_t v19 = v38;
  void *v18 = v37;
  v18[1] = v19;
  id v20 = (uint64_t *)(a1 + v15[14]);
  type metadata accessor for ConversationManager();
  sub_100113814((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
  *id v20 = EnvironmentObject.init()();
  v20[1] = v21;
  uint64_t v22 = (uint64_t *)(a1 + v15[15]);
  type metadata accessor for ConversationContext(0);
  sub_100113814(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  uint64_t *v22 = EnvironmentObject.init()();
  v22[1] = v23;
  uint64_t v24 = (uint64_t *)(a1 + v15[16]);
  *uint64_t v24 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a1 + v15[17];
  *(void *)uint64_t v25 = sub_100103210;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 0;
  uint64_t v26 = (void *)(a1 + v15[18]);
  type metadata accessor for SELFLoggingInvocationWrapper(0);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  uint64_t v28 = v27 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  uint64_t v29 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  UUID.init()();
  *(unsigned char *)(v27 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 0;
  *(void *)(v27 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabName) = 2;
  uint64_t v36 = v27;
  State.init(wrappedValue:)();
  uint64_t v30 = v38;
  *uint64_t v26 = v37;
  v26[1] = v30;
  uint64_t v31 = a1 + v15[19];
  LOBYTE(v36) = 0;
  uint64_t result = State.init(wrappedValue:)();
  uint64_t v33 = v38;
  *(unsigned char *)uint64_t v31 = v37;
  *(void *)(v31 + 8) = v33;
  uint64_t v34 = a1 + v15[20];
  *(void *)uint64_t v34 = sub_100103CF4;
  *(void *)(v34 + 8) = 0;
  *(unsigned char *)(v34 + 16) = 0;
  return result;
}

unint64_t sub_10010D724()
{
  unint64_t result = qword_1002F58C0;
  if (!qword_1002F58C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F58C0);
  }
  return result;
}

uint64_t sub_10010D780()
{
  return sub_1001117B4((uint64_t (*)(uint64_t))sub_10010BCF0);
}

unint64_t sub_10010D798()
{
  unint64_t result = qword_1002F58D0;
  if (!qword_1002F58D0)
  {
    sub_100007928(&qword_1002F24F8);
    sub_10010D80C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F58D0);
  }
  return result;
}

unint64_t sub_10010D80C()
{
  unint64_t result = qword_1002F58D8;
  if (!qword_1002F58D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F58D8);
  }
  return result;
}

void sub_10010D860(id a1, char a2)
{
  if (a2 != -1) {
}
  }

id sub_10010D874(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

uint64_t sub_10010D888()
{
  uint64_t v1 = v0;
  uint64_t v18 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002F58B8);
  uint64_t v5 = swift_allocObject();
  long long v19 = xmmword_1002488D0;
  *(_OWORD *)(v5 + 16) = xmmword_1002488D0;
  static UTType.image.getter();
  Swift::Bool v6 = DropInfo.hasItemsConforming(to:)((Swift::OpaquePointer)v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  *(_OWORD *)(swift_allocObject() + 16) = v19;
  static UTType.image.getter();
  unint64_t v7 = DropInfo.itemProviders(for:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  if ((v7 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = *(id *)(v7 + 32);
LABEL_7:
    uint64_t v10 = v9;
    swift_bridgeObjectRelease();
    static UTType.image.getter();
    UTType.identifier.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v22[0] = *(_OWORD *)v1;
    *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)(v1 + 9);
    uint64_t v24 = *(void *)&v22[0];
    sub_10001323C((uint64_t)&v22[1], (uint64_t)v23, &qword_1002F24F8);
    uint64_t v21 = *(void *)(v1 + 32);
    uint64_t v12 = swift_allocObject();
    long long v13 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v12 + 32) = v13;
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(v1 + 32);
    *(unsigned char *)(v12 + 64) = *(unsigned char *)(v1 + 48);
    aBlock[4] = sub_100112F08;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010E05C;
    void aBlock[3] = &unk_1002CEBE0;
    uint64_t v14 = _Block_copy(aBlock);
    sub_10001C05C((uint64_t)&v24);
    swift_retain();
    sub_100112F10((uint64_t)v23);
    sub_10001C05C((uint64_t)&v21);
    swift_retain();
    swift_release();
    id v15 = [v10 loadDataRepresentationForTypeIdentifier:v11 completionHandler:v14];

    _Block_release(v14);
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_10010DC08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 != 15)
  {
    uint64_t v22 = result;
    sub_100022324();
    uint64_t v21 = v8;
    sub_100101584(a1, a2);
    uint64_t v20 = static OS_dispatch_queue.main.getter();
    v25[0] = *(_OWORD *)a4;
    *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)(a4 + 9);
    uint64_t v27 = *(void *)&v25[0];
    sub_10001323C((uint64_t)&v25[1], (uint64_t)v26, &qword_1002F24F8);
    uint64_t v24 = *(void *)(a4 + 32);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a1;
    *(void *)(v16 + 24) = a2;
    long long v17 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v16 + 32) = *(_OWORD *)a4;
    *(_OWORD *)(v16 + 48) = v17;
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(a4 + 32);
    *(unsigned char *)(v16 + 80) = *(unsigned char *)(a4 + 48);
    aBlock[4] = sub_100112FAC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008BA1C;
    void aBlock[3] = &unk_1002CEC30;
    uint64_t v18 = _Block_copy(aBlock);
    sub_1001015DC(a1, a2);
    sub_10001C05C((uint64_t)&v27);
    swift_retain();
    sub_100112F10((uint64_t)v26);
    sub_10001C05C((uint64_t)&v24);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100113814((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    long long v19 = (void *)v20;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    sub_1001015F0(a1, a2);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v22);
  }
  return result;
}

void sub_10010DF8C(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone((Class)UIImage);
  sub_100101584(a1, a2);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v6 = [v4 initWithData:isa];
  sub_100101604(a1, a2);

  if (v6)
  {
    sub_100007620((uint64_t *)&unk_1002F5730);
    Binding.wrappedValue.setter();
  }
}

uint64_t sub_10010E05C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    id v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_1001015F0((uint64_t)v4, v8);

  return swift_release();
}

BOOL sub_10010E108()
{
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  if (v3)
  {
    return 0;
  }
  else
  {
    sub_100007620(&qword_1002F58B8);
    type metadata accessor for UTType();
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1002488D0;
    static UTType.image.getter();
    Swift::Bool v0 = DropInfo.hasItemsConforming(to:)((Swift::OpaquePointer)v1);
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_10010E228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v68 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TitleOnlyLabelStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v64 = v4;
  uint64_t v65 = v5;
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F5CB8);
  uint64_t v61 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100007620(&qword_1002F5CC0);
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F5CC8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002F5CD0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100007620(&qword_1002F5CD8) - 8;
  __chkstk_darwin(v66);
  uint64_t v63 = (uint64_t)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a1;
  sub_100007620(&qword_1002F5CE0);
  sub_100112FC0();
  Label.init(title:icon:)();
  TitleOnlyLabelStyle.init()();
  sub_100014894(&qword_1002F5D38, &qword_1002F5CB8);
  sub_100113814(&qword_1002F5D40, (void (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle);
  uint64_t v22 = v8;
  uint64_t v23 = v64;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v22);
  LOBYTE(v10) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = v60;
  uint64_t v33 = v62;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v16, v12, v62);
  uint64_t v34 = &v16[*(int *)(v14 + 44)];
  *uint64_t v34 = (char)v10;
  *((void *)v34 + 1) = v25;
  *((void *)v34 + 2) = v27;
  *((void *)v34 + 3) = v29;
  *((void *)v34 + 4) = v31;
  v34[40] = 0;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  LOBYTE(v10) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  sub_10000C3A4((uint64_t)v16, (uint64_t)v20, &qword_1002F5CC8);
  uint64_t v43 = &v20[*(int *)(v18 + 44)];
  *uint64_t v43 = (char)v10;
  *((void *)v43 + 1) = v36;
  *((void *)v43 + 2) = v38;
  *((void *)v43 + 3) = v40;
  *((void *)v43 + 4) = v42;
  v43[40] = 0;
  sub_10000B070((uint64_t)v16, &qword_1002F5CC8);
  static Color.black.getter();
  uint64_t v44 = Color.opacity(_:)();
  swift_release();
  LOBYTE(v10) = static Edge.Set.all.getter();
  uint64_t v45 = v63;
  sub_10000C3A4((uint64_t)v20, v63, &qword_1002F5CD0);
  uint64_t v46 = v45 + *(int *)(v66 + 44);
  *(void *)uint64_t v46 = v44;
  *(unsigned char *)(v46 + 8) = (_BYTE)v10;
  sub_10000B070((uint64_t)v20, &qword_1002F5CD0);
  uint64_t v47 = v67;
  uint64_t v48 = &v67[*(int *)(v68 + 28)];
  uint64_t v49 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v50 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 104))(v48, v49, v50);
  __asm { FMOV            V0.2D, #2.0 }
  *uint64_t v47 = _Q0;
  uint64_t v56 = sub_100007620(&qword_1002F5D48);
  uint64_t v57 = v69;
  uint64_t v58 = v69 + *(int *)(v56 + 36);
  sub_10011328C((uint64_t)v47, v58, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v58 + *(int *)(sub_100007620(&qword_1002F11E0) + 36)) = 256;
  sub_10000C3A4(v45, v57, &qword_1002F5CD8);
  sub_1001132F4((uint64_t)v47, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_10000B070(v45, &qword_1002F5CD8);
}

uint64_t sub_10010E868@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = type metadata accessor for AccessibilityTraits();
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  __chkstk_darwin(v1);
  uint64_t v44 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007620(&qword_1002EFF08);
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LabelStyleConfiguration.Title();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F5D10);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F5D50);
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  __chkstk_darwin(v12);
  uint64_t v36 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100007620(&qword_1002F5D08);
  __chkstk_darwin(v35);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100007620(&qword_1002F5CF8);
  __chkstk_darwin(v42);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100007620(&qword_1002F5CE0);
  __chkstk_darwin(v40);
  uint64_t v41 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LabelStyleConfiguration.title.getter();
  uint64_t v19 = static Font.footnote.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v5);
  uint64_t v37 = v9;
  uint64_t v21 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *uint64_t v21 = KeyPath;
  v21[1] = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v22 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v4, v22, v23);
  sub_100113814(&qword_1002EFF40, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1001131BC();
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    uint64_t v25 = v36;
    View.dynamicTypeSize<A>(_:)();
    sub_10000B070((uint64_t)v4, &qword_1002EFF08);
    sub_10000B070((uint64_t)v11, &qword_1002F5D10);
    uint64_t v26 = swift_getKeyPath();
    uint64_t v28 = v38;
    uint64_t v27 = v39;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v15, v25, v39);
    uint64_t v29 = &v15[*(int *)(v35 + 36)];
    *(void *)uint64_t v29 = v26;
    v29[8] = 1;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    static Color.black.getter();
    uint64_t v30 = Color.opacity(_:)();
    swift_release();
    sub_10000C3A4((uint64_t)v15, (uint64_t)v17, &qword_1002F5D08);
    uint64_t v31 = (uint64_t *)&v17[*(int *)(v42 + 36)];
    *uint64_t v31 = v30;
    v31[1] = 0x4008000000000000;
    v31[2] = 0;
    v31[3] = 0;
    sub_10000B070((uint64_t)v15, &qword_1002F5D08);
    sub_10010EF00(&qword_1002F5CF0, &qword_1002F5CF8, (void (*)(void))sub_100113098);
    uint64_t v32 = (uint64_t)v41;
    View.accessibilityIdentifier(_:)();
    sub_10000B070((uint64_t)v17, &qword_1002F5CF8);
    uint64_t v33 = v44;
    static AccessibilityTraits.updatesFrequently.getter();
    ModifiedContent<>.accessibility(addTraits:)();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v47);
    return sub_10000B070(v32, &qword_1002F5CE0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10010EEAC()
{
  return sub_1001117B4((uint64_t (*)(uint64_t))sub_100109310);
}

uint64_t sub_10010EEC4(uint64_t result)
{
  *(unsigned char *)(result + 280) = 1;
  return result;
}

uint64_t sub_10010EED0()
{
  return sub_10010EF00(&qword_1002F5940, &qword_1002F5948, (void (*)(void))sub_10010EF7C);
}

uint64_t sub_10010EF00(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10010EF7C()
{
  unint64_t result = qword_1002F5950;
  if (!qword_1002F5950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5950);
  }
  return result;
}

uint64_t sub_10010EFD0()
{
  return sub_10010EF00(&qword_1002F5960, &qword_1002F5968, (void (*)(void))sub_10010F000);
}

unint64_t sub_10010F000()
{
  unint64_t result = qword_1002F5970;
  if (!qword_1002F5970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5970);
  }
  return result;
}

uint64_t sub_10010F058@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ImageTranslationView();

  return sub_10010BB14(a1);
}

unint64_t sub_10010F0C8()
{
  unint64_t result = qword_1002F5988;
  if (!qword_1002F5988)
  {
    sub_100007928(&qword_1002F58F0);
    sub_100014894(&qword_1002F5990, &qword_1002F58E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5988);
  }
  return result;
}

unint64_t sub_10010F168()
{
  unint64_t result = qword_1002F5998;
  if (!qword_1002F5998)
  {
    sub_100007928(&qword_1002F5980);
    sub_100113814((unint64_t *)&unk_1002F5700, (void (*)(uint64_t))type metadata accessor for ImagePicker);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5998);
  }
  return result;
}

uint64_t sub_10010F214(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a36)
  {
    swift_retain();
    swift_retain();
    id v40 = a1;
    swift_retain();
    sub_10010D874(a7, a8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100019614(a32);
  }
  else
  {
    swift_retain();
    swift_retain();
    id v42 = a1;
    swift_retain();
    id v43 = a5;
    swift_retain();
    sub_10010D874(a11, a12);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100019614(a29);
    a34 = a31;
  }

  return sub_100019614(a34);
}

uint64_t sub_10010F49C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v6 = *(unsigned char *)(a1 + 280);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 272),
    v6);
  return a1;
}

uint64_t sub_10010F530(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8, uint64_t a9, uint64_t a10, void *a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a36)
  {
    swift_release();

    swift_release();
    swift_release();
    sub_10010D860(a7, a8);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000324E4(a32);
  }
  else
  {
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    sub_10010D860(a11, a12);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1000324E4(a29);
    a34 = a31;
  }

  return sub_1000324E4(a34);
}

uint64_t sub_10010F7AC()
{
  return sub_1001117B4((uint64_t (*)(uint64_t))sub_10010922C);
}

uint64_t sub_10010F7C4(uint64_t result)
{
  *(unsigned char *)(result + 280) = 0;
  return result;
}

uint64_t sub_10010F7D0()
{
  return sub_1001117B4((uint64_t (*)(uint64_t))sub_10010CF5C);
}

uint64_t sub_10010F7E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10010CFEC(a1);
}

uint64_t sub_10010F7F0()
{
  return sub_10010FA1C();
}

uint64_t sub_10010F804(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002EF8C8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  long long v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10000C3A4(a1, (uint64_t)&v9 - v6, &qword_1002EF8C8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000C3A4((uint64_t)v7, (uint64_t)v5, &qword_1002EF8C8);
  swift_retain();
  static Published.subscript.setter();
  return sub_10000B070((uint64_t)v7, &qword_1002EF8C8);
}

uint64_t sub_10010F914@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10010F994()
{
  return static Published.subscript.setter();
}

uint64_t sub_10010FA08()
{
  return sub_10010FA1C();
}

uint64_t sub_10010FA1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10010FA94(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10010FABC(a1, a2, a3, a4, (uint64_t)&unk_100250A28, (uint64_t)&unk_100250A50, (void (*)(uint64_t))sub_10008C964);
}

uint64_t sub_10010FABC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v21 = a7;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v20 - v14, a1, v9);
  uint64_t v17 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v16(v13, (uint64_t)v15, v9);
  v17;
  uint64_t v18 = static Published.subscript.setter();
  v21(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_10010FC44@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10010FCC4()
{
  return static Published.subscript.setter();
}

uint64_t sub_10010FD38()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_10010FD5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10010FD8C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10010FDBC()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_10010FDE4()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_10010FE0C(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_10010FE20()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_10010FE30(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_10010FE48()
{
  unint64_t result = qword_1002F5AA0;
  if (!qword_1002F5AA0)
  {
    sub_100007928(&qword_1002F5A10);
    sub_100110F98(&qword_1002F5A80, &qword_1002F5A08, &qword_1002EFEB0, &qword_1002EFEC8);
    sub_100113814((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5AA0);
  }
  return result;
}

uint64_t sub_10010FF14@<X0>(uint64_t a1@<X8>)
{
  return sub_10010D080(*(void *)(v1 + 16), a1);
}

unint64_t sub_10010FF1C()
{
  unint64_t result = qword_1002F5AB0;
  if (!qword_1002F5AB0)
  {
    sub_100007928(&qword_1002F5A58);
    sub_10010FFC8();
    sub_100113814((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5AB0);
  }
  return result;
}

unint64_t sub_10010FFC8()
{
  unint64_t result = qword_1002F5AB8;
  if (!qword_1002F5AB8)
  {
    sub_100007928(&qword_1002F5A50);
    sub_100007928(&qword_1002F5A40);
    type metadata accessor for ImageTranslationButtonStyle();
    sub_100007928(&qword_1002F5A38);
    sub_100014894(&qword_1002F5AC0, &qword_1002F5A38);
    swift_getOpaqueTypeConformance2();
    sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002F5A88, &qword_1002F5A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5AB8);
  }
  return result;
}

unint64_t sub_10011014C()
{
  unint64_t result = qword_1002F5AC8;
  if (!qword_1002F5AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5AC8);
  }
  return result;
}

unint64_t sub_1001101A0()
{
  unint64_t result = qword_1002F5AD0;
  if (!qword_1002F5AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5AD0);
  }
  return result;
}

void *sub_1001101F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100007620(&qword_1002F5C88);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100113814(&qword_1002F3438, (void (*)(uint64_t))&type metadata accessor for Locale);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100113814(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_10011050C(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100007620(&qword_1002F5C70);
      unint64_t result = static _SetStorage.allocate(capacity:)();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    unint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_100113814(&qword_1002F0FF0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    unint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_100113814(&qword_1002F5C78, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        unint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      unint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  unint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1001107C0(uint64_t a1)
{
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    sub_100007620(&qword_1002F5DC8);
    uint64_t v2 = static _SetStorage.allocate(capacity:)();
    uint64_t v3 = 0;
    uint64_t v4 = v2 + 56;
    uint64_t v36 = a1 + 32;
    while (1)
    {
      uint64_t v5 = (unint64_t *)(v36 + 16 * v3);
      unint64_t v7 = *v5;
      unint64_t v6 = v5[1];
      Hasher.init(_seed:)();
      switch(v7)
      {
        case 0uLL:
          unint64_t v8 = v6;
          Swift::UInt v9 = 1;
          goto LABEL_13;
        case 1uLL:
          unint64_t v8 = v6;
          Swift::UInt v9 = 2;
          goto LABEL_13;
        case 2uLL:
          unint64_t v8 = v6;
          Swift::UInt v9 = 3;
          goto LABEL_13;
        case 3uLL:
          unint64_t v8 = v6;
          Swift::UInt v9 = 4;
          goto LABEL_13;
        case 4uLL:
          unint64_t v8 = v6;
          Swift::UInt v9 = 5;
LABEL_13:
          Hasher._combine(_:)(v9);
          break;
        default:
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v11 = *(void (**)(uint64_t, unint64_t))(v6 + 24);
          swift_unknownObjectRetain_n();
          v11(ObjectType, v6);
          uint64_t v4 = v2 + 56;
          String.hash(into:)();
          swift_bridgeObjectRelease();
          unint64_t v8 = v6;
          sub_10008AA10(v7);
          break;
      }
      Swift::Int v12 = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v4 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) == 0)
      {
        unint64_t v19 = v8;
LABEL_35:
        *(void *)(v4 + 8 * v15) = v17 | v16;
        uint64_t v31 = (unint64_t *)(*(void *)(v2 + 48) + 16 * v14);
        *uint64_t v31 = v7;
        v31[1] = v19;
        uint64_t v32 = *(void *)(v2 + 16);
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33)
        {
          __break(1u);
          JUMPOUT(0x100110BA8);
        }
        *(void *)(v2 + 16) = v34;
        goto LABEL_5;
      }
      uint64_t v18 = ~v13;
      unint64_t v19 = v8;
      uint64_t v38 = v3;
      while (2)
      {
        uint64_t v20 = (unint64_t *)(*(void *)(v2 + 48) + 16 * v14);
        unint64_t v21 = *v20;
        switch(*v20)
        {
          case 0uLL:
            if (!v7) {
              goto LABEL_4;
            }
            goto LABEL_17;
          case 1uLL:
            if (v7 == 1) {
              goto LABEL_5;
            }
            goto LABEL_17;
          case 2uLL:
            if (v7 == 2) {
              goto LABEL_5;
            }
            goto LABEL_17;
          case 3uLL:
            if (v7 == 3) {
              goto LABEL_5;
            }
            goto LABEL_17;
          case 4uLL:
            if (v7 == 4) {
              goto LABEL_5;
            }
            goto LABEL_17;
          default:
            if (v7 < 5) {
              goto LABEL_17;
            }
            unint64_t v22 = v20[1];
            uint64_t v23 = swift_getObjectType();
            uint64_t v39 = *(uint64_t (**)(uint64_t, unint64_t))(v22 + 24);
            sub_10008AA00(v21);
            sub_10008AA00(v7);
            sub_10008AA00(v21);
            uint64_t v24 = v39(v23, v22);
            uint64_t v26 = v25;
            uint64_t v27 = swift_getObjectType();
            if (v24 != (*(uint64_t (**)(uint64_t, unint64_t))(v19 + 24))(v27, v19) || v26 != v28)
            {
              char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10008AA10(v7);
              sub_10008AA10(v21);
              sub_10008AA10(v21);
              uint64_t v3 = v38;
              uint64_t v4 = v2 + 56;
              if (v30) {
                goto LABEL_4;
              }
LABEL_17:
              unint64_t v14 = (v14 + 1) & v18;
              unint64_t v15 = v14 >> 6;
              uint64_t v16 = *(void *)(v4 + 8 * (v14 >> 6));
              uint64_t v17 = 1 << v14;
              if ((v16 & (1 << v14)) == 0) {
                goto LABEL_35;
              }
              continue;
            }
            swift_bridgeObjectRelease_n();
            sub_10008AA10(v7);
            sub_10008AA10(v21);
            sub_10008AA10(v21);
            uint64_t v3 = v38;
            uint64_t v4 = v2 + 56;
LABEL_4:
            sub_10008AA10(v7);
LABEL_5:
            if (++v3 == v37) {
              return (void *)v2;
            }
            break;
        }
        break;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100110BD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationDetent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100007620(&qword_1002F5AE0);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    Swift::Int v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100113814(&qword_1002F5AE8, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100113814(&qword_1002F5AF0, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100110EE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100110EFC()
{
  return sub_1001117B4(sub_10010BE88);
}

uint64_t sub_100110F14@<X0>(uint64_t a1@<X8>)
{
  return sub_10010C31C(a1);
}

unint64_t sub_100110F1C()
{
  unint64_t result = qword_1002F5B30;
  if (!qword_1002F5B30)
  {
    sub_100007928(&qword_1002F5B28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5B30);
  }
  return result;
}

uint64_t sub_100110F88()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100110F98(unint64_t *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    sub_100007928(a3);
    type metadata accessor for ImageTranslationButtonStyle();
    sub_100014894(a4, a3);
    sub_100113814(&qword_1002F5A78, (void (*)(uint64_t))&type metadata accessor for ImageTranslationButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002F5A88, &qword_1002F5A90);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001110D8()
{
  unint64_t result = qword_1002F5B50;
  if (!qword_1002F5B50)
  {
    sub_100007928(&qword_1002F5B10);
    sub_100110F98(&qword_1002F5B40, &qword_1002F5B08, &qword_1002F5AF8, &qword_1002F5B38);
    sub_100113814((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5B50);
  }
  return result;
}

uint64_t sub_1001111A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10010C3C4(a1);
}

uint64_t sub_1001111AC()
{
  return sub_10010FA1C();
}

uint64_t sub_1001111D8()
{
  unint64_t v1 = (int *)type metadata accessor for ImageTranslationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_100007620(&qword_1002F57B0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v0 + v3 + v1[16];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  sub_100101E28();
  swift_release();
  swift_release();
  swift_release();
  sub_100101E28();

  return _swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

uint64_t sub_100111468()
{
  uint64_t v1 = *(void *)(type metadata accessor for ImageTranslationView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1001035D8(v2);
}

uint64_t sub_1001114EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001114FC()
{
  return swift_release();
}

uint64_t sub_100111510()
{
  uint64_t v1 = (int *)type metadata accessor for ImageTranslationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_100007620(&qword_1002F57B0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v0 + v3 + v1[16];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  sub_100101E28();
  swift_release();
  swift_release();
  swift_release();
  sub_100101E28();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10011179C()
{
  return sub_1001117B4((uint64_t (*)(uint64_t))sub_10010BDA4);
}

uint64_t sub_1001117B4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ImageTranslationView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100111828()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100111838()
{
  return EnvironmentValues.dismiss.getter();
}

unint64_t sub_100111864()
{
  unint64_t result = qword_1002F5BD8;
  if (!qword_1002F5BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5BD8);
  }
  return result;
}

unint64_t sub_1001118B8()
{
  unint64_t result = qword_1002F5BF8;
  if (!qword_1002F5BF8)
  {
    sub_100007928(&qword_1002F5B80);
    sub_10010EF00(&qword_1002F5C00, &qword_1002F5B78, (void (*)(void))sub_100111984);
    sub_100014894(&qword_1002F5C28, &qword_1002F5C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5BF8);
  }
  return result;
}

uint64_t sub_100111984()
{
  return sub_10010EF00(&qword_1002F5C08, &qword_1002F5B70, (void (*)(void))sub_1001119B4);
}

uint64_t sub_1001119B4()
{
  return sub_10010EF00(&qword_1002F5C10, &qword_1002F5B68, (void (*)(void))sub_1001119E4);
}

unint64_t sub_1001119E4()
{
  unint64_t result = qword_1002F5C18;
  if (!qword_1002F5C18)
  {
    sub_100007928(&qword_1002F5B60);
    sub_100014894(&qword_1002F5C20, &qword_1002F5B58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5C18);
  }
  return result;
}

uint64_t sub_100111A88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ImageTranslationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10010391C(v4, a1);
}

uint64_t sub_100111B00()
{
  uint64_t v1 = (int *)type metadata accessor for ImageTranslationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[11];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_100007620(&qword_1002F57B0);
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v7 = v0 + v3 + v1[16];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
  }
  else
  {
    swift_release();
  }
  sub_100101E28();
  swift_release();
  swift_release();
  swift_release();
  sub_100101E28();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100111D94(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ImageTranslationView() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100103A5C(a1, v4, v5, v6);
}

uint64_t sub_100111E08()
{
  return sub_10010FA1C();
}

uint64_t sub_100111E30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10010FABC(a1, a2, a3, a4, (uint64_t)&unk_1002509E0, (uint64_t)&unk_100250A08, (void (*)(uint64_t))sub_10008C99C);
}

uint64_t sub_100111E6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100111ED4()
{
  unint64_t result = qword_1002F5C40;
  if (!qword_1002F5C40)
  {
    sub_100007928(&qword_1002F5C38);
    sub_100111F74();
    sub_100014894(&qword_1002F5C28, &qword_1002F5C30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5C40);
  }
  return result;
}

unint64_t sub_100111F74()
{
  unint64_t result = qword_1002F5C48;
  if (!qword_1002F5C48)
  {
    sub_100007928(&qword_1002F5C50);
    sub_100014894(&qword_1002F5C58, &qword_1002F5C60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5C48);
  }
  return result;
}

uint64_t sub_100112014()
{
  return sub_10010FA1C();
}

uint64_t sub_10011203C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10010FABC(a1, a2, a3, a4, (uint64_t)&unk_100250A28, (uint64_t)&unk_100250A50, (void (*)(uint64_t))sub_10008C964);
}

void *sub_100112078(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DataScannerViewController.RecognizedDataType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100007620(&qword_1002F5C90);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    Swift::Int v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100113814(&qword_1002F5C98, (void (*)(uint64_t))&type metadata accessor for DataScannerViewController.RecognizedDataType);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100113814(&qword_1002F5CA0, (void (*)(uint64_t))&type metadata accessor for DataScannerViewController.RecognizedDataType);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_100112390(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  sub_100007620(&qword_1002F5D58);
  uint64_t v3 = static _SetStorage.allocate(capacity:)();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v24 = a1 + 32;
  do
  {
    uint64_t v6 = (uint64_t *)(v24 + 16 * v4);
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    Hasher.init(_seed:)();
    switch(v8)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
        break;
      default:
        swift_bridgeObjectRetain();
        String.hash(into:)();
        break;
    }
    String.hash(into:)();
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v11 = v9 & v10;
    unint64_t v12 = (v9 & (unint64_t)v10) >> 6;
    uint64_t v13 = *(void *)(v5 + 8 * v12);
    uint64_t v14 = 1 << (v9 & v10);
    uint64_t v15 = *(void *)(v3 + 48);
    if ((v14 & v13) != 0)
    {
      while (2)
      {
        uint64_t v16 = (void *)(v15 + 16 * v11);
        uint64_t v17 = v16[1];
        switch(v17)
        {
          case 0:
            if (v8) {
              goto LABEL_10;
            }
            break;
          case 1:
            if (v8 != 1) {
              goto LABEL_10;
            }
            break;
          case 2:
            if (v8 != 2) {
              goto LABEL_10;
            }
            break;
          case 3:
            if (v8 != 3) {
              goto LABEL_10;
            }
            break;
          case 4:
            if (v8 != 4) {
              goto LABEL_10;
            }
            break;
          default:
            if (v8 < 5
              || (*v16 == v7 ? (BOOL v18 = v17 == v8) : (BOOL v18 = 0),
                  !v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
            {
LABEL_10:
              unint64_t v11 = (v11 + 1) & v10;
              unint64_t v12 = v11 >> 6;
              uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
              uint64_t v14 = 1 << v11;
              if ((v13 & (1 << v11)) != 0) {
                continue;
              }
              uint64_t v15 = *(void *)(v3 + 48);
              goto LABEL_28;
            }
            sub_10000CDF0(v7, v8);
            break;
        }
        break;
      }
    }
    else
    {
LABEL_28:
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unint64_t v19 = (uint64_t *)(v15 + 16 * v11);
      uint64_t *v19 = v7;
      v19[1] = v8;
      uint64_t v20 = *(void *)(v3 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21)
      {
        __break(1u);
        JUMPOUT(0x100112660);
      }
      *(void *)(v3 + 16) = v22;
    }
    ++v4;
  }
  while (v4 != v1);
  return (void *)v3;
}

void *sub_100112688(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100007620(&qword_1002F5C80);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      unint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          unint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t destroy for ImageDropDelegate(uint64_t a1)
{
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 24) != 255) {

  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ImageDropDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  int v6 = *(unsigned __int8 *)(a2 + 24);
  swift_retain();
  swift_retain();
  if (v6 == 255)
  {
    *(void *)(a1 + 16) = *(void *)v5;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(v5 + 8);
  }
  else
  {
    id v7 = *(void **)v5;
    *(void *)(a1 + 16) = *(void *)v5;
    *(unsigned char *)(a1 + 24) = v6;
    id v8 = v7;
  }
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ImageDropDelegate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = (void **)(a1 + 16);
  uint64_t v5 = (void **)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v6 == 255)
    {
      uint64_t v13 = *v5;
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *uint64_t v4 = v13;
    }
    else
    {
      uint64_t v10 = *v5;
      *(void *)(a1 + 16) = *v5;
      *(unsigned char *)(a1 + 24) = v6;
      id v11 = v10;
    }
  }
  else if (v6 == 255)
  {
    sub_1000FF4D0(a1 + 16);
    char v12 = *(unsigned char *)(a2 + 24);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 24) = v12;
  }
  else
  {
    id v7 = *v5;
    id v8 = *(void **)(a1 + 16);
    *(void *)(a1 + 16) = *v5;
    *(unsigned char *)(a1 + 24) = v6;
    id v9 = v7;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for ImageDropDelegate(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageDropDelegate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  long long v4 = (void *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 24) == 255) {
    goto LABEL_5;
  }
  int v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 == 255)
  {
    sub_1000FF4D0(a1 + 16);
LABEL_5:
    *(void *)(a1 + 16) = *v4;
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    goto LABEL_6;
  }
  int v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *v4;
  *(unsigned char *)(a1 + 24) = v5;

LABEL_6:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageDropDelegate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageDropDelegate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageDropDelegate()
{
  return &type metadata for ImageDropDelegate;
}

ValueMetadata *type metadata accessor for GuidanceLabelStyle()
{
  return &type metadata for GuidanceLabelStyle;
}

void *initializeBufferWithCopyOfBuffer for ImageTranslationView.SharedImageTranslation(void *a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ImageTranslationView.SharedImageTranslation(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for ImageTranslationView.SharedImageTranslation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

id *assignWithTake for ImageTranslationView.SharedImageTranslation(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ImageTranslationView.SharedImageTranslation()
{
  return &type metadata for ImageTranslationView.SharedImageTranslation;
}

uint64_t sub_100112D90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100112E68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100112E84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100112EA4()
{
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 40) != 255) {

  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_100112F08(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_10010DC08(a1, a2, a3, v3 + 16);
}

uint64_t sub_100112F10(uint64_t a1)
{
  return a1;
}

uint64_t sub_100112F40()
{
  sub_100101604(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(v0 + 56) != 255) {

  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 81, 7);
}

void sub_100112FAC()
{
  sub_10010DF8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100112FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10010E868(a1);
}

unint64_t sub_100112FC0()
{
  unint64_t result = qword_1002F5CE8;
  if (!qword_1002F5CE8)
  {
    sub_100007928(&qword_1002F5CE0);
    sub_10010EF00(&qword_1002F5CF0, &qword_1002F5CF8, (void (*)(void))sub_100113098);
    sub_100113814((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5CE8);
  }
  return result;
}

unint64_t sub_100113098()
{
  unint64_t result = qword_1002F5D00;
  if (!qword_1002F5D00)
  {
    sub_100007928(&qword_1002F5D08);
    sub_100007928(&qword_1002F5D10);
    sub_100007928(&qword_1002EFF08);
    sub_1001131BC();
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002F5D28, &qword_1002F5D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5D00);
  }
  return result;
}

unint64_t sub_1001131BC()
{
  unint64_t result = qword_1002F5D18;
  if (!qword_1002F5D18)
  {
    sub_100007928(&qword_1002F5D10);
    sub_100113814(&qword_1002F5D20, (void (*)(uint64_t))&type metadata accessor for LabelStyleConfiguration.Title);
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5D18);
  }
  return result;
}

uint64_t sub_10011328C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001132F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10011335C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100113388()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

void destroy for ImageTranslationView.ExportedImageView(uint64_t a1)
{
  swift_release();
  unint64_t v2 = *(void **)(a1 + 16);
}

void *initializeWithCopy for ImageTranslationView.ExportedImageView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  id v7 = v3;
  swift_retain();
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for ImageTranslationView.ExportedImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  id v7 = *(void **)(a1 + 16);
  id v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ImageTranslationView.ExportedImageView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for ImageTranslationView.ExportedImageView()
{
  return &type metadata for ImageTranslationView.ExportedImageView;
}

uint64_t sub_100113520()
{
  return sub_100014894(&qword_1002F5D60, &qword_1002F5D68);
}

unint64_t sub_100113560()
{
  unint64_t result = qword_1002F5D70;
  if (!qword_1002F5D70)
  {
    sub_100007928(&qword_1002F5D48);
    sub_100113600();
    sub_100014894(&qword_1002F5D90, &qword_1002F11E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5D70);
  }
  return result;
}

unint64_t sub_100113600()
{
  unint64_t result = qword_1002F5D78;
  if (!qword_1002F5D78)
  {
    sub_100007928(&qword_1002F5CD8);
    sub_10010EF00(&qword_1002F5D80, &qword_1002F5CD0, (void (*)(void))sub_1001136CC);
    sub_100014894(&qword_1002F2388, &qword_1002F2390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5D78);
  }
  return result;
}

unint64_t sub_1001136CC()
{
  unint64_t result = qword_1002F5D88;
  if (!qword_1002F5D88)
  {
    sub_100007928(&qword_1002F5CC8);
    sub_100007928(&qword_1002F5CB8);
    type metadata accessor for TitleOnlyLabelStyle();
    sub_100014894(&qword_1002F5D38, &qword_1002F5CB8);
    sub_100113814(&qword_1002F5D40, (void (*)(uint64_t))&type metadata accessor for TitleOnlyLabelStyle);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5D88);
  }
  return result;
}

uint64_t sub_1001137F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100113814(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011385C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1001138A4()
{
  sub_10010C8D8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

unint64_t sub_1001138B4()
{
  unint64_t result = qword_1002F5DD0;
  if (!qword_1002F5DD0)
  {
    sub_100007928(&qword_1002F5DC0);
    sub_100014894(&qword_1002F5DD8, &qword_1002F5DA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5DD0);
  }
  return result;
}

void *sub_10011396C()
{
  v0[3] = 0;
  swift_unknownObjectWeakInit();
  v0[5] = 0;
  swift_unknownObjectWeakInit();
  v0[6] = 0;
  id v1 = [self interruptionController];
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_10011414C;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  void v6[2] = sub_10008BA1C;
  v6[3] = &unk_1002CED28;
  uint64_t v3 = _Block_copy(v6);
  swift_release();
  id v4 = [v1 addObservationBlock:v3];
  _Block_release(v3);

  v0[6] = v4;
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100113AAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100022324();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_10011416C;
  aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CED50;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100113D14()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100113D6C();
    return swift_release();
  }
  return result;
}

void sub_100113D6C()
{
  uint64_t v1 = v0;
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030EAF8);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "There was a connection issue with translationd; finding code to handle it",
      v5,
      2u);
    swift_slowDealloc();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = *(void *)(v1 + 24);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Asking main scene to handle XPC interruption", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, ObjectType, v6);
    swift_unknownObjectRelease();
    if (!swift_unknownObjectWeakLoadStrong()) {
      return;
    }
LABEL_11:
    uint64_t v11 = *(void *)(v1 + 40);
    char v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Asking live activity scene to handle XPC interruption", v14, 2u);
      swift_slowDealloc();
    }

    uint64_t v15 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v1, v15, v11);
    swift_unknownObjectRelease();
    return;
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_11;
  }
  oslog = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v16, "There was a connection issue with translationd; this issue is not surfaced in the app because no handlers were registered",
      v17,
      2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1001140A8()
{
  sub_100013384(v0 + 16);
  sub_100013384(v0 + 32);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InterruptionController()
{
  return self;
}

uint64_t sub_100114114()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011414C()
{
  return sub_100113AAC(v0);
}

uint64_t sub_100114154(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100114164()
{
  return swift_release();
}

uint64_t sub_10011416C()
{
  return sub_100113D14();
}

BOOL sub_10011417C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a1;
  uint64_t v39 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  os_log_type_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v37 = v14;
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64));
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v34 = v8;
    uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v31 = v16;
    uint64_t v32 = (void (**)(char *))(v13 + 16);
    uint64_t v33 = (void (**)(char *, uint64_t))(v13 - 8);
    void v29[2] = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 40);
    v29[1] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    while (1)
    {
      uint64_t v17 = v39;
      uint64_t v18 = v13;
      v37(v11, v15, v39);
      unint64_t v19 = *v36;
      (*v36)(v11, 0, 1, v17);
      int v20 = (*v35)(v11, 1, v17);
      BOOL v21 = v20 != 1;
      if (v20 == 1) {
        break;
      }
      uint64_t v30 = v19;
      uint64_t v22 = v11;
      uint64_t v23 = v34;
      uint64_t v24 = v22;
      (*v32)(v34);
      char v25 = v38(v23);
      if (v4)
      {
        (*v33)(v23, v17);
        swift_bridgeObjectRelease();
        return v21;
      }
      char v26 = v25;
      (*v33)(v23, v17);
      if (v26) {
        break;
      }
      v15 += v31;
      --v12;
      uint64_t v4 = 0;
      uint64_t v13 = v18;
      uint64_t v11 = v24;
      if (!v12)
      {
        v30(v24, 1, 1, v39);
        goto LABEL_9;
      }
    }
  }
  else
  {
    char v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    v27(v11, 1, 1, v39);
LABEL_9:
    BOOL v21 = 0;
  }
  swift_bridgeObjectRelease();
  return v21;
}

id sub_10011445C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout____lazy_storage___swipeController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout____lazy_storage___swipeController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout____lazy_storage___swipeController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UISwipeActionController) initWithSwipeActionHost:v0 style:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unint64_t sub_1001144D8(double a1, double a2, double a3, double a4)
{
  uint64_t v37 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void (***)(char *, uint64_t))(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (objc_class *)type metadata accessor for InvertedCollectionViewLayout();
  id v38 = v4;
  v41.receiver = v4;
  v41.super_class = v11;
  id v12 = [super layoutAttributesForElementsInRect:a1, a2, a3, a4];
  if (!v12) {
    return 0;
  }
  uint64_t v13 = v12;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EF298);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15) {
    goto LABEL_15;
  }
LABEL_4:
  id v40 = _swiftEmptyArrayStorage;
  sub_1000B2DB4(0, v15 & ~(v15 >> 63), 0);
  if (v15 < 0) {
    goto LABEL_31;
  }
  uint64_t v16 = 0;
  uint64_t v17 = v40;
  do
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(v14 + 8 * v16 + 32);
    }
    unint64_t v19 = v18;
    [v18 copy];
    _bridgeAnyObjectToAny(_:)();

    swift_unknownObjectRelease();
    id v40 = v17;
    unint64_t v21 = v17[2];
    unint64_t v20 = v17[3];
    if (v21 >= v20 >> 1)
    {
      sub_1000B2DB4(v20 > 1, v21 + 1, 1);
      uint64_t v17 = v40;
    }
    ++v16;
    void v17[2] = v21 + 1;
    sub_100048EC8(&v39, &v17[4 * v21 + 4]);
  }
  while (v15 != v16);
  swift_bridgeObjectRelease();
LABEL_16:
  unint64_t v14 = (unint64_t)sub_10015D0DC((uint64_t)v17);
  swift_bridgeObjectRelease();
  if (v14)
  {
    if (v14 >> 62) {
      goto LABEL_32;
    }
    uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v22; uint64_t v22 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v23 = v9 + 1;
      uint64_t v24 = 4;
      char v25 = &selRef_initWithTagSchemes_options_;
      uint64_t v26 = 0;
      if ((v14 & 0xC000000000000001) != 0)
      {
LABEL_20:
        char v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_22;
      }
      while (1)
      {
        char v27 = (char *)*(id *)(v14 + 8 * v24);
LABEL_22:
        uint64_t v9 = (void (**)(char *, uint64_t))v27;
        uint64_t v28 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          break;
        }
        if ([v27 v25[99]]) {
          goto LABEL_24;
        }
        id v29 = [v9 indexPath];
        uint64_t v30 = v36;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = v25;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*v23)(v30, v37);
        id v33 = [v38 layoutAttributesForItemAtIndexPath:isa];

        char v25 = v31;
        if (!v33)
        {
LABEL_24:

          if (v28 == v22) {
            goto LABEL_33;
          }
        }
        else
        {
          [v33 frame];
          [v9 setFrame:];
          [v33 transform];
          [v9 setTransform:&v39];

          if (v28 == v22) {
            goto LABEL_33;
          }
        }
        uint64_t v26 = ++v24 - 4;
        if ((v14 & 0xC000000000000001) != 0) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      swift_bridgeObjectRetain_n();
    }
LABEL_33:
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

id sub_1001149C8(uint64_t a1)
{
  uint64_t v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v42.receiver = v2;
  v42.super_class = (Class)type metadata accessor for InvertedCollectionViewLayout();
  [v42 layoutAttributesForItemAtIndexPath:isa];

  if (!v5) {
    return v5;
  }
  id v6 = [v2 collectionView];
  if (!v6) {
    return v5;
  }
  uint64_t v7 = v6;
  CGAffineTransformMakeScale(&v41, 1.0, -1.0);
  [v5 setTransform:&v41];
  id v8 = [v7 indexPathsForSelectedItems];
  if (!v8) {
    goto LABEL_17;
  }
  uint64_t v9 = v8;
  type metadata accessor for IndexPath();
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v11);
  v37[2] = a1;
  LOBYTE(v9) = sub_10011417C((uint64_t (*)(char *))sub_100116244, (uint64_t)v37, v10);
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
LABEL_17:

    return v5;
  }
  Class v12 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [v7 cellForItemAtIndexPath:v12];

  if (!v13
    || (v37[5] = v13,
        sub_10000B0CC(0, &qword_1002F5FB0),
        sub_100007620(&qword_1002F5FB8),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    goto LABEL_19;
  }
  if (!*((void *)&v39 + 1))
  {
LABEL_19:

    sub_10000B070((uint64_t)&v38, &qword_1002F5FA8);
    return v5;
  }
  sub_100048DE4(&v38, (uint64_t)&v41);
  [v7 contentOffset];
  double v15 = v14;
  [v7 adjustedContentInset];
  double v17 = v16;
  [v5 frame];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  double v25 = v24 - v15;
  sub_100029624(&v41, *(uint64_t *)&v41.d);
  double v26 = sub_100029AA8();
  v43.origin.double x = v19;
  v43.origin.double y = v25;
  v43.size.double width = v21;
  v43.size.double height = v23;
  if (CGRectGetMinY(v43) >= v17)
  {
    uint64_t v36 = *(void **)(*sub_100029624(&v41, *(uint64_t *)&v41.d)
                   + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight);
    if (v36) {
      [v36 setActive:0];
    }
  }
  else
  {
    v44.origin.double x = v19;
    v44.origin.double y = v25;
    v44.size.double width = v21;
    v44.size.double height = v23;
    double v27 = v17 - CGRectGetMinY(v44);
    [v5 frame];
    double Height = CGRectGetHeight(v45);
    [v5 frame];
    double v29 = CGRectGetHeight(v46) - v27;
    if (v29 <= v26) {
      double v29 = v26;
    }
    if (v29 >= Height) {
      double v30 = Height;
    }
    else {
      double v30 = v29;
    }
    uint64_t v31 = sub_100029624(&v41, *(uint64_t *)&v41.d);
    uint64_t v32 = *v31;
    uint64_t v33 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight;
    uint64_t v34 = *(void **)(*v31 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight);
    if (v34)
    {
      [v34 setActive:1];
      uint64_t v34 = *(void **)(v32 + v33);
    }
    [v34 setConstant:v30];
  }

  sub_10000AB68((uint64_t)&v41);
  return v5;
}

void sub_100114F0C(void *a1, uint64_t a2, void *a3, char a4)
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for InvertedCollectionViewLayout();
  id v6 = a3;
  id v7 = v9.receiver;
  [super prepareForTransitionFromLayout:v6];
  id v8 = sub_10011445C();
  [v8 setSwipeEnabled:a4 & 1];
}

id sub_1001150B0(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  id v3 = &v2[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_swipeDelegate];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout____lazy_storage___swipeController] = 0;
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100218A94;
  void aBlock[3] = &unk_1002CEDF0;
  id v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for InvertedCollectionViewLayout();
  [super initWithSectionProvider:v4];
  swift_release();
  _Block_release(v4);
  return v5;
}

id sub_100115214(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  id v5 = &v3[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_swipeDelegate];
  *(_OWORD *)id v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((void *)v5 + 4) = 0;
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout____lazy_storage___swipeController] = 0;
  aBlock[4] = a1;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100218A94;
  void aBlock[3] = &unk_1002CEDA0;
  id v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for InvertedCollectionViewLayout();
  [super initWithSectionProvider:v6 configuration:a3];
  swift_release();

  _Block_release(v6);
  return v7;
}

id sub_100115424()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InvertedCollectionViewLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for InvertedCollectionViewLayout()
{
  return self;
}

id sub_100115618(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = [v5 collectionView];
  if (v6)
  {
    id v7 = v6;

    return v7;
  }
  else
  {
    id result = (id)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001156F4@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  id v4 = v3;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002F4B60);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v21 - v12;
  id v14 = [v4 collectionView];
  if (!v14)
  {
    uint64_t v18 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 1, 1, v18);
LABEL_7:
    sub_10000B070((uint64_t)v13, (uint64_t *)&unk_1002F4B60);
    return IndexPath.init()();
  }
  double v15 = v14;
  id v16 = [v14 indexPathForItemAtPoint:a2, a3];

  if (v16)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  }
  else
  {
    uint64_t v17 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  }
  sub_10011618C((uint64_t)v11, (uint64_t)v13);
  type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v17) == 1) {
    goto LABEL_7;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v13, v17);
}

id sub_100115B64(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  id v14 = (void *)a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  return v14;
}

uint64_t sub_100115D70()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_100115DD0()
{
  id v1 = [v0 collectionView];
  if (v1)
  {
    objc_super v2 = v1;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v4 = [v2 cellForItemAtIndexPath:isa];

    if (v4)
    {
      type metadata accessor for CardCollectionViewCell();
      if (swift_dynamicCastClass())
      {
        id v5 = v4;
        id v6 = sub_1000298E0();
        [v6 safeAreaInsets];

        return;
      }
    }
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    sub_100007620(&qword_1002F5FA0);
    v7._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100115F98()
{
  id v1 = [v0 collectionView];
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 cellForItemAtIndexPath:isa];

  if (!v4)
  {

    return v4;
  }
  type metadata accessor for CardCollectionViewCell();
  if (!swift_dynamicCastClass())
  {

    return 0;
  }
  id v5 = v4;
  id v4 = sub_1000298E0();

  return v4;
}

uint64_t sub_10011606C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_swipeDelegate;
  swift_beginAccess();
  sub_100116124(v3, (uint64_t)v7);
  if (v8)
  {
    sub_1000295C0((uint64_t)v7, (uint64_t)v6);
    sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F02B0);
    sub_100029624(v6, v6[3]);
    uint64_t v4 = sub_10003355C(a1);
    sub_10000AB68((uint64_t)v6);
  }
  else
  {
    sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F02B0);
    return 0;
  }
  return v4;
}

uint64_t sub_100116124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F02B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011618C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001161F4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011622C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10011623C()
{
  return swift_release();
}

uint64_t sub_100116244()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

unint64_t sub_1001162A4()
{
  unint64_t result = qword_1002F5FC0;
  if (!qword_1002F5FC0)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5FC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KaraokeRenderer.TimingInfo()
{
  return &type metadata for KaraokeRenderer.TimingInfo;
}

Swift::Int sub_100116318()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100116364()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

Swift::Int sub_100116398()
{
  Swift::UInt64 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_1001163E0(double *a1, double *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1001163F8()
{
  unint64_t result = qword_1002F5FD0;
  if (!qword_1002F5FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5FD0);
  }
  return result;
}

unint64_t sub_100116450()
{
  unint64_t result = qword_1002F5FD8;
  if (!qword_1002F5FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5FD8);
  }
  return result;
}

uint64_t *sub_1001164A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 24);
    id v6 = (char *)a1 + v5;
    Swift::String v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100116570(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for LayoutDirection();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1001165D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  id v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for LayoutDirection();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *sub_100116654(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  id v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for LayoutDirection();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1001166D8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  id v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for LayoutDirection();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100116754(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  id v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for LayoutDirection();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1001167D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001167E4);
}

uint64_t sub_1001167E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = type metadata accessor for LayoutDirection();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100116854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100116868);
}

uint64_t sub_100116868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = type metadata accessor for LayoutDirection();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for KaraokeRenderer()
{
  uint64_t result = qword_1002F6038;
  if (!qword_1002F6038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100116928()
{
  uint64_t result = type metadata accessor for LayoutDirection();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1001169C4()
{
  return &protocol witness table for Float;
}

uint64_t sub_1001169D0(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v195 = a1;
  uint64_t v184 = type metadata accessor for ShaderFunction();
  uint64_t v159 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v183 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for Shader();
  uint64_t v158 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  uint64_t v181 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100007620(&qword_1002F6080);
  uint64_t v164 = *(void *)(v189 - 8);
  __chkstk_darwin(v189);
  uint64_t v193 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F6088);
  __chkstk_darwin(v8 - 8);
  uint64_t v200 = (char *)&v157 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UnitCurve();
  __chkstk_darwin(v10 - 8);
  uint64_t v204 = (char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = sub_100007620((uint64_t *)&unk_1002FC510);
  uint64_t v205 = *(void *)(v208 - 8);
  uint64_t v12 = __chkstk_darwin(v208);
  uint64_t v165 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v202 = (char *)&v157 - v15;
  __chkstk_darwin(v14);
  uint64_t v207 = (char *)&v157 - v16;
  uint64_t v224 = (void *)type metadata accessor for Text.Layout.Run();
  uint64_t v215 = (void (*)(void))*(v224 - 1);
  uint64_t v17 = __chkstk_darwin(v224);
  uint64_t v19 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v214 = (char *)&v157 - v20;
  uint64_t v176 = sub_100007620(&qword_1002F6090);
  uint64_t v21 = __chkstk_darwin(v176);
  uint64_t v175 = (char *)&v157 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v223 = (void (*)(char *, char *, uint64_t))((char *)&v157 - v23);
  uint64_t v24 = sub_100007620(&qword_1002F6098);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v188 = (char *)&v157 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v186 = (char *)&v157 - v27;
  uint64_t v28 = type metadata accessor for Text.Layout();
  uint64_t v171 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v170 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100007620(&qword_1002F60A0);
  __chkstk_darwin(v30 - 8);
  uint64_t v166 = (char *)&v157 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_100007620(&qword_1002F60A8);
  uint64_t v32 = __chkstk_darwin(v167);
  uint64_t v192 = (uint64_t)&v157 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v191 = (uint64_t)&v157 - v34;
  uint64_t v218 = type metadata accessor for LayoutDirection();
  CGFloat v217 = *(double *)(v218 - 8);
  __chkstk_darwin(v218);
  *(void *)&CGFloat v216 = (char *)&v157 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Text.Layout.Line();
  uint64_t v194 = *(void *)(v36 - 8);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v187 = (char *)&v157 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (uint64_t)&v157 - v40;
  __chkstk_darwin(v39);
  *(void *)&long long v221 = (char *)&v157 - v42;
  CGRect v43 = (void *)type metadata accessor for GraphicsContext.Filter();
  uint64_t v44 = *(v43 - 1);
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v178 = (char *)&v157 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v48 = (char *)&v157 - v47;
  GraphicsContext.rbDrawingState.getter();
  if (qword_1002EE5A8 != -1) {
    goto LABEL_78;
  }
  while (1)
  {
    RBDrawingStateSetTransition();
    static Color.translateAccentColor.getter();
    uint64_t v190 = v3;
    Color.opacity(_:)();
    swift_release();
    static GraphicsContext.Filter.shadow(color:radius:x:y:blendMode:options:)();
    swift_release();
    uint64_t v185 = (double *)a2;
    GraphicsContext.addFilter(_:options:)();
    uint64_t v49 = *(void (**)(char *, void *))(v44 + 8);
    uint64_t v179 = v44 + 8;
    uint64_t v180 = v43;
    uint64_t v177 = v49;
    v49(v48, v43);
    uint64_t v50 = sub_100119220(&qword_1002F60B0, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    uint64_t v51 = dispatch thunk of Collection.count.getter();
    double v52 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
    uint64_t v222 = (void (**)(char *, uint64_t))v41;
    uint64_t v168 = v28;
    if (v51)
    {
      uint64_t v53 = v51;
      double v225 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
      sub_1000B2E44(0, v51 & ~(v51 >> 63), 0);
      dispatch thunk of Collection.startIndex.getter();
      if (v53 < 0)
      {
        __break(1u);
LABEL_80:
        uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      uint64_t v54 = v28;
      uint64_t v219 = (void (**)(void))(v194 + 16);
      uint64_t v55 = (void (**)(uint64_t, uint64_t))(v194 + 8);
      uint64_t v220 = v50;
      do
      {
        uint64_t v56 = v54;
        uint64_t v57 = (void (*)(CGFloat *, void))dispatch thunk of Collection.subscript.read();
        uint64_t v58 = v221;
        (*v219)(v221);
        v57(&v233, 0);
        Text.Layout.Line.typographicBounds.getter();
        (*v55)(v58, v36);
        double v52 = v225;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000B2E44(0, *(void *)(*(void *)&v52 + 16) + 1, 1);
          double v52 = v225;
        }
        unint64_t v60 = *(void *)(*(void *)&v52 + 16);
        unint64_t v59 = *(void *)(*(void *)&v52 + 24);
        if (v60 >= v59 >> 1)
        {
          sub_1000B2E44(v59 > 1, v60 + 1, 1);
          double v52 = v225;
        }
        uint64_t v61 = v228;
        uint64_t v62 = v230;
        double v63 = v229 - v231;
        double v64 = v231 + v232;
        *(void *)(*(void *)&v52 + 16) = v60 + 1;
        uint64_t v65 = *(void *)&v52 + 32 * v60;
        *(void *)(v65 + 32) = v61;
        *(double *)(v65 + 40) = v63;
        *(void *)(v65 + 48) = v62;
        *(double *)(v65 + 56) = v64;
        uint64_t v54 = v56;
        dispatch thunk of Collection.formIndex(after:)();
        --v53;
      }
      while (v53);
      uint64_t v66 = v186;
      uint64_t v41 = (uint64_t)v222;
    }
    else
    {
      uint64_t v66 = v186;
    }
    uint64_t v67 = *(void *)(*(void *)&v52 + 16);
    uint64_t v28 = (uint64_t)v223;
    double v169 = v52;
    if (v67)
    {
      swift_bridgeObjectRetain();
      uint64_t v68 = *(void *)&v52 + 56;
      double v69 = 100.0;
      do
      {
        double v69 = v69 + CGRectGetWidth(*(CGRect *)(v68 - 24));
        v68 += 32;
        --v67;
      }
      while (v67);
      swift_bridgeObjectRelease();
    }
    else
    {
      double v69 = 100.0;
    }
    type metadata accessor for KaraokeRenderer();
    CGFloat v70 = v217;
    CGFloat v71 = v216;
    uint64_t v72 = v218;
    (*(void (**)(CGFloat, void, uint64_t))(*(void *)&v217 + 104))(COERCE_CGFLOAT(*(void *)&v216), enum case for LayoutDirection.rightToLeft(_:), v218);
    LODWORD(v220) = static LayoutDirection.== infix(_:_:)();
    (*(void (**)(CGFloat, uint64_t))(*(void *)&v70 + 8))(COERCE_CGFLOAT(*(void *)&v71), v72);
    uint64_t v227 = _swiftEmptyArrayStorage;
    uint64_t v73 = v171;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 16);
    double v75 = 50.0 / v69;
    char v76 = v166;
    uint64_t v77 = v168;
    uint64_t v163 = v171 + 16;
    uint64_t v162 = v74;
    v74(v166, v195, v168);
    uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
    uint64_t v171 = v73 + 32;
    uint64_t v161 = v78;
    v78(v170, v76, v77);
    uint64_t v79 = sub_100119220(&qword_1002F60B8, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    double v80 = v169;
    swift_bridgeObjectRetain();
    uint64_t v81 = v191;
    uint64_t v160 = v79;
    dispatch thunk of Sequence.makeIterator()();
    uint64_t v82 = v167;
    char v83 = (double *)(v81 + *(int *)(v167 + 52));
    *char v83 = v80;
    v83[1] = 0.0;
    *(unsigned char *)(v81 + *(int *)(v82 + 56)) = 0;
    sub_100118824(v66);
    uint64_t v84 = sub_100007620(&qword_1002F60C0);
    uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48);
    int v86 = v85(v66, 1, v84);
    double v210 = v69;
    if (v86 == 1) {
      break;
    }
    uint64_t v173 = *(void (**)(uint64_t, char *, uint64_t))(v194 + 32);
    uint64_t v219 = (void (**)(void))(v194 + 16);
    uint64_t v213 = (void (**)(char *))((char *)v215 + 16);
    uint64_t v174 = v194 + 32;
    uint64_t v44 = v194 + 8;
    uint64_t v212 = (void (**)(char *, char *, void *))((char *)v215 + 32);
    uint64_t v211 = (void (**)(char *, void *))((char *)v215 + 8);
    uint64_t v206 = v205 + 32;
    uint64_t v198 = v205 + 56;
    uint64_t v197 = v205 + 48;
    uint64_t v172 = (void (**)(unint64_t, uint64_t))(v205 + 8);
    uint64_t v3 = 1;
    double v157 = 50.0 / v69;
    double v209 = 50.0 / v69;
    double v88 = 0.0;
    double v89 = 0.0;
    uint64_t v199 = v19;
    while (1)
    {
      uint64_t v92 = (CGFloat *)&v66[*(int *)(v84 + 48)];
      CGFloat v93 = *v92;
      CGFloat v94 = v92[1];
      CGFloat v96 = v92[2];
      CGFloat v95 = v92[3];
      v173(v41, v66, v36);
      uint64_t v218 = *(void *)&v93;
      v238.origin.double x = v93;
      CGFloat v217 = v94;
      v238.origin.double y = v94;
      CGFloat v216 = v96;
      v238.size.double width = v96;
      v238.size.double height = v95;
      CGFloat Width = CGRectGetWidth(v238);
      uint64_t v97 = (uint64_t)v175;
      uint64_t v215 = *v219;
      ((void (*)(char *, uint64_t, uint64_t))v215)(v175, v41, v36);
      uint64_t v48 = (char *)sub_100119220(&qword_1002F60E8, (void (*)(uint64_t))&type metadata accessor for Text.Layout.Line);
      dispatch thunk of Collection.startIndex.getter();
      uint64_t v98 = v176;
      *(double *)(v97 + *(int *)(v176 + 36)) = v225;
      sub_100119268(v97, v28);
      CGRect v43 = (void *)(v28 + *(int *)(v98 + 36));
      uint64_t v99 = *v43;
      dispatch thunk of Collection.endIndex.getter();
      if (v99 != *(void *)&v225) {
        break;
      }
      double v90 = v89;
LABEL_21:
      CGFloat v91 = Width / v210;
      sub_10000B070(v28, &qword_1002F6090);
      (*(void (**)(uint64_t, uint64_t))v44)(v41, v36);
      double v209 = v209 + v91;
      uint64_t v66 = v186;
      sub_100118824(v186);
      uint64_t v84 = sub_100007620(&qword_1002F60C0);
      uint64_t v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48);
      double v89 = v90;
      if (v85(v66, 1, v84) == 1)
      {
        uint64_t v87 = v168;
        double v69 = v210;
        double v75 = v157;
        goto LABEL_64;
      }
    }
    double v100 = v88;
    while (1)
    {
      uint64_t v102 = (void (*)(double *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v103 = v214;
      double v104 = v224;
      (*v213)(v214);
      v102(&v225, 0);
      uint64_t v105 = v221;
      ((void (*)(void, uint64_t, uint64_t))v215)(v221, v28, v36);
      dispatch thunk of Collection.formIndex(after:)();
      (*(void (**)(uint64_t, uint64_t))v44)(v105, v36);
      (*v212)(v19, v103, v104);
      Text.Layout.Run.typographicBounds.getter();
      CGFloat v106 = v233;
      CGFloat v107 = v235;
      double v108 = v234 - v236;
      double v109 = v236 + v237;
      if (v220)
      {
        *(void *)&v239.origin.double x = v218;
        v239.origin.double y = v217;
        v239.size.double width = v216;
        v239.size.double height = v95;
        double MaxX = CGRectGetMaxX(v239);
        v240.origin.double x = v106;
        v240.origin.double y = v108;
        v240.size.double width = v107;
        v240.size.double height = v109;
        double v111 = MaxX - CGRectGetMaxX(v240);
      }
      else
      {
        v241.origin.double x = v233;
        v241.origin.double y = v234 - v236;
        v241.size.double width = v235;
        v241.size.double height = v236 + v237;
        double MinX = CGRectGetMinX(v241);
        *(void *)&v242.origin.double x = v218;
        v242.origin.double y = v217;
        v242.size.double width = v216;
        v242.size.double height = v95;
        double v111 = MinX - CGRectGetMinX(v242);
      }
      sub_1001192D0();
      Text.Layout.Run.subscript.getter();
      uint64_t v28 = (uint64_t)v223;
      uint64_t v41 = (uint64_t)v222;
      if (v226)
      {
        (*v211)(v19, v224);
        double v90 = v89;
        double v88 = v100;
        goto LABEL_25;
      }
      double v88 = v225;
      double v90 = v225 - v100;
      if (v3) {
        double v113 = 0.0;
      }
      else {
        double v113 = v209 + v111 / v210;
      }
      if ((v90 > 0.0) | v3 & 1)
      {
        double v225 = v113;
        static UnitCurve.linear.getter();
        sub_1001191C4();
        LinearKeyframe.init(_:duration:timingCurve:)();
        unint64_t v114 = (unint64_t)v227;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v114 = sub_100202A34(0, *(void *)(v114 + 16) + 1, 1, v114);
        }
        unint64_t v116 = *(void *)(v114 + 16);
        unint64_t v115 = *(void *)(v114 + 24);
        if (v116 >= v115 >> 1) {
          unint64_t v114 = sub_100202A34(v115 > 1, v116 + 1, 1, v114);
        }
        *(void *)(v114 + 16) = v116 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v205 + 32))(v114+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(void *)(v205 + 72) * v116, v207, v208);
        uint64_t v227 = (void *)v114;
        (*v211)(v19, v224);
        uint64_t v3 = 0;
        goto LABEL_25;
      }
      if (v89 <= 0.0)
      {
        (*v211)(v19, v224);
        uint64_t v3 = 0;
        double v90 = v89;
        goto LABEL_25;
      }
      a2 = (unint64_t)v227;
      if (!v227[2]) {
        break;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v117 = *(void *)(a2 + 16);
        if (!v117) {
          goto LABEL_76;
        }
      }
      else
      {
        a2 = sub_100098620(a2);
        uint64_t v117 = *(void *)(a2 + 16);
        if (!v117) {
          goto LABEL_76;
        }
      }
      uint64_t v118 = v117 - 1;
      uint64_t v119 = v205;
      unint64_t v203 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
      uint64_t v41 = *(void *)(v205 + 72);
      uint64_t v120 = (uint64_t)v200;
      uint64_t v121 = v208;
      uint64_t v201 = *(void (**)(char *, unint64_t, uint64_t))(v205 + 32);
      v201(v200, a2 + v203 + v41 * (v117 - 1), v208);
      *(void *)(a2 + 16) = v118;
      uint64_t v227 = (void *)a2;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v119 + 56))(v120, 0, 1, v121);
      LODWORD(v118) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v120, 1, v121);
      sub_10000B070(v120, &qword_1002F6088);
      if (v118 == 1)
      {
        uint64_t v3 = *(void *)(a2 + 16);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v227 = (void *)a2;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          a2 = sub_100098620(a2);
          uint64_t v227 = (void *)a2;
        }
        uint64_t v19 = v199;
        uint64_t v28 = v3 - 1;
        unint64_t v123 = *(void *)(a2 + 16);
        if (v3 - 1 >= v123) {
          goto LABEL_77;
        }
        unint64_t v124 = v123 - 1;
        unint64_t v125 = a2 + v203 + v28 * v41;
        (*v172)(v125, v208);
        unint64_t v126 = v124 - v28;
        if ((uint64_t)(v124 - v28) < 0) {
          goto LABEL_80;
        }
        uint64_t v28 = (uint64_t)v223;
        if (v41 > 0 || v125 >= v125 + v41 + v126 * v41)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v41)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a2 + 16) = v124;
        uint64_t v227 = (void *)a2;
      }
      else
      {
        uint64_t v28 = (uint64_t)v223;
        uint64_t v19 = v199;
      }
      double v225 = v113;
      static UnitCurve.linear.getter();
      sub_1001191C4();
      LinearKeyframe.init(_:duration:timingCurve:)();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_100202A34(0, *(void *)(a2 + 16) + 1, 1, a2);
      }
      unint64_t v128 = *(void *)(a2 + 16);
      unint64_t v127 = *(void *)(a2 + 24);
      if (v128 >= v127 >> 1) {
        a2 = sub_100202A34(v127 > 1, v128 + 1, 1, a2);
      }
      *(void *)(a2 + 16) = v128 + 1;
      v201((char *)(a2 + v203 + v128 * v41), (unint64_t)v202, v208);
      uint64_t v227 = (void *)a2;
      (*v211)(v19, v224);
      uint64_t v3 = 0;
      double v90 = v89;
      uint64_t v41 = (uint64_t)v222;
LABEL_25:
      uint64_t v101 = *v43;
      dispatch thunk of Collection.endIndex.getter();
      double v100 = v88;
      double v89 = v90;
      if (v101 == *(void *)&v225) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    swift_once();
  }
  uint64_t v87 = v168;
LABEL_64:
  uint64_t v224 = v85;
  sub_10000B070(v191, &qword_1002F60A8);
  double v225 = 1.0;
  static UnitCurve.linear.getter();
  sub_1001191C4();
  LinearKeyframe.init(_:duration:timingCurve:)();
  unint64_t v129 = (unint64_t)v227;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v129 = sub_100202A34(0, *(void *)(v129 + 16) + 1, 1, v129);
  }
  unint64_t v131 = *(void *)(v129 + 16);
  unint64_t v130 = *(void *)(v129 + 24);
  if (v131 >= v130 >> 1) {
    unint64_t v129 = sub_100202A34(v130 > 1, v131 + 1, 1, v129);
  }
  *(void *)(v129 + 16) = v131 + 1;
  uint64_t v132 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v205 + 32))(v129+ ((*(unsigned __int8 *)(v205 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v205 + 80))+ *(void *)(v205 + 72) * v131, v165, v208);
  uint64_t v227 = (void *)v129;
  double v225 = 0.0;
  __chkstk_darwin(v132);
  sub_100007620(&qword_1002F60D0);
  sub_100014894(&qword_1002F60D8, &qword_1002F60D0);
  KeyframeTimeline.init<A>(initialValue:content:)();
  uint64_t v133 = v166;
  v162(v166, v195, v87);
  v161(v170, v133, v87);
  uint64_t v134 = v192;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v135 = v167;
  uint64_t v136 = (double *)(v134 + *(int *)(v167 + 52));
  *uint64_t v136 = v169;
  v136[1] = 0.0;
  *(unsigned char *)(v134 + *(int *)(v135 + 56)) = 0;
  uint64_t v137 = v188;
  sub_100118824(v188);
  int v138 = ((uint64_t (*)(char *, uint64_t, uint64_t))v224)(v137, 1, v84);
  uint64_t v139 = v187;
  if (v138 != 1)
  {
    uint64_t v223 = *(void (**)(char *, char *, uint64_t))(v194 + 32);
    uint64_t v222 = (void (**)(char *, uint64_t))(v159 + 8);
    uint64_t v141 = (void (**)(char *, uint64_t))(v158 + 8);
    v194 += 32;
    uint64_t v142 = (void (**)(char *, uint64_t))(v194 - 24);
    long long v221 = xmmword_100247140;
    uint64_t v143 = v183;
    do
    {
      uint64_t v147 = (CGFloat *)&v137[*(int *)(v84 + 48)];
      CGFloat v148 = *v147;
      CGFloat v149 = v147[1];
      CGFloat v150 = v147[2];
      CGFloat v151 = v147[3];
      v223(v139, v137, v36);
      double v225 = *v185;
      swift_retain();
      v244.origin.double x = v148;
      v244.origin.double y = v149;
      v244.size.double width = v150;
      v244.size.double height = v151;
      double v152 = CGRectGetWidth(v244) / v69;
      KeyframeTimeline.value(progress:)();
      v245.origin.double x = v148;
      v245.origin.double y = v149;
      v245.size.double width = v150;
      v245.size.double height = v151;
      CGRectGetWidth(v245);
      CGFloat v153 = v148;
      CGFloat v154 = v149;
      CGFloat v155 = v150;
      CGFloat v156 = v151;
      if (v220) {
        CGRectGetMaxX(*(CGRect *)&v153);
      }
      else {
        CGRectGetMinX(*(CGRect *)&v153);
      }
      v243.origin.double x = v148;
      v243.origin.double y = v149;
      v243.size.double width = v150;
      v243.size.double height = v151;
      CGRectGetMidY(v243);
      static ShaderLibrary.subscript.getter();
      sub_100007620(&qword_1002F60E0);
      type metadata accessor for Shader.Argument();
      *(_OWORD *)(swift_allocObject() + 16) = v221;
      static Shader.Argument._float2(_:_:)();
      static Shader.Argument._float(_:)();
      uint64_t v144 = v181;
      ShaderFunction.dynamicallyCall(withArguments:)();
      swift_bridgeObjectRelease();
      (*v222)(v143, v184);
      uint64_t v145 = v178;
      static GraphicsContext.Filter.layerShader(_:maxSampleOffset:)();
      (*v141)(v144, v182);
      GraphicsContext.addFilter(_:options:)();
      v177(v145, v180);
      swift_retain();
      uint64_t v139 = v187;
      GraphicsContext.draw(_:options:)();
      swift_release_n();
      (*v142)(v139, v36);
      double v75 = v75 + v152;
      uint64_t v137 = v188;
      sub_100118824(v188);
      int v146 = ((uint64_t (*)(char *, uint64_t, uint64_t))v224)(v137, 1, v84);
      double v69 = v210;
    }
    while (v146 != 1);
  }
  sub_10000B070(v192, &qword_1002F60A8);
  (*(void (**)(char *, uint64_t))(v164 + 8))(v193, v189);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100118824@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Text.Layout();
  *(void *)&long long v42 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Text.Layout.Line();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_100007620(&qword_1002F60A8);
  uint64_t v15 = *(int *)(v14 + 56);
  if (*(unsigned char *)(v2 + v15) != 1)
  {
    uint64_t v19 = v14;
    uint64_t v38 = v8;
    uint64_t v39 = v13;
    uint64_t v40 = a1;
    uint64_t v41 = v7;
    uint64_t v20 = *(void *)(v2 + *(int *)(sub_100007620(&qword_1002F6108) + 36));
    sub_100119220(&qword_1002F60B0, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    dispatch thunk of Collection.endIndex.getter();
    if (v20 != v43[0])
    {
      uint64_t v21 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      uint64_t v22 = v38;
      (*(void (**)(char *))(v38 + 16))(v11);
      v21(v43, 0);
      uint64_t v23 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v6, v2, v4);
      dispatch thunk of Collection.formIndex(after:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
      uint64_t v24 = v41;
      uint64_t v25 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
      uint64_t v26 = v39;
      uint64_t result = v25(v39, v11, v41);
      uint64_t v27 = (void *)(v2 + *(int *)(v19 + 52));
      unint64_t v28 = v27[1];
      unint64_t v29 = *(void *)(*v27 + 16);
      if (v28 != v29)
      {
        if (v28 >= v29)
        {
          __break(1u);
        }
        else
        {
          unint64_t v31 = v28 + 1;
          uint64_t v32 = *v27 + 32 * v28;
          uint64_t v34 = *(void *)(v32 + 48);
          uint64_t v33 = *(void *)(v32 + 56);
          long long v42 = *(_OWORD *)(v32 + 32);
          v27[1] = v31;
          uint64_t v35 = sub_100007620(&qword_1002F60C0);
          uint64_t v36 = v40;
          uint64_t v37 = &v40[*(int *)(v35 + 48)];
          v25(v40, v26, v24);
          *(_OWORD *)uint64_t v37 = v42;
          *((void *)v37 + 2) = v34;
          *((void *)v37 + 3) = v33;
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v36, 0, 1, v35);
        }
        return result;
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v24);
    }
    *(unsigned char *)(v2 + v15) = 1;
    uint64_t v30 = sub_100007620(&qword_1002F60C0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v40, 1, 1, v30);
  }
  uint64_t v16 = sub_100007620(&qword_1002F60C0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);

  return v17((uint64_t)a1, 1, 1, v16);
}

uint64_t sub_100118C70()
{
  uint64_t v0 = sub_100007620(&qword_1002F60F8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v11 - v5;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002FC510);
  uint64_t v8 = sub_100014894(&qword_1002F6100, (uint64_t *)&unk_1002FC510);
  static KeyframesBuilder.buildArray<A>(_:)();
  swift_bridgeObjectRelease();
  v11[1] = &type metadata for CGFloat;
  void v11[2] = v7;
  v11[3] = v8;
  swift_getOpaqueTypeConformance2();
  static KeyframesBuilder.buildExpression<A>(_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  static KeyframesBuilder.buildPartialBlock<A>(first:)();
  static KeyframesBuilder.buildFinalResult<A>(_:)();
  v9(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v9)(v6, v0);
}

uint64_t sub_100118E80()
{
  return TextProxy.sizeThatFits(_:)();
}

double sub_100118EBC()
{
  return 0.0;
}

float sub_100118ED0@<S0>(float *a1@<X8>)
{
  float result = *(float *)(v1 + 4);
  *a1 = result;
  return result;
}

float sub_100118EDC(float *a1)
{
  float result = *a1;
  *(float *)(v1 + 4) = *a1;
  return result;
}

float (*sub_100118EE8(uint64_t a1))(float *a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_100118F14;
}

float sub_100118F14(float *a1)
{
  float result = a1[2];
  *(float *)(*(void *)a1 + 4) = result;
  return result;
}

uint64_t sub_100118F28()
{
  return sub_100119220(&qword_1002F6078, (void (*)(uint64_t))type metadata accessor for KaraokeRenderer);
}

id sub_100118F70()
{
  id result = sub_100118F90();
  qword_1002F5FC8 = (uint64_t)result;
  return result;
}

id sub_100118F90()
{
  id v0 = [objc_allocWithZone((Class)RBTransition) init];
  [v0 setMethod:8];
  id v1 = [objc_allocWithZone((Class)RBTransitionEffect) init];
  [v1 setType:19];
  LODWORD(v2) = 1022739087;
  [v1 setBeginTime:v2];
  LODWORD(v3) = 1000593162;
  [v1 setDuration:v3];
  [v0 addEffect:v1];

  id v4 = [objc_allocWithZone((Class)RBTransitionEffect) init];
  [v4 setType:1];
  [v4 setBeginTime:0.0];
  LODWORD(v5) = 1.0;
  [v4 setDuration:v5];
  [v0 addEffect:v4];

  id v6 = [objc_allocWithZone((Class)RBTransitionEffect) init];
  [v6 setType:4];
  LODWORD(v7) = 10.0;
  [v6 setArgumentValue:0 atIndex:v7];
  LODWORD(v8) = 1051260355;
  [v6 setBeginTime:v8];
  LODWORD(v9) = 1059816735;
  [v6 setDuration:v9];
  [v0 addEffect:v6];

  id v10 = [objc_allocWithZone((Class)RBTransitionEffect) init];
  [v10 setType:2];
  LODWORD(v11) = 1061997773;
  [v10 setArgumentValue:0 atIndex:v11];
  LODWORD(v12) = 1051260355;
  [v10 setBeginTime:v12];
  LODWORD(v13) = 1059816735;
  [v10 setDuration:v13];
  [v0 addEffect:v10];

  return v0;
}

unint64_t sub_1001191C4()
{
  unint64_t result = qword_1002F60C8;
  if (!qword_1002F60C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F60C8);
  }
  return result;
}

uint64_t sub_100119218()
{
  return sub_100118C70();
}

uint64_t sub_100119220(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100119268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F6090);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001192D0()
{
  unint64_t result = qword_1002F60F0;
  if (!qword_1002F60F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F60F0);
  }
  return result;
}

uint64_t sub_100119324()
{
  return sub_100119554((void (*)(void))sub_10011EBD0);
}

uint64_t sub_100119344@<X0>(void *a1@<X8>)
{
  sub_10011EBD0();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100119394()
{
  return EnvironmentValues.subscript.setter();
}

BOOL sub_1001193F4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  void v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return sub_10011E2C8((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_100119450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Double);
}

uint64_t sub_10011945C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10011F9DC(&qword_1002F64A8, &qword_1002F64B0, (void (*)(void))sub_10011EAB4);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double sub_1001194F8()
{
  sub_10011EA40();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_100119534()
{
  return sub_100119554((void (*)(void))sub_10011E9EC);
}

uint64_t sub_100119554(void (*a1)(void))
{
  a1();
  EnvironmentValues.subscript.getter();
  return v2;
}

uint64_t sub_10011959C(char *a1, double a2)
{
  uint64_t v87 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F6428);
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F6458);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  CGFloat v71 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v94 = (uint64_t)&v62 - v8;
  uint64_t v96 = type metadata accessor for Text.CustomAttributes();
  double v64 = *(void (***)(char *, uint64_t))(v96 - 8);
  __chkstk_darwin(v96 - 8);
  uint64_t v92 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for AttributedString.Runs.Run();
  double v63 = *(void (***)(char *, uint64_t))(v95 - 8);
  __chkstk_darwin(v95);
  CGFloat v93 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F6460);
  __chkstk_darwin(v11 - 8);
  double v89 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AttributedString.Runs.Index();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v90 = v13;
  uint64_t v91 = v14;
  uint64_t v15 = __chkstk_darwin(v13);
  double v88 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = type metadata accessor for AttributedString.Runs();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for AttributedSubstring();
  uint64_t v23 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100007620(&qword_1002F6468);
  uint64_t v27 = v26 - 8;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v62 - v31;
  double v98 = a2;
  uint64_t v33 = sub_100014894(&qword_1002F6470, &qword_1002F6428);
  uint64_t v73 = v3;
  uint64_t v70 = v33;
  AttributedString.subscript.getter();
  AttributedSubstring.runs.getter();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v86);
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  uint64_t v78 = v20 + 16;
  uint64_t v77 = v34;
  v34(v30, (uint64_t)v22, v19);
  uint64_t v84 = sub_10011E3B0(&qword_1002F6478, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v79 = v22;
  uint64_t v85 = v19;
  uint64_t v80 = v20 + 8;
  char v76 = v35;
  v35(v22, v19);
  uint64_t v36 = &v30[*(int *)(v27 + 44)];
  uint64_t v37 = v91;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
  uint64_t v87 = v18;
  v38(v36, v18, v90);
  sub_10001323C((uint64_t)v30, (uint64_t)v32, &qword_1002F6468);
  uint64_t v39 = *(int *)(v27 + 44);
  uint64_t v86 = (uint64_t)v32;
  uint64_t v40 = &v32[v39];
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v37 + 16);
  uint64_t v91 = v37 + 16;
  uint64_t v81 = (void (**)(char *, uint64_t))(v37 + 8);
  double v75 = (void (**)(char *))(v63 + 2);
  char v83 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 7);
  uint64_t v74 = (unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 6);
  uint64_t v68 = (void (**)(char *, char *, uint64_t))(v63 + 4);
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 6);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v64 + 4);
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v64 + 2);
  uint64_t v65 = (void (**)(char *, void, uint64_t, uint64_t))(v64 + 7);
  ++v64;
  ++v63;
  double v69 = &v32[v39];
  uint64_t v41 = v85;
  while (1)
  {
    uint64_t v49 = v87;
    uint64_t v50 = v90;
    v82(v87, v40, v90);
    uint64_t v51 = v88;
    uint64_t v52 = v86;
    dispatch thunk of Collection.endIndex.getter();
    sub_10011E3B0(&qword_1002F6480, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
    char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v54 = *v81;
    (*v81)(v51, v50);
    v54(v49, v50);
    if (v53) {
      break;
    }
    uint64_t v55 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v56 = v89;
    uint64_t v57 = v95;
    (*v75)(v89);
    v55(v97, 0);
    uint64_t v58 = v79;
    v77(v79, v52, v41);
    dispatch thunk of Collection.formIndex(after:)();
    v76(v58, v41);
    (*v83)(v56, 0, 1, v57);
    if ((*v74)(v56, 1, v57) == 1) {
      return sub_10000B070(v52, &qword_1002F6468);
    }
    (*v68)(v93, v56, v57);
    uint64_t KeyPath = swift_getKeyPath();
    *(&v62 - 2) = (void (**)(char *, uint64_t, uint64_t))__chkstk_darwin(KeyPath);
    swift_getKeyPath();
    sub_10011E6D0();
    uint64_t v60 = v94;
    AttributedString.Runs.Run.subscript.getter();
    swift_release();
    if ((*v67)(v60, 1, v96) == 1)
    {
      Text.CustomAttributes.init()();
      sub_10000B070(v94, &qword_1002F6458);
    }
    else
    {
      (*v62)(v92, v94, v96);
    }
    sub_1001192D0();
    long long v42 = v92;
    Text.CustomAttributes.add<A>(_:)();
    uint64_t v43 = (uint64_t)v72;
    uint64_t v44 = v93;
    AttributedString.Runs.Run.range.getter();
    uint64_t v45 = swift_getKeyPath();
    *(&v62 - 2) = (void (**)(char *, uint64_t, uint64_t))__chkstk_darwin(v45);
    swift_getKeyPath();
    uint64_t v46 = v71;
    uint64_t v47 = v96;
    (*v66)(v71, v42, v96);
    (*v65)(v46, 0, 1, v47);
    uint64_t v48 = (void (*)(char *, void))AttributedString.subscript.modify();
    AttributedSubstring.subscript.setter();
    v48(v97, 0);
    sub_10000B070(v43, &qword_1002F6428);
    (*v64)(v42, v47);
    (*v63)(v44, v95);
    uint64_t v40 = v69;
  }
  (*v83)(v89, 1, 1, v95);
  return sub_10000B070(v52, &qword_1002F6468);
}

uint64_t sub_10011A0C8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_10011A124@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__animationText;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for AttributedString();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10011A220@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__animationText;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for AttributedString();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_10011A31C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10011A4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__animationText;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_10011A540@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  return sub_10000C3A4(v3, a1, &qword_1002F8BA0);
}

uint64_t sub_10011A614@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  return sub_10000C3A4(v4, a2, &qword_1002F8BA0);
}

uint64_t sub_10011A6E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C3A4(a1, (uint64_t)v6, &qword_1002F8BA0);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v6, &qword_1002F8BA0);
}

uint64_t sub_10011A828(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  sub_10011E52C(a2, v3);
  return swift_endAccess();
}

double sub_10011A894()
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration);
}

double sub_10011A93C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration);
  *a2 = result;
  return result;
}

uint64_t sub_10011A9EC()
{
  return swift_release();
}

void *sub_10011AAC4()
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer);
  id v2 = v1;
  return v1;
}

id sub_10011AB74@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer);
  *a2 = v4;

  return v4;
}

void sub_10011AC34(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10011AD10(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v75 = sub_100007620(&qword_1002F6420);
  uint64_t v8 = __chkstk_darwin(v75);
  uint64_t v74 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v73 = (char *)&v61 - v10;
  uint64_t v72 = sub_100007620(&qword_1002F6428);
  uint64_t v11 = __chkstk_darwin(v72);
  CGFloat v71 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v70 = (char *)&v61 - v13;
  uint64_t v14 = type metadata accessor for AttributedString.Index();
  double v15 = *(double *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v83 = (char *)&v61 - v19;
  uint64_t v81 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v86 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v80 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v21 - 8);
  uint64_t v77 = type metadata accessor for AttributedString();
  uint64_t v22 = __chkstk_darwin(v77);
  uint64_t result = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v61 - v26;
  unint64_t v28 = *(unint64_t *)(a4 + 16);
  if (*(double *)&v28 == 0.0) {
    return result;
  }
  uint64_t v62 = v25;
  uint64_t v64 = v24;
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  if (qword_1002EE658 != -1) {
LABEL_26:
  }
    swift_once();
  uint64_t v29 = type metadata accessor for Logger();
  sub_100011554(v29, (uint64_t)qword_10030EB10);
  swift_bridgeObjectRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.info.getter();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v65 = v5;
  if (v32)
  {
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 134349312;
    double v89 = *(double *)&v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2050;
    double v89 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Animation started. wordTimingInfo.count: %{public}ld. totalDuration: %{public}f", (uint8_t *)v33, 0x16u);
    swift_slowDealloc();

    if (v28 < 2) {
      goto LABEL_5;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (v28 < 2)
    {
LABEL_5:
      if (a1 < 0.0) {
        a1 = 0.0;
      }
      goto LABEL_11;
    }
  }
  double v34 = *(double *)(a4 + 32 + 56 * (v28 - 1) + 32);
  double v35 = v34 + v34 / (double)(uint64_t)(v28 - 1);
  if (v35 > a1) {
    a1 = v35;
  }
LABEL_11:
  uint64_t v79 = (void (**)(unint64_t, uint64_t))(v86 + 8);
  double v69 = (void (**)(char *, uint64_t))(*(void *)&v15 + 8);
  uint64_t v67 = (void (**)(char *, char *, uint64_t))(*(void *)&v15 + 16);
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(*(void *)&v15 + 32);
  swift_bridgeObjectRetain();
  uint64_t v63 = a4;
  uint64_t v5 = (double *)(a4 + 80);
  uint64_t v68 = v18;
  char v76 = v27;
  do
  {
    uint64_t v36 = *((void *)v5 - 5);
    uint64_t v37 = *((void *)v5 - 3);
    double v38 = *(v5 - 2);
    uint64_t v39 = *((void *)v5 - 1);
    double v15 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39 == NSNotFound.getter())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v86 = v37;
      a4 = v39 + *(void *)&v15;
      if (__OFADD__(v39, *(void *)&v15))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v84 = v36;
      unint64_t v85 = v28;
      unint64_t v28 = (unint64_t)v80;
      AttributedString.characters.getter();
      uint64_t v40 = AttributedString.CharacterView._count.getter();
      (*v79)(v28, v81);
      if (v40 < 0) {
        goto LABEL_24;
      }
      double v89 = 0.0;
      uint64_t v90 = v40;
      uint64_t v87 = v39;
      uint64_t v88 = v39 + *(void *)&v15;
      sub_100007620(&qword_1002F6430);
      sub_10011E594();
      if (Collection<>.contains<A>(_:)())
      {
        AttributedString.startIndex.getter();
        a4 = sub_10011E3B0(&qword_1002F6448, (void (*)(uint64_t))&type metadata accessor for AttributedString);
        unint64_t v28 = (unint64_t)v83;
        AttributedStringProtocol.index(_:offsetByCharacters:)();
        uint64_t v82 = *v69;
        v82(v18, v14);
        AttributedStringProtocol.index(_:offsetByCharacters:)();
        sub_10011E3B0(&qword_1002F6450, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
        if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0) {
          goto LABEL_25;
        }
        uint64_t v41 = v75;
        long long v42 = v73;
        uint64_t v43 = &v73[*(int *)(v75 + 48)];
        uint64_t v44 = *v67;
        (*v67)(v73, v83, v14);
        uint64_t v78 = v43;
        v44(v43, v18, v14);
        uint64_t v45 = v74;
        uint64_t v46 = &v74[*(int *)(v41 + 48)];
        v44(v74, v42, v14);
        v44(v46, v43, v14);
        uint64_t v47 = *v66;
        uint64_t v48 = (uint64_t)v71;
        (*v66)(v71, v45, v14);
        v82(v46, v14);
        uint64_t v49 = &v45[*(int *)(v41 + 48)];
        v47(v45, v42, v14);
        v47(v49, v78, v14);
        v47((char *)(v48 + *(int *)(v72 + 36)), v49, v14);
        uint64_t v50 = v45;
        uint64_t v18 = v68;
        uint64_t v51 = v82;
        v82(v50, v14);
        uint64_t v52 = v70;
        sub_10001323C(v48, (uint64_t)v70, &qword_1002F6428);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v27 = v76;
        sub_10011959C(v52, v38 / a1);
        sub_10000B070((uint64_t)v52, &qword_1002F6428);
        v51(v18, v14);
        v51(v83, v14);
        unint64_t v28 = v85;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v28 = v85;
      }
    }
    v5 += 7;
    --v28;
  }
  while (*(double *)&v28 != 0.0);
  swift_bridgeObjectRelease();
  uint64_t v53 = v64;
  uint64_t v54 = v62;
  uint64_t v55 = v27;
  uint64_t v56 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v62, v55, v77);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  double v58 = *(double *)&v65;
  *(&v61 - 2) = (uint64_t)v65;
  *(&v61 - 1) = v54;
  double v89 = v58;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  unint64_t v59 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v59(v54, v56);
  uint64_t v60 = static Animation.easeInOut(duration:)();
  __chkstk_darwin(v60);
  *((double *)&v61 - 2) = v58;
  *((double *)&v61 - 1) = a1;
  withAnimation<A>(_:_:)();
  swift_release();
  swift_getKeyPath();
  double v89 = v58;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  sub_10011BD30((uint64_t)sub_10011BA10, 0, *(double *)(*(void *)&v58 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration));
  return ((uint64_t (*)(char *, uint64_t))v59)(v76, v56);
}

uint64_t sub_10011B820(uint64_t a1, double a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Date.init()();
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  swift_getKeyPath();
  uint64_t v12 = a1;
  uint64_t v13 = v6;
  uint64_t v14 = a1;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10000B070((uint64_t)v6, &qword_1002F8BA0);
  swift_getKeyPath();
  uint64_t v10 = a1;
  double v11 = a2;
  uint64_t v14 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_10011BA10()
{
  return sub_10011BA34();
}

uint64_t sub_10011BA34()
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer);
  if (v1)
  {
    id v2 = v1;
    [v2 invalidate];
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
  }
  static Animation.easeInOut(duration:)();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_10011BBBC(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  swift_getKeyPath();
  uint64_t v8 = a1;
  uint64_t v9 = v4;
  uint64_t v10 = a1;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v4, &qword_1002F8BA0);
}

void sub_10011BD30(uint64_t a1, uint64_t a2, double a3)
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer))
  {
    uint64_t v7 = self;
    uint64_t v8 = swift_allocObject();
    swift_weakInit();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = a1;
    v9[4] = a2;
    aBlock[4] = sub_10011E470;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100158A24;
    void aBlock[3] = &unk_1002CEE90;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v11 = [v7 scheduledTimerWithTimeInterval:0 repeats:v10 block:a3];
    _Block_release(v10);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    aBlock[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
  }
}

uint64_t sub_10011BF7C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    a3(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_10011C0C0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__animationText;
  uint64_t v2 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart, &qword_1002F8BA0);

  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel___observationRegistrar;
  uint64_t v4 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_10011C1CC()
{
  return type metadata accessor for KaraokeAnimationModel(0);
}

uint64_t type metadata accessor for KaraokeAnimationModel(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F6160);
}

void sub_10011C1F4()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_10011F6F4(319, (unint64_t *)&qword_1002F2B90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ObservationRegistrar();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_10011C340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v6 - 8);
  *(void *)(a3 + 32) = swift_getKeyPath();
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = swift_getKeyPath();
  *(unsigned char *)(a3 + 56) = 0;
  uint64_t v7 = type metadata accessor for KaraokeView(0);
  uint64_t v8 = (uint64_t *)(a3 + *(int *)(v7 + 32));
  *uint64_t v8 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3 + *(int *)(v7 + 36);
  *(void *)uint64_t v9 = swift_getKeyPath();
  *(unsigned char *)(v9 + 8) = 0;
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  type metadata accessor for KaraokeAnimationModel(0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = v10 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)(v10 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration) = 0;
  *(void *)(v10 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer) = 0;
  swift_bridgeObjectRetain();
  ObservationRegistrar.init()();
  AttributeContainer.init()();
  uint64_t result = AttributedString.init(_:attributes:)();
  *(void *)(a3 + 16) = v10;
  *(void *)(a3 + 24) = 0;
  return result;
}

uint64_t sub_10011C508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  uint64_t v72 = type metadata accessor for ColorRenderingMode();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for KaraokeView(0);
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v81 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v82 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for AnimationTimelineSchedule();
  uint64_t v9 = *(void *)(v66 - 8);
  uint64_t v10 = __chkstk_darwin(v66);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v60 - v13;
  uint64_t v67 = sub_100007620(&qword_1002F6580);
  uint64_t v68 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F6588);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v73 = v16;
  uint64_t v74 = v17;
  __chkstk_darwin(v16);
  char v83 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100007620(&qword_1002F6590);
  uint64_t v79 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  double v69 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100007620(&qword_1002F6598);
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(v1 + 24);
  uint64_t v84 = *(void *)(v1 + 16);
  uint64_t v85 = v21;
  sub_100007620(&qword_1002F65A0);
  State.wrappedValue.getter();
  uint64_t v22 = v90;
  swift_getKeyPath();
  uint64_t v84 = v22;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v23 = v22 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  sub_10000C3A4(v23, (uint64_t)v8, &qword_1002F8BA0);
  swift_release();
  uint64_t v24 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v8, 1, v24);
  sub_10000B070((uint64_t)v8, &qword_1002F8BA0);
  AnimationTimelineSchedule.init(minimumInterval:paused:)();
  uint64_t v64 = type metadata accessor for KaraokeView;
  uint64_t v25 = (void *)v2;
  uint64_t v26 = v82;
  sub_10011FD50(v2, v82, type metadata accessor for KaraokeView);
  uint64_t v27 = *(unsigned __int8 *)(v81 + 80);
  uint64_t v28 = ((v27 + 16) & ~v27) + v5;
  uint64_t v29 = (v27 + 16) & ~v27;
  uint64_t v63 = v29;
  uint64_t v81 = v27 | 7;
  uint64_t v62 = v28;
  uint64_t v30 = swift_allocObject();
  sub_10011F778(v26, v30 + v29);
  uint64_t v31 = v9;
  uint64_t v32 = v66;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v66);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_10011F7DC;
  *(void *)(v33 + 24) = v30;
  sub_100007620(&qword_1002F65A8);
  sub_10011E3B0(&qword_1002F65B0, (void (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule);
  sub_10011F89C();
  double v34 = v65;
  TimelineView<>.init(_:content:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
  uint64_t v35 = v71;
  uint64_t v36 = v70;
  uint64_t v37 = v72;
  (*(void (**)(char *, void, uint64_t))(v71 + 104))(v70, enum case for ColorRenderingMode.nonLinear(_:), v72);
  uint64_t v38 = sub_10011F9DC(&qword_1002F65F0, &qword_1002F6580, (void (*)(void))sub_10011F89C);
  uint64_t v39 = v67;
  View.drawingGroup(opaque:colorMode:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  uint64_t v40 = v39;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v39);
  uint64_t v41 = v25[4];
  LOBYTE(v36) = *((unsigned char *)v25 + 40);
  uint64_t v61 = v25;
  sub_10011EDDC(v41, (char)v36);
  uint64_t v42 = sub_100100494(v41, (char)v36);
  sub_10010182C(v41, (char)v36);
  uint64_t v43 = _swiftEmptyArrayStorage;
  if (v42) {
    uint64_t v43 = (void *)v42;
  }
  uint64_t v88 = v43;
  uint64_t v44 = (uint64_t)v25;
  uint64_t v45 = v82;
  uint64_t v46 = v64;
  sub_10011FD50(v44, v82, v64);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = v63;
  sub_10011F778(v45, v47 + v63);
  uint64_t v49 = sub_100007620(&qword_1002F64C0);
  uint64_t v84 = v40;
  uint64_t v85 = v38;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v51 = sub_10011EAB4();
  uint64_t v52 = v69;
  uint64_t v53 = v73;
  uint64_t v54 = v83;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v54, v53);
  uint64_t v55 = v61[1];
  uint64_t v88 = (void *)*v61;
  uint64_t v89 = v55;
  sub_10011FD50((uint64_t)v61, v45, v46);
  uint64_t v56 = swift_allocObject();
  sub_10011F778(v45, v56 + v48);
  swift_bridgeObjectRetain();
  uint64_t v84 = v53;
  uint64_t v85 = v49;
  uint64_t v86 = OpaqueTypeConformance2;
  uint64_t v87 = v51;
  swift_getOpaqueTypeConformance2();
  uint64_t v57 = v75;
  uint64_t v58 = v77;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v58);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v80, v57, v78);
}

uint64_t sub_10011CF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v52 = a3;
  uint64_t v4 = sub_100007620(&qword_1002F65E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for KaraokeRenderer() - 8;
  __chkstk_darwin(v50);
  uint64_t v49 = (float *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = type metadata accessor for AttributedString();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v44 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007620(&qword_1002F65A8) - 8;
  __chkstk_darwin(v48);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F8BA0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v60 = *(void *)(a2 + 16);
  uint64_t v15 = v60;
  uint64_t v61 = v16;
  sub_100007620(&qword_1002F65A0);
  State.wrappedValue.getter();
  uint64_t v17 = v58;
  swift_getKeyPath();
  uint64_t v60 = v17;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration);
  swift_release();
  uint64_t v60 = v15;
  uint64_t v61 = v16;
  State.wrappedValue.getter();
  uint64_t v19 = v58;
  swift_getKeyPath();
  uint64_t v60 = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v19 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  sub_10000C3A4(v20, (uint64_t)v14, &qword_1002F8BA0);
  swift_release();
  uint64_t v53 = v43;
  uint64_t v54 = v18;
  unint64_t v21 = sub_10011D6E4((void (*)(uint64_t *__return_ptr, unsigned char *))sub_10011FCD4);
  sub_10000B070((uint64_t)v14, &qword_1002F8BA0);
  float v22 = 1.0;
  if ((v21 & (unint64_t)&_mh_execute_header) != 0) {
    float v23 = 1.0;
  }
  else {
    float v23 = *(float *)&v21;
  }
  sub_10011D8D0(a2);
  uint64_t v24 = *(void *)(a2 + 24);
  uint64_t v58 = *(void *)(a2 + 16);
  uint64_t v59 = v24;
  State.wrappedValue.getter();
  uint64_t v25 = v55;
  swift_getKeyPath();
  uint64_t v58 = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = v25 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__animationText;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v26, v46);
  swift_release();
  uint64_t v27 = Text.init(_:)();
  uint64_t v29 = v28;
  uint64_t v46 = v30;
  char v32 = v31 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = *(void *)(a2 + 24);
  uint64_t v55 = *(void *)(a2 + 16);
  uint64_t v56 = v34;
  State.wrappedValue.getter();
  uint64_t v35 = v57;
  swift_getKeyPath();
  uint64_t v55 = v35;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v36 = v35 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackStart;
  swift_beginAccess();
  uint64_t v37 = v36;
  uint64_t v38 = v47;
  sub_10000C3A4(v37, v47, &qword_1002F8BA0);
  uint64_t v39 = type metadata accessor for Date();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39) != 1) {
    float v22 = 0.5;
  }
  sub_10000B070(v38, &qword_1002F8BA0);
  swift_release();
  type metadata accessor for KaraokeView(0);
  uint64_t v40 = v49;
  sub_10010041C((uint64_t)v49 + *(int *)(v50 + 32));
  *uint64_t v40 = v23;
  v40[1] = v22;
  uint64_t v41 = v51;
  sub_10011FD50((uint64_t)v40, v51, (uint64_t (*)(void))type metadata accessor for KaraokeRenderer);
  sub_10000C3A4(v41, (uint64_t)&v9[*(int *)(v48 + 44)], &qword_1002F65E8);
  *(void *)uint64_t v9 = v27;
  *((void *)v9 + 1) = v29;
  unsigned char v9[16] = v32;
  *((void *)v9 + 3) = v46;
  *((void *)v9 + 4) = KeyPath;
  v9[40] = 0;
  sub_10001FC74(v27, v29, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10000B070(v41, &qword_1002F65E8);
  sub_10011FDB8((uint64_t)v40);
  sub_10001FC84(v27, v29, v32);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10001323C((uint64_t)v9, v52, &qword_1002F65A8);
}

float sub_10011D5CC@<S0>(float *a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002F65F8);
  TimelineView.Context.date.getter();
  Date.timeIntervalSince(_:)();
  double v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  float result = v9 / a2;
  *a1 = result;
  return result;
}

unint64_t sub_10011D6E4(void (*a1)(uint64_t *__return_ptr, unsigned char *))
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C3A4(v1, (uint64_t)v10, &qword_1002F8BA0);
  int v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (v11 == 1)
  {
    uint64_t v12 = 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v10, v4);
    a1(&v15, v7);
    if (v2) {
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v12 = v15;
  }
  return v12 | ((unint64_t)(v11 == 1) << 32);
}

BOOL sub_10011D8D0(uint64_t a1)
{
  uint64_t v1 = a1 + *(int *)(type metadata accessor for KaraokeView(0) + 36);
  uint64_t v2 = *(void *)v1;
  char v3 = *(unsigned char *)(v1 + 8);
  j__swift_retain();
  uint64_t v4 = sub_1001008B0(v2, v3);
  j__swift_release();
  if (v4)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10011E3B0(&qword_1002F4748, (void (*)(uint64_t))type metadata accessor for KaraokeProgressMonitor);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
  return v4 == 0;
}

uint64_t sub_10011DA3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a2;
  if (*(void *)(*a2 + 16))
  {
    sub_100007620(&qword_1002F65A0);
    State.wrappedValue.getter();
    uint64_t v5 = *(void *)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    uint64_t v7 = *(void *)(a3 + 48);
    LOBYTE(a3) = *(unsigned char *)(a3 + 56);
    sub_1000247E8(v7, a3);
    double v8 = sub_1001006A8(v7, a3);
    sub_10002485C(v7, a3);
    sub_10011AD10(v8, v5, v6, v3);
  }
  else
  {
    sub_100007620(&qword_1002F65A0);
    State.wrappedValue.getter();
    sub_10011BA34();
  }
  return swift_release();
}

uint64_t sub_10011DB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 32);
  char v4 = *(unsigned char *)(a3 + 40);
  sub_10011EDDC(v3, v4);
  uint64_t v5 = sub_100100494(v3, v4);
  sub_10010182C(v3, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5)
  {
    __chkstk_darwin(result);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10011DBF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AttributedString();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = v7;
  sub_100007620(&qword_1002F65A0);
  State.wrappedValue.getter();
  uint64_t v8 = v15;
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v6;
  uint64_t v13 = v8;
  sub_10011E3B0(&qword_1002F6418, (void (*)(uint64_t))type metadata accessor for KaraokeAnimationModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  return swift_release();
}

float sub_10011DE08()
{
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F4748, (void (*)(uint64_t))type metadata accessor for KaraokeProgressMonitor);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(float *)(v0 + 16);
}

float sub_10011DEA8@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10011E3B0(&qword_1002F4748, (void (*)(uint64_t))type metadata accessor for KaraokeProgressMonitor);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  float result = *(float *)(v3 + 16);
  *a2 = result;
  return result;
}

uint64_t sub_10011DF50()
{
  return swift_release();
}

uint64_t sub_10011E028()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator22KaraokeProgressMonitor___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10011E0C8()
{
  return type metadata accessor for KaraokeProgressMonitor(0);
}

uint64_t type metadata accessor for KaraokeProgressMonitor(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F6340);
}

uint64_t sub_10011E0F0()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10011E190(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_100007620(&qword_1002F65F8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F6600);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t result = v7 - 8;
  if (*(void *)(v9 + 64) == v6)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    a2((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_10011E2C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (!v8) {
      goto LABEL_15;
    }
    return 0;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && v7 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v10 & 1) != 0))
  {
LABEL_15:
    if (*(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48)) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32);
    }
    return 0;
  }
  return result;
}

float sub_10011E398()
{
  float result = *(float *)(v0 + 24);
  *(float *)(*(void *)(v0 + 16) + 16) = result;
  return result;
}

uint64_t sub_10011E3B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011E3F8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10011E430()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10011E470(uint64_t a1)
{
  return sub_10011BF7C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_10011E47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10011E48C()
{
  return swift_release();
}

void sub_10011E494()
{
}

uint64_t sub_10011E4AC()
{
  return sub_10011BBBC(v0);
}

void sub_10011E4C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer);
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__stopAnimationTimer) = v2;
  id v4 = v2;
}

uint64_t sub_10011E510()
{
  return sub_10011A828(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10011E52C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_10011E594()
{
  unint64_t result = qword_1002F6438;
  if (!qword_1002F6438)
  {
    sub_100007928(&qword_1002F6430);
    sub_10011E610();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6438);
  }
  return result;
}

unint64_t sub_10011E610()
{
  unint64_t result = qword_1002F6440;
  if (!qword_1002F6440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6440);
  }
  return result;
}

uint64_t sub_10011E66C()
{
  return sub_10011A4A4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10011E688()
{
  return sub_10011B820(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10011E6B0()
{
}

unint64_t sub_10011E6D0()
{
  unint64_t result = qword_1002F6488;
  if (!qword_1002F6488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6488);
  }
  return result;
}

void sub_10011E724()
{
}

uint64_t sub_10011E74C()
{
  return 8;
}

uint64_t sub_10011E758()
{
  return swift_release();
}

uint64_t sub_10011E760(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10011E770()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_10011E7B8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

double sub_10011E7C4()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21KaraokeAnimationModel__playbackDuration) = result;
  return result;
}

uint64_t destroy for KaraokeTiming()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KaraokeTiming(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for KaraokeTiming(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for KaraokeTiming(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for KaraokeTiming(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KaraokeTiming(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KaraokeTiming()
{
  return &type metadata for KaraokeTiming;
}

unint64_t sub_10011E9EC()
{
  unint64_t result = qword_1002F6498;
  if (!qword_1002F6498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6498);
  }
  return result;
}

unint64_t sub_10011EA40()
{
  unint64_t result = qword_1002F64A0;
  if (!qword_1002F64A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F64A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KaraokeDuration()
{
  return &type metadata for KaraokeDuration;
}

ValueMetadata *type metadata accessor for KaraokeTimingInfo()
{
  return &type metadata for KaraokeTimingInfo;
}

uint64_t sub_10011EAB4()
{
  return sub_10011F9DC(&qword_1002F64B8, &qword_1002F64C0, (void (*)(void))sub_10011EAF0);
}

unint64_t sub_10011EAF0()
{
  unint64_t result = qword_1002F64C8;
  if (!qword_1002F64C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F64C8);
  }
  return result;
}

uint64_t type metadata accessor for KaraokeView(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F6530);
}

uint64_t sub_10011EB7C@<X0>(void *a1@<X8>)
{
  sub_10011EBD0();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

unint64_t sub_10011EBD0()
{
  unint64_t result = qword_1002F64D0;
  if (!qword_1002F64D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F64D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for KaraokeProgress()
{
  return &type metadata for KaraokeProgress;
}

uint64_t sub_10011EC34(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    char v10 = *((unsigned char *)a2 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10011EDDC(v9, v10);
    *(void *)(a1 + 32) = v9;
    *(unsigned char *)(a1 + 40) = v10;
    uint64_t v11 = a2[6];
    LOBYTE(v8) = *((unsigned char *)a2 + 56);
    sub_1000247E8(v11, v8);
    *(void *)(a1 + 48) = v11;
    *(unsigned char *)(a1 + 56) = v8;
    uint64_t v12 = *(int *)(a3 + 32);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 36);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    uint64_t v20 = *v19;
    char v21 = *((unsigned char *)v19 + 8);
    j__swift_retain();
    *(void *)uint64_t v18 = v20;
    *(unsigned char *)(v18 + 8) = v21;
  }
  return a1;
}

uint64_t sub_10011EDDC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_10011EDEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10010182C(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_10002485C(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return j__swift_release();
}

uint64_t sub_10011EED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10011EDDC(v8, v9);
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  LOBYTE(v7) = *(unsigned char *)(a2 + 56);
  sub_1000247E8(v10, v7);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v7;
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = *(int *)(a3 + 36);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  char v19 = *((unsigned char *)v17 + 8);
  j__swift_retain();
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  return a1;
}

uint64_t sub_10011F02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  sub_10011EDDC(v6, v7);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  sub_10010182C(v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  sub_1000247E8(v10, v11);
  uint64_t v12 = *(void *)(a1 + 48);
  char v13 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  sub_10002485C(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_10000B070(a1 + v14, &qword_1002FACB0);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  char v22 = *((unsigned char *)v20 + 8);
  j__swift_retain();
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  j__swift_release();
  return a1;
}

uint64_t sub_10011F1E4(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  long long v7 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  uint64_t v8 = *(int *)(a3 + 32);
  char v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v11 = sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t sub_10011F304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v7;
  sub_10010182C(v8, v9);
  char v10 = *(unsigned char *)(a2 + 56);
  uint64_t v11 = *(void *)(a1 + 48);
  char v12 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v10;
  sub_10002485C(v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 32);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_10000B070(a1 + v13, &qword_1002FACB0);
    uint64_t v16 = sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  j__swift_release();
  return a1;
}

uint64_t sub_10011F488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10011F49C);
}

uint64_t sub_10011F49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F2CB0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10011F550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10011F564);
}

uint64_t sub_10011F564(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F2CB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10011F610()
{
  sub_10011F6F4(319, (unint64_t *)&qword_1002F2D30, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10011F6F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_10011F758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10011F778(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KaraokeView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10011F7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for KaraokeView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10011CF24(a1, v6, a2);
}

uint64_t sub_10011F85C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10011F894(uint64_t a1)
{
  return sub_10011E190(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_10011F89C()
{
  unint64_t result = qword_1002F65B8;
  if (!qword_1002F65B8)
  {
    sub_100007928(&qword_1002F65A8);
    sub_10011F93C();
    sub_100014894(&qword_1002F65E0, &qword_1002F65E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F65B8);
  }
  return result;
}

unint64_t sub_10011F93C()
{
  unint64_t result = qword_1002F65C0;
  if (!qword_1002F65C0)
  {
    sub_100007928(&qword_1002F65C8);
    sub_100014894(&qword_1002F65D0, &qword_1002F65D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F65C0);
  }
  return result;
}

uint64_t sub_10011F9DC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011FA4C()
{
  uint64_t v1 = type metadata accessor for KaraokeView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10010182C(*(void *)(v5 + 32), *(unsigned char *)(v5 + 40));
  sub_10002485C(*(void *)(v5 + 48), *(unsigned char *)(v5 + 56));
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 32);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  j__swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10011FBB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for KaraokeView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10011DA3C(a1, a2, v6);
}

uint64_t sub_10011FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for KaraokeView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10011DB24(a1, a2, v6);
}

uint64_t sub_10011FCB8()
{
  return sub_10011DBF8(*(void *)(v0 + 16));
}

float sub_10011FCD4@<S0>(float *a1@<X8>)
{
  return sub_10011D5CC(a1, *(double *)(v1 + 24));
}

uint64_t sub_10011FCF8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.avoidsOrphans.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10011FD28()
{
  return EnvironmentValues.avoidsOrphans.setter();
}

uint64_t sub_10011FD50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10011FDB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KaraokeRenderer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011FE14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10011FF44()
{
  return sub_10011E510();
}

uint64_t sub_10011FF5C()
{
  return sub_10011E66C();
}

double sub_10011FF74()
{
  return sub_10011E7C4();
}

float sub_10011FF8C()
{
  return sub_10011E398();
}

char *sub_10011FFA4(void *a1)
{
  uint64_t v3 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F6820);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002F6828);
  uint64_t v10 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_textTranslationLocaleSubscription] = 0;
  v1[OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_allowKeyboardLocaleChange] = 1;
  *(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_conversation] = a1;
  uint64_t v13 = (objc_class *)type metadata accessor for KeyboardUpdatingTextViewUIKit();
  v23.receiver = v1;
  v23.super_class = v13;
  id v14 = a1;
  [super initWithFrame:0.0 textContainer:0.0];
  swift_beginAccess();
  uint64_t v16 = (char *)v15;
  sub_100007620((uint64_t *)&unk_1002F6830);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v22 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  sub_100014894((unint64_t *)&unk_1002F6840, &qword_1002F6820);
  sub_100022364();
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v5, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F6850, &qword_1002F6828);
  uint64_t v18 = v21;
  uint64_t v19 = Publisher<>.sink(receiveValue:)();

  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  *(void *)&v16[OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_textTranslationLocaleSubscription] = v19;
  swift_release();
  return v16;
}

void sub_100120378()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong reloadInputViews];
  }
}

uint64_t sub_100120700(id *a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [*a1 primaryLanguage];
  if (!v10)
  {
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v11 = v10;
  v34[3] = v1;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v14 = v13;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    unint64_t v16 = sub_100200F48(45, 0xE100000000000000, v12, v14);
    if (v17)
    {
      uint64_t v24 = Locale.languageCode.getter();
      if (v25)
      {
        if (v12 == v24 && v25 == v14)
        {
          char v15 = 1;
LABEL_30:
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
LABEL_29:
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        goto LABEL_30;
      }
      char v15 = 0;
LABEL_31:
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return v15 & 1;
    }
    unint64_t v18 = v16;
    swift_bridgeObjectRetain();
    v34[1] = v18;
    String.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v19 = static String._fromSubstring(_:)();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = Locale.languageCode.getter();
    if (v23)
    {
      if (v22 == 26746 && v23 == 0xE200000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_16:
        if (v19 == 26746 && v21 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v27 = String.index(_:offsetBy:)();
          sub_1001F51E0(v27, v12, v14);
          swift_bridgeObjectRelease();
          uint64_t v28 = static String._fromSubstring(_:)();
          uint64_t v30 = v29;
          swift_bridgeObjectRelease();
          if (Locale.isTraditionalChinese()())
          {
            if (v28 != 1953390920 || v30 != 0xE400000000000000)
            {
LABEL_36:
              char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              goto LABEL_37;
            }
          }
          else if (v28 != 1936613704 || v30 != 0xE400000000000000)
          {
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
          char v15 = 1;
LABEL_37:
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return v15 & 1;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = Locale.languageCode.getter();
    if (v32)
    {
      if (v19 == v31 && v32 == v21)
      {
        char v15 = 1;
        goto LABEL_30;
      }
      goto LABEL_29;
    }
    char v15 = 0;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F4110);
  char v15 = 0;
  return v15 & 1;
}

uint64_t sub_100120C48()
{
  return swift_release();
}

id sub_100120C88(uint64_t a1)
{
  return sub_100122158(a1, type metadata accessor for KeyboardUpdatingTextViewUIKit);
}

uint64_t type metadata accessor for KeyboardUpdatingTextViewUIKit()
{
  return self;
}

uint64_t sub_100120D10()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  if (*v0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
      id v10 = [self mainBundle];
      v19._object = (void *)0xE000000000000000;
      v11._uint64_t countAndFlagsBits = 0x545F4F545F504154;
      v11._object = (void *)0xEB00000000455059;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      v19._uint64_t countAndFlagsBits = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v19)._countAndFlagsBits;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
      id v14 = [self mainBundle];
      v15._uint64_t countAndFlagsBits = 0x545F4F545F504154;
      v15._object = (void *)0xEB00000000455059;
      v16._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v16._object = (void *)0xEB00000000656C62;
      uint64_t countAndFlagsBits = Locale.ltLocalizedAppString(_:table:bundle:)(v15, v16, (NSBundle)v14)._countAndFlagsBits;

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return countAndFlagsBits;
  }
  else
  {
    type metadata accessor for ConversationManager();
    sub_1001235A8((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100121028()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  if (*v0)
  {
    id v3 = objc_allocWithZone((Class)type metadata accessor for KeyboardUpdatingTextViewUIKit());
    uint64_t v4 = sub_10011FFA4(v2);
    sub_100120D10();
    id v5 = sub_1001E74EC();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setText:v6];

    [v4 setFont:*(void **)((char *)v1 + *(int *)(type metadata accessor for KeyboardUpdatingTextView(0) + 28))];
    uint64_t v7 = self;
    uint64_t v8 = v4;
    id v9 = [v7 clearColor];
    [v8 setBackgroundColor:v9];

    id v10 = v8;
    sub_100007620((uint64_t *)&unk_1002F6810);
    UIViewRepresentableContext.coordinator.getter();
    [v10 setDelegate:v15];

    Swift::String v11 = v10;
    UIViewRepresentableContext.coordinator.getter();
    [v11 setTextDropDelegate:v15];

    [v11 setReturnKeyType:0];
    [v11 setForceDisableDictation:1];
    [v11 setShowsVerticalScrollIndicator:0];
    [v11 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
    [v11 setAdjustsFontForContentSizeCategory:1];
    UIViewRepresentableContext.coordinator.getter();
    Swift::String v12 = *(void **)&v15[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextViewUIKit];
    *(void *)&v15[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextViewUIKit] = v11;
    unint64_t v13 = v11;

    return (uint64_t)v13;
  }
  else
  {
    type metadata accessor for ConversationManager();
    sub_1001235A8((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

id sub_1001212CC(void *a1)
{
  type metadata accessor for KeyboardUpdatingTextViewUIKit();
  if (swift_dynamicCastClass())
  {
    id v2 = a1;
    sub_100120D10();
    id v3 = sub_1001E74EC();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v4];
  }
  type metadata accessor for KeyboardUpdatingTextView(0);
  sub_100007620(&qword_1002FAF70);
  id result = (id)Binding.wrappedValue.getter();
  if (v6 == 1) {
    return [a1 becomeFirstResponder];
  }
  return result;
}

id sub_1001213E0(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextViewUIKit] = 0;
  v1[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_isReturnKeyChangeReloadInputViews] = 0;
  id v3 = (uint64_t *)&v1[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator__horizontalSizeClass];
  *id v3 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  sub_100123408(a1, (uint64_t)&v1[OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextView]);
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for KeyboardUpdatingTextView.Coordinator(0);
  id v4 = [super init];
  id v5 = self;
  id v6 = v4;
  id v7 = [v5 defaultCenter];
  [v7 addObserver:v6 selector:"preferredContentSizeChanged:" name:UIContentSizeCategoryDidChangeNotification object:0];

  sub_10012354C(a1);
  return v6;
}

uint64_t sub_100121504(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a4 == 10 && a5 == 0xE100000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    type metadata accessor for KeyboardUpdatingTextViewUIKit();
    uint64_t v9 = swift_dynamicCastClass();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = v5 + OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextView;
      Swift::String v12 = *(void (**)(uint64_t))(v11
                                           + *(int *)(type metadata accessor for KeyboardUpdatingTextView(0) + 36));
      id v13 = a1;
      v12(v10);
    }
    return 0;
  }
  id v14 = [a1 text];
  if (v14)
  {
    Swift::String v15 = v14;
    unint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;
  }
  else
  {
    unint64_t v16 = 0;
    unint64_t v18 = 0xE000000000000000;
  }
  unint64_t v19 = Range<>.init(_:in:)();
  if (v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v22 = sub_100121740(v19, v20, a4, a5, v16, v18);
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v25 && (v22 || v24 != 0xE000000000000000))
  {
    int v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id v28 = (id)(~v29 & 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    id v28 = 0;
  }
  if (v28 == [a1 returnKeyType]) {
    return 1;
  }
  [a1 setReturnKeyType:v28];
  type metadata accessor for KeyboardUpdatingTextViewUIKit();
  uint64_t v30 = swift_dynamicCastClass();
  uint64_t v26 = 1;
  if (v30)
  {
    uint64_t v31 = (void *)v30;
    uint64_t v32 = OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_allowKeyboardLocaleChange;
    *(unsigned char *)(v30 + OBJC_IVAR____TtC17SequoiaTranslator29KeyboardUpdatingTextViewUIKit_allowKeyboardLocaleChange) = 0;
    id v33 = a1;
    [v31 reloadInputViews];
    *((unsigned char *)v31 + v32) = 1;
  }
  return v26;
}

Swift::Int sub_100121740(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  Substring.init<A>(_:)();
  uint64_t v15 = v14;
  Swift::Int result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    Swift::Int result = sub_1002034DC(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    Swift::Int result = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    Swift::Int v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unsigned __int16 v33 = v20;
    Swift::Int v34 = v22;
    Swift::Int result = sub_1002034DC(v33, a5, a6);
    Swift::Int v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unsigned __int16 v35 = v26;
    Swift::Int v36 = v22;
    Swift::Int result = sub_1002034DC(v35, a5, a6);
    Swift::Int v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    Swift::Int v37 = v22;
    uint64_t v38 = String.UTF8View._foreignDistance(from:to:)();
    Swift::Int v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        Swift::Int result = HIBYTE(a4) & 0xF;
        Swift::Int v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        Swift::Int result = v40 & 0xFFFFFFFFFFFFLL;
        Swift::Int v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    Swift::Int v39 = v22;
    Swift::Int result = String.UTF8View._foreignCount()();
    Swift::Int v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      Swift::Int result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        String.reserveCapacity(_:)(result);
LABEL_25:
        String.subscript.getter();
        sub_1001238E4();
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        String.append<A>(contentsOf:)();
        sub_1001F51E0(a2, a5, a6);
        String.append<A>(contentsOf:)();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void sub_100121D9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F1068);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1058);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v1
                 + OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextViewUIKit);
  if (v12)
  {
    sub_10000C3A4(v1 + OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator__horizontalSizeClass, (uint64_t)v4, &qword_1002F1068);
    id v13 = v12;
    sub_100100194((uint64_t)v7);
    sub_10000B070((uint64_t)v4, &qword_1002F1068);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v8);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    }
    id v14 = sub_10023A5B4((uint64_t)v11, 0);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    [v13 setFont:v14];

    uint64_t v15 = v1 + OBJC_IVAR____TtCV17SequoiaTranslator24KeyboardUpdatingTextView11Coordinator_keyboardUpdatingTextView;
    uint64_t v16 = type metadata accessor for KeyboardUpdatingTextView(0);
    (*(void (**)(id))(v15 + *(int *)(v16 + 32)))(v13);
  }
}

id sub_10012213C()
{
  return sub_100122158(0, (uint64_t (*)(void))type metadata accessor for KeyboardUpdatingTextView.Coordinator);
}

id sub_100122158(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_1001221E8()
{
  return type metadata accessor for KeyboardUpdatingTextView.Coordinator(0);
}

uint64_t type metadata accessor for KeyboardUpdatingTextView.Coordinator(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F6740);
}

void sub_100122210()
{
  type metadata accessor for KeyboardUpdatingTextView(319);
  if (v0 <= 0x3F)
  {
    sub_1000542E0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for KeyboardUpdatingTextView(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F67B8);
}

char *sub_100122310(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  objc_super v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    id v7 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char **)((char *)a2 + v8);
    uint64_t v11 = v4;
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
    }
    else
    {
      *(void *)uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[6];
    uint64_t v16 = a3[7];
    uint64_t v17 = &v7[v15];
    uint64_t v18 = (uint64_t)a2 + v15;
    uint64_t v19 = *(void *)(v18 + 8);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = *(unsigned char *)(v18 + 16);
    unint64_t v20 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = &v7[v21];
    unint64_t v24 = (char **)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *(void *)uint64_t v23 = *v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = &v7[v22];
    uint64_t v27 = (char **)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *(void *)uint64_t v26 = *v27;
    *((void *)v26 + 1) = v28;
    swift_retain();
    swift_retain();
    id v29 = v20;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_100122550(id *a1, uint64_t a2)
{
  objc_super v4 = (char *)a1 + *(int *)(a2 + 20);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

void *sub_100122698(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  id v11 = v6;
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      uint64_t v14 = sub_100007620(&qword_1002F1058);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v9, v10, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = a2 + v15;
  uint64_t v19 = *(void *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  v17[16] = *(unsigned char *)(v18 + 16);
  unint64_t v20 = *(void **)(a2 + v16);
  *(void *)((char *)a1 + v16) = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v21);
  unint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)((char *)a1 + v22);
  uint64_t v27 = (void *)(a2 + v22);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_retain();
  id v29 = v20;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10012288C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (void *)(a2 + v9);
    sub_10000B070(a1 + v9, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_retain();
  swift_release();
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v17 + 16);
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)(a2 + v18);
  unint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  unint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100122AE4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = sub_100007620(&qword_1002F1058);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  long long v17 = *(_OWORD *)v16;
  v15[16] = v16[16];
  *(_OWORD *)uint64_t v15 = v17;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  return a1;
}

void **sub_100122CAC(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10000B070((uint64_t)a1 + v7, (uint64_t *)&unk_1002F5770);
    uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_100007620(&qword_1002F1058);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(void **)((char *)a1 + v14) = *(void **)((char *)a2 + v14);
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void **)((char *)a1 + v17);
  *(void **)((char *)a1 + v17) = *(void **)((char *)a2 + v17);

  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t sub_100122EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100122EF0);
}

uint64_t sub_100122EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1068);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100122FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100122FD0);
}

uint64_t sub_100122FD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F1068);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

void sub_100123098()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_100123168@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100123408(v2, (uint64_t)v5);
  id v6 = objc_allocWithZone((Class)type metadata accessor for KeyboardUpdatingTextView.Coordinator(0));
  id result = sub_1001213E0((uint64_t)v5);
  *a2 = result;
  return result;
}

uint64_t sub_1001231FC()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_100123240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001235A8(&qword_1002F6858, (void (*)(uint64_t))type metadata accessor for KeyboardUpdatingTextView);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001232D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001235A8(&qword_1002F6858, (void (*)(uint64_t))type metadata accessor for KeyboardUpdatingTextView);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100123368()
{
}

uint64_t sub_1001233C0()
{
  return sub_1001235A8((unint64_t *)&unk_1002F6800, (void (*)(uint64_t))type metadata accessor for KeyboardUpdatingTextView);
}

uint64_t sub_100123408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KeyboardUpdatingTextView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012346C()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_100123490()
{
  return EnvironmentValues.horizontalSizeClass.getter();
}

uint64_t sub_1001234B4(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F1058);
  __chkstk_darwin(v2 - 8);
  sub_10000C3A4(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1002F1058);
  return EnvironmentValues.horizontalSizeClass.setter();
}

uint64_t sub_10012354C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KeyboardUpdatingTextView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001235A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001235F0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100123670(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10000C3A4(a1, (uint64_t)&v13 - v8, (uint64_t *)&unk_1002F4110);
  uint64_t v10 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000C3A4((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1002F4110);
  id v11 = v10;
  static Published.subscript.setter();
  return sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F4110);
}

uint64_t sub_100123780()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001237B8()
{
}

void *sub_1001237C0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v10 = v5;
      char v8 = sub_100120700(&v10);
      if (v1)
      {
        swift_bridgeObjectRelease();

        return v6;
      }
      if (v8)
      {
        swift_bridgeObjectRelease();
        return v6;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_1001238E4()
{
  unint64_t result = qword_1002F6860;
  if (!qword_1002F6860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6860);
  }
  return result;
}

void *sub_100123948(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    id v10 = a2 + 5;
    uint64_t v9 = a2[5];
    swift_retain();
    swift_retain();
    swift_retain();
    if (v9)
    {
      uint64_t v11 = a2[6];
      v4[5] = v9;
      v4[6] = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v4 + 5) = *v10;
    }
    uint64_t v13 = a2[8];
    v4[7] = a2[7];
    v4[8] = v13;
    uint64_t v14 = a2[10];
    v4[9] = a2[9];
    v4[10] = v14;
    uint64_t v15 = *(int *)(a3 + 36);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = type metadata accessor for Locale();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    *((unsigned char *)v4 + *(int *)(a3 + 40)) = *((unsigned char *)a2 + *(int *)(a3 + 40));
  }
  return v4;
}

uint64_t sub_100123AB8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 40)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100123B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v9 = (_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v9;
  }
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Locale();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_100123C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 36);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_100123E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_100123EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 48) = v10;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v9;
  swift_release();
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 36);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(unsigned char *)(a1 + *(int *)(a3 + 40)) = *(unsigned char *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_100124020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100124034);
}

uint64_t sub_100124034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Locale();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1001240E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001240F8);
}

uint64_t sub_1001240F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LabeledExpandingTextView()
{
  uint64_t result = qword_1002F68D8;
  if (!qword_1002F68D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001241EC()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001242AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001242C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  CGFloat v93 = a2;
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  __chkstk_darwin(v3);
  uint64_t v90 = &v71[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = type metadata accessor for RedactionReasons();
  uint64_t v86 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v85 = &v71[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for ExpandingLineLimitedTextView();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100007620(&qword_1002F6940);
  __chkstk_darwin(v9);
  uint64_t v11 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100007620(&qword_1002F6948);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  __chkstk_darwin(v12);
  uint64_t v76 = &v71[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = sub_100007620(&qword_1002F6950);
  __chkstk_darwin(v73);
  uint64_t v75 = &v71[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = sub_100007620(&qword_1002F6958);
  __chkstk_darwin(v74);
  uint64_t v87 = &v71[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_100007620(&qword_1002F6960);
  uint64_t v16 = __chkstk_darwin(v77);
  uint64_t v89 = &v71[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  char v83 = &v71[-v19];
  __chkstk_darwin(v18);
  uint64_t v88 = &v71[-v20];
  uint64_t v21 = a1[8];
  uint64_t v94 = (void *)a1[7];
  uint64_t v95 = v21;
  sub_10000C350();
  swift_bridgeObjectRetain();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v79 = Text.font(_:)();
  uint64_t v78 = v27;
  int v72 = v28;
  uint64_t v80 = v29;
  swift_release();
  sub_10001FC84(v22, v24, v26);
  swift_bridgeObjectRelease();
  uint64_t v30 = a1[9];
  uint64_t v31 = a1[10];
  uint64_t v32 = a1[5];
  uint64_t v33 = a1[6];
  swift_bridgeObjectRetain();
  sub_100019614(v32);
  sub_1000D5FF8(v30, v31, v32, v33, (uint64_t)v8);
  static Font.body.getter();
  static Font.Weight.bold.getter();
  uint64_t v34 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000D6C4C((uint64_t)v8, (uint64_t)v11);
  Swift::Int v36 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *Swift::Int v36 = KeyPath;
  v36[1] = v34;
  sub_100124C64((uint64_t)v8);
  uint64_t v37 = *(int *)(type metadata accessor for LabeledExpandingTextView() + 40);
  if (*((unsigned char *)a1 + v37) == 1)
  {
    uint64_t v38 = v85;
    static RedactionReasons.placeholder.getter();
    uint64_t v39 = v84;
  }
  else
  {
    uint64_t v94 = _swiftEmptyArrayStorage;
    sub_100124D90(&qword_1002F6968, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
    sub_100007620(&qword_1002F6970);
    sub_100014894(&qword_1002F6978, &qword_1002F6970);
    uint64_t v40 = v84;
    uint64_t v38 = v85;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v39 = v40;
  }
  sub_100124CC0();
  uint64_t v41 = v76;
  View.redacted(reason:)();
  (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v38, v39);
  sub_10000B070((uint64_t)v11, &qword_1002F6940);
  int v42 = *((unsigned __int8 *)a1 + v37);
  uint64_t v44 = v81;
  uint64_t v43 = v82;
  uint64_t v45 = (uint64_t)v75;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 16))(v75, v41, v82);
  double v46 = 0.4;
  if (!v42) {
    double v46 = 0.0;
  }
  *(double *)(v45 + *(int *)(v73 + 36)) = v46;
  if (v42) {
    double v47 = 1.4;
  }
  else {
    double v47 = 1.0;
  }
  (*(void (**)(unsigned char *, uint64_t))(v44 + 8))(v41, v43);
  static UnitPoint.leading.getter();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v87;
  sub_10000C3A4(v45, (uint64_t)v87, &qword_1002F6950);
  uint64_t v53 = (double *)&v52[*(int *)(v74 + 36)];
  *uint64_t v53 = v47;
  v53[1] = v47;
  *((void *)v53 + 2) = v49;
  *((void *)v53 + 3) = v51;
  sub_10000B070(v45, &qword_1002F6950);
  uint64_t v54 = swift_getKeyPath();
  Swift::Bool v55 = Locale.isRTL()();
  uint64_t v57 = v90;
  uint64_t v56 = v91;
  uint64_t v58 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if (!v55) {
    uint64_t v58 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v59 = v92;
  (*(void (**)(unsigned char *, void, uint64_t))(v91 + 104))(v90, *v58, v92);
  char v60 = v72 & 1;
  uint64_t v61 = (uint64_t)v83;
  uint64_t v62 = (uint64_t *)&v83[*(int *)(v77 + 36)];
  uint64_t v63 = sub_100007620(&qword_1002EF468);
  (*(void (**)(char *, unsigned char *, uint64_t))(v56 + 16))((char *)v62 + *(int *)(v63 + 28), v57, v59);
  *uint64_t v62 = v54;
  sub_10000C3A4((uint64_t)v52, v61, &qword_1002F6958);
  (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v57, v59);
  sub_10000B070((uint64_t)v52, &qword_1002F6958);
  uint64_t v64 = v88;
  sub_100124DE0(v61, (uint64_t)v88);
  uint64_t v65 = v89;
  sub_10000C3A4((uint64_t)v64, (uint64_t)v89, &qword_1002F6960);
  uint64_t v66 = v93;
  uint64_t v67 = v79;
  uint64_t v68 = v78;
  uint64_t *v93 = v79;
  v66[1] = v68;
  *((unsigned char *)v66 + 16) = v60;
  v66[3] = v80;
  uint64_t v69 = sub_100007620(&qword_1002F6990);
  sub_10000C3A4((uint64_t)v65, (uint64_t)v66 + *(int *)(v69 + 48), &qword_1002F6960);
  sub_10001FC74(v67, v68, v60);
  swift_bridgeObjectRetain();
  sub_10000B070((uint64_t)v64, &qword_1002F6960);
  sub_10000B070((uint64_t)v65, &qword_1002F6960);
  sub_10001FC84(v67, v68, v60);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100124B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F6928);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0x4000000000000000;
  v6[16] = 0;
  uint64_t v7 = sub_100007620(&qword_1002F6930);
  sub_1001242C8(v2, (uint64_t *)&v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_10000C3A4((uint64_t)v6, a1, &qword_1002F6928);
  uint64_t v16 = a1 + *(int *)(sub_100007620(&qword_1002F6938) + 36);
  *(unsigned char *)uint64_t v16 = (_BYTE)v2;
  *(void *)(v16 + 8) = v9;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = 0;
  return sub_10000B070((uint64_t)v6, &qword_1002F6928);
}

uint64_t sub_100124C64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExpandingLineLimitedTextView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100124CC0()
{
  unint64_t result = qword_1002F6980;
  if (!qword_1002F6980)
  {
    sub_100007928(&qword_1002F6940);
    sub_100124D90(&qword_1002F6988, (void (*)(uint64_t))type metadata accessor for ExpandingLineLimitedTextView);
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6980);
  }
  return result;
}

uint64_t sub_100124D90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100124DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F6960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100124E4C()
{
  unint64_t result = qword_1002F6998;
  if (!qword_1002F6998)
  {
    sub_100007928(&qword_1002F6938);
    sub_100014894(&qword_1002F69A0, &qword_1002F6928);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6998);
  }
  return result;
}

uint64_t sub_100124EEC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
    uint64_t v10 = a2 + 5;
    uint64_t v9 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v11 = a2[6];
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 40) = *v10;
    }
    uint64_t v13 = a3[9];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Locale.Language();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[10];
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    sub_1000247E8(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    *(unsigned char *)(v18 + 8) = v21;
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100125114(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40)) {
    swift_release();
  }
  uint64_t v4 = a1 + a2[9];
  sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Locale.Language();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10002485C(*(void *)(a1 + a2[10]), *(unsigned char *)(a1 + a2[10] + 8));
  uint64_t v6 = a1 + a2[11];
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100125270(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v9 = (_OWORD *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v9;
  }
  uint64_t v11 = a3[9];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for Locale.Language();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)v17;
  char v19 = *(unsigned char *)(v17 + 8);
  sub_1000247E8(*(void *)v17, v19);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = v19;
  uint64_t v20 = a3[11];
  char v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *char v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100125440(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v7 = *(void *)(a2 + 40);
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v7;
      *(void *)(a1 + 48) = v8;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v9;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v10 = a3[9];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10000B070(a1 + v10, (uint64_t *)&unk_1002F5790);
    sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Locale.Language();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_1000247E8(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  sub_10002485C(v19, v20);
  if (a1 != a2)
  {
    uint64_t v21 = a3[11];
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (void *)(a2 + v21);
    sub_10000B070(a1 + v21, &qword_1002FACB0);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    }
    else
    {
      void *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1001256A8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_100007620((uint64_t *)&unk_1002F5790);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for Locale.Language();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  char v18 = (void *)(a1 + v15);
  uint64_t v19 = (const void *)(a2 + v15);
  uint64_t v20 = sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100125870(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  if (v9)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
LABEL_8:
  if (a1 != a2)
  {
    uint64_t v12 = a3[9];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_10000B070(a1 + v12, (uint64_t *)&unk_1002F5790);
    uint64_t v15 = sub_100007620((uint64_t *)&unk_1002F5790);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Locale.Language();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((unsigned char *)v19 + 8);
  uint64_t v21 = *(void *)v18;
  char v22 = *(unsigned char *)(v18 + 8);
  *(void *)uint64_t v18 = v20;
  *(unsigned char *)(v18 + 8) = (_BYTE)v19;
  sub_10002485C(v21, v22);
  if (a1 != a2)
  {
    uint64_t v23 = a3[11];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_10000B070(a1 + v23, &qword_1002FACB0);
    uint64_t v26 = sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100125AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100125AD4);
}

uint64_t sub_100125AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F69A8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F2CB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100125C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100125C1C);
}

uint64_t sub_100125C1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F69A8);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F2CB0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for LabeledTextView()
{
  uint64_t result = qword_1002F6A08;
  if (!qword_1002F6A08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100125D9C()
{
  sub_100125ED0(319, (unint64_t *)&qword_1002F6A18, (void (*)(uint64_t))&type metadata accessor for Locale.Language);
  if (v0 <= 0x3F)
  {
    sub_100125ED0(319, (unint64_t *)&qword_1002F2D30, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100125ED0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100125F24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100125F40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F6A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F6A68);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(v2 + 32);
  if (v10 != 2 && (v10 & 1) != 0) {
    uint64_t v11 = static HorizontalAlignment.trailing.getter();
  }
  else {
    uint64_t v11 = static HorizontalAlignment.leading.getter();
  }
  *(void *)uint64_t v6 = v11;
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v12 = sub_100007620(&qword_1002F6A70);
  sub_1001260D4((void *)v2, (uint64_t *)&v6[*(int *)(v12 + 44)]);
  char v13 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_10000C3A4((uint64_t)v6, (uint64_t)v9, &qword_1002F6A60);
  char v22 = &v9[*(int *)(v7 + 36)];
  char *v22 = v13;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_10000B070((uint64_t)v6, &qword_1002F6A60);
  return sub_10001323C((uint64_t)v9, a1, &qword_1002F6A68);
}

uint64_t sub_1001260D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  uint64_t v56 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F6A78);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100007620(&qword_1002F6A80) - 8;
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100007620(&qword_1002F6A88) - 8;
  __chkstk_darwin(v53);
  uint64_t v52 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F6A90);
  uint64_t v12 = v11 - 8;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v55 = (uint64_t)&v47 - v16;
  uint64_t v48 = a1;
  uint64_t v17 = a1[1];
  uint64_t v60 = *a1;
  uint64_t v61 = v17;
  sub_10000C350();
  swift_bridgeObjectRetain();
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  static Font.footnote.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v23 = Text.font(_:)();
  uint64_t v50 = v24;
  uint64_t v51 = v23;
  uint64_t v49 = v25;
  char v27 = v26;
  swift_release();
  v27 &= 1u;
  sub_10001FC84(v18, v20, v22);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  uint64_t v28 = sub_100007620(&qword_1002F6A98);
  sub_1001265F0((uint64_t)v48, (uint64_t)&v7[*(int *)(v28 + 44)]);
  static Font.body.getter();
  static Font.Weight.bold.getter();
  uint64_t v29 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v7, (uint64_t)v9, &qword_1002F6A78);
  uint64_t v31 = (uint64_t *)&v9[*(int *)(v54 + 44)];
  *uint64_t v31 = KeyPath;
  v31[1] = v29;
  sub_10000B070((uint64_t)v7, &qword_1002F6A78);
  uint64_t v32 = v52;
  sub_10000C3A4((uint64_t)v9, v52, &qword_1002F6A80);
  *(_WORD *)(v32 + *(int *)(v53 + 44)) = 256;
  sub_10000B070((uint64_t)v9, &qword_1002F6A80);
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = v56;
  sub_100126E2C(v56);
  unsigned __int16 v35 = (uint64_t *)&v15[*(int *)(v12 + 44)];
  uint64_t v36 = sub_100007620(&qword_1002EF468);
  uint64_t v38 = v57;
  uint64_t v37 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))((char *)v35 + *(int *)(v36 + 28), v34, v58);
  uint64_t *v35 = v33;
  sub_10000C3A4(v32, (uint64_t)v15, &qword_1002F6A88);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v34, v37);
  sub_10000B070(v32, &qword_1002F6A88);
  uint64_t v39 = v55;
  sub_10001323C((uint64_t)v15, v55, &qword_1002F6A90);
  sub_10000C3A4(v39, (uint64_t)v15, &qword_1002F6A90);
  uint64_t v40 = v59;
  uint64_t v41 = v50;
  uint64_t v42 = v51;
  uint64_t v43 = v49;
  *uint64_t v59 = v51;
  v40[1] = v43;
  *((unsigned char *)v40 + 16) = v27;
  v40[3] = v41;
  v40[4] = (uint64_t)sub_1001265C8;
  v40[5] = 0;
  uint64_t v44 = v40;
  uint64_t v45 = sub_100007620(&qword_1002F6AA0);
  sub_10000C3A4((uint64_t)v15, (uint64_t)v44 + *(int *)(v45 + 48), &qword_1002F6A90);
  sub_10001FC74(v42, v43, v27);
  swift_bridgeObjectRetain();
  sub_10000B070(v39, &qword_1002F6A90);
  sub_10000B070((uint64_t)v15, &qword_1002F6A90);
  sub_10001FC84(v42, v43, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001265C8()
{
  return Transaction.animation.setter();
}

uint64_t sub_1001265F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v73 = type metadata accessor for OpacityTransition();
  uint64_t v71 = *(void *)(v73 - 8);
  uint64_t v3 = __chkstk_darwin(v73);
  uint64_t v70 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  int v72 = (char *)&v62 - v5;
  uint64_t v64 = type metadata accessor for TranslateText();
  uint64_t v6 = __chkstk_darwin(v64);
  uint64_t v8 = (uint64_t *)((char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v66 = (uint64_t)&v62 - v9;
  uint64_t v65 = sub_100007620(&qword_1002F6AA8);
  __chkstk_darwin(v65);
  uint64_t v68 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F6AB0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v67 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v62 - v14;
  uint64_t v15 = sub_100007620(&qword_1002F6AB8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for ExpandingText();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  char v22 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100007620(&qword_1002F6AC0);
  uint64_t v23 = __chkstk_darwin(v75);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v27 = (char *)&v62 - v26;
  uint64_t v28 = sub_100007620(&qword_1002F6AC8);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v77 = (uint64_t)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v76 = (char *)&v62 - v31;
  int v32 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v74 = *(void *)(a1 + 16);
  uint64_t v33 = a1;
  uint64_t v34 = *(void *)(a1 + 24);
  if (v32 == 1)
  {
    char v79 = 0;
    swift_bridgeObjectRetain();
    static Binding.constant(_:)();
    uint64_t v71 = v80;
    uint64_t v73 = v11;
    uint64_t v35 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v20, 1, 1, v35);
    int v72 = (char *)v15;
    sub_100019614(*(void *)(v33 + 40));
    ExpandingText.init(_:isExpanded:_:buttonAction:)();
    uint64_t v36 = static Color.gray.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v38 = v62;
    uint64_t v39 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v25, v22, v63);
    uint64_t v40 = (uint64_t *)&v25[*(int *)(v75 + 36)];
    *uint64_t v40 = KeyPath;
    v40[1] = v36;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
    uint64_t v41 = &qword_1002F6AC0;
    sub_10001323C((uint64_t)v25, (uint64_t)v27, &qword_1002F6AC0);
    sub_10000C3A4((uint64_t)v27, (uint64_t)v17, &qword_1002F6AC0);
    swift_storeEnumTagMultiPayload();
    sub_100127238();
    sub_100127308();
    uint64_t v42 = (uint64_t)v76;
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = (uint64_t)v27;
  }
  else
  {
    *uint64_t v8 = swift_getKeyPath();
    sub_100007620((uint64_t *)&unk_1002F5790);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = (uint64_t *)((char *)v8 + *(int *)(v64 + 20));
    void *v44 = v74;
    v44[1] = v34;
    uint64_t v45 = v66;
    sub_100127178((uint64_t)v8, v66);
    uint64_t v46 = v33 + *(int *)(type metadata accessor for LabeledTextView() + 40);
    uint64_t v47 = *(void *)v46;
    char v48 = *(unsigned char *)(v46 + 8);
    swift_bridgeObjectRetain();
    sub_1000247E8(v47, v48);
    char v49 = sub_1000FFC98(v47, v48);
    sub_10002485C(v47, v48);
    if (v49) {
      double v50 = 1.0;
    }
    else {
      double v50 = 0.65;
    }
    uint64_t v51 = v68;
    sub_10001FE80(v45, v68);
    *(double *)(v51 + *(int *)(v65 + 36)) = v50;
    sub_1001271DC(v45);
    uint64_t v52 = v72;
    OpacityTransition.init()();
    uint64_t v53 = v71;
    uint64_t v54 = v73;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, v52, v73);
    sub_100127454(qword_1002F3BC0, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
    uint64_t v55 = AnyTransition.init<A>(_:)();
    uint64_t v56 = v67;
    sub_10000C3A4(v51, v67, &qword_1002F6AA8);
    *(void *)(v56 + *(int *)(v11 + 36)) = v55;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
    sub_10000B070(v51, &qword_1002F6AA8);
    uint64_t v41 = &qword_1002F6AB0;
    uint64_t v57 = v69;
    sub_10001323C(v56, v69, &qword_1002F6AB0);
    sub_10000C3A4(v57, (uint64_t)v17, &qword_1002F6AB0);
    swift_storeEnumTagMultiPayload();
    sub_100127238();
    sub_100127308();
    uint64_t v42 = (uint64_t)v76;
    _ConditionalContent<>.init(storage:)();
    uint64_t v43 = v57;
  }
  sub_10000B070(v43, v41);
  uint64_t v58 = v77;
  sub_10000C3A4(v42, v77, &qword_1002F6AC8);
  uint64_t v59 = v78;
  sub_10000C3A4(v58, v78, &qword_1002F6AC8);
  uint64_t v60 = v59 + *(int *)(sub_100007620(&qword_1002F6AF0) + 48);
  *(void *)uint64_t v60 = 0;
  *(unsigned char *)(v60 + 8) = 1;
  sub_10000B070(v42, &qword_1002F6AC8);
  return sub_10000B070(v58, &qword_1002F6AC8);
}

uint64_t sub_100126E2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = type metadata accessor for Locale.Language();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LayoutDirection();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - v14;
  int v16 = *(unsigned __int8 *)(v1 + 32);
  if (v16 == 2)
  {
    type metadata accessor for LabeledTextView();
    sub_100100ABC((uint64_t)v5);
    char v17 = Locale.Language.isRTL.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    if (v17) {
      uint64_t v18 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
    }
    else {
      uint64_t v18 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v7 + 104))(v23, *v18, v6);
  }
  else
  {
    type metadata accessor for LabeledTextView();
    if (v16)
    {
      sub_10010041C((uint64_t)v15);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v15, v6);
      int v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
      if (v20 == enum case for LayoutDirection.leftToRight(_:))
      {
        (*(void (**)(char *, void, uint64_t))(v7 + 104))(v13, enum case for LayoutDirection.rightToLeft(_:), v6);
      }
      else
      {
        uint64_t v21 = *(void (**)(void))(v7 + 104);
        if (v20 == enum case for LayoutDirection.rightToLeft(_:))
        {
          ((void (*)(char *, void, uint64_t))v21)(v13, enum case for LayoutDirection.leftToRight(_:), v6);
        }
        else
        {
          v21(v13);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
        }
      }
      (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v23, v13, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    }
    else
    {
      return sub_10010041C(v23);
    }
  }
}

uint64_t sub_100127178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001271DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TranslateText();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100127238()
{
  unint64_t result = qword_1002F6AD0;
  if (!qword_1002F6AD0)
  {
    sub_100007928(&qword_1002F6AC0);
    sub_100127454(&qword_1002F6AD8, (void (*)(uint64_t))&type metadata accessor for ExpandingText);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6AD0);
  }
  return result;
}

unint64_t sub_100127308()
{
  unint64_t result = qword_1002F6AE0;
  if (!qword_1002F6AE0)
  {
    sub_100007928(&qword_1002F6AB0);
    sub_1001273A8();
    sub_100014894(&qword_1002F3BB0, &qword_1002F3BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6AE0);
  }
  return result;
}

unint64_t sub_1001273A8()
{
  unint64_t result = qword_1002F6AE8;
  if (!qword_1002F6AE8)
  {
    sub_100007928(&qword_1002F6AA8);
    sub_100127454(&qword_1002F4730, (void (*)(uint64_t))type metadata accessor for TranslateText);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6AE8);
  }
  return result;
}

uint64_t sub_100127454(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LabeledTextView.Alignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100127570);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabeledTextView.Alignment()
{
  return &type metadata for LabeledTextView.Alignment;
}

unint64_t sub_1001275AC()
{
  unint64_t result = qword_1002F6AF8;
  if (!qword_1002F6AF8)
  {
    sub_100007928(&qword_1002F6A68);
    sub_100014894(&qword_1002F6B00, &qword_1002F6A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6AF8);
  }
  return result;
}

unint64_t sub_100127650()
{
  unint64_t result = qword_1002F6B08;
  if (!qword_1002F6B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F6B08);
  }
  return result;
}

id sub_1001276D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LandscapeErrorModel();
  return [super dealloc];
}

uint64_t sub_1001277C8()
{
  return type metadata accessor for LandscapeErrorModel();
}

uint64_t type metadata accessor for LandscapeErrorModel()
{
  uint64_t result = qword_1002F6B50;
  if (!qword_1002F6B50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10012781C()
{
  sub_1000AFBD4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001278D0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LandscapeErrorModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

char *sub_100127910()
{
  unint64_t v0 = (char *)[objc_allocWithZone((Class)type metadata accessor for LanguageAwareTextView()) init];
  sub_1001279E0(v0);
  uint64_t v1 = v0;
  sub_100007620(&qword_1002F6C78);
  UIViewRepresentableContext.coordinator.getter();
  [v1 setDelegate:v4];

  objc_super v2 = v1;
  UIViewRepresentableContext.coordinator.getter();
  [v2 setTextDropDelegate:v4];

  return v2;
}

id sub_1001279E0(char *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - v7;
  id v9 = [a1 text];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = *v2;
  uint64_t v14 = v2[1];
  uint64_t v15 = v2[2];
  uint64_t v16 = v2[3];
  uint64_t v41 = *v2;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  sub_100007620(&qword_1002F6C70);
  Binding.wrappedValue.getter();
  if (!v12)
  {
    if (!v40) {
      goto LABEL_16;
    }
    goto LABEL_10;
  }
  if (!v40)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v37 == v39 && v12 == v40)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  LODWORD(v37) = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_16;
  }
LABEL_12:
  uint64_t v41 = v13;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  uint64_t v44 = v16;
  Binding.wrappedValue.getter();
  if (v40)
  {
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  [a1 setText:v17];

LABEL_16:
  uint64_t v18 = v2[5];
  uint64_t v19 = &a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey];
  *(void *)uint64_t v19 = v2[4];
  *((void *)v19 + 1) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10012F9C4();
  int v20 = (int *)type metadata accessor for LanguageAwareEditor(0);
  uint64_t v21 = (char *)v2 + v20[6];
  uint64_t v22 = type metadata accessor for Locale();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v8, v21, v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
  uint64_t v24 = (uint64_t)&a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale];
  swift_beginAccess();
  uint64_t v25 = v38;
  sub_10009A8D8(v24, v38);
  swift_beginAccess();
  sub_10012993C((uint64_t)v8, v24);
  swift_endAccess();
  sub_10012EA54(v25);
  sub_1000CA304((uint64_t)v8);
  sub_1000CA304(v25);
  [a1 setFont:*(uint64_t *)((char *)v2 + v20[9])];
  [a1 setReturnKeyType:*(uint64_t *)((char *)v2 + v20[10])];
  [a1 setTextColor:*(uint64_t *)((char *)v2 + v20[7])];
  uint64_t v26 = *(void **)((char *)v2 + v20[8]);
  char v27 = (void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor];
  swift_beginAccess();
  uint64_t v28 = *v27;
  *char v27 = v26;
  id v29 = v26;

  PlaceholderTextView.updatePlaceholderProperties()();
  uint64_t v30 = (uint64_t *)((char *)v2 + v20[17]);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  uint64_t v33 = (uint64_t *)&a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_willResignFirstResponder];
  uint64_t v34 = *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_willResignFirstResponder];
  *uint64_t v33 = v31;
  v33[1] = v32;
  sub_100019614(v31);
  sub_1000324E4(v34);
  [a1 setEditable:*((unsigned __int8 *)v2 + v20[11])];
  return [a1 setTag:*(uint64_t *)((char *)v2 + v20[18])];
}

uint64_t sub_100127E04(uint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (int *)type metadata accessor for LanguageAwareEditor(0);
  int v13 = *(unsigned __int8 *)(v6 + v12[13]);
  double v14 = *(double *)(v6 + v12[12]);
  type metadata accessor for LanguageAwareTextViewSizeThatFitsCache.Condition();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = a1;
  *(unsigned char *)(v15 + 32) = a2 & 1;
  *(double *)(v15 + 40) = *(double *)&a3;
  char v37 = a4;
  *(unsigned char *)(v15 + 48) = a4 & 1;
  *(void *)(v15 + 56) = a5;
  *(double *)(v15 + 64) = v14;
  *(unsigned char *)(v15 + 72) = 0;
  uint64_t v16 = *(void *)(v6 + v12[19]) + 16;
  swift_beginAccess();
  uint64_t v17 = *(void *)(*(void *)v16 + 16);
  id v18 = a5;
  if (!v17 || (swift_bridgeObjectRetain(), sub_1002038D4(v15), char v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) == 0))
  {
    if (v13)
    {
      uint64_t v28 = sub_1001299E8(a1, v14);
      uint64_t v30 = v29;
      LOBYTE(v13) = v31 & 1;
    }
    else
    {
      double v32 = *(double *)&a1;
      double v33 = 0.0;
      if (a2) {
        double v32 = 0.0;
      }
      if ((v37 & 1) == 0) {
        double v33 = *(double *)&a3;
      }
      [v18 systemLayoutSizeFittingSize:v32, v33];
      if (v14 > v34) {
        double v34 = v14;
      }
      uint64_t v28 = *(void *)&v34;
      uint64_t v30 = v35;
    }
    sub_100130514(v28, v30, v13, v15);
    swift_release();
    return v28;
  }
  if (!*(void *)(*(void *)v16 + 16))
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1002038D4(v15);
  char v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!*(void *)(*(void *)v16 + 16)
    || (swift_bridgeObjectRetain(), sub_1002038D4(v15), char v24 = v23, swift_bridgeObjectRelease(), (v24 & 1) == 0))
  {
    swift_release();
    return 0;
  }
  uint64_t v25 = *(void *)v16;
  if (!*(void *)(*(void *)v16 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1002038D4(v15);
  if (v27)
  {
    uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 24 * v26);
    swift_release_n();
    swift_bridgeObjectRelease();
    return v28;
  }
LABEL_25:
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1001281D4(void *a1)
{
  uint64_t v3 = type metadata accessor for LanguageAwareEditor(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LanguageAwareTextView();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = v1 + OBJC_IVAR____TtCV17SequoiaTranslator19LanguageAwareEditor11Coordinator_languageAwareEditor;
    id v9 = *(void (**)(void *))(v1
                                       + OBJC_IVAR____TtCV17SequoiaTranslator19LanguageAwareEditor11Coordinator_languageAwareEditor
                                       + *(int *)(v3 + 56));
    id v10 = a1;
    if (v9)
    {
      sub_100019614((uint64_t)v9);
      v9(v7);
      sub_1000324E4((uint64_t)v9);
    }
    sub_10012987C(v8, (uint64_t)v5);
    id v11 = [v7 text];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v16 = *((void *)v5 + 1);
    void v17[2] = *(void *)v5;
    void v17[3] = v16;
    long long v18 = *((_OWORD *)v5 + 1);
    v17[0] = v13;
    v17[1] = v15;
    sub_100007620(&qword_1002F6C70);
    Binding.wrappedValue.setter();

    return sub_1001298E0((uint64_t)v5);
  }
  return result;
}

id sub_100128614()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguageAwareEditor.Coordinator(0);
  return [super dealloc];
}

uint64_t sub_10012865C()
{
  return type metadata accessor for LanguageAwareEditor.Coordinator(0);
}

uint64_t type metadata accessor for LanguageAwareEditor.Coordinator(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F6B88);
}

uint64_t sub_100128684()
{
  uint64_t result = type metadata accessor for LanguageAwareEditor(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LanguageAwareEditor(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F6BF0);
}

void *sub_100128734(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    uint64_t v10 = a3[6];
    uint64_t v43 = (char *)a2 + v10;
    uint64_t v44 = (char *)a1 + v10;
    a1[5] = a2[5];
    uint64_t v11 = type metadata accessor for Locale();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v44, v43, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)v7 + v13) = v15;
    uint64_t v16 = *(void **)((char *)a2 + v14);
    *(void *)((char *)v7 + v14) = v16;
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    char v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v7 + v17) = v19;
    *(void *)((char *)v7 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v20 = a3[12];
    *((unsigned char *)v7 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)v7 + v20) = *(void *)((char *)a2 + v20);
    uint64_t v21 = a3[14];
    *((unsigned char *)v7 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    char v22 = (void *)((char *)v7 + v21);
    char v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)((char *)a2 + v21);
    id v25 = v15;
    id v26 = v16;
    id v27 = v19;
    if (v24)
    {
      uint64_t v28 = *((void *)v23 + 1);
      void *v22 = v24;
      v22[1] = v28;
      swift_retain();
    }
    else
    {
      *(_OWORD *)char v22 = *(_OWORD *)v23;
    }
    uint64_t v29 = a3[15];
    uint64_t v30 = (void *)((char *)v7 + v29);
    char v31 = (void *)((char *)a2 + v29);
    if (*v31)
    {
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    }
    uint64_t v33 = a3[16];
    double v34 = (void *)((char *)v7 + v33);
    uint64_t v35 = (void *)((char *)a2 + v33);
    if (*v35)
    {
      uint64_t v36 = v35[1];
      *double v34 = *v35;
      v34[1] = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)double v34 = *(_OWORD *)v35;
    }
    uint64_t v37 = a3[17];
    uint64_t v38 = (void *)((char *)v7 + v37);
    uint64_t v39 = (void *)((char *)a2 + v37);
    if (*v39)
    {
      uint64_t v40 = v39[1];
      *uint64_t v38 = *v39;
      v38[1] = v40;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    }
    uint64_t v41 = a3[19];
    *(void *)((char *)v7 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    *(void *)((char *)v7 + v41) = *(void *)((char *)a2 + v41);
  }
  swift_retain();
  return v7;
}

uint64_t sub_100128974(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  if (*(void *)(a1 + a2[14])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[15])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[16])) {
    swift_release();
  }
  if (*(void *)(a1 + a2[17])) {
    swift_release();
  }

  return swift_release();
}

void *sub_100128A9C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[6];
  uint64_t v42 = (char *)a2 + v9;
  uint64_t v43 = (char *)a1 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v43, v42, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = *(void **)((char *)a2 + v12);
  *(void *)((char *)a1 + v12) = v14;
  uint64_t v15 = *(void **)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = v15;
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v19 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v21 = (void *)((char *)a1 + v20);
  char v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a2 + v20);
  id v24 = v14;
  id v25 = v15;
  id v26 = v18;
  if (v23)
  {
    uint64_t v27 = *((void *)v22 + 1);
    *uint64_t v21 = v23;
    v21[1] = v27;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  }
  uint64_t v28 = a3[15];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  if (*v30)
  {
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v32 = a3[16];
  uint64_t v33 = (void *)((char *)a1 + v32);
  double v34 = (void *)((char *)a2 + v32);
  if (*v34)
  {
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  }
  uint64_t v36 = a3[17];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  if (*v38)
  {
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  }
  uint64_t v40 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v40) = *(void *)((char *)a2 + v40);
  swift_retain();
  return a1;
}

void *sub_100128C8C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  uint64_t v18 = a3[9];
  uint64_t v19 = *(void **)((char *)a2 + v18);
  uint64_t v20 = *(void **)((char *)a1 + v18);
  *(void *)((char *)a1 + v18) = v19;
  id v21 = v19;

  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v22 = a3[14];
  uint64_t v23 = (void *)((char *)a1 + v22);
  id v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a1 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22);
  if (v25)
  {
    if (v26)
    {
      uint64_t v27 = *((void *)v24 + 1);
      *uint64_t v23 = v26;
      v23[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v26)
  {
    uint64_t v28 = *((void *)v24 + 1);
    *uint64_t v23 = v26;
    v23[1] = v28;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_8:
  uint64_t v29 = a3[15];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)((char *)a1 + v29);
  uint64_t v33 = *(void *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *((void *)v31 + 1);
      *uint64_t v30 = v33;
      v30[1] = v34;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *((void *)v31 + 1);
    *uint64_t v30 = v33;
    v30[1] = v35;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_15:
  uint64_t v36 = a3[16];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)((char *)a1 + v36);
  uint64_t v40 = *(void *)((char *)a2 + v36);
  if (v39)
  {
    if (v40)
    {
      uint64_t v41 = *((void *)v38 + 1);
      *uint64_t v37 = v40;
      v37[1] = v41;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *((void *)v38 + 1);
    *uint64_t v37 = v40;
    v37[1] = v42;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_22:
  uint64_t v43 = a3[17];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)((char *)a1 + v43);
  uint64_t v47 = *(void *)((char *)a2 + v43);
  if (!v46)
  {
    if (v47)
    {
      uint64_t v49 = *((void *)v45 + 1);
      void *v44 = v47;
      v44[1] = v49;
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    goto LABEL_29;
  }
  if (!v47)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v48 = *((void *)v45 + 1);
  void *v44 = v47;
  v44[1] = v48;
  swift_retain();
  swift_release();
LABEL_29:
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)a2 + a3[19]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100128F90(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = a3[15];
  uint64_t v20 = (void *)((char *)a1 + v19);
  id v21 = (uint64_t *)((char *)a2 + v19);
  uint64_t v22 = *v21;
  if (*v21)
  {
    uint64_t v23 = v21[1];
    *uint64_t v20 = v22;
    v20[1] = v23;
  }
  else
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  }
  uint64_t v24 = a3[16];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (uint64_t *)((char *)a2 + v24);
  uint64_t v27 = *v26;
  if (*v26)
  {
    uint64_t v28 = v26[1];
    *uint64_t v25 = v27;
    v25[1] = v28;
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  uint64_t v29 = a3[17];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (uint64_t *)((char *)a2 + v29);
  uint64_t v32 = *v31;
  if (*v31)
  {
    uint64_t v33 = v31[1];
    *uint64_t v30 = v32;
    v30[1] = v33;
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  uint64_t v34 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  return a1;
}

void *sub_10012911C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a1 + v12);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);

  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);

  uint64_t v16 = a3[9];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);

  uint64_t v18 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v19 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v20 = a3[14];
  id v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = *(void *)((char *)a1 + v20);
  uint64_t v24 = *(void *)((char *)a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *((void *)v22 + 1);
      *id v21 = v24;
      v21[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *((void *)v22 + 1);
    *id v21 = v24;
    v21[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)id v21 = *(_OWORD *)v22;
LABEL_8:
  uint64_t v27 = a3[15];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)((char *)a1 + v27);
  uint64_t v31 = *(void *)((char *)a2 + v27);
  if (v30)
  {
    if (v31)
    {
      uint64_t v32 = *((void *)v29 + 1);
      *uint64_t v28 = v31;
      v28[1] = v32;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v31)
  {
    uint64_t v33 = *((void *)v29 + 1);
    *uint64_t v28 = v31;
    v28[1] = v33;
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
LABEL_15:
  uint64_t v34 = a3[16];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)a1 + v34);
  uint64_t v38 = *(void *)((char *)a2 + v34);
  if (v37)
  {
    if (v38)
    {
      uint64_t v39 = *((void *)v36 + 1);
      void *v35 = v38;
      v35[1] = v39;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v38)
  {
    uint64_t v40 = *((void *)v36 + 1);
    void *v35 = v38;
    v35[1] = v40;
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_22:
  uint64_t v41 = a3[17];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = *(void *)((char *)a1 + v41);
  uint64_t v45 = *(void *)((char *)a2 + v41);
  if (!v44)
  {
    if (v45)
    {
      uint64_t v47 = *((void *)v43 + 1);
      *uint64_t v42 = v45;
      v42[1] = v47;
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    goto LABEL_29;
  }
  if (!v45)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v46 = *((void *)v43 + 1);
  *uint64_t v42 = v45;
  v42[1] = v46;
  swift_release();
LABEL_29:
  uint64_t v48 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v48) = *(void *)((char *)a2 + v48);
  swift_release();
  return a1;
}

uint64_t sub_1001293A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001293B4);
}

uint64_t sub_1001293B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Locale();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100129464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100129478);
}

uint64_t sub_100129478(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Locale();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100129520()
{
  uint64_t result = type metadata accessor for Locale();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10012960C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012987C(v2, (uint64_t)v5);
  uint64_t v6 = (objc_class *)type metadata accessor for LanguageAwareEditor.Coordinator(0);
  id v7 = objc_allocWithZone(v6);
  sub_10012987C((uint64_t)v5, (uint64_t)v7 + OBJC_IVAR____TtCV17SequoiaTranslator19LanguageAwareEditor11Coordinator_languageAwareEditor);
  v10.receiver = v7;
  v10.super_class = v6;
  [super init];
  uint64_t result = sub_1001298E0((uint64_t)v5);
  *a2 = v8;
  return result;
}

uint64_t sub_1001296D0(uint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  return sub_100127E04(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_100129704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001299A4((unint64_t *)&unk_1002F6C80);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100129784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1001299A4((unint64_t *)&unk_1002F6C80);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100129804()
{
}

uint64_t sub_100129848()
{
  return sub_1001299A4((unint64_t *)&unk_1002F6C60);
}

uint64_t sub_10012987C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageAwareEditor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001298E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguageAwareEditor(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001299A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LanguageAwareEditor(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1001299EC(unint64_t a1, char a2, uint64_t a3, char a4, id a5, double a6)
{
  int v9 = a2 & 1;
  double v10 = INFINITY;
  if (a2) {
    double v11 = INFINITY;
  }
  else {
    double v11 = *(double *)&a1;
  }
  if ((a4 & 1) == 0) {
    double v10 = *(double *)&a3;
  }
  [a5 systemLayoutSizeFittingSize:v11 v10];
  if (!v9)
  {
    uint64_t v13 = (a1 >> 52) & 0x7FF;
    if (v13)
    {
      double v14 = result < *(double *)&a1 ? *(double *)&a1 : result;
      if (v13 != 2047) {
        double result = v14;
      }
    }
  }
  if (result < a6) {
    return a6;
  }
  return result;
}

char *sub_100129AB4(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v19 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v19);
  uint64_t v1 = type metadata accessor for LayoutDirection();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)v18 - v6;
  uint64_t v8 = type metadata accessor for EnvironmentValues();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (char *)[objc_allocWithZone((Class)type metadata accessor for LanguageAwareTextView()) init];
  v18[1] = sub_100007620((uint64_t *)&unk_1002F6DC0);
  UIViewRepresentableContext.environment.getter();
  EnvironmentValues.layoutDirection.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for LayoutDirection.leftToRight(_:), v1);
  static LayoutDirection.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v5, v1);
  v13(v7, v1);
  UIView.traitOverrides.getter();
  UIMutableTraits.layoutDirection.setter();
  UIView.traitOverrides.setter();
  *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightDelegate + 8] = *(void *)(v20 + *(int *)(type metadata accessor for LanguageAwareText(0) + 52) + 8);
  swift_unknownObjectWeakAssign();
  UIViewRepresentableContext.coordinator.getter();
  double v14 = v22;
  *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_languageAwareTextViewDelegate + 8] = &off_1002CF118;
  swift_unknownObjectWeakAssign();

  sub_100129E20(v12);
  [v12 setEditable:0];
  uint64_t v15 = v12;
  UIViewRepresentableContext.coordinator.getter();
  uint64_t v16 = v22;
  [v15 setDelegate:v22];

  return v15;
}

void sub_100129E20(char *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = (int *)type metadata accessor for LanguageAwareText(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  if (*v1) {
    id v14 = *v1;
  }
  else {
    id v14 = [objc_allocWithZone((Class)NSAttributedString) init];
  }
  if (*(unsigned char *)(v2 + v10[8]) == 1)
  {
    uint64_t v15 = *(void *)(v2 + v10[9]);
    id v16 = v13;
    id v17 = sub_10017B8FC(v15);

    id v14 = v17;
  }
  else
  {
    id v18 = v13;
  }
  [a1 setAttributedText:v14];

  [a1 setFont:*(void *)(v2 + v10[7])];
  int v19 = *(unsigned __int8 *)(v2 + v10[20]);
  sub_10012C6D8(v2, (uint64_t)v12);
  if (v19 == 1) {
    char v20 = v12[v10[8]] ^ 1;
  }
  else {
    char v20 = 0;
  }
  sub_10012C73C((uint64_t)v12);
  [a1 setSelectable:v20 & 1];
  uint64_t v21 = *(void *)(v2 + 16);
  uint64_t v22 = &a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey];
  *(void *)uint64_t v22 = *(void *)(v2 + 8);
  *((void *)v22 + 1) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10012F9C4();
  sub_10009A8D8(v2 + v10[6], (uint64_t)v9);
  uint64_t v23 = (uint64_t)&a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale];
  swift_beginAccess();
  sub_10009A8D8(v23, (uint64_t)v7);
  swift_beginAccess();
  sub_10012993C((uint64_t)v9, v23);
  swift_endAccess();
  sub_10012EA54((uint64_t)v7);
  sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F4110);
  sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
  uint64_t v24 = *(void **)(v2 + v10[9]);
  if (v24)
  {
    uint64_t v25 = (void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor];
    swift_beginAccess();
    uint64_t v26 = *v25;
    *uint64_t v25 = v24;
    id v27 = v24;

    PlaceholderTextView.updatePlaceholderProperties()();
  }
  uint64_t v28 = *(void **)(v2 + v10[14]);
  uint64_t v29 = OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor;
  uint64_t v30 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor];
  *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightColor] = v28;
  id v46 = v28;

  uint64_t v31 = &a1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlights];
  swift_beginAccess();
  uint64_t v32 = *(void *)v31;
  uint64_t v33 = *(void *)v31 >> 62;
  uint64_t v47 = v10;
  uint64_t v48 = v2;
  if (v33)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    if (!v34) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v34) {
      goto LABEL_24;
    }
  }
  if (v34 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v35 = 0;
  do
  {
    if ((v32 & 0xC000000000000001) != 0) {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v39 = *(id *)(v32 + 8 * v35 + 32);
    }
    uint64_t v40 = v39;
    uint64_t v37 = *(void **)&a1[v29];
    if (v37)
    {
      uint64_t v36 = *(void **)&a1[v29];
    }
    else
    {
      sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
      uint64_t v36 = (void *)static UIColor.dictionaryHighlightColor.getter();
      uint64_t v37 = 0;
    }
    ++v35;
    id v38 = v37;
    [v40 setBackgroundColor:v36];
  }
  while (v34 != v35);
LABEL_24:
  swift_bridgeObjectRelease_n();

  uint64_t v42 = v47;
  uint64_t v41 = v48;
  a1[OBJC_IVAR____TtC17SequoiaTranslator17HighlightTextView_highlightAddsBlendMode] = *(unsigned char *)(v48 + v47[15]);
  sub_1000FBF48();
  HighlightTextView.setHighlights(toRange:)(*(__C::_NSRange_optional *)(v41 + v42[12]));
  BOOL v43 = sub_10012A858();
  a1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_hasTapGestureRecognizer] = v43;
  if (v43) {
    uint64_t v44 = &selRef_addGestureRecognizer_;
  }
  else {
    uint64_t v44 = &selRef_removeGestureRecognizer_;
  }
  id v45 = sub_10012EDDC();
  [a1 *v44:v45];
}

id sub_10012A304(char *a1)
{
  uint64_t v15 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v15);
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v9 = type metadata accessor for EnvironmentValues();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620((uint64_t *)&unk_1002F6DC0);
  UIViewRepresentableContext.environment.getter();
  EnvironmentValues.layoutDirection.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for LayoutDirection.leftToRight(_:), v2);
  static LayoutDirection.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
  v13(v6, v2);
  v13(v8, v2);
  UIView.traitOverrides.getter();
  UIMutableTraits.layoutDirection.setter();
  UIView.traitOverrides.setter();
  sub_100129E20(a1);
  return [a1 layoutIfNeeded];
}

uint64_t sub_10012A5A0(unint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = (int *)type metadata accessor for LanguageAwareText(0);
  int v13 = *(unsigned __int8 *)(v6 + v12[11]);
  double v14 = *(double *)(v6 + v12[10]);
  type metadata accessor for LanguageAwareTextViewSizeThatFitsCache.Condition();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = a1;
  *(unsigned char *)(v15 + 32) = a2 & 1;
  *(double *)(v15 + 40) = *(double *)&a3;
  char v38 = a4;
  *(unsigned char *)(v15 + 48) = a4 & 1;
  *(void *)(v15 + 56) = a5;
  *(double *)(v15 + 64) = v14;
  *(unsigned char *)(v15 + 72) = 0;
  uint64_t v16 = *(void *)(v6 + v12[22]) + 16;
  swift_beginAccess();
  uint64_t v17 = *(void *)(*(void *)v16 + 16);
  id v18 = a5;
  if (!v17 || (swift_bridgeObjectRetain(), sub_1002038D4(v15), char v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) == 0))
  {
    if (v13)
    {
      sub_1001299EC(a1, a2 & 1, a3, v38 & 1, v18, v14);
      uint64_t v28 = v29;
      uint64_t v31 = v30;
      LOBYTE(v13) = v32 & 1;
    }
    else
    {
      double v33 = *(double *)&a1;
      double v34 = 0.0;
      if (a2) {
        double v33 = 0.0;
      }
      if ((v38 & 1) == 0) {
        double v34 = *(double *)&a3;
      }
      [v18 systemLayoutSizeFittingSize:v33, v34];
      if (v14 > v35) {
        double v35 = v14;
      }
      uint64_t v28 = *(void *)&v35;
      uint64_t v31 = v36;
    }
    sub_100130514(v28, v31, v13, v15);
    swift_release();
    return v28;
  }
  if (!*(void *)(*(void *)v16 + 16))
  {
    __break(1u);
    goto LABEL_23;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1002038D4(v15);
  char v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!*(void *)(*(void *)v16 + 16)
    || (swift_bridgeObjectRetain(), sub_1002038D4(v15), char v24 = v23, swift_bridgeObjectRelease(), (v24 & 1) == 0))
  {
    swift_release();
    return 0;
  }
  uint64_t v25 = *(void *)v16;
  if (!*(void *)(*(void *)v16 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1002038D4(v15);
  if (v27)
  {
    uint64_t v28 = *(void *)(*(void *)(v25 + 56) + 24 * v26);
    swift_release_n();
    swift_bridgeObjectRelease();
    return v28;
  }
LABEL_25:
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

BOOL sub_10012A858()
{
  uint64_t v1 = type metadata accessor for LanguageAwareText(0);
  if (*(id *)((char *)v0 + *(int *)(v1 + 76))) {
    return 1;
  }
  if (!*(id *)((char *)v0 + *(int *)(v1 + 72))) {
    return 0;
  }
  if (!*v0) {
    return 1;
  }
  id v3 = [*v0 string];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  swift_bridgeObjectRelease();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  return v7 == 0;
}

uint64_t sub_10012A9A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F0FA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText;
  uint64_t result = type metadata accessor for LanguageAwareText(0);
  uint64_t v11 = *(void (**)(void, char *))(v9 + *(int *)(result + 84));
  if (v11)
  {
    uint64_t v12 = type metadata accessor for DisambiguationLinkInfo();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a2, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    swift_retain();
    v11(a3 & 1, v8);
    sub_1000324E4((uint64_t)v11);
    return sub_10000B070((uint64_t)v8, &qword_1002F0FA8);
  }
  return result;
}

void sub_10012AB30(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t))
{
  id v10 = a3;
  id v11 = a4;
  swift_unknownObjectRetain();
  id v12 = a1;
  a6(v11, a5);

  swift_unknownObjectRelease();
}

void sub_10012ABD0(uint64_t a1, void *a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText;
  uint64_t v6 = type metadata accessor for LanguageAwareText(0);
  uint64_t v7 = *(void **)(v5 + *(int *)(v6 + 76));
  if (v7)
  {
    char v20 = v7;
    if (sub_1000126F8(a2))
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100011554(v8, (uint64_t)qword_10030EAE0);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v9, v10))
      {
        id v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Successfully handled gesture recognizer with ASRAlternativesBehaviour object", v11, 2u);
        swift_slowDealloc();
      }

LABEL_21:

      return;
    }
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100011554(v12, (uint64_t)qword_10030EAE0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Tap on text view wasn't handled by ASRAlternativesBehaviour object", v15, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v16 = *(void (**)(uint64_t, void *))(v5 + *(int *)(v6 + 72));
  if (!v16)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100011554(v17, (uint64_t)qword_10030EAE0);
    char v20 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v18))
    {
      char v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v18, "There's no handler for emptyTapGestureHandler, so not doing anything with tap gesture recognizer", v19, 2u);
      swift_slowDealloc();
    }
    goto LABEL_21;
  }
  swift_retain();
  v16(a1, a2);

  sub_1000324E4((uint64_t)v16);
}

id sub_10012AF10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguageAwareText.Coordinator(0);
  [super dealloc];
}

uint64_t sub_10012AF58()
{
  return type metadata accessor for LanguageAwareText.Coordinator(0);
}

uint64_t type metadata accessor for LanguageAwareText.Coordinator(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F6CC0);
}

uint64_t sub_10012AF80()
{
  uint64_t result = type metadata accessor for LanguageAwareText(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for LanguageAwareText(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F6D30);
}

char *sub_10012B030(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a3[6];
    __dst = &a1[v9];
    os_log_type_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Locale();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    os_log_type_t v14 = v4;
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_100007620((uint64_t *)&unk_1002F4110);
      memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    os_log_type_t v18 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v18;
    v7[v17] = *((unsigned char *)a2 + v17);
    uint64_t v19 = a3[9];
    uint64_t v20 = a3[10];
    char v21 = *(char **)((char *)a2 + v19);
    *(void *)&v7[v19] = v21;
    *(void *)&v7[v20] = *(char **)((char *)a2 + v20);
    uint64_t v22 = a3[12];
    v7[a3[11]] = *((unsigned char *)a2 + a3[11]);
    char v23 = &v7[v22];
    uint64_t v24 = (uint64_t)a2 + v22;
    *(_OWORD *)char v23 = *(_OWORD *)v24;
    unsigned char v23[16] = *(unsigned char *)(v24 + 16);
    uint64_t v25 = a3[14];
    *(_OWORD *)&v7[a3[13]] = *(_OWORD *)((char *)a2 + a3[13]);
    unint64_t v26 = *(char **)((char *)a2 + v25);
    *(void *)&v7[v25] = v26;
    uint64_t v27 = a3[16];
    v7[a3[15]] = *((unsigned char *)a2 + a3[15]);
    uint64_t v28 = &v7[v27];
    uint64_t v29 = (uint64_t)a2 + v27;
    uint64_t v30 = *(uint64_t *)((char *)a2 + v27);
    id v31 = v18;
    id v32 = v21;
    swift_unknownObjectRetain();
    id v33 = v26;
    if (v30)
    {
      uint64_t v34 = *(void *)(v29 + 8);
      *(void *)uint64_t v28 = v30;
      *((void *)v28 + 1) = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
    uint64_t v35 = a3[17];
    uint64_t v36 = &v7[v35];
    uint64_t v37 = (char **)((char *)a2 + v35);
    if (*v37)
    {
      uint64_t v38 = v37[1];
      *(void *)uint64_t v36 = *v37;
      *((void *)v36 + 1) = v38;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    }
    uint64_t v39 = a3[18];
    uint64_t v40 = &v7[v39];
    uint64_t v41 = (char **)((char *)a2 + v39);
    if (*v41)
    {
      uint64_t v42 = v41[1];
      *(void *)uint64_t v40 = *v41;
      *((void *)v40 + 1) = v42;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    }
    uint64_t v43 = a3[19];
    uint64_t v44 = a3[20];
    id v45 = *(char **)((char *)a2 + v43);
    *(void *)&v7[v43] = v45;
    v7[v44] = *((unsigned char *)a2 + v44);
    uint64_t v46 = a3[21];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = (uint64_t)a2 + v46;
    uint64_t v49 = *(uint64_t *)((char *)a2 + v46);
    id v50 = v45;
    if (v49)
    {
      uint64_t v51 = *(void *)(v48 + 8);
      *(void *)uint64_t v47 = v49;
      *((void *)v47 + 1) = v51;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    }
    *(void *)&v7[a3[22]] = *(char **)((char *)a2 + a3[22]);
  }
  swift_retain();
  return v7;
}

uint64_t sub_10012B324(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_unknownObjectRelease();
  if (*(id *)((char *)a1 + a2[16])) {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[17])) {
    swift_release();
  }
  if (*(id *)((char *)a1 + a2[18])) {
    swift_release();
  }

  if (*(id *)((char *)a1 + a2[21])) {
    swift_release();
  }

  return swift_release();
}

void *sub_10012B498(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  a1[2] = *(void *)(a2 + 16);
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v7;
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_100007620((uint64_t *)&unk_1002F4110);
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  *((unsigned char *)a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = *(void **)(a2 + v18);
  *(void *)((char *)a1 + v18) = v20;
  *(void *)((char *)a1 + v19) = *(void *)(a2 + v19);
  uint64_t v21 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = *(unsigned char *)(v23 + 16);
  uint64_t v24 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v25 = *(void **)(a2 + v24);
  *(void *)((char *)a1 + v24) = v25;
  uint64_t v26 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)(a2 + v26);
  id v30 = v17;
  id v31 = v20;
  swift_unknownObjectRetain();
  id v32 = v25;
  if (v29)
  {
    uint64_t v33 = *(void *)(v28 + 8);
    *uint64_t v27 = v29;
    v27[1] = v33;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  uint64_t v34 = a3[17];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  if (*v36)
  {
    uint64_t v37 = v36[1];
    void *v35 = *v36;
    v35[1] = v37;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  uint64_t v38 = a3[18];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  if (*v40)
  {
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  }
  uint64_t v42 = a3[19];
  uint64_t v43 = a3[20];
  uint64_t v44 = *(void **)(a2 + v42);
  *(void *)((char *)a1 + v42) = v44;
  *((unsigned char *)a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v45 = a3[21];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(a2 + v45);
  id v49 = v44;
  if (v48)
  {
    uint64_t v50 = *(void *)(v47 + 8);
    *uint64_t v46 = v48;
    v46[1] = v50;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  *(void *)((char *)a1 + a3[22]) = *(void *)(a2 + a3[22]);
  swift_retain();
  return a1;
}

uint64_t sub_10012B744(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100007620((uint64_t *)&unk_1002F4110);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)(a2 + v18);
  uint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v22 = a3[9];
  uint64_t v23 = *(void **)(a1 + v22);
  uint64_t v24 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v24;
  id v25 = v24;

  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (long long *)(a2 + v26);
  long long v29 = *v28;
  *(unsigned char *)(v27 + 16) = *((unsigned char *)v28 + 16);
  *(_OWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[13];
  id v31 = (void *)(a1 + v30);
  id v32 = (void *)(a2 + v30);
  uint64_t v33 = v32[1];
  *id v31 = *v32;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v31[1] = v33;
  uint64_t v34 = a3[14];
  uint64_t v35 = *(void **)(a1 + v34);
  uint64_t v36 = *(void **)(a2 + v34);
  *(void *)(a1 + v34) = v36;
  id v37 = v36;

  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v38 = a3[16];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(a1 + v38);
  uint64_t v42 = *(void *)(a2 + v38);
  if (v41)
  {
    if (v42)
    {
      uint64_t v43 = *(void *)(v40 + 8);
      *uint64_t v39 = v42;
      v39[1] = v43;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v42)
  {
    uint64_t v44 = *(void *)(v40 + 8);
    *uint64_t v39 = v42;
    v39[1] = v44;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_14:
  uint64_t v45 = a3[17];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = a2 + v45;
  uint64_t v48 = *(void *)(a1 + v45);
  uint64_t v49 = *(void *)(a2 + v45);
  if (v48)
  {
    if (v49)
    {
      uint64_t v50 = *(void *)(v47 + 8);
      *uint64_t v46 = v49;
      v46[1] = v50;
      swift_retain();
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v49)
  {
    uint64_t v51 = *(void *)(v47 + 8);
    *uint64_t v46 = v49;
    v46[1] = v51;
    swift_retain();
    goto LABEL_21;
  }
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
LABEL_21:
  uint64_t v52 = a3[18];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = a2 + v52;
  uint64_t v55 = *(void *)(a1 + v52);
  uint64_t v56 = *(void *)(a2 + v52);
  if (v55)
  {
    if (v56)
    {
      uint64_t v57 = *(void *)(v54 + 8);
      *uint64_t v53 = v56;
      v53[1] = v57;
      swift_retain();
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v56)
  {
    uint64_t v58 = *(void *)(v54 + 8);
    *uint64_t v53 = v56;
    v53[1] = v58;
    swift_retain();
    goto LABEL_28;
  }
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
LABEL_28:
  uint64_t v59 = a3[19];
  uint64_t v60 = *(void **)(a1 + v59);
  uint64_t v61 = *(void **)(a2 + v59);
  *(void *)(a1 + v59) = v61;
  id v62 = v61;

  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v63 = a3[21];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = a2 + v63;
  uint64_t v66 = *(void *)(a1 + v63);
  uint64_t v67 = *(void *)(a2 + v63);
  if (!v66)
  {
    if (v67)
    {
      uint64_t v69 = *(void *)(v65 + 8);
      *uint64_t v64 = v67;
      v64[1] = v69;
      swift_retain();
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    goto LABEL_35;
  }
  if (!v67)
  {
    swift_release();
    goto LABEL_34;
  }
  uint64_t v68 = *(void *)(v65 + 8);
  *uint64_t v64 = v67;
  v64[1] = v68;
  swift_retain();
  swift_release();
LABEL_35:
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10012BB64(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F4110);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v17 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  if (*v20)
  {
    uint64_t v22 = v20[1];
    void *v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v23 = a3[17];
  uint64_t v24 = (void *)(a1 + v23);
  id v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[18];
  long long v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  if (*v30)
  {
    uint64_t v32 = v30[1];
    void *v29 = v31;
    v29[1] = v32;
  }
  else
  {
    *(_OWORD *)long long v29 = *(_OWORD *)v30;
  }
  uint64_t v33 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[21];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  if (*v36)
  {
    uint64_t v38 = v36[1];
    void *v35 = v37;
    v35[1] = v38;
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  return a1;
}

uint64_t sub_10012BDB8(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = sub_100007620((uint64_t *)&unk_1002F4110);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)((char *)a2 + v17);

  uint64_t v19 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)((char *)a2 + v19);

  uint64_t v21 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(unsigned char *)(a1 + v21) = *((unsigned char *)a2 + v21);
  uint64_t v22 = a3[12];
  uint64_t v23 = a3[13];
  uint64_t v24 = a1 + v22;
  id v25 = (char *)a2 + v22;
  *(unsigned char *)(v24 + 16) = v25[16];
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  uint64_t v26 = a1 + v23;
  uint64_t v27 = *(void *)((char *)a2 + v23 + 8);
  *(void *)(a1 + v23) = *(void *)((char *)a2 + v23);
  swift_unknownObjectRelease();
  *(void *)(v26 + 8) = v27;
  uint64_t v28 = a3[14];
  long long v29 = *(void **)(a1 + v28);
  *(void *)(a1 + v28) = *(void *)((char *)a2 + v28);

  uint64_t v30 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = *(void *)((char *)a2 + v30);
  if (*(void *)(a1 + v30))
  {
    if (v33)
    {
      uint64_t v34 = *((void *)v32 + 1);
      *uint64_t v31 = v33;
      v31[1] = v34;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *((void *)v32 + 1);
    *uint64_t v31 = v33;
    v31[1] = v35;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
LABEL_14:
  uint64_t v36 = a3[17];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)(a1 + v36);
  uint64_t v40 = *(void *)((char *)a2 + v36);
  if (v39)
  {
    if (v40)
    {
      uint64_t v41 = *((void *)v38 + 1);
      *uint64_t v37 = v40;
      v37[1] = v41;
      swift_release();
      goto LABEL_21;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *((void *)v38 + 1);
    *uint64_t v37 = v40;
    v37[1] = v42;
    goto LABEL_21;
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_21:
  uint64_t v43 = a3[18];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)(a1 + v43);
  uint64_t v47 = *(void *)((char *)a2 + v43);
  if (v46)
  {
    if (v47)
    {
      uint64_t v48 = *((void *)v45 + 1);
      void *v44 = v47;
      v44[1] = v48;
      swift_release();
      goto LABEL_28;
    }
    swift_release();
  }
  else if (v47)
  {
    uint64_t v49 = *((void *)v45 + 1);
    void *v44 = v47;
    v44[1] = v49;
    goto LABEL_28;
  }
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
LABEL_28:
  uint64_t v50 = a3[19];
  uint64_t v51 = *(void **)(a1 + v50);
  *(void *)(a1 + v50) = *(void *)((char *)a2 + v50);

  uint64_t v52 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (char *)a2 + v52;
  uint64_t v55 = *(void *)((char *)a2 + v52);
  if (!*(void *)(a1 + v52))
  {
    if (v55)
    {
      uint64_t v57 = *((void *)v54 + 1);
      *uint64_t v53 = v55;
      v53[1] = v57;
      goto LABEL_35;
    }
LABEL_34:
    *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
    goto LABEL_35;
  }
  if (!v55)
  {
    swift_release();
    goto LABEL_34;
  }
  uint64_t v56 = *((void *)v54 + 1);
  *uint64_t v53 = v55;
  v53[1] = v56;
  swift_release();
LABEL_35:
  *(void *)(a1 + a3[22]) = *(void *)((char *)a2 + a3[22]);
  swift_release();
  return a1;
}

uint64_t sub_10012C160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10012C174);
}

uint64_t sub_10012C174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10012C23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10012C250);
}

uint64_t sub_10012C250(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

void sub_10012C314()
{
  sub_1000C9F78();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10012C418@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10012C6D8(v2, (uint64_t)v5);
  uint64_t v6 = (objc_class *)type metadata accessor for LanguageAwareText.Coordinator(0);
  id v7 = objc_allocWithZone(v6);
  sub_10012C6D8((uint64_t)v5, (uint64_t)v7 + OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText);
  v10.receiver = v7;
  v10.super_class = v6;
  id v8 = [super init];
  uint64_t result = sub_10012C73C((uint64_t)v5);
  *a2 = v8;
  return result;
}

uint64_t sub_10012C4DC(unint64_t a1, char a2, uint64_t a3, char a4, void *a5)
{
  return sub_10012A5A0(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_10012C510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C798((unint64_t *)&unk_1002F6DD0, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10012C5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10012C798((unint64_t *)&unk_1002F6DD0, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10012C638()
{
}

uint64_t sub_10012C690()
{
  return sub_10012C798(&qword_1002F1308, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);
}

uint64_t sub_10012C6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageAwareText(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10012C73C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LanguageAwareText(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012C798(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10012C7E0(void *a1, void *a2)
{
  id v113 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F6DF0);
  __chkstk_darwin(v3 - 8);
  double v100 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v104 = *(void *)(v5 - 8);
  uint64_t v105 = v5;
  __chkstk_darwin(v5);
  uint64_t v103 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F0FA8);
  __chkstk_darwin(v7 - 8);
  CGFloat v107 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v108 = *(void *)(v9 - 8);
  uint64_t v109 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v102 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v101 = (char *)&v100 - v13;
  __chkstk_darwin(v12);
  CGFloat v106 = (char *)&v100 - v14;
  uint64_t v15 = type metadata accessor for String.Encoding();
  unint64_t v111 = *(void *)(v15 - 8);
  uint64_t v112 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UITextItem.Content();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v100 - v23;
  id v114 = a2;
  UITextItem.content.getter();
  id v25 = *(uint64_t (**)(char *, uint64_t))(v19 + 88);
  int v26 = v25(v24, v18);
  int v27 = enum case for UITextItem.Content.tag(_:);
  if (v26 != enum case for UITextItem.Content.tag(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
LABEL_15:
    id v49 = v114;
    UITextItem.content.getter();
    if (v25(v22, v18) == v27)
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v22, v18);
      static String.Encoding.utf8.getter();
      uint64_t v50 = (void *)String.data(using:allowLossyConversion:)();
      unint64_t v52 = v51;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v111 + 8))(v17, v112);
      if (v52 >> 60 != 15)
      {
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_10012C798((unint64_t *)&unk_1002FC430, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
        uint64_t v53 = v107;
        uint64_t v54 = v109;
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        uint64_t v65 = v108;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v53, 0, 1, v54);
        uint64_t v66 = v106;
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v106, v53, v54);
        uint64_t v67 = v110 + OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText;
        uint64_t v68 = *(uint64_t (**)(char *, uint64_t))(v67
                                                        + *(int *)(type metadata accessor for LanguageAwareText(0) + 64));
        if (v68)
        {
          swift_retain();
          uint64_t v69 = v103;
          DisambiguationLinkInfo.sentenceUUID.getter();
          uint64_t v70 = DisambiguationLinkInfo.linkIndex.getter();
          uint64_t v71 = (void *)v68(v69, v70);
          sub_1000324E4((uint64_t)v68);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v69, v105);
          if (v71)
          {
            if (qword_1002EE5E8 != -1) {
              swift_once();
            }
            id v114 = v50;
            uint64_t v72 = type metadata accessor for Logger();
            sub_100011554(v72, (uint64_t)qword_10030E9C0);
            uint64_t v73 = v101;
            (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v101, v66, v54);
            id v74 = v71;
            uint64_t v75 = Logger.logObject.getter();
            os_log_type_t v76 = static os_log_type_t.info.getter();
            BOOL v77 = os_log_type_enabled(v75, v76);
            id v113 = (id)v52;
            if (v77)
            {
              uint64_t v78 = swift_slowAlloc();
              uint64_t v112 = swift_slowAlloc();
              uint64_t v116 = v112;
              *(_DWORD *)uint64_t v78 = 134349314;
              id v79 = [v74 children];
              sub_10000B0CC(0, &qword_1002F0008);
              unint64_t v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (v80 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();

                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v81 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRelease();
              uint64_t v115 = v81;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              *(_WORD *)(v78 + 12) = 2082;
              sub_10012C798(&qword_1002F6DF8, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
              uint64_t v82 = v101;
              uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v115 = sub_100202FD4(v83, v84, &v116);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v85 = *(void (**)(char *, uint64_t))(v65 + 8);
              v85(v82, v54);
              _os_log_impl((void *)&_mh_execute_header, v75, v76, "Presenting menu with %{public}ld section(s) from link: %{public}s", (uint8_t *)v78, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v66 = v106;
            }
            else
            {

              uint64_t v85 = *(void (**)(char *, uint64_t))(v65 + 8);
              v85(v73, v54);
            }
            sub_10000B0CC(0, &qword_1002F6E00);
            uint64_t v96 = enum case for UITextItemMenuConfiguration.Preview.default(_:);
            uint64_t v97 = type metadata accessor for UITextItemMenuConfiguration.Preview();
            uint64_t v98 = *(void *)(v97 - 8);
            uint64_t v99 = v100;
            (*(void (**)(char *, uint64_t, uint64_t))(v98 + 104))(v100, v96, v97);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v99, 0, 1, v97);
            uint64_t v64 = UITextItemMenuConfiguration.init(preview:menu:)();
            sub_1001015F0((uint64_t)v114, (unint64_t)v113);
            v85(v66, v54);
            return (id)v64;
          }
        }
        if (qword_1002EE5E8 != -1) {
          swift_once();
        }
        uint64_t v86 = type metadata accessor for Logger();
        sub_100011554(v86, (uint64_t)qword_10030E9C0);
        uint64_t v87 = v102;
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v102, v66, v54);
        uint64_t v88 = Logger.logObject.getter();
        os_log_type_t v89 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = (uint8_t *)swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          id v113 = (id)v52;
          uint64_t v116 = v91;
          id v114 = v50;
          *(_DWORD *)uint64_t v90 = 136446210;
          uint64_t v112 = (uint64_t)(v90 + 4);
          sub_10012C798(&qword_1002F6DF8, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
          uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v115 = sub_100202FD4(v92, v93, &v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v94 = *(void (**)(char *, uint64_t))(v65 + 8);
          v94(v87, v54);
          _os_log_impl((void *)&_mh_execute_header, v88, v89, "Client didn't return a menu from the disambiguationAction block; won't show menu for link with info %{public}s",
            v90,
            0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_1001015F0((uint64_t)v114, (unint64_t)v113);

          v94(v66, v54);
        }
        else
        {
          sub_1001015F0((uint64_t)v50, v52);

          uint64_t v95 = *(void (**)(char *, uint64_t))(v65 + 8);
          v95(v87, v54);
          v95(v66, v54);
        }
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    }
    if (qword_1002EE5E8 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_100011554(v55, (uint64_t)qword_10030E9C0);
    id v56 = v49;
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 138543362;
      uint64_t v116 = (uint64_t)v56;
      id v61 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v60 = v56;

      _os_log_impl((void *)&_mh_execute_header, v57, v58, "Failed to decode link info from textItemRequest %{public}@; won't present menu",
        v59,
        0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v24, v18);
  type metadata accessor for DisambiguationResultModel();
  v28._uint64_t countAndFlagsBits = static DisambiguationResultModel.dictionaryItemKey.getter();
  Swift::Bool v29 = String.hasPrefix(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_15;
  }
  id v30 = [v114 range];
  NSUInteger v32 = v31;
  id result = [v113 text];
  if (result)
  {
    uint64_t v34 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v35 = sub_1001D169C((unint64_t)v30, v32);
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if (qword_1002EE5E0 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_100011554(v38, (uint64_t)qword_10030E9A8);
    swift_bridgeObjectRetain_n();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.info.getter();
    BOOL v41 = os_log_type_enabled(v39, v40);
    id v114 = v30;
    unint64_t v111 = v35;
    uint64_t v112 = v32;
    if (v41)
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v116 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136643075;
      if (v37) {
        uint64_t v43 = v35;
      }
      else {
        uint64_t v43 = 0x6E776F6E6B6E75;
      }
      if (v37) {
        unint64_t v44 = v37;
      }
      else {
        unint64_t v44 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v115 = sub_100202FD4(v43, v44, &v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2082;
      v117.Swift::Int location = (NSUInteger)v30;
      v117.Swift::Int length = v32;
      uint64_t v45 = NSStringFromRange(v117);
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v48 = v47;

      uint64_t v115 = sub_100202FD4(v46, v48, &v116);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Presenting dictionary from word: %{sensitive}s; range: %{public}s",
        (uint8_t *)v42,
        0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v62 = v110 + OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText;
    uint64_t v63 = *(void (**)(id, id, uint64_t, unint64_t, unint64_t))(v62
                                                                                     + *(int *)(type metadata accessor for LanguageAwareText(0)
                                                                                              + 68));
    if (v63)
    {
      swift_retain();
      v63(v113, v114, v112, v111, v37);
      sub_1000324E4((uint64_t)v63);
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10012D7E8(void *a1, void *a2)
{
  id v43 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F0FA8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  uint64_t v7 = *(void *)(v45 + 64);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v44 = (char *)&v41 - v10;
  uint64_t v11 = type metadata accessor for String.Encoding();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UITextItem.Content();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v47 = a1;
  UITextItem.content.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v16 + 88))(v18, v15) == enum case for UITextItem.Content.tag(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    type metadata accessor for DisambiguationResultModel();
    v19._uint64_t countAndFlagsBits = static DisambiguationResultModel.dictionaryItemKey.getter();
    Swift::Bool v20 = String.hasPrefix(_:)(v19);
    swift_bridgeObjectRelease();
    if (v20)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      static String.Encoding.utf8.getter();
      uint64_t v21 = String.data(using:allowLossyConversion:)();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      if (v23 >> 60 == 15)
      {
        if (qword_1002EE5E8 != -1) {
          swift_once();
        }
        uint64_t v25 = type metadata accessor for Logger();
        sub_100011554(v25, (uint64_t)qword_10030E9C0);
        id v26 = v47;
        int v27 = Logger.logObject.getter();
        os_log_type_t v28 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v27, v28))
        {
          Swift::Bool v29 = (uint8_t *)swift_slowAlloc();
          id v30 = (void *)swift_slowAlloc();
          *(_DWORD *)Swift::Bool v29 = 138543362;
          aBlock[0] = v26;
          id v31 = v26;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *id v30 = v26;

          _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to decode link info from textItemRequest %{public}@; won't display extra highlight",
            v29,
            0xCu);
          sub_100007620((uint64_t *)&unk_1002F6DE0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
      else
      {
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_10012C798((unint64_t *)&unk_1002FC430, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
        uint64_t v24 = v46;
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        id v47 = (id)v23;
        uint64_t v32 = v45;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v5, 0, 1, v24);
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        uint64_t v34 = v44;
        v33(v44, v5, v24);
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v9, v34, v24);
        unint64_t v35 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        uint64_t v36 = swift_allocObject();
        uint64_t v37 = v21;
        uint64_t v38 = v42;
        *(void *)(v36 + 16) = v42;
        v33((char *)(v36 + v35), v9, v24);
        aBlock[4] = sub_10012E6F8;
        aBlock[5] = v36;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10008BA1C;
        void aBlock[3] = &unk_1002CF1A0;
        uint64_t v39 = _Block_copy(aBlock);
        id v40 = v38;
        swift_release();
        [v43 addAnimations:v39];
        sub_1001015F0(v37, (unint64_t)v47);
        _Block_release(v39);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v44, v24);
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_10012DEA0(void *a1, void *a2)
{
  id v47 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F0FA8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v49 = (unint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v46 - v6;
  uint64_t v8 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  uint64_t v9 = *(void *)(v50 + 64);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v46 = (char *)&v46 - v12;
  uint64_t v13 = type metadata accessor for String.Encoding();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UITextItem.Content();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::Bool v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v48 = a1;
  UITextItem.content.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v20, v17) == enum case for UITextItem.Content.tag(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    type metadata accessor for DisambiguationResultModel();
    v21._uint64_t countAndFlagsBits = static DisambiguationResultModel.dictionaryItemKey.getter();
    Swift::Bool v22 = String.hasPrefix(_:)(v21);
    swift_bridgeObjectRelease();
    if (v22)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      static String.Encoding.utf8.getter();
      int v27 = (void *)String.data(using:allowLossyConversion:)();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v30 = v51;
      if (v29 >> 60 != 15)
      {
        type metadata accessor for JSONDecoder();
        swift_allocObject();
        JSONDecoder.init()();
        sub_10012C798((unint64_t *)&unk_1002FC430, (void (*)(uint64_t))&type metadata accessor for DisambiguationLinkInfo);
        dispatch thunk of JSONDecoder.decode<A>(_:from:)();
        swift_release();
        unint64_t v49 = v29;
        uint64_t v38 = v50;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v7, 0, 1, v30);
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        id v48 = v27;
        id v40 = v46;
        v39(v46, v7, v30);
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v11, v40, v30);
        unint64_t v41 = (*(unsigned __int8 *)(v38 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v42 = swift_allocObject();
        id v43 = v52;
        *(void *)(v42 + 16) = v52;
        v39((char *)(v42 + v41), v11, v30);
        aBlock[4] = sub_10012E608;
        aBlock[5] = v42;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10008BA1C;
        void aBlock[3] = &unk_1002CF150;
        unint64_t v44 = _Block_copy(aBlock);
        id v45 = v43;
        swift_release();
        [v47 addAnimations:v44];
        sub_1001015F0((uint64_t)v48, v49);
        _Block_release(v44);
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v40, v30);
      }
      if (qword_1002EE5E8 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100011554(v31, (uint64_t)qword_10030E9C0);
      id v32 = v48;
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        unint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v36 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v35 = 138543362;
        aBlock[0] = v32;
        id v37 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v36 = v32;

        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Failed to decode link info from textItemRequest %{public}@; won't display extra highlight",
          v35,
          0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  unint64_t v23 = &v52[OBJC_IVAR____TtCV17SequoiaTranslator17LanguageAwareText11Coordinator_languageAwareText];
  uint64_t result = type metadata accessor for LanguageAwareText(0);
  uint64_t v25 = *(void (**)(void, uint64_t))&v23[*(int *)(result + 84)];
  if (v25)
  {
    uint64_t v26 = v49;
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v51);
    swift_retain();
    v25(0, v26);
    sub_1000324E4((uint64_t)v25);
    return sub_10000B070(v26, &qword_1002F0FA8);
  }
  return result;
}

uint64_t sub_10012E608()
{
  return sub_10012E700(0);
}

uint64_t sub_10012E610(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10012E620()
{
  return swift_release();
}

uint64_t sub_10012E62C()
{
  uint64_t v1 = type metadata accessor for DisambiguationLinkInfo();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10012E6F8()
{
  return sub_10012E700(1);
}

uint64_t sub_10012E700(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DisambiguationLinkInfo() - 8);
  return sub_10012A9A0(*(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_10012EA54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v31 - v15;
  sub_10009A8D8(a1, (uint64_t)&v31 - v15);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v18 = v17(v16, 1, v4);
  uint64_t v33 = v8;
  if (v18 == 1)
  {
    sub_10000B070((uint64_t)v16, (uint64_t *)&unk_1002F4110);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v19 = Locale.identifier.getter();
    uint64_t v20 = v21;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
  }
  uint64_t v22 = (uint64_t)v2 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale;
  swift_beginAccess();
  id result = (id)v17((char *)v22, 1, v4);
  if (result)
  {
    if (!v20) {
      return result;
    }
    goto LABEL_6;
  }
  uint64_t v32 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v22, v4);
  uint64_t v31 = Locale.identifier.getter();
  uint64_t v26 = v25;
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  if (!v20)
  {
    if (!v26) {
      return result;
    }
    goto LABEL_6;
  }
  if (!v26)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    [v2 reloadInputViews];
    sub_10012F9C4();
    sub_10009A8D8(v22, (uint64_t)v14);
    if (v17(v14, 1, v4) == 1)
    {
      sub_10000B070((uint64_t)v14, (uint64_t *)&unk_1002F4110);
      uint64_t v24 = 4;
    }
    else
    {
      unint64_t v29 = v33;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v33, v14, v4);
      Swift::Bool v30 = Locale.isRTL()();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v29, v4);
      if (v30) {
        uint64_t v24 = 2;
      }
      else {
        uint64_t v24 = 0;
      }
    }
    return [v2 setTextAlignment:v24];
  }
  if (v32 == v31 && v20 == v26)
  {
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  if ((v28 & 1) == 0) {
    goto LABEL_7;
  }
  return result;
}

id sub_10012EDDC()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"textViewTapped:"];
    [v4 setNumberOfTapsRequired:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_10012EE74()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_willResignFirstResponder];
  *uint64_t v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_hasTapGestureRecognizer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_languageAwareTextViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale];
  uint64_t v3 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  id v4 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey];
  *id v4 = 0;
  v4[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_inputModeBeforeReloadWithoutLocaleChange] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer] = 0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for LanguageAwareTextView();
  id v5 = [super initWithFrame:0.0 textContainer:0.0];
  id v6 = self;
  uint64_t v7 = (char *)v5;
  id v8 = [v6 quaternaryLabelColor];
  uint64_t v9 = (void **)&v7[OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderColor];
  swift_beginAccess();
  uint64_t v10 = *v9;
  *uint64_t v9 = v8;
  id v11 = v8;

  PlaceholderTextView.updatePlaceholderProperties()();
  uint64_t v12 = v7;
  id v13 = [v6 clearColor];
  [v12 setBackgroundColor:v13];

  [v12 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v14 = [v12 textContainer];
  [v14 setLineFragmentPadding:0.0];

  [v12 setAlwaysBounceVertical:0];
  [v12 setShowsVerticalScrollIndicator:0];
  [v12 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraLarge];
  [v12 setAdjustsFontForContentSizeCategory:1];
  [v12 setScrollEnabled:0];
  [v12 setForceDisableDictation:1];

  return v12;
}

void *sub_10012F1D4()
{
  uint64_t v1 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale;
  swift_beginAccess();
  sub_10009A8D8(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000B070((uint64_t)v3, (uint64_t *)&unk_1002F4110);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v10(v7, v3, v4);
    sub_100007620((uint64_t *)&unk_1002F6870);
    unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1002488D0;
    v10((char *)(v9 + v11), v7, v4);
  }
  return (void *)v9;
}

id sub_10012F3EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_inputModeBeforeReloadWithoutLocaleChange];
  id v10 = v9;
  if (!v9)
  {
    uint64_t v11 = (uint64_t)&v1[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale];
    swift_beginAccess();
    sub_10009A8D8(v11, (uint64_t)v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F4110);
      uint64_t v12 = (objc_class *)type metadata accessor for LanguageAwareTextView();
      v29.receiver = v1;
      v29.super_class = v12;
      id v10 = [super textInputMode];
      goto LABEL_16;
    }
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v13 = self;
    Locale.identifier.getter();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Locale.identifier.getter();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int v27 = sub_10012F7B4;
    uint64_t v28 = 0;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v26 = sub_10012F828;
    *((void *)&v26 + 1) = &unk_1002CF1C8;
    objc_super v16 = _Block_copy(&aBlock);
    id v17 = [v13 _inputModesForLocale:v14 language:v15 modeFetcher:v16];
    _Block_release(v16);

    if (v17 && (uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(), v17, v18))
    {
      if (*(void *)(v18 + 16))
      {
        sub_10000B170(v18 + 32, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v26 + 1))
      {
        if (swift_dynamicCast())
        {
          NSString v19 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v10 = [self keyboardInputModeWithIdentifier:v19];

LABEL_15:
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          goto LABEL_16;
        }
LABEL_14:
        uint64_t v20 = (objc_class *)type metadata accessor for LanguageAwareTextView();
        v24.receiver = v1;
        v24.super_class = v20;
        id v10 = [super textInputMode];
        goto LABEL_15;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v26 = 0u;
    }
    sub_10000B070((uint64_t)&aBlock, (uint64_t *)&unk_1002F02C0);
    goto LABEL_14;
  }
LABEL_16:
  id v21 = v9;
  return v10;
}

uint64_t sub_10012F7B4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    NSString v2 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v2 = 0;
  }
  id v3 = (id)TIGetDefaultInputModesForLanguage();

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

Class sub_10012F828(uint64_t a1, uint64_t a2)
{
  NSString v2 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  if (a2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  swift_retain();
  uint64_t v6 = v2(v3, v5);
  swift_release();
  swift_bridgeObjectRelease();
  if (v6)
  {
    v7.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v7.super.Class isa = 0;
  }

  return v7.super.isa;
}

void sub_10012F9C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey + 8))
  {
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey);
    id v10 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey + 8);
  }
  else
  {
    id v10 = (void *)0xEB00000000455059;
    uint64_t v9 = 0x545F4F545F504154;
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale;
  swift_beginAccess();
  sub_10009A8D8(v11, (uint64_t)v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    swift_bridgeObjectRetain();
    sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
    id v12 = [self mainBundle];
    v27._object = (void *)0xE000000000000000;
    v13._uint64_t countAndFlagsBits = v9;
    v13._object = v10;
    v14._uint64_t countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v27._uint64_t countAndFlagsBits = 0;
    Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v27);
    uint64_t countAndFlagsBits = v15._countAndFlagsBits;
    object = v15._object;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v8, v2);
    swift_bridgeObjectRetain();
    sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
    id v18 = [self mainBundle];
    v19._uint64_t countAndFlagsBits = v9;
    v19._object = v10;
    v20._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v20._object = (void *)0xEB00000000656C62;
    Swift::String v21 = Locale.ltLocalizedAppString(_:table:bundle:)(v19, v20, (NSBundle)v18);
    uint64_t countAndFlagsBits = v21._countAndFlagsBits;
    object = v21._object;

    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholder);
  swift_beginAccess();
  uint64_t v23 = (void *)v22[1];
  if (v23 && (*v22 == countAndFlagsBits && v23 == object || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t *v22 = countAndFlagsBits;
    v22[1] = (uint64_t)object;
    swift_bridgeObjectRelease();
    objc_super v24 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19PlaceholderTextView_placeholderTextView);
    if (v22[1])
    {
      swift_bridgeObjectRetain();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v25 = 0;
    }
    [v24 setText:v25];
  }
}

uint64_t sub_10012FD58(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030EA98);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tap gesture recognizer for ASR Alts or focusing fired, informing delegate", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10012ABD0(v2, a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10012FF28()
{
  sub_1000324E4(*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_willResignFirstResponder));
  sub_100013384(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_languageAwareTextViewDelegate);
  sub_10000B070(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale, (uint64_t *)&unk_1002F4110);
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_inputModeBeforeReloadWithoutLocaleChange));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer);
}

id sub_10012FFB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LanguageAwareTextView();
  return [super dealloc];
}

uint64_t sub_10013008C()
{
  return type metadata accessor for LanguageAwareTextView();
}

uint64_t type metadata accessor for LanguageAwareTextView()
{
  uint64_t result = qword_1002F6E58;
  if (!qword_1002F6E58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001300E0()
{
  sub_1000C9F78();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10013019C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001301AC()
{
  return swift_release();
}

void sub_1001301B4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_willResignFirstResponder];
  *uint64_t v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_hasTapGestureRecognizer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_languageAwareTextViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_locale];
  uint64_t v3 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = &v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_placeholderLocalizableKey];
  *uint64_t v4 = 0;
  v4[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView_inputModeBeforeReloadWithoutLocaleChange] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21LanguageAwareTextView____lazy_storage___tapGestureRecognizer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1001302C0()
{
  uint64_t v1 = v0;
  Hasher._combine(_:)(*(unsigned char *)(v0 + 16));
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v2 = *(void *)(v0 + 24);
    Hasher._combine(_:)(1u);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v2;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    Hasher._combine(_:)(v3);
  }
  if (*(unsigned char *)(v0 + 48) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v4 = *(void *)(v0 + 40);
    Hasher._combine(_:)(1u);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v4;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    Hasher._combine(_:)(v5);
  }
  id v6 = *(id *)(v0 + 56);
  NSObject.hash(into:)();

  if (*(unsigned char *)(v1 + 72) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v7 = *(void *)(v1 + 64);
    Hasher._combine(_:)(1u);
    if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v7;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    Hasher._combine(_:)(v8);
  }
}

uint64_t sub_1001303B8()
{
  return swift_deallocClassInstance();
}

Swift::Int sub_1001303F0()
{
  return Hasher._finalize()();
}

void sub_100130434()
{
}

Swift::Int sub_100130458()
{
  return Hasher._finalize()();
}

BOOL sub_100130498()
{
  Hasher.init(_seed:)();
  sub_1001302C0();
  Swift::Int v0 = Hasher._finalize()();
  Hasher.init(_seed:)();
  sub_1001302C0();
  return v0 == Hasher._finalize()();
}

uint64_t sub_100130514(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t *)(v4 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v4 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1002038D4(a4);
    char v11 = v10;
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      return result;
    }
  }
  Swift::String v13 = (uint64_t *)(v4 + 24);
  swift_beginAccess();
  unint64_t v14 = *(void *)(v4 + 24);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 < 100) {
      goto LABEL_15;
    }
LABEL_5:
    swift_beginAccess();
    uint64_t v15 = *v13;
    if ((unint64_t)*v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v19)
      {
LABEL_7:
        uint64_t v15 = *v13;
        if (!((unint64_t)*v13 >> 62))
        {
          uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v16) {
            goto LABEL_9;
          }
          goto LABEL_24;
        }
LABEL_23:
        swift_bridgeObjectRetain();
        uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_9:
          if ((v15 & 0xC000000000000001) == 0)
          {
            if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_27;
            }
            uint64_t v16 = *(void *)(v15 + 32);
            uint64_t result = swift_retain();
LABEL_12:
            if (!((unint64_t)*v13 >> 62))
            {
              if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
LABEL_14:
                sub_10022C53C(0, 1);
                swift_endAccess();
                swift_beginAccess();
                sub_1002272A8(v16);
                swift_endAccess();
                swift_release();
                goto LABEL_15;
              }
LABEL_28:
              __break(1u);
              return result;
            }
LABEL_27:
            swift_bridgeObjectRetain();
            uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t result = swift_bridgeObjectRelease();
            if (v20) {
              goto LABEL_14;
            }
            goto LABEL_28;
          }
LABEL_25:
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v16 = result;
          goto LABEL_12;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_23;
  }
  if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 100) {
    goto LABEL_5;
  }
LABEL_15:
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v9;
  *uint64_t v9 = 0x8000000000000000;
  sub_100205C10(a1, a2, a3 & 1, a4, isUniquelyReferenced_nonNull_native);
  *uint64_t v9 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10013086C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LanguageAwareTextViewSizeThatFitsCache()
{
  return self;
}

uint64_t type metadata accessor for LanguageAwareTextViewSizeThatFitsCache.Condition()
{
  return self;
}

unint64_t sub_1001308F8()
{
  unint64_t result = qword_1002F7020;
  if (!qword_1002F7020)
  {
    type metadata accessor for LanguageAwareTextViewSizeThatFitsCache.Condition();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7020);
  }
  return result;
}

double sub_10013094C@<D0>(uint64_t a1@<X8>)
{
  Swift::UInt64 v2 = v1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v22 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - v8;
  long long v27 = *(_OWORD *)(v1 + 12);
  long long v23 = *(_OWORD *)(v1 + 12);
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  double v10 = v24;
  uint64_t v11 = v25;
  char v12 = v26;
  __int16 v13 = *v1;
  char v14 = *((unsigned char *)v2 + 2);
  uint64_t v21 = *((void *)v2 + 2);
  uint64_t v15 = swift_allocObject();
  long long v16 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v16;
  *(void *)(v15 + 48) = *((void *)v2 + 4);
  *(double *)a1 = v10;
  *(void *)(a1 + 8) = v11;
  *(unsigned char *)(a1 + 16) = v12;
  *(_WORD *)(a1 + 17) = v13;
  *(unsigned char *)(a1 + 19) = v14;
  *(void *)(a1 + 24) = sub_100132E6C;
  *(void *)(a1 + 32) = v15;
  uint64_t v17 = type metadata accessor for LanguageFlipperBindingView(0);
  swift_retain();
  sub_10001F2D8((uint64_t)&v27);
  UUID.init()();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v22, v9, v4);
  State.init(wrappedValue:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  uint64_t v18 = (double *)(a1 + *(int *)(v17 + 40));
  *(void *)&long long v23 = 0;
  State.init(wrappedValue:)();
  double result = v24;
  uint64_t v20 = v25;
  double *v18 = v24;
  *((void *)v18 + 1) = v20;
  return result;
}

uint64_t sub_100130B64(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  sub_10001323C((uint64_t)&v4 + 8, (uint64_t)v5, &qword_1002F7138);
  sub_10001C05C((uint64_t)v5);
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  State.wrappedValue.setter();
  uint64_t v2 = sub_10001F72C((uint64_t)&v4);
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v2);
}

uint64_t sub_100130C20()
{
  uint64_t v1 = type metadata accessor for LanguageFlipperBindingView(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v4 = sub_100007620(&qword_1002F7200);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = static Alignment.center.getter();
  v6[1] = v7;
  uint64_t v8 = sub_100007620(&qword_1002F7208);
  sub_100130E3C((unsigned char *)v0, (uint64_t *)((char *)v6 + *(int *)(v8 + 44)));
  uint64_t v9 = *(void *)(v0 + 8);
  char v10 = *(unsigned char *)(v0 + 16);
  uint64_t v15 = *(void *)v0;
  uint64_t v16 = v9;
  char v17 = v10;
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  LOBYTE(v15) = v18;
  sub_10013381C(v0, (uint64_t)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1001339AC((uint64_t)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  sub_100014894(&qword_1002F7210, &qword_1002F7200);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v6, &qword_1002F7200);
}

uint64_t sub_100130E3C@<X0>(unsigned char *a1@<X0>, _OWORD *a2@<X8>)
{
  id v74 = a2;
  uint64_t v62 = type metadata accessor for RoundTranslationActionButtonStyle(0);
  __chkstk_darwin(v62);
  uint64_t v4 = &v54[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100007620(&qword_1002F7220);
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  id v56 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007620(&qword_1002F7228);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  uint64_t v57 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v64 = sub_100007620(&qword_1002F7230);
  uint64_t v9 = __chkstk_darwin(v64);
  uint64_t v65 = &v54[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v66 = &v54[-v11];
  uint64_t v63 = sub_100007620(&qword_1002F7238);
  uint64_t v12 = __chkstk_darwin(v63);
  uint64_t v73 = &v54[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v72 = &v54[-v14];
  if (a1[17]) {
    double v15 = INFINITY;
  }
  else {
    double v15 = 1.5;
  }
  if (a1[17]) {
    double v16 = 1.5;
  }
  else {
    double v16 = INFINITY;
  }
  static Alignment.center.getter();
  sub_10001CE90(0.0, 1, 0.0, 1, v15, 0, 0.0, 1, &v118, 0.0, 1, v16, 0);
  unsigned __int8 v17 = BYTE8(v118);
  uint64_t v76 = v118;
  uint64_t v77 = v119;
  int v55 = v120;
  uint64_t v78 = v121;
  unsigned __int8 v18 = v122;
  unsigned __int8 v19 = v124;
  uint64_t v67 = v123;
  uint64_t v68 = v125;
  unsigned __int8 v20 = v126;
  unsigned __int8 v21 = v128;
  uint64_t v71 = v129;
  uint64_t v69 = v127;
  uint64_t v70 = v130;
  if (a1[18])
  {
    if (a1[18] == 1)
    {
      id v22 = [self separatorColor];
      *((void *)&v75 + 1) = Color.init(uiColor:)();
    }
    else
    {
      static Color.translateAccentColor.getter();
      *((void *)&v75 + 1) = Color.opacity(_:)();
      swift_release();
    }
  }
  else
  {
    *((void *)&v75 + 1) = static Color.appBackgroundColor.getter();
  }
  *(void *)&long long v75 = swift_getKeyPath();
  unsigned __int8 v90 = v17;
  unsigned __int8 v88 = v55;
  unsigned __int8 v86 = v18;
  unsigned __int8 v84 = v19;
  unsigned __int8 v82 = v20;
  unsigned __int8 v80 = v21;
  __chkstk_darwin(v75);
  swift_retain();
  sub_100007620(&qword_1002F7240);
  sub_100133AB4(&qword_1002F7248, &qword_1002F7240, (void (*)(void))sub_100133B30);
  long long v23 = v56;
  Button.init(action:label:)();
  char v24 = a1[18];
  char v25 = a1[19];
  uint64_t v99 = 0x3FF0000000000000;
  sub_100054398();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v26 = v62;
  v4[*(int *)(v62 + 20)] = v24;
  v4[*(int *)(v26 + 24)] = v25;
  uint64_t v27 = sub_100014894(&qword_1002F7260, &qword_1002F7220);
  uint64_t v28 = sub_1001337B8(&qword_1002F7268, (void (*)(uint64_t))type metadata accessor for RoundTranslationActionButtonStyle);
  objc_super v29 = v57;
  uint64_t v30 = v59;
  View.buttonStyle<A>(_:)();
  sub_100133BA4((uint64_t)v4);
  (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v23, v30);
  uint64_t v99 = v30;
  uint64_t v100 = v26;
  uint64_t v101 = v27;
  uint64_t v102 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v31 = (uint64_t)v65;
  uint64_t v32 = v61;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v60 + 8))(v29, v32);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v33 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v35 = v34;
  LOBYTE(v28) = v36 & 1;
  uint64_t v37 = (uint64_t)v66;
  ModifiedContent<>.accessibility(label:)();
  sub_10001FC84(v33, v35, v28);
  swift_bridgeObjectRelease();
  sub_10000B070(v31, &qword_1002F7230);
  type metadata accessor for LanguageFlipperBindingView(0);
  uint64_t v38 = (uint64_t)v72;
  sub_100007620(&qword_1002F7140);
  State.wrappedValue.getter();
  sub_10001323C(v37, v38, &qword_1002F7230);
  LOBYTE(v31) = v90;
  LODWORD(v61) = v90;
  LOBYTE(v28) = v88;
  LODWORD(v62) = v88;
  LOBYTE(v26) = v86;
  LODWORD(v63) = v86;
  LOBYTE(v33) = v84;
  LODWORD(v64) = v84;
  LOBYTE(v37) = v82;
  LODWORD(v65) = v82;
  unsigned __int8 v39 = v80;
  LODWORD(v66) = v80;
  id v40 = v73;
  sub_10000C3A4(v38, (uint64_t)v73, &qword_1002F7238);
  *(void *)&long long v91 = v76;
  BYTE8(v91) = v31;
  *(_DWORD *)((char *)&v91 + 9) = *(_DWORD *)v89;
  HIDWORD(v91) = *(_DWORD *)&v89[3];
  *(void *)&long long v92 = v77;
  BYTE8(v92) = v28;
  *(_DWORD *)((char *)&v92 + 9) = *(_DWORD *)v87;
  HIDWORD(v92) = *(_DWORD *)&v87[3];
  *(void *)&long long v93 = v78;
  BYTE8(v93) = v26;
  HIDWORD(v93) = *(_DWORD *)&v85[3];
  *(_DWORD *)((char *)&v93 + 9) = *(_DWORD *)v85;
  uint64_t v42 = v67;
  uint64_t v41 = v68;
  *(void *)&long long v94 = v67;
  BYTE8(v94) = v33;
  HIDWORD(v94) = *(_DWORD *)&v83[3];
  *(_DWORD *)((char *)&v94 + 9) = *(_DWORD *)v83;
  *(void *)&long long v95 = v68;
  BYTE8(v95) = v37;
  *(_DWORD *)((char *)&v95 + 9) = *(_DWORD *)v81;
  HIDWORD(v95) = *(_DWORD *)&v81[3];
  uint64_t v43 = v69;
  *(void *)&long long v96 = v69;
  BYTE8(v96) = v39;
  *(_DWORD *)((char *)&v96 + 9) = *(_DWORD *)v79;
  HIDWORD(v96) = *(_DWORD *)&v79[3];
  uint64_t v44 = v70;
  uint64_t v45 = v71;
  *(void *)&long long v97 = v71;
  *((void *)&v97 + 1) = v70;
  uint64_t v46 = v74;
  long long v98 = v75;
  long long v47 = v94;
  v74[2] = v93;
  v46[3] = v47;
  long long v48 = v92;
  *uint64_t v46 = v91;
  v46[1] = v48;
  long long v49 = v95;
  long long v50 = v96;
  long long v51 = v98;
  v46[6] = v97;
  v46[7] = v51;
  v46[4] = v49;
  v46[5] = v50;
  uint64_t v52 = sub_100007620(&qword_1002F7270);
  sub_10000C3A4((uint64_t)v40, (uint64_t)v46 + *(int *)(v52 + 48), &qword_1002F7238);
  sub_100133C00((uint64_t)&v91);
  sub_10000B070(v38, &qword_1002F7238);
  sub_10000B070((uint64_t)v40, &qword_1002F7238);
  uint64_t v99 = v76;
  LOBYTE(v100) = v61;
  *(_DWORD *)((char *)&v100 + 1) = *(_DWORD *)v89;
  HIDWORD(v100) = *(_DWORD *)&v89[3];
  uint64_t v101 = v77;
  LOBYTE(v102) = v62;
  *(_DWORD *)((char *)&v102 + 1) = *(_DWORD *)v87;
  HIDWORD(v102) = *(_DWORD *)&v87[3];
  uint64_t v103 = v78;
  char v104 = v63;
  *(_DWORD *)&v105[3] = *(_DWORD *)&v85[3];
  *(_DWORD *)uint64_t v105 = *(_DWORD *)v85;
  uint64_t v106 = v42;
  char v107 = v64;
  *(_DWORD *)&v108[3] = *(_DWORD *)&v83[3];
  *(_DWORD *)uint64_t v108 = *(_DWORD *)v83;
  uint64_t v109 = v41;
  char v110 = (char)v65;
  *(_DWORD *)&v111[3] = *(_DWORD *)&v81[3];
  *(_DWORD *)unint64_t v111 = *(_DWORD *)v81;
  uint64_t v112 = v43;
  char v113 = (char)v66;
  *(_DWORD *)id v114 = *(_DWORD *)v79;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v79[3];
  uint64_t v115 = v45;
  uint64_t v116 = v44;
  long long v117 = v75;
  return sub_100133C34((uint64_t)&v99);
}

double sub_10013178C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = Image.init(systemName:)();
  int v5 = *(unsigned __int8 *)(a1 + 17);
  static UnitPoint.center.getter();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  type metadata accessor for LanguageFlipperBindingView(0);
  sub_100007620(&qword_1002F7218);
  State.wrappedValue.getter();
  if (v5) {
    double v10 = 0.0;
  }
  else {
    double v10 = 1.57079633;
  }
  if (v5) {
    double v11 = 0.0;
  }
  else {
    double v11 = 1.0;
  }
  if (v5) {
    double v12 = 1.0;
  }
  else {
    double v12 = 0.0;
  }
  static UnitPoint.center.getter();
  *(void *)a2 = v4;
  *(double *)(a2 + 8) = v10;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v16;
  *(double *)(a2 + 40) = v12;
  *(double *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v14;
  double result = 0.0;
  *(_OWORD *)(a2 + 80) = xmmword_100251DF0;
  return result;
}

uint64_t sub_10013188C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  double v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = &v15[-v12];
  if (*a1 != *a2)
  {
    UUID.init()();
    type metadata accessor for LanguageFlipperBindingView(0);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v10, v13, v6);
    sub_100007620(&qword_1002F7140);
    State.wrappedValue.setter();
    uint64_t v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v13, v6);
    __chkstk_darwin(v14);
    *(void *)&v15[-16] = a3;
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100131A4C()
{
  return swift_release();
}

uint64_t property wrapper backing initializer of RoundTranslationActionButtonStyle.scale()
{
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t RoundTranslationActionButtonStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v52 = a1;
  uint64_t v42 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v3 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F7028);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F7030);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100007620(&qword_1002F7038);
  __chkstk_darwin(v44);
  long long v51 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007620(&qword_1002F7040);
  __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100007620(&qword_1002F7048);
  __chkstk_darwin(v46);
  uint64_t v50 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100007620(&qword_1002F7050);
  __chkstk_darwin(v47);
  uint64_t v45 = (uint64_t)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v43 = type metadata accessor for RoundTranslationActionButtonStyle(0);
  uint64_t v17 = *(int *)(v43 + 20);
  sub_100007620(&qword_1002F1060);
  ScaledMetric.wrappedValue.getter();
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v18 = v42;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v42);
  unsigned __int8 v19 = &v9[*(int *)(v7 + 44)];
  long long v20 = v54;
  *(_OWORD *)unsigned __int8 v19 = v53;
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v55;
  unsigned __int8 v21 = v5;
  uint64_t v22 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v21, v18);
  uint64_t v23 = static Color.translateAccentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v9, v22, &qword_1002F7028);
  char v25 = (uint64_t *)(v22 + *(int *)(v11 + 44));
  *char v25 = KeyPath;
  v25[1] = v23;
  sub_10000B070((uint64_t)v9, &qword_1002F7028);
  if (*(unsigned char *)(v2 + v17))
  {
    if (*(unsigned char *)(v2 + v17) == 1)
    {
      id v26 = [self secondarySystemGroupedBackgroundColor];
      uint64_t v27 = Color.init(uiColor:)();
    }
    else
    {
      static Color.translateAccentColor.getter();
      uint64_t v27 = Color.opacity(_:)();
      swift_release();
    }
  }
  else
  {
    uint64_t v27 = static Color.appBackgroundColor.getter();
  }
  uint64_t v28 = (uint64_t)v51;
  char v29 = static Edge.Set.all.getter();
  sub_10000C3A4(v22, v28, &qword_1002F7030);
  uint64_t v30 = v28 + *(int *)(v44 + 36);
  *(void *)uint64_t v30 = v27;
  *(unsigned char *)(v30 + 8) = v29;
  sub_10000B070(v22, &qword_1002F7030);
  if (*(unsigned char *)(v2 + v17) == 2) {
    uint64_t v31 = static Color.black.getter();
  }
  else {
    uint64_t v31 = static Color.clear.getter();
  }
  uint64_t v32 = v31;
  char v33 = static Edge.Set.all.getter();
  uint64_t v34 = v49;
  sub_10000C3A4(v28, v49, &qword_1002F7038);
  uint64_t v35 = v34 + *(int *)(v48 + 36);
  *(void *)uint64_t v35 = v32;
  *(unsigned char *)(v35 + 8) = v33;
  sub_10000B070(v28, &qword_1002F7038);
  uint64_t v36 = v50;
  sub_10000C3A4(v34, v50, &qword_1002F7040);
  *(_WORD *)(v36 + *(int *)(v46 + 36)) = 256;
  sub_10000B070(v34, &qword_1002F7040);
  if (*(unsigned char *)(v2 + *(int *)(v43 + 24))) {
    double v37 = 1.0;
  }
  else {
    double v37 = 0.0;
  }
  uint64_t v38 = v45;
  sub_10000C3A4(v36, v45, &qword_1002F7048);
  *(double *)(v38 + *(int *)(v47 + 36)) = v37;
  sub_10000B070(v36, &qword_1002F7048);
  return sub_10001323C(v38, v52, &qword_1002F7050);
}

uint64_t type metadata accessor for RoundTranslationActionButtonStyle(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F70B0);
}

uint64_t sub_10013212C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100132158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100132184()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1001321B0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1001321DC()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for RoundTranslationActionButtonStyle(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1060);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t destroy for RoundTranslationActionButtonStyle(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F1060);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100132570);
}

uint64_t sub_100132570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1060);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for RoundTranslationActionButtonStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100132658);
}

uint64_t sub_100132658(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F1060);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

void sub_100132718()
{
  sub_10005433C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1001327B8()
{
  return sub_100133AB4(&qword_1002F70F0, &qword_1002F7050, (void (*)(void))sub_1001327FC);
}

unint64_t sub_1001327FC()
{
  unint64_t result = qword_1002F70F8;
  if (!qword_1002F70F8)
  {
    sub_100007928(&qword_1002F7048);
    sub_10013289C();
    sub_100014894(&qword_1002F7120, &qword_1002F7128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F70F8);
  }
  return result;
}

unint64_t sub_10013289C()
{
  unint64_t result = qword_1002F7100;
  if (!qword_1002F7100)
  {
    sub_100007928(&qword_1002F7040);
    sub_10013293C();
    sub_100014894(&qword_1002F2388, &qword_1002F2390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7100);
  }
  return result;
}

unint64_t sub_10013293C()
{
  unint64_t result = qword_1002F7108;
  if (!qword_1002F7108)
  {
    sub_100007928(&qword_1002F7038);
    sub_1001329DC();
    sub_100014894(&qword_1002F2388, &qword_1002F2390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7108);
  }
  return result;
}

unint64_t sub_1001329DC()
{
  unint64_t result = qword_1002F7110;
  if (!qword_1002F7110)
  {
    sub_100007928(&qword_1002F7030);
    sub_100132A7C();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7110);
  }
  return result;
}

unint64_t sub_100132A7C()
{
  unint64_t result = qword_1002F7118;
  if (!qword_1002F7118)
  {
    sub_100007928(&qword_1002F7028);
    sub_1001337B8((unint64_t *)&qword_1002EFF58, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7118);
  }
  return result;
}

uint64_t destroy for LanguageFlipperView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for LanguageFlipperView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LanguageFlipperView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LanguageFlipperView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LanguageFlipperView()
{
  return &type metadata for LanguageFlipperView;
}

unsigned char *storeEnumTagSinglePayload for LanguageFlipperView.Context(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100132D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LanguageFlipperView.Context()
{
  return &type metadata for LanguageFlipperView.Context;
}

unint64_t sub_100132DBC()
{
  unint64_t result = qword_1002F7130;
  if (!qword_1002F7130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7130);
  }
  return result;
}

uint64_t sub_100132E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100132E2C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100132E6C()
{
  return sub_100130B64(v0 + 16);
}

uint64_t type metadata accessor for LanguageFlipperBindingView(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F71A0);
}

uint64_t sub_100132E94(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v7 = a1;
    *(void *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    unsigned __int8 v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v19(v10, v11, v12);
    uint64_t v13 = sub_100007620(&qword_1002F7140);
    *(void *)(v10 + *(int *)(v13 + 28)) = *(void *)(v11 + *(int *)(v13 + 28));
    uint64_t v14 = *(int *)(a3 + 40);
    uint64_t v15 = (void *)(v7 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_100132FF0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100007620(&qword_1002F7140);
  swift_release();

  return swift_release();
}

uint64_t sub_1001330A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = sub_100007620(&qword_1002F7140);
  *(void *)(v8 + *(int *)(v12 + 28)) = *(void *)(v9 + *(int *)(v12 + 28));
  uint64_t v13 = *(int *)(a3 + 40);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001331B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = sub_100007620(&qword_1002F7140);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  swift_retain();
  swift_release();
  uint64_t v12 = *(int *)(a3 + 40);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001332F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = sub_100007620(&qword_1002F7140);
  *(void *)(v7 + *(int *)(v10 + 28)) = *(void *)(v8 + *(int *)(v10 + 28));
  *(_OWORD *)(a1 + *(int *)(a3 + 40)) = *(_OWORD *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1001333B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  *(unsigned char *)(a1 + 19) = *(unsigned char *)(a2 + 19);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = sub_100007620(&qword_1002F7140);
  *(void *)(v7 + *(int *)(v10 + 28)) = *(void *)(v8 + *(int *)(v10 + 28));
  swift_release();
  uint64_t v11 = *(int *)(a3 + 40);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_release();
  return a1;
}

uint64_t sub_1001334CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001334E0);
}

uint64_t sub_1001334E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F7140);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100133594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001335A8);
}

uint64_t sub_1001335A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F7140);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100133654()
{
  sub_100133718();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100133718()
{
  if (!qword_1002F71B0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F71B0);
    }
  }
}

uint64_t sub_100133770()
{
  return sub_1001337B8(&qword_1002F71F8, (void (*)(uint64_t))type metadata accessor for LanguageFlipperBindingView);
}

uint64_t sub_1001337B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100133800()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013381C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageFlipperBindingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100133880()
{
  uint64_t v1 = (int *)(type metadata accessor for LanguageFlipperBindingView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v6 + v1[11];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  sub_100007620(&qword_1002F7140);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1001339AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LanguageFlipperBindingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100133A10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for LanguageFlipperBindingView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10013188C(a1, a2, v6);
}

uint64_t sub_100133A90()
{
  return sub_100131A4C();
}

double sub_100133AAC@<D0>(uint64_t a1@<X8>)
{
  return sub_10013178C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100133AB4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100133B30()
{
  unint64_t result = qword_1002F7250;
  if (!qword_1002F7250)
  {
    sub_100007928(&qword_1002F7258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7250);
  }
  return result;
}

uint64_t sub_100133BA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundTranslationActionButtonStyle(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100133C00(uint64_t a1)
{
  return a1;
}

uint64_t sub_100133C34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100133C6C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100133D00(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType];
  *(void *)uint64_t v9 = 0;
  v9[8] = -1;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_languageDownloadPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  id v10 = objc_allocWithZone((Class)UIStackView);
  uint64_t v11 = v4;
  id v12 = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_stack] = v12;
  id v13 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_titleLabel] = v13;
  id v14 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_descriptionLabel] = v14;
  id v15 = [self buttonWithType:0];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button] = v15;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for LegacyInlineTranslationTabErrorView();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  sub_100133F4C();

  return v16;
}

id sub_100133F4C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_stack;
  uint64_t v40 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_stack;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_stack] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_titleLabel;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_titleLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v43 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_descriptionLabel;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_descriptionLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v41 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v0[v1] setAxis:1];
  [*(id *)&v0[v1] setDistribution:3];
  [*(id *)&v0[v1] setAlignment:3];
  [*(id *)&v0[v1] setSpacing:8.0];
  [*(id *)&v0[v1] setLayoutMarginsRelativeArrangement:1];
  [*(id *)&v0[v1] setLayoutMargins:0.0, 8.0, 0.0, 8.0];
  [*(id *)&v0[v1] setInsetsLayoutMarginsFromSafeArea:0];
  [v0 addSubview:*(void *)&v0[v1]];
  [*(id *)&v0[v2] setTextAlignment:1];
  uint64_t v42 = v2;
  [*(id *)&v0[v2] setNumberOfLines:0];
  uint64_t v3 = *(void **)&v0[v2];
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:0];
  id v39 = self;
  [v6 pointSize];
  id v7 = [v39 systemFontOfSize:];
  id v8 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle3];
  id v38 = self;
  uint64_t v9 = UIContentSizeCategoryExtraExtraLarge;
  id v10 = [v38 traitCollectionWithPreferredContentSizeCategory:v9];
  id v11 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:v10];

  [v11 pointSize];
  double v13 = v12;

  id v14 = [v8 scaledFontForFont:v7 maximumPointSize:v13];
  [v5 setFont:v14];

  id v15 = *(void **)&v0[v42];
  id v37 = self;
  id v16 = v15;
  id v17 = [v37 labelColor];
  [v16 setTextColor:v17];

  [*(id *)&v0[v42] setAdjustsFontSizeToFitWidth:1];
  [*(id *)&v0[v43] setTextAlignment:1];
  [*(id *)&v0[v43] setNumberOfLines:0];
  id v18 = *(id *)&v0[v43];
  id v19 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
  [v19 pointSize];
  id v20 = [v39 systemFontOfSize:];
  id v21 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
  uint64_t v22 = v9;
  id v23 = [v38 traitCollectionWithPreferredContentSizeCategory:v22];
  id v24 = [v4 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:v23];

  [v24 pointSize];
  double v26 = v25;

  id v27 = [v21 scaledFontForFont:v20 maximumPointSize:v26];
  [v18 setFont:v27];

  id v28 = *(id *)&v0[v43];
  id v29 = [v37 secondaryLabelColor];
  [v28 setTextColor:v29];

  [*(id *)&v0[v43] setAdjustsFontSizeToFitWidth:1];
  [*(id *)&v0[v43] setMinimumScaleFactor:0.01];
  [*(id *)&v0[v41] setHidden:1];
  id v30 = *(id *)&v0[v41];
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v37 colorNamed:v31];

  [v30 setTitleColor:v32 forState:0];
  id v33 = *(id *)&v0[v40];
  sub_10023B960(v33);

  [*(id *)&v0[v40] addArrangedSubview:*(void *)&v0[v42]];
  [*(id *)&v0[v40] addArrangedSubview:*(void *)&v0[v43]];
  uint64_t v34 = *(void **)&v0[v40];
  uint64_t v35 = *(void *)&v0[v41];

  return [v34 addArrangedSubview:v35];
}

void sub_1001345BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v8 = (char *)&v62 - v7;
  int v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType + 8);
  if (v9 != 255)
  {
    id v10 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType);
    int v69 = *(unsigned __int8 *)(v1
                             + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_errorType
                             + 8);
    if (v9)
    {
      uint64_t v42 = self;
      id v43 = v10;
      id v44 = [v42 mainBundle];
      v73._uint64_t countAndFlagsBits = 0xD000000000000019;
      v73._object = (void *)0x800000010025F9B0;
      v45._uint64_t countAndFlagsBits = 0x43495645445F4E4FLL;
      v45._object = (void *)0xEF454C5449545F45;
      v46._uint64_t countAndFlagsBits = 0;
      v46._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v73);

      id v47 = [v42 mainBundle];
      v48._uint64_t countAndFlagsBits = 0xD000000000000015;
      v74._object = (void *)0xE000000000000000;
      v48._object = (void *)0x800000010025F9D0;
      v49._uint64_t countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      v74._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v74);

      id v50 = [v42 mainBundle];
      v75._object = (void *)0xE000000000000000;
      v51._uint64_t countAndFlagsBits = 0x43495645445F4E4FLL;
      v51._object = (void *)0xEE004B4E494C5F45;
      v52._uint64_t countAndFlagsBits = 0;
      v52._object = (void *)0xE000000000000000;
      v75._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v75);

      id v53 = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_titleLabel);
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      long long v55 = v10;
      [v53 setText:v54];

      id v56 = objc_retain(*(id *)(v1
                              + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_descriptionLabel));
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v56 setText:v57];

      uint64_t v58 = OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button;
      id v59 = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button);
      NSString v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v59 setTitle:v60 forState:0];

      [*(id *)(v1 + v58) addTarget:v1 action:"onDeviceLinkTapped" forControlEvents:0x2000];
      [*(id *)(v1 + v58) setHidden:0];
      char v61 = v69;
      sub_10010D860(v55, v61);
    }
    else
    {
      id v11 = self;
      id v65 = v11;
      id v12 = v10;
      id v13 = [v11 mainBundle];
      v71._uint64_t countAndFlagsBits = 0xD000000000000018;
      v71._object = (void *)0x800000010025F9F0;
      v14._object = (void *)0x800000010025DF30;
      v14._uint64_t countAndFlagsBits = 0xD000000000000010;
      v15._uint64_t countAndFlagsBits = 0;
      v15._object = (void *)0xE000000000000000;
      Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v71);
      object = v16._object;
      uint64_t countAndFlagsBits = v16._countAndFlagsBits;

      id v17 = [v12 sourceLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      static Locale.current.getter();
      uint64_t v18 = Locale.sqDisplayName(context:in:)();
      unint64_t v20 = v19;
      id v21 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21(v6, v2);
      v21(v8, v2);
      if (v20) {
        uint64_t v22 = v18;
      }
      else {
        uint64_t v22 = 0x45474155474E414CLL;
      }
      id v68 = v10;
      if (v20) {
        unint64_t v23 = v20;
      }
      else {
        unint64_t v23 = 0xE800000000000000;
      }
      unint64_t v63 = v23;
      uint64_t v64 = v22;
      id v24 = [v12 targetLocale];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      static Locale.current.getter();
      uint64_t v25 = Locale.sqDisplayName(context:in:)();
      unint64_t v27 = v26;
      v21(v6, v2);
      v21(v8, v2);
      if (v27) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 0x45474155474E414CLL;
      }
      if (v27) {
        unint64_t v29 = v27;
      }
      else {
        unint64_t v29 = 0xE800000000000000;
      }
      id v30 = [v65 mainBundle];
      v31._uint64_t countAndFlagsBits = 0xD000000000000014;
      v72._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v72._object = (void *)0x800000010025FA10;
      v31._object = (void *)0x800000010025DF50;
      v32._uint64_t countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v72);

      sub_100007620(&qword_1002EEC80);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_100247140;
      *(void *)(v33 + 56) = &type metadata for String;
      unint64_t v34 = sub_1000149B4();
      unint64_t v35 = v63;
      *(void *)(v33 + 32) = v64;
      *(void *)(v33 + 40) = v35;
      *(void *)(v33 + 96) = &type metadata for String;
      *(void *)(v33 + 104) = v34;
      *(void *)(v33 + 64) = v34;
      *(void *)(v33 + 72) = v28;
      *(void *)(v33 + 80) = v29;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      id v36 = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_titleLabel);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v36 setText:v37];

      id v38 = objc_retain(*(id *)(v1
                              + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_descriptionLabel));
      NSString v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v38 setText:v39];

      [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator35LegacyInlineTranslationTabErrorView_button) setHidden:1];
      id v40 = v68;
      char v41 = v69;
      sub_10010D860(v68, v69);
      sub_10010D860(v40, v41);
    }
  }
}

id sub_100134D74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LegacyInlineTranslationTabErrorView();
  [super dealloc];
}

uint64_t type metadata accessor for LegacyInlineTranslationTabErrorView()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for StaticImage(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for StaticImage(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t sub_100134F14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_100134F1C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LegacyInlineTranslationTabErrorView.ErrorType()
{
  return &type metadata for LegacyInlineTranslationTabErrorView.ErrorType;
}

id sub_100134F3C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_confirmationView;
  id v7 = objc_allocWithZone((Class)type metadata accessor for ConfirmationView());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_hintButton;
  *(void *)&v8[v9] = [self buttonWithType:0];
  uint64_t v10 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_layoutContainer;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v11 = &v8[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_speakButtonFrame];
  *(_OWORD *)id v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  swift_unknownObjectWeakInit();
  v8[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_showsSettingsButton] = 0;
  *(void *)&v8[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_languageDownloadPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  id v12 = &v8[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_sourceLocale];
  uint64_t v13 = type metadata accessor for Locale();
  Swift::String v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v8[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_targetLocale], 1, 1, v13);

  if (a2)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v20.receiver = v8;
  v20.super_class = (Class)type metadata accessor for LIDConfirmationController();
  id v16 = [super initWithNibName:v15 bundle:a3];

  id v17 = v16;
  [v17 setModalPresentationStyle:6];
  id v18 = v17;
  [v18 setModalTransitionStyle:2];

  return v18;
}

void sub_100135270()
{
  uint64_t v1 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v1 - 8);
  char v3 = (char *)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v5 = v4;
  id v6 = [objc_allocWithZone((Class)UIColor) initWithRed:0.11372549 green:0.11372549 blue:0.11372549 alpha:0.49];
  [v5 setBackgroundColor:v6];

  id v7 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_layoutContainer];
  id v72 = self;
  id v8 = [v72 clearColor];
  [v7 setBackgroundColor:v8];

  [v7 setAxis:1];
  [v7 setDistribution:3];
  [v7 setAlignment:0];
  Swift::String v71 = v7;
  [v7 setSpacing:1.17549435e-38];
  id v9 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"backgroundTappedWithRecognizer:"];
  [v9 setDelegate:v0];
  id v10 = [v0 view];
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v11 = v10;
  id v67 = v9;
  [v10 addGestureRecognizer:v9];

  uint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_confirmationView];
  uint64_t v13 = *(void **)(v12 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_titleLabel);
  Swift::String v14 = self;
  id v15 = v13;
  id v16 = [v14 mainBundle];
  v73._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0x474E494B41455053;
  v17._object = (void *)0xEE0048434948575FLL;
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v73._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v73);

  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v19];

  objc_super v20 = *(void **)(v12 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button);
  uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button;
  uint64_t v70 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button;
  id v22 = v20;
  NSString v23 = String._bridgeToObjectiveC()();
  [v22 setTitle:v23 forState:0];

  [*(id *)(v12 + v21) addTarget:v0 action:"optionButtonPressedWithSender:" forControlEvents:64];
  uint64_t v24 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button;
  id v25 = *(id *)(v12 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button);
  NSString v26 = String._bridgeToObjectiveC()();
  [v25 setTitle:v26 forState:0];

  [*(id *)(v12 + v24) addTarget:v0 action:"optionButtonPressedWithSender:" forControlEvents:64];
  id v69 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  id v27 = [v14 mainBundle];
  v74._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v74._object = (void *)0x800000010025FB40;
  v28._object = (void *)0x800000010025FB20;
  v28._uint64_t countAndFlagsBits = 0xD000000000000010;
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v74)._countAndFlagsBits;

  id v30 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  Swift::String v31 = self;
  [v30 pointSize];
  id v32 = [v31 systemFontOfSize:];
  id v33 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleFootnote];
  id v34 = [v33 scaledFontForFont:v32 maximumPointSize:1.79769313e308];

  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100247140;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v36 = sub_10000B0CC(0, (unint64_t *)&qword_1002F02A0);
  *(void *)(inited + 40) = v34;
  *(void *)(inited + 64) = v36;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  NSString v37 = NSFontAttributeName;
  id v38 = v34;
  NSString v39 = NSForegroundColorAttributeName;
  id v40 = [v72 lightTextColor];
  *(void *)(inited + 104) = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  *(void *)(inited + 80) = v40;
  sub_1001FF520(inited);
  id v41 = objc_allocWithZone((Class)NSAttributedString);
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100136748();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v44 = [v41 initWithString:v42 attributes:isa];

  id v45 = v69;
  [v69 appendAttributedString:v44];

  Swift::String v46 = *(void **)(v12 + v70);
  uint64_t v47 = (uint64_t)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_sourceLocale];
  swift_beginAccess();
  sub_10009A8D8(v47, (uint64_t)v3);
  id v48 = v46;
  sub_100136968(v48, (uint64_t)v3);

  sub_1000CA304((uint64_t)v3);
  Swift::String v49 = *(void **)(v12 + v24);
  uint64_t v50 = (uint64_t)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_targetLocale];
  swift_beginAccess();
  sub_10009A8D8(v50, (uint64_t)v3);
  id v51 = v49;
  sub_100136968(v51, (uint64_t)v3);

  sub_1000CA304((uint64_t)v3);
  Swift::String v52 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_hintButton];
  id v53 = [v52 titleLabel];
  if (v53)
  {
    NSString v54 = v53;
    [v53 setTextAlignment:1];
  }
  id v55 = [v52 titleLabel];
  if (v55)
  {
    id v56 = v55;
    [v55 setNumberOfLines:0];
  }
  id v57 = [v52 titleLabel];
  if (v57)
  {
    uint64_t v58 = v57;
    [v57 setAdjustsFontForContentSizeCategory:1];
  }
  [v52 setAttributedTitle:v45 forState:0];
  id v59 = [v52 titleLabel];
  if (v59)
  {
    NSString v60 = v59;
    [v59 setAdjustsFontSizeToFitWidth:1];
  }
  id v61 = [v52 titleLabel];
  if (v61)
  {
    uint64_t v62 = v61;
    [v61 setMinimumScaleFactor:0.1];
  }
  [v52 setHidden:(v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_showsSettingsButton] & 1) == 0];
  [v52 addTarget:v0 action:"hintTapped" forControlEvents:64];
  id v63 = [v0 view];
  if (v63)
  {
    uint64_t v64 = v63;
    id v65 = v71;
    [v63 addSubview:v71];

    [v65 addArrangedSubview:v12];
    [v65 addArrangedSubview:v52];
    [v65 setCustomSpacing:v12 afterView:12.0];

    return;
  }
LABEL_17:
  __break(1u);
}

void sub_100135BC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_layoutContainer];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_hintButton];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_confirmationView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v3 titleLabel];
  if (v4)
  {
    id v5 = v4;
    sub_10023B960(v4);
  }
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100249A60;
  id v7 = [v1 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  id v9 = [v7 widthAnchor];

  id v10 = [v9 constraintGreaterThanOrEqualToConstant:220.0];
  *(void *)(v6 + 32) = v10;
  id v11 = [v2 centerYAnchor];
  id v12 = [v1 view];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v13 = v12;
  id v14 = [v12 centerYAnchor];

  id v15 = [v11 constraintEqualToAnchor:v14];
  *(void *)(v6 + 40) = v15;
  id v16 = [v2 leadingAnchor];
  id v17 = [v1 view];
  if (!v17)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Swift::String v18 = v17;
  id v19 = [v17 leadingAnchor];

  id v20 = [v16 constraintEqualToAnchor:v19 constant:24.0];
  *(void *)(v6 + 48) = v20;
  id v21 = [v1 view];
  if (!v21)
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v22 = v21;
  NSString v23 = self;
  id v24 = [v22 trailingAnchor];

  id v25 = [v2 trailingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:24.0];

  *(void *)(v6 + 56) = v26;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];
}

void sub_100135F18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  Swift::String v29 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v29 - v11;
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_confirmationView);
  id v14 = *(id *)(v13 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button);
  char v15 = static NSObject.== infix(_:_:)();

  if (v15)
  {
    uint64_t v16 = v1 + OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_sourceLocale;
    swift_beginAccess();
    sub_10009A8D8(v16, (uint64_t)v7);
    uint64_t v17 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v8) == 1)
    {
      sub_1000CA304((uint64_t)v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v7, v8);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v19 = (void *)Strong;
        Class isa = Locale._bridgeToObjectiveC()().super.isa;
        [v19 lidConfirmedWithLocale:isa];
        swift_unknownObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v8);
    }
  }
  id v21 = *(id *)(v13 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button);
  char v22 = static NSObject.== infix(_:_:)();

  if (v22)
  {
    uint64_t v23 = v1 + OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_targetLocale;
    swift_beginAccess();
    sub_10009A8D8(v23, (uint64_t)v5);
    uint64_t v24 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v8) == 1)
    {
      sub_1000CA304((uint64_t)v5);
    }
    else
    {
      id v25 = v29;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v29, v5, v8);
      uint64_t v26 = swift_unknownObjectWeakLoadStrong();
      if (v26)
      {
        id v27 = (void *)v26;
        Class v28 = Locale._bridgeToObjectiveC()().super.isa;
        [v27 lidConfirmedWithLocale:v28];
        swift_unknownObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v8);
    }
  }
}

uint64_t sub_1001363B8()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong cancelConfirmation];
    swift_unknownObjectRelease();
  }
  uint64_t v2 = v0 + OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_languageDownloadPresenter;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1001364A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LIDConfirmationController();
  return [super dealloc];
}

uint64_t sub_100136578()
{
  return type metadata accessor for LIDConfirmationController();
}

uint64_t type metadata accessor for LIDConfirmationController()
{
  uint64_t result = qword_1002F7330;
  if (!qword_1002F7330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001365CC()
{
  sub_1000C9F78();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unint64_t sub_100136748()
{
  unint64_t result = qword_1002EEB70;
  if (!qword_1002EEB70)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEB70);
  }
  return result;
}

void sub_1001367A0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_confirmationView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for ConfirmationView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_hintButton;
  *(void *)&v0[v2] = [self buttonWithType:0];
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_layoutContainer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = &v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_speakButtonFrame];
  *(_OWORD *)uint64_t v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[32] = 1;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_showsSettingsButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_languageDownloadPresenter + 8] = 0;
  swift_unknownObjectWeakInit();
  id v5 = &v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_sourceLocale];
  uint64_t v6 = type metadata accessor for Locale();
  id v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(&v0[OBJC_IVAR____TtC17SequoiaTranslator25LIDConfirmationController_targetLocale], 1, 1, v6);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100136968(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - v12;
  sub_10009A8D8(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_1000CA304((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  uint64_t v15 = Locale.languageCode.getter();
  if (!v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  uint64_t v17 = v15;
  Swift::String v18 = v16;
  static Locale.current.getter();
  v19._uint64_t countAndFlagsBits = v17;
  v19._object = v18;
  object = Locale.localizedString(forLanguageCode:)(v19).value._object;
  swift_bridgeObjectRelease();
  id v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v11, v7);
  if (object)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  [a1 setTitle:v22 forState:0];

  return ((uint64_t (*)(char *, uint64_t))v21)(v13, v7);
}

id sub_100136E58()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LIDDisambiguationView.Coordinator();
  return [super dealloc];
}

uint64_t type metadata accessor for LIDDisambiguationView.Coordinator()
{
  return self;
}

void *sub_100136EC4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    char v5 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_100136FEC(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100007620((uint64_t *)&unk_1002F5780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for OpenURLAction();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1001370A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100137174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10000B070(a1 + v7, (uint64_t *)&unk_1002F5780);
    sub_100007620((uint64_t *)&unk_1002F5780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100137270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  char v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F5780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10013734C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_10000B070(a1 + v7, (uint64_t *)&unk_1002F5780);
    uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100137450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100137464);
}

uint64_t sub_100137464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F73F8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100137510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100137524);
}

uint64_t sub_100137524(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F73F8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LiveActivityErrorView()
{
  uint64_t result = qword_1002F7458;
  if (!qword_1002F7458) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100137618()
{
  sub_1001376B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001376B0()
{
  if (!qword_1002F7468)
  {
    type metadata accessor for OpenURLAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F7468);
    }
  }
}

uint64_t sub_100137708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100137724()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v36[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v36[-v6];
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  char v9 = *(unsigned char *)(v0 + 8);
  uint64_t v10 = swift_retain();
  sub_100100B30(v10, v9);
  swift_release();
  char v11 = sub_100145524();
  swift_release();
  uint64_t countAndFlagsBits = 0;
  switch(v11)
  {
    case 1:
      uint64_t v13 = swift_retain();
      sub_100100B30(v13, v9);
      swift_release();
      sub_100143488((uint64_t)v7);
      swift_release();
      static Locale.current.getter();
      uint64_t v14 = Locale.sqDisplayName(context:in:)();
      unint64_t v16 = v15;
      uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
      v17(v5, v1);
      v17(v7, v1);
      if (v16) {
        uint64_t v18 = v14;
      }
      else {
        uint64_t v18 = 0x45474155474E414CLL;
      }
      if (!v16) {
        unint64_t v16 = 0xE800000000000000;
      }
      goto LABEL_13;
    case 2:
      uint64_t v19 = swift_retain();
      sub_100100B30(v19, v9);
      swift_release();
      sub_100143828((uint64_t)v7);
      swift_release();
      static Locale.current.getter();
      uint64_t v20 = Locale.sqDisplayName(context:in:)();
      unint64_t v16 = v21;
      NSString v22 = *(void (**)(unsigned char *, uint64_t))(v2 + 8);
      v22(v5, v1);
      v22(v7, v1);
      if (v16) {
        uint64_t v18 = v20;
      }
      else {
        uint64_t v18 = 0x45474155474E414CLL;
      }
      if (!v16) {
        unint64_t v16 = 0xE800000000000000;
      }
LABEL_13:
      id v23 = [self mainBundle];
      v37._object = (void *)0xE000000000000000;
      v24._object = (void *)0x800000010025FCC0;
      v24._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      v37._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v37);

      sub_100007620(&qword_1002EEC80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1002488D0;
      *(void *)(v26 + 56) = &type metadata for String;
      *(void *)(v26 + 64) = sub_1000149B4();
      *(void *)(v26 + 32) = v18;
      *(void *)(v26 + 40) = v16;
      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 4:
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = (id)SFLocalizableWAPIStringKeyForKey();

      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::String v31 = v30;

      id v32 = [self mainBundle];
      v38._object = (void *)0xE000000000000000;
      v33._uint64_t countAndFlagsBits = v29;
      v33._object = v31;
      v34._uint64_t countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v38._uint64_t countAndFlagsBits = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v38)._countAndFlagsBits;
      swift_bridgeObjectRelease();

      break;
    case 7:
      return countAndFlagsBits;
    default:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t countAndFlagsBits = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return countAndFlagsBits;
}

uint64_t sub_100137C50()
{
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v2 - 8);
  char v3 = *(unsigned char *)(v0 + 8);
  uint64_t v4 = swift_retain();
  sub_100100B30(v4, v3);
  swift_release();
  char v5 = sub_100145524();
  swift_release();
  if (v5 == 6 || v5 == 4 || (uint64_t result = 0, !v5))
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    return String.init(localized:table:bundle:locale:comment:)();
  }
  return result;
}

uint64_t (*sub_100137DF0())()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LiveActivityErrorView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  char v5 = *(unsigned char *)(v0 + 8);
  uint64_t v6 = swift_retain();
  sub_100100B30(v6, v5);
  swift_release();
  char v7 = sub_100145524();
  swift_release();
  if (v7 == 6)
  {
    sub_1001393F0(v1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v10 = swift_allocObject() + v12;
    char v11 = sub_1001394BC;
    goto LABEL_7;
  }
  if (v7 == 4)
  {
    sub_1001393F0(v1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v10 = swift_allocObject() + v13;
    char v11 = sub_1001394D8;
    goto LABEL_7;
  }
  uint64_t v8 = 0;
  if (!v7)
  {
    sub_1001393F0(v1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v10 = swift_allocObject() + v9;
    char v11 = sub_100139670;
LABEL_7:
    uint64_t v8 = v11;
    sub_100139458((uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  }
  return v8;
}

uint64_t sub_100137FD4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OpenURLAction();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LiveActivityErrorView();
  uint64_t v12 = sub_100100AF0((uint64_t)v11);
  a2(v12);
  OpenURLAction.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  LOBYTE(a1) = *(unsigned char *)(a1 + 8);
  uint64_t v13 = swift_retain();
  sub_100100B30(v13, a1);
  swift_release();
  sub_1001476D4(0);
  return swift_release();
}

uint64_t sub_1001381A4()
{
  uint64_t v1 = sub_100007620(&qword_1002F7498);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F74A0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0x4034000000000000;
  v3[16] = 0;
  uint64_t v7 = sub_100007620(&qword_1002F74A8);
  sub_100138344(v0, &v3[*(int *)(v7 + 44)]);
  char v8 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_10000C3A4((uint64_t)v3, (uint64_t)v6, &qword_1002F7498);
  uint64_t v17 = &v6[*(int *)(v4 + 36)];
  char *v17 = v8;
  *((void *)v17 + 1) = v10;
  *((void *)v17 + 2) = v12;
  *((void *)v17 + 3) = v14;
  *((void *)v17 + 4) = v16;
  v17[40] = 0;
  sub_10000B070((uint64_t)v3, &qword_1002F7498);
  static Edge.Set.top.getter();
  sub_100138EC4();
  View.scenePadding(_:)();
  return sub_10000B070((uint64_t)v6, &qword_1002F74A0);
}

uint64_t sub_100138344@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v93 = a1;
  long long v91 = a2;
  uint64_t v2 = type metadata accessor for ButtonBorderShape();
  uint64_t v84 = *(void *)(v2 - 8);
  uint64_t v85 = v2;
  __chkstk_darwin(v2);
  uint64_t v83 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for BorderedButtonStyle();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  __chkstk_darwin(v4);
  unsigned __int8 v80 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100007620(&qword_1002F74C0);
  __chkstk_darwin(v70);
  Swift::String v73 = (uint64_t *)((char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = type metadata accessor for ControlSize();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  Swift::String v71 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100007620(&qword_1002F74C8);
  __chkstk_darwin(v86);
  Swift::String v75 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F74D0);
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  __chkstk_darwin(v9);
  uint64_t v77 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F74D8);
  uint64_t v87 = *(void *)(v11 - 8);
  uint64_t v88 = v11;
  __chkstk_darwin(v11);
  uint64_t v76 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F74E0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v90 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v89 = (uint64_t)&v68 - v16;
  uint64_t v17 = static VerticalAlignment.center.getter();
  sub_100138CE4((uint64_t)&v105);
  uint64_t v18 = *((void *)&v107 + 1);
  uint64_t v19 = v108;
  char v20 = BYTE8(v108);
  uint64_t v92 = v109;
  uint64_t v96 = v17;
  uint64_t v97 = 0;
  char v98 = 1;
  long long v99 = v105;
  long long v100 = v106;
  long long v101 = v107;
  uint64_t v102 = v108;
  char v103 = BYTE8(v108);
  uint64_t v104 = v109;
  static Alignment.leading.getter();
  sub_10001D01C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v105, 0.0, 1, 0.0, 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10001FC84(v18, v19, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_100137C50();
  if (!v22) {
    goto LABEL_5;
  }
  uint64_t v23 = v21;
  uint64_t v24 = v22;
  Swift::String v25 = sub_100137DF0();
  if (!v25)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v51 = v89;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v89, 1, 1, v88);
    goto LABEL_6;
  }
  uint64_t v92 = v26;
  uint64_t v93 = (uint64_t)v25;
  swift_retain();
  uint64_t v69 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  id v28 = v71;
  uint64_t v29 = v72;
  uint64_t v30 = v74;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v71, enum case for ControlSize.large(_:), v74);
  uint64_t v31 = v23;
  uint64_t v32 = swift_getKeyPath();
  Swift::String v33 = v73;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v73 + *(int *)(v70 + 28), v28, v30);
  *Swift::String v33 = v32;
  Swift::String v34 = (uint64_t *)v75;
  sub_10000C3A4((uint64_t)v33, (uint64_t)&v75[*(int *)(v86 + 36)], &qword_1002F74C0);
  *Swift::String v34 = v31;
  v34[1] = v24;
  uint64_t v35 = v92;
  uint64_t v36 = v93;
  v34[2] = v93;
  v34[3] = v35;
  uint64_t v37 = v69;
  void v34[4] = KeyPath;
  v34[5] = v37;
  sub_100019614(v36);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10000B070((uint64_t)v33, &qword_1002F74C0);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  swift_bridgeObjectRelease();
  sub_1000324E4(v36);
  swift_release();
  swift_release();
  Swift::String v38 = v80;
  BorderedButtonStyle.init()();
  sub_100139068();
  sub_1001391FC();
  NSString v39 = v77;
  uint64_t v40 = v82;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v38, v40);
  sub_10000B070((uint64_t)v34, &qword_1002F74C8);
  id v41 = v83;
  static ButtonBorderShape.capsule.getter();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = v88;
  uint64_t v44 = (uint64_t)v76;
  id v45 = (uint64_t *)&v76[*(int *)(v88 + 36)];
  uint64_t v46 = sub_100007620(&qword_1002F7520);
  uint64_t v48 = v84;
  uint64_t v47 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))((char *)v45 + *(int *)(v46 + 28), v41, v85);
  *id v45 = v42;
  uint64_t v50 = v78;
  uint64_t v49 = v79;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v44, v39, v79);
  sub_1000324E4(v93);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v47);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v49);
  uint64_t v51 = v89;
  sub_100139388(v44, v89);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v87 + 56))(v51, 0, 1, v43);
LABEL_6:
  uint64_t v53 = v90;
  Swift::String v52 = v91;
  sub_10000C3A4(v51, v90, &qword_1002F74E0);
  long long v54 = v116;
  v94[10] = v115;
  v94[11] = v116;
  long long v55 = v117;
  v94[12] = v117;
  long long v56 = v111;
  long long v57 = v112;
  v94[6] = v111;
  v94[7] = v112;
  long long v58 = v114;
  long long v59 = v113;
  v94[8] = v113;
  v94[9] = v114;
  long long v60 = v107;
  long long v61 = v108;
  v94[2] = v107;
  v94[3] = v108;
  long long v62 = v110;
  long long v63 = v109;
  v94[4] = v109;
  v94[5] = v110;
  long long v64 = v106;
  long long v65 = v105;
  v94[0] = v105;
  v94[1] = v106;
  v52[10] = v115;
  v52[11] = v54;
  v52[12] = v55;
  v52[6] = v56;
  v52[7] = v57;
  v52[8] = v59;
  v52[9] = v58;
  v52[2] = v60;
  v52[3] = v61;
  v52[4] = v63;
  v52[5] = v62;
  *Swift::String v52 = v65;
  v52[1] = v64;
  uint64_t v66 = sub_100007620(&qword_1002F74E8);
  sub_10000C3A4(v53, (uint64_t)v52 + *(int *)(v66 + 48), &qword_1002F74E0);
  sub_10001FDA0((uint64_t)v94);
  sub_10000B070(v51, &qword_1002F74E0);
  sub_10000B070(v53, &qword_1002F74E0);
  v95[10] = v115;
  v95[11] = v116;
  v95[12] = v117;
  v95[6] = v111;
  v95[7] = v112;
  v95[8] = v113;
  v95[9] = v114;
  v95[2] = v107;
  v95[3] = v108;
  v95[4] = v109;
  v95[5] = v110;
  v95[0] = v105;
  v95[1] = v106;
  return sub_100138F64((uint64_t)v95);
}

uint64_t sub_100138CE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v19 = Image.init(_internalSystemName:)();
  uint64_t v18 = static Font.title.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = static Color.translateAccentColor.getter();
  uint64_t v15 = swift_getKeyPath();
  sub_100137724();
  sub_10000C350();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_10001FC84(v2, v4, v6);
  swift_bridgeObjectRelease();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v11 & 1;
  *(void *)(a1 + 64) = v13;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001FC74(v7, v9, v11 & 1);
  swift_bridgeObjectRetain();
  sub_10001FC84(v7, v9, v11 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_100138EC4()
{
  unint64_t result = qword_1002F74B0;
  if (!qword_1002F74B0)
  {
    sub_100007928(&qword_1002F74A0);
    sub_100014894(&qword_1002F74B8, &qword_1002F7498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F74B0);
  }
  return result;
}

uint64_t sub_100138F64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10001FC84(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100139004()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100139028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100139278(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ControlSize, (uint64_t (*)(char *))&EnvironmentValues.controlSize.setter);
}

unint64_t sub_100139068()
{
  unint64_t result = qword_1002F74F0;
  if (!qword_1002F74F0)
  {
    sub_100007928(&qword_1002F74C8);
    sub_100139108();
    sub_100014894(&qword_1002F7510, &qword_1002F74C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F74F0);
  }
  return result;
}

unint64_t sub_100139108()
{
  unint64_t result = qword_1002F74F8;
  if (!qword_1002F74F8)
  {
    sub_100007928(&qword_1002F7500);
    sub_1001391A8();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F74F8);
  }
  return result;
}

unint64_t sub_1001391A8()
{
  unint64_t result = qword_1002F7508;
  if (!qword_1002F7508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7508);
  }
  return result;
}

unint64_t sub_1001391FC()
{
  unint64_t result = qword_1002F7518;
  if (!qword_1002F7518)
  {
    type metadata accessor for BorderedButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7518);
  }
  return result;
}

uint64_t sub_100139254()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100139278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_100139348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100139278(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_100139388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F74D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001393F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityErrorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100139458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LiveActivityErrorView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001394BC()
{
  return sub_1001394F0((void (*)(uint64_t))&static URL.downloadLanguagesURL.getter);
}

uint64_t sub_1001394D8()
{
  return sub_1001394F0((void (*)(uint64_t))&static URL.topLevelSettingsURL.getter);
}

uint64_t sub_1001394F0(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for LiveActivityErrorView() - 8);
  return sub_100137FD4(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100139558()
{
  uint64_t v1 = (int *)(type metadata accessor for LiveActivityErrorView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[7];
  sub_100007620((uint64_t *)&unk_1002F5780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100139670()
{
  return sub_1001394F0((void (*)(uint64_t))&static URL.translateAppURL.getter);
}

uint64_t sub_100139690()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LiveActivityResultsView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for LiveActivityResultsView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LiveActivityResultsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LiveActivityResultsView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for LiveActivityResultsView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityResultsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityResultsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityResultsView()
{
  return &type metadata for LiveActivityResultsView;
}

uint64_t sub_1001399A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001399C0()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  __chkstk_darwin(v1);
  long long v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F7670);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v40 - v11;
  char v13 = *(unsigned char *)(v0 + 8);
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_100100B30(v14, v13);
  swift_release();
  swift_getKeyPath();
  uint64_t v45 = v15;
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v17 = *(void *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  uint64_t v16 = *(void *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation + 8);
  swift_unknownObjectRetain();
  swift_release();
  if (v17)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 64))(ObjectType, v16);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v40 = v10;
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_100100B30(v20, v13);
    swift_release();
    swift_getKeyPath();
    uint64_t v45 = v21;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v22 = v21 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult;
    swift_beginAccess();
    sub_10000C3A4(v22, (uint64_t)v6, &qword_1002F7668);
    swift_release();
    uint64_t v23 = v42;
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v6, 1, v42);
    uint64_t v25 = v43;
    if (v24 == 1)
    {
      uint64_t v26 = v44;
      sub_10000B070((uint64_t)v6, &qword_1002F7668);
      uint64_t v27 = swift_retain();
      sub_100100B30(v27, v13);
      swift_release();
      sub_100143488((uint64_t)v3);
      swift_release();
      id v28 = [self mainBundle];
      v29._object = (void *)0x800000010025FD00;
      v29._uint64_t countAndFlagsBits = 0xD000000000000011;
      v30._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v30._object = (void *)0xEB00000000656C62;
      uint64_t countAndFlagsBits = Locale.ltLocalizedAppString(_:table:bundle:)(v29, v30, (NSBundle)v28)._countAndFlagsBits;

      (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v26);
    }
    else
    {
      uint64_t v31 = *(int *)(v23 + 48);
      uint64_t v32 = &v12[v31];
      Swift::String v33 = (uint64_t *)&v6[v31];
      Swift::String v34 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      uint64_t v35 = v44;
      v34(v12, v6, v44);
      uint64_t countAndFlagsBits = *v33;
      uint64_t v36 = v33[1];
      *(void *)uint64_t v32 = *v33;
      *((void *)v32 + 1) = v36;
      uint64_t v37 = v40;
      Swift::String v38 = (uint64_t *)&v40[*(int *)(v23 + 48)];
      v34(v40, v12, v35);
      *Swift::String v38 = countAndFlagsBits;
      v38[1] = v36;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v35);
    }
  }
  return countAndFlagsBits;
}

uint64_t sub_100139E44()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100100B30(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation + 8);
  swift_unknownObjectRetain();
  swift_release();
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 72))(ObjectType, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v8 = swift_retain();
    uint64_t v9 = sub_100100B30(v8, v1);
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    int v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
    swift_release();
    if (v10) {
      return 0;
    }
    else {
      return 0x6161616161;
    }
  }
  return v7;
}

uint64_t sub_100139FF8()
{
  long long v8 = *(_OWORD *)(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001F72C((uint64_t)&v8);
  if (!v6) {
    goto LABEL_5;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v1 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_100007620(&qword_1002F3A08);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1002488D0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_10001F72C((uint64_t)&v8);
    unint64_t v3 = v6;
    unint64_t v4 = v7;
    if (!v7)
    {
      unint64_t v3 = 0;
      unint64_t v4 = 0xE000000000000000;
    }
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v4;
    *(_OWORD *)(v2 + 48) = 0u;
    *(_OWORD *)(v2 + 64) = 0u;
    *(void *)(v2 + 80) = 0;
  }
  else
  {
LABEL_5:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_10001F72C((uint64_t)&v8);
    if (v6)
    {
      sub_10013DF58(v0);
      uint64_t v2 = (uint64_t)sub_10013E438(v6, v0);
      sub_10013E6B0(v0);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_10013A200()
{
  uint64_t v1 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F7600);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *(unsigned char *)(v0 + 8);
  uint64_t v9 = swift_retain();
  uint64_t v10 = sub_100100B30(v9, v8);
  swift_release();
  swift_getKeyPath();
  v19[1] = v10;
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = v10 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult;
  swift_beginAccess();
  sub_10000C3A4(v11, (uint64_t)v3, (uint64_t *)&unk_1002FA760);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10000B070((uint64_t)v3, (uint64_t *)&unk_1002FA760);
    return 0;
  }
  else
  {
    uint64_t v13 = *(int *)(v4 + 48);
    uint64_t v14 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v3, v14);
    int v15 = v3[v13];
    v7[v13] = v15;
    uint64_t v16 = swift_retain();
    uint64_t v17 = sub_100100B30(v16, v8);
    swift_release();
    swift_getKeyPath();
    v19[0] = v17;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
    swift_unknownObjectRetain();
    swift_release();
    sub_10000B070((uint64_t)v7, &qword_1002F7600);
    swift_unknownObjectRelease();
    if (v18) {
      return v15 ^ 1u;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10013A4F0()
{
  char v1 = *(unsigned char *)(v0 + 8);
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_100100B30(v2, v1);
  swift_release();
  swift_getKeyPath();
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
  swift_release();
  if (v4) {
    return 0;
  }
  uint64_t v5 = swift_retain();
  uint64_t v6 = sub_100100B30(v5, v1);
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  swift_unknownObjectRetain();
  swift_release();
  if (v7)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_10013A65C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v3 = type metadata accessor for OpacityTransition();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = sub_100007620(&qword_1002EF4A0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EF4A8);
  __chkstk_darwin(v13 - 8);
  int v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F7528);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007620(&qword_1002F7530);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v46 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007620(&qword_1002F7538);
  __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = static HorizontalAlignment.leading.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  uint64_t v24 = sub_100007620(&qword_1002F7540);
  sub_10013ABA4(v2, (uint64_t)&v12[*(int *)(v24 + 44)]);
  uint64_t v25 = static Alignment.leading.getter();
  sub_10001D1DC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v25, v26);
  sub_10000B070((uint64_t)v12, &qword_1002EF4A0);
  OpacityTransition.init()();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_10013E15C(qword_1002F3BC0, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
  uint64_t v27 = AnyTransition.init<A>(_:)();
  sub_10000C3A4((uint64_t)v15, (uint64_t)v19, &qword_1002EF4A8);
  *(void *)&v19[*(int *)(v17 + 44)] = v27;
  uint64_t v28 = v4;
  uint64_t v29 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v3);
  sub_10000B070((uint64_t)v15, &qword_1002EF4A8);
  uint64_t v30 = static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v31 = sub_100139E44();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v35 = v34 != 0;
  sub_10000C3A4((uint64_t)v19, v29, &qword_1002F7528);
  uint64_t v36 = v29 + *(int *)(v21 + 44);
  *(void *)uint64_t v36 = v30;
  *(unsigned char *)(v36 + 8) = v35;
  sub_10000B070((uint64_t)v19, &qword_1002F7528);
  uint64_t v37 = static Animation.spring(response:dampingFraction:blendDuration:)();
  char v38 = *(unsigned char *)(v2 + 8);
  uint64_t v39 = swift_retain();
  uint64_t v40 = sub_100100B30(v39, v38);
  swift_release();
  swift_getKeyPath();
  uint64_t v50 = v40;
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v41 = *(void *)(v40 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  swift_unknownObjectRetain();
  swift_release();
  if (v41) {
    swift_unknownObjectRelease();
  }
  uint64_t v42 = v47;
  sub_10000C3A4(v29, v47, &qword_1002F7530);
  uint64_t v43 = v42 + *(int *)(v48 + 36);
  *(void *)uint64_t v43 = v37;
  *(unsigned char *)(v43 + 8) = v41 != 0;
  sub_10000B070(v29, &qword_1002F7530);
  return sub_10001323C(v42, v49, &qword_1002F7538);
}

uint64_t sub_10013ABA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v191 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F7550);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v173 = (char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v172 = (uint64_t *)((char *)&v157 - v6);
  uint64_t v7 = sub_100007620(&qword_1002F7558);
  __chkstk_darwin(v7 - 8);
  uint64_t v161 = (uint64_t)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F7560);
  __chkstk_darwin(v9 - 8);
  uint64_t v160 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_100007620(&qword_1002F7568);
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v11 = __chkstk_darwin(v170);
  uint64_t v159 = (char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v158 = (uint64_t)&v157 - v13;
  uint64_t v14 = sub_100007620(&qword_1002F7570);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v171 = (uint64_t)&v157 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v194 = (uint64_t)&v157 - v17;
  uint64_t v18 = sub_100007620(&qword_1002F7578);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v186 = (char *)&v157 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v185 = (char *)&v157 - v21;
  uint64_t v22 = type metadata accessor for Locale.Language();
  uint64_t v183 = *(void *)(v22 - 8);
  uint64_t v184 = v22;
  __chkstk_darwin(v22);
  uint64_t v182 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100007620(&qword_1002F69A8);
  __chkstk_darwin(v24 - 8);
  uint64_t v176 = (uint64_t *)((char *)&v157 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = type metadata accessor for Locale();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v195 = v26;
  uint64_t v196 = v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v157 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  unint64_t v32 = (char *)&v157 - v31;
  uint64_t v174 = type metadata accessor for LabeledTextView();
  __chkstk_darwin(v174);
  uint64_t v34 = (char *)&v157 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100007620(&qword_1002F7580);
  __chkstk_darwin(v175);
  uint64_t v177 = (uint64_t)&v157 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_100007620(&qword_1002F7588);
  __chkstk_darwin(v181);
  uint64_t v180 = (char *)&v157 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100007620(&qword_1002F7590);
  uint64_t v187 = *(void *)(v37 - 8);
  uint64_t v188 = v37;
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v179 = (char *)&v157 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v178 = (char *)&v157 - v40;
  uint64_t v41 = sub_100007620(&qword_1002F7598);
  uint64_t v42 = __chkstk_darwin(v41 - 8);
  uint64_t v190 = (uint64_t)&v157 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v193 = (char *)&v157 - v44;
  LODWORD(v45) = *(unsigned __int8 *)(a1 + 8);
  uint64_t v46 = swift_retain();
  uint64_t v47 = sub_100100B30(v46, (char)v45);
  swift_release();
  swift_getKeyPath();
  uint64_t v198 = v47;
  uint64_t v192 = sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v48 = *(void *)(v47 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  swift_unknownObjectRetain();
  swift_release();
  int v189 = (int)v45;
  if (!v48) {
    goto LABEL_4;
  }
  swift_unknownObjectRelease();
  uint64_t v49 = swift_retain();
  sub_100100B30(v49, (char)v45);
  swift_release();
  id v50 = sub_100143218();
  unsigned __int8 v51 = [v50 isPassthrough];
  swift_release();

  if (v51)
  {
    uint64_t v52 = 1;
    uint64_t v53 = (uint64_t)v193;
    uint64_t v55 = v187;
    uint64_t v54 = v188;
  }
  else
  {
LABEL_4:
    uint64_t v166 = v34;
    uint64_t v56 = swift_retain();
    sub_100100B30(v56, (char)v45);
    swift_release();
    sub_100143488((uint64_t)v32);
    static Locale.current.getter();
    uint64_t v57 = Locale.sqDisplayName(context:in:)();
    unint64_t v59 = v58;
    uint64_t v60 = a1;
    uint64_t v62 = v196 + 8;
    long long v61 = *(void (**)(char *, uint64_t))(v196 + 8);
    long long v63 = v30;
    uint64_t v64 = v195;
    v61(v63, v195);
    uint64_t v167 = v32;
    uint64_t v196 = v62;
    uint64_t v168 = (void (*)(uint64_t, uint64_t))v61;
    v61(v32, v64);
    a1 = v60;
    char v65 = (char)v45;
    swift_release();
    if (v59) {
      uint64_t v66 = v57;
    }
    else {
      uint64_t v66 = 0;
    }
    uint64_t v165 = v66;
    unint64_t v67 = 0xE000000000000000;
    if (v59) {
      unint64_t v67 = v59;
    }
    unint64_t v164 = v67;
    uint64_t v163 = sub_1001399C0();
    uint64_t v162 = v68;
    uint64_t v69 = swift_retain();
    uint64_t v70 = sub_100100B30(v69, (char)v45);
    swift_release();
    swift_getKeyPath();
    uint64_t v198 = v70;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v71 = *(void *)(v70 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
    swift_unknownObjectRetain();
    swift_release();
    if (v71)
    {
      swift_unknownObjectRelease();
      uint64_t v72 = swift_retain();
      sub_100100B30(v72, (char)v45);
      swift_release();
      id v73 = sub_100143218();
      unsigned __int8 v74 = [v73 isPassthrough];
      swift_release();

      char v75 = v74 ^ 1;
    }
    else
    {
      char v75 = 0;
    }
    uint64_t v76 = (uint64_t)v166;
    uint64_t v77 = (_OWORD *)swift_allocObject();
    long long v78 = *(_OWORD *)(a1 + 16);
    v77[1] = *(_OWORD *)a1;
    v77[2] = v78;
    long long v79 = *(_OWORD *)(a1 + 48);
    v77[3] = *(_OWORD *)(a1 + 32);
    v77[4] = v79;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v81 = (uint64_t)v176;
    uint64_t *v176 = KeyPath;
    sub_100007620((uint64_t *)&unk_1002F5790);
    swift_storeEnumTagMultiPayload();
    uint64_t v82 = swift_getKeyPath();
    uint64_t v83 = swift_getKeyPath();
    uint64_t v84 = v174;
    *(void *)(v76 + *(int *)(v174 + 44)) = v83;
    sub_100007620(&qword_1002FACB0);
    swift_storeEnumTagMultiPayload();
    unint64_t v85 = v164;
    *(void *)uint64_t v76 = v165;
    *(void *)(v76 + 8) = v85;
    uint64_t v86 = v162;
    *(void *)(v76 + 16) = v163;
    *(void *)(v76 + 24) = v86;
    *(unsigned char *)(v76 + 32) = 2;
    *(unsigned char *)(v76 + 33) = v75;
    *(void *)(v76 + 40) = sub_10013DF08;
    *(void *)(v76 + 48) = v77;
    sub_10001323C(v81, v76 + *(int *)(v84 + 36), &qword_1002F69A8);
    uint64_t v87 = v76 + *(int *)(v84 + 40);
    *(void *)uint64_t v87 = v82;
    *(unsigned char *)(v87 + 8) = 0;
    sub_10013DF58(a1);
    uint64_t v88 = static Color.sourceTextColor.getter();
    uint64_t v89 = v177;
    sub_10013E1F4(v76, v177, (uint64_t (*)(void))type metadata accessor for LabeledTextView);
    *(void *)(v89 + *(int *)(v175 + 36)) = v88;
    sub_10013E25C(v76, (uint64_t (*)(void))type metadata accessor for LabeledTextView);
    uint64_t v90 = swift_getKeyPath();
    uint64_t v91 = swift_retain();
    sub_100100B30(v91, v65);
    swift_release();
    uint64_t v92 = (uint64_t)v167;
    sub_100143488((uint64_t)v167);
    swift_release();
    uint64_t v93 = v182;
    Locale.language.getter();
    v168(v92, v195);
    uint64_t v94 = (uint64_t)v180;
    long long v95 = (uint64_t *)&v180[*(int *)(v181 + 36)];
    uint64_t v96 = sub_100007620(&qword_1002F75A0);
    uint64_t v98 = v183;
    uint64_t v97 = v184;
    (*(void (**)(char *, char *, uint64_t))(v183 + 16))((char *)v95 + *(int *)(v96 + 28), v93, v184);
    *long long v95 = v90;
    sub_10000C3A4(v89, v94, &qword_1002F7580);
    (*(void (**)(char *, uint64_t))(v98 + 8))(v93, v97);
    sub_10000B070(v89, &qword_1002F7580);
    long long v99 = (_OWORD *)swift_allocObject();
    long long v100 = *(_OWORD *)(a1 + 16);
    v99[1] = *(_OWORD *)a1;
    v99[2] = v100;
    long long v101 = *(_OWORD *)(a1 + 48);
    v99[3] = *(_OWORD *)(a1 + 32);
    v99[4] = v101;
    sub_10013DF58(a1);
    sub_10013DFEC();
    uint64_t v45 = v179;
    View.onTapGesture(count:perform:)();
    swift_release();
    sub_10000B070(v94, &qword_1002F7588);
    uint64_t v55 = v187;
    uint64_t v54 = v188;
    uint64_t v102 = *(void (**)(char *, char *, uint64_t))(v187 + 32);
    char v103 = v178;
    v102(v178, v45, v188);
    uint64_t v53 = (uint64_t)v193;
    v102(v193, v103, v54);
    uint64_t v52 = 0;
    LOBYTE(v45) = v189;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v53, v52, 1, v54);
  uint64_t v104 = sub_100139E44();
  unint64_t v106 = v105;
  swift_bridgeObjectRelease();
  uint64_t v107 = HIBYTE(v106) & 0xF;
  if ((v106 & 0x2000000000000000) == 0) {
    uint64_t v107 = v104 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v108 = v194;
  if (v107)
  {
    uint64_t v109 = swift_retain();
    sub_100100B30(v109, (char)v45);
    swift_release();
    id v110 = sub_100143218();
    char v111 = (char)v45;
    unsigned __int8 v112 = [v110 isPassthrough];
    swift_release();

    if (v112)
    {
      uint64_t v113 = 1;
      uint64_t v114 = v170;
      uint64_t v115 = v169;
    }
    else
    {
      uint64_t v119 = swift_retain();
      uint64_t v120 = sub_100100B30(v119, v111);
      swift_release();
      swift_getKeyPath();
      uint64_t v198 = v120;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      int v121 = *(unsigned __int8 *)(v120 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
      swift_release();
      if (v121 == 1) {
        LODWORD(v196) = sub_10013A200();
      }
      else {
        LODWORD(v196) = 1;
      }
      unsigned __int8 v122 = (_OWORD *)swift_allocObject();
      long long v123 = *(_OWORD *)(a1 + 16);
      v122[1] = *(_OWORD *)a1;
      v122[2] = v123;
      long long v124 = *(_OWORD *)(a1 + 48);
      v122[3] = *(_OWORD *)(a1 + 32);
      v122[4] = v124;
      char v197 = 0;
      sub_10013DF58(a1);
      State.init(wrappedValue:)();
      char v125 = v198;
      uint64_t v126 = v199;
      uint64_t v127 = enum case for ColorScheme.dark(_:);
      uint64_t v128 = type metadata accessor for ColorScheme();
      uint64_t v129 = *(void *)(v128 - 8);
      uint64_t v130 = (uint64_t)v160;
      (*(void (**)(char *, uint64_t, uint64_t))(v129 + 104))(v160, v127, v128);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v130, 0, 1, v128);
      uint64_t v131 = v161;
      sub_10000C3A4(v130, v161, &qword_1002F7560);
      uint64_t v132 = v170;
      uint64_t v133 = (uint64_t)v159;
      sub_10000C3A4(v131, (uint64_t)&v159[*(int *)(v170 + 36)], &qword_1002F7558);
      *(_WORD *)uint64_t v133 = 513;
      *(unsigned char *)(v133 + 2) = v196 & 1;
      *(void *)(v133 + 8) = sub_10013E1A8;
      *(void *)(v133 + 16) = v122;
      *(unsigned char *)(v133 + 24) = v125;
      *(void *)(v133 + 32) = v126;
      swift_retain();
      swift_retain();
      sub_10000B070(v131, &qword_1002F7558);
      sub_10000B070(v130, &qword_1002F7560);
      swift_release();
      swift_release();
      uint64_t v134 = v158;
      sub_10001323C(v133, v158, &qword_1002F7568);
      uint64_t v108 = v194;
      sub_10001323C(v134, v194, &qword_1002F7568);
      uint64_t v114 = v132;
      uint64_t v113 = 0;
      uint64_t v53 = (uint64_t)v193;
      uint64_t v115 = v169;
      char v111 = v189;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v115 + 56))(v108, v113, 1, v114);
    uint64_t v135 = swift_retain();
    sub_100100B30(v135, v111);
    swift_release();
    id v136 = sub_100143218();
    unsigned int v137 = [v136 isPassthrough];
    swift_release();

    if (v137)
    {
      uint64_t v138 = swift_retain();
      sub_100100B30(v138, v111);
      swift_release();
      id v139 = sub_100143218();
      unsigned int v140 = [v139 isPassthrough];
      swift_release();

      if (!v140) {
        goto LABEL_28;
      }
      uint64_t v141 = swift_retain();
      uint64_t v142 = sub_100100B30(v141, v111);
      swift_release();
      swift_getKeyPath();
      uint64_t v198 = v142;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v143 = *(void *)(v142 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
      swift_unknownObjectRetain();
      swift_release();
      if (!v143)
      {
LABEL_28:
        uint64_t v148 = sub_100007620(&qword_1002F75E0);
        uint64_t v145 = (uint64_t)v172;
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v172, 1, 1, v148);
        goto LABEL_29;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v144 = static VerticalAlignment.bottom.getter();
    uint64_t v145 = (uint64_t)v172;
    *uint64_t v172 = v144;
    *(void *)(v145 + 8) = 0;
    *(unsigned char *)(v145 + 16) = 1;
    uint64_t v146 = sub_100007620(&qword_1002F75D8);
    sub_10013CECC(a1, v145 + *(int *)(v146 + 44));
    uint64_t v147 = sub_100007620(&qword_1002F75E0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v145, 0, 1, v147);
LABEL_29:
    uint64_t v149 = (uint64_t)v173;
    uint64_t v117 = (uint64_t)v185;
    uint64_t v118 = (uint64_t)v186;
    uint64_t v150 = v171;
    sub_10000C3A4(v108, v171, &qword_1002F7570);
    sub_10000C3A4(v145, v149, &qword_1002F7550);
    sub_10000C3A4(v150, v118, &qword_1002F7570);
    uint64_t v151 = sub_100007620(&qword_1002F75E8);
    sub_10000C3A4(v149, v118 + *(int *)(v151 + 48), &qword_1002F7550);
    sub_10000B070(v145, &qword_1002F7550);
    sub_10000B070(v108, &qword_1002F7570);
    sub_10000B070(v149, &qword_1002F7550);
    sub_10000B070(v150, &qword_1002F7570);
    uint64_t v152 = sub_100007620(&qword_1002F75F0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56))(v118, 0, 1, v152);
    sub_10001323C(v118, v117, &qword_1002F7578);
    goto LABEL_30;
  }
  uint64_t v116 = sub_100007620(&qword_1002F75F0);
  uint64_t v117 = (uint64_t)v185;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v185, 1, 1, v116);
  uint64_t v118 = (uint64_t)v186;
LABEL_30:
  uint64_t v153 = v190;
  sub_10000C3A4(v53, v190, &qword_1002F7598);
  sub_10000C3A4(v117, v118, &qword_1002F7578);
  uint64_t v154 = v191;
  sub_10000C3A4(v153, v191, &qword_1002F7598);
  uint64_t v155 = sub_100007620(&qword_1002F75F8);
  sub_10000C3A4(v118, v154 + *(int *)(v155 + 48), &qword_1002F7578);
  sub_10000B070(v117, &qword_1002F7578);
  sub_10000B070(v53, &qword_1002F7598);
  sub_10000B070(v118, &qword_1002F7578);
  return sub_10000B070(v153, &qword_1002F7598);
}

uint64_t sub_10013BECC()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10013BF7C;
  return sub_10013C0B8(1);
}

uint64_t sub_10013BF7C()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013EC14, v1, v0);
}

uint64_t sub_10013C0B8(char a1)
{
  *(void *)(v2 + 104) = v1;
  *(unsigned char *)(v2 + 216) = a1;
  uint64_t v3 = type metadata accessor for URL();
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = *(void *)(v3 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Locale();
  *(void *)(v2 + 136) = v4;
  *(void *)(v2 + 144) = *(void *)(v4 - 8);
  *(void *)(v2 + 152) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URLQueryItem();
  *(void *)(v2 + 160) = v5;
  *(void *)(v2 + 168) = *(void *)(v5 - 8);
  *(void *)(v2 + 176) = swift_task_alloc();
  *(void *)(v2 + 184) = swift_task_alloc();
  *(void *)(v2 + 192) = swift_task_alloc();
  *(void *)(v2 + 200) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 208) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013C2C4, v7, v6);
}

uint64_t sub_10013C2C4()
{
  uint64_t v71 = v0;
  swift_release();
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 216);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v70 = v6;
    if (v4) {
      uint64_t v7 = 7562617;
    }
    else {
      uint64_t v7 = 28526;
    }
    if (v4) {
      unint64_t v8 = 0xE300000000000000;
    }
    else {
      unint64_t v8 = 0xE200000000000000;
    }
    *(void *)(v0 + 96) = sub_100202FD4(v7, v8, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Opening Staccato translation in Translate app (editable: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = *(void *)(v0 + 104);
  sub_100007620(&qword_1002F7640);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v12;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v13 = sub_1001FF7C0(inited);
  sub_100007620(&qword_1002FC500);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v69 = *(void *)(v9 + 72);
  unint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1002488D0;
  unint64_t v68 = v14;
  sub_1001399C0();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  LOBYTE(v10) = *(unsigned char *)(v10 + 8);
  uint64_t v16 = swift_retain();
  char v67 = v10;
  uint64_t v17 = sub_100100B30(v16, v10);
  swift_release();
  swift_getKeyPath();
  *(void *)(v0 + 72) = v17;
  sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  uint64_t v19 = *(void *)(v17 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation + 8);
  swift_unknownObjectRetain();
  swift_release();
  if (v18)
  {
    unint64_t v63 = v13;
    uint64_t v20 = *(void *)(v0 + 144);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v22 = *(void *)(v0 + 136);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v19 + 32))(ObjectType, v19);
    Locale.ltIdentifier.getter();
    char v65 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v65(v21, v22);
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v24 = *(void *)(v15 + 16);
    unint64_t v23 = *(void *)(v15 + 24);
    if (v24 >= v23 >> 1) {
      unint64_t v15 = sub_100202CA4(v23 > 1, v24 + 1, 1, v15);
    }
    uint64_t v25 = *(void *)(v0 + 200);
    uint64_t v26 = *(void *)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 152);
    uint64_t v29 = *(void *)(v0 + 136);
    *(void *)(v15 + 16) = v24 + 1;
    uint64_t v64 = *(void (**)(unint64_t, uint64_t, uint64_t))(v27 + 32);
    v64(v15 + v68 + v24 * v69, v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v19 + 40))(ObjectType, v19);
    Locale.ltIdentifier.getter();
    v65(v28, v29);
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v31 = *(void *)(v15 + 16);
    unint64_t v30 = *(void *)(v15 + 24);
    if (v31 >= v30 >> 1) {
      unint64_t v15 = sub_100202CA4(v30 > 1, v31 + 1, 1, v15);
    }
    uint64_t v32 = *(void *)(v0 + 192);
    uint64_t v33 = *(void *)(v0 + 160);
    *(void *)(v15 + 16) = v31 + 1;
    unint64_t v13 = v63;
    v64(v15 + v68 + v31 * v69, v32, v33);
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v0 + 216))
  {
    URLQueryItem.init(name:value:)();
    unint64_t v35 = *(void *)(v15 + 16);
    unint64_t v34 = *(void *)(v15 + 24);
    unint64_t v36 = v35 + 1;
    if (v35 >= v34 >> 1) {
      unint64_t v15 = sub_100202CA4(v34 > 1, v35 + 1, 1, v15);
    }
    uint64_t v37 = *(void *)(v0 + 176);
  }
  else
  {
    sub_100139E44();
    URLQueryItem.init(name:value:)();
    swift_bridgeObjectRelease();
    unint64_t v35 = *(void *)(v15 + 16);
    unint64_t v38 = *(void *)(v15 + 24);
    unint64_t v36 = v35 + 1;
    if (v35 >= v38 >> 1) {
      unint64_t v15 = sub_100202CA4(v38 > 1, v35 + 1, 1, v15);
    }
    uint64_t v37 = *(void *)(v0 + 184);
  }
  uint64_t v39 = *(void *)(v0 + 160);
  uint64_t v40 = *(void *)(v0 + 168);
  *(void *)(v15 + 16) = v36;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v15 + v68 + v35 * v69, v37, v39);
  static URL.translateAppURL(with:)();
  swift_bridgeObjectRelease();
  id v41 = [self defaultWorkspace];
  if (v41)
  {
    uint64_t v43 = v41;
    URL._bridgeToObjectiveC()(v42);
    uint64_t v45 = v44;
    sub_10016F420(v13);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = 0;
    unsigned __int8 v47 = [v43 openSensitiveURL:v45 withOptions:isa error:v0 + 80];

    uint64_t v48 = *(void **)(v0 + 80);
    uint64_t v50 = *(void *)(v0 + 120);
    uint64_t v49 = *(void *)(v0 + 128);
    uint64_t v51 = *(void *)(v0 + 112);
    if (v47)
    {
      uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      id v53 = v48;
      v52(v49, v51);
      uint64_t v54 = swift_retain();
      sub_100100B30(v54, v67);
      swift_release();
      sub_1001476D4(0);
      swift_release();
    }
    else
    {
      id v55 = v48;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
      swift_errorRetain();
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        unint64_t v58 = (uint8_t *)swift_slowAlloc();
        unint64_t v59 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v58 = 138412290;
        uint64_t v60 = _convertErrorToNSError(_:)();
        *(void *)(v0 + 88) = v60;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v59 = v60;
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to open URL with LaunchServices: %@", v58, 0xCu);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v61 = *(uint64_t (**)(void))(v0 + 8);
  return v61();
}

uint64_t sub_10013CC28()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10013CCD8;
  return sub_10013C0B8(1);
}

uint64_t sub_10013CCD8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10013CE14, v1, v0);
}

uint64_t sub_10013CE14()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10013CE74(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  uint64_t v2 = swift_retain();
  sub_100100B30(v2, v1);
  swift_release();
  sub_100148B64();

  return swift_release();
}

uint64_t sub_10013CECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v103 = type metadata accessor for Locale.Language();
  uint64_t v100 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v94 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v108 - 8);
  uint64_t v5 = __chkstk_darwin(v108);
  uint64_t v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v81 - v8;
  uint64_t v90 = type metadata accessor for LabeledExpandingTextView() - 8;
  __chkstk_darwin(v90);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100007620(&qword_1002F7608) - 8;
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100007620(&qword_1002F7610) - 8;
  __chkstk_darwin(v99);
  uint64_t v95 = (uint64_t)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100007620(&qword_1002F7618) - 8;
  __chkstk_darwin(v102);
  uint64_t v97 = (uint64_t)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100007620(&qword_1002EF4B0) - 8;
  __chkstk_darwin(v101);
  uint64_t v98 = (uint64_t)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002EF4B8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v104 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v96 = (uint64_t)&v81 - v20;
  __chkstk_darwin(v19);
  uint64_t v89 = (char *)&v81 - v21;
  long long v109 = *(_OWORD *)(a1 + 48);
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  uint64_t v87 = *((void *)&v110 + 1);
  uint64_t v88 = v110;
  int v86 = v111;
  uint64_t v22 = (_OWORD *)swift_allocObject();
  unint64_t v106 = (_OWORD *)a1;
  long long v23 = *(_OWORD *)(a1 + 16);
  v22[1] = *(_OWORD *)a1;
  _OWORD v22[2] = v23;
  long long v24 = *(_OWORD *)(a1 + 48);
  v22[3] = *(_OWORD *)(a1 + 32);
  v22[4] = v24;
  unsigned __int8 v25 = *(unsigned char *)(a1 + 8);
  int v107 = v25;
  sub_10013DF58(a1);
  uint64_t v26 = swift_retain();
  sub_100100B30(v26, v25);
  swift_release();
  sub_100143828((uint64_t)v9);
  static Locale.current.getter();
  uint64_t v83 = v9;
  uint64_t v27 = Locale.sqDisplayName(context:in:)();
  unint64_t v29 = v28;
  unint64_t v30 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v84 = v30;
  uint64_t v85 = v4 + 8;
  unint64_t v31 = v7;
  uint64_t v32 = v108;
  v30((uint64_t)v31, v108);
  v30((uint64_t)v9, v32);
  swift_release();
  if (v29) {
    uint64_t v33 = v27;
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v82 = v33;
  if (!v29) {
    unint64_t v29 = 0xE000000000000000;
  }
  uint64_t v34 = sub_100139E44();
  uint64_t v36 = v35;
  uint64_t v37 = swift_retain();
  char v38 = v107;
  sub_100100B30(v37, v107);
  swift_release();
  uint64_t v39 = v90;
  sub_100143828((uint64_t)&v11[*(int *)(v90 + 44)]);
  swift_release();
  char v40 = sub_10013A4F0();
  type metadata accessor for LiveActivityViewModel();
  uint64_t v91 = sub_10013E15C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  *(void *)uint64_t v11 = Environment.init<A>(_:)();
  v11[8] = v41 & 1;
  uint64_t v42 = v87;
  *((void *)v11 + 2) = v88;
  *((void *)v11 + 3) = v42;
  v11[32] = v86;
  *((void *)v11 + 5) = sub_10013E1BC;
  *((void *)v11 + 6) = v22;
  uint64_t v43 = (uint64_t)v89;
  *((void *)v11 + 7) = v82;
  *((void *)v11 + 8) = v29;
  *((void *)v11 + 9) = v34;
  *((void *)v11 + 10) = v36;
  v11[*(int *)(v39 + 48)] = v40 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = swift_retain();
  sub_100100B30(v45, v38);
  swift_release();
  uint64_t v46 = (uint64_t)v83;
  sub_100143828((uint64_t)v83);
  swift_release();
  unsigned __int8 v47 = v94;
  Locale.language.getter();
  v84(v46, v108);
  uint64_t v48 = (uint64_t)v92;
  uint64_t v49 = (uint64_t *)&v92[*(int *)(v93 + 44)];
  uint64_t v50 = sub_100007620(&qword_1002F75A0);
  uint64_t v51 = v100;
  uint64_t v52 = v47;
  id v53 = v47;
  uint64_t v54 = v103;
  (*(void (**)(char *, char *, uint64_t))(v100 + 16))((char *)v49 + *(int *)(v50 + 28), v52, v103);
  *uint64_t v49 = KeyPath;
  sub_10013E1F4((uint64_t)v11, v48, (uint64_t (*)(void))type metadata accessor for LabeledExpandingTextView);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v54);
  sub_10013E25C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LabeledExpandingTextView);
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v106;
  long long v110 = v106[1];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001F72C((uint64_t)&v110);
  uint64_t v57 = v109;
  uint64_t v58 = v95;
  sub_10000C3A4(v48, v95, &qword_1002F7608);
  unint64_t v59 = (uint64_t *)(v58 + *(int *)(v99 + 44));
  *unint64_t v59 = v55;
  v59[1] = v57;
  sub_10000B070(v48, &qword_1002F7608);
  uint64_t v60 = swift_getKeyPath();
  uint64_t v61 = sub_100139FF8();
  uint64_t v62 = v97;
  sub_10000C3A4(v58, v97, &qword_1002F7610);
  unint64_t v63 = (uint64_t *)(v62 + *(int *)(v102 + 44));
  *unint64_t v63 = v60;
  v63[1] = v61;
  sub_10000B070(v58, &qword_1002F7610);
  uint64_t v64 = static Color.translateAccentColor.getter();
  uint64_t v65 = v98;
  sub_10000C3A4(v62, v98, &qword_1002F7618);
  *(void *)(v65 + *(int *)(v101 + 44)) = v64;
  sub_10000B070(v62, &qword_1002F7618);
  uint64_t v66 = static Alignment.leading.getter();
  uint64_t v67 = v96;
  sub_10001D238(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v96, 0.0, 1, 0.0, 1, v66, v68);
  sub_10000B070(v65, &qword_1002EF4B0);
  sub_10001323C(v67, v43, &qword_1002EF4B8);
  uint64_t v69 = swift_retain();
  uint64_t v70 = sub_100100B30(v69, v107);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v109 = v70;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v71 = *(_OWORD **)(v70 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  swift_unknownObjectRetain();
  swift_release();
  if (v71)
  {
    swift_unknownObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_10001F72C((uint64_t)&v110);
    uint64_t v72 = *((void *)&v109 + 1);
    if (*((void *)&v109 + 1)) {
      swift_bridgeObjectRelease();
    }
    BOOL v73 = v72 != 0;
    uint64_t v71 = (_OWORD *)swift_allocObject();
    long long v74 = v56[1];
    v71[1] = *v56;
    void v71[2] = v74;
    long long v75 = v56[3];
    v71[3] = v56[2];
    unsigned char v71[4] = v75;
    sub_10013DF58((uint64_t)v56);
    uint64_t v76 = sub_10013E430;
  }
  else
  {
    BOOL v73 = 0;
    uint64_t v76 = 0;
  }
  uint64_t v77 = v104;
  sub_10000C3A4(v43, v104, &qword_1002EF4B8);
  uint64_t v78 = v105;
  sub_10000C3A4(v77, v105, &qword_1002EF4B8);
  long long v79 = (BOOL *)(v78 + *(int *)(sub_100007620(&qword_1002F7620) + 48));
  *long long v79 = v73;
  v79[1] = (BOOL)v76;
  v79[2] = (BOOL)v71;
  sub_10013E3B4(v73, (uint64_t)v76);
  sub_10000B070(v43, &qword_1002EF4B8);
  sub_10013E3C4(v73, (uint64_t)v76);
  return sub_10000B070(v77, &qword_1002EF4B8);
}

uint64_t sub_10013D94C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  sub_10013DF58((uint64_t)a1);
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  long long v11 = a1[1];
  *(_OWORD *)(v10 + 32) = *a1;
  *(_OWORD *)(v10 + 48) = v11;
  long long v12 = a1[3];
  *(_OWORD *)(v10 + 64) = a1[2];
  *(_OWORD *)(v10 + 80) = v12;
  sub_100056780((uint64_t)v7, a3, v10);
  return swift_release();
}

uint64_t sub_10013DA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[4] = v6;
  v4[5] = v5;
  return _swift_task_switch(sub_10013DB04, v6, v5);
}

uint64_t sub_10013DB04()
{
  char v1 = *(unsigned char *)(*(void *)(v0 + 16) + 8);
  uint64_t v2 = swift_retain();
  sub_100100B30(v2, v1);
  swift_release();
  id v3 = sub_100143218();
  char v4 = [v3 isPassthrough];

  swift_release();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10013DBF0;
  return sub_10013C0B8(v4);
}

uint64_t sub_10013DBF0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10013CE14, v3, v2);
}

double sub_10013DD10@<D0>(double *a1@<X8>)
{
  sub_10011EA40();
  EnvironmentValues.subscript.getter();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10013DD60()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10013DDAC@<X0>(void *a1@<X8>)
{
  sub_10011E9EC();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10013DDFC()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10013DE5C(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  uint64_t v3 = swift_retain();
  sub_100100B30(v3, v2);
  swift_release();
  sub_10014CDD0(0);

  return swift_release();
}

uint64_t sub_10013DEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10013A65C(a1);
}

uint64_t sub_10013DF08()
{
  return sub_10013D94C((_OWORD *)(v0 + 16), (uint64_t)&unk_1002CF618, (uint64_t)&unk_1002F7660);
}

uint64_t sub_10013DF58(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013DFB4()
{
  return sub_10013D94C((_OWORD *)(v0 + 16), (uint64_t)&unk_1002CF5F0, (uint64_t)&unk_1002F7650);
}

unint64_t sub_10013DFEC()
{
  unint64_t result = qword_1002F75A8;
  if (!qword_1002F75A8)
  {
    sub_100007928(&qword_1002F7588);
    sub_10013E08C();
    sub_100014894(&qword_1002F75D0, &qword_1002F75A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F75A8);
  }
  return result;
}

unint64_t sub_10013E08C()
{
  unint64_t result = qword_1002F75B0;
  if (!qword_1002F75B0)
  {
    sub_100007928(&qword_1002F7580);
    sub_10013E15C(&qword_1002F75B8, (void (*)(uint64_t))type metadata accessor for LabeledTextView);
    sub_100014894(&qword_1002F75C0, &qword_1002F75C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F75B0);
  }
  return result;
}

uint64_t sub_10013E15C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013E1A8()
{
  return sub_10013CE74(v0 + 16);
}

uint64_t sub_10013E1BC()
{
  return sub_10013D94C((_OWORD *)(v0 + 16), (uint64_t)&unk_1002CF5C8, (uint64_t)&unk_1002F7630);
}

uint64_t sub_10013E1F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10013E25C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_10013E2BC@<D0>(double *a1@<X8>)
{
  sub_10011EA40();
  EnvironmentValues.subscript.getter();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_10013E30C()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_10013E360@<X0>(void *a1@<X8>)
{
  sub_10011E9EC();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10013E3B4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10013E3C4(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10013E3E0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10013E430(uint64_t a1)
{
  return sub_10013DE5C(a1, v1 + 16);
}

void *sub_10013E438(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v4) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1000B2E64(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    uint64_t v6 = 0;
    unint64_t v23 = v3 & 0xC000000000000001;
    uint64_t v24 = v4;
    long long v29 = *(_OWORD *)(a2 + 16);
    unint64_t v25 = v3;
    while (v4 != v6)
    {
      if (v23) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_10001F72C((uint64_t)&v29);
      if (v28) {
        uint64_t v9 = v27;
      }
      else {
        uint64_t v9 = 0;
      }
      if (v28) {
        unint64_t v10 = v28;
      }
      else {
        unint64_t v10 = 0xE000000000000000;
      }
      id v11 = [v8 word];
      unint64_t v26 = v10;
      if (v11)
      {
        long long v12 = v11;
        a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;
      }
      else
      {
        a2 = 0;
        uint64_t v14 = 0;
      }
      [v8 startTime];
      double v16 = v15;
      id v17 = [v8 textRange];
      uint64_t v19 = v18;

      unint64_t v21 = _swiftEmptyArrayStorage[2];
      unint64_t v20 = _swiftEmptyArrayStorage[3];
      if (v21 >= v20 >> 1) {
        sub_1000B2E64(v20 > 1, v21 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v21 + 1;
      uint64_t v22 = (double *)&_swiftEmptyArrayStorage[7 * v21];
      unint64_t v3 = v25;
      *((void *)v22 + 4) = v9;
      *((void *)v22 + 5) = v26;
      *((void *)v22 + 6) = a2;
      *((void *)v22 + 7) = v14;
      v22[8] = v16 / 1000.0;
      ++v6;
      *((void *)v22 + 9) = v17;
      *((void *)v22 + 10) = v19;
      uint64_t v4 = v24;
      if (v24 == v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10013E6B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10013E70C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100021B58;
  return sub_10013DA6C(a1, v4, v5, v1 + 32);
}

uint64_t sub_10013E7C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000496A4;
  return sub_10013CC28();
}

uint64_t sub_10013E87C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10013E8D4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000496A4;
  return sub_10013BECC();
}

unint64_t sub_10013E994()
{
  unint64_t result = qword_1002F7678;
  if (!qword_1002F7678)
  {
    sub_100007928(&qword_1002F7538);
    sub_10013EA34();
    sub_100014894(&qword_1002F76A0, &qword_1002F76A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7678);
  }
  return result;
}

unint64_t sub_10013EA34()
{
  unint64_t result = qword_1002F7680;
  if (!qword_1002F7680)
  {
    sub_100007928(&qword_1002F7530);
    sub_10013EAD4();
    sub_100014894(&qword_1002F76A0, &qword_1002F76A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7680);
  }
  return result;
}

unint64_t sub_10013EAD4()
{
  unint64_t result = qword_1002F7688;
  if (!qword_1002F7688)
  {
    sub_100007928(&qword_1002F7528);
    sub_10013EB74();
    sub_100014894(&qword_1002F3BB0, &qword_1002F3BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7688);
  }
  return result;
}

unint64_t sub_10013EB74()
{
  unint64_t result = qword_1002F7690;
  if (!qword_1002F7690)
  {
    sub_100007928(&qword_1002EF4A8);
    sub_100014894(&qword_1002F7698, &qword_1002EF4A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7690);
  }
  return result;
}

uint64_t destroy for LiveActivityTTSButton()
{
  return swift_release();
}

uint64_t _s17SequoiaTranslator21LiveActivityTTSButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LiveActivityTTSButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LiveActivityTTSButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityTTSButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityTTSButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityTTSButton()
{
  return &type metadata for LiveActivityTTSButton;
}

uint64_t sub_10013ED84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10013EDA0@<X0>(__int16 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v26 = sub_100007620(&qword_1002F76B0);
  uint64_t v28 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100007620(&qword_1002F76B8);
  __chkstk_darwin(v27);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007620(&qword_1002F76C0);
  uint64_t v11 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002F76C8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  id v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = a1 & 1;
  *(unsigned char *)(v18 + 17) = HIBYTE(a1) & 1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  __int16 v31 = a1 & 0x101;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  swift_retain();
  sub_100007620(&qword_1002F76D0);
  sub_10013F900();
  Button.init(action:label:)();
  sub_100014894(&qword_1002F7710, &qword_1002F76B0);
  uint64_t v19 = v26;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v19);
  sub_10013FA40();
  sub_10013FB10();
  View.buttonStyle<A>(_:)();
  sub_10000B070((uint64_t)v10, &qword_1002F76B8);
  uint64_t v20 = static AnyTransition.blur(radius:)();
  uint64_t v21 = v29;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v29);
  *(void *)&v17[*(int *)(v15 + 44)] = v20;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  uint64_t v22 = static Color.translateAccentColor.getter();
  uint64_t v23 = v30;
  sub_10000C3A4((uint64_t)v17, v30, &qword_1002F76C8);
  *(void *)(v23 + *(int *)(sub_100007620(&qword_1002F7728) + 36)) = v22;
  return sub_10000B070((uint64_t)v17, &qword_1002F76C8);
}

uint64_t sub_10013F15C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002F76F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100007620(&qword_1002F76E8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v6 = static Alignment.center.getter();
  v6[1] = v11;
  uint64_t v12 = sub_100007620(&qword_1002F7730);
  sub_10013F31C(a1 & 1, (uint64_t)v6 + *(int *)(v12 + 44));
  char v13 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_10000C3A4((uint64_t)v6, (uint64_t)v10, &qword_1002F76F8);
  uint64_t v22 = &v10[*(int *)(v8 + 44)];
  char *v22 = v13;
  *((void *)v22 + 1) = v15;
  *((void *)v22 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  sub_10000B070((uint64_t)v6, &qword_1002F76F8);
  sub_10000C3A4((uint64_t)v10, a2, &qword_1002F76E8);
  uint64_t v23 = a2 + *(int *)(sub_100007620(&qword_1002F76D0) + 36);
  *(_DWORD *)uint64_t v23 = 1056964608;
  *(_WORD *)(v23 + 4) = 256;
  return sub_10000B070((uint64_t)v10, &qword_1002F76E8);
}

uint64_t sub_10013F31C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v46 = sub_100007620(&qword_1002F7738) - 8;
  __chkstk_darwin(v46);
  uint64_t v45 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for SymbolEffectOptions();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AutomaticSymbolEffect();
  uint64_t v38 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for ContentTransition();
  uint64_t v10 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F7740);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v47 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (uint64_t *)((char *)&v37 - v18);
  __chkstk_darwin(v17);
  uint64_t v42 = (uint64_t)&v37 - v20;
  uint64_t v21 = 0x69662E6573756170;
  if (a1) {
    uint64_t v21 = 0x6C69662E79616C70;
  }
  uint64_t v41 = v21;
  if (a1) {
    unint64_t v22 = 0xE90000000000006CLL;
  }
  else {
    unint64_t v22 = 0xEA00000000006C6CLL;
  }
  unint64_t v40 = v22;
  uint64_t v23 = Image.init(systemName:)();
  static Font.body.getter();
  static Font.Weight.bold.getter();
  uint64_t v24 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  AutomaticSymbolEffect.init()();
  static SymbolEffectOptions.default.getter();
  sub_10013FC34(&qword_1002F7748, (void (*)(uint64_t))&type metadata accessor for AutomaticSymbolEffect);
  static ContentTransition.symbolEffect<A>(_:options:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v7);
  uint64_t v26 = swift_getKeyPath();
  uint64_t v27 = v45;
  uint64_t v28 = v39;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v45 + *(int *)(v46 + 36), v12, v39);
  *uint64_t v27 = v26;
  sub_10000C3A4((uint64_t)v27, (uint64_t)v19 + *(int *)(v14 + 44), &qword_1002F7738);
  uint64_t *v19 = v23;
  v19[1] = KeyPath;
  v19[2] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000B070((uint64_t)v27, &qword_1002F7738);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v28);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = v42;
  sub_10013FCA4((uint64_t)v19, v42);
  uint64_t v30 = Image.init(systemName:)();
  static Font.body.getter();
  static Font.Weight.bold.getter();
  uint64_t v31 = Font.weight(_:)();
  swift_release();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v33 = v47;
  sub_10000C3A4(v29, v47, &qword_1002F7740);
  uint64_t v34 = v48;
  sub_10000C3A4(v33, v48, &qword_1002F7740);
  uint64_t v35 = (uint64_t *)(v34 + *(int *)(sub_100007620(&qword_1002F7750) + 48));
  uint64_t *v35 = v30;
  v35[1] = v32;
  v35[2] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10000B070(v29, &qword_1002F7740);
  swift_release();
  swift_release();
  swift_release();
  return sub_10000B070(v33, &qword_1002F7740);
}

uint64_t sub_10013F85C@<X0>(uint64_t a1@<X8>)
{
  if (v1[1]) {
    __int16 v2 = 256;
  }
  else {
    __int16 v2 = 0;
  }
  return sub_10013EDA0(v2 | *v1, *((void *)v1 + 1), *((void *)v1 + 2), a1);
}

uint64_t sub_10013F87C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10013F8B4()
{
  return (*(uint64_t (**)(void))(v0 + 24))(*(unsigned __int8 *)(v0 + 17));
}

uint64_t sub_10013F8E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10013F15C(*(unsigned char *)(v1 + 16), a1);
}

unint64_t sub_10013F900()
{
  unint64_t result = qword_1002F76D8;
  if (!qword_1002F76D8)
  {
    sub_100007928(&qword_1002F76D0);
    sub_10013F9A0();
    sub_100014894(&qword_1002F7700, &qword_1002F7708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F76D8);
  }
  return result;
}

unint64_t sub_10013F9A0()
{
  unint64_t result = qword_1002F76E0;
  if (!qword_1002F76E0)
  {
    sub_100007928(&qword_1002F76E8);
    sub_100014894(&qword_1002F76F0, &qword_1002F76F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F76E0);
  }
  return result;
}

unint64_t sub_10013FA40()
{
  unint64_t result = qword_1002F7718;
  if (!qword_1002F7718)
  {
    sub_100007928(&qword_1002F76B8);
    sub_100014894(&qword_1002F7710, &qword_1002F76B0);
    sub_10013FC34((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7718);
  }
  return result;
}

unint64_t sub_10013FB10()
{
  unint64_t result = qword_1002F7720;
  if (!qword_1002F7720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7720);
  }
  return result;
}

uint64_t sub_10013FB64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentTransition();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.contentTransition.setter();
}

uint64_t sub_10013FC34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10013FC7C()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_10013FCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F7740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10013FD10()
{
  unint64_t result = qword_1002F7758;
  if (!qword_1002F7758)
  {
    sub_100007928(&qword_1002F7728);
    sub_10013FDB0();
    sub_100014894(&qword_1002F75C0, &qword_1002F75C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7758);
  }
  return result;
}

unint64_t sub_10013FDB0()
{
  unint64_t result = qword_1002F7760;
  if (!qword_1002F7760)
  {
    sub_100007928(&qword_1002F76C8);
    sub_100007928(&qword_1002F76B8);
    sub_10013FA40();
    sub_10013FB10();
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002F3BB0, &qword_1002F3BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7760);
  }
  return result;
}

uint64_t *sub_10013FEA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    swift_retain();
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10013FFC8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100140088(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  swift_retain();
  swift_retain();
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100140158(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10000B070((uint64_t)a1 + v6, &qword_1002FACB0);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100140264(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *sub_100140338(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_10000B070((uint64_t)a1 + v6, &qword_1002FACB0);
    uint64_t v9 = sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100140444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100140458);
}

uint64_t sub_100140458(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F2CB0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10014050C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100140520);
}

void *sub_100140520(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F2CB0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for LiveActivityView()
{
  uint64_t result = qword_1002F77C0;
  if (!qword_1002F77C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100140618()
{
  sub_1001406B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001406B0()
{
  if (!qword_1002F2D30)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F2D30);
    }
  }
}

uint64_t sub_100140708()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100140724()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LiveActivityView();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (uint64_t *)((char *)&v28 - v10);
  __chkstk_darwin(v9);
  uint64_t v13 = (uint64_t *)((char *)&v28 - v12);
  uint64_t v14 = v0[1];
  uint64_t v28 = *v0;
  uint64_t v29 = v14;
  sub_100007620((uint64_t *)&unk_1002FBDF0);
  State.wrappedValue.getter();
  uint64_t v15 = v30;
  swift_getKeyPath();
  uint64_t v28 = v15;
  sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v16 = *(void *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  swift_release();
  sub_1001428B4(v1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  if (v16)
  {
    sub_10014291C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
    sub_1001428B4(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
LABEL_6:
    sub_10014291C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
    sub_1001428B4(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
    goto LABEL_7;
  }
  uint64_t v17 = v13[1];
  uint64_t v28 = *v13;
  uint64_t v29 = v17;
  State.wrappedValue.getter();
  uint64_t v18 = v30;
  swift_getKeyPath();
  uint64_t v28 = v18;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v19 = v18 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult;
  swift_beginAccess();
  sub_10000C3A4(v19, (uint64_t)v4, &qword_1002F7668);
  swift_release();
  sub_10014291C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  uint64_t v20 = sub_100007620(&qword_1002F7670);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v4, 1, v20);
  sub_10000B070((uint64_t)v4, &qword_1002F7668);
  sub_1001428B4(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  if (v21 != 1) {
    goto LABEL_6;
  }
  uint64_t v22 = v11[1];
  uint64_t v30 = *v11;
  uint64_t v31 = v22;
  State.wrappedValue.getter();
  int v23 = sub_100145524();
  swift_release();
  sub_10014291C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  sub_1001428B4(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  if (v23 != 7)
  {
LABEL_7:
    uint64_t v26 = 0;
    goto LABEL_8;
  }
  uint64_t v24 = v8[1];
  uint64_t v30 = *v8;
  uint64_t v31 = v24;
  State.wrappedValue.getter();
  uint64_t v25 = v32;
  swift_getKeyPath();
  uint64_t v30 = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
  swift_release();
LABEL_8:
  sub_10014291C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  return v26;
}

BOOL sub_100140B7C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LiveActivityView();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v0[1];
  uint64_t v17 = *v0;
  uint64_t v18 = v8;
  sub_100007620((uint64_t *)&unk_1002FBDF0);
  State.wrappedValue.getter();
  uint64_t v9 = v19;
  swift_getKeyPath();
  uint64_t v17 = v9;
  sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v10 = *(unsigned __int8 *)(v9 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
  swift_release();
  sub_1001428B4(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
  if (v10 == 1)
  {
    uint64_t v11 = v7[1];
    uint64_t v17 = *v7;
    uint64_t v18 = v11;
    State.wrappedValue.getter();
    uint64_t v12 = v19;
    swift_getKeyPath();
    uint64_t v17 = v12;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v13 = v12 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult;
    swift_beginAccess();
    sub_10000C3A4(v13, (uint64_t)v4, &qword_1002F7668);
    swift_release();
    sub_10014291C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
    uint64_t v14 = sub_100007620(&qword_1002F7670);
    BOOL v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14) == 1;
    sub_10000B070((uint64_t)v4, &qword_1002F7668);
  }
  else
  {
    sub_10014291C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for LiveActivityView);
    return 0;
  }
  return v15;
}

uint64_t sub_100140E4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  *(void *)&long long v50 = sub_100007620(&qword_1002F77F8);
  __chkstk_darwin(v50);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v54 = sub_100007620(&qword_1002F7800);
  *(void *)&long long v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F7808);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = sub_100007620(&qword_1002F7810);
  __chkstk_darwin(v53);
  uint64_t v49 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100007620(&qword_1002F7818);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v51 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100007620(&qword_1002F7820) - 8;
  __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100007620(&qword_1002F7828) - 8;
  __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = static Alignment.center.getter();
  v8[1] = v13;
  *(void *)&long long v46 = (char *)v8 + *(int *)(sub_100007620(&qword_1002F7830) + 44);
  sub_100141530((uint64_t)v1, (uint64_t)v3);
  uint64_t v47 = v1;
  uint64_t v14 = v1[1];
  *(void *)&long long v62 = *v1;
  *((void *)&v62 + 1) = v14;
  uint64_t v48 = sub_100007620((uint64_t *)&unk_1002FBDF0);
  State.wrappedValue.getter();
  uint64_t v15 = type metadata accessor for LiveActivityViewModel();
  uint64_t v16 = sub_100142350(&qword_1002F7838, &qword_1002F77F8, (void (*)(void))sub_100142114);
  uint64_t v17 = sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  uint64_t v18 = v50;
  View.environment<A>(_:)();
  swift_release();
  sub_10000B070((uint64_t)v3, &qword_1002F77F8);
  static Edge.Set.all.getter();
  *(void *)&long long v62 = v18;
  *((void *)&v62 + 1) = v15;
  *(void *)&long long v63 = v16;
  *((void *)&v63 + 1) = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v19 = v54;
  View.scenePadding(_:)();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v5, v19);
  uint64_t v20 = static Alignment.top.getter();
  uint64_t v22 = v21;
  int v23 = v47;
  sub_100141D1C(v47, (uint64_t *)&v62);
  long long v55 = v62;
  long long v54 = v63;
  long long v50 = v64;
  long long v46 = v65;
  long long v45 = v66;
  uint64_t v24 = v67;
  uint64_t v25 = v49;
  sub_10000C3A4((uint64_t)v8, v49, &qword_1002F7808);
  uint64_t v26 = v25 + *(int *)(v53 + 36);
  long long v27 = v54;
  *(_OWORD *)uint64_t v26 = v55;
  *(_OWORD *)(v26 + 16) = v27;
  long long v28 = v46;
  *(_OWORD *)(v26 + 32) = v50;
  *(_OWORD *)(v26 + 48) = v28;
  *(_OWORD *)(v26 + 64) = v45;
  *(void *)(v26 + 80) = v24;
  *(void *)(v26 + 88) = v20;
  *(void *)(v26 + 96) = v22;
  sub_10000B070((uint64_t)v8, &qword_1002F7808);
  sub_1001424EC();
  uint64_t v29 = v51;
  View.allowsSecureDrawing()();
  sub_10000B070(v25, &qword_1002F7810);
  uint64_t v30 = static Animation.spring(response:dampingFraction:blendDuration:)();
  LOBYTE(v20) = sub_100140724();
  uint64_t v31 = v57;
  uint64_t v32 = (uint64_t)v52;
  uint64_t v33 = v29;
  uint64_t v34 = v29;
  uint64_t v35 = v59;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v52, v33, v59);
  uint64_t v36 = v32 + *(int *)(v56 + 44);
  *(void *)uint64_t v36 = v30;
  *(unsigned char *)(v36 + 8) = v20 & 1;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v35);
  uint64_t v37 = static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v38 = v23[1];
  *(void *)&long long v62 = *v23;
  *((void *)&v62 + 1) = v38;
  State.wrappedValue.getter();
  LODWORD(v22) = sub_100145524();
  swift_release();
  uint64_t v39 = v58;
  sub_10000C3A4(v32, v58, &qword_1002F7820);
  uint64_t v40 = v39 + *(int *)(v60 + 44);
  *(void *)uint64_t v40 = v37;
  *(unsigned char *)(v40 + 8) = v22 != 7;
  sub_10000B070(v32, &qword_1002F7820);
  uint64_t v41 = static Animation.spring(response:dampingFraction:blendDuration:)();
  LOBYTE(v20) = sub_100140B7C();
  uint64_t v42 = v61;
  sub_10000C3A4(v39, v61, &qword_1002F7828);
  uint64_t v43 = v42 + *(int *)(sub_100007620(&qword_1002F78D8) + 36);
  *(void *)uint64_t v43 = v41;
  *(unsigned char *)(v43 + 8) = v20 & 1;
  return sub_10000B070(v39, &qword_1002F7828);
}

uint64_t sub_100141530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for OpacityTransition();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v50 = sub_100007620(&qword_1002F78E8);
  __chkstk_darwin(v50);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for LiveActivityErrorView();
  uint64_t v12 = __chkstk_darwin(v51);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = *(void *)(a1 + 8);
  *(void *)&v53[0] = *(void *)a1;
  *((void *)&v53[0] + 1) = v17;
  sub_100007620((uint64_t *)&unk_1002FBDF0);
  State.wrappedValue.getter();
  int v18 = sub_100145524();
  swift_release();
  if (v18 == 7)
  {
    sub_100141AC0((long long *)a1, (uint64_t)v53);
    long long v49 = v53[0];
    long long v48 = v53[1];
    long long v47 = v53[2];
    uint64_t v19 = v54;
    uint64_t v20 = v55;
    char v21 = v56;
    OpacityTransition.init()();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    sub_10014297C(qword_1002F3BC0, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
    uint64_t v22 = AnyTransition.init<A>(_:)();
    LOBYTE(v62) = v21;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    char v23 = v62;
    char v24 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    char v60 = v23;
    char v57 = 0;
    char v33 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    char v34 = v60;
    char v35 = v57;
    char v61 = 0;
    long long v36 = v48;
    *(_OWORD *)uint64_t v11 = v49;
    *((_OWORD *)v11 + 1) = v36;
    *((_OWORD *)v11 + 2) = v47;
    *((void *)v11 + 6) = v19;
    *((void *)v11 + 7) = v20;
    v11[64] = v34;
    *((_DWORD *)v11 + 17) = *(_DWORD *)&v59[3];
    *(_DWORD *)(v11 + 65) = *(_DWORD *)v59;
    *((void *)v11 + 9) = v22;
    v11[80] = v24;
    int v37 = *(_DWORD *)v58;
    *((_DWORD *)v11 + 21) = *(_DWORD *)&v58[3];
    *(_DWORD *)(v11 + 81) = v37;
    *((void *)v11 + 11) = v26;
    *((void *)v11 + 12) = v28;
    *((void *)v11 + 13) = v30;
    *((void *)v11 + 14) = v32;
    v11[120] = v35;
    int v38 = v53[0];
    *((_DWORD *)v11 + 31) = *(_DWORD *)((char *)v53 + 3);
    *(_DWORD *)(v11 + 121) = v38;
    v11[128] = v33;
    int v39 = v62;
    *((_DWORD *)v11 + 33) = *(_DWORD *)((char *)&v62 + 3);
    *(_DWORD *)(v11 + 129) = v39;
    *((void *)v11 + 17) = v40;
    *((void *)v11 + 18) = v41;
    *((void *)v11 + 19) = v42;
    *((void *)v11 + 20) = v43;
    v11[168] = v61;
    swift_storeEnumTagMultiPayload();
    sub_100007620(&qword_1002F7860);
    sub_10014297C(&qword_1002F7850, (void (*)(uint64_t))type metadata accessor for LiveActivityErrorView);
    sub_10014220C(&qword_1002F7858, &qword_1002F7860, (void (*)(void))sub_1001421E4);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    type metadata accessor for LiveActivityViewModel();
    sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    *(void *)uint64_t v14 = Environment.init<A>(_:)();
    v14[8] = v45 & 1;
    long long v46 = (uint64_t *)&v14[*(int *)(v51 + 20)];
    *long long v46 = swift_getKeyPath();
    sub_100007620((uint64_t *)&unk_1002F5780);
    swift_storeEnumTagMultiPayload();
    sub_100139458((uint64_t)v14, (uint64_t)v16);
    sub_1001428B4((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for LiveActivityErrorView);
    swift_storeEnumTagMultiPayload();
    sub_100007620(&qword_1002F7860);
    sub_10014297C(&qword_1002F7850, (void (*)(uint64_t))type metadata accessor for LiveActivityErrorView);
    sub_10014220C(&qword_1002F7858, &qword_1002F7860, (void (*)(void))sub_1001421E4);
    _ConditionalContent<>.init(storage:)();
    return sub_10014291C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LiveActivityErrorView);
  }
}

double sub_100141AC0@<D0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  if (sub_100140B7C())
  {
    type metadata accessor for LiveActivityViewModel();
    sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    Environment.init<A>(_:)();
  }
  else
  {
    long long v5 = *a1;
    sub_100007620((uint64_t *)&unk_1002FBDF0);
    State.wrappedValue.getter();
    swift_retain();
    swift_release();
    type metadata accessor for LiveActivityViewModel();
    sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    Environment.init<A>(_:)();
    type metadata accessor for TTSManager();
    sub_10014297C(&qword_1002F2CA8, (void (*)(uint64_t))type metadata accessor for TTSManager);
    ObservedObject.init(wrappedValue:)();
    State.init(wrappedValue:)();
    State.init(wrappedValue:)();
  }
  sub_100142444();
  sub_100142498();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v7;
  *(_OWORD *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 64) = v9;
  return result;
}

uint64_t sub_100141D1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScaleTransition();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v38 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for LayoutDirection();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t result = sub_100140724();
  if (result)
  {
    uint64_t v18 = a1[1];
    uint64_t v39 = *a1;
    uint64_t v40 = v18;
    sub_100007620((uint64_t *)&unk_1002FBDF0);
    State.wrappedValue.getter();
    uint64_t v36 = v5;
    uint64_t v19 = v41;
    swift_getKeyPath();
    uint64_t v35 = v4;
    uint64_t v39 = v19;
    sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v37 = *(unsigned int *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__speechAudioLevel);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for LiveActivityView();
    sub_10010041C((uint64_t)v16);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for LayoutDirection.leftToRight(_:), v10);
    char v21 = static LayoutDirection.== infix(_:_:)();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v14, v10);
    v22(v16, v10);
    static UnitPoint.center.getter();
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    static UnitPoint.center.getter();
    ScaleTransition.init(_:anchor:)();
    uint64_t v27 = v35;
    uint64_t v28 = v36;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v38, v9, v35);
    sub_10014297C(&qword_1002F78E0, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
    uint64_t v29 = v27;
    uint64_t v30 = AnyTransition.init<A>(_:)();
    LOBYTE(v39) = 0;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    uint64_t v31 = v39 | (unint64_t)(v37 << 32);
    if (v21) {
      uint64_t v32 = 0;
    }
    else {
      uint64_t v32 = 0x400921FB54442D18;
    }
    uint64_t v33 = 0x3FF0000000000000;
  }
  else
  {
    uint64_t KeyPath = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v30 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  *a2 = KeyPath;
  a2[1] = v31;
  a2[2] = v32;
  a2[3] = 0;
  a2[4] = v33;
  a2[5] = 0;
  a2[6] = v24;
  a2[7] = v26;
  a2[8] = 0;
  a2[9] = v33;
  a2[10] = v30;
  return result;
}

unint64_t sub_100142114()
{
  unint64_t result = qword_1002F7840;
  if (!qword_1002F7840)
  {
    sub_100007928(&qword_1002F7848);
    sub_10014297C(&qword_1002F7850, (void (*)(uint64_t))type metadata accessor for LiveActivityErrorView);
    sub_10014220C(&qword_1002F7858, &qword_1002F7860, (void (*)(void))sub_1001421E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7840);
  }
  return result;
}

uint64_t sub_1001421E4()
{
  return sub_10014220C(&qword_1002F7868, &qword_1002F7870, (void (*)(void))sub_10014228C);
}

uint64_t sub_10014220C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10014228C()
{
  unint64_t result = qword_1002F7878;
  if (!qword_1002F7878)
  {
    sub_100007928(&qword_1002F7880);
    sub_100142350(&qword_1002F7888, &qword_1002F7890, (void (*)(void))sub_1001423C8);
    sub_100014894(&qword_1002F3BB0, &qword_1002F3BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7878);
  }
  return result;
}

uint64_t sub_100142350(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001423C8()
{
  unint64_t result = qword_1002F7898;
  if (!qword_1002F7898)
  {
    sub_100007928(&qword_1002F78A0);
    sub_100142444();
    sub_100142498();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7898);
  }
  return result;
}

unint64_t sub_100142444()
{
  unint64_t result = qword_1002F78A8;
  if (!qword_1002F78A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F78A8);
  }
  return result;
}

unint64_t sub_100142498()
{
  unint64_t result = qword_1002F78B0;
  if (!qword_1002F78B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F78B0);
  }
  return result;
}

unint64_t sub_1001424EC()
{
  unint64_t result = qword_1002F78B8;
  if (!qword_1002F78B8)
  {
    sub_100007928(&qword_1002F7810);
    sub_100014894(&qword_1002F78C0, &qword_1002F7808);
    sub_100014894(&qword_1002F78C8, &qword_1002F78D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F78B8);
  }
  return result;
}

uint64_t sub_1001425B0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014297C(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
  return result;
}

uint64_t sub_100142660()
{
  return swift_release();
}

uint64_t sub_100142740()
{
  return sub_100144330(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100142770@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.displayScale.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_10014279C()
{
  return EnvironmentValues.displayScale.setter();
}

uint64_t sub_1001427C4()
{
  return EnvironmentValues.unlockAndOpenURL.getter();
}

uint64_t sub_1001427E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.unlockAndOpenURL.setter();
}

uint64_t sub_1001428B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014291C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10014297C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001429C4()
{
  return sub_100142A00(&qword_1002F78F0, &qword_1002F78D8, (void (*)(void))sub_100142AA4);
}

uint64_t sub_100142A00(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    sub_100014894(&qword_1002F76A0, &qword_1002F76A8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100142AA4()
{
  return sub_100142A00(&qword_1002F78F8, &qword_1002F7828, (void (*)(void))sub_100142ACC);
}

unint64_t sub_100142ACC()
{
  unint64_t result = qword_1002F7900;
  if (!qword_1002F7900)
  {
    sub_100007928(&qword_1002F7820);
    sub_100007928(&qword_1002F7810);
    sub_1001424EC();
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002F76A0, &qword_1002F76A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7900);
  }
  return result;
}

char *sub_100142BA0()
{
  uint64_t v1 = (void *)v0[6];
  if (v1)
  {
    uint64_t v2 = (char *)v0[6];
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = (void *)v0[2];
    uint64_t v5 = (void *)v0[3];
    id v6 = objc_allocWithZone((Class)type metadata accessor for SpeechManager());
    uint64_t v7 = (char *)sub_1001B6728(v4, v5);
    *(void *)&v7[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate + 8] = &off_1002CF6F0;
    swift_unknownObjectWeakAssign();
    uint64_t v8 = (void *)v3[6];
    v3[6] = v7;
    uint64_t v2 = v7;

    uint64_t v1 = 0;
  }
  id v9 = v1;
  return v2;
}

uint64_t sub_100142C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100142DFC(&OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale, a1);
}

uint64_t sub_100142C60(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100142DE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100142DFC(&OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale, a1);
}

uint64_t sub_100142DFC@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = v2 + *a1;
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for Locale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_100142EF8@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = v5 + *a2;
  swift_beginAccess();
  uint64_t v7 = type metadata accessor for Locale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_100142FF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v8 = *a2;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  uint64_t v13 = v8;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100143180(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1 + *a3;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v4, a2, v5);
  return swift_endAccess();
}

id sub_100143218()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v17 - v6;
  swift_getKeyPath();
  uint64_t v18 = v0;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
  swift_beginAccess();
  id v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v9(v7, v8, v1);
  swift_getKeyPath();
  v17[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v10 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale;
  swift_beginAccess();
  v9(v5, v10, v1);
  id v11 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v13 = Locale._bridgeToObjectiveC()().super.isa;
  id v14 = [v11 initWithSourceLocale:isa targetLocale:v13];

  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v5, v1);
  v15(v7, v1);
  return v14;
}

uint64_t sub_100143488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F7670);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v22 - v11;
  swift_getKeyPath();
  uint64_t v23 = v1;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation))
  {
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 32);
    swift_unknownObjectRetain();
    v15(ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  else
  {
    swift_getKeyPath();
    uint64_t v23 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v17 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult;
    swift_beginAccess();
    sub_10000C3A4(v17, (uint64_t)v5, &qword_1002F7668);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_10000B070((uint64_t)v5, &qword_1002F7668);
      swift_getKeyPath();
      v22[0] = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v18 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
      swift_beginAccess();
      uint64_t v19 = type metadata accessor for Locale();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, v18, v19);
    }
    else
    {
      uint64_t v20 = type metadata accessor for Locale();
      char v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
      v21(v12, v5, v20);
      v21(v10, v12, v20);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v21)(a1, v10, v20);
    }
  }
}

uint64_t sub_100143828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_100143218();
  sub_100143488((uint64_t)v10);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v13 = [v11 oppositeToLocale:isa];

  if (v13)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v14(v6, v10, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a1, v6, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4110);
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030EA20);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cannot resolve target locale", v19, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  v21[1] = v2;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v2 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale;
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v20, v7);
}

uint64_t sub_100143BC0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_100143C74@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(_OWORD *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  return swift_unknownObjectRetain();
}

uint64_t sub_100143D2C()
{
  return swift_release();
}

uint64_t sub_100143E10@<X0>(uint64_t a1@<X8>)
{
  return sub_100143FA4(&OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult, (uint64_t *)&unk_1002FA760, a1);
}

uint64_t sub_100143E2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100144094(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult, (uint64_t *)&unk_1002FA760, a2);
}

uint64_t sub_100143E48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C3A4(a1, (uint64_t)v6, (uint64_t *)&unk_1002FA760);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  id v11 = v6;
  uint64_t v12 = v7;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002FA760);
}

uint64_t sub_100143F88@<X0>(uint64_t a1@<X8>)
{
  return sub_100143FA4(&OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult, &qword_1002F7668, a1);
}

uint64_t sub_100143FA4@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_10000C3A4(v7, a3, a2);
}

uint64_t sub_100144078@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100144094(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult, &qword_1002F7668, a2);
}

uint64_t sub_100144094@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v8 = v7 + *a2;
  swift_beginAccess();
  return sub_10000C3A4(v8, a4, a3);
}

uint64_t sub_10014416C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C3A4(a1, (uint64_t)v6, &qword_1002F7668);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  id v11 = v6;
  uint64_t v12 = v7;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v6, &qword_1002F7668);
}

uint64_t sub_1001442AC(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = a1 + *a3;
  swift_beginAccess();
  sub_10014D5F8(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_10014431C()
{
  return sub_100144354((uint64_t)&unk_100252A98, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
}

uint64_t sub_100144330(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable) = a2;
  return result;
}

uint64_t sub_100144340()
{
  return sub_100144354((uint64_t)&unk_100252958, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening);
}

uint64_t sub_100144354(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1001443F4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening);
  return result;
}

uint64_t sub_1001444A4()
{
  return swift_release();
}

uint64_t sub_100144574()
{
  return swift_retain();
}

uint64_t sub_100144620@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock);
  return swift_retain();
}

uint64_t sub_1001446D4()
{
  return swift_release();
}

void sub_1001447B4(char a1)
{
  int v6 = a1 & 1;
  swift_getKeyPath();
  uint64_t v7 = v1;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  sub_10014DDFC((unsigned char *)(v3 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  int v4 = v7;
  swift_release();
  swift_getKeyPath();
  uint64_t v7 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(void *)(v1 + v2);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 20));
  sub_10014DDF0((unsigned char *)(v5 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 20));
  swift_release();
  if (v4 != v6) {
    sub_1001A5094(v6);
  }
}

unsigned char *sub_10014494C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

float sub_100144958()
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(float *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__speechAudioLevel);
}

float sub_100144A00@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  float result = *(float *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__speechAudioLevel);
  *a2 = result;
  return result;
}

uint64_t sub_100144AB0()
{
  return swift_release();
}

uint64_t sub_100144B88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100144C4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v4 = (void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__subscriptions);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100144D18()
{
  return swift_release();
}

uint64_t sub_100144DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__subscriptions);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100144E68()
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError);
}

uint64_t sub_100144F10@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError);
  return result;
}

uint64_t sub_100144FC0()
{
  return swift_release();
}

uint64_t sub_100145090()
{
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported + 1)) {
    int v1 = 256;
  }
  else {
    int v1 = 0;
  }
  return v1 | *(unsigned __int8 *)(v0
                                               + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported);
}

uint64_t sub_100145150@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported + 1);
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported);
  a2[1] = v5;
  return result;
}

uint64_t sub_10014520C()
{
  return swift_release();
}

uint64_t sub_1001452E4()
{
  return swift_retain();
}

uint64_t sub_100145390@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__currentRecordingStopTonePlaybackTask);
  return swift_retain();
}

uint64_t sub_100145444()
{
  return swift_release();
}

uint64_t sub_100145524()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel_appRunForTheFirstTime) != 1) {
    return 0;
  }
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = 4;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError))
  {
    case 1:
      return 5;
    case 2:
      return 6;
    case 3:
      id v3 = sub_100143218();
      unsigned int v4 = [v3 isPassthrough];

      if (v4)
      {
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported) != 1) {
          return 1;
        }
      }
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      char v5 = (unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported);
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported) & 1) != 0
        || (swift_getKeyPath(), ObservationRegistrar.access<A, B>(_:keyPath:)(), swift_release(), v5[1] == 1))
      {
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (*v5 != 1) {
          return 1;
        }
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (v5[1]) {
          uint64_t result = 7;
        }
        else {
          uint64_t result = 2;
        }
      }
      else
      {
        uint64_t result = 3;
      }
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1001457B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F20B0);
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  __chkstk_darwin(v2);
  long long v79 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F20B8);
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  __chkstk_darwin(v4);
  uint64_t v82 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v6 - 8);
  uint64_t v78 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100007620(&qword_1002F20C0);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100007620(&qword_1002F20C8);
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v77 = v9;
  __chkstk_darwin(v9);
  long long v75 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v11 - 8);
  uint64_t v70 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  id v14 = *(void **)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v71 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v69 = (char *)&v68 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v68 - v19;
  uint64_t v21 = type metadata accessor for TranslationTaskHint();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[2] = [objc_allocWithZone((Class)_LTTranslator) init];
  type metadata accessor for DeviceHelper();
  swift_allocObject();
  uint64_t v25 = sub_1000BAA9C();
  id v26 = objc_allocWithZone((Class)type metadata accessor for RecordingHelper());
  id v27 = sub_10018C43C((uint64_t)v25);
  swift_release();
  v1[3] = v27;
  type metadata accessor for ErrorStateContext();
  swift_allocObject();
  v1[4] = sub_1000D1B4C();
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for TranslationTaskHint.speech(_:), v21);
  type metadata accessor for LanguagesService();
  swift_allocObject();
  v1[5] = LanguagesService.init(task:)();
  v1[6] = 0;
  uint64_t v28 = OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel_ringer;
  *(void *)((char *)v1 + v28) = [objc_allocWithZone((Class)type metadata accessor for RingerSwitchObserver()) init];
  uint64_t v29 = (void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  void *v29 = 0;
  v29[1] = 0;
  uint64_t v30 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult;
  uint64_t v31 = sub_100007620(&qword_1002F7600);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  uint64_t v32 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult;
  uint64_t v33 = sub_100007620(&qword_1002F7670);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  *((unsigned char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable) = 1;
  *((unsigned char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening) = 0;
  sub_100007620(&qword_1002F7EA0);
  uint64_t v34 = swift_allocObject();
  *(_DWORD *)(v34 + 20) = 0;
  *(unsigned char *)(v34 + 16) = 0;
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock) = v34;
  *(_DWORD *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__speechAudioLevel) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v35 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v35 = &_swiftEmptySetSingleton;
  }
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__subscriptions) = v35;
  *((unsigned char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError) = 3;
  *(_WORD *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported) = 257;
  *(void *)((char *)v1
            + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__currentRecordingStopTonePlaybackTask) = 0;
  ObservationRegistrar.init()();
  uint64_t v36 = self;
  id v37 = [v36 standardUserDefaults];
  NSString v38 = String._bridgeToObjectiveC()();
  unsigned __int8 v39 = [v37 BOOLForKey:v38];

  *((unsigned char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel_appRunForTheFirstTime) = v39;
  id v40 = [v36 standardUserDefaults];
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v40 stringForKey:v41];

  if (v42)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Locale.init(identifier:)();
  uint64_t v43 = (void (*)(char *, char *, uint64_t))v14[4];
  v43((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale, v20, v13);
  uint64_t v44 = (uint64_t)v69;
  sub_1001A47C4();
  v43((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale, (char *)v44, v13);
  char v45 = (void *)v1[2];
  long long v46 = (void *)v1[3];
  type metadata accessor for TTSManager();
  swift_allocObject();
  v1[7] = sub_1002311F8(v45, v46);
  uint64_t v47 = type metadata accessor for TaskPriority();
  uint64_t v48 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v70, 1, 1, v47);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v49 = static MainActor.shared.getter();
  uint64_t v50 = (void *)swift_allocObject();
  v50[2] = v49;
  v50[3] = &protocol witness table for MainActor;
  void v50[4] = v1;
  sub_100056780(v48, (uint64_t)&unk_1002F7EB0, (uint64_t)v50);
  swift_release();
  uint64_t v68 = v1[4];
  swift_getKeyPath();
  uint64_t v51 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel___observationRegistrar;
  uint64_t v88 = v1;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  uint64_t v70 = v51;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v52 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
  swift_beginAccess();
  uint64_t v53 = (void (*)(uint64_t, char *, uint64_t))v14[2];
  v53(v44, v52, v13);
  swift_getKeyPath();
  uint64_t v87 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v54 = (char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale;
  swift_beginAccess();
  uint64_t v55 = (uint64_t)v71;
  v53((uint64_t)v71, v54, v13);
  uint64_t v56 = (uint64_t)v72;
  LanguagesService.$models.getter();
  char v57 = (void *)sub_1000D3658(v44, v55, v56);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v56, v74);
  uint64_t v58 = (void (*)(uint64_t, uint64_t))v14[1];
  v58(v55, v13);
  v58(v44, v13);
  id v85 = v57;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v86 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v73 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v59 = *(void *)(v73 - 8);
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
  uint64_t v74 = v59 + 56;
  uint64_t v60 = (uint64_t)v78;
  v72(v78, 1, 1, v73);
  sub_100007620(&qword_1002F21D0);
  sub_100014894(&qword_1002F21D8, &qword_1002F21D0);
  uint64_t v69 = (char *)sub_100022364();
  char v61 = v75;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v60, &qword_1002FAEF0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  uint64_t v71 = (char *)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100014894(&qword_1002F21E0, &qword_1002F20C8);
  uint64_t v62 = v77;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v61, v62);
  swift_getKeyPath();
  id v85 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v85 = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v85 = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  long long v63 = v79;
  LanguagesService.$localeModalities.getter();
  id v85 = (id)static OS_dispatch_queue.main.getter();
  v72((char *)v60, 1, 1, v73);
  sub_100014894(&qword_1002F21E8, &qword_1002F20B0);
  uint64_t v64 = v81;
  long long v65 = v82;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v60, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v80 + 8))(v63, v64);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002F21F0, &qword_1002F20B8);
  uint64_t v66 = v84;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v65, v66);
  swift_getKeyPath();
  id v85 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v85 = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  id v85 = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  return v1;
}

uint64_t sub_1001466EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a4;
  type metadata accessor for MainActor();
  v4[17] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[18] = v6;
  v4[19] = v5;
  return _swift_task_switch(sub_100146784, v6, v5);
}

uint64_t sub_100146784()
{
  id v1 = sub_100143218();
  id v2 = [v1 canonicalIdentifier];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v0[20] = v3;
  v0[21] = v5;
  uint64_t v6 = self;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1001468D8;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100146B50;
  v0[13] = &unk_1002CF908;
  v0[14] = v7;
  [v6 autoDetectSpeechUnsupportedPairsWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1001468D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  return _swift_task_switch(sub_1001469E0, v2, v1);
}

uint64_t sub_1001469E0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[16];
  swift_release();
  unint64_t v4 = v0[15];
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10014CAB4(v4, v1, v2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v3;
  *(unsigned char *)(v6 + 24) = v5 == 0;
  v0[10] = v3;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100146B50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F9760);
  **(void **)(*(void *)(v1 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return _swift_continuation_resume(v1);
}

uint64_t sub_100146BC8(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_getKeyPath();
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    BOOL v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError) != 3 && v1 == 3;
    if (v4
      && (swift_getKeyPath(),
          ObservationRegistrar.access<A, B>(_:keyPath:)(),
          swift_release(),
          (*(unsigned char *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening) & 1) == 0))
    {
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      BOOL v5 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation) == 0;
    }
    else
    {
      BOOL v5 = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    if (v5)
    {
      if (qword_1002EE608 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030EA20);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting speech translation after change in error state from error to no error", v10, 2u);
        swift_slowDealloc();
      }

      sub_100147258();
      sub_100148444();
    }
    return swift_release();
  }
  return result;
}

void sub_100146E88(void **a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    if (v6)
    {
      id v9 = v6;
      sub_100143488((uint64_t)v5);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      uint64_t v11 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
      v11(v5, v2);
      unsigned int v12 = [v9 locale:isa supportsModality:1];

      sub_100143828((uint64_t)v5);
      Class v13 = Locale._bridgeToObjectiveC()().super.isa;
      v11(v5, v2);
      unsigned __int8 v14 = [v9 locale:v13 supportsModality:1];

      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(void *)&v19[-16] = v8;
      v19[-8] = v12;
      v19[-7] = v14;
      uint64_t v20 = v8;
      sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      if (!v12 || (v14 & 1) == 0)
      {
        uint64_t v16 = swift_getKeyPath();
        __chkstk_darwin(v16);
        *(void *)&v19[-16] = v8;
        *(void *)&v19[-8] = 0;
        uint64_t v20 = v8;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        uint64_t v17 = sub_100142BA0();
        sub_1001B7638();
      }
      swift_release();
    }
    else
    {
      uint64_t v18 = swift_getKeyPath();
      __chkstk_darwin(v18);
      *(void *)&v19[-16] = v8;
      *(_WORD *)&v19[-8] = 257;
      uint64_t v20 = v8;
      sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_release();
    }
  }
}

uint64_t sub_100147258()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F7668);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002FA760);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  unsigned __int8 v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  swift_release();
  sub_100056780((uint64_t)v10, (uint64_t)&unk_1002F7EE8, (uint64_t)v14);
  swift_release();
  swift_getKeyPath();
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  uint64_t v27 = v1;
  uint64_t v30 = v1;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v15 = sub_100007620(&qword_1002F7600);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  swift_getKeyPath();
  uint64_t v25 = v1;
  id v26 = v7;
  uint64_t v30 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002FA760);
  uint64_t v16 = sub_100007620(&qword_1002F7670);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  swift_getKeyPath();
  uint64_t v23 = v1;
  uint64_t v24 = v4;
  uint64_t v30 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_10000B070((uint64_t)v4, &qword_1002F7668);
  swift_getKeyPath();
  uint64_t v21 = v1;
  char v22 = 1;
  uint64_t v30 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  uint64_t v19 = v1;
  char v20 = 0;
  uint64_t v30 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_1001476D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v16 = a1;
  uint64_t v3 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  swift_release();
  sub_100056780((uint64_t)v5, (uint64_t)&unk_1002F7ED8, (uint64_t)v10);
  swift_release();
  v7(v5, 1, 1, v6);
  uint64_t v11 = v16;
  swift_retain();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  v13[3] = &protocol witness table for MainActor;
  v13[4] = 0;
  v13[5] = v2;
  v13[6] = v11;
  sub_1000AD64C((uint64_t)v5, (uint64_t)&unk_1002F7EE0, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1001478BC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 88) = a5;
  *(void *)(v6 + 96) = a6;
  *(double *)(v6 + 80) = a1;
  type metadata accessor for MainActor();
  *(void *)(v6 + 104) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 112) = v8;
  *(void *)(v6 + 120) = v7;
  return _swift_task_switch(sub_100147958, v8, v7);
}

uint64_t sub_100147958(unint64_t a1)
{
  double v2 = *(double *)(v1 + 80) * 1000000000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v2 <= -1.0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_9:
    __break(1u);
    return static Task<>.sleep(nanoseconds:)(a1);
  }
  unint64_t v3 = (unint64_t)v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 128) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100147A3C;
  a1 = v3;
  return static Task<>.sleep(nanoseconds:)(a1);
}

uint64_t sub_100147A3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_100148110;
  }
  else {
    uint64_t v5 = sub_100147B78;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100147B78()
{
  *(void *)(v0 + 40) = &type metadata for TranslateFeatures;
  unint64_t v1 = sub_10000AB14();
  *(unsigned char *)(v0 + 16) = 9;
  *(void *)(v0 + 48) = v1;
  char v2 = isFeatureEnabled(_:)();
  sub_10000AB68(v0 + 16);
  if (v2)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    *(void *)(v0 + 144) = sub_100011554(v3, (uint64_t)qword_10030EA20);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Waiting for existing recording stop task to finish", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 88);

    swift_getKeyPath();
    *(void *)(v0 + 72) = v7;
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v8 = *(void *)(v7
                   + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__currentRecordingStopTonePlaybackTask);
    *(void *)(v0 + 152) = v8;
    if (v8)
    {
      swift_retain();
      uint64_t v9 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v9;
      *uint64_t v9 = v0;
      v9[1] = sub_100147EA8;
      return Task<>.value.getter(v0 + 56, v8, &type metadata for String);
    }
    swift_release();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Done waiting for existing recording stop task to finish. Continue to endActivity", v12, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    swift_release();
  }
  if (qword_1002EE6A8 != -1) {
    swift_once();
  }
  sub_1001BF15C(*(void *)(v0 + 96));
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100147EA8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_100147FEC, v3, v2);
}

uint64_t sub_100147FEC()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Done waiting for existing recording stop task to finish. Continue to endActivity", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_1002EE6A8 != -1) {
    swift_once();
  }
  sub_1001BF15C(*(void *)(v0 + 96));
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100148110()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100148174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 56) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014820C, v6, v5);
}

uint64_t sub_10014820C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(_DWORD *)(v3 + 24) = 0;
    *(void *)(v0 + 40) = v2;
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    swift_getKeyPath();
    *(void *)(v0 + 40) = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening) == 1)
    {
      uint64_t v4 = sub_100142BA0();
      uint64_t v5 = &v4[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v6 = *((void *)v5 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void, void, uint64_t, uint64_t))(v6 + 16))(0, 0, ObjectType, v6);
        swift_unknownObjectRelease();
      }
      uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer];
      if (v8) {
        [*(id *)(v8 + 48) endAudio];
      }
      sub_10018A180();
    }
    swift_release();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_100148444()
{
  uint64_t v1 = v0;
  uint64_t v41 = type metadata accessor for UUID();
  uint64_t v39 = *(void *)(v41 - 8);
  uint64_t v2 = __chkstk_darwin(v41);
  NSString v38 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - v4;
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  id v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - v9;
  swift_getKeyPath();
  v44[0] = v0;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v11 + 20));
  sub_10014494C((unsigned char *)(v11 + 16), v44);
  os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 20));
  char v12 = v44[0];
  swift_release();
  if (v12)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100011554(v13, (uint64_t)qword_10030EA20);
    unsigned __int8 v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_23;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "Already listening to the user";
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
    swift_slowDealloc();
LABEL_23:

    return;
  }
  swift_getKeyPath();
  v44[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError) != 3
    || *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel_appRunForTheFirstTime) != 1)
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100011554(v23, (uint64_t)qword_10030EA20);
    unsigned __int8 v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_23;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "State error present: not starting speech translation";
    goto LABEL_22;
  }
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100011554(v18, (uint64_t)qword_10030EA20);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Starting speech translation", v21, 2u);
    swift_slowDealloc();
  }

  if (qword_1002EE6A8 != -1) {
    swift_once();
  }
  if (*(void *)(qword_10030EB98
                 + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity))
  {
    swift_retain();
    Activity.attributes.getter();
    swift_release();
    uint64_t v22 = 2;
    if (LOBYTE(v44[0])) {
      uint64_t v22 = 4;
    }
    uint64_t v35 = v22;
  }
  else
  {
    uint64_t v35 = 0;
  }
  uint64_t v36 = sub_100142BA0();
  swift_getKeyPath();
  v44[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v24 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
  swift_beginAccess();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  v25(v10, v24, v6);
  swift_getKeyPath();
  uint64_t v43 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v26 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale;
  swift_beginAccess();
  uint64_t v27 = (uint64_t)v37;
  v25(v37, v26, v6);
  UUID.init()();
  uint64_t v34 = UUID.uuidString.getter();
  uint64_t v29 = v28;
  uint64_t v39 = *(void *)(v39 + 8);
  ((void (*)(char *, uint64_t))v39)(v5, v41);
  swift_getKeyPath();
  uint64_t v42 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  char v30 = *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable);
  uint64_t v31 = (uint64_t)v38;
  UUID.init()();
  uint64_t v32 = v36;
  sub_1001B689C((uint64_t)v10, v27, v34, v29, 0, 1, 1, (v30 & 1) == 0, 1u, v35, 0, v31);
  swift_bridgeObjectRelease();

  ((void (*)(uint64_t, uint64_t))v39)(v31, v41);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v33(v27, v6);
  v33((uint64_t)v10, v6);
}

uint64_t sub_100148B64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = v21;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v19 - v7;
  uint64_t v22 = (char *)v19 - v7;
  uint64_t v9 = sub_100142BA0();
  sub_1001B7710();

  swift_getKeyPath();
  uint64_t v29 = v1;
  uint64_t v10 = sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
  swift_beginAccess();
  char v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12(v8, v11, v2);
  os_log_type_t v20 = (void (*)(char *, char *, uint64_t))v12;
  swift_getKeyPath();
  uint64_t v28 = v1;
  v19[2] = v10;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale;
  swift_beginAccess();
  unsigned __int8 v14 = v6;
  v12(v6, v13, v2);
  swift_getKeyPath();
  uint64_t v25 = v1;
  uint64_t v26 = v6;
  uint64_t v27 = v1;
  v19[1] = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  os_log_type_t v15 = *(void (**)(char *, uint64_t))(v21 + 8);
  v15(v6, v2);
  uint64_t v16 = v6;
  uint64_t v17 = v22;
  v20(v16, v22, v2);
  swift_getKeyPath();
  uint64_t v23 = v1;
  uint64_t v24 = v14;
  uint64_t v27 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  v15(v14, v2);
  return ((uint64_t (*)(char *, uint64_t))v15)(v17, v2);
}

uint64_t sub_100148E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 64) = a7;
  *(void *)(v7 + 32) = a5;
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 24) = a4;
  return _swift_task_switch(sub_100148EC0, 0, 0);
}

uint64_t sub_100148EC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100148F74;
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  return sub_100231610(v4, v3, 0, 0, 0, v2, 0, 0);
}

uint64_t sub_100148F74()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1001490A8, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1001490A8()
{
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Exception while toggling TTS: %@", v4, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1001492AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100011554(v7, (uint64_t)qword_10030EA20);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v24 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Speech manager failed to translate: %@", v10, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v24 = a1;
  swift_errorRetain();
  sub_100007620((uint64_t *)&unk_1002FA720);
  type metadata accessor for _LTTranslationError(0);
  if (swift_dynamicCast())
  {
    uint64_t v13 = v23;
    sub_10014CA44(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);
    _BridgedStoredNSError.code.getter();
    if (sub_1000A6D14(v24, (uint64_t)&off_1002C8708))
    {
      swift_getKeyPath();
      uint64_t v24 = v2;
      sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v14 = v2 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported;
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported) == 1)
      {
        swift_getKeyPath();
        uint64_t v24 = v2;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if (*(unsigned char *)(v14 + 1))
        {
          sub_1001476D4(0);

          return;
        }
      }
    }
  }
  uint64_t v24 = a1;
  swift_errorRetain();
  if ((swift_dynamicCast() & 1) == 0
    || (os_log_type_t v15 = v23,
        sub_10014CA44(&qword_1002EEAE0, type metadata accessor for _LTTranslationError),
        _BridgedStoredNSError.code.getter(),
        v15,
        v24 != 11))
  {
    uint64_t v16 = type metadata accessor for TaskPriority();
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v6, 1, 1, v16);
    uint64_t v18 = swift_allocObject();
    swift_weakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    os_log_type_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v18;
    swift_release();
    sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F7EC0, (uint64_t)v20);
    swift_release();
    v17(v6, 1, 1, v16);
    swift_retain();
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = (void *)swift_allocObject();
    _OWORD v22[2] = v21;
    void v22[3] = &protocol witness table for MainActor;
    v22[4] = 0x4000000000000000;
    v22[5] = v2;
    v22[6] = 0;
    sub_1000AD64C((uint64_t)v6, (uint64_t)&unk_1002F7ED0, (uint64_t)v22);
    swift_release();
  }
}

id *sub_1001497FC()
{
  swift_release();
  swift_release();

  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale;
  uint64_t v2 = type metadata accessor for Locale();
  os_log_type_t v3 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale, v2);

  swift_unknownObjectRelease();
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult, (uint64_t *)&unk_1002FA760);
  sub_10000B070((uint64_t)v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult, &qword_1002F7668);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel___observationRegistrar;
  uint64_t v5 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t sub_100149984()
{
  sub_1001497FC();

  return swift_deallocClassInstance();
}

uint64_t sub_1001499DC()
{
  return type metadata accessor for LiveActivityViewModel();
}

uint64_t type metadata accessor for LiveActivityViewModel()
{
  uint64_t result = qword_1002F79B0;
  if (!qword_1002F79B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100149A30()
{
  type metadata accessor for Locale();
  if (v0 <= 0x3F)
  {
    sub_100149C14(319, &qword_1002F79C0, &qword_1002F7600);
    if (v1 <= 0x3F)
    {
      sub_100149C14(319, (unint64_t *)&unk_1002F79C8, &qword_1002F7670);
      if (v2 <= 0x3F)
      {
        type metadata accessor for ObservationRegistrar();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_100149C14(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100007928(a3);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100149C68(float a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EA20);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134349056;
    v14[1] = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Speech: input detected at %{public}f level", v8, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  *(void *)(v12 + 32) = v10;
  *(float *)(v12 + 40) = a1;
  swift_release();
  sub_10005692C((uint64_t)v4, (uint64_t)&unk_1002F7E98, v12);
  return swift_release();
}

uint64_t sub_100149EAC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001447B4(a1);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  *(void *)(v9 + 32) = v2;
  *(unsigned char *)(v9 + 40) = a1;
  sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F7E88, v9);
  return swift_release();
}

uint64_t sub_100149FD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = v15 + v8;
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v14;
  *((void *)v17 + 3) = &protocol witness table for MainActor;
  *((void *)v17 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v15], v9, v6);
  v17[v16] = a2;
  sub_100056780((uint64_t)v12, (uint64_t)&unk_1002F7E78, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_10014A1D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1000295C0(a1, (uint64_t)v12);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  sub_100048DE4(v12, (uint64_t)(v9 + 4));
  v9[9] = v2;
  sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F7E68, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10014A314(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_1000295C0(a1, (uint64_t)v14);
  sub_1000295C0(a2, (uint64_t)v13);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  void v11[4] = v3;
  sub_100048DE4(v14, (uint64_t)(v11 + 5));
  sub_100048DE4(v13, (uint64_t)(v11 + 10));
  sub_100056780((uint64_t)v8, (uint64_t)&unk_1002F7E48, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_10014A46C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  type metadata accessor for MainActor();
  swift_retain();
  swift_errorRetain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v2;
  v9[5] = a1;
  sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F7E38, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_10014A590(uint64_t a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(float *)(v5 + 72) = a2;
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 56) = a5;
  type metadata accessor for MainActor();
  *(void *)(v5 + 64) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014A62C, v7, v6);
}

uint64_t sub_10014A62C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    int v2 = *(_DWORD *)(v0 + 72);
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = Strong;
    *(_DWORD *)(v3 + 24) = v2;
    *(void *)(v0 + 40) = Strong;
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  **(unsigned char **)(v0 + 48) = Strong == 0;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10014A7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 72) = a5;
  *(void *)(v5 + 56) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 64) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014A83C, v7, v6);
}

uint64_t sub_10014A83C()
{
  swift_release();
  *(void *)(v0 + 40) = &type metadata for TranslateFeatures;
  unint64_t v1 = sub_10000AB14();
  *(unsigned char *)(v0 + 16) = 9;
  *(void *)(v0 + 48) = v1;
  char v2 = isFeatureEnabled(_:)();
  sub_10000AB68(v0 + 16);
  if (v2)
  {
    int v3 = *(unsigned __int8 *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 56);
    swift_getKeyPath();
    *(void *)(v0 + 16) = v4;
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v3 != *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening))
    {
      if (qword_1002EE6A8 != -1) {
        swift_once();
      }
      if (*(void *)(qword_10030EB98
                     + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationActivityManager_currentActivity)
        && (*(unsigned char *)(v0 + 72) & 1) == 0
        && sub_100145524() == 7)
      {
        uint64_t v5 = *(void *)(v0 + 56);
        uint64_t v12 = sub_10018C7EC();
        swift_getKeyPath();
        uint64_t v6 = swift_task_alloc();
        *(void *)(v6 + 16) = v5;
        *(void *)(v6 + 24) = v12;
        *(void *)(v0 + 16) = v5;
        ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
        swift_release();
        swift_release();
        swift_task_dealloc();
      }
    }
  }
  char v7 = *(unsigned char *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 56);
  swift_getKeyPath();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v8;
  *(unsigned char *)(v9 + 24) = v7;
  *(void *)(v0 + 16) = v8;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10014AB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 56) = a6;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  sub_100007620((uint64_t *)&unk_1002FA760);
  *(void *)(v6 + 40) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 48) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014ABF4, v8, v7);
}

uint64_t sub_10014ABF4()
{
  swift_release();
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received final LID result", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  char v7 = *(unsigned char *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 24);

  uint64_t v9 = sub_100007620(&qword_1002F7600);
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v5, v6, v11);
  *(unsigned char *)(v5 + v10) = v7;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  swift_getKeyPath();
  uint64_t v12 = swift_task_alloc();
  *(void *)(v12 + 16) = v8;
  *(void *)(v12 + 24) = v5;
  *(void *)(v0 + 16) = v8;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10000B070(v5, (uint64_t *)&unk_1002FA760);
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10014AE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[3] = a4;
  v5[4] = a5;
  sub_100007620(&qword_1002F7668);
  v5[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  unsigned char v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014AFA4, v8, v7);
}

uint64_t sub_10014AFA4()
{
  swift_release();
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received partial speech result", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = (void *)v0[3];
  uint64_t v10 = v0[4];

  sub_100029624(v9, v9[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  sub_100029624(v9, v9[3]);
  uint64_t v11 = AnnotatedResult.displayString.getter();
  uint64_t v13 = v12;
  uint64_t v14 = sub_100007620(&qword_1002F7670);
  uint64_t v15 = (uint64_t *)(v7 + *(int *)(v14 + 48));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v5, v8);
  *uint64_t v15 = v11;
  v15[1] = v13;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
  swift_getKeyPath();
  uint64_t v16 = swift_task_alloc();
  *(void *)(v16 + 16) = v10;
  *(void *)(v16 + 24) = v7;
  v0[2] = v10;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_10000B070(v7, &qword_1002F7668);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_10014B290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[20] = v8;
  v6[21] = *(void *)(v8 - 8);
  v6[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchTime();
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Locale();
  v6[27] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[28] = v11;
  v6[29] = *(void *)(v11 + 64);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  v6[33] = swift_task_alloc();
  type metadata accessor for MainActor();
  v6[34] = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014B4DC, v13, v12);
}

uint64_t sub_10014B4DC()
{
  swift_release();
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EA20);
  char v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Received final translation", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = sub_100142BA0();
  uint64_t v6 = &v5[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *((void *)v6 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, void, uint64_t, uint64_t))(v7 + 16))(0, 0, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  uint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer];
  if (v9) {
    [*(id *)(v9 + 48) endAudio];
  }
  uint64_t v11 = (void *)v0[15];
  uint64_t v10 = (void *)v0[16];
  sub_10018A180();

  sub_100029624(v11, v11[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  sub_100029624(v11, v11[3]);
  uint64_t v12 = AnnotatedResult.displayString.getter();
  unint64_t v14 = v13;
  sub_100029624(v10, v10[3]);
  dispatch thunk of TranslationResult.locale.getter();
  sub_100029624(v10, v10[3]);
  uint64_t v15 = dispatch thunk of TranslationResult.alternatives.getter();
  if (*(void *)(v15 + 16))
  {
    sub_1000295C0(v15 + 32, (uint64_t)(v0 + 8));
    swift_bridgeObjectRelease();
    if (v0[11])
    {
      sub_100029624(v0 + 8, v0[11]);
      uint64_t v16 = TranslationAlternative.displayString.getter();
      unint64_t v18 = v17;
      sub_10000AB68((uint64_t)(v0 + 8));
      goto LABEL_14;
    }
  }
  else
  {
    v0[12] = 0;
    *((_OWORD *)v0 + 4) = 0u;
    *((_OWORD *)v0 + 5) = 0u;
    swift_bridgeObjectRelease();
  }
  sub_10000B070((uint64_t)(v0 + 8), &qword_1002FA730);
  uint64_t v16 = 0;
  unint64_t v18 = 0xE000000000000000;
LABEL_14:
  uint64_t v19 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v19 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (v19)
  {
    uint64_t v20 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v20 = v16 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v21 = v0[33];
    uint64_t v66 = v0[32];
    if (v20)
    {
      uint64_t v22 = v0[31];
      unint64_t v53 = v18;
      uint64_t v54 = v12;
      uint64_t v23 = v0[28];
      uint64_t v50 = v0[27];
      uint64_t v51 = v0[30];
      uint64_t v24 = v0[25];
      uint64_t v56 = v0[29];
      uint64_t v57 = v0[26];
      uint64_t v26 = v0[23];
      uint64_t v25 = v0[24];
      uint64_t v61 = v26;
      uint64_t v55 = v0[22];
      uint64_t v64 = v0[21];
      uint64_t v65 = v0[20];
      uint64_t v59 = v0[19];
      uint64_t v63 = v0[18];
      uint64_t v60 = v0[17];
      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      uint64_t v52 = v16;
      uint64_t v58 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v62(v24, v26);
      uint64_t v48 = swift_allocObject();
      swift_weakInit();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
      v27(v22, v21, v50);
      v27(v51, v66, v50);
      uint64_t v28 = *(unsigned __int8 *)(v23 + 80);
      uint64_t v29 = (v28 + 24) & ~v28;
      uint64_t v30 = (v56 + v28 + v29) & ~v28;
      uint64_t v49 = v14;
      unint64_t v31 = (v56 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v48;
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32);
      v33(v32 + v29, v22, v50);
      v33(v32 + v30, v51, v50);
      uint64_t v34 = (uint64_t *)(v32 + v31);
      *uint64_t v34 = v54;
      v34[1] = v49;
      uint64_t v35 = (uint64_t *)(v32 + ((v31 + 23) & 0xFFFFFFFFFFFFFFF8));
      uint64_t *v35 = v52;
      v35[1] = v53;
      v0[6] = sub_10014C978;
      v0[7] = v32;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_10008BA1C;
      v0[5] = &unk_1002CF7C8;
      uint64_t v36 = _Block_copy(v0 + 2);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      v0[13] = _swiftEmptyArrayStorage;
      sub_10014CA44((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v36);

      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v59, v60);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v55, v65);
      v62(v57, v61);
      id v37 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v37(v66, v50);
      v37(v21, v50);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v44 = v0[27];
      uint64_t v43 = v0[28];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v45(v66, v44);
      v45(v21, v44);
    }
  }
  else
  {
    uint64_t v38 = v0[32];
    uint64_t v39 = v0[33];
    uint64_t v40 = v0[27];
    uint64_t v41 = v0[28];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v42(v38, v40);
    v42(v39, v40);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v46 = (uint64_t (*)(void))v0[1];
  return v46();
}

uint64_t sub_10014BC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v49 = a7;
  uint64_t v52 = a6;
  uint64_t v51 = a5;
  uint64_t v50 = a4;
  uint64_t v48 = a3;
  uint64_t v47 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  __chkstk_darwin(v9);
  uint64_t v56 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchTime();
  uint64_t v55 = *(void *)(v62 - 8);
  uint64_t v11 = __chkstk_darwin(v62);
  unint64_t v53 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v54 = (char *)&v44 - v13;
  uint64_t v14 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v29 = Strong;
    UUID.init()();
    uint64_t v46 = UUID.uuidString.getter();
    uint64_t v45 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    unint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v31(v23, v47, v17);
    v31(v21, v48, v17);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v16, 1, 1, v24);
    type metadata accessor for TestableTranslation();
    swift_allocObject();
    uint64_t v32 = v51;
    swift_bridgeObjectRetain();
    uint64_t v33 = swift_bridgeObjectRetain();
    sub_1000CDF74(v46, v45, (uint64_t)v23, (uint64_t)v21, 0, v50, v32, v52, 1.0, v33, 0, 0, 0, (uint64_t)v16);
    sub_10014CA44(&qword_1002F2208, (void (*)(uint64_t))type metadata accessor for TestableTranslation);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    aBlock[0] = v29;
    sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_release();
  }
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v36 = v53;
  static DispatchTime.now()();
  id v37 = v54;
  + infix(_:_:)();
  uint64_t v55 = *(void *)(v55 + 8);
  ((void (*)(char *, uint64_t))v55)(v36, v62);
  uint64_t v38 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  aBlock[4] = sub_10014CAAC;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  void aBlock[3] = &unk_1002CF7F0;
  uint64_t v39 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v40 = v56;
  static DispatchQoS.unspecified.getter();
  uint64_t v63 = _swiftEmptyArrayStorage;
  sub_10014CA44((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  uint64_t v41 = v59;
  uint64_t v42 = v61;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v58);
  ((void (*)(char *, uint64_t))v55)(v37, v62);
  swift_release();
  return swift_release();
}

uint64_t sub_10014C4BC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10014CDD0(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10014C518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  _OWORD v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014C5B0, v7, v6);
}

uint64_t sub_10014C5B0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_1001492AC(v1);
  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10014C620()
{
  return sub_10014D108((void (*)(void))&_swift_errorRelease, 48);
}

uint64_t sub_10014C63C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_10014C518(a1, v4, v5, v7, v6);
}

uint64_t sub_10014C6FC()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10000AB68(v0 + 40);
  sub_10000AB68(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_10014C74C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100021B58;
  return sub_10014B290(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

uint64_t sub_10014C818()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10014C850()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = (((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8 + 16, v6);
}

uint64_t sub_10014C978()
{
  uint64_t v1 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v5;
  uint64_t v9 = *(void *)(v0 + v6);
  uint64_t v10 = *(void *)(v0 + v6 + 8);
  uint64_t v11 = (uint64_t *)(v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_10014BC9C(v7, v0 + v3, v8, v9, v10, v12, v13);
}

uint64_t sub_10014CA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10014CA3C()
{
  return swift_release();
}

uint64_t sub_10014CA44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10014CA94()
{
  return sub_10014DDA4();
}

uint64_t sub_10014CAAC()
{
  return sub_10014C4BC();
}

void *sub_10014CAB4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = [v10 canonicalIdentifier:v22];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void sub_10014CC5C()
{
  if (qword_1002EE608 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EA20);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "translationd crashed while showing live activity, ending the activity now", v3, 2u);
    swift_slowDealloc();
  }

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)NSError);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithDomain:v5 code:14 userInfo:0];

  id v7 = v6;
  sub_1001492AC((uint64_t)v7);
}

void sub_10014CDD0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v21 = v1;
  sub_10014CA44(&qword_1002F7548, (void (*)(uint64_t))type metadata accessor for LiveActivityViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation);
  if (v7)
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation + 8);
    uint64_t v9 = qword_1002EE608;
    swift_unknownObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100011554(v10, (uint64_t)qword_10030EA20);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Toggling TTS", v13, 2u);
      swift_slowDealloc();
    }

    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = 0;
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = v2;
    *(void *)(v15 + 40) = v7;
    *(void *)(v15 + 48) = v8;
    *(unsigned char *)(v15 + 56) = a1 & 1;
    swift_retain();
    sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F7E58, v15);
    swift_release();
  }
  else
  {
    if (qword_1002EE608 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EA20);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      BOOL v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Cannot toggle TTS because there is no final translation", v19, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10014D0EC()
{
  return sub_10014D108((void (*)(void))&_swift_unknownObjectRelease, 57);
}

uint64_t sub_10014D108(void (*a1)(void), uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  a1(*(void *)(v2 + 40));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10014D16C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 56);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000496A4;
  *(unsigned char *)(v4 + 64) = v3;
  *(void *)(v4 + 40) = v2;
  *(_OWORD *)(v4 + 24) = v5;
  return _swift_task_switch(sub_100148EC0, 0, 0);
}

uint64_t sub_10014D230()
{
  swift_unknownObjectRelease();
  sub_10000AB68(v0 + 32);
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10014D278(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_10014AE80(a1, v4, v5, v6, v7);
}

uint64_t sub_10014D33C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100144094(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult, &qword_1002F7668, a2);
}

uint64_t sub_10014D370()
{
  return sub_1001442AC(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__partialSpeechResult, &qword_1002F7668);
}

uint64_t sub_10014D39C()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10014D474(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Locale() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  char v10 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000496A4;
  return sub_10014AB28(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10014D598@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100144094(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult, (uint64_t *)&unk_1002FA760, a2);
}

uint64_t sub_10014D5CC()
{
  return sub_1001442AC(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalLIDResult, (uint64_t *)&unk_1002FA760);
}

uint64_t sub_10014D5F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007620(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10014D65C()
{
  return sub_100049140(41);
}

uint64_t sub_10014D664(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_10014A7A0(a1, v4, v5, v6, v7);
}

void sub_10014D730()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListening) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10014D750()
{
  return sub_10014D9A0();
}

uint64_t sub_10014D768()
{
  return sub_100049140(44);
}

uint64_t sub_10014D770(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  float v7 = *(float *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_10014A590(a1, v7, v4, v5, v6);
}

float sub_10014D83C()
{
  float result = *(float *)(v0 + 24);
  *(float *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__speechAudioLevel) = result;
  return result;
}

uint64_t sub_10014D854()
{
  return sub_100049140(40);
}

uint64_t sub_10014D85C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  float v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *float v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1001466EC(a1, v4, v5, v6);
}

uint64_t sub_10014D910@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100142EF8(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale, a2);
}

uint64_t sub_10014D93C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100142EF8(a1, &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale, a2);
}

uint64_t sub_10014D968(unsigned __int8 *a1)
{
  return sub_100146BC8(a1);
}

void sub_10014D978(void **a1)
{
}

void sub_10014D988()
{
}

uint64_t sub_10014D9A0()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__currentRecordingStopTonePlaybackTask) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_10014D9E4()
{
  char v1 = *(unsigned char *)(v0 + 25);
  uint64_t v2 = (unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isASRSupported);
  unsigned char *v2 = *(unsigned char *)(v0 + 24);
  v2[1] = v1;
}

uint64_t sub_10014DA08()
{
  return sub_100144DF8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10014DA2C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__stateError) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10014DA44()
{
  return sub_100143180(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedTargetLocale);
}

uint64_t sub_10014DA68()
{
  return sub_100143180(*(void *)(v0 + 16), *(void *)(v0 + 24), &OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__selectedSourceLocale);
}

void sub_10014DA94()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__languageIDAvailable) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10014DAAC()
{
  return sub_100049140(40);
}

uint64_t sub_10014DAB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  float v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *float v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_100148174(a1, v4, v5, v6);
}

uint64_t sub_10014DB6C(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  double v6 = v1[4];
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v7 = *((void *)v1 + 6);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1001478BC(v6, a1, v4, v5, v8, v7);
}

uint64_t sub_10014DC3C()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__isListeningLock) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_10014DC80()
{
  return sub_100049140(40);
}

uint64_t sub_10014DC8C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10014DCD4(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  double v6 = v1[4];
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v7 = *((void *)v1 + 6);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100021B58;
  return sub_1001478BC(v6, a1, v4, v5, v8, v7);
}

uint64_t sub_10014DD9C()
{
  return sub_100049140(40);
}

uint64_t sub_10014DDA4()
{
  *(_OWORD *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17SequoiaTranslator21LiveActivityViewModel__finalTranslation) = *(_OWORD *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

unsigned char *sub_10014DDF0(unsigned char *result)
{
  *float result = *(unsigned char *)(v1 + 16);
  return result;
}

unsigned char *sub_10014DDFC@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_10014494C(a1, a2);
}

uint64_t sub_10014DE1C()
{
  return sub_10014D370();
}

uint64_t sub_10014DE34()
{
  return sub_10014D5CC();
}

uint64_t sub_10014DE4C()
{
  return sub_10014DA68();
}

uint64_t sub_10014DE64()
{
  return sub_10014DA44();
}

void sub_10014DE7C()
{
}

void sub_10014DE94()
{
}

float sub_10014DEAC()
{
  return sub_10014D83C();
}

void sub_10014DEC4()
{
}

uint64_t initializeBufferWithCopyOfBuffer for LiveActivityWithLIDListeningView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LiveActivityWithLIDListeningView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LiveActivityWithLIDListeningView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LiveActivityWithLIDListeningView()
{
  return &type metadata for LiveActivityWithLIDListeningView;
}

uint64_t sub_10014DFA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10014DFC0()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_10014E000(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale.Language();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  double v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  sub_10014EB80();
  EnvironmentValues.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_10014E144@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v103 = a2;
  int v2 = a1 & 1;
  uint64_t v3 = sub_100007620(&qword_1002F69A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v104 = (uint64_t *)((char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v89 - 8);
  uint64_t v6 = __chkstk_darwin(v89);
  uint64_t v8 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v84 - v9;
  uint64_t v98 = type metadata accessor for LabeledTextView() - 8;
  uint64_t v11 = __chkstk_darwin(v98);
  uint64_t v97 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (Swift::String *)((char *)&v84 - v13);
  uint64_t v106 = sub_100007620(&qword_1002F7580) - 8;
  uint64_t v15 = __chkstk_darwin(v106);
  uint64_t v102 = (uint64_t)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v101 = (uint64_t)&v84 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v99 = (uint64_t)&v84 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v100 = (uint64_t)&v84 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v96 = (uint64_t)&v84 - v24;
  __chkstk_darwin(v23);
  uint64_t v105 = (uint64_t)&v84 - v25;
  uint64_t v26 = swift_retain();
  int v90 = v2;
  sub_100100B30(v26, v2);
  swift_release();
  sub_100143488((uint64_t)v10);
  static Locale.current.getter();
  uint64_t v94 = v8;
  uint64_t v27 = Locale.sqDisplayName(context:in:)();
  unint64_t v29 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v31 = v8;
  uint64_t v32 = v89;
  v30(v31, v89);
  v30(v10, v32);
  uint64_t v87 = v5 + 8;
  uint64_t v88 = v30;
  swift_release();
  if (v29) {
    uint64_t v33 = v27;
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v86 = v33;
  unint64_t v34 = 0xE000000000000000;
  if (v29) {
    unint64_t v34 = v29;
  }
  unint64_t v85 = v34;
  uint64_t v35 = swift_retain();
  sub_100100B30(v35, v2);
  swift_release();
  sub_100143488((uint64_t)v10);
  swift_release();
  id v95 = self;
  id v36 = [v95 mainBundle];
  v37._object = (void *)0x800000010025FD00;
  uint64_t v93 = (void *)0x800000010025FD00;
  v37._uint64_t countAndFlagsBits = 0xD000000000000011;
  v38._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v38._object = (void *)0xEB00000000656C62;
  Swift::String v39 = Locale.ltLocalizedAppString(_:table:bundle:)(v37, v38, (NSBundle)v36);

  v30(v10, v32);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = (uint64_t)v104;
  *uint64_t v104 = KeyPath;
  uint64_t v92 = sub_100007620((uint64_t *)&unk_1002F5790);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = (int *)v98;
  *(uint64_t *)((char *)&v14->_countAndFlagsBits + *(int *)(v98 + 52)) = v43;
  uint64_t v91 = sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = (void *)v85;
  v14->_uint64_t countAndFlagsBits = v86;
  v14->_object = v45;
  v14[1] = v39;
  LOWORD(v14[2]._countAndFlagsBits) = 0;
  v14[2]._object = 0;
  v14[3]._uint64_t countAndFlagsBits = 0;
  uint64_t v46 = v44;
  sub_10001323C(v41, (uint64_t)v14 + v44[11], &qword_1002F69A8);
  uint64_t v47 = (char *)v14 + v44[12];
  *(void *)uint64_t v47 = v42;
  v47[8] = 0;
  uint64_t v48 = static Color.sourceTextColor.getter();
  uint64_t v49 = v96;
  sub_10014E9F8((uint64_t)v14, v96);
  *(void *)(v49 + *(int *)(v106 + 44)) = v48;
  sub_10014EA5C((uint64_t)v14);
  sub_10001323C(v49, v105, &qword_1002F7580);
  uint64_t v50 = swift_retain();
  char v51 = v90;
  sub_100100B30(v50, v90);
  swift_release();
  sub_100143828((uint64_t)v10);
  uint64_t v52 = v94;
  static Locale.current.getter();
  uint64_t v53 = Locale.sqDisplayName(context:in:)();
  unint64_t v55 = v54;
  uint64_t v56 = v52;
  uint64_t v57 = v32;
  uint64_t v58 = v32;
  uint64_t v59 = v88;
  v88(v56, v58);
  v59(v10, v57);
  swift_release();
  if (v55) {
    uint64_t v60 = v53;
  }
  else {
    uint64_t v60 = 0;
  }
  uint64_t v96 = v60;
  unint64_t v61 = 0xE000000000000000;
  if (v55) {
    unint64_t v61 = v55;
  }
  uint64_t v94 = (char *)v61;
  uint64_t v62 = swift_retain();
  sub_100100B30(v62, v51);
  swift_release();
  sub_100143828((uint64_t)v10);
  swift_release();
  id v63 = [v95 mainBundle];
  v64._uint64_t countAndFlagsBits = 0xD000000000000011;
  v64._object = v93;
  v65._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v65._object = (void *)0xEB00000000656C62;
  Swift::String v66 = Locale.ltLocalizedAppString(_:table:bundle:)(v64, v65, (NSBundle)v63);

  v59(v10, v57);
  uint64_t v67 = swift_getKeyPath();
  uint64_t v68 = (uint64_t)v104;
  *uint64_t v104 = v67;
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = swift_getKeyPath();
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = (uint64_t)v97;
  *(void *)&v97[v46[13]] = v70;
  swift_storeEnumTagMultiPayload();
  uint64_t v72 = v94;
  *(void *)uint64_t v71 = v96;
  *(void *)(v71 + 8) = v72;
  *(Swift::String *)(v71 + 16) = v66;
  *(_WORD *)(v71 + 32) = 1;
  *(void *)(v71 + 40) = 0;
  *(void *)(v71 + 48) = 0;
  sub_10001323C(v68, v71 + v46[11], &qword_1002F69A8);
  uint64_t v73 = v71 + v46[12];
  *(void *)uint64_t v73 = v69;
  *(unsigned char *)(v73 + 8) = 0;
  uint64_t v74 = static Color.translateAccentColor.getter();
  uint64_t v75 = v99;
  sub_10014E9F8(v71, v99);
  *(void *)(v75 + *(int *)(v106 + 44)) = v74;
  sub_10014EA5C(v71);
  uint64_t v76 = v100;
  sub_10001323C(v75, v100, &qword_1002F7580);
  uint64_t v77 = v105;
  uint64_t v78 = v101;
  sub_10014EAB8(v105, v101);
  uint64_t v79 = v102;
  sub_10014EAB8(v76, v102);
  uint64_t v80 = v103;
  sub_10014EAB8(v78, v103);
  uint64_t v81 = sub_100007620(&qword_1002F7EF8);
  uint64_t v82 = v80 + *(int *)(v81 + 48);
  *(void *)uint64_t v82 = 0;
  *(unsigned char *)(v82 + 8) = 1;
  sub_10014EAB8(v79, v80 + *(int *)(v81 + 64));
  sub_10014EB20(v76);
  sub_10014EB20(v77);
  sub_10014EB20(v79);
  return sub_10014EB20(v78);
}

uint64_t sub_10014E8F4@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 8);
  *(void *)a1 = static VerticalAlignment.bottom.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v4 = sub_100007620(&qword_1002F7EF0);
  return sub_10014E144(v3, a1 + *(int *)(v4 + 44));
}

uint64_t sub_10014E954()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_10014E998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10014E9C8()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_10014E9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LabeledTextView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014EA5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LabeledTextView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10014EAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F7580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014EB20(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F7580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10014EB80()
{
  unint64_t result = qword_1002F7F00;
  if (!qword_1002F7F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7F00);
  }
  return result;
}

unint64_t sub_10014EBD8()
{
  unint64_t result = qword_1002F7F08;
  if (!qword_1002F7F08)
  {
    sub_100007928(&qword_1002F7F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F7F08);
  }
  return result;
}

id sub_10014EC38()
{
  uint64_t v1 = *(void **)v0;
  if (*(void *)v0)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    if (v2)
    {
      id v6 = v1;
      swift_retain();
      sub_100007620((uint64_t *)&unk_1002F5730);
      Binding.projectedValue.getter();
      long long v8 = *(_OWORD *)(v0 + 120);
      sub_100007620(&qword_1002FAF70);
      Binding.projectedValue.getter();
      sub_100007620(&qword_1002F80F8);
      UIViewControllerRepresentableContext.coordinator.getter();
      sub_100007620(&qword_1002F8100);
      Binding.wrappedValue.getter();
      char v3 = objc_allocWithZone((Class)type metadata accessor for CameraPreviewViewController());
      return sub_100158A8C(v6, v2, v9, v10, v11, v12, v9, v10, (char)v11, v8, v7, v3);
    }
  }
  else
  {
    type metadata accessor for ConversationManager();
    sub_100159830((unint64_t *)&unk_1002F97E0, 255, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    EnvironmentObject.error()();
    __break(1u);
  }
  type metadata accessor for ConversationContext(0);
  sub_100159830(&qword_1002EF2A0, 255, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  id v5 = v1;
  id result = (id)EnvironmentObject.error()();
  __break(1u);
  return result;
}

void sub_10014EE50(uint64_t a1)
{
  sub_100007620(&qword_1002F34E0);
  Binding.wrappedValue.getter();
  Binding.wrappedValue.getter();
  if (v4 > 0.0)
  {
    Binding.wrappedValue.getter();
    sub_100157510(v4, v4);
  }
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC);
  if (v2)
  {
    id v3 = v2;
    dispatch thunk of DataScannerViewController.isTorchOn.setter();
  }
}

uint64_t sub_10014EF98()
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E960);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v3 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Setting torch availability: %{BOOL}d", v3, 8u);
    swift_slowDealloc();
  }

  sub_100007620(&qword_1002FAF70);
  return Binding.wrappedValue.setter();
}

uint64_t sub_10014F0E8()
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E960);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v3 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Setting torch on/off: %{BOOL}d", v3, 8u);
    swift_slowDealloc();
  }

  sub_100007620(&qword_1002FAF70);
  return Binding.wrappedValue.setter();
}

void sub_10014F238(Swift::Int a1, char a2)
{
  uint64_t v3 = v2;
  char v4 = a1;
  sub_1000F9430(a1, a2);
  if (qword_1002EE5A0 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((LOBYTE(v13[0]) == 5 || (sub_1002371F4(v4, v13[0]) & 1) == 0) && UIAccessibilityIsVoiceOverRunning())
  {
    switch(v4)
    {
      case 1:
      case 2:
      case 3:
      case 4:
        char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v5) {
          goto LABEL_9;
        }
        UIAccessibilityNotifications v12 = UIAccessibilityAnnouncementNotification;
        sub_1000F8F28(v4);
        NSString v11 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        UIAccessibilityPostNotification(v12, v11);
        goto LABEL_13;
      default:
        swift_bridgeObjectRelease();
LABEL_9:
        id v6 = *(void **)(v2 + 256);
        if (!v6 || ([v6 isValid] & 1) == 0)
        {
          uint64_t v7 = self;
          uint64_t v8 = swift_allocObject();
          *(unsigned char *)(v8 + 16) = v4;
          v13[4] = sub_10015A250;
          v13[5] = v8;
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 1107296256;
          long long v13[2] = sub_100158A24;
          v13[3] = &unk_1002CFDD0;
          uint64_t v9 = _Block_copy(v13);
          swift_release();
          id v10 = [v7 scheduledTimerWithTimeInterval:0 repeats:v9 block:3.0];
          _Block_release(v9);
          NSString v11 = *(NSString *)(v3 + 256);
          *(void *)(v3 + 256) = v10;
LABEL_13:
        }
        break;
    }
  }
}

uint64_t sub_10014F510(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v8 + 32) = a2;
  sub_100056780((uint64_t)v5, (uint64_t)&unk_1002F8220, v8);
  return swift_release();
}

uint64_t sub_10014F620(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 24) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 16) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10014F6B8, v6, v5);
}

uint64_t sub_10014F6B8()
{
  char v1 = *(unsigned char *)(v0 + 24);
  swift_release();
  UIAccessibilityNotifications v2 = UIAccessibilityAnnouncementNotification;
  sub_1000F8F28(v1);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  UIAccessibilityPostNotification(v2, v3);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10014F75C()
{
  long long v1 = *(_OWORD *)(v0 + 224);
  v9[12] = *(_OWORD *)(v0 + 208);
  v9[13] = v1;
  v9[14] = *(_OWORD *)(v0 + 240);
  long long v2 = *(_OWORD *)(v0 + 160);
  v9[8] = *(_OWORD *)(v0 + 144);
  v9[9] = v2;
  long long v3 = *(_OWORD *)(v0 + 192);
  v9[10] = *(_OWORD *)(v0 + 176);
  v9[11] = v3;
  long long v4 = *(_OWORD *)(v0 + 96);
  v9[4] = *(_OWORD *)(v0 + 80);
  v9[5] = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  v9[6] = *(_OWORD *)(v0 + 112);
  v9[7] = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  v9[0] = *(_OWORD *)(v0 + 16);
  v9[1] = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  v9[2] = *(_OWORD *)(v0 + 48);
  v9[3] = v7;
  sub_1001598D4((uint64_t)v9);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraPreviewView.Coordinator()
{
  return self;
}

id sub_10014F808(unsigned __int8 a1)
{
  sub_1000F9F00(a1);
  long long v2 = *(void **)(v1 + 256);

  return [v2 invalidate];
}

id sub_10014F84C()
{
  sub_1000FA1D0();
  uint64_t v1 = *(void **)(v0 + 256);

  return [v1 invalidate];
}

uint64_t sub_10014F898()
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E960);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    long long v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Dismantling CameraPreviewViewController, clearing guidance but allowing other code to turn off the flashlight if needed", v3, 2u);
    swift_slowDealloc();
  }

  return sub_100156684();
}

uint64_t sub_10014F97C@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[13];
  v19[12] = v1[12];
  v19[13] = v3;
  v19[14] = v1[14];
  long long v4 = v1[9];
  v19[8] = v1[8];
  v19[9] = v4;
  long long v5 = v1[11];
  v19[10] = v1[10];
  v19[11] = v5;
  long long v6 = v1[5];
  void v19[4] = v1[4];
  v19[5] = v6;
  long long v7 = v1[7];
  v19[6] = v1[6];
  v19[7] = v7;
  long long v8 = v1[1];
  v19[0] = *v1;
  v19[1] = v8;
  long long v9 = v1[3];
  v19[2] = v1[2];
  void v19[3] = v9;
  type metadata accessor for CameraPreviewView.Coordinator();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 256) = 0;
  long long v11 = v1[13];
  *(_OWORD *)(v10 + 208) = v1[12];
  *(_OWORD *)(v10 + 224) = v11;
  *(_OWORD *)(v10 + 240) = v1[14];
  long long v12 = v1[9];
  *(_OWORD *)(v10 + 144) = v1[8];
  *(_OWORD *)(v10 + 160) = v12;
  long long v13 = v1[11];
  *(_OWORD *)(v10 + 176) = v1[10];
  *(_OWORD *)(v10 + 192) = v13;
  long long v14 = v1[5];
  *(_OWORD *)(v10 + 80) = v1[4];
  *(_OWORD *)(v10 + 96) = v14;
  long long v15 = v1[7];
  *(_OWORD *)(v10 + 112) = v1[6];
  *(_OWORD *)(v10 + 128) = v15;
  long long v16 = v1[1];
  *(_OWORD *)(v10 + 16) = *v1;
  *(_OWORD *)(v10 + 32) = v16;
  long long v17 = v1[3];
  *(_OWORD *)(v10 + 48) = v1[2];
  *(_OWORD *)(v10 + 64) = v17;
  *a1 = v10;
  return sub_1001596DC((uint64_t)v19);
}

uint64_t sub_10014FA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100159878();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10014FAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100159878();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10014FB0C()
{
}

void sub_10014FBBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = *(id *)&v0[v2];
  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  long long v5 = v4;
  [v4 bounds];
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;

  [v3 setFrame:v7, v9, v11, v13];
  id v14 = [v1 view];
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  long long v15 = v14;
  [v14 addSubview:*(void *)&v1[v2]];

  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100249A60;
  id v17 = [*(id *)&v1[v2] topAnchor];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v19 = v18;
  id v20 = [v18 topAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v16 + 32) = v21;
  id v22 = [*(id *)&v1[v2] leadingAnchor];
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v24 = v23;
  id v25 = [v23 leadingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25];
  *(void *)(v16 + 40) = v26;
  id v27 = [*(id *)&v1[v2] bottomAnchor];
  id v28 = [v1 view];
  if (!v28)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v29 = v28;
  id v30 = [v28 bottomAnchor];

  id v31 = [v27 constraintEqualToAnchor:v30];
  *(void *)(v16 + 48) = v31;
  id v32 = [*(id *)&v1[v2] trailingAnchor];
  id v33 = [v1 view];
  if (!v33)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v34 = v33;
  uint64_t v35 = self;
  id v36 = [v34 trailingAnchor];

  id v37 = [v32 constraintEqualToAnchor:v36];
  *(void *)(v16 + 56) = v37;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];

  [*(id *)&v1[v2] setHidden:1];

  sub_1001503C0();
}

void sub_100150014(uint64_t a1, double a2, double a3)
{
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
  id v7 = [v3 traitCollection];
  id v8 = [v7 horizontalSizeClass];

  if (v8 == (id)2)
  {
    double v9 = *(void **)&v3[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint];
    if (v9) {
      [v9 setConstant:a3];
    }
  }
}

uint64_t sub_10015013C()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  [super applicationWillSuspend];
  sub_100151104();
  sub_100156510();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10014F0E8();
    swift_unknownObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v3 != 5)
  {
    uint64_t result = sub_10005477C(v2, v3);
    if (v3 == 1) {
      return sub_100157A1C();
    }
  }
  return result;
}

void sub_100150274()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  [super applicationDidResume];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 != 5)
  {
    sub_10005477C(v1, v2);
    if (v2 == 1)
    {
      sub_100154DCC();
      sub_100151474();
    }
  }
}

void sub_1001503C0()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = objc_allocWithZone((Class)AVCaptureEventInteraction);
  v8[4] = sub_10015A224;
  v8[5] = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100158A24;
  v8[3] = &unk_1002CFD58;
  objc_super v3 = _Block_copy(v8);
  swift_retain();
  id v4 = [v2 initWithEventHandler:v3];
  _Block_release(v3);
  swift_release();
  swift_release();
  id v5 = [v0 view];
  if (v5)
  {
    double v6 = v5;
    [v5 addInteraction:v4];

    id v7 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_eventInteraction];
    *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_eventInteraction] = v4;
  }
  else
  {
    __break(1u);
  }
}

void sub_100150508(void *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 phase] == (id)1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v6 = (void *)Strong;
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
      type metadata accessor for MainActor();
      id v8 = v6;
      uint64_t v9 = static MainActor.shared.getter();
      objc_super v10 = (void *)swift_allocObject();
      v10[2] = v9;
      v10[3] = &protocol witness table for MainActor;
      v10[4] = v8;
      sub_100056780((uint64_t)v4, (uint64_t)&unk_1002F8210, (uint64_t)v10);
      swift_release();
    }
  }
}

void sub_100150670()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F81C8);
  uint64_t v44 = *(NSObject **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F81D0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F81D8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC;
  id v17 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC];
  if (!v17)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100011554(v26, (uint64_t)qword_10030E960);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v45, v27))
    {
      id v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v27, "Data scanner isn't initialized so not scanning", v28, 2u);
      swift_slowDealloc();
    }
    unint64_t v29 = v45;
LABEL_18:

    return;
  }
  uint64_t v42 = v9;
  uint64_t v43 = v13;
  uint64_t v45 = v17;
  if (dispatch thunk of DataScannerViewController.isScanning.getter())
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100011554(v18, (uint64_t)qword_10030E960);
    uint64_t v19 = v1;
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      *(_DWORD *)id v21 = 136315138;
      v47[0] = v22;
      id v46 = *(id *)&v1[v16];
      id v23 = v46;
      sub_100007620(&qword_1002F81F8);
      uint64_t v24 = String.init<A>(describing:)();
      id v46 = (id)sub_100202FD4(v24, v25, (uint64_t *)v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v44, v20, "Illegal attempt to start scanning on scanner that's already scanning: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    unint64_t v29 = v44;
    goto LABEL_18;
  }
  uint64_t v40 = v12;
  uint64_t v41 = v1;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100011554(v30, (uint64_t)qword_10030E960);
  id v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Starting Scanning", v33, 2u);
    swift_slowDealloc();
  }

  unint64_t v34 = v45;
  dispatch thunk of DataScannerViewController.startCamera()();
  dispatch thunk of DataScannerViewController.startScanning()();
  uint64_t v35 = v41;
  sub_1001537D0();
  swift_beginAccess();
  sub_100007620(&qword_1002F2C28);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F81E0, &qword_1002F81C8);
  Publisher.filter(_:)();
  ((void (*)(char *, uint64_t))v44[1].isa)(v7, v5);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  v47[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v4, 1, 1, v36);
  sub_100014894(&qword_1002F81E8, &qword_1002F81D0);
  sub_100022364();
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v4, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v8);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F81F0, &qword_1002F81D8);
  uint64_t v37 = v40;
  Swift::String v38 = (void *)Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v37);
  v47[3] = (id)type metadata accessor for AnyCancellable();
  v47[0] = v38;
  uint64_t v39 = (uint64_t)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_contextObserver];
  swift_beginAccess();
  sub_10015A0FC((uint64_t)v47, v39);
  swift_endAccess();
}

BOOL sub_100150FA8(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

void sub_100150FB8()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    type metadata accessor for MainActor();
    id v6 = v4;
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v6;
    sub_100056780((uint64_t)v2, (uint64_t)&unk_1002F8208, (uint64_t)v8);
    swift_release();
  }
}

void sub_100151104()
{
  uint64_t v1 = v0;
  if (qword_1002EE5C8 != -1) {
LABEL_34:
  }
    swift_once();
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E960);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping Scanning", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer) invalidate];
  uint64_t v7 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = 0;

  uint64_t v8 = v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 + 16) + 16))(1, ObjectType);
    swift_unknownObjectRelease();
  }
  memset(v23, 0, sizeof(v23));
  uint64_t v11 = v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_contextObserver;
  swift_beginAccess();
  sub_10015A0FC((uint64_t)v23, v11);
  swift_endAccess();
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC);
  if (v12)
  {
    id v13 = v12;
    dispatch thunk of DataScannerViewController.isTorchOn.setter();
    dispatch thunk of DataScannerViewController.stopScanning()();
    dispatch thunk of DataScannerViewController.stopCamera()();
  }
  v1 += OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_observationTasks;
  swift_beginAccess();
  uint64_t v14 = *(void *)v1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(*(void *)v1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  uint64_t v17 = v16 & *(void *)(*(void *)v1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      v17 &= v17 - 1;
      goto LABEL_12;
    }
    int64_t v20 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v18) {
      goto LABEL_32;
    }
    uint64_t v21 = *(void *)(v14 + 8 * v20);
    ++v19;
    if (!v21)
    {
      int64_t v19 = v20 + 1;
      if (v20 + 1 >= v18) {
        goto LABEL_32;
      }
      uint64_t v21 = *(void *)(v14 + 8 * v19);
      if (!v21)
      {
        int64_t v19 = v20 + 2;
        if (v20 + 2 >= v18) {
          goto LABEL_32;
        }
        uint64_t v21 = *(void *)(v14 + 8 * v19);
        if (!v21)
        {
          int64_t v19 = v20 + 3;
          if (v20 + 3 >= v18) {
            goto LABEL_32;
          }
          uint64_t v21 = *(void *)(v14 + 8 * v19);
          if (!v21)
          {
            int64_t v19 = v20 + 4;
            if (v20 + 4 >= v18) {
              goto LABEL_32;
            }
            uint64_t v21 = *(void *)(v14 + 8 * v19);
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v17 = (v21 - 1) & v21;
LABEL_12:
    Task.cancel()();
  }
  int64_t v22 = v20 + 5;
  if (v22 >= v18)
  {
LABEL_32:
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v21 = *(void *)(v14 + 8 * v22);
  if (v21)
  {
    int64_t v19 = v22;
    goto LABEL_31;
  }
  while (1)
  {
    int64_t v19 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v19 >= v18) {
      goto LABEL_32;
    }
    uint64_t v21 = *(void *)(v14 + 8 * v19);
    ++v22;
    if (v21) {
      goto LABEL_31;
    }
  }
  __break(1u);
}

void sub_100151474()
{
  uint64_t v1 = v0;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E960);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Launch pre-check triggered", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_launchPrerequisitesDebounceTimer;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_launchPrerequisitesDebounceTimer);
  if (!v7) {
    goto LABEL_13;
  }
  id v8 = v7;
  if (![v8 isValid])
  {

LABEL_13:
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_100159FE8;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100158A24;
    void aBlock[3] = &unk_1002CFCE0;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = self;
    swift_retain();
    id v14 = [v13 timerWithTimeInterval:0 repeats:v12 block:5.0];
    _Block_release(v12);
    swift_release();
    swift_release();
    uint64_t v15 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v14;

    sub_100151B0C();
    return;
  }
  oslog = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Skipping launch prerequisites because it's already in flight", v10, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100151718(void *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030E960);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to finish checking launch prerequisites in time; starting a new request",
      v8,
      2u);
    swift_slowDealloc();
  }

  [a1 invalidate];
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v12 = (void *)swift_allocObject();
  long long v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  sub_100056780((uint64_t)v4, (uint64_t)&unk_1002F81C0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_100151930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  return _swift_task_switch(sub_100151950, 0, 0);
}

uint64_t sub_100151950()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[6] = Strong;
  if (Strong)
  {
    type metadata accessor for MainActor();
    v0[7] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100151A40, v3, v2);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100151A40()
{
  swift_release();
  sub_100151474();
  return _swift_task_switch(sub_100151AAC, 0, 0);
}

uint64_t sub_100151AAC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100151B0C()
{
  uint64_t v1 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v1 - 8);
  uint64_t v40 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  __chkstk_darwin(v4);
  uint64_t v41 = type metadata accessor for LocalePair();
  uint64_t v5 = *(void *)(v41 - 8);
  uint64_t v6 = __chkstk_darwin(v41);
  Swift::String v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v37 = v11;
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v35 - v12;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100011554(v13, (uint64_t)qword_10030E960);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Launch pre-check happening now", v16, 2u);
    swift_slowDealloc();
  }

  uint64_t v39 = v0;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v17 = v42;
  LocalePair.init(sourceLocale:targetLocale:)();
  int64_t v18 = v10;
  int64_t v19 = v10;
  uint64_t v20 = v41;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v36(v19, v17, v41);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    id v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)id v23 = 136446210;
    sub_100159830((unint64_t *)&unk_1002FAEC0, 255, (void (*)(uint64_t))&type metadata accessor for LocalePair);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v43 = sub_100202FD4(v24, v25, &v44);
    uint64_t v20 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v18, v20);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Launch pre-check %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v35 = *(void (**)(char *, uint64_t))(v5 + 8);
    v35(v18, v20);
  }

  uint64_t v26 = type metadata accessor for TaskPriority();
  uint64_t v27 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v40, 1, 1, v26);
  uint64_t v28 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v29 = v38;
  uint64_t v30 = v42;
  v36(v38, v42, v20);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v31 = static MainActor.shared.getter();
  unint64_t v32 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v31;
  *((void *)v33 + 3) = &protocol witness table for MainActor;
  *((void *)v33 + 4) = v28;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v33[v32], v29, v20);
  swift_release();
  sub_100056780(v27, (uint64_t)&unk_1002F81A0, (uint64_t)v33);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v35)(v30, v20);
}

uint64_t sub_10015211C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a4;
  v5[38] = a5;
  uint64_t v6 = type metadata accessor for Locale();
  v5[39] = v6;
  v5[40] = *(void *)(v6 - 8);
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F4B80);
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v5[46] = v7;
  v5[47] = *(void *)(v7 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v5[49] = v8;
  v5[50] = *(void *)(v8 - 8);
  v5[51] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchTime();
  v5[52] = v9;
  v5[53] = *(void *)(v9 - 8);
  v5[54] = swift_task_alloc();
  v5[55] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[56] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[57] = v11;
  v5[58] = v10;
  return _swift_task_switch(sub_100152390, v11, v10);
}

uint64_t sub_100152390()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[59] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[54];
    uint64_t v4 = v0[52];
    uint64_t v3 = v0[53];
    uint64_t v14 = v0[55];
    uint64_t v15 = v0[51];
    uint64_t v20 = v0[50];
    uint64_t v21 = v0[49];
    uint64_t v17 = v0[48];
    uint64_t v19 = v0[47];
    uint64_t v18 = v0[46];
    uint64_t v5 = swift_allocObject();
    v0[60] = v5;
    swift_unknownObjectWeakInit();
    uint64_t v6 = swift_allocObject();
    v0[61] = v6;
    *(unsigned char *)(v6 + 16) = 0;
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    swift_retain();
    uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v16(v2, v4);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = sub_100159E2C;
    v8[4] = v5;
    v0[6] = sub_100159E5C;
    v0[7] = v8;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_10008BA1C;
    v0[5] = &unk_1002CFC90;
    uint64_t v9 = _Block_copy(v0 + 2);
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[36] = _swiftEmptyArrayStorage;
    sub_100159830((unint64_t *)&qword_1002F5710, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v9);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v15, v21);
    v16(v14, v4);
    swift_release();
    uint64_t v10 = (void *)swift_task_alloc();
    v0[62] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1001527C4;
    uint64_t v11 = v0[38];
    return static LanguagesStatusService.languagePairPath(_:)(v11);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1001527C4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 266) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 464);
  uint64_t v4 = *(void *)(v2 + 456);
  return _swift_task_switch(sub_1001528EC, v4, v3);
}

uint64_t sub_1001528EC()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 488);
  swift_release();
  swift_beginAccess();
  *(unsigned char *)(v1 + 16) = 1;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E960);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = LanguagePairPath.description.getter();
    *(void *)(v0 + 280) = sub_100202FD4(v6, v7, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Translation path for locale pair: %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  switch(*(unsigned char *)(v0 + 266))
  {
    case 3:
      uint64_t v11 = *(void *)(v0 + 360);
      swift_retain();
      static UIContentUnavailableConfiguration.empty()();
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [self _systemImageNamed:v12];

      UIContentUnavailableConfiguration.image.setter();
      uint64_t v14 = self;
      id v15 = [v14 mainBundle];
      v70._object = (void *)0xE000000000000000;
      v16._uint64_t countAndFlagsBits = 0x43495645445F4E4FLL;
      v16._object = (void *)0xEF454C5449545F45;
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v70._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v70);

      UIContentUnavailableConfiguration.text.setter();
      id v18 = [v14 mainBundle];
      v71._object = (void *)0xE000000000000000;
      v19._object = (void *)0x800000010025F9D0;
      v19._uint64_t countAndFlagsBits = 0xD000000000000015;
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      v71._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v71);

      UIContentUnavailableConfiguration.secondaryText.setter();
      id v21 = [v14 mainBundle];
      v72._object = (void *)0xE000000000000000;
      v22._uint64_t countAndFlagsBits = 0x43495645445F4E4FLL;
      v22._object = (void *)0xEE004B4E494C5F45;
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v72._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v72);

      uint64_t v24 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.button.modify();
      UIButton.Configuration.title.setter();
      v24(v0 + 136, 0);
      sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
      static UIColor.translateAccentColor.getter();
      unint64_t v25 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.button.modify();
      UIButton.Configuration.baseForegroundColor.setter();
      v25(v0 + 168, 0);
      UIContentUnavailableConfiguration.directionalLayoutMargins.setter();
      sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
      swift_retain();
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v26 = (void (*)(uint64_t, void))UIContentUnavailableConfiguration.buttonProperties.modify();
      UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
      v26(v0 + 104, 0);
      swift_release();
      goto LABEL_9;
    case 4:
      uint64_t v11 = *(void *)(v0 + 360);
      uint64_t v28 = *(void *)(v0 + 328);
      uint64_t v27 = *(void *)(v0 + 336);
      uint64_t v29 = *(void *)(v0 + 312);
      uint64_t v30 = *(void *)(v0 + 320);
      LocalePair.sourceLocale.getter();
      LocalePair.targetLocale.getter();
      id v31 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v33 = Locale._bridgeToObjectiveC()().super.isa;
      id v34 = [v31 initWithSourceLocale:isa targetLocale:v33];

      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v35(v28, v29);
      v35(v27, v29);
      sub_1000CFA70(v34, v11);

LABEL_9:
      uint64_t v9 = type metadata accessor for UIContentUnavailableConfiguration();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v11, 0, 1, v9);
      break;
    case 5:
      uint64_t v36 = *(void *)(v0 + 360);
      sub_1000D050C();
      uint64_t v9 = type metadata accessor for UIContentUnavailableConfiguration();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
      break;
    default:
      uint64_t v8 = *(void *)(v0 + 360);
      uint64_t v9 = type metadata accessor for UIContentUnavailableConfiguration();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      break;
  }
  uint64_t v37 = *(void *)(v0 + 352);
  sub_100159E68(*(void *)(v0 + 360), v37);
  type metadata accessor for UIContentUnavailableConfiguration();
  Swift::String v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  int v39 = v38(v37, 1, v9);
  uint64_t v40 = *(void **)(v0 + 472);
  uint64_t v41 = *(void *)(v0 + 352);
  if (v39 == 1)
  {
    id v42 = v40;
    sub_10000B070(v41, (uint64_t *)&unk_1002F4B80);
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(void *)(v0 + 96) = 0;
  }
  else
  {
    *(void *)(v0 + 88) = v9;
    *(void *)(v0 + 96) = &protocol witness table for UIContentUnavailableConfiguration;
    uint64_t v43 = sub_100014830((uint64_t *)(v0 + 64));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 32))(v43, v41, v9);
    id v44 = v40;
  }
  uint64_t v45 = *(void **)(v0 + 472);
  uint64_t v46 = *(void *)(v0 + 360);
  uint64_t v47 = *(void *)(v0 + 344);
  UIViewController.contentUnavailableConfiguration.setter();

  sub_100159E68(v46, v47);
  int v48 = v38(v47, 1, v9);
  uint64_t v49 = *(void *)(v0 + 344);
  if (v48 == 1)
  {
    sub_10000B070(*(void *)(v0 + 344), (uint64_t *)&unk_1002F4B80);
    sub_1001533C8();
    swift_release();
  }
  else
  {
    swift_release();
    sub_10000B070(v49, (uint64_t *)&unk_1002F4B80);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136446210;
      uint64_t v53 = LanguagePairPath.description.getter();
      *(void *)(v0 + 272) = sub_100202FD4(v53, v54, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Translation path %{public}s is unavailable, showing error message and not scanning", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v55 = *(void *)(v0 + 472);
    sub_100151104();
    [*(id *)(v55 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView) setHidden:0];
    uint64_t v56 = v55 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v58 = *(void *)(Strong + 168);
      char v59 = *(unsigned char *)(Strong + 176);
      *(void *)(v0 + 248) = *(void *)(Strong + 160);
      *(void *)(v0 + 256) = v58;
      *(unsigned char *)(v0 + 264) = v59;
      *(unsigned char *)(v0 + 265) = 1;
      sub_100007620(&qword_1002FAF70);
      Binding.wrappedValue.setter();
      swift_unknownObjectRelease();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v60 = *(void *)(v56 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t))(*(void *)(v60 + 16) + 24))(ObjectType);
      swift_unknownObjectRelease();
    }
  }
  uint64_t v62 = *(char **)(v0 + 472);
  id v63 = *(void **)&v62[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_launchPrerequisitesDebounceTimer];
  uint64_t v64 = *(void *)(v0 + 360);
  if (v63)
  {
    [v63 invalidate];

    swift_release();
    sub_10000B070(v64, (uint64_t *)&unk_1002F4B80);
  }
  else
  {
    sub_10000B070(*(void *)(v0 + 360), (uint64_t *)&unk_1002F4B80);

    swift_release();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v65 = *(uint64_t (**)(void))(v0 + 8);
  return v65();
}

void sub_1001533C8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    UIViewController.contentUnavailableConfiguration.setter();

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100007620(&qword_1002FAF70);
      Binding.wrappedValue.setter();
      swift_unknownObjectRelease();
    }
    [*(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView] setHidden:1];
    sub_100150670();
  }
}

uint64_t sub_1001534B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  void v11[4] = a1;
  v11[5] = a2;
  v11[6] = a3;
  sub_100056780((uint64_t)v8, (uint64_t)&unk_1002F81B0, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1001535E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[6] = a5;
  v6[7] = a6;
  void v6[5] = a4;
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100153684, v8, v7);
}

uint64_t sub_100153684()
{
  uint64_t v1 = v0[5];
  swift_release();
  swift_beginAccess();
  if ((*(unsigned char *)(v1 + 16) & 1) == 0)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100011554(v2, (uint64_t)qword_10030E960);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "languagePairPath is taking a while; enabling camera until that returns results",
        v5,
        2u);
      swift_slowDealloc();
    }
    uint64_t v6 = (void (*)(void))v0[6];

    v6();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_1001537D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v12 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC];
  if (v12)
  {
    uint64_t v35 = v12;
    id v13 = sub_10008CD5C();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v15 = [v13 oppositeToLocale:isa];

    if (v15)
    {
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v7, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
        if (qword_1002EE5C8 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_100011554(v16, (uint64_t)qword_10030E960);
        Swift::String v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v17, v18))
        {
          Swift::String v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::String v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Beginning text observations", v19, 2u);
          swift_slowDealloc();
        }

        uint64_t v20 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
        type metadata accessor for MainActor();
        id v21 = v35;
        id v22 = v1;
        uint64_t v23 = static MainActor.shared.getter();
        uint64_t v24 = (void *)swift_allocObject();
        void v24[2] = v23;
        v24[3] = &protocol witness table for MainActor;
        unint64_t v24[4] = v21;
        v24[5] = v22;
        uint64_t v25 = sub_100056780((uint64_t)v4, (uint64_t)&unk_1002F8170, (uint64_t)v24);
        swift_beginAccess();
        swift_retain();
        sub_100196428(&v36, v25);
        swift_endAccess();
        swift_release();

        swift_release();
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100011554(v30, (uint64_t)qword_10030E960);
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      Class v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unable to configure source and target locales for Camera translation", v33, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100011554(v26, (uint64_t)qword_10030E960);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v27, "Data Scanner View Controller isn't initialized yet, so can't begin text observations", v28, 2u);
      swift_slowDealloc();
    }
    uint64_t v29 = v35;
  }
}

uint64_t sub_100153E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[25] = a4;
  v5[26] = a5;
  uint64_t v6 = type metadata accessor for TaskHint();
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  v5[31] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v5[32] = v7;
  v5[33] = *(void *)(v7 - 8);
  v5[34] = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F4110);
  v5[35] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Locale();
  v5[36] = v8;
  v5[37] = *(void *)(v8 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  uint64_t v9 = sub_100007620(&qword_1002F8178);
  v5[41] = v9;
  v5[42] = *(void *)(v9 - 8);
  v5[43] = swift_task_alloc();
  uint64_t v10 = sub_100007620(&qword_1002F8180);
  v5[44] = v10;
  v5[45] = *(void *)(v10 - 8);
  v5[46] = swift_task_alloc();
  v5[47] = type metadata accessor for MainActor();
  v5[48] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[49] = v12;
  v5[50] = v11;
  return _swift_task_switch(sub_1001540F4, v12, v11);
}

uint64_t sub_1001540F4()
{
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 328);
  dispatch thunk of DataScannerViewController.recognizedItems.getter();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
  *(void *)(v0 + 408) = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer;
  *(void *)(v0 + 416) = v4;
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_conversation;
  *(void *)(v0 + 424) = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController__viewportHasText;
  *(void *)(v0 + 432) = v5;
  uint64_t v6 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge;
  *(void *)(v0 + 440) = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_selfLoggingInvocation;
  *(void *)(v0 + 448) = v6;
  *(_DWORD *)(v0 + 164) = enum case for TaskHint.system(_:);
  uint64_t v7 = static MainActor.shared.getter();
  *(void *)(v0 + 456) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100154254;
  uint64_t v9 = *(void *)(v0 + 352);
  return AsyncStream.Iterator.next(isolation:)(v0 + 192, v7, &protocol witness table for MainActor, v9);
}

uint64_t sub_100154254()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 400);
  uint64_t v3 = *(void *)(v1 + 392);
  return _swift_task_switch(sub_100154398, v3, v2);
}

uint64_t sub_100154398()
{
  uint64_t v1 = v0[24];
  if (v1)
  {
    uint64_t v2 = v0[51];
    uint64_t v3 = v0[26];
    uint64_t v4 = *(void **)(v3 + v2);
    if (*(void *)(v1 + 16))
    {
      [v4 invalidate];
      uint64_t v5 = *(void **)(v3 + v2);
      *(void *)(v3 + v2) = 0;

      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v6 = *(void *)(v0[26] + v0[52] + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 + 16) + 16))(1, ObjectType);
        swift_unknownObjectRelease();
      }
    }
    else if (!v4)
    {
      id v88 = self;
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v0[6] = sub_100159B74;
      v0[7] = v14;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100158A24;
      v0[5] = &unk_1002CFBC8;
      id v15 = _Block_copy(v0 + 2);
      swift_release();
      id v16 = [v88 scheduledTimerWithTimeInterval:0 repeats:v15 block:3.0];
      _Block_release(v15);
      Swift::String v17 = *(void **)(v3 + v2);
      *(void *)(v3 + v2) = v16;
    }
    uint64_t v18 = v0[26] + v0[53];
    BOOL v19 = *(void *)(v1 + 16) != 0;
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    v0[21] = *(void *)v18;
    v0[22] = v20;
    *((unsigned char *)v0 + 184) = v21;
    *((unsigned char *)v0 + 162) = v19;
    sub_100007620(&qword_1002FAF70);
    Binding.wrappedValue.setter();
    uint64_t v22 = *(void *)(v18 + 8);
    char v23 = *(unsigned char *)(v18 + 16);
    v0[18] = *(void *)v18;
    v0[19] = v22;
    *((unsigned char *)v0 + 160) = v23;
    Binding.wrappedValue.getter();
    if (*((unsigned char *)v0 + 161) == 1 && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v24 = *(void *)(v0[26] + v0[52] + 8);
      uint64_t v25 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 + 16) + 8))(4, 1, v25);
      swift_unknownObjectRelease();
    }
    if ((sub_10000619C() & 1) == 0) {
      goto LABEL_26;
    }
    v0[16] = &type metadata for TranslateFeatures;
    v0[17] = sub_10000AB14();
    *((unsigned char *)v0 + 104) = 1;
    char v26 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)(v0 + 13));
    if ((v26 & 1) == 0
      || (v0[11] = &type metadata for VisualIntelligenceFeatures,
          v0[12] = sub_100159688(),
          char v27 = isFeatureEnabled(_:)(),
          sub_10000AB68((uint64_t)(v0 + 8)),
          (v27 & 1) == 0))
    {
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v28 = sub_10008CD5C();
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    id v30 = [v28 oppositeToLocale:isa];

    if (v30)
    {
      uint64_t v32 = v0[37];
      uint64_t v31 = v0[38];
      uint64_t v34 = v0[35];
      uint64_t v33 = v0[36];
      static Locale._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v35 = *(void (**)(void))(v32 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v34, v31, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v33);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) != 1)
      {
        uint64_t v84 = v0[55];
        uint64_t v86 = (void *)v0[39];
        uint64_t v37 = v0[36];
        uint64_t v36 = v0[37];
        uint64_t v38 = v0[33];
        id v89 = (id)v0[40];
        uint64_t v91 = v0[32];
        uint64_t v40 = (int *)v0[30];
        uint64_t v39 = v0[31];
        uint64_t v82 = v0[26];
        v35();
        uint64_t v41 = *(void *)(v82 + v84);
        id v42 = *(void (**)(uint64_t, id, uint64_t))(v36 + 16);
        v42(v39, v89, v37);
        v42(v39 + v40[5], v86, v37);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v39 + v40[14], 1, 1, v91);
        *(void *)(v39 + v40[6]) = 5;
        *(void *)(v39 + v40[7]) = 4;
        *(void *)(v39 + v40[8]) = 0;
        *(unsigned char *)(v39 + v40[9]) = 0;
        uint64_t v43 = v39 + v40[10];
        *(void *)uint64_t v43 = 0;
        *(unsigned char *)(v43 + 8) = 1;
        *(unsigned char *)(v39 + v40[11]) = 0;
        *(void *)(v39 + v40[12]) = 0;
        uint64_t v44 = v39 + v40[13];
        *(void *)uint64_t v44 = 0;
        *(unsigned char *)(v44 + 8) = 1;
        swift_retain();
        sub_1001A1344(v39);
        int v48 = *(void **)(v41 + 16);
        if (!v48)
        {
          __break(1u);
          return AsyncStream.Iterator.next(isolation:)(v48, v45, v46, v47);
        }
        uint64_t v49 = v0[56];
        uint64_t v50 = v0[31];
        uint64_t v51 = v0[26];
        id v52 = [v48 invocationId];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();
        swift_release();

        sub_1000B68AC(v50);
        uint64_t v53 = *(void **)(v51 + v49);
        if (v53)
        {
          uint64_t v54 = v0[37];
          uint64_t v92 = v0[36];
          uint64_t v55 = v0[33];
          uint64_t v56 = v0[34];
          uint64_t v87 = v0[40];
          id v90 = (id)v0[32];
          uint64_t v57 = v0[28];
          uint64_t v58 = v0[29];
          uint64_t v83 = v0[39];
          uint64_t v85 = v0[27];
          (*(void (**)(uint64_t, void))(v57 + 104))(v58, *((unsigned int *)v0 + 41));
          id v59 = v53;
          VisualTranslationViewBridge.translate(_:sourceLocale:targetLocale:taskHint:selfLoggingInvocationId:)();
          swift_bridgeObjectRelease();

          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v85);
          (*(void (**)(uint64_t, id))(v55 + 8))(v56, v90);
          uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
          v60(v83, v92);
          v60(v87, v92);
        }
        else
        {
          uint64_t v75 = v0[39];
          uint64_t v74 = v0[40];
          uint64_t v76 = v0[36];
          uint64_t v77 = v0[37];
          uint64_t v79 = v0[33];
          uint64_t v78 = v0[34];
          uint64_t v80 = v0[32];
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
          uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
          v81(v75, v76);
          v81(v74, v76);
        }
LABEL_27:
        uint64_t v61 = static MainActor.shared.getter();
        v0[57] = v61;
        uint64_t v62 = (void *)swift_task_alloc();
        v0[58] = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_100154254;
        uint64_t v47 = v0[44];
        uint64_t v46 = &protocol witness table for MainActor;
        int v48 = v0 + 24;
        uint64_t v45 = v61;
        return AsyncStream.Iterator.next(isolation:)(v48, v45, v46, v47);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0[37] + 56))(v0[35], 1, 1, v0[36]);
    }
    uint64_t v63 = v0[35];
    swift_bridgeObjectRelease();
    swift_release();
    sub_10000B070(v63, (uint64_t *)&unk_1002F4110);
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_100011554(v64, (uint64_t)qword_10030E960);
    Swift::String v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v67 = 0;
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "Unable to configure source and target locales for Camera translation", v67, 2u);
      swift_slowDealloc();
    }
    uint64_t v69 = v0[45];
    uint64_t v68 = v0[46];
    uint64_t v70 = v0[44];
    uint64_t v71 = v0[40];
    uint64_t v72 = v0[36];
    uint64_t v73 = v0[37];

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
  }
  else
  {
    (*(void (**)(void, void))(v0[45] + 8))(v0[46], v0[44]);
    swift_release();
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030E960);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "AsyncStream of observations has finished", v11, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    sub_1001A1C14();
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_100154DCC()
{
  uint64_t v1 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v130 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007620(&qword_1002FAED0);
  uint64_t v127 = *(void *)(v3 - 8);
  uint64_t v128 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F8128);
  uint64_t v129 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F8130);
  os_log_t v131 = *(os_log_t *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DataScannerViewController.QualityLevel();
  id v13 = *(void (***)(void, void, void))(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F8138);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC])
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100011554(v19, (uint64_t)qword_10030E960);
    os_log_t v131 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v131, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v131, v20, "Attempt to add a data scanner when one is already present; doing nothing",
        v21,
        2u);
      swift_slowDealloc();
    }
    os_log_t v22 = v131;

    return;
  }
  long long v123 = v13;
  uint64_t v124 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC;
  *(void *)&long long v125 = v15;
  uint64_t v126 = v0;
  uint64_t v118 = v5;
  uint64_t v119 = v8;
  uint64_t v120 = v6;
  int v121 = v11;
  uint64_t v122 = v9;
  sub_100007620(&qword_1002F8140);
  type metadata accessor for DataScannerViewController.RecognizedDataType();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1002488D0;
  uint64_t v24 = type metadata accessor for DataScannerViewController.TextContentType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 1, 1, v24);
  static DataScannerViewController.RecognizedDataType.text(languages:textContentType:)();
  sub_10000B070((uint64_t)v18, &qword_1002F8138);
  if (*(void *)(v23 + 16)) {
    sub_100112078(v23);
  }
  uint64_t v25 = v126;
  uint64_t v26 = v125;
  uint64_t v27 = v12;
  id v28 = v123;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v28[13](v26, enum case for DataScannerViewController.QualityLevel.fast(_:), v27);
  id v29 = objc_allocWithZone((Class)type metadata accessor for DataScannerViewController());
  uint64_t v30 = DataScannerViewController.init(recognizedDataTypes:qualityLevel:recognizesMultipleItems:isHighFrameRateTrackingEnabled:isPinchToZoomEnabled:isGuidanceEnabled:isHighlightingEnabled:usesSingleCamera:)();
  uint64_t v31 = v124;
  uint64_t v32 = *(void **)&v25[v124];
  *(void *)&v25[v124] = v30;

  uint64_t v34 = *(void **)&v25[v31];
  if (!v34) {
    goto LABEL_28;
  }
  sub_100159830(&qword_1002F8148, v33, (void (*)(uint64_t))type metadata accessor for CameraPreviewViewController);
  uint64_t v35 = v25;
  uint64_t v36 = v34;
  dispatch thunk of DataScannerViewController.delegate.setter();
  sub_100159830(&qword_1002F8150, v37, (void (*)(uint64_t))type metadata accessor for CameraPreviewViewController);
  swift_unknownObjectRetain();
  dispatch thunk of DataScannerViewController.privateDelegate.setter();
  [v35 addChildViewController:v36];
  id v38 = [v36 view];
  if (!v38)
  {
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v114 = type metadata accessor for Logger();
    sub_100011554(v114, (uint64_t)qword_10030E960);
    unsigned __int8 v111 = Logger.logObject.getter();
    os_log_type_t v115 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v111, v115))
    {
      uint64_t v116 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v116 = 0;
      _os_log_impl((void *)&_mh_execute_header, v111, v115, "Unable to find data scanner view", v116, 2u);
      swift_slowDealloc();
    }
    goto LABEL_37;
  }
  uint64_t v39 = v38;
  id v40 = [v35 view];
  if (!v40)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v41 = v40;
  [v40 bounds];
  double v43 = v42;
  double v45 = v44;
  double v47 = v46;
  double v49 = v48;

  [v39 setFrame:v43, v45, v47, v49];
  [v39 setContentMode:2];
  id v50 = [v35 view];
  if (!v50)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v51 = v50;
  [v50 insertSubview:v39 below:*(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView]];

  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v52 = sub_100157618(v39);
  uint64_t v53 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint;
  uint64_t v54 = *(void **)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint];
  *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint] = v52;

  id v55 = sub_1001577E8(v39);
  uint64_t v56 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint;
  uint64_t v57 = *(void **)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint];
  *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint] = v55;

  uint64_t v58 = sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v59 = swift_allocObject();
  long long v125 = xmmword_100249A60;
  *(_OWORD *)(v59 + 16) = xmmword_100249A60;
  uint64_t v60 = *(void **)&v35[v53];
  if (!v60)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v61 = (void *)v59;
  uint64_t v124 = v58;
  *(void *)(v59 + 32) = v60;
  id v62 = v60;
  id v63 = [v39 leadingAnchor];
  id v64 = [v35 view];
  if (!v64)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  Swift::String v65 = v64;
  id v66 = [v64 leadingAnchor];

  id v67 = [v63 constraintEqualToAnchor:v66];
  v61[5] = v67;
  uint64_t v68 = *(void **)&v35[v56];
  if (!v68)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v61[6] = v68;
  id v69 = v68;
  id v70 = [v39 trailingAnchor];
  id v71 = [v35 view];
  if (!v71)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    if (qword_1002EE5C8 != -1) {
      swift_once();
    }
    uint64_t v110 = type metadata accessor for Logger();
    sub_100011554(v110, (uint64_t)qword_10030E960);
    unsigned __int8 v111 = Logger.logObject.getter();
    os_log_type_t v112 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v113 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v113 = 0;
      _os_log_impl((void *)&_mh_execute_header, v111, v112, "Unable to initialize data scanner view controller", v113, 2u);
      swift_slowDealloc();
    }
LABEL_37:

    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v72 = v71;
  uint64_t v73 = (void (**)(void, void, void))self;
  id v74 = [v72 trailingAnchor];

  id v75 = [v70 constraintEqualToAnchor:v74];
  v61[7] = v75;
  id v132 = v61;
  specialized Array._endMutation()();
  uint64_t v76 = sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  long long v123 = v73;
  [v73 activateConstraints:isa];

  id v78 = objc_allocWithZone((Class)type metadata accessor for VisualTranslationViewBridge());
  uint64_t v79 = (void *)VisualTranslationViewBridge.init(optimizedForExtendedExperience:)();
  uint64_t v80 = VisualTranslationViewBridge.view.getter();
  uint64_t v126 = v36;
  if (v80)
  {
    uint64_t v81 = (void *)v80;
    uint64_t v82 = (void *)dispatch thunk of DataScannerViewController.overlayContainerView.getter();
    uint64_t v117 = v76;
    uint64_t v83 = v82;
    [v82 bounds:v117];
    [v81 setFrame:];
    [v81 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v84 = [self clearColor];
    [v81 setBackgroundColor:v84];

    [v83 addSubview:v81];
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = v125;
    id v86 = [v81 topAnchor];
    id v87 = [v83 topAnchor];
    id v88 = [v86 constraintEqualToAnchor:v87];

    *(void *)(v85 + 32) = v88;
    id v89 = [v81 leadingAnchor];
    id v90 = [v83 leadingAnchor];
    id v91 = [v89 constraintEqualToAnchor:v90];

    *(void *)(v85 + 40) = v91;
    id v92 = [v81 bottomAnchor];
    id v93 = [v83 bottomAnchor];
    id v94 = [v92 constraintEqualToAnchor:v93];

    *(void *)(v85 + 48) = v94;
    id v95 = [v81 trailingAnchor];
    id v96 = [v83 trailingAnchor];
    id v97 = [v95 constraintEqualToAnchor:v96];

    *(void *)(v85 + 56) = v97;
    id v132 = (id)v85;
    specialized Array._endMutation()();
    Class v98 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v123 activateConstraints:v98];
  }
  uint64_t v99 = *(void **)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge];
  *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge] = v79;
  id v100 = v79;

  swift_beginAccess();
  sub_100007620(&qword_1002F34A0);
  uint64_t v101 = v118;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F31D8, &qword_1002FAED0);
  sub_100159830(&qword_1002F2040, 255, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v102 = v119;
  uint64_t v103 = v128;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v101, v103);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v132 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v104 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v105 = (uint64_t)v130;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v130, 1, 1, v104);
  sub_100014894(&qword_1002F8158, &qword_1002F8128);
  sub_100022364();
  uint64_t v107 = v120;
  uint64_t v106 = v121;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v105, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v129 + 8))(v102, v107);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F8160, &qword_1002F8130);
  uint64_t v108 = v122;
  uint64_t v109 = Publisher<>.sink(receiveValue:)();
  swift_release();
  ((void (*)(char *, uint64_t))v131[1].isa)(v106, v108);
  *(void *)&v35[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_visualTranslationLocaleSubscription] = v109;
  swift_release();
  sub_1001561A8();
}

void sub_100155E84()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Locale.languageIdentifier.getter();
  Locale.init(identifier:)();
  type metadata accessor for VisualTranslationService();
  char v4 = static VisualTranslationService.isOCRLocale(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = (void *)Strong;
      uint64_t v7 = Strong + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
      uint64_t v8 = swift_unknownObjectWeakLoadStrong();
      uint64_t v9 = *(void *)(v7 + 8);

      if (v8)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 + 16) + 16))(2, ObjectType);
        swift_unknownObjectRelease();
      }
    }
    swift_beginAccess();
    uint64_t v11 = swift_unknownObjectWeakLoadStrong();
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v13 = swift_unknownObjectWeakLoadStrong();

      if (v13)
      {
        uint64_t v14 = *(void *)(v13 + 168);
        char v15 = *(unsigned char *)(v13 + 176);
        uint64_t v30 = *(void *)(v13 + 160);
        uint64_t v31 = v14;
        char v32 = v15;
        char v33 = 0;
        sub_100007620(&qword_1002FAF70);
        Binding.wrappedValue.setter();
        swift_unknownObjectRelease();
      }
    }
    swift_beginAccess();
    uint64_t v16 = swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      sub_100150670();
LABEL_18:
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v18 = swift_unknownObjectWeakLoadStrong();
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      uint64_t v20 = v18 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
      uint64_t v21 = swift_unknownObjectWeakLoadStrong();
      uint64_t v22 = *(void *)(v20 + 8);

      if (v21)
      {
        uint64_t v23 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 16) + 8))(2, 1, v23);
        swift_unknownObjectRelease();
      }
    }
    swift_beginAccess();
    uint64_t v24 = swift_unknownObjectWeakLoadStrong();
    if (v24)
    {
      uint64_t v25 = (void *)v24;
      uint64_t v26 = swift_unknownObjectWeakLoadStrong();

      if (v26)
      {
        uint64_t v27 = *(void *)(v26 + 168);
        char v28 = *(unsigned char *)(v26 + 176);
        uint64_t v30 = *(void *)(v26 + 160);
        uint64_t v31 = v27;
        char v32 = v28;
        char v33 = 1;
        sub_100007620(&qword_1002FAF70);
        Binding.wrappedValue.setter();
        swift_unknownObjectRelease();
      }
    }
    swift_beginAccess();
    uint64_t v29 = swift_unknownObjectWeakLoadStrong();
    if (v29)
    {
      uint64_t v17 = (void *)v29;
      sub_100151104();
      goto LABEL_18;
    }
  }
}

uint64_t sub_1001561A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F8110);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription;
  if (*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  v13[1] = (id)sub_10017C7F4(*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_conversation), *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_context));
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  v13[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_100007620(&qword_1002F8118);
  sub_100014894(&qword_1002FAF10, &qword_1002F8118);
  sub_100022364();
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v4, &qword_1002FAEF0);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F8120, &qword_1002F8110);
  uint64_t v11 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v1 + v9) = v11;
  return swift_release();
}

void sub_100156488(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availability] = v1;
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    char v4 = (void *)v3;
    sub_100151474();
  }
}

id sub_100156510()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC);
  if (v3)
  {
    uint64_t v4 = qword_1002EE5C8;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100011554(v6, (uint64_t)qword_10030E960);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Removing Scanner View", v9, 2u);
      swift_slowDealloc();
    }

    id result = [v5 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = result;
    [result removeFromSuperview];

    [v5 removeFromParentViewController];
    uint64_t v12 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = 0;
  }
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge);
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge) = 0;

  return (id)sub_100156684();
}

uint64_t sub_100156684()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription;
  if (*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v0 + v1) = 0;
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_visualTranslationLocaleSubscription;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_visualTranslationLocaleSubscription))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v0 + v2) = 0;

  return swift_release();
}

uint64_t sub_100156728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v6;
  v4[11] = v5;
  return _swift_task_switch(sub_1001567C0, v6, v5);
}

uint64_t sub_1001567C0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC);
  if (v3
    && (id v4 = v3,
        dispatch thunk of DataScannerViewController.stopScanning()(),
        v4,
        uint64_t v5 = *(void **)(v1 + v2),
        (v0[12] = v5) != 0))
  {
    uint64_t v9 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of DataScannerViewController.capturePhoto()
                           + async function pointer to dispatch thunk of DataScannerViewController.capturePhoto());
    v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1001568E4;
    return v9();
  }
  else
  {
    swift_release();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1001568E4(uint64_t a1)
{
  id v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_10015703C;
  }
  else
  {
    v4[14] = a1;
    uint64_t v5 = v4[10];
    uint64_t v6 = v4[11];
    uint64_t v7 = sub_100156A10;
  }
  return _swift_task_switch(v7, v5, v6);
}

void sub_100156A10()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 64);
  swift_release();
  id v4 = sub_1001570A4(*(void *)(*(void *)(v3
                                           + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_context)
                               + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_lastKnownInterfaceOrientation));

  id v5 = [v2 view];
  if (!v5)
  {
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v6 = v5;
  [v5 frame];
  double v8 = v7;

  uint64_t v9 = *(void **)(v0 + 96);
  if (v8 <= 0.0)
  {
    [v4 size];
    double v45 = v44;
    [v4 size];
    double v47 = v46;
    id v48 = [v9 view];
    double v49 = v48;
    if (v45 >= v47)
    {
      if (!v48)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      id v93 = *(void **)(v0 + 96);
      [v48 frame];
      CGFloat v95 = v94;
      CGFloat v97 = v96;
      CGFloat v99 = v98;
      CGFloat v101 = v100;

      v156.origin.CGFloat x = v95;
      v156.origin.CGFloat y = v97;
      v156.size.double width = v99;
      v156.size.double height = v101;
      double Height = CGRectGetHeight(v156);
      [v4 size];
      double v104 = v103;
      [v4 size];
      double v106 = v105;
      id v107 = [v93 view];
      if (!v107)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v108 = v107;
      uint64_t v109 = *(void **)(v0 + 96);
      [v107 frame];
      CGFloat v111 = v110;
      CGFloat v113 = v112;
      CGFloat v115 = v114;
      CGFloat v117 = v116;

      v157.origin.CGFloat x = v111;
      v157.origin.CGFloat y = v113;
      v157.size.double width = v115;
      v157.size.double height = v117;
      double Width = CGRectGetWidth(v157);
      id v119 = [v109 view];
      if (!v119)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v120 = v119;
      int v121 = *(void **)(v0 + 96);
      [v119 frame];
      CGFloat v123 = v122;
      CGFloat v125 = v124;
      CGFloat v127 = v126;
      CGFloat v129 = v128;

      v158.origin.CGFloat x = v123;
      v158.origin.CGFloat y = v125;
      v158.size.double width = v127;
      v158.size.double height = v129;
      double v130 = CGRectGetWidth(v158);
      id v131 = [v121 view];
      if (!v131)
      {
LABEL_39:
        __break(1u);
        return;
      }
      id v89 = v131;
      double v90 = Height / v104;
      double v39 = (v106 - Width / (Height / v104)) * 0.5;
      double v40 = v130 / v90;
      [v131 frame];
      double v92 = v132;
    }
    else
    {
      if (!v48)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      id v50 = *(void **)(v0 + 96);
      [v48 frame];
      CGFloat v52 = v51;
      CGFloat v54 = v53;
      CGFloat v56 = v55;
      CGFloat v58 = v57;

      v153.origin.CGFloat x = v52;
      v153.origin.CGFloat y = v54;
      v153.size.double width = v56;
      v153.size.double height = v58;
      double v59 = CGRectGetWidth(v153);
      [v4 size];
      double v61 = v60;
      [v4 size];
      double v63 = v62;
      id v64 = [v50 view];
      if (!v64)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      Swift::String v65 = v64;
      id v66 = *(void **)(v0 + 96);
      [v64 frame];
      CGFloat v68 = v67;
      CGFloat v70 = v69;
      CGFloat v72 = v71;
      CGFloat v74 = v73;

      v154.origin.CGFloat x = v68;
      v154.origin.CGFloat y = v70;
      v154.size.double width = v72;
      v154.size.double height = v74;
      double v75 = CGRectGetHeight(v154);
      id v76 = [v66 view];
      if (!v76)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      uint64_t v77 = v76;
      id v78 = *(void **)(v0 + 96);
      [v76 frame];
      CGFloat v80 = v79;
      CGFloat v82 = v81;
      CGFloat v84 = v83;
      CGFloat v86 = v85;

      v155.origin.CGFloat x = v80;
      v155.origin.CGFloat y = v82;
      v155.size.double width = v84;
      v155.size.double height = v86;
      double v87 = CGRectGetHeight(v155);
      id v88 = [v78 view];
      if (!v88)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      id v89 = v88;
      double v90 = v59 / v61;
      double v39 = (v63 - v75 / (v59 / v61)) * 0.5;
      double v40 = v87 / v90;
      [v88 frame];
      double v92 = v91;
    }

    double v43 = v92 / v90;
  }
  else
  {
    id v10 = [*(id *)(v0 + 96) view];
    if (!v10)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v11 = v10;
    uint64_t v12 = *(void **)(v0 + 96);
    [v10 frame];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    v151.origin.CGFloat x = v14;
    v151.origin.CGFloat y = v16;
    v151.size.double width = v18;
    v151.size.double height = v20;
    double v21 = CGRectGetHeight(v151);
    [v4 size];
    double v23 = v22;
    id v24 = [v12 view];
    if (!v24)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v25 = v24;
    uint64_t v26 = *(void **)(v0 + 96);
    [v24 frame];
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;

    v152.origin.CGFloat x = v28;
    v152.origin.CGFloat y = v30;
    v152.size.double width = v32;
    v152.size.double height = v34;
    double v35 = CGRectGetHeight(v152);
    id v36 = [v26 view];
    if (!v36)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v37 = v36;
    double v38 = v21 / v23;
    double v39 = v8 / (v38 + v38);
    double v40 = (v35 - v8) / v38;
    [v36 frame];
    double v42 = v41;

    double v43 = v42 / v38;
  }
  uint64_t v133 = 0;
  double v134 = v39;
  double v135 = v40;
  CGRect v159 = CGRectIntegral(*(CGRect *)(&v43 - 3));
  CGFloat x = v159.origin.x;
  CGFloat y = v159.origin.y;
  CGFloat v138 = v159.size.width;
  CGFloat v139 = v159.size.height;
  unsigned int v140 = (CGImage *)[v4 CGImage];
  if (!v140) {
    goto LABEL_26;
  }
  uint64_t v141 = v140;
  v160.origin.CGFloat x = x;
  v160.origin.CGFloat y = y;
  v160.size.double width = v138;
  v160.size.double height = v139;
  CGImageRef v142 = CGImageCreateWithImageInRect(v140, v160);

  if (!v142)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v143 = v142;
  id v144 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v143 imageOrientation:[v4 imageOrientation]];

  if (!v144)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v145 = *(void **)(v0 + 96);
  uint64_t v146 = *(void *)(v0 + 64) + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController__staticImage;
  long long v147 = *(_OWORD *)v146;
  uint64_t v148 = *(void *)(v146 + 16);
  LOBYTE(v146) = *(unsigned char *)(v146 + 24);
  *(_OWORD *)(v0 + 16) = v147;
  *(void *)(v0 + 32) = v148;
  *(unsigned char *)(v0 + 40) = v146;
  *(void *)(v0 + 48) = v144;
  *(unsigned char *)(v0 + 56) = 2;
  sub_100007620((uint64_t *)&unk_1002F5730);
  Binding.wrappedValue.setter();

  uint64_t v149 = *(void (**)(void))(v0 + 8);
  v149();
}

uint64_t sub_10015703C()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1001570A4(uint64_t a1)
{
  uint64_t v2 = v1;
  id v11 = v2;
  id v4 = [v2 CGImage];
  if (v4)
  {
    id v5 = v4;
    id v6 = [self currentDevice];
    unsigned int v7 = [v6 sf_isiPad];

    if (v7)
    {
      double v8 = v11;
      switch(a1)
      {
        case 4:
          id result = [objc_allocWithZone((Class)UIImage) initWithCGImage:v5 imageOrientation:1];
          if (result) {
            goto LABEL_13;
          }
          __break(1u);
          break;
        case 3:
          break;
        case 2:
          id result = [objc_allocWithZone((Class)UIImage) initWithCGImage:v5 imageOrientation:2];
          if (!result)
          {
            __break(1u);
            goto LABEL_8;
          }
LABEL_13:
          id v10 = result;

          return v10;
        default:
LABEL_12:
          id result = v8;
          goto LABEL_13;
      }
      id result = [objc_allocWithZone((Class)UIImage) initWithCGImage:v5 imageOrientation:0];
      if (!result)
      {
        __break(1u);
        return result;
      }
      goto LABEL_13;
    }
    double v8 = v11;
    goto LABEL_12;
  }
LABEL_8:

  return v11;
}

uint64_t sub_100157298()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    id v6 = (void *)swift_allocObject();
    void v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_100056780((uint64_t)v2, (uint64_t)&unk_1002F8190, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001573B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100157448, v6, v5);
}

uint64_t sub_100157448()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + 8))(1, 1, ObjectType);
    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer);
  *(void *)(v5 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer) = 0;

  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_100157510(double a1, double a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint);
  if (v3)
  {
    uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint);
    if (v4)
    {
      id v11 = v3;
      id v7 = v4;
      [v11 constant];
      if (v8 != a1) {
        [v11 setConstant:a1];
      }
      [v7 constant];
      if (v9 != a2)
      {
        [v7 setConstant:a2];
        LODWORD(v10) = 1148846080;
        if (a2 <= 0.0) {
          *(float *)&double v10 = 1.0;
        }
        [v7 setPriority:v10];
      }
    }
  }
}

id sub_100157618(void *a1)
{
  id v2 = [a1 topAnchor];
  id result = [v1 view];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result topAnchor];

    id v6 = [v2 constraintEqualToAnchor:v5];
    [v6 setConstant:0.0];
    id v7 = [v1 traitCollection];
    id v8 = [v7 horizontalSizeClass];

    if (v8 == (id)1 && swift_unknownObjectWeakLoadStrong())
    {
      type metadata accessor for CameraPreviewView.Coordinator();
      double v9 = (_OWORD *)swift_dynamicCastClass();
      if (v9)
      {
        long long v10 = v9[13];
        long long v22 = v9[12];
        long long v23 = v10;
        long long v11 = v9[15];
        long long v24 = v9[14];
        long long v25 = v11;
        long long v12 = v9[9];
        v20[7] = v9[8];
        v20[8] = v12;
        long long v13 = v9[11];
        v20[9] = v9[10];
        long long v21 = v13;
        long long v14 = v9[5];
        v20[3] = v9[4];
        v20[4] = v14;
        long long v15 = v9[7];
        v20[5] = v9[6];
        v20[6] = v15;
        long long v16 = v9[2];
        v20[0] = v9[1];
        v20[1] = v16;
        v20[2] = v9[3];
        sub_1001596DC((uint64_t)v20);
        swift_unknownObjectRelease();
        uint64_t v17 = *((void *)&v21 + 1);
        long long v18 = v22;
        sub_100007620(&qword_1002F34E0);
        Binding.wrappedValue.getter();
        sub_1001598D4((uint64_t)v20);
        if (v19 > 0.0) {
          [v6 setConstant:v19, v17, v18];
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001577E8(void *a1)
{
  id v2 = [a1 bottomAnchor];
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v4 = result;
  id v5 = [result topAnchor];

  id v6 = [v2 constraintEqualToAnchor:v5];
  id result = [v1 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  id v7 = result;
  [result bounds];
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  CGFloat v15 = v14;

  v33.origin.CGFloat x = v9;
  v33.origin.CGFloat y = v11;
  v33.size.double width = v13;
  v33.size.double height = v15;
  [v6 setConstant:CGRectGetHeight(v33)];
  id v16 = [v1 traitCollection];
  id v17 = [v16 horizontalSizeClass];

  if (v17 == (id)1 && swift_unknownObjectWeakLoadStrong())
  {
    type metadata accessor for CameraPreviewView.Coordinator();
    long long v18 = (_OWORD *)swift_dynamicCastClass();
    if (v18)
    {
      long long v19 = v18[13];
      v29[11] = v18[12];
      long long v30 = v19;
      long long v20 = v18[15];
      long long v31 = v18[14];
      long long v32 = v20;
      long long v21 = v18[9];
      v29[7] = v18[8];
      v29[8] = v21;
      long long v22 = v18[11];
      v29[9] = v18[10];
      v29[10] = v22;
      long long v23 = v18[5];
      void v29[3] = v18[4];
      v29[4] = v23;
      long long v24 = v18[7];
      void v29[5] = v18[6];
      v29[6] = v24;
      long long v25 = v18[2];
      v29[0] = v18[1];
      v29[1] = v25;
      void v29[2] = v18[3];
      sub_1001596DC((uint64_t)v29);
      swift_unknownObjectRelease();
      long long v26 = v30;
      uint64_t v27 = v31;
      sub_100007620(&qword_1002F34E0);
      Binding.wrappedValue.getter();
      sub_1001598D4((uint64_t)v29);
      if (v28 > 0.0) {
        [v6 setConstant:v28, v26, v27];
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return v6;
}

uint64_t sub_100157A1C()
{
  uint64_t v0 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  id v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  double v10 = (char *)&v23 - v9;
  __chkstk_darwin(v8);
  double v12 = (char *)&v23 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v13 = sub_10008CD5C();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  id v15 = [v13 oppositeToLocale:isa];

  if (v15)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    id v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v16(v2, v7, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
    {
      v16(v10, v2, v3);
      swift_retain();
      sub_1001A1818(0, 0, (uint64_t)v12, (uint64_t)v10);
      swift_release();
      id v17 = *(void (**)(char *, uint64_t))(v4 + 8);
      v17(v10, v3);
      return ((uint64_t (*)(char *, uint64_t))v17)(v12, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  }
  sub_10000B070((uint64_t)v2, (uint64_t *)&unk_1002F4110);
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100011554(v19, (uint64_t)qword_10030E960);
  long long v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    long long v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to get source and target locales for SELF logging for live image translation", v22, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
}

id sub_100157DE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CameraPreviewViewController()
{
  return self;
}

uint64_t destroy for CameraPreviewView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 56) != 255) {

  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CameraPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = a2 + 48;
  int v9 = *(unsigned __int8 *)(a2 + 56);
  id v10 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v9 == 255)
  {
    *(void *)(a1 + 48) = *(void *)v8;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(v8 + 8);
  }
  else
  {
    uint64_t v11 = *(void **)v8;
    *(void *)(a1 + 48) = *(void *)v8;
    *(unsigned char *)(a1 + 56) = v9;
    id v12 = v11;
  }
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v15;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v20 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v20;
  uint64_t v17 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v17;
  uint64_t v18 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v18;
  uint64_t v21 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v21;
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CameraPreviewView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v7 = (void **)(a1 + 48);
  uint64_t v8 = (void **)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v9 == 255)
    {
      uint64_t v16 = *v8;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *uint64_t v7 = v16;
    }
    else
    {
      uint64_t v13 = *v8;
      *(void *)(a1 + 48) = *v8;
      *(unsigned char *)(a1 + 56) = v9;
      id v14 = v13;
    }
  }
  else if (v9 == 255)
  {
    sub_1000FF4D0(a1 + 48);
    char v15 = *(unsigned char *)(a2 + 56);
    *uint64_t v7 = *v8;
    *(unsigned char *)(a1 + 56) = v15;
  }
  else
  {
    id v10 = *v8;
    uint64_t v11 = *(void **)(a1 + 48);
    *(void *)(a1 + 48) = *v8;
    *(unsigned char *)(a1 + 56) = v9;
    id v12 = v10;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_retain();
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_retain();
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_retain();
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_retain();
  swift_release();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_retain();
  swift_release();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CameraPreviewView(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for CameraPreviewView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  long long v7 = (void *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 56) == 255) {
    goto LABEL_5;
  }
  int v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 == 255)
  {
    sub_1000FF4D0(a1 + 48);
LABEL_5:
    *(void *)(a1 + 48) = *v7;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    goto LABEL_6;
  }
  long long v9 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *v7;
  *(unsigned char *)(a1 + 56) = v8;

LABEL_6:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_release();
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_release();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_release();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_release();
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_release();
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_release();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraPreviewView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraPreviewView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraPreviewView()
{
  return &type metadata for CameraPreviewView;
}

id sub_100158860(uint64_t a1, uint64_t a2)
{
  return sub_1001590B8(a2);
}

uint64_t sub_100158868(void *a1)
{
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E960);
  id v3 = a1;
  long long v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109120;
    dispatch thunk of DataScannerViewController.hasTorch.getter();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "DataScanner thinks it has torch: %{BOOL}d", v6, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    dispatch thunk of DataScannerViewController.hasTorch.getter();
    sub_10014EF98();
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    dispatch thunk of DataScannerViewController.isTorchOn.getter();
    sub_10014F0E8();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100158A18(uint64_t a1, uint64_t a2)
{
  return sub_1001593D0(a2);
}

void sub_100158A24(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_100158A8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10, uint64_t a11, unsigned char *a12)
{
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate + 8] = 0;
  uint64_t v18 = swift_unknownObjectWeakInit();
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge] = 0;
  uint64_t v19 = &a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_contextObserver];
  _OWORD *v19 = 0u;
  v19[1] = 0u;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_observationTasks] = &_swiftEmptySetSingleton;
  a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availability] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_visualTranslationLocaleSubscription] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topReflectionView] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomReflectionView] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_launchPrerequisitesDebounceTimer] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_eventInteraction] = 0;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_conversation] = a1;
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_context] = a2;
  uint64_t v20 = &a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController__staticImage];
  *(void *)uint64_t v20 = a3;
  *((void *)v20 + 1) = a4;
  *((void *)v20 + 2) = a5;
  v20[24] = a6;
  uint64_t v21 = &a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController__viewportHasText];
  *(void *)uint64_t v21 = a7;
  *((void *)v21 + 1) = a8;
  v21[16] = a9;
  *(void *)(v18 + 8) = &off_1002CFB58;
  swift_unknownObjectWeakAssign();
  *(void *)&a12[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_selfLoggingInvocation] = a11;
  type metadata accessor for ChromeBar();
  id v22 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_retain();
  swift_retain();
  uint64_t v23 = a12;
  id v24 = a1;
  swift_retain();
  sub_10010D874(a5, a6);
  swift_retain();
  swift_retain();
  swift_retain();
  id v25 = [v22 init];
  *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_materialView] = v25;

  v37.receiver = v23;
  v37.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  [super initWithNibName:0 bundle:0];
  uint64_t v27 = qword_1002EE5C8;
  id v28 = v26;
  if (v27 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_100011554(v29, (uint64_t)qword_10030E960);
  long long v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v30, v31))
  {
    long long v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "initializing CameraPreviewViewController", v32, 2u);
    swift_slowDealloc();
  }

  sub_1001561A8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10010D860(a5, a6);

  swift_release();
  return v28;
}

void sub_100158E0C()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_dataScannerVC] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_translationBridge] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_contextObserver];
  *uint64_t v1 = 0u;
  v1[1] = 0u;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_observationTasks] = &_swiftEmptySetSingleton;
  v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availability] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_availabilitySubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_noTextFoundTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_visualTranslationLocaleSubscription] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topReflectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomReflectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_topConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_bottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_launchPrerequisitesDebounceTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_eventInteraction] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100158F3C()
{
  id v3 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"debugTapInteractionWithRecognizer:"];
  [v3 setNumberOfTouchesRequired:2];
  [v3 setNumberOfTapsRequired:3];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    [v1 addGestureRecognizer:v3];

    sub_100154DCC();
    sub_100151474();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100159004()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CameraPreviewViewController();
  [super viewWillDisappear:1];
  sub_100151104();
  sub_100156510();
  id v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = *((void *)v1 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v2 + 16) + 24))(ObjectType);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10014F0E8();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1001590B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DataScannerViewController.ScanningUnavailable();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v19 - v9;
  if (qword_1002EE5C8 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100011554(v11, (uint64_t)qword_10030E960);
  long long v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v13, v14))
  {
    char v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = v2;
    *(_DWORD *)char v15 = 138412290;
    uint64_t v19 = v15 + 4;
    v12(v8, (uint64_t)v10, v4);
    sub_100159830(&qword_1002F80E0, 255, (void (*)(uint64_t))&type metadata accessor for DataScannerViewController.ScanningUnavailable);
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v16, v8, v4);
    uint64_t v17 = _convertErrorToNSError(_:)();
    swift_errorRelease();
    uint64_t v22 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "DataScanner became unavailable: %@", v15, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  sub_100151104();
  return sub_100156510();
}

uint64_t sub_1001593D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DataScannerViewController.SceneStabilityState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t result = sub_10000619C();
  if (!result) {
    return result;
  }
  uint64_t v27 = &type metadata for TranslateFeatures;
  unint64_t v28 = sub_10000AB14();
  v26[0] = 1;
  char v8 = isFeatureEnabled(_:)();
  uint64_t result = sub_10000AB68((uint64_t)v26);
  if ((v8 & 1) == 0) {
    return result;
  }
  uint64_t v27 = &type metadata for VisualIntelligenceFeatures;
  unint64_t v28 = sub_100159688();
  char v9 = isFeatureEnabled(_:)();
  uint64_t result = sub_10000AB68((uint64_t)v26);
  if ((v9 & 1) == 0) {
    return result;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  int v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 88))(v6, v3);
  if (v10 == enum case for DataScannerViewController.SceneStabilityState.unknown(_:)
    || v10 == enum case for DataScannerViewController.SceneStabilityState.low(_:))
  {
    UIViewController.contentUnavailableConfiguration.getter();
    long long v12 = v27;
    uint64_t result = sub_10000B070((uint64_t)v26, &qword_1002F80F0);
    if (v12) {
      return result;
    }
    uint64_t v13 = v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(*(void *)(v14 + 16) + 8))(0, 1, ObjectType);
    return swift_unknownObjectRelease();
  }
  int v16 = v10;
  int v17 = enum case for DataScannerViewController.SceneStabilityState.medium(_:);
  int v18 = enum case for DataScannerViewController.SceneStabilityState.high(_:);
  uint64_t v19 = v1 + OBJC_IVAR____TtC17SequoiaTranslator27CameraPreviewViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (v16 == v17 || v16 == v18)
  {
    if (!result) {
      return result;
    }
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = swift_getObjectType();
    (*(void (**)(void, uint64_t))(*(void *)(v21 + 16) + 16))(0, v22);
    return swift_unknownObjectRelease();
  }
  if (result)
  {
    uint64_t v23 = *(void *)(v19 + 8);
    uint64_t v24 = swift_getObjectType();
    (*(void (**)(void, uint64_t))(*(void *)(v23 + 16) + 16))(0, v24);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_100159688()
{
  unint64_t result = qword_1002F80E8;
  if (!qword_1002F80E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F80E8);
  }
  return result;
}

uint64_t sub_1001596DC(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_retain();
  swift_retain();
  id v5 = v2;
  swift_retain();
  sub_10010D874(v3, v4);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100159830(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100159878()
{
  unint64_t result = qword_1002F8108;
  if (!qword_1002F8108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8108);
  }
  return result;
}

uint64_t sub_1001598D4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_release();

  swift_release();
  swift_release();
  sub_10010D860(v3, v4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100159A24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100159A5C(char *a1)
{
}

void sub_100159A64()
{
}

uint64_t sub_100159A6C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100159AB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_100153E08(a1, v4, v5, v7, v6);
}

uint64_t sub_100159B74()
{
  return sub_100157298();
}

uint64_t sub_100159B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100159B8C()
{
  return swift_release();
}

uint64_t sub_100159B98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1001573B0(a1, v4, v5, v6);
}

uint64_t sub_100159C5C()
{
  uint64_t v1 = type metadata accessor for LocalePair();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100159D30(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LocalePair() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_10015211C(a1, v5, v6, v7, v8);
}

void sub_100159E2C()
{
}

uint64_t sub_100159E34()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100159E44()
{
  return sub_10015A008((void (*)(void))&_swift_release);
}

uint64_t sub_100159E5C()
{
  return sub_1001534B4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100159E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100159ED0()
{
}

uint64_t sub_100159ED8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100159F20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1001535E8(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100159FE8(void *a1)
{
  return sub_100151718(a1);
}

uint64_t sub_100159FF0()
{
  return sub_10015A008((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_10015A008(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_10015A050()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000496A4;
  v3[5] = v2;
  return _swift_task_switch(sub_100151950, 0, 0);
}

uint64_t sub_10015A0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F02C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10015A164()
{
}

uint64_t sub_10015A170(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_100156728(a1, v4, v5, v6);
}

void sub_10015A224(void *a1)
{
}

uint64_t sub_10015A240()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10015A250(uint64_t a1)
{
  return sub_10014F510(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_10015A258()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10015A290(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100021B58;
  return sub_10014F620(a1, v4, v5, v6);
}

uint64_t sub_10015A364()
{
  uint64_t v1 = type metadata accessor for LocalePairSpeakButtons();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v2 + 48));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  v12[1] = v6;
  long long v12[2] = v7;
  sub_100007620(&qword_1002EF470);
  State.wrappedValue.getter();
  double v8 = *(double *)&v12[3];
  double v9 = *(double *)(v0 + *(int *)(v1 + 52));
  sub_10015CBE8(v0, (uint64_t)v4);
  if (v8 <= v9)
  {
    type metadata accessor for SpeakButtonConfiguration();
    type metadata accessor for Locale();
    sub_10015CBA0(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
    char v10 = dispatch thunk of static Equatable.== infix(_:_:)() ^ 1;
  }
  else
  {
    char v10 = 0;
  }
  sub_10015CC4C((uint64_t)v4);
  return v10 & 1;
}

uint64_t sub_10015A4CC()
{
  uint64_t v1 = type metadata accessor for Locale();
  v20[0] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for LocalePairSpeakButtons() + 56));
  uint64_t v6 = *v5;
  v20[1] = v5[1];
  v20[2] = v6;
  sub_100007620(&qword_1002EEC80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100247140;
  type metadata accessor for SpeakButtonConfiguration();
  static Locale.current.getter();
  uint64_t v8 = Locale.sqDisplayName(context:in:)();
  unint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v4, v1);
  if (!v10)
  {
    uint64_t v8 = 0x4E574F4E4B4E55;
    unint64_t v10 = 0xE700000000000000;
  }
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000149B4();
  *(void *)(v7 + 64) = v12;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  static Locale.current.getter();
  uint64_t v13 = Locale.sqDisplayName(context:in:)();
  unint64_t v15 = v14;
  v11(v4, v20[0]);
  uint64_t v16 = 0x4E574F4E4B4E55;
  if (v15) {
    uint64_t v16 = v13;
  }
  unint64_t v17 = 0xE700000000000000;
  if (v15) {
    unint64_t v17 = v15;
  }
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v12;
  *(void *)(v7 + 72) = v16;
  *(void *)(v7 + 80) = v17;
  v20[4] = String.init(format:_:)();
  v20[5] = v18;
  sub_10000C350();
  return Text.init<A>(_:)();
}

uint64_t sub_10015A6F8()
{
  uint64_t v1 = type metadata accessor for Locale();
  v20[0] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(type metadata accessor for LocalePairSpeakButtons() + 56));
  uint64_t v6 = *v5;
  v20[1] = v5[1];
  v20[2] = v6;
  sub_100007620(&qword_1002EEC80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100247140;
  type metadata accessor for SpeakButtonConfiguration();
  static Locale.current.getter();
  uint64_t v8 = Locale.sqDisplayName(context:in:)();
  unint64_t v10 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v4, v1);
  if (!v10)
  {
    uint64_t v8 = 0x4E574F4E4B4E55;
    unint64_t v10 = 0xE700000000000000;
  }
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000149B4();
  *(void *)(v7 + 64) = v12;
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  static Locale.current.getter();
  uint64_t v13 = Locale.sqDisplayName(context:in:)();
  unint64_t v15 = v14;
  v11(v4, v20[0]);
  uint64_t v16 = 0x4E574F4E4B4E55;
  if (v15) {
    uint64_t v16 = v13;
  }
  unint64_t v17 = 0xE700000000000000;
  if (v15) {
    unint64_t v17 = v15;
  }
  *(void *)(v7 + 96) = &type metadata for String;
  *(void *)(v7 + 104) = v12;
  *(void *)(v7 + 72) = v16;
  *(void *)(v7 + 80) = v17;
  v20[4] = String.init(format:_:)();
  v20[5] = v18;
  sub_10000C350();
  return Text.init<A>(_:)();
}

uint64_t sub_10015A924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v143 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F82E8);
  uint64_t v140 = *(void *)(v3 - 8);
  uint64_t v141 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  double v126 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  CGFloat v125 = (char *)&v121 - v6;
  uint64_t v7 = sub_100007620(&qword_1002F82F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v142 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  CGFloat v139 = (char *)&v121 - v10;
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v131 = *(void *)(v11 - 8);
  uint64_t v12 = v131;
  uint64_t v13 = __chkstk_darwin(v11);
  unsigned int v137 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v121 - v15;
  uint64_t v146 = sub_100007620(&qword_1002F82F8);
  uint64_t v17 = __chkstk_darwin(v146);
  uint64_t v138 = (uint64_t)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  double v124 = (char *)&v121 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  CGFloat v123 = (char *)&v121 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v132 = (uint64_t)&v121 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  double v134 = (char *)&v121 - v26;
  __chkstk_darwin(v25);
  uint64_t v147 = (uint64_t)&v121 - v27;
  uint64_t v28 = type metadata accessor for LocalePairSpeakButtons();
  uint64_t v145 = v28;
  uint64_t v29 = (unsigned __int8 *)(a1 + *(int *)(v28 + 32));
  LODWORD(v129) = *v29;
  LODWORD(v128) = *(unsigned __int8 *)(a1 + 1);
  uint64_t v30 = a1;
  os_log_type_t v31 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v133 = &v29[v31[5]];
  static Locale.current.getter();
  uint64_t v32 = Locale.sqDisplayName(context:in:)();
  unint64_t v34 = v33;
  double v135 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v136 = v12 + 8;
  v135(v16, v11);
  uint64_t v35 = 0x4E574F4E4B4E55;
  if (v34) {
    uint64_t v35 = v32;
  }
  uint64_t v127 = v35;
  if (!v34) {
    unint64_t v34 = 0xE700000000000000;
  }
  uint64_t v130 = v30;
  char v36 = sub_10015A364();
  objc_super v37 = v31;
  id v144 = v31;
  uint64_t v38 = v31[6];
  double v39 = &v29[v31[7]];
  uint64_t v41 = *(void *)v39;
  uint64_t v40 = *((void *)v39 + 1);
  double v42 = (uint64_t *)(v30 + *(int *)(v28 + 40));
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  double v122 = v42;
  double v45 = (uint64_t *)&v29[v37[8]];
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  id v48 = &v29[v38];
  uint64_t v49 = v11;
  uint64_t v50 = *(void *)v48;
  uint64_t v51 = *((void *)v48 + 1);
  LOBYTE(v172) = v129;
  *(_WORD *)((char *)&v172 + 1) = v128;
  *((void *)&v172 + 1) = _swiftEmptyArrayStorage;
  *(void *)&long long v173 = v127;
  CGFloat v52 = v16;
  *((void *)&v173 + 1) = v34;
  LOBYTE(v174) = v36 & 1;
  *((void *)&v174 + 1) = v41;
  *(void *)&long long v175 = v40;
  *((void *)&v175 + 1) = v44;
  *(void *)&long long v176 = v43;
  *((void *)&v176 + 1) = v47;
  *(void *)&long long v177 = v46;
  *((void *)&v177 + 1) = v50;
  *(void *)uint64_t v178 = v51;
  memset(&v178[8], 0, 80);
  uint64_t v179 = 0;
  long long v168 = *(_OWORD *)&v178[32];
  long long v169 = *(_OWORD *)&v178[48];
  long long v170 = *(_OWORD *)&v178[64];
  long long v171 = 0uLL;
  long long v164 = v176;
  long long v165 = v177;
  long long v166 = *(_OWORD *)v178;
  long long v167 = *(_OWORD *)&v178[16];
  long long v160 = v172;
  long long v161 = v173;
  long long v162 = v174;
  long long v163 = v175;
  swift_retain();
  sub_100019614(v44);
  sub_100019614(v47);
  swift_bridgeObjectRetain();
  uint64_t v53 = v130;
  uint64_t v54 = sub_10015A4CC();
  uint64_t v56 = v55;
  LOBYTE(v44) = v57 & 1;
  unint64_t v58 = sub_1000DD32C();
  uint64_t v59 = v132;
  unint64_t v129 = v58;
  View.accessibility(hint:)();
  sub_10001FC84(v54, v56, v44);
  swift_bridgeObjectRelease();
  sub_1000DD380((uint64_t)&v172);
  uint64_t v60 = (uint64_t)v134;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_10000B070(v59, &qword_1002F82F8);
  sub_10001323C(v60, v147, &qword_1002F82F8);
  double v61 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v131 + 16);
  v61(v52, v133, v49);
  uint64_t v62 = v53;
  double v63 = (unsigned __int8 *)(v53 + *(int *)(v145 + 36));
  id v64 = v137;
  v61(v137, &v63[v144[5]], v49);
  sub_10015CBA0(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
  LOBYTE(v61) = dispatch thunk of static Equatable.== infix(_:_:)();
  Swift::String v65 = v135;
  v135(v64, v49);
  id v66 = v65;
  v65(v52, v49);
  if (v61)
  {
    uint64_t v67 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56))(v139, 1, 1, v141);
  }
  else
  {
    LODWORD(v137) = *v63;
    LODWORD(v134) = *(unsigned __int8 *)(v53 + 1);
    LODWORD(v133) = *(unsigned __int8 *)(v53 + 2);
    uint64_t v68 = *(void *)(v53 + 8);
    swift_bridgeObjectRetain();
    static Locale.current.getter();
    uint64_t v69 = Locale.sqDisplayName(context:in:)();
    unint64_t v71 = v70;
    v66(v52, v49);
    if (v71) {
      uint64_t v72 = v69;
    }
    else {
      uint64_t v72 = 0x4E574F4E4B4E55;
    }
    if (v71) {
      unint64_t v73 = v71;
    }
    else {
      unint64_t v73 = 0xE700000000000000;
    }
    char v74 = sub_10015A364();
    uint64_t v75 = v144[6];
    id v76 = &v63[v144[7]];
    uint64_t v78 = *(void *)v76;
    uint64_t v77 = *((void *)v76 + 1);
    uint64_t v80 = *v122;
    uint64_t v79 = v122[1];
    double v81 = (uint64_t *)&v63[v144[8]];
    uint64_t v82 = *v81;
    double v122 = (uint64_t *)v81[1];
    double v83 = &v63[v75];
    uint64_t v84 = *(void *)&v63[v75];
    uint64_t v85 = *((void *)v83 + 1);
    CGFloat v86 = (uint64_t *)(v62 + *(int *)(v145 + 44));
    uint64_t v87 = v86[1];
    uint64_t v127 = *v86;
    uint64_t v128 = v87;
    uint64_t v89 = v86[2];
    uint64_t v88 = v86[3];
    uint64_t v90 = v86[5];
    id v144 = (int *)v86[4];
    uint64_t v145 = v88;
    uint64_t v91 = v86[7];
    double v135 = (void (*)(char *, uint64_t))v86[6];
    uint64_t v136 = v90;
    uint64_t v131 = v89;
    uint64_t v132 = v91;
    uint64_t v92 = v86[8];
    id v93 = (void *)v86[9];
    double v94 = (void *)v86[10];
    LOBYTE(v160) = (_BYTE)v137;
    BYTE1(v160) = (_BYTE)v134;
    BYTE2(v160) = (_BYTE)v133;
    *((void *)&v160 + 1) = v68;
    *(void *)&long long v161 = v72;
    *((void *)&v161 + 1) = v73;
    LOBYTE(v162) = v74 & 1;
    *((void *)&v162 + 1) = v78;
    *(void *)&long long v163 = v77;
    *((void *)&v163 + 1) = v80;
    *(void *)&long long v164 = v79;
    *((void *)&v164 + 1) = v82;
    *(void *)&long long v165 = v122;
    uint64_t v95 = v82;
    *((void *)&v165 + 1) = v84;
    *(void *)&long long v166 = v85;
    *((void *)&v166 + 1) = v127;
    *(void *)&long long v167 = v87;
    *((void *)&v167 + 1) = v89;
    *(void *)&long long v168 = v88;
    *((void *)&v168 + 1) = v144;
    *(void *)&long long v169 = v90;
    *((void *)&v169 + 1) = v135;
    *(void *)&long long v170 = v91;
    *((void *)&v170 + 1) = v92;
    uint64_t v96 = v92;
    *(void *)&long long v171 = v93;
    *((void *)&v171 + 1) = v94;
    long long v156 = v168;
    long long v157 = v169;
    long long v158 = v170;
    long long v159 = v171;
    long long v152 = v164;
    long long v153 = v165;
    long long v154 = v166;
    long long v155 = v167;
    long long v148 = v160;
    long long v149 = v161;
    long long v150 = v162;
    long long v151 = v163;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_100019614(v80);
    sub_100019614(v95);
    sub_10001959C(v127, v128, v131, v145, (uint64_t)v144, v136, (uint64_t)v135, v132, v96, v93, v94);
    uint64_t v97 = sub_10015A6F8();
    uint64_t v99 = v98;
    char v101 = v100 & 1;
    uint64_t v102 = (uint64_t)v124;
    View.accessibility(hint:)();
    sub_10001FC84(v97, v99, v101);
    swift_bridgeObjectRelease();
    sub_1000DD380((uint64_t)&v160);
    uint64_t v103 = (uint64_t)v123;
    ModifiedContent<>.accessibilityIdentifier(_:)();
    sub_10000B070(v102, &qword_1002F82F8);
    if (v86[1])
    {
      uint64_t v104 = v86[2];
      uint64_t v105 = v86[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      id v106 = [self mainBundle];
      v180._object = (void *)0xE000000000000000;
      v107._uint64_t countAndFlagsBits = 0x495645445F57454ELL;
      v107._object = (void *)0xEA00000000004543;
      v108._uint64_t countAndFlagsBits = 0;
      v108._object = (void *)0xE000000000000000;
      v180._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v107, (Swift::String_optional)0, (NSBundle)v106, v108, v180);

      uint64_t v104 = String.init(format:_:)();
      uint64_t v105 = v109;
      swift_bridgeObjectRelease();
    }
    uint64_t v111 = v140;
    uint64_t v110 = v141;
    uint64_t v67 = (uint64_t)v139;
    *(void *)&long long v148 = v104;
    *((void *)&v148 + 1) = v105;
    sub_10015CAF4();
    sub_100014A08();
    double v112 = v126;
    View.popoverTip<A>(_:arrowEdge:action:)();
    swift_bridgeObjectRelease();
    sub_10000B070(v103, &qword_1002F82F8);
    CGFloat v113 = *(void (**)(char *, char *, uint64_t))(v111 + 32);
    double v114 = v125;
    v113(v125, v112, v110);
    v113((char *)v67, v114, v110);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v67, 0, 1, v110);
  }
  uint64_t v115 = v147;
  uint64_t v116 = v138;
  sub_10000C3A4(v147, v138, &qword_1002F82F8);
  uint64_t v117 = v142;
  sub_10000C3A4(v67, v142, &qword_1002F82F0);
  uint64_t v118 = v143;
  sub_10000C3A4(v116, v143, &qword_1002F82F8);
  uint64_t v119 = sub_100007620(&qword_1002F8308);
  sub_10000C3A4(v117, v118 + *(int *)(v119 + 48), &qword_1002F82F0);
  sub_10000B070(v67, &qword_1002F82F0);
  sub_10000B070(v115, &qword_1002F82F8);
  sub_10000B070(v117, &qword_1002F82F0);
  return sub_10000B070(v116, &qword_1002F82F8);
}

void sub_10015B45C(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(unsigned char *)a9 = a1;
  *(unsigned char *)(a9 + 1) = a2;
  *(unsigned char *)(a9 + 2) = a3;
  *(void *)(a9 + 8) = a4;
  uint64_t v15 = (int *)type metadata accessor for LocalePairSpeakButtons();
  sub_10015B61C(a5, a9 + v15[8]);
  sub_10015B61C(a6, a9 + v15[9]);
  uint64_t v16 = (void *)(a9 + v15[10]);
  void *v16 = a7;
  v16[1] = a8;
  sub_10001323C(a10, a9 + v15[11], &qword_1002EF048);
  uint64_t v17 = (void *)(a9 + v15[12]);
  State.init(wrappedValue:)();
  void *v17 = v23;
  v17[1] = v24;
  *(void *)(a9 + v15[13]) = 0x4072000000000000;
  uint64_t v18 = (Swift::String *)(a9 + v15[14]);
  id v19 = [self mainBundle];
  v25._object = (void *)0xE000000000000000;
  v20._object = (void *)0x8000000100260270;
  v20._uint64_t countAndFlagsBits = 0xD000000000000017;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v25);

  Swift::String *v18 = v22;
}

uint64_t type metadata accessor for LocalePairSpeakButtons()
{
  uint64_t result = qword_1002F8280;
  if (!qword_1002F8280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10015B61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakButtonConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10015B680(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    *(void *)(a1 + 8) = a2[1];
    uint64_t v6 = a3[8];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    *(unsigned char *)(a1 + v6) = *((unsigned char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for SpeakButtonConfiguration();
    uint64_t v10 = v9[5];
    uint64_t v72 = v7 + v10;
    uint64_t v11 = v8 + v10;
    uint64_t v12 = type metadata accessor for Locale();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v70 = v12;
    v13(v72, v11, v12);
    uint64_t v14 = v9[6];
    uint64_t v15 = (void *)(v7 + v14);
    uint64_t v16 = (void *)(v8 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v9[7];
    id v19 = (void *)(v7 + v18);
    Swift::String v20 = (void *)(v8 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v9[8];
    uint64_t v23 = (void *)(v7 + v22);
    uint64_t v24 = v8 + v22;
    uint64_t v25 = *(void *)(v8 + v22);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v25)
    {
      uint64_t v26 = *(void *)(v24 + 8);
      *uint64_t v23 = v25;
      v23[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    }
    uint64_t v28 = a3[9];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (uint64_t)a2 + v28;
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
    v13((uint64_t)v4 + v28 + v9[5], (uint64_t)a2 + v28 + v9[5], v70);
    uint64_t v31 = v9[6];
    uint64_t v32 = &v29[v31];
    unint64_t v33 = (void *)(v30 + v31);
    uint64_t v34 = v33[1];
    *(void *)uint64_t v32 = *v33;
    *((void *)v32 + 1) = v34;
    uint64_t v35 = v9[7];
    char v36 = &v29[v35];
    objc_super v37 = (void *)(v30 + v35);
    uint64_t v38 = v37[1];
    *(void *)char v36 = *v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = v9[8];
    uint64_t v40 = &v29[v39];
    uint64_t v41 = v30 + v39;
    uint64_t v42 = *(void *)(v30 + v39);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v42)
    {
      uint64_t v43 = *(void *)(v41 + 8);
      *(void *)uint64_t v40 = v42;
      *((void *)v40 + 1) = v43;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
    }
    uint64_t v44 = a3[10];
    double v45 = (void *)((char *)v4 + v44);
    uint64_t v46 = (uint64_t *)((char *)a2 + v44);
    if (*v46)
    {
      uint64_t v47 = v46[1];
      *double v45 = *v46;
      v45[1] = v47;
      swift_retain();
    }
    else
    {
      *(_OWORD *)double v45 = *(_OWORD *)v46;
    }
    uint64_t v48 = a3[11];
    uint64_t v49 = (char *)v4 + v48;
    uint64_t v50 = (uint64_t)a2 + v48;
    uint64_t v51 = *(void *)(v50 + 8);
    if (v51)
    {
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = v51;
      uint64_t v52 = *(void *)(v50 + 24);
      *((void *)v49 + 2) = *(void *)(v50 + 16);
      *((void *)v49 + 3) = v52;
      uint64_t v53 = *(void *)(v50 + 40);
      *((void *)v49 + 4) = *(void *)(v50 + 32);
      *((void *)v49 + 5) = v53;
      *((_OWORD *)v49 + 3) = *(_OWORD *)(v50 + 48);
      v49[64] = *(unsigned char *)(v50 + 64);
      uint64_t v54 = *(void **)(v50 + 72);
      uint64_t v55 = *(void **)(v50 + 80);
      *((void *)v49 + 9) = v54;
      *((void *)v49 + 10) = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v56 = v54;
      id v57 = v55;
    }
    else
    {
      long long v58 = *(_OWORD *)(v50 + 48);
      *((_OWORD *)v49 + 2) = *(_OWORD *)(v50 + 32);
      *((_OWORD *)v49 + 3) = v58;
      *((_OWORD *)v49 + 4) = *(_OWORD *)(v50 + 64);
      *((void *)v49 + 10) = *(void *)(v50 + 80);
      long long v59 = *(_OWORD *)(v50 + 16);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v59;
    }
    uint64_t v60 = a3[12];
    uint64_t v61 = a3[13];
    uint64_t v62 = (void *)((char *)v4 + v60);
    double v63 = (uint64_t *)((char *)a2 + v60);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    *(void *)((char *)v4 + v61) = *(uint64_t *)((char *)a2 + v61);
    uint64_t v65 = a3[14];
    id v66 = (void *)((char *)v4 + v65);
    uint64_t v67 = (uint64_t *)((char *)a2 + v65);
    uint64_t v68 = v67[1];
    *id v66 = *v67;
    v66[1] = v68;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10015B9A0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[8];
  uint64_t v5 = type metadata accessor for SpeakButtonConfiguration();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v4 + *(int *)(v5 + 32))) {
    swift_release();
  }
  uint64_t v9 = a1 + a2[9];
  v8(v9 + *(int *)(v5 + 20), v7);
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v9 + *(int *)(v5 + 32))) {
    swift_release();
  }
  if (*(void *)(a1 + a2[10])) {
    swift_release();
  }
  uint64_t v10 = a1 + a2[11];
  if (*(void *)(v10 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10015BB44(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = a3[8];
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(unsigned char *)(a1 + v4) = *(unsigned char *)(a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v8 = v7[5];
  uint64_t v9 = v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(v5 + v13);
  uint64_t v15 = (void *)(v6 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(v5 + v17);
  id v19 = (void *)(v6 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[8];
  uint64_t v22 = (void *)(v5 + v21);
  uint64_t v23 = v6 + v21;
  uint64_t v24 = *(void *)(v6 + v21);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v24)
  {
    uint64_t v25 = *(void *)(v23 + 8);
    void *v22 = v24;
    v22[1] = v25;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  v12(a1 + v26 + v7[5], a2 + v26 + v7[5], v11);
  uint64_t v29 = v7[6];
  uint64_t v30 = (void *)(v27 + v29);
  uint64_t v31 = (void *)(v28 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  uint64_t v33 = v7[7];
  uint64_t v34 = (void *)(v27 + v33);
  uint64_t v35 = (void *)(v28 + v33);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v7[8];
  uint64_t v38 = (void *)(v27 + v37);
  uint64_t v39 = (uint64_t *)(v28 + v37);
  uint64_t v40 = *v39;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40)
  {
    uint64_t v41 = v39[1];
    *uint64_t v38 = v40;
    v38[1] = v41;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  }
  uint64_t v42 = a3[10];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  if (*v44)
  {
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  }
  uint64_t v46 = a3[11];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  uint64_t v49 = *(void *)(v48 + 8);
  if (v49)
  {
    *(void *)uint64_t v47 = *(void *)v48;
    *(void *)(v47 + 8) = v49;
    uint64_t v50 = *(void *)(v48 + 24);
    *(void *)(v47 + 16) = *(void *)(v48 + 16);
    *(void *)(v47 + 24) = v50;
    uint64_t v51 = *(void *)(v48 + 40);
    *(void *)(v47 + 32) = *(void *)(v48 + 32);
    *(void *)(v47 + 40) = v51;
    *(_OWORD *)(v47 + 48) = *(_OWORD *)(v48 + 48);
    *(unsigned char *)(v47 + 64) = *(unsigned char *)(v48 + 64);
    uint64_t v52 = *(void **)(v48 + 72);
    uint64_t v53 = *(void **)(v48 + 80);
    *(void *)(v47 + 72) = v52;
    *(void *)(v47 + 80) = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v54 = v52;
    id v55 = v53;
  }
  else
  {
    long long v56 = *(_OWORD *)(v48 + 48);
    *(_OWORD *)(v47 + 32) = *(_OWORD *)(v48 + 32);
    *(_OWORD *)(v47 + 48) = v56;
    *(_OWORD *)(v47 + 64) = *(_OWORD *)(v48 + 64);
    *(void *)(v47 + 80) = *(void *)(v48 + 80);
    long long v57 = *(_OWORD *)(v48 + 16);
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    *(_OWORD *)(v47 + 16) = v57;
  }
  uint64_t v58 = a3[12];
  uint64_t v59 = a3[13];
  uint64_t v60 = (void *)(a1 + v58);
  uint64_t v61 = (void *)(a2 + v58);
  uint64_t v62 = v61[1];
  *uint64_t v60 = *v61;
  v60[1] = v62;
  *(void *)(a1 + v59) = *(void *)(a2 + v59);
  uint64_t v63 = a3[14];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  uint64_t v66 = v65[1];
  *uint64_t v64 = *v65;
  v64[1] = v66;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10015BE0C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v81 = a3;
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  uint64_t v15 = v9[6];
  uint64_t v16 = (void *)(v7 + v15);
  uint64_t v17 = (void *)(v8 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v9[7];
  id v19 = (void *)(v7 + v18);
  uint64_t v20 = (void *)(v8 + v18);
  uint64_t v21 = v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  uint64_t v22 = v9[8];
  uint64_t v23 = (void *)(v7 + v22);
  uint64_t v24 = v8 + v22;
  uint64_t v25 = *(void *)(v8 + v22);
  if (*v23)
  {
    if (v25)
    {
      uint64_t v26 = *(void *)(v24 + 8);
      *uint64_t v23 = v25;
      v23[1] = v26;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v25)
  {
    uint64_t v27 = *(void *)(v24 + 8);
    *uint64_t v23 = v25;
    v23[1] = v27;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_8:
  uint64_t v28 = v81[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  v14(a1 + v28 + v9[5], a2 + v28 + v9[5], v13);
  uint64_t v31 = v9[6];
  uint64_t v32 = (void *)(v29 + v31);
  uint64_t v33 = (void *)(v30 + v31);
  void *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = v9[7];
  uint64_t v35 = (void *)(v29 + v34);
  uint64_t v36 = (void *)(v30 + v34);
  uint64_t v37 = v36[1];
  void *v35 = *v36;
  v35[1] = v37;
  swift_retain();
  swift_release();
  uint64_t v38 = v9[8];
  uint64_t v39 = (void *)(v29 + v38);
  uint64_t v40 = v30 + v38;
  uint64_t v41 = *(void *)(v30 + v38);
  if (*v39)
  {
    if (v41)
    {
      uint64_t v42 = *(void *)(v40 + 8);
      *uint64_t v39 = v41;
      v39[1] = v42;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v41)
  {
    uint64_t v43 = *(void *)(v40 + 8);
    *uint64_t v39 = v41;
    v39[1] = v43;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_15:
  uint64_t v44 = v81[10];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = a2 + v44;
  uint64_t v47 = *(void *)(a1 + v44);
  uint64_t v48 = *(void *)(a2 + v44);
  if (v47)
  {
    if (v48)
    {
      uint64_t v49 = *(void *)(v46 + 8);
      *uint64_t v45 = v48;
      v45[1] = v49;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v48)
  {
    uint64_t v50 = *(void *)(v46 + 8);
    *uint64_t v45 = v48;
    v45[1] = v50;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
LABEL_22:
  uint64_t v51 = v81[11];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  uint64_t v54 = *(void *)(a1 + v51 + 8);
  uint64_t v55 = *(void *)(a2 + v51 + 8);
  if (v54)
  {
    if (v55)
    {
      *(void *)uint64_t v52 = *(void *)v53;
      *(void *)(v52 + 8) = *(void *)(v53 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v52 + 16) = *(void *)(v53 + 16);
      *(void *)(v52 + 24) = *(void *)(v53 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v52 + 32) = *(void *)(v53 + 32);
      *(void *)(v52 + 40) = *(void *)(v53 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v52 + 48) = *(void *)(v53 + 48);
      *(void *)(v52 + 56) = *(void *)(v53 + 56);
      *(unsigned char *)(v52 + 64) = *(unsigned char *)(v53 + 64);
      long long v56 = *(void **)(v53 + 72);
      long long v57 = *(void **)(v52 + 72);
      *(void *)(v52 + 72) = v56;
      id v58 = v56;

      uint64_t v59 = *(void **)(v53 + 80);
      uint64_t v60 = *(void **)(v52 + 80);
      *(void *)(v52 + 80) = v59;
      id v61 = v59;
    }
    else
    {
      sub_100015FC8(v52);
      long long v66 = *(_OWORD *)(v53 + 16);
      *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
      *(_OWORD *)(v52 + 16) = v66;
      long long v68 = *(_OWORD *)(v53 + 48);
      long long v67 = *(_OWORD *)(v53 + 64);
      long long v69 = *(_OWORD *)(v53 + 32);
      *(void *)(v52 + 80) = *(void *)(v53 + 80);
      *(_OWORD *)(v52 + 48) = v68;
      *(_OWORD *)(v52 + 64) = v67;
      *(_OWORD *)(v52 + 32) = v69;
    }
  }
  else if (v55)
  {
    *(void *)uint64_t v52 = *(void *)v53;
    *(void *)(v52 + 8) = *(void *)(v53 + 8);
    *(void *)(v52 + 16) = *(void *)(v53 + 16);
    *(void *)(v52 + 24) = *(void *)(v53 + 24);
    *(void *)(v52 + 32) = *(void *)(v53 + 32);
    *(void *)(v52 + 40) = *(void *)(v53 + 40);
    *(void *)(v52 + 48) = *(void *)(v53 + 48);
    *(void *)(v52 + 56) = *(void *)(v53 + 56);
    *(unsigned char *)(v52 + 64) = *(unsigned char *)(v53 + 64);
    uint64_t v62 = *(void **)(v53 + 72);
    *(void *)(v52 + 72) = v62;
    uint64_t v63 = *(void **)(v53 + 80);
    *(void *)(v52 + 80) = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v64 = v62;
    id v65 = v63;
  }
  else
  {
    long long v70 = *(_OWORD *)(v53 + 16);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *(_OWORD *)(v52 + 16) = v70;
    long long v71 = *(_OWORD *)(v53 + 32);
    long long v72 = *(_OWORD *)(v53 + 48);
    long long v73 = *(_OWORD *)(v53 + 64);
    *(void *)(v52 + 80) = *(void *)(v53 + 80);
    *(_OWORD *)(v52 + 48) = v72;
    *(_OWORD *)(v52 + 64) = v73;
    *(_OWORD *)(v52 + 32) = v71;
  }
  uint64_t v74 = v81[12];
  uint64_t v75 = (void *)(a1 + v74);
  id v76 = (void *)(a2 + v74);
  *uint64_t v75 = *v76;
  v75[1] = v76[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + v81[13]) = *(void *)(a2 + v81[13]);
  uint64_t v77 = v81[14];
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (void *)(a2 + v77);
  void *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10015C2D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  uint64_t v41 = *v14;
  (*v14)(v11, v12, v13);
  *(_OWORD *)(v7 + v9[6]) = *(_OWORD *)(v8 + v9[6]);
  *(_OWORD *)(v7 + v9[7]) = *(_OWORD *)(v8 + v9[7]);
  uint64_t v15 = v9[8];
  uint64_t v16 = (void *)(v7 + v15);
  uint64_t v17 = (uint64_t *)(v8 + v15);
  uint64_t v18 = *v17;
  if (*v17)
  {
    uint64_t v19 = v17[1];
    void *v16 = v18;
    v16[1] = v19;
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  v41(a1 + v20 + v9[5], a2 + v20 + v9[5], v13);
  *(_OWORD *)(v21 + v9[6]) = *(_OWORD *)(v22 + v9[6]);
  *(_OWORD *)(v21 + v9[7]) = *(_OWORD *)(v22 + v9[7]);
  uint64_t v23 = v9[8];
  uint64_t v24 = (void *)(v21 + v23);
  uint64_t v25 = (uint64_t *)(v22 + v23);
  uint64_t v26 = *v25;
  if (*v25)
  {
    uint64_t v27 = v25[1];
    *uint64_t v24 = v26;
    v24[1] = v27;
  }
  else
  {
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  }
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  if (*v30)
  {
    uint64_t v32 = v30[1];
    void *v29 = v31;
    v29[1] = v32;
  }
  else
  {
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v33;
  uint64_t v36 = a2 + v33;
  *(void *)(v35 + 80) = *(void *)(v36 + 80);
  long long v37 = *(_OWORD *)(v36 + 48);
  *(_OWORD *)(v35 + 32) = *(_OWORD *)(v36 + 32);
  *(_OWORD *)(v35 + 48) = v37;
  *(_OWORD *)(v35 + 64) = *(_OWORD *)(v36 + 64);
  long long v38 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v38;
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  uint64_t v39 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  return a1;
}

uint64_t sub_10015C4D0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v68 = a3;
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(unsigned char *)(a1 + v6) = *(unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for SpeakButtonConfiguration();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40);
  v14(v11, v12, v13);
  uint64_t v15 = v9[6];
  uint64_t v16 = (void *)(v7 + v15);
  uint64_t v17 = (uint64_t *)(v8 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v7 + v9[7]) = *(_OWORD *)(v8 + v9[7]);
  swift_release();
  uint64_t v20 = v9[8];
  uint64_t v21 = (void *)(v7 + v20);
  uint64_t v22 = v8 + v20;
  uint64_t v23 = *(void *)(v7 + v20);
  uint64_t v24 = *(void *)(v8 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 8);
      *uint64_t v21 = v24;
      v21[1] = v25;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *(void *)(v22 + 8);
    *uint64_t v21 = v24;
    v21[1] = v26;
    goto LABEL_8;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_8:
  uint64_t v27 = v68[9];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  v14(a1 + v27 + v9[5], a2 + v27 + v9[5], v13);
  uint64_t v30 = v9[6];
  uint64_t v31 = (void *)(v28 + v30);
  uint64_t v32 = (uint64_t *)(v29 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v28 + v9[7]) = *(_OWORD *)(v29 + v9[7]);
  swift_release();
  uint64_t v35 = v9[8];
  uint64_t v36 = (void *)(v28 + v35);
  uint64_t v37 = v29 + v35;
  uint64_t v38 = *(void *)(v28 + v35);
  uint64_t v39 = *(void *)(v29 + v35);
  if (v38)
  {
    if (v39)
    {
      uint64_t v40 = *(void *)(v37 + 8);
      *uint64_t v36 = v39;
      v36[1] = v40;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v39)
  {
    uint64_t v41 = *(void *)(v37 + 8);
    *uint64_t v36 = v39;
    v36[1] = v41;
    goto LABEL_15;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
LABEL_15:
  uint64_t v42 = v68[10];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)(a1 + v42);
  uint64_t v46 = *(void *)(a2 + v42);
  if (v45)
  {
    if (v46)
    {
      uint64_t v47 = *(void *)(v44 + 8);
      *uint64_t v43 = v46;
      v43[1] = v47;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v46)
  {
    uint64_t v48 = *(void *)(v44 + 8);
    *uint64_t v43 = v46;
    v43[1] = v48;
    goto LABEL_22;
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_22:
  uint64_t v49 = v68[11];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  if (!*(void *)(a1 + v49 + 8))
  {
LABEL_26:
    long long v57 = *(_OWORD *)(v51 + 48);
    *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
    *(_OWORD *)(v50 + 48) = v57;
    *(_OWORD *)(v50 + 64) = *(_OWORD *)(v51 + 64);
    *(void *)(v50 + 80) = *(void *)(v51 + 80);
    long long v58 = *(_OWORD *)(v51 + 16);
    *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
    *(_OWORD *)(v50 + 16) = v58;
    goto LABEL_27;
  }
  uint64_t v52 = *(void *)(v51 + 8);
  if (!v52)
  {
    sub_100015FC8(v50);
    goto LABEL_26;
  }
  *(void *)uint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = v52;
  swift_bridgeObjectRelease();
  uint64_t v53 = *(void *)(v51 + 24);
  *(void *)(v50 + 16) = *(void *)(v51 + 16);
  *(void *)(v50 + 24) = v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v51 + 40);
  *(void *)(v50 + 32) = *(void *)(v51 + 32);
  *(void *)(v50 + 40) = v54;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v50 + 48) = *(_OWORD *)(v51 + 48);
  *(unsigned char *)(v50 + 64) = *(unsigned char *)(v51 + 64);
  uint64_t v55 = *(void **)(v50 + 72);
  *(void *)(v50 + 72) = *(void *)(v51 + 72);

  long long v56 = *(void **)(v50 + 80);
  *(void *)(v50 + 80) = *(void *)(v51 + 80);

LABEL_27:
  uint64_t v59 = v68[12];
  uint64_t v60 = (void *)(a1 + v59);
  id v61 = (void *)(a2 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_release();
  uint64_t v62 = v68[14];
  *(void *)(a1 + v68[13]) = *(void *)(a2 + v68[13]);
  uint64_t v63 = (void *)(a1 + v62);
  id v64 = (uint64_t *)(a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10015C834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015C848);
}

uint64_t sub_10015C848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SpeakButtonConfiguration();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10015C8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015C90C);
}

uint64_t sub_10015C90C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SpeakButtonConfiguration();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10015C9B4()
{
  uint64_t result = type metadata accessor for SpeakButtonConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10015CA8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10015CAA8@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4030000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100007620(&qword_1002F82E0);
  return sub_10015A924(v1, a1 + *(int *)(v3 + 44));
}

unint64_t sub_10015CAF4()
{
  unint64_t result = qword_1002F8300;
  if (!qword_1002F8300)
  {
    sub_100007928(&qword_1002F82F8);
    sub_1000DD32C();
    sub_10015CBA0((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8300);
  }
  return result;
}

uint64_t sub_10015CBA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10015CBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocalePairSpeakButtons();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015CC4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocalePairSpeakButtons();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10015CCAC()
{
  unint64_t result = qword_1002F8310;
  if (!qword_1002F8310)
  {
    sub_100007928(&qword_1002F8318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8310);
  }
  return result;
}

uint64_t sub_10015CD08(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E918);
}

uint64_t sub_10015CD30(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E930);
}

uint64_t sub_10015CD58(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E948);
}

uint64_t sub_10015CD84(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E960);
}

uint64_t sub_10015CDA0(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E978);
}

uint64_t sub_10015CDC8(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E990);
}

uint64_t sub_10015CDF4(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E9A8);
}

uint64_t sub_10015CE1C(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E9C0);
}

uint64_t sub_10015CE48(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E9D8);
}

uint64_t sub_10015CE6C(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030E9F0);
}

uint64_t sub_10015CE88(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA08);
}

uint64_t sub_10015CEA0(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA20);
}

uint64_t sub_10015CEC8(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA38);
}

uint64_t sub_10015CEEC(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA50);
}

uint64_t sub_10015CF10(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA68);
}

uint64_t sub_10015CF30(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA80);
}

uint64_t sub_10015CF54(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EA98);
}

uint64_t sub_10015CF70(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EAB0);
}

uint64_t sub_10015CF9C(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EAC8);
}

uint64_t sub_10015CFBC(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EAE0);
}

uint64_t sub_10015CFE8(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EAF8);
}

uint64_t sub_10015D00C(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EB10);
}

uint64_t sub_10015D024(uint64_t a1)
{
  return sub_10015D050(a1, qword_10030EB28);
}

uint64_t sub_10015D050(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  sub_100013C88(v3, a2);
  sub_100011554(v3, (uint64_t)a2);
  return Logger.init(subsystem:category:)();
}

void *sub_10015D0C8(uint64_t a1)
{
  return sub_10015D0F0(a1, &qword_1002F8370);
}

void *sub_10015D0DC(uint64_t a1)
{
  return sub_10015D0F0(a1, (unint64_t *)&qword_1002EF298);
}

void *sub_10015D0F0(uint64_t a1, unint64_t *a2)
{
  uint64_t v8 = &_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)();
  if (!v4) {
    return v8;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10000B170(i, (uint64_t)v7);
    sub_10000B0CC(0, a2);
    if (!swift_dynamicCast()) {
      break;
    }
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v4) {
      return v8;
    }
  }
  swift_release();

  return 0;
}

void *sub_10015D204(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8378);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StoredTranslationAlternative();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v27 = (char *)&v24 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_1000B2E84(0, v11, 0);
  if (!v11) {
    return v29;
  }
  uint64_t v12 = a1 + 32;
  uint64_t v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v25 = v9;
  uint64_t v26 = v6;
  while (1)
  {
    sub_1000295C0(v12, (uint64_t)v28);
    sub_100007620(&qword_1002F39F8);
    int v15 = swift_dynamicCast();
    uint64_t v16 = *v13;
    if (!v15) {
      break;
    }
    v16(v4, 0, 1, v5);
    uint64_t v17 = *v14;
    uint64_t v18 = v27;
    (*v14)(v27, v4, v5);
    v17(v9, v18, v5);
    uint64_t v19 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B2E84(0, v19[2] + 1, 1);
      uint64_t v19 = v29;
    }
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1)
    {
      sub_1000B2E84(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v29;
    }
    v19[2] = v21 + 1;
    unint64_t v22 = (unint64_t)v19
        + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + *(void *)(v26 + 72) * v21;
    uint64_t v9 = v25;
    v17((char *)v22, v25, v5);
    uint64_t v29 = v19;
    v12 += 40;
    if (!--v11) {
      return v19;
    }
  }
  v16(v4, 1, 1, v5);
  swift_release();
  sub_10015E500((uint64_t)v4);
  return 0;
}

void _LTCombinedTranslationResult.locale.getter()
{
  id v1 = [v0 localePair];
  id v2 = [v1 targetLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

BOOL _LTCombinedTranslationResult.isOffline.getter()
{
  return [v0 route] == (id)1;
}

void *_LTCombinedTranslationResult.alternatives.getter()
{
  uint64_t v1 = (uint64_t)v0;
  unint64_t v2 = type metadata accessor for StoredTranslationAlternative();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (unint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v6 = [v0 paragraphResults];
  sub_10000B0CC(0, &qword_1002F33B0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62) {
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v26 = v1;
    uint64_t v27 = v5;
    uint64_t v28 = v3;
    unint64_t v29 = v2;
    unint64_t v2 = v7 & 0xC000000000000001;
    uint64_t v1 = 4;
    uint64_t v5 = &qword_1002F33B0;
    while (1)
    {
      id v9 = v2 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v1);
      uint64_t v10 = v9;
      uint64_t v3 = v1 - 3;
      if (__OFADD__(v1 - 4, 1)) {
        break;
      }
      id v30 = v9;
      sub_10007854C((unint64_t *)&qword_1002F33B8, &qword_1002F33B0);
      if (TranslationResult.isLowConfidence.getter())
      {
        char v11 = 1;
        goto LABEL_12;
      }

      ++v1;
      if (v3 == v8)
      {
        char v11 = 0;
        uint64_t v10 = 0;
LABEL_12:
        uint64_t v3 = v28;
        unint64_t v2 = v29;
        uint64_t v1 = v26;
        uint64_t v5 = v27;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
  char v11 = 0;
  uint64_t v10 = 0;
LABEL_16:
  swift_bridgeObjectRelease_n();

  id v12 = [(id)v1 disambiguableResult];
  if (v12)
  {
    uint64_t v13 = v12;
    if ([v12 hasDisambiguations])
    {
      if (qword_1002EE5E8 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100011554(v14, (uint64_t)qword_10030E9C0);
      int v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
          v17,
          2u);
        swift_slowDealloc();
      }

      if ((v11 & 1) == 0)
      {

        return _swiftEmptyArrayStorage;
      }
    }
  }
  id v18 = [(id)v1 translatedText];
  id v19 = [v18 string];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v20 = [(id)v1 romanization];
  if (v20)
  {
    unint64_t v21 = v20;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  StoredTranslationAlternative.init(text:romanization:lowConfidence:)();
  sub_100007620(&qword_1002F39F0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1002488D0;
  *(void *)(v22 + 56) = v2;
  *(void *)(v22 + 64) = sub_10015E3D0(&qword_1002F8320, (void (*)(uint64_t))&type metadata accessor for StoredTranslationAlternative);
  uint64_t v23 = sub_100014830((uint64_t *)(v22 + 32));
  (*(void (**)(uint64_t *, unint64_t *, unint64_t))(v3 + 32))(v23, v5, v2);
  return (void *)v22;
}

uint64_t _LTCombinedTranslationResult.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v57 = type metadata accessor for StoredDisambiguableResult();
  uint64_t v54 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  long long v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StoredTranslationResult.CodingKeys();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v53 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v52 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v59 = (char *)&v52 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = type metadata accessor for Locale();
  id v61 = *(void (***)(char *, void))(v14 - 8);
  uint64_t v62 = v14;
  __chkstk_darwin(v14);
  os_log_type_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002F8328);
  uint64_t v60 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_10015E3D0(&qword_1002F8330, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult.CodingKeys);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v58 = v2;
  id v20 = [v2 localePair];
  id v21 = [v20 targetLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v64;
  uint64_t v23 = *(void (***)(char *, void))(v64 + 104);
  ((void (*)(char *, void, uint64_t))v23)(v13, enum case for StoredTranslationResult.CodingKeys.locale(_:), v5);
  sub_10015E3D0(&qword_1002F8338, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v65 = v17;
  uint64_t v24 = v63;
  uint64_t v25 = v62;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v5);
    v61[1](v16, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v19, v65);
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void))(v22 + 8);
    uint64_t v27 = v22 + 8;
    uint64_t v63 = v28;
    v28(v13, v5);
    v61[1](v16, v25);
    [v58 route];
    ((void (*)(char *, void, uint64_t))v23)(v59, enum case for StoredTranslationResult.CodingKeys.isOffline(_:), v5);
    KeyedEncodingContainer.encode(_:forKey:)();
    id v61 = v23;
    uint64_t v62 = 0;
    v63(v59, v5);
    id v29 = [v58 disambiguableResult];
    if (v29)
    {
      id v30 = v29;
      uint64_t v31 = v56;
      StoredDisambiguableResult.init(_:)();
      uint64_t v32 = v55;
      ((void (*)(char *, void, uint64_t))v61)(v55, enum case for StoredTranslationResult.CodingKeys.storedDisambiguableResult(_:), v5);
      sub_10015E3D0(&qword_1002F8358, (void (*)(uint64_t))&type metadata accessor for StoredDisambiguableResult);
      uint64_t v33 = v65;
      uint64_t v34 = v57;
      KeyedEncodingContainer.encode<A>(_:forKey:)();

      v63(v32, v5);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v19, v33);
    }
    else
    {
      uint64_t v35 = _LTCombinedTranslationResult.alternatives.getter();
      uint64_t v36 = sub_10015D204((uint64_t)v35);
      swift_bridgeObjectRelease();
      if (v36)
      {
        uint64_t v64 = v27;
        if (qword_1002EE5E8 != -1) {
          swift_once();
        }
        uint64_t v37 = type metadata accessor for Logger();
        sub_100011554(v37, (uint64_t)qword_10030E9C0);
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.default.getter();
        BOOL v40 = os_log_type_enabled(v38, v39);
        uint64_t v41 = (void (*)(char *, void, uint64_t))v61;
        if (v40)
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          swift_slowDealloc();
        }

        uint64_t v66 = v36;
        uint64_t v43 = v53;
        v41(v53, enum case for StoredTranslationResult.CodingKeys.alternatives(_:), v5);
        sub_100007620(&qword_1002F8340);
        sub_10015E418();
        uint64_t v44 = v65;
        KeyedEncodingContainer.encode<A>(_:forKey:)();
        v63(v43, v5);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v19, v44);
        return swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1002EE5E8 != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        sub_100011554(v45, (uint64_t)qword_10030E9C0);
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.fault.getter();
        BOOL v48 = os_log_type_enabled(v46, v47);
        uint64_t v49 = v60;
        uint64_t v50 = v65;
        if (v48)
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "No result being encoded: no disambigaution and no alternatives", v51, 2u);
          swift_slowDealloc();
        }

        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v19, v50);
      }
    }
  }
}

void sub_10015E280()
{
  id v1 = [*v0 localePair];
  id v2 = [v1 targetLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

void *sub_10015E300()
{
  return _LTCombinedTranslationResult.alternatives.getter();
}

BOOL sub_10015E324()
{
  return [*v0 route] == (id)1;
}

id sub_10015E350()
{
  return [*v0 isFinal];
}

id sub_10015E374()
{
  id v1 = [*v0 disambiguableResult];

  return v1;
}

uint64_t sub_10015E3AC(void *a1)
{
  return _LTCombinedTranslationResult.encode(to:)(a1);
}

uint64_t sub_10015E3D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10015E418()
{
  unint64_t result = qword_1002F8348;
  if (!qword_1002F8348)
  {
    sub_100007928(&qword_1002F8340);
    sub_10015E3D0(&qword_1002F8350, (void (*)(uint64_t))&type metadata accessor for StoredTranslationAlternative);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8348);
  }
  return result;
}

uint64_t sub_10015E4BC()
{
  return sub_10007854C(&qword_1002F8360, &qword_1002F8368);
}

uint64_t sub_10015E500(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8378);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _LTSpeechRecognitionResult.formattedString.getter()
{
  id v1 = [v0 bestTranscription];
  id v2 = [v1 formattedString];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t _LTSpeechRecognitionTokensAlternative.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007620(&qword_1002F8380);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029624(a1, a1[3]);
  sub_10015E7CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  [v3 isLowConfidence];
  v11[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
  [v3 hasSpaceAfter];
  v11[14] = 1;
  KeyedEncodingContainer.encode(_:forKey:)();
  id v9 = [v3 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v11[13] = 2;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

unint64_t sub_10015E7CC()
{
  unint64_t result = qword_1002F8388;
  if (!qword_1002F8388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8388);
  }
  return result;
}

uint64_t sub_10015E820(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100235C70(*a1, *a2);
}

Swift::Int sub_10015E82C()
{
  return Hasher._finalize()();
}

uint64_t sub_10015E8E0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10015E980()
{
  return Hasher._finalize()();
}

unint64_t sub_10015EA30@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001615E8(*a1);
  *a2 = result;
  return result;
}

void sub_10015EA60(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEF65636E65646966;
  unint64_t v4 = 0xED00007265746641;
  uint64_t v5 = 0x6563617053736168;
  if (v2 != 1)
  {
    uint64_t v5 = 1954047348;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E6F43776F4C7369;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_10015EAD0()
{
  uint64_t v1 = 0x6563617053736168;
  if (*v0 != 1) {
    uint64_t v1 = 1954047348;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F43776F4C7369;
  }
}

unint64_t sub_10015EB3C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001615E8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10015EB64()
{
  return 0;
}

void sub_10015EB70(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10015EB7C(uint64_t a1)
{
  unint64_t v2 = sub_10015E7CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015EBB8(uint64_t a1)
{
  unint64_t v2 = sub_10015E7CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_10015EBF4()
{
  return [*v0 isLowConfidence];
}

id sub_10015EC18()
{
  return [*v0 hasSpaceAfter];
}

uint64_t sub_10015EC3C()
{
  id v1 = [*v0 text];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t sub_10015EC94(void *a1)
{
  return _LTSpeechRecognitionTokensAlternative.encode(to:)(a1);
}

id _LTSpeechRecognitionBin.bestAlternative.getter()
{
  return [v0 bestAlternativeIndex];
}

uint64_t _LTSpeechRecognitionBin.tokenAlternatives.getter()
{
  return sub_10015F3F0((SEL *)&selRef_alternatives, &qword_1002F8390, (uint64_t)_LTSpeechRecognitionTokensAlternative_ptr, (uint64_t (*)(uint64_t))sub_100161B18);
}

uint64_t _LTSpeechRecognitionBin.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100007620(&qword_1002F8398);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029624(a1, a1[3]);
  sub_10015EED4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  [v3 bestAlternativeIndex];
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    id v9 = [v3 alternatives];
    sub_10000B0CC(0, &qword_1002F8390);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = v10;
    v12[15] = 1;
    sub_100007620(&qword_1002F83A8);
    sub_10015EF28();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10015EED4()
{
  unint64_t result = qword_1002F83A0;
  if (!qword_1002F83A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F83A0);
  }
  return result;
}

unint64_t sub_10015EF28()
{
  unint64_t result = qword_1002F83B0;
  if (!qword_1002F83B0)
  {
    sub_100007928(&qword_1002F83A8);
    sub_10007854C(&qword_1002F83B8, &qword_1002F8390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F83B0);
  }
  return result;
}

uint64_t sub_10015EFC8(char *a1, char *a2)
{
  return sub_100236244(*a1, *a2);
}

Swift::Int sub_10015EFD4()
{
  return Hasher._finalize()();
}

uint64_t sub_10015F068()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10015F0E8()
{
  return Hasher._finalize()();
}

uint64_t sub_10015F178@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C87A8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10015F1D8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x65746C4174736562;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x8000000100259FC0;
  if (!*v1) {
    unint64_t v3 = 0xEF65766974616E72;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10015F228()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x65746C4174736562;
  }
}

uint64_t sub_10015F274@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C87A8, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_10015F2D8(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_10015F2E4(uint64_t a1)
{
  unint64_t v2 = sub_10015EED4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015F320(uint64_t a1)
{
  unint64_t v2 = sub_10015EED4();

  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_10015F35C()
{
  return [*v0 bestAlternativeIndex];
}

uint64_t sub_10015F36C(uint64_t a1, uint64_t a2)
{
  return sub_10015F970(a1, a2, (SEL *)&selRef_alternatives, &qword_1002F8390, (uint64_t)_LTSpeechRecognitionTokensAlternative_ptr, (uint64_t (*)(uint64_t))sub_100161B18);
}

uint64_t sub_10015F39C(void *a1)
{
  return _LTSpeechRecognitionBin.encode(to:)(a1);
}

uint64_t _LTSpeechRecognitionSausage.tokenBins.getter()
{
  return sub_10015F3F0((SEL *)&selRef_bins, &qword_1002F83C0, (uint64_t)_LTSpeechRecognitionBin_ptr, (uint64_t (*)(uint64_t))sub_1001618CC);
}

uint64_t sub_10015F3F0(SEL *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v7 = [v4 *a1];
  sub_10000B0CC(0, a2);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = a4(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t _LTSpeechRecognitionSausage.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F83C8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_10015F618();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v8 = [v2 bins];
  sub_10000B0CC(0, &qword_1002F83C0);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  v11[1] = v9;
  sub_100007620(&qword_1002F83D8);
  sub_10015F66C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_10015F618()
{
  unint64_t result = qword_1002F83D0;
  if (!qword_1002F83D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F83D0);
  }
  return result;
}

unint64_t sub_10015F66C()
{
  unint64_t result = qword_1002F83E0;
  if (!qword_1002F83E0)
  {
    sub_100007928(&qword_1002F83D8);
    sub_10007854C(&qword_1002F83E8, &qword_1002F83C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F83E0);
  }
  return result;
}

Swift::Int sub_10015F70C()
{
  return Hasher._finalize()();
}

uint64_t sub_10015F764()
{
  return String.hash(into:)();
}

Swift::Int sub_10015F780()
{
  return Hasher._finalize()();
}

uint64_t sub_10015F7D4@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C87F8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_10015F828(void *a1@<X8>)
{
  *a1 = 0x6E69426E656B6F74;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_10015F848()
{
  return 0x6E69426E656B6F74;
}

uint64_t sub_10015F864@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8830, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_10015F8BC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_10015F8C8(uint64_t a1)
{
  unint64_t v2 = sub_10015F618();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10015F904(uint64_t a1)
{
  unint64_t v2 = sub_10015F618();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10015F940(uint64_t a1, uint64_t a2)
{
  return sub_10015F970(a1, a2, (SEL *)&selRef_bins, &qword_1002F83C0, (uint64_t)_LTSpeechRecognitionBin_ptr, (uint64_t (*)(uint64_t))sub_1001618CC);
}

uint64_t sub_10015F970(uint64_t a1, uint64_t a2, SEL *a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  id v9 = [*v6 *a3];
  sub_10000B0CC(0, a4);
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = a6(v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10015F9F8(void *a1)
{
  return _LTSpeechRecognitionSausage.encode(to:)(a1);
}

id _LTSpeechRecognitionResult.isLowConfidence.getter()
{
  id v1 = [v0 bestTranscription];
  id v2 = [v1 isLowConfidence];

  return v2;
}

uint64_t _LTSpeechRecognitionResult.sanitizedFormattedString.getter()
{
  id v1 = [v0 bestTranscription];
  id v2 = [v1 sanitizedFormattedString];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

Swift::Bool __swiftcall _LTSpeechRecognitionResult.isEmpty()()
{
  sub_10000B0CC(0, (unint64_t *)&unk_1002F3400);
  sub_10007854C(&qword_1002F83F0, (unint64_t *)&unk_1002F3400);
  uint64_t v0 = AnnotatedResult.displayString.getter();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v0 & 0xFFFFFFFFFFFFLL;
  }
  return v3 == 0;
}

void _LTSpeechRecognitionResult.sentenceConfidence.getter()
{
  id v1 = [v0 bestTranscription];
  [v1 confidence];
  double v3 = v2;

  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

uint64_t _LTSpeechRecognitionResult.alternatives.getter@<X0>(void *a1@<X8>)
{
  id v3 = [v1 bestRecognitionAlternatives];
  a1[3] = sub_10000B0CC(0, &qword_1002F83F8);
  uint64_t result = sub_10007854C(&qword_1002F8400, &qword_1002F83F8);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t _LTSpeechRecognitionResult.origin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for SpeechResultOrigin.voice(_:);
  uint64_t v3 = type metadata accessor for SpeechResultOrigin();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void _LTSpeechRecognitionResult.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SpeechResultOrigin();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v44 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F8408);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_100160378();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v13 = [v2 bestTranscription];
  [v13 isLowConfidence];

  LOBYTE(v47) = 3;
  char v14 = v45;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return;
  }
  uint64_t v38 = v6;
  os_log_type_t v39 = v8;
  uint64_t v40 = v10;
  id v15 = [v2 bestTranscription];
  id v16 = [v15 formattedString];
  uint64_t v45 = v12;
  id v17 = v16;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v47) = 5;
  KeyedEncodingContainer.encode(_:forKey:)();
  uint64_t v18 = v9;
  swift_bridgeObjectRelease();
  id v37 = v2;
  id v19 = [v2 bestTranscription];
  id v20 = [v19 sanitizedFormattedString];

  uint64_t v21 = v40;
  if (v20)
  {
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
  }
  uint64_t v47 = v22;
  uint64_t v48 = v24;
  char v46 = 4;
  sub_100007620(&qword_1002F1378);
  sub_1001603CC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = v44;
  id v26 = v37;
  id v27 = [v37 locale];
  uint64_t v28 = v39;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v47) = 2;
  sub_100160438(&qword_1002F8338, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v29 = v38;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v29);
  id v30 = [v26 bestTranscription];
  [v30 confidence];
  double v32 = v31;

  if ((~*(void *)&v32 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v33 = v43;
  if (v32 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v34 = v41;
  uint64_t v35 = v42;
  if (v32 < 9.22337204e18)
  {
    LOBYTE(v47) = 1;
    uint64_t v36 = v45;
    KeyedEncodingContainer.encode(_:forKey:)();
    [v37 isFinal];
    LOBYTE(v47) = 0;
    KeyedEncodingContainer.encode(_:forKey:)();
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for SpeechResultOrigin.voice(_:), v33);
    LOBYTE(v47) = 6;
    sub_100160438(&qword_1002F8420, (void (*)(uint64_t))&type metadata accessor for SpeechResultOrigin);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v33);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v36, v18);
    return;
  }
LABEL_12:
  __break(1u);
}

unint64_t sub_100160378()
{
  unint64_t result = qword_1002F8410;
  if (!qword_1002F8410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8410);
  }
  return result;
}

unint64_t sub_1001603CC()
{
  unint64_t result = qword_1002F8418;
  if (!qword_1002F8418)
  {
    sub_100007928(&qword_1002F1378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8418);
  }
  return result;
}

uint64_t sub_100160438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100160480()
{
  return sub_10007854C(&qword_1002F83B8, &qword_1002F8390);
}

uint64_t sub_1001604C4()
{
  return sub_10007854C(&qword_1002F83E8, &qword_1002F83C0);
}

uint64_t sub_100160508()
{
  return sub_10007854C(&qword_1002F8428, &qword_1002F83F8);
}

uint64_t sub_10016054C()
{
  return sub_10007854C(&qword_1002F8430, (unint64_t *)&unk_1002F3400);
}

uint64_t sub_100160590()
{
  return sub_10007854C(&qword_1002F83F0, (unint64_t *)&unk_1002F3400);
}

unint64_t sub_1001605D4(char a1)
{
  unint64_t result = 0x6C616E69467369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x6E6F43776F4C7369;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x657474616D726F66;
      break;
    case 6:
      unint64_t result = 0x6E696769726FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1001606D8(char a1)
{
  unint64_t result = 0x6C616E69467369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x6E6F43776F4C7369;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x657474616D726F66;
      break;
    case 6:
      unint64_t result = 0x6E696769726FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001607DC(unsigned __int8 *a1, char *a2)
{
  return sub_100235DA4(*a1, *a2);
}

Swift::Int sub_1001607E8()
{
  return sub_1000F86FC();
}

uint64_t sub_1001607F4()
{
  return sub_1000F7E04();
}

Swift::Int sub_1001607FC()
{
  return sub_1000F86FC();
}

unint64_t sub_100160804@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100161634(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100160834@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001605D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100160860()
{
  return sub_1001606D8(*v0);
}

unint64_t sub_100160868@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100161634(a1);
  *a2 = result;
  return result;
}

void sub_100160890(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_10016089C(uint64_t a1)
{
  unint64_t v2 = sub_100160378();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001608D8(uint64_t a1)
{
  unint64_t v2 = sub_100160378();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100160914()
{
  id v1 = [*v0 bestTranscription];
  [v1 confidence];
  double v3 = v2;

  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

BOOL sub_1001609AC()
{
  sub_10000B0CC(0, (unint64_t *)&unk_1002F3400);
  sub_10007854C(&qword_1002F83F0, (unint64_t *)&unk_1002F3400);
  uint64_t v0 = AnnotatedResult.displayString.getter();
  unint64_t v2 = v1;
  swift_bridgeObjectRelease();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v0 & 0xFFFFFFFFFFFFLL;
  }
  return v3 == 0;
}

uint64_t sub_100160A64@<X0>(void *a1@<X8>)
{
  id v3 = [*v1 bestRecognitionAlternatives];
  a1[3] = sub_10000B0CC(0, &qword_1002F83F8);
  uint64_t result = sub_10007854C(&qword_1002F8400, &qword_1002F83F8);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_100160AFC()
{
  return sub_10007854C(&qword_1002F8438, (unint64_t *)&unk_1002F3400);
}

uint64_t sub_100160B40()
{
  return sub_10007854C(&qword_1002F8440, (unint64_t *)&unk_1002F3400);
}

void sub_100160B84()
{
  id v1 = [*v0 locale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

id sub_100160BE4()
{
  id v1 = [*v0 bestTranscription];
  id v2 = [v1 isLowConfidence];

  return v2;
}

void sub_100160C34(void *a1)
{
}

uint64_t sub_100160C58()
{
  id v1 = [*v0 bestTranscription];
  id v2 = [v1 sanitizedFormattedString];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100160CE0()
{
  id v1 = [*v0 bestTranscription];
  id v2 = [v1 formattedString];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v3;
}

uint64_t _s10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100160EB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100160F88);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

unsigned char *_s10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10016108CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

unsigned char *_s10CodingKeysOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100161190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON_2;
}

unint64_t sub_1001611CC()
{
  unint64_t result = qword_1002F8448;
  if (!qword_1002F8448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8448);
  }
  return result;
}

unint64_t sub_100161224()
{
  unint64_t result = qword_1002F8450;
  if (!qword_1002F8450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8450);
  }
  return result;
}

unint64_t sub_10016127C()
{
  unint64_t result = qword_1002F8458;
  if (!qword_1002F8458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8458);
  }
  return result;
}

unint64_t sub_1001612D4()
{
  unint64_t result = qword_1002F8460;
  if (!qword_1002F8460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8460);
  }
  return result;
}

unint64_t sub_10016132C()
{
  unint64_t result = qword_1002F8468;
  if (!qword_1002F8468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8468);
  }
  return result;
}

unint64_t sub_100161384()
{
  unint64_t result = qword_1002F8470;
  if (!qword_1002F8470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8470);
  }
  return result;
}

unint64_t sub_1001613DC()
{
  unint64_t result = qword_1002F8478;
  if (!qword_1002F8478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8478);
  }
  return result;
}

unint64_t sub_100161434()
{
  unint64_t result = qword_1002F8480;
  if (!qword_1002F8480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8480);
  }
  return result;
}

unint64_t sub_10016148C()
{
  unint64_t result = qword_1002F8488;
  if (!qword_1002F8488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8488);
  }
  return result;
}

unint64_t sub_1001614E4()
{
  unint64_t result = qword_1002F8490;
  if (!qword_1002F8490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8490);
  }
  return result;
}

unint64_t sub_10016153C()
{
  unint64_t result = qword_1002F8498;
  if (!qword_1002F8498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8498);
  }
  return result;
}

unint64_t sub_100161594()
{
  unint64_t result = qword_1002F84A0;
  if (!qword_1002F84A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F84A0);
  }
  return result;
}

unint64_t sub_1001615E8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8740, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_100161634(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8868, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_100161680(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B2D24(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000B2D24(v7 > 1, v8 + 1, 1);
          unint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F3590);
        uint64_t v16 = sub_10007854C(&qword_1002F8570, &qword_1002F3590);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        id v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000B2D24(v11 > 1, v12 + 1, 1);
          unint64_t v3 = v17;
        }
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F3590);
        uint64_t v16 = sub_10007854C(&qword_1002F8570, &qword_1002F3590);
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001618CC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B2D54(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000B2D54(v7 > 1, v8 + 1, 1);
          unint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F83C0);
        uint64_t v16 = sub_10007854C(&qword_1002F8578, &qword_1002F83C0);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        id v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000B2D54(v11 > 1, v12 + 1, 1);
          unint64_t v3 = v17;
        }
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F83C0);
        uint64_t v16 = sub_10007854C(&qword_1002F8578, &qword_1002F83C0);
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100161B18(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B2D84(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000B2D84(v7 > 1, v8 + 1, 1);
          unint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F8390);
        uint64_t v16 = sub_10007854C(&qword_1002F8580, &qword_1002F8390);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        id v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000B2D84(v11 > 1, v12 + 1, 1);
          unint64_t v3 = v17;
        }
        uint64_t v15 = sub_10000B0CC(0, &qword_1002F8390);
        uint64_t v16 = sub_10007854C(&qword_1002F8580, &qword_1002F8390);
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_100161D64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_1000B2DB4(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B2DB4(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_1000B2DB4(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      v2[2] = v6 + 1;
      sub_100048EC8(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100161E8C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_1000B2DD4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    unint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        id v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_1000B2DD4(v7 > 1, v8 + 1, 1);
          unint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
        uint64_t v16 = sub_10007854C(&qword_1002F8588, (unint64_t *)&unk_1002F3410);
        *(void *)&long long v14 = v6;
        v3[2] = v8 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        id v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_1000B2DD4(v11 > 1, v12 + 1, 1);
          unint64_t v3 = v17;
        }
        uint64_t v15 = sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
        uint64_t v16 = sub_10007854C(&qword_1002F8588, (unint64_t *)&unk_1002F3410);
        *(void *)&long long v14 = v13;
        v3[2] = v12 + 1;
        sub_100048DE4(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_1001620D8(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)sub_1000B2E04(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      do
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v7 = _swiftEmptyArrayStorage[2];
        unint64_t v6 = _swiftEmptyArrayStorage[3];
        if (v7 >= v6 >> 1) {
          sub_1000B2E04(v6 > 1, v7 + 1, 1);
        }
        ++v4;
        uint64_t v8 = sub_100163C38(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
        _swiftEmptyArrayStorage[2] = v7 + 1;
        uint64_t v9 = &_swiftEmptyArrayStorage[2 * v7];
        v9[4] = v5;
        v9[5] = v8;
      }
      while (v2 != v4);
    }
    else
    {
      uint64_t v10 = (id *)(a1 + 32);
      do
      {
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v12 = _swiftEmptyArrayStorage[3];
        id v13 = *v10;
        if (v11 >= v12 >> 1) {
          sub_1000B2E04(v12 > 1, v11 + 1, 1);
        }
        uint64_t v14 = sub_100163C38(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
        _swiftEmptyArrayStorage[2] = v11 + 1;
        uint64_t v15 = &_swiftEmptyArrayStorage[2 * v11];
        v15[4] = v13;
        v15[5] = v14;
        ++v10;
        --v2;
      }
      while (v2);
    }
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
  return result;
}

uint64_t _LTTranslationResult.alternatives.getter()
{
  return sub_100162A20((SEL *)&selRef_translations, (unint64_t *)&unk_1002F3410, (uint64_t)_LTTranslationCandidate_ptr, (uint64_t (*)(uint64_t))sub_100161E8C);
}

uint64_t _LTTranslationSense.encode(to:)(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100007620(&qword_1002F84A8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100029624(a1, a1[3]);
  sub_100163A40();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v9 = [v3 senseID];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  char v21 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v10 = [v3 definition];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    char v20 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    id v11 = [v3 sourceMatch];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    char v19 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    id v12 = [v3 targetMatch];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    char v18 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    id v13 = [v3 labels];
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = v14;
    v16[15] = 4;
    sub_100007620(&qword_1002EE8A8);
    sub_100163AE8(&qword_1002F84B8, &qword_1002EE8A8);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    [v3 isPhrasebookMatch];
    v16[14] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_100162680(unsigned __int8 *a1, char *a2)
{
  return sub_1002363A8(*a1, *a2);
}

Swift::Int sub_10016268C()
{
  return sub_1000F7BCC();
}

uint64_t sub_100162694()
{
  return sub_1000F7F3C();
}

Swift::Int sub_10016269C()
{
  return sub_1000F84CC();
}

unint64_t sub_1001626A4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100164498(*a1);
  *a2 = result;
  return result;
}

void sub_1001626D4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x444965736E6573;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000006E6FLL;
      uint64_t v3 = 0x6974696E69666564;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x656372756F73;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x746567726174;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x614D000000000000;
      a1[1] = 0xEB00000000686374;
      break;
    case 4:
      *a1 = 0x736C6562616CLL;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0xD000000000000011;
      a1[1] = 0x800000010025A080;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1001627B0()
{
  uint64_t result = 0x444965736E6573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6974696E69666564;
      break;
    case 2:
      uint64_t v2 = 0x656372756F73;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x746567726174;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x614D000000000000;
      break;
    case 4:
      uint64_t result = 0x736C6562616CLL;
      break;
    case 5:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10016287C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100164498(a1);
  *a2 = result;
  return result;
}

void sub_1001628A4(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1001628B0(uint64_t a1)
{
  unint64_t v2 = sub_100163A40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001628EC(uint64_t a1)
{
  unint64_t v2 = sub_100163A40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100162928(uint64_t a1, uint64_t a2)
{
  return sub_100163240(a1, a2, (SEL *)&selRef_senseID);
}

uint64_t sub_100162934(uint64_t a1, uint64_t a2)
{
  return sub_100163240(a1, a2, (SEL *)&selRef_definition);
}

uint64_t sub_100162940(uint64_t a1, uint64_t a2)
{
  return sub_100163240(a1, a2, (SEL *)&selRef_sourceMatch);
}

uint64_t sub_10016294C(uint64_t a1, uint64_t a2)
{
  return sub_100163240(a1, a2, (SEL *)&selRef_targetMatch);
}

uint64_t sub_100162958()
{
  id v1 = [*v0 labels];
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_1001629A8()
{
  return [*v0 isPhrasebookMatch];
}

uint64_t sub_1001629CC(void *a1)
{
  return _LTTranslationSense.encode(to:)(a1);
}

uint64_t _LTTranslationCandidate.sensesMeta.getter()
{
  return sub_100162A20((SEL *)&selRef_senses, &qword_1002F3590, (uint64_t)_LTTranslationSense_ptr, (uint64_t (*)(uint64_t))sub_100161680);
}

uint64_t sub_100162A20(SEL *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  id v7 = [v4 *a1];
  sub_10000B0CC(0, a2);
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = a4(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t _LTTranslationCandidate.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100007620(&qword_1002F84C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_100163A94();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  [v3 isLowConfidence];
  LOBYTE(v23) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    id v10 = [v3 formattedString];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v23) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    id v11 = [v3 sanitizedFormattedString];
    if (v11)
    {
      id v12 = v11;
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v23 = v13;
    uint64_t v24 = v15;
    char v25 = 2;
    sub_100007620(&qword_1002F1378);
    sub_100163AE8((unint64_t *)&qword_1002F8418, &qword_1002F1378);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    id v16 = [v3 senses];
    sub_10000B0CC(0, &qword_1002F3590);
    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = v17;
    char v25 = 3;
    sub_100007620(&qword_1002F84D0);
    sub_100163B44();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    id v18 = [v3 romanization];
    if (v18)
    {
      char v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v22 = 0;
    }
    uint64_t v23 = v20;
    uint64_t v24 = v22;
    char v25 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100162E40(unsigned __int8 *a1, char *a2)
{
  return sub_100236028(*a1, *a2);
}

Swift::Int sub_100162E4C()
{
  return sub_1000F7CE4();
}

uint64_t sub_100162E54()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100162F5C()
{
  return sub_1000F85E0();
}

unint64_t sub_100162F64@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001644E4(*a1);
  *a2 = result;
  return result;
}

void sub_100162F94(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEF65636E65646966;
  uint64_t v3 = 0x6E6F43776F4C7369;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF676E6972745364;
      uint64_t v3 = 0x657474616D726F66;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0xD000000000000018;
      *(void *)(a1 + 8) = 0x800000010025A010;
      break;
    case 3:
      *(void *)a1 = 0x654D7365736E6573;
      *(void *)(a1 + 8) = 0xEA00000000006174;
      break;
    case 4:
      strcpy((char *)a1, "romanization");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_100163078()
{
  unint64_t result = 0x6E6F43776F4C7369;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x657474616D726F66;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x654D7365736E6573;
      break;
    case 4:
      unint64_t result = 0x617A696E616D6F72;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10016314C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1001644E4(a1);
  *a2 = result;
  return result;
}

void sub_100163174(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100163180(uint64_t a1)
{
  unint64_t v2 = sub_100163A94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001631BC(uint64_t a1)
{
  unint64_t v2 = sub_100163A94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001631F8(uint64_t a1, uint64_t a2)
{
  return sub_100163994(a1, a2, (SEL *)&selRef_senses, &qword_1002F3590, (uint64_t)_LTTranslationSense_ptr, (uint64_t (*)(uint64_t))sub_100161680);
}

uint64_t sub_100163228(uint64_t a1, uint64_t a2)
{
  return sub_1001632A0(a1, a2, (SEL *)&selRef_romanization);
}

uint64_t sub_100163234(uint64_t a1, uint64_t a2)
{
  return sub_100163240(a1, a2, (SEL *)&selRef_formattedString);
}

uint64_t sub_100163240(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

uint64_t sub_100163294(uint64_t a1, uint64_t a2)
{
  return sub_1001632A0(a1, a2, (SEL *)&selRef_sanitizedFormattedString);
}

uint64_t sub_1001632A0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v6;
}

uint64_t sub_100163304(void *a1)
{
  return _LTTranslationCandidate.encode(to:)(a1);
}

uint64_t _LTTranslationResult.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F84E8);
  uint64_t v17 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_100163BE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  id v11 = [v2 locale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  char v20 = 0;
  sub_100163C38(&qword_1002F8338, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v12 = v16[1];
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v12)
  {
    id v13 = [v2 translations];
    sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = v14;
    char v19 = 1;
    sub_100007620(&qword_1002F84F8);
    sub_100163C80();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

uint64_t sub_100163618(char *a1, char *a2)
{
  return sub_1002362FC(*a1, *a2);
}

Swift::Int sub_100163624()
{
  return Hasher._finalize()();
}

uint64_t sub_1001636AC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100163720()
{
  return Hasher._finalize()();
}

uint64_t sub_1001637A4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8A78, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100163804(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x656C61636F6CLL;
  if (*v1) {
    uint64_t v2 = 0x74616E7265746C61;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEC00000073657669;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100163848()
{
  if (*v0) {
    return 0x74616E7265746C61;
  }
  else {
    return 0x656C61636F6CLL;
  }
}

uint64_t sub_100163888@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8A78, v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1001638EC(uint64_t a1)
{
  unint64_t v2 = sub_100163BE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100163928(uint64_t a1)
{
  unint64_t v2 = sub_100163BE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100163964(uint64_t a1, uint64_t a2)
{
  return sub_100163994(a1, a2, (SEL *)&selRef_translations, (unint64_t *)&unk_1002F3410, (uint64_t)_LTTranslationCandidate_ptr, (uint64_t (*)(uint64_t))sub_100161E8C);
}

uint64_t sub_100163994(uint64_t a1, uint64_t a2, SEL *a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  id v9 = [*v6 *a3];
  sub_10000B0CC(0, a4);
  uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = a6(v10);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100163A1C(void *a1)
{
  return _LTTranslationResult.encode(to:)(a1);
}

unint64_t sub_100163A40()
{
  unint64_t result = qword_1002F84B0;
  if (!qword_1002F84B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F84B0);
  }
  return result;
}

unint64_t sub_100163A94()
{
  unint64_t result = qword_1002F84C8;
  if (!qword_1002F84C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F84C8);
  }
  return result;
}

uint64_t sub_100163AE8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100163B44()
{
  unint64_t result = qword_1002F84D8;
  if (!qword_1002F84D8)
  {
    sub_100007928(&qword_1002F84D0);
    sub_10007854C(&qword_1002F84E0, &qword_1002F3590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F84D8);
  }
  return result;
}

unint64_t sub_100163BE4()
{
  unint64_t result = qword_1002F84F0;
  if (!qword_1002F84F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F84F0);
  }
  return result;
}

uint64_t sub_100163C38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100163C80()
{
  unint64_t result = qword_1002F8500;
  if (!qword_1002F8500)
  {
    sub_100007928(&qword_1002F84F8);
    sub_10007854C(&qword_1002F8508, (unint64_t *)&unk_1002F3410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8500);
  }
  return result;
}

uint64_t sub_100163D20()
{
  return sub_10007854C(&qword_1002F84E0, &qword_1002F3590);
}

uint64_t sub_100163D64()
{
  return sub_10007854C(&qword_1002F8508, (unint64_t *)&unk_1002F3410);
}

uint64_t sub_100163DA8()
{
  return sub_10007854C(&qword_1002F8510, (unint64_t *)&unk_1002F3410);
}

uint64_t sub_100163DEC()
{
  return sub_10007854C(&qword_1002F8518, (unint64_t *)&unk_1002F3410);
}

uint64_t sub_100163E30()
{
  return sub_10007854C(&qword_1002F8520, &qword_1002F33B0);
}

unsigned char *_s10CodingKeysOwst_3(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100163F40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_3()
{
  return &_s10CodingKeysON_3;
}

unsigned char *_s10CodingKeysOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100164044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_4()
{
  return &_s10CodingKeysON_4;
}

unsigned char *_s10CodingKeysOwst_5(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100164148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_5()
{
  return &_s10CodingKeysON_5;
}

unint64_t sub_100164184()
{
  unint64_t result = qword_1002F8528;
  if (!qword_1002F8528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8528);
  }
  return result;
}

unint64_t sub_1001641DC()
{
  unint64_t result = qword_1002F8530;
  if (!qword_1002F8530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8530);
  }
  return result;
}

unint64_t sub_100164234()
{
  unint64_t result = qword_1002F8538;
  if (!qword_1002F8538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8538);
  }
  return result;
}

unint64_t sub_10016428C()
{
  unint64_t result = qword_1002F8540;
  if (!qword_1002F8540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8540);
  }
  return result;
}

unint64_t sub_1001642E4()
{
  unint64_t result = qword_1002F8548;
  if (!qword_1002F8548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8548);
  }
  return result;
}

unint64_t sub_10016433C()
{
  unint64_t result = qword_1002F8550;
  if (!qword_1002F8550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8550);
  }
  return result;
}

unint64_t sub_100164394()
{
  unint64_t result = qword_1002F8558;
  if (!qword_1002F8558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8558);
  }
  return result;
}

unint64_t sub_1001643EC()
{
  unint64_t result = qword_1002F8560;
  if (!qword_1002F8560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8560);
  }
  return result;
}

unint64_t sub_100164444()
{
  unint64_t result = qword_1002F8568;
  if (!qword_1002F8568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F8568);
  }
  return result;
}

unint64_t sub_100164498(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8930, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

unint64_t sub_1001644E4(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C89E0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100164530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 64) = a8;
  *(void *)(v9 + 72) = v8;
  *(_WORD *)(v9 + 112) = a6;
  *(void *)(v9 + 48) = a5;
  *(void *)(v9 + 56) = a7;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  return _swift_task_switch(sub_100164560, 0, 0);
}

uint64_t sub_100164560()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v21 = *(void *)(v0 + 72);
  unsigned int v2 = *(unsigned __int16 *)(v0 + 112);
  uint64_t v3 = (v2 >> 8) & 1;
  uint64_t v4 = v2 & 1;
  id v5 = objc_allocWithZone((Class)_LTTextTranslationRequest);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v7 = Locale._bridgeToObjectiveC()().super.isa;
  id v8 = [v5 initWithSourceLocale:isa targetLocale:v7];
  *(void *)(v0 + 80) = v8;

  [v8 setTaskHint:1];
  id v9 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithString:v10];

  [v8 setText:v11];
  [v8 setIsFinal:v4];
  [v8 set_supportsGenderDisambiguation:v3];
  [v8 setCensorSpeech:byte_10030EB88];
  [v8 setSourceOrigin:v1];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v12 = v8;
  id v13 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  LOBYTE(v11) = NSUserDefaults.onDeviceOnly.getter();

  [v12 setForcedOfflineTranslation:v11 & 1];
  [v12 setOverrideOngoingSessionIfNeeded:1];
  id v14 = v12;
  Class v15 = UUID._bridgeToObjectiveC()().super.isa;
  [v14 setLogIdentifier:v15];

  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 88) = v16;
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v21;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v17;
  uint64_t v18 = sub_100007620(&qword_1002FC480);
  void *v17 = v0;
  v17[1] = sub_100164848;
  uint64_t v19 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v19, 0, 0, 0xD000000000000039, 0x8000000100260310, sub_100165040, v16, v18);
}

uint64_t sub_100164848()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unsigned int v2 = sub_1001649C8;
  }
  else
  {
    swift_task_dealloc();
    unsigned int v2 = sub_100164964;
  }
  return _swift_task_switch(v2, 0, 0);
}