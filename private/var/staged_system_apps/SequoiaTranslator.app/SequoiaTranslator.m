uint64_t sub_10000619C()
{
  if (qword_1002FD5D0 != -1) {
    dispatch_once(&qword_1002FD5D0, &stru_1002C7E40);
  }
  return byte_1002FD5D8;
}

void sub_1000061E0(id a1)
{
  int v1 = MGIsQuestionValid();
  if (v1) {
    LOBYTE(v1) = MGGetBoolAnswer();
  }
  byte_1002FD5D8 = v1;
}

uint64_t sub_100006274()
{
  int v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v21 - v7;
  sub_100007620(&qword_1002EE8A0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100247140;
  id v10 = [v1 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = Locale.ltIdentifier.getter();
  uint64_t v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v8, v2);
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  id v15 = [v1 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = Locale.ltIdentifier.getter();
  uint64_t v18 = v17;
  v14(v6, v2);
  *(void *)(v9 + 48) = v16;
  *(void *)(v9 + 56) = v18;
  uint64_t v22 = v9;
  swift_bridgeObjectRetain();
  sub_100007860(&v22);
  swift_bridgeObjectRelease();
  sub_100007620(&qword_1002EE8A8);
  sub_1000078CC();
  uint64_t v19 = BidirectionalCollection<>.joined(separator:)();
  swift_release();
  return v19;
}

uint64_t variable initialization expression of PlaceholderTextView.placeholder()
{
  return 0;
}

void *variable initialization expression of HighlightTextView.highlightRanges()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t variable initialization expression of PlaceholderTextView.placeholderColor()
{
  return 0;
}

uint64_t variable initialization expression of RoundTranslationActionButtonStyle.context()
{
  return 0;
}

double variable initialization expression of RoundTranslationActionButtonStyle._scale()
{
  return 1.0;
}

uint64_t variable initialization expression of RoundTranslationActionButtonStyle.visible()
{
  return 1;
}

id variable initialization expression of PlaceholderTextView.placeholderTextView()
{
  id v0 = [objc_allocWithZone((Class)UITextView) init];
  [v0 setUserInteractionEnabled:0];
  [v0 setBackgroundColor:0];
  [v0 setEditable:0];
  [v0 setSelectable:0];
  [v0 setAutoresizingMask:18];
  return v0;
}

id sub_10000656C()
{
  return *v0;
}

uint64_t sub_100006574@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_10000657C(uint64_t a1, uint64_t a2)
{
  return sub_1000076B4(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

NSNumber sub_1000065A8()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_1000065B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Float._forceBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_100006604(uint64_t a1, uint64_t a2)
{
  char v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_10000665C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = static Float._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

Swift::Int sub_100006688()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000066D0()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000066FC()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_100006740(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100006754(uint64_t a1, uint64_t a2)
{
  return sub_1000076B4(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_10000676C(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1000067E4(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100006864@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000068A8()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1000068B8(uint64_t a1)
{
  uint64_t v2 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100006924(uint64_t a1)
{
  uint64_t v2 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100006990(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100006A20()
{
  id v1 = *v0;
  uint64_t v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_100006A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100006AD4()
{
  return Hasher._finalize()();
}

void type metadata accessor for SBUISystemAperturePresentationBehaviors(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureContentRole(uint64_t a1)
{
}

void type metadata accessor for SBUISystemApertureLayoutMode(uint64_t a1)
{
}

void type metadata accessor for _LTInvocationAppTabName(uint64_t a1)
{
}

void type metadata accessor for AFSiriDataSharingOptInStatus(uint64_t a1)
{
}

__n128 initializeWithTake for AppSection(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for TappedAlternatives(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for CopyButton(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100006C14(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006C34(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

uint64_t sub_100006C88(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100006CA8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientationMask(uint64_t a1)
{
}

void *sub_100006D0C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100006D1C(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100006D28(uint64_t a1)
{
  uint64_t v2 = sub_100008624(&qword_1002EEAA8, type metadata accessor for _LTTranslationError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_100006D94(uint64_t a1)
{
  uint64_t v2 = sub_100008624(&qword_1002EEAA8, type metadata accessor for _LTTranslationError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_100006E04(uint64_t a1)
{
  uint64_t v2 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100006E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100006EF4()
{
  sub_100008624((unint64_t *)&qword_1002EEB00, type metadata accessor for LaunchOptionsKey);
  sub_100008624(&qword_1002EEB08, type metadata accessor for LaunchOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100006FB0()
{
  sub_100008624(&qword_1002EEB20, type metadata accessor for Name);
  sub_100008624(&qword_1002EEB28, type metadata accessor for Name);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10000706C()
{
  sub_100008624((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
  sub_100008624(&qword_1002EEB78, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

_DWORD *sub_100007128@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_100007138@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_100007144()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100007200()
{
  sub_100008624(&qword_1002EEB80, type metadata accessor for Port);
  sub_100008624(&qword_1002EEB88, type metadata accessor for Port);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1000072BC()
{
  sub_100008624(&qword_1002EEB50, type metadata accessor for NSLinguisticTag);
  sub_100008624(&qword_1002EEB58, type metadata accessor for NSLinguisticTag);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100007378()
{
  sub_100008624(&qword_1002EEB60, type metadata accessor for NSLinguisticTagScheme);
  sub_100008624(&qword_1002EEB68, type metadata accessor for NSLinguisticTagScheme);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100007434()
{
  sub_100008624(&qword_1002EEB30, type metadata accessor for STBackgroundActivityIdentifier);
  sub_100008624(&qword_1002EEB38, type metadata accessor for STBackgroundActivityIdentifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_1000074F0@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100007538@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100007564()
{
  sub_100008624(&qword_1002EEB40, type metadata accessor for VNImageOption);
  sub_100008624(&qword_1002EEB48, type metadata accessor for VNImageOption);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100007620(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100007664()
{
  return Float.hashValue.getter(*v0);
}

void sub_10000766C()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_1000076A0(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFF) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_1000076B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000076F8()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000774C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_1000077C0(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1000077D4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

Swift::Int sub_100007860(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10023B8F8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100007970(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1000078CC()
{
  unint64_t result = qword_1002EE8B0;
  if (!qword_1002EE8B0)
  {
    sub_100007928(&qword_1002EE8A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EE8B0);
  }
  return result;
}

uint64_t sub_100007928(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

Swift::Int sub_100007970(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_10000805C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_10000812C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v97 = sub_10023B8E4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10023B4F4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_10023B4F4((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(void *)v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        v85 = v11;
        v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        v88 = v42;
        unint64_t v89 = v44;
        v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_10000812C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (void *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10000805C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10000812C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_10023B5F0((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
}

void type metadata accessor for _LTDisambiguationType(uint64_t a1)
{
}

void type metadata accessor for _LTTranslationError(uint64_t a1)
{
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for Name(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for STBackgroundActivityIdentifier(uint64_t a1)
{
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for NSLinguisticTag(uint64_t a1)
{
}

void type metadata accessor for NSLinguisticTagScheme(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for UIReturnKeyType(uint64_t a1)
{
}

void type metadata accessor for _LTSELFLoggingPlaybackSpeed(uint64_t a1)
{
}

void type metadata accessor for _LTSELFLoggingAudioChannel(uint64_t a1)
{
}

void type metadata accessor for _LTSELFLoggingSourceOrTargetLanguage(uint64_t a1)
{
}

void type metadata accessor for _LTAppConversationTabView(uint64_t a1)
{
}

void type metadata accessor for _LTInvocationInputMode(uint64_t a1)
{
}

void type metadata accessor for _LTInvocationType(uint64_t a1)
{
}

void type metadata accessor for Port(uint64_t a1)
{
}

void type metadata accessor for AVOutputDeviceSubType(uint64_t a1)
{
}

void type metadata accessor for AVOutputDeviceType(uint64_t a1)
{
}

uint64_t sub_100008594()
{
  return sub_100008624(&qword_1002EE9D0, type metadata accessor for AVOutputDeviceType);
}

uint64_t sub_1000085DC()
{
  return sub_100008624(&qword_1002EE9D8, type metadata accessor for Port);
}

uint64_t sub_100008624(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000866C()
{
  return sub_100008624(&qword_1002EE9E0, type metadata accessor for Port);
}

uint64_t sub_1000086B4()
{
  return sub_100008624(&qword_1002EE9E8, type metadata accessor for Port);
}

uint64_t sub_1000086FC()
{
  return sub_100008624(&qword_1002EE9F0, type metadata accessor for Key);
}

uint64_t sub_100008744()
{
  return sub_100008624(&qword_1002EE9F8, type metadata accessor for Key);
}

uint64_t sub_10000878C()
{
  return sub_100008624(&qword_1002EEA00, type metadata accessor for NSLinguisticTagScheme);
}

uint64_t sub_1000087D4()
{
  return sub_100008624(&qword_1002EEA08, type metadata accessor for NSLinguisticTagScheme);
}

uint64_t sub_10000881C()
{
  return sub_100008624(&qword_1002EEA10, type metadata accessor for NSLinguisticTagScheme);
}

uint64_t sub_100008864()
{
  return sub_100008624(&qword_1002EEA18, type metadata accessor for NSLinguisticTag);
}

uint64_t sub_1000088AC()
{
  return sub_100008624(&qword_1002EEA20, type metadata accessor for NSLinguisticTag);
}

uint64_t sub_1000088F4()
{
  return sub_100008624(&qword_1002EEA28, type metadata accessor for NSLinguisticTag);
}

uint64_t sub_10000893C()
{
  return sub_100008624(&qword_1002EEA30, type metadata accessor for VNImageOption);
}

uint64_t sub_100008984()
{
  return sub_100008624(&qword_1002EEA38, type metadata accessor for VNImageOption);
}

uint64_t sub_1000089CC()
{
  return sub_100008624(&qword_1002EEA40, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_100008A14()
{
  return sub_100008624(&qword_1002EEA48, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_100008A5C()
{
  return sub_100008624(&qword_1002EEA50, type metadata accessor for Name);
}

uint64_t sub_100008AA4()
{
  return sub_100008624(&qword_1002EEA58, type metadata accessor for Name);
}

uint64_t sub_100008AEC()
{
  return sub_100008624(&qword_1002EEA60, type metadata accessor for Name);
}

uint64_t sub_100008B34()
{
  return sub_100008624(&qword_1002EEA68, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100008B7C()
{
  return sub_100008624(&qword_1002EEA70, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100008BC4()
{
  return sub_100008624(&qword_1002EEA78, type metadata accessor for UILayoutPriority);
}

uint64_t sub_100008C0C()
{
  return sub_100008624(&qword_1002EEA80, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008C54()
{
  return sub_100008624(&qword_1002EEA88, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008C9C()
{
  return sub_100008624(&qword_1002EEA90, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100008CE4()
{
  return sub_100008624(&qword_1002EEA98, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100008D2C()
{
  return sub_100008624(&qword_1002EEAA0, type metadata accessor for LaunchOptionsKey);
}

uint64_t sub_100008D74()
{
  return sub_100008624(&qword_1002EEAA8, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008DBC()
{
  return sub_100008624(&qword_1002EEAB0, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008E04()
{
  return sub_100008624(&qword_1002EEAB8, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008E4C()
{
  return sub_100008624(&qword_1002EEAC0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_100008EA8()
{
  return sub_100008624(&qword_1002EEAC8, type metadata accessor for Code);
}

unint64_t sub_100008EF4()
{
  unint64_t result = qword_1002EEAD0;
  if (!qword_1002EEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEAD0);
  }
  return result;
}

uint64_t sub_100008F48()
{
  return sub_100008624(&qword_1002EEAD8, type metadata accessor for Code);
}

uint64_t sub_100008F90()
{
  return sub_100008624(&qword_1002EEAE0, type metadata accessor for _LTTranslationError);
}

uint64_t sub_100008FD8()
{
  return sub_100008624(&qword_1002EEAE8, type metadata accessor for STBackgroundActivityIdentifier);
}

uint64_t sub_100009020()
{
  return sub_100008624(&qword_1002EEAF0, type metadata accessor for VNImageOption);
}

uint64_t sub_100009068()
{
  return sub_100008624(&qword_1002EEAF8, type metadata accessor for Key);
}

void type metadata accessor for SNAInvalidationReason(uint64_t a1)
{
}

void type metadata accessor for SNAAssertionState(uint64_t a1)
{
}

void type metadata accessor for _LTTranslationSourceOrigin(uint64_t a1)
{
}

void sub_1000090EC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

objc_class *sub_10000915C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1000096A8();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a5;
  *(void *)(v9 + 24) = a6;
  swift_retain();
  v34.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v34).super.super.super.super.isa;
  uint64_t v11 = self;
  uint64_t v12 = isa;
  id v13 = [v11 systemFontOfSize:17.0];
  v14 = self;
  id v15 = [v14 configurationWithFont:v13 scale:3];

  v33 = v12;
  [(objc_class *)v12 setPreferredSymbolConfiguration:v15 forImageInState:0];
  id v16 = [v14 configurationWithScale:3];
  swift_bridgeObjectRetain();
  id v17 = v16;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v19 = self;
  id v20 = [v19 systemImageNamed:v18 withConfiguration:v17];

  if (v20)
  {
    id v21 = [self whiteColor];
    id v22 = [v20 imageWithTintColor:v21];
  }
  else
  {
    id v22 = 0;
  }
  BOOL v23 = v33;
  [(objc_class *)v33 setImage:v22 forState:0];
  swift_bridgeObjectRelease();

  if (a4)
  {
    [(objc_class *)v33 setPreferredSymbolConfiguration:v15 forImageInState:4];
    id v24 = v15;
    swift_bridgeObjectRetain();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [v19 systemImageNamed:v25 withConfiguration:v24];

    if (v26)
    {
      id v27 = [self whiteColor];
      id v28 = [v26 imageWithTintColor:v27];
      swift_bridgeObjectRelease();

      BOOL v23 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      id v28 = 0;
    }
    [(objc_class *)v23 setImage:v28 forState:4];
  }
  -[objc_class setFrame:](v23, "setFrame:", 0.0, 0.0, 44.0, 44.0);
  uint64_t v29 = self;
  uint64_t v30 = v23;
  id v31 = [v29 whiteColor];
  [(objc_class *)v30 setTintColor:v31];

  swift_release();
  return v30;
}

uint64_t sub_100009570(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_100009650()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActionButton();
  [super dealloc];
}

uint64_t type metadata accessor for ActionButton()
{
  return self;
}

unint64_t sub_1000096A8()
{
  unint64_t result = qword_1002F8BD0;
  if (!qword_1002F8BD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F8BD0);
  }
  return result;
}

uint64_t sub_1000096E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009720()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t initializeBufferWithCopyOfBuffer for AlertModel(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for AlertModel(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    if ((a2 + 33554183) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776967;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776967;
      }
    }
  }
  unsigned int v4 = *((unsigned __int8 *)a1 + 2);
  BOOL v5 = v4 >= 8;
  int v6 = v4 - 8;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554183) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xF8) {
    int v3 = 0;
  }
  if (a2 > 0xF8)
  {
    *(_WORD *)unint64_t result = a2 - 249;
    *(unsigned char *)(result + 2) = (a2 - 249) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 249) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)(result + 2) = a2 + 7;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertModel()
{
  return &type metadata for AlertModel;
}

unint64_t sub_100009868(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 6:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 8:
      unint64_t result = 0x5F4B524F5754454ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000028;
      break;
    case 10:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000099B0(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
    case 11:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 6:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 8:
      unint64_t result = 0x5F4B524F5754454ELL;
      break;
    case 9:
      unint64_t result = 0xD000000000000028;
      break;
    case 10:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100009AF8(unsigned __int8 a1)
{
  if (sub_1000099B0(a1) == 0xD000000000000011 && v2 == 0x8000000100259C90)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_5:
    unsigned int v4 = self;
    id v5 = [v4 mainBundle];
    id v6 = [v5 localizedInfoDictionary];

    if (v6)
    {
      uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1002036A8(0xD000000000000013, 0x800000010025A550), (v9 & 1) != 0))
      {
        sub_10000B170(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v37);
        swift_bridgeObjectRelease();
        if (*((void *)&v38 + 1))
        {
          uint64_t v10 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEC78);
          if (swift_dynamicCast())
          {
            uint64_t v11 = v36;
LABEL_15:
            unint64_t v12 = sub_100009868(a1);
            v14 = v13;
            id v15 = [v4 mainBundle];
            v39._object = (void *)0xE000000000000000;
            v16._uint64_t countAndFlagsBits = v12;
            v16._object = v14;
            v17._uint64_t countAndFlagsBits = 0;
            v17._object = (void *)0xE000000000000000;
            v39._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v39);
            swift_bridgeObjectRelease();

            sub_100007620(&qword_1002EEC80);
            uint64_t v18 = swift_allocObject();
            *(_OWORD *)(v18 + 16) = xmmword_1002488D0;
            sub_10000B0CC(0, (unint64_t *)&qword_1002EEC78);
            *(void *)(v18 + 56) = v10;
            *(void *)(v18 + 64) = sub_10000B108();
            *(void *)(v18 + 32) = v11;
            id v19 = v11;
            uint64_t v20 = String.init(format:_:)();

            swift_bridgeObjectRelease();
            return v20;
          }
LABEL_14:
          uint64_t v10 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEC78);
          uint64_t v11 = NSString.init(stringLiteral:)();
          goto LABEL_15;
        }
      }
      else
      {
        long long v37 = 0u;
        long long v38 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      long long v37 = 0u;
      long long v38 = 0u;
    }
    sub_10000B070((uint64_t)&v37, (uint64_t *)&unk_1002F02C0);
    goto LABEL_14;
  }
  unint64_t v22 = sub_100009868(a1);
  id v24 = v23;
  unint64_t v25 = 0xD00000000000001ELL;
  unint64_t v26 = 0x800000010025A530;
  unsigned int v27 = a1 - 6;
  unint64_t v28 = 0xD000000000000024;
  unint64_t v29 = 0x800000010025A470;
  if (a1 == 5)
  {
    unint64_t v28 = 0xD00000000000003ELL;
    unint64_t v29 = 0x800000010025A4F0;
  }
  if (a1 != 2)
  {
    unint64_t v25 = v28;
    unint64_t v26 = v29;
  }
  if (v27 >= 2) {
    uint64_t v30 = v25;
  }
  else {
    uint64_t v30 = 0xD000000000000040;
  }
  if (v27 >= 2) {
    id v31 = (void *)v26;
  }
  else {
    id v31 = (void *)0x800000010025A4A0;
  }
  id v32 = [self mainBundle];
  v40._object = v31;
  v33._uint64_t countAndFlagsBits = v22;
  v33._object = v24;
  v34._uint64_t countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v40._uint64_t countAndFlagsBits = v30;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v32, v34, v40)._countAndFlagsBits;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t sub_100009EE4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000099B0(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000099B0(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100009F70()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000099B0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_100009FD4()
{
  sub_1000099B0(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10000A028()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000099B0(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10000A088@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10000A1B0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10000A0B8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000099B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_10000A0E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10000A0F8()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10000A140()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10000A16C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unint64_t sub_10000A1B0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C7FA0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return 12;
  }
  else {
    return v3;
  }
}

uint64_t sub_10000A1FC(id a1)
{
  uint64_t v2 = type metadata accessor for URLError.NetworkUnavailableReason();
  uint64_t v60 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v58 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EEC38);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002EEC40);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002EEC48);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v59 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v56 - v14;
  __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v56 - v16;
  id v18 = [a1 domain];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v19 && v22 == v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  v57 = v6;
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    if ([a1 code] == (id)10)
    {
      v62 = &type metadata for TranslateFeatures;
      unint64_t v63 = sub_10000AB14();
      int v24 = 2;
      LOBYTE(v61[0]) = 2;
      char v25 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v61);

      int v26 = 0;
      if (v25) {
        unsigned __int8 v27 = 9;
      }
      else {
        unsigned __int8 v27 = 4;
      }
      return v26 | (v27 << 8) | v24;
    }
    if ([a1 code] == (id)14)
    {
      v62 = &type metadata for TranslateFeatures;
      unint64_t v63 = sub_10000AB14();
      int v24 = 2;
      LOBYTE(v61[0]) = 2;
      char v28 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v61);

      if (v28) {
        unsigned __int8 v27 = 9;
      }
      else {
        unsigned __int8 v27 = 4;
      }
      int v26 = 0x10000;
      return v26 | (v27 << 8) | v24;
    }
    if ([a1 code] != (id)9)
    {
      v62 = &type metadata for TranslateFeatures;
      unint64_t v63 = sub_10000AB14();
      int v24 = 2;
      LOBYTE(v61[0]) = 2;
      char v30 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v61);

      if (v30) {
        unsigned __int8 v27 = 9;
      }
      else {
        unsigned __int8 v27 = 4;
      }
      goto LABEL_55;
    }
    goto LABEL_39;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v19 && v29 == v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v19 && v49 == v21)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0) {
        goto LABEL_54;
      }
    }
    if ([a1 code] == (id)561017449)
    {
      v62 = &type metadata for TranslateFeatures;
      unint64_t v63 = sub_10000AB14();
      LOBYTE(v61[0]) = 2;
      char v54 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v61);

      if (v54) {
        unsigned __int8 v27 = 10;
      }
      else {
        unsigned __int8 v27 = 5;
      }
      int v24 = 3;
      int v26 = 393216;
      return v26 | (v27 << 8) | v24;
    }
LABEL_54:

    int v24 = 2;
    unsigned __int8 v27 = 4;
LABEL_55:
    int v26 = 458752;
    return v26 | (v27 << 8) | v24;
  }
LABEL_22:
  swift_bridgeObjectRelease();
  v61[0] = a1;
  sub_10000B0CC(0, &qword_1002EEC58);
  uint64_t v32 = type metadata accessor for URLError();
  a1 = a1;
  char v33 = swift_dynamicCast();
  Swift::String v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  if (v33)
  {
    uint64_t v35 = *(void *)(v32 - 8);
    v34(v9, 0, 1, v32);
    URLError.networkUnavailableReason.getter();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v32);
    uint64_t v36 = (uint64_t)v57;
    uint64_t v37 = v60;
  }
  else
  {
    v34(v9, 1, 1, v32);
    sub_10000B070((uint64_t)v9, &qword_1002EEC40);
    uint64_t v37 = v60;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v17, 1, 1, v2);
    uint64_t v36 = (uint64_t)v57;
  }
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v15, enum case for URLError.NetworkUnavailableReason.cellular(_:), v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v2);
  uint64_t v38 = v36 + *(int *)(v4 + 48);
  sub_10000ABB8((uint64_t)v17, v36);
  sub_10000ABB8((uint64_t)v15, v38);
  Swift::String v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v39(v36, 1, v2) == 1)
  {
    sub_10000B070((uint64_t)v15, &qword_1002EEC48);
    uint64_t v36 = (uint64_t)v57;
    sub_10000B070((uint64_t)v17, &qword_1002EEC48);
    if (v39(v38, 1, v2) == 1)
    {
      sub_10000B070(v36, &qword_1002EEC48);
LABEL_47:

      int v24 = 0;
      unsigned __int8 v27 = 1;
      int v26 = 0x20000;
      return v26 | (v27 << 8) | v24;
    }
  }
  else
  {
    uint64_t v40 = v59;
    sub_10000ABB8(v36, v59);
    if (v39(v38, 1, v2) != 1)
    {
      uint64_t v50 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v58, v38, v2);
      sub_10000AC20();
      char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v37 + 8);
      v52(v50, v2);
      sub_10000B070((uint64_t)v15, &qword_1002EEC48);
      sub_10000B070((uint64_t)v17, &qword_1002EEC48);
      v52((char *)v40, v2);
      sub_10000B070(v36, &qword_1002EEC48);
      if (v51) {
        goto LABEL_47;
      }
      goto LABEL_31;
    }
    sub_10000B070((uint64_t)v15, &qword_1002EEC48);
    sub_10000B070((uint64_t)v17, &qword_1002EEC48);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v2);
  }
  sub_10000B070(v36, &qword_1002EEC38);
LABEL_31:
  if ([a1 code] != (id)-1009)
  {
LABEL_39:
    v62 = &type metadata for TranslateFeatures;
    unint64_t v63 = sub_10000AB14();
    int v24 = 2;
    LOBYTE(v61[0]) = 2;
    char v48 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v61);

    if (v48) {
      unsigned __int8 v27 = 11;
    }
    else {
      unsigned __int8 v27 = 8;
    }
    int v26 = 327680;
    return v26 | (v27 << 8) | v24;
  }
  type metadata accessor for AirplaneModeConfiguration();
  char v41 = static AirplaneModeConfiguration.isAirplaneModeEnabled.getter();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = (id)SFLocalizableWAPIStringKeyForKey();

  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  v64._uint64_t countAndFlagsBits = v44;
  v64._object = v46;
  unsigned __int8 v47 = sub_10000A1B0(v64);

  if (v47 == 12) {
    unsigned __int8 v27 = 7;
  }
  else {
    unsigned __int8 v27 = v47;
  }
  if (v41) {
    int v26 = 196608;
  }
  else {
    int v26 = 0x40000;
  }
  int v24 = 2;
  return v26 | (v27 << 8) | v24;
}

unint64_t sub_10000AB14()
{
  unint64_t result = qword_1002EEC50;
  if (!qword_1002EEC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEC50);
  }
  return result;
}

uint64_t sub_10000AB68(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_10000ABB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EEC48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10000AC20()
{
  unint64_t result = qword_1002EEC60;
  if (!qword_1002EEC60)
  {
    type metadata accessor for URLError.NetworkUnavailableReason();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEC60);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for AlertStringKey(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AlertReasonKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AlertReasonKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000ADE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_10000AE08(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10000AE14(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AlertReasonKey()
{
  return &type metadata for AlertReasonKey;
}

uint64_t getEnumTagSinglePayload for AlertStringKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AlertStringKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10000AF88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertStringKey()
{
  return &type metadata for AlertStringKey;
}

unint64_t sub_10000AFC4()
{
  unint64_t result = qword_1002EEC68;
  if (!qword_1002EEC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEC68);
  }
  return result;
}

unint64_t sub_10000B01C()
{
  unint64_t result = qword_1002EEC70;
  if (!qword_1002EEC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEC70);
  }
  return result;
}

uint64_t sub_10000B070(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100007620(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000B0CC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_10000B108()
{
  unint64_t result = qword_1002EEC88;
  if (!qword_1002EEC88)
  {
    sub_10000B0CC(255, (unint64_t *)&qword_1002EEC78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEC88);
  }
  return result;
}

uint64_t sub_10000B170(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

id sub_10000B3F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return [super dealloc];
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  unsigned int v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t sub_10000B524()
{
  uint64_t v1 = v0;
  if (qword_1002EE6B0 != -1) {
    swift_once();
  }
  sub_1001A4A18();
  sub_10000B688();
  sub_10023D36C();
  static NSUserDefaults.ltuiRegisterDefaults()();
  sub_1001A5094(0);
  objc_super v2 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setValue:isa forKey:v4];

  sub_1001E9F24();
  type metadata accessor for InterruptionController();
  swift_allocObject();
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator11AppDelegate_interruptionController) = sub_10011396C();
  swift_release();
  return 1;
}

unint64_t sub_10000B630()
{
  unint64_t result = qword_1002EEB00;
  if (!qword_1002EEB00)
  {
    type metadata accessor for LaunchOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEB00);
  }
  return result;
}

unint64_t sub_10000B688()
{
  unint64_t result = qword_1002F3390;
  if (!qword_1002F3390)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F3390);
  }
  return result;
}

uint64_t sub_10000B6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v48 = a3;
  uint64_t v37 = sub_100007620(&qword_1002EED30);
  __chkstk_darwin(v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100007620(&qword_1002EED38);
  __chkstk_darwin(v47);
  uint64_t v40 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100007620(&qword_1002EED40);
  uint64_t v42 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  int v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100007620(&qword_1002EED48);
  __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100007620(&qword_1002EED50);
  __chkstk_darwin(v38);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002EED58);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100007620(&qword_1002EED60);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100007620(&qword_1002EED68);
  __chkstk_darwin(v43);
  char v41 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002EED70);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 0:
      sub_100007620(&qword_1002EEDA0);
      sub_10000C5C4();
      Label.init(title:icon:)();
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v21, v18);
      swift_storeEnumTagMultiPayload();
      sub_10000C27C(&qword_1002EED90, &qword_1002EED70);
      sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4((uint64_t)v16, (uint64_t)v11, &qword_1002EED60);
      swift_storeEnumTagMultiPayload();
      sub_10000C1E0();
      sub_10000C2CC();
      uint64_t v22 = (uint64_t)v41;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070((uint64_t)v16, &qword_1002EED60);
      sub_10000C3A4(v22, v45, &qword_1002EED68);
      swift_storeEnumTagMultiPayload();
      sub_10000C164();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v22, &qword_1002EED68);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      break;
    case 1:
      LocalizedStringKey.init(stringLiteral:)();
      Label<>.init(_:systemImage:)();
      uint64_t v27 = v42;
      uint64_t v28 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v14, v8, v46);
      swift_storeEnumTagMultiPayload();
      sub_10000C27C(&qword_1002EED90, &qword_1002EED70);
      sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4((uint64_t)v16, (uint64_t)v11, &qword_1002EED60);
      swift_storeEnumTagMultiPayload();
      sub_10000C1E0();
      sub_10000C2CC();
      uint64_t v29 = (uint64_t)v41;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070((uint64_t)v16, &qword_1002EED60);
      sub_10000C3A4(v29, v45, &qword_1002EED68);
      swift_storeEnumTagMultiPayload();
      sub_10000C164();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v29, &qword_1002EED68);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v8, v28);
      break;
    case 2:
    case 3:
      LocalizedStringKey.init(stringLiteral:)();
      Label<>.init(_:systemImage:)();
      uint64_t v30 = v42;
      uint64_t v31 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v5, v8, v46);
      swift_storeEnumTagMultiPayload();
      sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
      uint64_t v32 = (uint64_t)v40;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v32, (uint64_t)v11, &qword_1002EED38);
      swift_storeEnumTagMultiPayload();
      sub_10000C1E0();
      sub_10000C2CC();
      uint64_t v33 = (uint64_t)v41;
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v32, &qword_1002EED38);
      sub_10000C3A4(v33, v45, &qword_1002EED68);
      swift_storeEnumTagMultiPayload();
      sub_10000C164();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v33, &qword_1002EED68);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v8, v31);
      break;
    case 4:
      LocalizedStringKey.init(stringLiteral:)();
      int v24 = v8;
      Label<>.init(_:systemImage:)();
      uint64_t v25 = v42;
      uint64_t v26 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v5, v8, v46);
      goto LABEL_7;
    default:
      uint64_t v49 = v36;
      uint64_t v50 = a2;
      sub_10000C350();
      swift_bridgeObjectRetain();
      int v24 = v8;
      Label<>.init<A>(_:systemImage:)();
      uint64_t v25 = v42;
      uint64_t v26 = v46;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v5, v8, v46);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
      uint64_t v34 = (uint64_t)v40;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v34, v45, &qword_1002EED38);
      swift_storeEnumTagMultiPayload();
      sub_10000C164();
      sub_10000C2CC();
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v34, &qword_1002EED38);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v26);
      break;
  }
  return result;
}

unint64_t sub_10000C164()
{
  unint64_t result = qword_1002EED80;
  if (!qword_1002EED80)
  {
    sub_100007928(&qword_1002EED68);
    sub_10000C1E0();
    sub_10000C2CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EED80);
  }
  return result;
}

unint64_t sub_10000C1E0()
{
  unint64_t result = qword_1002EED88;
  if (!qword_1002EED88)
  {
    sub_100007928(&qword_1002EED60);
    sub_10000C27C(&qword_1002EED90, &qword_1002EED70);
    sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EED88);
  }
  return result;
}

uint64_t sub_10000C27C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10000C2CC()
{
  unint64_t result = qword_1002EED98;
  if (!qword_1002EED98)
  {
    sub_100007928(&qword_1002EED38);
    sub_10000C27C(&qword_1002EED78, &qword_1002EED40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EED98);
  }
  return result;
}

unint64_t sub_10000C350()
{
  unint64_t result = qword_1002FBD90;
  if (!qword_1002FBD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002FBD90);
  }
  return result;
}

uint64_t sub_10000C3A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007620(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10000C408@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10000C484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Image.ResizingMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(_internalSystemName:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.ResizingMode.stretch(_:), v2);
  uint64_t v6 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  return result;
}

unint64_t sub_10000C5C4()
{
  unint64_t result = qword_1002EEDA8;
  if (!qword_1002EEDA8)
  {
    sub_100007928(&qword_1002EEDA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEDA8);
  }
  return result;
}

unint64_t destroy for AppSection(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s17SequoiaTranslator10AppSectionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for AppSection(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AppSection(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppSection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_10000C850(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10000C868(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppSection()
{
  return &type metadata for AppSection;
}

uint64_t sub_10000C898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      break;
    default:
      String.hash(into:)();
      break;
  }

  return String.hash(into:)();
}

Swift::Int sub_10000C9D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_10000C898((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_10000CA24(uint64_t a1)
{
  return sub_10000C898(a1, *v1, v1[1]);
}

Swift::Int sub_10000CA2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_10000C898((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_10000CA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_10000CB44(v2, v3);
}

uint64_t sub_10000CA80(uint64_t *a1, uint64_t a2)
{
  return sub_10000CD34(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

unint64_t sub_10000CA98()
{
  unint64_t result = qword_1002EEDB0;
  if (!qword_1002EEDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEDB0);
  }
  return result;
}

unint64_t sub_10000CAF0()
{
  unint64_t result = qword_1002EEDB8;
  if (!qword_1002EEDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEDB8);
  }
  return result;
}

uint64_t sub_10000CB44(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10000CB58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CoreAnalyticsLogger.InteractionLocation();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v7;
  uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsLogger.InteractionLocation.translationTab(_:);
  switch(a2)
  {
    case 0uLL:
      goto LABEL_6;
    case 1uLL:
      uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsLogger.InteractionLocation.cameraTab(_:);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsLogger.InteractionLocation.conversationTab(_:);
      goto LABEL_6;
    case 3uLL:
      goto LABEL_4;
    case 4uLL:
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
      return v12(a3, 1, 1, v6);
    default:
      sub_10000CDF0(a1, a2);
      uint64_t v7 = v14;
LABEL_4:
      uint64_t v10 = (unsigned int *)&enum case for CoreAnalyticsLogger.InteractionLocation.favoritesTab(_:);
LABEL_6:
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *v10, v6);
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v9, v6);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v6);
  }
}

uint64_t sub_10000CD34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_16;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 5)
      {
LABEL_16:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

uint64_t sub_10000CDF0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10000CEB8()
{
}

id sub_10000CEC4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(item:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [a1 selectItemAtIndexPath:isa animated:0 scrollPosition:1];

  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100011554(v9, (uint64_t)qword_10030EA50);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting ScrollHistory test now", v12, 2u);
    swift_slowDealloc();
  }

  return [self runTestWithParameters:a2];
}

void sub_10000D094(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v37 = *(NSObject **)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window);
  if (!v15) {
    goto LABEL_8;
  }
  id v16 = [v15 viewWithTag:206];
  if (!v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  uint64_t v34 = v3;
  self;
  uint64_t v18 = swift_dynamicCastObjCClass();
  if (!v18)
  {

LABEL_8:
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100011554(v25, (uint64_t)qword_10030EA50);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v26, "ScrollFavorites test failing because sceneDelegate has no favoriteCardList", v27, 2u);
      swift_slowDealloc();
    }
    goto LABEL_12;
  }
  uint64_t v19 = (void *)v18;
  sub_10018FDE8();
  sub_10022C83C();
  swift_release();
  uint64_t v35 = v17;
  id v20 = sub_10023BE98();

  if (v20)
  {
    type metadata accessor for FavoritesListController();
    if (swift_dynamicCastClass())
    {
      sub_1000F034C(0);
      [v19 layoutIfNeeded];
      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      uint64_t v32 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      id v33 = v20;
      Class isa = (void (*)(char *, uint64_t))v37[1].isa;
      ++v37;
      isa(v12, v9);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v19;
      aBlock[4] = sub_100011758;
      aBlock[5] = v22;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10008BA1C;
      aBlock[3] = &unk_1002C98B8;
      char v23 = _Block_copy(aBlock);
      uint64_t v35 = v35;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10001165C();
      sub_100007620(&qword_1002EEE40);
      sub_1000116B4();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      int v24 = (void *)v32;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v6);
      isa(v14, v9);
      return;
    }
  }
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_100011554(v29, (uint64_t)qword_10030EA50);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v37, v30))
  {

    uint64_t v28 = v35;
    goto LABEL_13;
  }
  uint64_t v31 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v31 = 0;
  _os_log_impl((void *)&_mh_execute_header, v37, v30, "ScrollFavorites test failing because can't find FavoritesListController", v31, 2u);
  swift_slowDealloc();

LABEL_12:
  uint64_t v28 = v37;
LABEL_13:
}

void sub_10000D6A4(void *a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)[a1 numberOfSections] >= 3
    && (uint64_t)[a1 numberOfItemsInSection:2] >= 3)
  {
    IndexPath.init(item:section:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    [a1 selectItemAtIndexPath:isa animated:0 scrollPosition:1];

    id v7 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    id v8 = a1;
    NSString v9 = String._bridgeToObjectiveC()();
    aBlock[4] = sub_10000DAB8;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10008BA1C;
    aBlock[3] = &unk_1002C98E0;
    uint64_t v10 = _Block_copy(aBlock);
    swift_release();
    uint64_t v11 = [v7 initWithTestName:v9 scrollView:v8 completionHandler:v10];

    _Block_release(v10);
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100011554(v12, (uint64_t)qword_10030EA50);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Starting ScrollFavorites test now", v15, 2u);
      swift_slowDealloc();
    }

    [self runTestWithParameters:v11];
    goto LABEL_12;
  }
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030EA50);
  id v21 = a1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134349056;
    aBlock[0] = [v21 numberOfSections];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v11, v17, "ScrollFavorites test failing because cannot select item 2 in section number 2. Number of sections: %{public}ld, privacy: .public)", v18, 0xCu);
    swift_slowDealloc();
LABEL_12:

    return;
  }

  id v19 = v21;
}

void sub_10000DAB8()
{
}

void sub_10000DAC4(const char *a1)
{
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030EA50);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a1, v4, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10000DBB4(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  id v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v30 - v14;
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030EA50);
  os_log_type_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    id v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Starting NewSpeechTranslation test now", v19, 2u);
    swift_slowDealloc();
  }

  NSString v20 = String._bridgeToObjectiveC()();
  [a1 startedTest:v20];

  swift_retain();
  sub_10005CE58();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v21 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v31 = v9;
  uint64_t v32 = v22;
  v22(v13, v9);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a2;
  *(void *)(v23 + 24) = a1;
  aBlock[4] = sub_100011768;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002C9980;
  int v24 = _Block_copy(aBlock);
  id v25 = a2;
  id v26 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  uint64_t v27 = v33;
  uint64_t v28 = v37;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v28);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
  return v32(v15, v31);
}

void sub_10000E048(uint64_t a1, void *a2)
{
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100011554(v3, (uint64_t)qword_10030EA50);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Resetting state after NewSpeechTranslation test", v6, 2u);
    swift_slowDealloc();
  }

  swift_retain();
  sub_10005A31C(0, 0);
  swift_release();
  NSString v7 = String._bridgeToObjectiveC()();
  [a2 finishedTest:v7];
}

uint64_t sub_10000E1AC(void *a1, void *a2, void *a3)
{
  id v36 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(item:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  [a1 selectItemAtIndexPath:isa animated:0 scrollPosition:1];

  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_100011554(v21, (uint64_t)qword_10030EA50);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v22, v23))
  {
    int v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Starting NewTextTranslation test now", v24, 2u);
    swift_slowDealloc();
  }

  NSString v25 = String._bridgeToObjectiveC()();
  [a2 startedTest:v25];

  [v36 becomeFirstResponder];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v26 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  uint64_t v27 = v15;
  + infix(_:_:)();
  id v36 = *(id *)(v10 + 8);
  ((void (*)(char *, uint64_t))v36)(v13, v9);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a2;
  aBlock[4] = sub_1000117C4;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  aBlock[3] = &unk_1002C9A20;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = a2;
  swift_release();
  uint64_t v31 = v37;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  uint64_t v32 = v38;
  uint64_t v33 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v31, v40);
  return ((uint64_t (*)(char *, uint64_t))v36)(v27, v9);
}

void sub_10000E708(void *a1)
{
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030EA50);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Marking NewTextTranslation test as finished", v5, 2u);
    swift_slowDealloc();
  }

  NSString v6 = String._bridgeToObjectiveC()();
  [a1 finishedTest:v6];
}

void sub_10000E834(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
    sub_10001158C();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v19;
    uint64_t v17 = v20;
    uint64_t v3 = v21;
    uint64_t v2 = v22;
    unint64_t v4 = v23;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
  }
  int64_t v8 = (unint64_t)(v3 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_39;
    }
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v12 = v18;
    swift_unknownObjectRelease();
    uint64_t v11 = v2;
    uint64_t v9 = v4;
    if (!v18) {
      goto LABEL_39;
    }
LABEL_33:
    if ([v12 delegate])
    {
      type metadata accessor for SceneDelegate();
      uint64_t v16 = swift_dynamicCastClass();

      if (v16)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
    uint64_t v2 = v11;
    unint64_t v4 = v9;
  }
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v2 << 6);
    uint64_t v11 = v2;
LABEL_32:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  int64_t v13 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v13 >= v8) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v11 = v2 + 1;
    if (!v14)
    {
      uint64_t v11 = v2 + 2;
      if (v2 + 2 >= v8) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (!v14)
      {
        uint64_t v11 = v2 + 3;
        if (v2 + 3 >= v8) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          uint64_t v11 = v2 + 4;
          if (v2 + 4 >= v8) {
            goto LABEL_39;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v11);
          if (!v14)
          {
            uint64_t v11 = v2 + 5;
            if (v2 + 5 >= v8) {
              goto LABEL_39;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v11);
            if (!v14)
            {
              uint64_t v15 = v2 + 6;
              while (v8 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_31;
                }
              }
LABEL_39:
              sub_100011710();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t sub_10000EB7C(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v58 = *(void **)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  int64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v49 - v14;
  if (![self isRecapAvailable])
  {
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_100011554(v38, (uint64_t)qword_10030EA50);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v39, v40)) {
      goto LABEL_31;
    }
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    uint64_t v42 = "Failed to run ScrollHistory test because recap isn't available";
LABEL_30:
    _os_log_impl((void *)&_mh_execute_header, v39, v40, v42, v41, 2u);
    swift_slowDealloc();
    goto LABEL_31;
  }
  uint64_t v55 = v7;
  uint64_t v56 = v6;
  uint64_t v57 = v3;
  id v16 = [a1 connectedScenes];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
  sub_10001158C();
  uint64_t v17 = (char *)static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000E834((uint64_t)v17);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!(v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v47)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_100011554(v48, (uint64_t)qword_10030EA50);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v39, v40)) {
      goto LABEL_31;
    }
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    uint64_t v42 = "Failed to run ScrollHistory test because we don't have a sceneDelegate";
    goto LABEL_30;
  }
LABEL_4:
  if ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v20 = (char *)*(id *)(v19 + 32);
  }
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  aBlock = 0;
  uint64_t v60 = 0;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v21 = *(void **)&v17[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window];
  if (!v21 || (id v22 = [v21 viewWithTag:204]) == 0)
  {
LABEL_19:
    if (qword_1002EE618 == -1)
    {
LABEL_20:
      uint64_t v43 = type metadata accessor for Logger();
      sub_100011554(v43, (uint64_t)qword_10030EA50);
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v39, v44))
      {

        return 0;
      }
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v44, "Failed to run ScrollHistory test because history scroll view can't be found", v45, 2u);
      swift_slowDealloc();

LABEL_31:
      return 0;
    }
LABEL_35:
    swift_once();
    goto LABEL_20;
  }
  unint64_t v23 = v22;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (!v24)
  {

    goto LABEL_19;
  }
  NSString v25 = (void *)v24;
  id v54 = v17;
  sub_10018FDE8();
  sub_10022C83C();
  swift_release();
  [v25 reloadData];
  [v25 layoutIfNeeded];
  id v53 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  id v26 = v23;
  id v50 = v26;
  NSString v27 = String._bridgeToObjectiveC()();
  unint64_t v63 = sub_10000CEB8;
  uint64_t v64 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  char v51 = &v61;
  uint64_t v61 = sub_10008BA1C;
  v62 = &unk_1002C97C8;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_release();
  id v49 = [v53 initWithTestName:v27 scrollView:v25 completionHandler:v28];

  _Block_release(v28);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v52 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v53 = (id)v58[1];
  ((void (*)(char *, uint64_t))v53)(v13, v10);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v25;
  id v30 = v49;
  *(void *)(v29 + 24) = v49;
  unint64_t v63 = sub_100011654;
  uint64_t v64 = v29;
  aBlock = _NSConcreteStackBlock;
  uint64_t v60 = 1107296256;
  uint64_t v61 = sub_10008BA1C;
  v62 = &unk_1002C9818;
  uint64_t v31 = _Block_copy(&aBlock);
  uint64_t v58 = v50;
  id v32 = v30;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v33 = (void *)v52;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v9, v56);
  ((void (*)(char *, uint64_t))v53)(v15, v10);
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_100011554(v34, (uint64_t)qword_10030EA50);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Starting ScrollHistory test soon", v37, 2u);
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

uint64_t sub_10000F4E4(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  int64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v37 - v14;
  if (![self isRecapAvailable])
  {
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_100011554(v31, (uint64_t)qword_10030EA50);
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v32, v33)) {
      goto LABEL_22;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "Failed to run ScrollFavorites test because recap isn't available";
    goto LABEL_21;
  }
  uint64_t v40 = v7;
  uint64_t v41 = v6;
  id v16 = [a1 connectedScenes];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
  sub_10001158C();
  uint64_t v17 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000E834(v17);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!(v19 >> 62))
  {
    id v20 = *(id *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  id v20 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100011554(v36, (uint64_t)qword_10030EA50);
    id v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v32, v33)) {
      goto LABEL_22;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    uint64_t v35 = "Failed to run ScrollFavorites test because the app has no sceneDelegate";
LABEL_21:
    _os_log_impl((void *)&_mh_execute_header, v32, v33, v35, v34, 2u);
    swift_slowDealloc();
LABEL_22:

    return 0;
  }
LABEL_4:
  uint64_t v39 = v3;
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_25;
    }
    id v21 = *(id *)(v19 + 32);
  }
  id v22 = v21;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  long long aBlock = xmmword_100248B00;
  swift_retain();
  static Published.subscript.setter();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v38 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v42 = *(void *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v13, v10);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  uint64_t v46 = sub_100011718;
  uint64_t v47 = v23;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  os_log_type_t v44 = sub_10008BA1C;
  uint64_t v45 = &unk_1002C9868;
  uint64_t v24 = _Block_copy(&aBlock);
  id v20 = v22;
  swift_release();
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  NSString v25 = (void *)v38;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v41);
  ((void (*)(char *, uint64_t))v42)(v15, v10);
  if (qword_1002EE618 != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v26 = type metadata accessor for Logger();
  sub_100011554(v26, (uint64_t)qword_10030EA50);
  NSString v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Starting ScrollFavorites test soon", v29, 2u);
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

uint64_t sub_10000FBE4(void *a1)
{
  uint64_t v64 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v56 - v14;
  if (![self isRecapAvailable])
  {
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_100011554(v42, (uint64_t)qword_10030EA50);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v43, v44)) {
      goto LABEL_39;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    uint64_t v46 = "Failed to run NewSpeechTranslation test because recap isn't available";
LABEL_38:
    _os_log_impl((void *)&_mh_execute_header, v43, v44, v46, v45, 2u);
    swift_slowDealloc();
    goto LABEL_39;
  }
  uint64_t v61 = v2;
  uint64_t v62 = v10;
  uint64_t v59 = a1;
  uint64_t v60 = v6;
  id v16 = [a1 connectedScenes];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
  sub_10001158C();
  uint64_t v17 = (char *)static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000E834((uint64_t)v17);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!(v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v54)
  {
LABEL_34:
    swift_bridgeObjectRelease();
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v55 = type metadata accessor for Logger();
    sub_100011554(v55, (uint64_t)qword_10030EA50);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v43, v44)) {
      goto LABEL_39;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 0;
    uint64_t v46 = "Failed to run NewSpeechTranslation test because there's no sceneDelegate";
    goto LABEL_38;
  }
LABEL_4:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_43;
    }
    id v20 = (char *)*(id *)(v19 + 32);
  }
  unint64_t v63 = v20;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  long long aBlock = 0;
  uint64_t v66 = 0;
  swift_retain();
  uint64_t v17 = v63;
  static Published.subscript.setter();
  id v21 = *(void **)&v17[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window];
  if (!v21 || (id v22 = [v21 viewWithTag:204]) == 0)
  {
LABEL_21:
    if (qword_1002EE618 == -1)
    {
LABEL_22:
      uint64_t v47 = type metadata accessor for Logger();
      sub_100011554(v47, (uint64_t)qword_10030EA50);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v43, v48))
      {
        id v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v49 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v48, "Failed to run NewSpeechTranslation test because history scroll view can't be found", v49, 2u);
        swift_slowDealloc();

LABEL_39:
        return 0;
      }

      return 0;
    }
LABEL_43:
    swift_once();
    goto LABEL_22;
  }
  uint64_t v23 = v22;
  self;
  if (!swift_dynamicCastObjCClass())
  {

    goto LABEL_21;
  }
  id v24 = v23;
  id v25 = sub_10023BE98();

  if (!v25)
  {
LABEL_26:
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_100011554(v50, (uint64_t)qword_10030EA50);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v51, "Failed to run NewSpeechTranslation test because can't find TranslationListController", v52, 2u);
      swift_slowDealloc();

      goto LABEL_39;
    }

    return 0;
  }
  type metadata accessor for TranslationListController();
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {

    goto LABEL_26;
  }
  uint64_t v27 = v26;
  id v58 = v24;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v56 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  os_log_type_t v28 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  uint64_t v57 = v28;
  v28(v13, v9);
  uint64_t v29 = swift_allocObject();
  id v30 = v59;
  *(void *)(v29 + 16) = v59;
  *(void *)(v29 + 24) = v27;
  uint64_t v69 = sub_100011760;
  uint64_t v70 = v29;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v66 = 1107296256;
  char v67 = sub_10008BA1C;
  v68 = &unk_1002C9930;
  uint64_t v31 = _Block_copy(&aBlock);
  id v32 = v30;
  id v33 = v25;
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  uint64_t v34 = v64;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v35 = (void *)v56;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v31);

  (*(void (**)(char *, uint64_t))(v61 + 8))(v4, v34);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v5);
  v57(v15, v9);
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_100011554(v36, (uint64_t)qword_10030EA50);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.info.getter();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = v63;
  if (v39)
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Starting NewSpeechTranslation test soon", v41, 2u);
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

uint64_t sub_100010540(void *a1)
{
  uint64_t v78 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v4 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  int64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v68 - v14;
  if (![self isRecapAvailable])
  {
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v48 = type metadata accessor for Logger();
    sub_100011554(v48, (uint64_t)qword_10030EA50);
    id v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v49, v50)) {
      goto LABEL_47;
    }
    os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v51 = 0;
    uint64_t v52 = "Failed to run NewTextTranslation test because recap isn't available";
LABEL_46:
    _os_log_impl((void *)&_mh_execute_header, v49, v50, v52, v51, 2u);
    swift_slowDealloc();
    goto LABEL_47;
  }
  uint64_t v74 = v10;
  uint64_t v75 = v6;
  uint64_t v76 = v2;
  id v73 = a1;
  id v16 = [a1 connectedScenes];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE20);
  sub_10001158C();
  uint64_t v17 = (char *)static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10000E834((uint64_t)v17);
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!(v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_42;
  }
  swift_bridgeObjectRetain();
  uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v66)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    sub_100011554(v67, (uint64_t)qword_10030EA50);
    id v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v49, v50)) {
      goto LABEL_47;
    }
    os_log_type_t v51 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v51 = 0;
    uint64_t v52 = "Failed to run NewTextTranslation test because there's no sceneDelegate";
    goto LABEL_46;
  }
LABEL_4:
  if ((v19 & 0xC000000000000001) != 0)
  {
    id v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_51;
    }
    id v20 = (char *)*(id *)(v19 + 32);
  }
  uint64_t v77 = v20;
  swift_bridgeObjectRelease();
  [self setFrameStallSkipRequest:1];
  swift_getKeyPath();
  swift_getKeyPath();
  long long aBlock = 0;
  uint64_t v80 = 0;
  swift_retain();
  uint64_t v17 = v77;
  static Published.subscript.setter();
  uint64_t v21 = OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window;
  id v22 = *(void **)&v17[OBJC_IVAR____TtC17SequoiaTranslator13SceneDelegate_window];
  if (!v22 || (id v23 = [v22 viewWithTag:204]) == 0)
  {
LABEL_28:
    if (qword_1002EE618 == -1)
    {
LABEL_29:
      uint64_t v59 = type metadata accessor for Logger();
      sub_100011554(v59, (uint64_t)qword_10030EA50);
      id v49 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v49, v60))
      {

        return 0;
      }
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v60, "Failed to run NewTextTranslation test because history scroll view can't be found", v61, 2u);
      swift_slowDealloc();

LABEL_47:
      return 0;
    }
LABEL_51:
    swift_once();
    goto LABEL_29;
  }
  id v24 = v23;
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (!v25)
  {

    goto LABEL_28;
  }
  uint64_t v26 = (void *)v25;
  id v27 = v24;
  id v72 = v26;
  id v28 = sub_10023BE98();

  if (!v28
    || (type metadata accessor for TranslationListController(), uint64_t v29 = swift_dynamicCastClass(), v28, !v29))
  {
    id v53 = v27;
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v54 = type metadata accessor for Logger();
    sub_100011554(v54, (uint64_t)qword_10030EA50);
    id v49 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    BOOL v56 = os_log_type_enabled(v49, v55);
    id v57 = v77;
    if (!v56)
    {

      return 0;
    }
    id v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v58 = 0;
    _os_log_impl((void *)&_mh_execute_header, v49, v55, "Failed to run NewTextTranslation test because can't find TranslationListController", v58, 2u);
    swift_slowDealloc();

    goto LABEL_47;
  }
  id v30 = v77;
  uint64_t v31 = *(void **)&v77[v21];
  if (!v31) {
    goto LABEL_34;
  }
  id v32 = [v31 viewWithTag:205];
  if (!v32) {
    goto LABEL_34;
  }
  id v33 = v32;
  self;
  uint64_t v34 = swift_dynamicCastObjCClass();
  if (!v34)
  {

LABEL_34:
    if (qword_1002EE618 != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    sub_100011554(v62, (uint64_t)qword_10030EA50);
    id v49 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v49, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v63, "Failed to run NewTextTranslation test because can't find Translation TextView", v64, 2u);
      swift_slowDealloc();

      goto LABEL_47;
    }

    return 0;
  }
  id v70 = v33;
  uint64_t v68 = v34;
  sub_10018FDE8();
  sub_10022D688(1);
  swift_release();
  id v35 = v72;
  [v72 reloadData];
  [v35 layoutIfNeeded];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v69 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v71 = (void (*)(char *, uint64_t))v74[1];
  v71(v13, v9);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = v35;
  uint64_t v37 = v27;
  id v38 = v73;
  uint64_t v39 = v68;
  v36[3] = v73;
  v36[4] = v39;
  unint64_t v83 = sub_1000117B8;
  uint64_t v84 = v36;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256;
  uint64_t v81 = sub_10008BA1C;
  uint64_t v82 = &unk_1002C99D0;
  uint64_t v40 = _Block_copy(&aBlock);
  uint64_t v74 = v37;
  id v41 = v38;
  id v73 = v70;
  swift_release();
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  uint64_t v42 = v78;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v43 = (void *)v69;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v4, v42);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v5);
  v71(v15, v9);
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  sub_100011554(v44, (uint64_t)qword_10030EA50);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Starting NewTextTranslation test soon", v47, 2u);
    swift_slowDealloc();
  }
  else
  {
  }
  return 1;
}

uint64_t sub_100011038(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1002EE618 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA50);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_bridgeObjectRetain();
    sub_100202FD4(a2, a3, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v9 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v10 = Dictionary.description.getter();
    unint64_t v11 = a3;
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_100202FD4(v10, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a3 = v11;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Running test '%{public}s' with options: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  if (a2 == 0x69486C6C6F726353 && a3 == 0xED000079726F7473
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    char v14 = sub_10000EB7C(a1);
  }
  else if (a2 == 0x61466C6C6F726353 && a3 == 0xEF73657469726F76 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v14 = sub_10000F4E4(a1);
  }
  else if (a2 == 0xD000000000000014 && a3 == 0x800000010025A680 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v14 = sub_10000FBE4(a1);
  }
  else if (a2 == 0xD000000000000012 && a3 == 0x800000010025A6A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    char v14 = sub_100010540(a1);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 136446210;
      swift_bridgeObjectRetain();
      sub_100202FD4(a2, a3, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Test name '%{public}s' doesn't match any known tests; failing",
        v18,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    char v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_100011554(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

unint64_t sub_10001158C()
{
  unint64_t result = qword_1002EEE28;
  if (!qword_1002EEE28)
  {
    sub_10000B0CC(255, (unint64_t *)&qword_1002EEE20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEE28);
  }
  return result;
}

uint64_t sub_1000115FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001160C()
{
  return swift_release();
}

uint64_t sub_100011614()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100011654()
{
  return sub_10000CEC4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_10001165C()
{
  unint64_t result = qword_1002F5710;
  if (!qword_1002F5710)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5710);
  }
  return result;
}

unint64_t sub_1000116B4()
{
  unint64_t result = qword_1002F5720;
  if (!qword_1002F5720)
  {
    sub_100007928(&qword_1002EEE40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F5720);
  }
  return result;
}

uint64_t sub_100011710()
{
  return swift_release();
}

void sub_100011718()
{
  sub_10000D094(*(void *)(v0 + 16));
}

uint64_t sub_100011720()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100011758()
{
  sub_10000D6A4(*(void **)(v0 + 16));
}

uint64_t sub_100011760()
{
  return sub_10000DBB4(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_100011768()
{
  sub_10000E048(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100011770()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000117B8()
{
  return sub_10000E1AC(v0[2], v0[3], v0[4]);
}

void sub_1000117C4()
{
  sub_10000E708(*(void **)(v0 + 16));
}

double sub_10001181C()
{
  sub_100007620(&qword_1002EEED0);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 4;
  *(_OWORD *)(v0 + 16) = xmmword_100248B60;
  *(void *)(v0 + 32) = "oneSelectedWithSender:";
  *(void *)(v0 + 40) = "twoSelectedWithSender:";
  *(void *)(v0 + 48) = "threeSelectedWithSender:";
  *(void *)(v0 + 56) = "fourSelectedWithSender:";
  qword_10030E650 = v0;
  return result;
}

uint64_t sub_100011934(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_unknownObjectRetain();
  id v6 = a1;
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v8 = (void *)Strong;
    sub_100012854(a4);

    id v6 = v8;
  }

  return sub_10000AB68((uint64_t)&v10);
}

id sub_100011AB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HitView();
  return [super dealloc];
}

uint64_t type metadata accessor for HitView()
{
  return self;
}

id sub_100011B18()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_currentAlternatives];
  objc_super v2 = (objc_class *)type metadata accessor for ASRAlternativesBehaviour();
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((void *)v1 + 6) = 0;
  v8.receiver = v0;
  v8.super_class = v2;
  id v3 = [super init];
  uint64_t v4 = self;
  id v5 = v3;
  id v6 = [v4 defaultCenter];
  [v6 addObserver:v5 selector:"menuDidHideWithSender:" name:UIMenuControllerDidHideMenuNotification object:0];

  return v5;
}

id sub_100011C24()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for ASRAlternativesBehaviour();
  return [super dealloc];
}

id sub_100011D80(unint64_t a1, void *a2)
{
  unint64_t v4 = a1;
  CGFloat v5 = *(double *)a1;
  CGFloat v6 = *(double *)(a1 + 8);
  CGFloat v8 = *(double *)(a1 + 16);
  CGFloat v7 = *(double *)(a1 + 24);
  uint64_t v72 = *(void *)(a1 + 32);
  uint64_t v71 = *(void *)(a1 + 40);
  uint64_t v70 = *(void *)(a1 + 48);
  uint64_t v9 = (void *)type metadata accessor for DispatchWorkItemFlags();
  id v10 = (id)*(v9 - 1);
  __chkstk_darwin(v9);
  BOOL v65 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v77 = *(void *)(v12 - 8);
  uint64_t v78 = v12;
  __chkstk_darwin(v12);
  uint64_t v76 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for DispatchTime();
  uint64_t v75 = *(void *)(v79 - 8);
  uint64_t v14 = __chkstk_darwin(v79);
  uint64_t v69 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v74 = (char *)&v58 - v16;
  CGFloat v64 = v5;
  CGFloat v63 = v6;
  uint64_t v73 = *(void *)&v7;
  [a2 frame];
  CGFloat MinX = CGRectGetMinX(v85);
  [a2 frame];
  CGFloat MinY = CGRectGetMinY(v86);
  v87.origin.x = v5;
  v87.origin.y = v6;
  v87.size.width = v8;
  v87.size.height = v7;
  CGRect v88 = CGRectOffset(v87, MinX, MinY);
  uint64_t v19 = [(char *)objc_allocWithZone((Class)type metadata accessor for HitView()) initWithFrame:v88.origin.x, v88.origin.y, v88.size.width, v88.size.height];
  *(void *)&v19[OBJC_IVAR____TtC17SequoiaTranslator7HitView_delegate + 8] = &off_1002C9AD0;
  swift_unknownObjectWeakAssign();
  id v20 = self;
  uint64_t v21 = v19;
  id v22 = [v20 clearColor];
  [v21 setBackgroundColor:v22];

  id v23 = [a2 superview];
  [v23 insertSubview:v21 aboveSubview:a2];

  uint64_t v81 = (void *)type metadata accessor for ASRAlternativesBehaviour();
  aBlock[0] = v2;
  id v24 = v2;
  sub_100012A14();
  sub_10000AB68((uint64_t)aBlock);
  uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView];
  uint64_t v66 = v24;
  *(void *)&v24[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView] = v21;
  uint64_t v67 = v21;

  id v68 = [self sharedMenuController];
  if (qword_1002EE520 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v26 = v9;
    uint64_t v27 = qword_10030E650;
    unint64_t v84 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v9 = *(void **)(qword_10030E650 + 16);
    id v28 = *(void **)(v4 + 32);
    swift_bridgeObjectRetain();
    id result = [v28 alternativeStrings];
    if (!result) {
      goto LABEL_25;
    }
    id v30 = result;
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = *(void *)(v31 + 16);
    id result = (id)swift_bridgeObjectRelease();
    if (v32 >= (uint64_t)v9) {
      uint64_t v33 = (uint64_t)v9;
    }
    else {
      uint64_t v33 = v32;
    }
    if (v33 < 0)
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    uint64_t v62 = v26;
    uint64_t v61 = (void (**)(void, void))v10;
    if (!v33) {
      break;
    }
    double v59 = v8;
    unint64_t v60 = v4;
    uint64_t v34 = 0;
    CGFloat v8 = 0.0;
    while (v33 != *(void *)&v8)
    {
      id result = [v28 alternativeStrings];
      if (!result) {
        goto LABEL_24;
      }
      id v35 = result;
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)&v8 >= *(void *)(v4 + 16)) {
        goto LABEL_20;
      }
      uint64_t v9 = *(void **)(v4 + v34 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(void *)&v8 >= *(void *)(v27 + 16)) {
        goto LABEL_21;
      }
      uint64_t v36 = *(void *)(v27 + 8 * *(void *)&v8 + 32);
      id v10 = objc_allocWithZone((Class)UIMenuItem);
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v38 = [v10 initWithTitle:v37 action:v36];

      uint64_t v9 = v38;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v4 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4 >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++*(void *)&v8;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      v34 += 16;
      if (v33 == *(void *)&v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = v65;
        unint64_t v4 = v60;
        CGFloat v40 = v64;
        CGFloat v41 = v63;
        CGFloat v8 = v59;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    swift_once();
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v65;
  CGFloat v40 = v64;
  CGFloat v41 = v63;
LABEL_18:
  sub_10000B0CC(0, &qword_1002EEEB8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v43 = v68;
  [v68 setMenuItems:isa];

  [v43 setArrowDirection:2];
  [v43 update];
  uint64_t v44 = (CGFloat *)&v66[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_currentAlternatives];
  uint64_t v45 = *(void **)&v66[OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_currentAlternatives + 32];
  *uint64_t v44 = v40;
  v44[1] = v41;
  uint64_t v46 = v73;
  v44[2] = v8;
  *((void *)v44 + 3) = v46;
  uint64_t v47 = v71;
  *((void *)v44 + 4) = v72;
  *((void *)v44 + 5) = v47;
  *((void *)v44 + 6) = v70;
  sub_100013300(v4);

  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v73 = static OS_dispatch_queue.main.getter();
  uint64_t v48 = v69;
  static DispatchTime.now()();
  id v49 = v74;
  + infix(_:_:)();
  uint64_t v75 = *(void *)(v75 + 8);
  ((void (*)(char *, uint64_t))v75)(v48, v79);
  uint64_t v50 = swift_allocObject();
  os_log_type_t v51 = v67;
  *(void *)(v50 + 16) = v67;
  uint64_t v82 = sub_100013364;
  uint64_t v83 = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10008BA1C;
  uint64_t v81 = &unk_1002C9B08;
  uint64_t v52 = _Block_copy(aBlock);
  id v53 = v51;
  swift_release();
  uint64_t v54 = v76;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001165C();
  sub_100007620(&qword_1002EEE40);
  sub_1000116B4();
  os_log_type_t v55 = v39;
  BOOL v56 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v57 = (void *)v73;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v52);

  ((void (**)(char *, void *))v61)[1](v55, v56);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v78);
  return (id)((uint64_t (*)(char *, uint64_t))v75)(v49, v79);
}

void sub_100012668(void *a1)
{
  [a1 becomeFirstResponder];
  id v2 = [self sharedMenuController];
  [a1 bounds];
  [v2 showMenuFromView:a1];
}

uint64_t sub_1000126F8(void *a1)
{
  id v3 = [a1 view];
  if (v3)
  {
    unint64_t v4 = v3;
    self;
    uint64_t v5 = swift_dynamicCastObjCClass();
    if (v5)
    {
      CGFloat v6 = (void *)v5;
      sub_100012E68(a1, v12);
      sub_10001323C((uint64_t)v12, (uint64_t)v13, &qword_1002EEEC0);
      if ((void)v14)
      {
        v16[0] = v13[0];
        v16[1] = v13[1];
        v16[2] = v14;
        uint64_t v17 = v15;
        sub_100011D80((unint64_t)v16, v6);

        sub_100013210((uint64_t)v12);
        return 1;
      }
    }
  }
  uint64_t v8 = OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView);
  if (v9)
  {
    id v10 = v9;
    [v10 removeFromSuperview];
    uint64_t v11 = *(void **)(v1 + v8);
    *(void *)(v1 + v8) = 0;
  }
  return 0;
}

void sub_100012854(unint64_t a1)
{
  id v2 = (void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_currentAlternatives);
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_currentAlternatives + 32);
  if (!v3) {
    return;
  }
  id v5 = v3;
  id v6 = [v5 alternativeStrings];

  if (!v6)
  {
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(void *)(v7 + 16) <= a1)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7 + 16 * a1;
  uint64_t v10 = *(void *)(v8 + 32);
  uint64_t v9 = *(void *)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v2[4]
    && (uint64_t v11 = v2[5],
        uint64_t v12 = v2[6],
        uint64_t v13 = v1 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_delegate,
        swift_unknownObjectWeakLoadStrong()))
  {
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(v10, v9, v11, v12, ObjectType, v14);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_100012A14()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_hitView);
  if (v2)
  {
    id v3 = v2;
    [v3 removeFromSuperview];
    unint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = 0;
  }
  id v5 = self;
  id v6 = [v5 sharedMenuController];
  sub_10000B0CC(0, &qword_1002EEEB8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v6 setMenuItems:isa];

  id v8 = [v5 sharedMenuController];
  [v8 update];
}

uint64_t type metadata accessor for ASRAlternativesBehaviour()
{
  return self;
}

void destroy for TappedAlternatives(uint64_t a1)
{
}

uint64_t initializeWithCopy for TappedAlternatives(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  unint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  id v5 = v4;
  return a1;
}

void *assignWithCopy for TappedAlternatives(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  unint64_t v4 = (void *)a2[4];
  id v5 = (void *)a1[4];
  a1[4] = v4;
  id v6 = v4;

  a1[5] = a2[5];
  a1[6] = a2[6];
  return a1;
}

__n128 initializeWithTake for TappedAlternatives(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TappedAlternatives(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  id v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TappedAlternatives(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TappedAlternatives(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TappedAlternatives()
{
  return &type metadata for TappedAlternatives;
}

uint64_t sub_100012D64()
{
  if (qword_1002EE520 != -1) {
    goto LABEL_18;
  }
  while (1)
  {
    uint64_t v0 = *(void *)(qword_10030E650 + 16);
    if (!v0)
    {
      char v1 = 0;
      return v1 & 1;
    }
    swift_bridgeObjectRetain();
    if (static Selector.== infix(_:_:)()) {
      goto LABEL_4;
    }
    if (v0 == 1) {
      break;
    }
    if (static Selector.== infix(_:_:)())
    {
LABEL_4:
      char v1 = 1;
      goto LABEL_8;
    }
    if (v0 == 2) {
      break;
    }
    uint64_t v3 = 6;
    while (1)
    {
      uint64_t v4 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      char v1 = static Selector.== infix(_:_:)();
      if ((v1 & 1) == 0)
      {
        ++v3;
        if (v4 != v0) {
          continue;
        }
      }
      goto LABEL_8;
    }
    __break(1u);
LABEL_18:
    swift_once();
  }
  char v1 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return v1 & 1;
}

void sub_100012E68(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = [a1 view];
  uint64_t v5 = 0;
  if (!v4) {
    goto LABEL_24;
  }
  id v6 = v4;
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7) {
    goto LABEL_23;
  }
  id v8 = (void *)v7;
  [a1 locationInView:v7];
  id v9 = [v8 closestPositionToPoint:];
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v10 = v9;
  id v11 = [v8 beginningOfDocument];
  int64_t v12 = (int64_t)[v8 offsetFromPosition:v11 toPosition:v10];

  if (v12 < 0) {
    goto LABEL_17;
  }
  id v13 = [v8 attributedText];
  if (v13)
  {
    uint64_t v14 = v13;
    id v15 = [v13 length];

    if (v12 >= (uint64_t)v15) {
      goto LABEL_17;
    }
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    id v16 = [v8 attributedText];
    if (v16)
    {
      uint64_t v17 = v16;
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [v17 attribute:v18 atIndex:v12 effectiveRange:&v37];

      if (v19)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v39, 0, sizeof(v39));
      }
      sub_10001323C((uint64_t)v39, (uint64_t)v40, (uint64_t *)&unk_1002F02C0);
      if (!v41)
      {

        sub_1000132A0((uint64_t)v40);
        goto LABEL_24;
      }
      sub_10000B0CC(0, &qword_1002EEEC8);
      if (swift_dynamicCast())
      {
        id v20 = v36;
        id v21 = [v8 beginningOfDocument];
        uint64_t v22 = v37;
        id v23 = [v8 positionFromPosition:v21 offset:v37];

        if (v23)
        {
          uint64_t v24 = v38;
          id v25 = [v8 positionFromPosition:v23 offset:v38];
          if (v25)
          {
            uint64_t v26 = v25;
            id v27 = [v8 textRangeFromPosition:v23 toPosition:v25];
            if (v27)
            {
              id v28 = v27;
              [v8 firstRectForRange:v27];
              uint64_t v5 = v29;
              uint64_t v31 = v30;
              uint64_t v33 = v32;
              uint64_t v35 = v34;

LABEL_25:
              *a2 = v5;
              a2[1] = v31;
              a2[2] = v33;
              a2[3] = v35;
              a2[4] = v20;
              a2[5] = v22;
              a2[6] = v24;
              return;
            }
          }
          else
          {
            uint64_t v26 = v23;
          }
        }
LABEL_23:

        goto LABEL_24;
      }
LABEL_17:

LABEL_24:
      id v20 = 0;
      uint64_t v22 = 0;
      uint64_t v24 = 0;
      uint64_t v31 = 0;
      uint64_t v33 = 0;
      uint64_t v35 = 0;
      goto LABEL_25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100013210(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001323C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007620(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000132A0(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F02C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100013300(uint64_t a1)
{
  id v2 = *(id *)(a1 + 32);
  return a1;
}

uint64_t sub_10001332C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100013364()
{
  sub_100012668(*(void **)(v0 + 16));
}

uint64_t sub_10001336C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001337C()
{
  return swift_release();
}

uint64_t sub_100013384(uint64_t a1)
{
  return a1;
}

void destroy for AudioDevice(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for AudioDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  id v6 = *(void **)(a2 + 72);
  uint64_t v7 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v6;
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for AudioDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void **)(a2 + 72);
  uint64_t v5 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v4;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 80);
  id v8 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v7;
  id v9 = v7;

  return a1;
}

__n128 initializeWithTake for AudioDevice(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AudioDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);

  uint64_t v7 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for AudioDevice(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioDevice(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioDevice()
{
  return &type metadata for AudioDevice;
}

uint64_t sub_1000136A0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

Swift::Int sub_1000136AC()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  Swift::UInt v2 = *(void *)(v0 + 56);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100013734()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  Swift::UInt v2 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1000137A0()
{
  Swift::UInt v1 = *(void *)(v0 + 48);
  Swift::UInt v2 = *(void *)(v0 + 56);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100013824(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_100013854(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_100013894(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    char v3 = 1;
  }
  else {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_1000138E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

BOOL sub_100013904(void *a1, void *a2)
{
  uint64_t v3 = a1[6];
  uint64_t v2 = a1[7];
  uint64_t v5 = a2[6];
  uint64_t v4 = a2[7];
  if (a1[2] == a2[2] && a1[3] == a2[3])
  {
    if (v3 != v5) {
      return 0;
    }
    return v2 == v4;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  BOOL result = 0;
  if ((v7 & 1) != 0 && v3 == v5) {
    return v2 == v4;
  }
  return result;
}

unint64_t sub_10001398C()
{
  unint64_t result = qword_1002EEED8;
  if (!qword_1002EEED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEED8);
  }
  return result;
}

void *sub_1000139E0()
{
  return &protocol witness table for String;
}

uint64_t getEnumTagSinglePayload for AudioDevice.AudioChannelType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AudioDevice.AudioChannelType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100013B48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioDevice.AudioChannelType()
{
  return &type metadata for AudioDevice.AudioChannelType;
}

unint64_t sub_100013B84()
{
  unint64_t result = qword_1002EEEE0;
  if (!qword_1002EEEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEEE0);
  }
  return result;
}

uint64_t sub_100013BD8()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  sub_100013C88(v0, qword_10030E658);
  sub_100011554(v0, (uint64_t)qword_10030E658);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t *sub_100013C88(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *initializeBufferWithCopyOfBuffer for AudioDeviceTip(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AudioDeviceTip()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AudioDeviceTip(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AudioDeviceTip(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioDeviceTip(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioDeviceTip(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioDeviceTip()
{
  return &type metadata for AudioDeviceTip;
}

uint64_t sub_100013E30(uint64_t a1, uint64_t a2)
{
  id v4 = [self mainBundle];
  v9._object = (void *)0xE000000000000000;
  v5._object = (void *)0x800000010025A7D0;
  v5._uint64_t countAndFlagsBits = 0xD000000000000010;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v9._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v9);

  sub_100007620(&qword_1002EEC80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1002488D0;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_1000149B4();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_10000C350();
  return Text.init<A>(_:)();
}

uint64_t sub_100013F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100007620(&qword_1002EEF10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100007620(&qword_1002EEF18);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014894(&qword_1002EEF20, &qword_1002EEF18);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100007620(&qword_1002EEF28);
  a1[4] = sub_10001471C();
  sub_100014830(a1);
  sub_100014894(&qword_1002EEF48, &qword_1002EEF10);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1000141A4()
{
  return sub_100013E30(*v0, v0[1]);
}

uint64_t sub_1000141D8()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007620(&qword_1002EEF08);
  type metadata accessor for Tips.Rule();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1002488D0;
  if (qword_1002EE528 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_100011554(v0, (uint64_t)qword_10030E658);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000143E8()
{
  uint64_t v0 = sub_100007620(&qword_1002EEEF8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002EEF00);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  id v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  id v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_100014684@<X0>(uint64_t *a1@<X8>)
{
  sub_100014A08();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1000146C8()
{
  unint64_t result = qword_1002EEEF0;
  if (!qword_1002EEEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEEF0);
  }
  return result;
}

unint64_t sub_10001471C()
{
  unint64_t result = qword_1002EEF30;
  if (!qword_1002EEF30)
  {
    sub_100007928(&qword_1002EEF28);
    sub_100014894(&qword_1002EEF38, &qword_1002EEF18);
    sub_1000147BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF30);
  }
  return result;
}

unint64_t sub_1000147BC()
{
  unint64_t result = qword_1002EEF40;
  if (!qword_1002EEF40)
  {
    sub_100007928(&qword_1002EEF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF40);
  }
  return result;
}

uint64_t *sub_100014830(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100014894(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000148D8()
{
  id v0 = [self mainBundle];
  v4._object = (void *)0xE000000000000000;
  v1._object = (void *)0x800000010025A7B0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000012;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_10000C350();
  return Text.init<A>(_:)();
}

unint64_t sub_1000149B4()
{
  unint64_t result = qword_1002EEF50;
  if (!qword_1002EEF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF50);
  }
  return result;
}

unint64_t sub_100014A08()
{
  unint64_t result = qword_1002EEF58;
  if (!qword_1002EEF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF58);
  }
  return result;
}

uint64_t destroy for AudioRoutingButton()
{
  swift_release();

  return swift_release();
}

uint64_t _s17SequoiaTranslator18AudioRoutingButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AudioRoutingButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for AudioRoutingButton(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AudioRoutingButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioRoutingButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioRoutingButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioRoutingButton()
{
  return &type metadata for AudioRoutingButton;
}

uint64_t sub_100014C3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100014C58()
{
  return swift_release();
}

uint64_t sub_100014D00()
{
  LocalizedStringKey.init(stringLiteral:)();

  return Label<>.init(_:systemImage:)();
}

uint64_t sub_100014D80()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_100014D9C()
{
  uint64_t v1 = sub_100007620(&qword_1002EEF60);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  Swift::String v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[1];
  char v7 = *((unsigned char *)v0 + 16);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = v7;
  swift_retain();
  swift_retain();
  sub_100007620(&qword_1002EED40);
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  Button.init(action:label:)();
  sub_100014894(&qword_1002EEF68, &qword_1002EEF60);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_100014F78()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100014FB8()
{
  return sub_100014C58();
}

unint64_t sub_100014FC8()
{
  unint64_t result = qword_1002EEF70;
  if (!qword_1002EEF70)
  {
    sub_100007928(&qword_1002EEF78);
    sub_100014894(&qword_1002EEF68, &qword_1002EEF60);
    sub_100015068();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF70);
  }
  return result;
}

unint64_t sub_100015068()
{
  unint64_t result = qword_1002EEF80;
  if (!qword_1002EEF80)
  {
    type metadata accessor for AccessibilityAttachmentModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EEF80);
  }
  return result;
}

char *sub_1000150C0(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    id v11 = (char *)a2 + v9;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v12)
    {
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v12;
      uint64_t v13 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v13;
      uint64_t v14 = *((void *)v11 + 5);
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *((void *)v10 + 5) = v14;
      *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
      v10[64] = v11[64];
      uint64_t v15 = (void *)*((void *)v11 + 9);
      id v16 = (void *)*((void *)v11 + 10);
      *((void *)v10 + 9) = v15;
      *((void *)v10 + 10) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v17 = v15;
      id v18 = v16;
    }
    else
    {
      long long v19 = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 3) = v19;
      *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
      *((void *)v10 + 10) = *((void *)v11 + 10);
      long long v20 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v20;
    }
    *((void *)v10 + 11) = *((void *)v11 + 11);
    uint64_t v21 = a3[6];
    uint64_t v22 = &a1[v21];
    id v23 = (char *)a2 + v21;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 8);
    swift_retain();
    if (v24)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      uint64_t v25 = *((void *)v23 + 3);
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((void *)v22 + 3) = v25;
      uint64_t v26 = *((void *)v23 + 5);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      *((void *)v22 + 5) = v26;
      *((_OWORD *)v22 + 3) = *((_OWORD *)v23 + 3);
      v22[64] = v23[64];
      id v27 = (void *)*((void *)v23 + 9);
      id v28 = (void *)*((void *)v23 + 10);
      *((void *)v22 + 9) = v27;
      *((void *)v22 + 10) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v29 = v27;
      id v30 = v28;
    }
    else
    {
      long long v31 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v31;
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((void *)v22 + 10) = *((void *)v23 + 10);
      long long v32 = *((_OWORD *)v23 + 1);
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v32;
    }
    *((void *)v22 + 11) = *((void *)v23 + 11);
    uint64_t v33 = a3[7];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = (char *)a2 + v33;
    uint64_t v36 = type metadata accessor for Locale();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_retain();
    v37(v34, v35, v36);
    v37(&a1[a3[8]], (char *)a2 + a3[8], v36);
    uint64_t v38 = a3[9];
    uint64_t v39 = &a1[v38];
    CGFloat v40 = (char *)a2 + v38;
    uint64_t v41 = *((void *)v40 + 1);
    if (v41)
    {
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v41;
      uint64_t v42 = *((void *)v40 + 3);
      *((void *)v39 + 2) = *((void *)v40 + 2);
      *((void *)v39 + 3) = v42;
      uint64_t v43 = *((void *)v40 + 5);
      *((void *)v39 + 4) = *((void *)v40 + 4);
      *((void *)v39 + 5) = v43;
      *((_OWORD *)v39 + 3) = *((_OWORD *)v40 + 3);
      v39[64] = v40[64];
      uint64_t v44 = (void *)*((void *)v40 + 9);
      uint64_t v45 = (void *)*((void *)v40 + 10);
      *((void *)v39 + 9) = v44;
      *((void *)v39 + 10) = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v46 = v44;
      id v47 = v45;
    }
    else
    {
      long long v48 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v48;
      *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
      *((void *)v39 + 10) = *((void *)v40 + 10);
      long long v49 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v49;
    }
    uint64_t v50 = a3[11];
    *(void *)&a1[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    os_log_type_t v51 = &a1[v50];
    uint64_t v52 = (uint64_t *)((char *)a2 + v50);
    uint64_t v53 = *v52;
    swift_bridgeObjectRetain();
    if (v53)
    {
      uint64_t v54 = v52[1];
      *(void *)os_log_type_t v51 = v53;
      *((void *)v51 + 1) = v54;
      swift_retain();
    }
    else
    {
      *(_OWORD *)os_log_type_t v51 = *(_OWORD *)v52;
    }
  }
  return a1;
}

uint64_t sub_100015434(uint64_t a1, int *a2)
{
  sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  if (*(void *)(v5 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v6 = a1 + a2[6];
  if (*(void *)(v6 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v7 = a1 + a2[7];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[8], v8);
  uint64_t v10 = a1 + a2[9];
  if (*(void *)(v10 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[11]))
  {
    return swift_release();
  }
  return result;
}

char *sub_100015618(char *a1, char *a2, int *a3)
{
  sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)&a2[v7 + 8];
  if (v10)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = v10;
    uint64_t v11 = *((void *)v9 + 3);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v11;
    uint64_t v12 = *((void *)v9 + 5);
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *((void *)v8 + 5) = v12;
    *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
    v8[64] = v9[64];
    uint64_t v13 = (void *)*((void *)v9 + 9);
    uint64_t v14 = (void *)*((void *)v9 + 10);
    *((void *)v8 + 9) = v13;
    *((void *)v8 + 10) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v13;
    id v16 = v14;
  }
  else
  {
    long long v17 = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    *((_OWORD *)v8 + 3) = v17;
    *((_OWORD *)v8 + 4) = *((_OWORD *)v9 + 4);
    *((void *)v8 + 10) = *((void *)v9 + 10);
    long long v18 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v18;
  }
  *((void *)v8 + 11) = *((void *)v9 + 11);
  uint64_t v19 = a3[6];
  long long v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *(void *)&a2[v19 + 8];
  swift_retain();
  if (v22)
  {
    *(void *)long long v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    uint64_t v23 = *((void *)v21 + 3);
    *((void *)v20 + 2) = *((void *)v21 + 2);
    *((void *)v20 + 3) = v23;
    uint64_t v24 = *((void *)v21 + 5);
    *((void *)v20 + 4) = *((void *)v21 + 4);
    *((void *)v20 + 5) = v24;
    *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
    v20[64] = v21[64];
    uint64_t v25 = (void *)*((void *)v21 + 9);
    uint64_t v26 = (void *)*((void *)v21 + 10);
    *((void *)v20 + 9) = v25;
    *((void *)v20 + 10) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v27 = v25;
    id v28 = v26;
  }
  else
  {
    long long v29 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v29;
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((void *)v20 + 10) = *((void *)v21 + 10);
    long long v30 = *((_OWORD *)v21 + 1);
    *(_OWORD *)long long v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v30;
  }
  *((void *)v20 + 11) = *((void *)v21 + 11);
  uint64_t v31 = a3[7];
  long long v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = type metadata accessor for Locale();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
  swift_retain();
  v35(v32, v33, v34);
  v35(&a1[a3[8]], &a2[a3[8]], v34);
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = *((void *)v38 + 1);
  if (v39)
  {
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = *((void *)v38 + 3);
    *((void *)v37 + 2) = *((void *)v38 + 2);
    *((void *)v37 + 3) = v40;
    uint64_t v41 = *((void *)v38 + 5);
    *((void *)v37 + 4) = *((void *)v38 + 4);
    *((void *)v37 + 5) = v41;
    *((_OWORD *)v37 + 3) = *((_OWORD *)v38 + 3);
    v37[64] = v38[64];
    uint64_t v42 = (void *)*((void *)v38 + 9);
    uint64_t v43 = (void *)*((void *)v38 + 10);
    *((void *)v37 + 9) = v42;
    *((void *)v37 + 10) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v44 = v42;
    id v45 = v43;
  }
  else
  {
    long long v46 = *((_OWORD *)v38 + 3);
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    *((_OWORD *)v37 + 3) = v46;
    *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
    *((void *)v37 + 10) = *((void *)v38 + 10);
    long long v47 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v47;
  }
  uint64_t v48 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  long long v49 = &a1[v48];
  uint64_t v50 = (uint64_t *)&a2[v48];
  uint64_t v51 = *v50;
  swift_bridgeObjectRetain();
  if (v51)
  {
    uint64_t v52 = v50[1];
    *(void *)long long v49 = v51;
    *((void *)v49 + 1) = v52;
    swift_retain();
  }
  else
  {
    *(_OWORD *)long long v49 = *(_OWORD *)v50;
  }
  return a1;
}

char *sub_10001593C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, &qword_1002EEF88);
    sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t)&a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)&a1[v7 + 8];
  uint64_t v11 = *(void *)&a2[v7 + 8];
  if (v10)
  {
    if (v11)
    {
      *(void *)uint64_t v8 = *(void *)v9;
      *(void *)(v8 + 8) = *((void *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 16) = *((void *)v9 + 2);
      *(void *)(v8 + 24) = *((void *)v9 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 32) = *((void *)v9 + 4);
      *(void *)(v8 + 40) = *((void *)v9 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v8 + 48) = *((void *)v9 + 6);
      *(void *)(v8 + 56) = *((void *)v9 + 7);
      *(unsigned char *)(v8 + 64) = v9[64];
      uint64_t v12 = (void *)*((void *)v9 + 9);
      uint64_t v13 = *(void **)(v8 + 72);
      *(void *)(v8 + 72) = v12;
      id v14 = v12;

      id v15 = (void *)*((void *)v9 + 10);
      id v16 = *(void **)(v8 + 80);
      *(void *)(v8 + 80) = v15;
      id v17 = v15;
    }
    else
    {
      sub_100015FC8(v8);
      long long v22 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *(_OWORD *)(v8 + 16) = v22;
      long long v24 = *((_OWORD *)v9 + 3);
      long long v23 = *((_OWORD *)v9 + 4);
      long long v25 = *((_OWORD *)v9 + 2);
      *(void *)(v8 + 80) = *((void *)v9 + 10);
      *(_OWORD *)(v8 + 48) = v24;
      *(_OWORD *)(v8 + 64) = v23;
      *(_OWORD *)(v8 + 32) = v25;
    }
  }
  else if (v11)
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = *((void *)v9 + 1);
    *(void *)(v8 + 16) = *((void *)v9 + 2);
    *(void *)(v8 + 24) = *((void *)v9 + 3);
    *(void *)(v8 + 32) = *((void *)v9 + 4);
    *(void *)(v8 + 40) = *((void *)v9 + 5);
    *(void *)(v8 + 48) = *((void *)v9 + 6);
    *(void *)(v8 + 56) = *((void *)v9 + 7);
    *(unsigned char *)(v8 + 64) = v9[64];
    long long v18 = (void *)*((void *)v9 + 9);
    *(void *)(v8 + 72) = v18;
    uint64_t v19 = (void *)*((void *)v9 + 10);
    *(void *)(v8 + 80) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = v18;
    id v21 = v19;
  }
  else
  {
    long long v26 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *(_OWORD *)(v8 + 16) = v26;
    long long v27 = *((_OWORD *)v9 + 2);
    long long v28 = *((_OWORD *)v9 + 3);
    long long v29 = *((_OWORD *)v9 + 4);
    *(void *)(v8 + 80) = *((void *)v9 + 10);
    *(_OWORD *)(v8 + 48) = v28;
    *(_OWORD *)(v8 + 64) = v29;
    *(_OWORD *)(v8 + 32) = v27;
  }
  *(void *)(v8 + 88) = *((void *)v9 + 11);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[6];
  uint64_t v31 = (uint64_t)&a1[v30];
  long long v32 = &a2[v30];
  uint64_t v33 = *(void *)&a1[v30 + 8];
  uint64_t v34 = *(void *)&a2[v30 + 8];
  if (v33)
  {
    if (v34)
    {
      *(void *)uint64_t v31 = *(void *)v32;
      *(void *)(v31 + 8) = *((void *)v32 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 16) = *((void *)v32 + 2);
      *(void *)(v31 + 24) = *((void *)v32 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 32) = *((void *)v32 + 4);
      *(void *)(v31 + 40) = *((void *)v32 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v31 + 48) = *((void *)v32 + 6);
      *(void *)(v31 + 56) = *((void *)v32 + 7);
      *(unsigned char *)(v31 + 64) = v32[64];
      uint64_t v35 = (void *)*((void *)v32 + 9);
      uint64_t v36 = *(void **)(v31 + 72);
      *(void *)(v31 + 72) = v35;
      id v37 = v35;

      uint64_t v38 = (void *)*((void *)v32 + 10);
      uint64_t v39 = *(void **)(v31 + 80);
      *(void *)(v31 + 80) = v38;
      id v40 = v38;
    }
    else
    {
      sub_100015FC8(v31);
      long long v45 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *(_OWORD *)(v31 + 16) = v45;
      long long v47 = *((_OWORD *)v32 + 3);
      long long v46 = *((_OWORD *)v32 + 4);
      long long v48 = *((_OWORD *)v32 + 2);
      *(void *)(v31 + 80) = *((void *)v32 + 10);
      *(_OWORD *)(v31 + 48) = v47;
      *(_OWORD *)(v31 + 64) = v46;
      *(_OWORD *)(v31 + 32) = v48;
    }
  }
  else if (v34)
  {
    *(void *)uint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *((void *)v32 + 1);
    *(void *)(v31 + 16) = *((void *)v32 + 2);
    *(void *)(v31 + 24) = *((void *)v32 + 3);
    *(void *)(v31 + 32) = *((void *)v32 + 4);
    *(void *)(v31 + 40) = *((void *)v32 + 5);
    *(void *)(v31 + 48) = *((void *)v32 + 6);
    *(void *)(v31 + 56) = *((void *)v32 + 7);
    *(unsigned char *)(v31 + 64) = v32[64];
    uint64_t v41 = (void *)*((void *)v32 + 9);
    *(void *)(v31 + 72) = v41;
    uint64_t v42 = (void *)*((void *)v32 + 10);
    *(void *)(v31 + 80) = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v43 = v41;
    id v44 = v42;
  }
  else
  {
    long long v49 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v49;
    long long v50 = *((_OWORD *)v32 + 2);
    long long v51 = *((_OWORD *)v32 + 3);
    long long v52 = *((_OWORD *)v32 + 4);
    *(void *)(v31 + 80) = *((void *)v32 + 10);
    *(_OWORD *)(v31 + 48) = v51;
    *(_OWORD *)(v31 + 64) = v52;
    *(_OWORD *)(v31 + 32) = v50;
  }
  *(void *)(v31 + 88) = *((void *)v32 + 11);
  swift_retain();
  swift_release();
  uint64_t v53 = a3[7];
  uint64_t v54 = &a1[v53];
  os_log_type_t v55 = &a2[v53];
  uint64_t v56 = type metadata accessor for Locale();
  id v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 24);
  v57(v54, v55, v56);
  v57(&a1[a3[8]], &a2[a3[8]], v56);
  uint64_t v58 = a3[9];
  uint64_t v59 = (uint64_t)&a1[v58];
  unint64_t v60 = &a2[v58];
  uint64_t v61 = *(void *)&a1[v58 + 8];
  uint64_t v62 = *(void *)&a2[v58 + 8];
  if (v61)
  {
    if (v62)
    {
      *(void *)uint64_t v59 = *(void *)v60;
      *(void *)(v59 + 8) = *((void *)v60 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v59 + 16) = *((void *)v60 + 2);
      *(void *)(v59 + 24) = *((void *)v60 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v59 + 32) = *((void *)v60 + 4);
      *(void *)(v59 + 40) = *((void *)v60 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v59 + 48) = *((void *)v60 + 6);
      *(void *)(v59 + 56) = *((void *)v60 + 7);
      *(unsigned char *)(v59 + 64) = v60[64];
      CGFloat v63 = (void *)*((void *)v60 + 9);
      CGFloat v64 = *(void **)(v59 + 72);
      *(void *)(v59 + 72) = v63;
      id v65 = v63;

      uint64_t v66 = (void *)*((void *)v60 + 10);
      uint64_t v67 = *(void **)(v59 + 80);
      *(void *)(v59 + 80) = v66;
      id v68 = v66;
    }
    else
    {
      sub_100015FC8(v59);
      long long v73 = *((_OWORD *)v60 + 1);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *(_OWORD *)(v59 + 16) = v73;
      long long v75 = *((_OWORD *)v60 + 3);
      long long v74 = *((_OWORD *)v60 + 4);
      long long v76 = *((_OWORD *)v60 + 2);
      *(void *)(v59 + 80) = *((void *)v60 + 10);
      *(_OWORD *)(v59 + 48) = v75;
      *(_OWORD *)(v59 + 64) = v74;
      *(_OWORD *)(v59 + 32) = v76;
    }
  }
  else if (v62)
  {
    *(void *)uint64_t v59 = *(void *)v60;
    *(void *)(v59 + 8) = *((void *)v60 + 1);
    *(void *)(v59 + 16) = *((void *)v60 + 2);
    *(void *)(v59 + 24) = *((void *)v60 + 3);
    *(void *)(v59 + 32) = *((void *)v60 + 4);
    *(void *)(v59 + 40) = *((void *)v60 + 5);
    *(void *)(v59 + 48) = *((void *)v60 + 6);
    *(void *)(v59 + 56) = *((void *)v60 + 7);
    *(unsigned char *)(v59 + 64) = v60[64];
    uint64_t v69 = (void *)*((void *)v60 + 9);
    *(void *)(v59 + 72) = v69;
    uint64_t v70 = (void *)*((void *)v60 + 10);
    *(void *)(v59 + 80) = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v71 = v69;
    id v72 = v70;
  }
  else
  {
    long long v77 = *((_OWORD *)v60 + 1);
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    *(_OWORD *)(v59 + 16) = v77;
    long long v78 = *((_OWORD *)v60 + 2);
    long long v79 = *((_OWORD *)v60 + 3);
    long long v80 = *((_OWORD *)v60 + 4);
    *(void *)(v59 + 80) = *((void *)v60 + 10);
    *(_OWORD *)(v59 + 48) = v79;
    *(_OWORD *)(v59 + 64) = v80;
    *(_OWORD *)(v59 + 32) = v78;
  }
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = a3[11];
  uint64_t v82 = &a1[v81];
  uint64_t v83 = (uint64_t *)&a2[v81];
  uint64_t v84 = *(void *)&a1[v81];
  uint64_t v85 = *v83;
  if (!v84)
  {
    if (v85)
    {
      uint64_t v87 = v83[1];
      *(void *)uint64_t v82 = v85;
      *((void *)v82 + 1) = v87;
      swift_retain();
      return a1;
    }
LABEL_33:
    *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
    return a1;
  }
  if (!v85)
  {
    swift_release();
    goto LABEL_33;
  }
  uint64_t v86 = v83[1];
  *(void *)uint64_t v82 = v85;
  *((void *)v82 + 1) = v86;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100015FC8(uint64_t a1)
{
  return a1;
}

char *sub_10001601C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  long long v12 = *((_OWORD *)v11 + 3);
  *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
  *((_OWORD *)v10 + 3) = v12;
  long long v13 = *((_OWORD *)v11 + 5);
  *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
  *((_OWORD *)v10 + 5) = v13;
  long long v14 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v14;
  id v15 = &a1[v9];
  id v16 = &a2[v9];
  long long v17 = *((_OWORD *)v16 + 3);
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  *((_OWORD *)v15 + 3) = v17;
  long long v18 = *((_OWORD *)v16 + 5);
  *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
  *((_OWORD *)v15 + 5) = v18;
  long long v19 = *((_OWORD *)v16 + 1);
  *(_OWORD *)id v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v19;
  uint64_t v20 = a3[7];
  id v21 = &a1[v20];
  long long v22 = &a2[v20];
  uint64_t v23 = type metadata accessor for Locale();
  long long v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&a1[a3[8]], &a2[a3[8]], v23);
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  long long v27 = &a1[v25];
  long long v28 = &a2[v25];
  *((void *)v27 + 10) = *((void *)v28 + 10);
  long long v29 = *((_OWORD *)v28 + 3);
  *((_OWORD *)v27 + 2) = *((_OWORD *)v28 + 2);
  *((_OWORD *)v27 + 3) = v29;
  *((_OWORD *)v27 + 4) = *((_OWORD *)v28 + 4);
  long long v30 = *((_OWORD *)v28 + 1);
  *(_OWORD *)long long v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v30;
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v31 = a3[11];
  long long v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)v33;
  if (*(void *)v33)
  {
    uint64_t v35 = *((void *)v33 + 1);
    *(void *)long long v32 = v34;
    *((void *)v32 + 1) = v35;
  }
  else
  {
    *(_OWORD *)long long v32 = *(_OWORD *)v33;
  }
  return a1;
}

char *sub_1000161FC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, &qword_1002EEF88);
    uint64_t v6 = sub_100007620(&qword_1002EEF88);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = (uint64_t)&a1[v8];
  uint64_t v10 = &a2[v8];
  if (*(void *)&a1[v8 + 8])
  {
    uint64_t v11 = *((void *)v10 + 1);
    if (v11)
    {
      *(void *)uint64_t v9 = *(void *)v10;
      *(void *)(v9 + 8) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *((void *)v10 + 3);
      *(void *)(v9 + 16) = *((void *)v10 + 2);
      *(void *)(v9 + 24) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *((void *)v10 + 5);
      *(void *)(v9 + 32) = *((void *)v10 + 4);
      *(void *)(v9 + 40) = v13;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v9 + 48) = *((_OWORD *)v10 + 3);
      *(unsigned char *)(v9 + 64) = v10[64];
      long long v14 = *(void **)(v9 + 72);
      *(void *)(v9 + 72) = *((void *)v10 + 9);

      id v15 = *(void **)(v9 + 80);
      *(void *)(v9 + 80) = *((void *)v10 + 10);

      goto LABEL_10;
    }
    sub_100015FC8(v9);
  }
  long long v16 = *((_OWORD *)v10 + 3);
  *(_OWORD *)(v9 + 32) = *((_OWORD *)v10 + 2);
  *(_OWORD *)(v9 + 48) = v16;
  *(_OWORD *)(v9 + 64) = *((_OWORD *)v10 + 4);
  *(void *)(v9 + 80) = *((void *)v10 + 10);
  long long v17 = *((_OWORD *)v10 + 1);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v17;
LABEL_10:
  *(void *)(v9 + 88) = *((void *)v10 + 11);
  swift_release();
  uint64_t v18 = a3[6];
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = &a2[v18];
  if (*(void *)&a1[v18 + 8])
  {
    uint64_t v21 = *((void *)v20 + 1);
    if (v21)
    {
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *((void *)v20 + 3);
      *(void *)(v19 + 16) = *((void *)v20 + 2);
      *(void *)(v19 + 24) = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = *((void *)v20 + 5);
      *(void *)(v19 + 32) = *((void *)v20 + 4);
      *(void *)(v19 + 40) = v23;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v19 + 48) = *((_OWORD *)v20 + 3);
      *(unsigned char *)(v19 + 64) = v20[64];
      long long v24 = *(void **)(v19 + 72);
      *(void *)(v19 + 72) = *((void *)v20 + 9);

      uint64_t v25 = *(void **)(v19 + 80);
      *(void *)(v19 + 80) = *((void *)v20 + 10);

      goto LABEL_15;
    }
    sub_100015FC8(v19);
  }
  long long v26 = *((_OWORD *)v20 + 3);
  *(_OWORD *)(v19 + 32) = *((_OWORD *)v20 + 2);
  *(_OWORD *)(v19 + 48) = v26;
  *(_OWORD *)(v19 + 64) = *((_OWORD *)v20 + 4);
  *(void *)(v19 + 80) = *((void *)v20 + 10);
  long long v27 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(_OWORD *)(v19 + 16) = v27;
LABEL_15:
  *(void *)(v19 + 88) = *((void *)v20 + 11);
  swift_release();
  uint64_t v28 = a3[7];
  long long v29 = &a1[v28];
  long long v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for Locale();
  long long v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40);
  v32(v29, v30, v31);
  v32(&a1[a3[8]], &a2[a3[8]], v31);
  uint64_t v33 = a3[9];
  uint64_t v34 = (uint64_t)&a1[v33];
  uint64_t v35 = &a2[v33];
  if (*(void *)&a1[v33 + 8])
  {
    uint64_t v36 = *((void *)v35 + 1);
    if (v36)
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(void *)(v34 + 8) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *((void *)v35 + 3);
      *(void *)(v34 + 16) = *((void *)v35 + 2);
      *(void *)(v34 + 24) = v37;
      swift_bridgeObjectRelease();
      uint64_t v38 = *((void *)v35 + 5);
      *(void *)(v34 + 32) = *((void *)v35 + 4);
      *(void *)(v34 + 40) = v38;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v34 + 48) = *((_OWORD *)v35 + 3);
      *(unsigned char *)(v34 + 64) = v35[64];
      uint64_t v39 = *(void **)(v34 + 72);
      *(void *)(v34 + 72) = *((void *)v35 + 9);

      id v40 = *(void **)(v34 + 80);
      *(void *)(v34 + 80) = *((void *)v35 + 10);

      goto LABEL_20;
    }
    sub_100015FC8(v34);
  }
  long long v41 = *((_OWORD *)v35 + 3);
  *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
  *(_OWORD *)(v34 + 48) = v41;
  *(_OWORD *)(v34 + 64) = *((_OWORD *)v35 + 4);
  *(void *)(v34 + 80) = *((void *)v35 + 10);
  long long v42 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v42;
LABEL_20:
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[11];
  id v44 = &a1[v43];
  long long v45 = &a2[v43];
  uint64_t v46 = *(void *)&a1[v43];
  uint64_t v47 = *(void *)v45;
  if (!v46)
  {
    if (v47)
    {
      uint64_t v49 = *((void *)v45 + 1);
      *(void *)id v44 = v47;
      *((void *)v44 + 1) = v49;
      return a1;
    }
LABEL_26:
    *(_OWORD *)id v44 = *(_OWORD *)v45;
    return a1;
  }
  if (!v47)
  {
    swift_release();
    goto LABEL_26;
  }
  uint64_t v48 = *((void *)v45 + 1);
  *(void *)id v44 = v47;
  *((void *)v44 + 1) = v48;
  swift_release();
  return a1;
}

uint64_t sub_1000165C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000165D8);
}

uint64_t sub_1000165D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F5660);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 40));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1000166F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100016704);
}

uint64_t sub_100016704(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007620(&qword_1002F5660);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Locale();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AudioRoutingMenu()
{
  uint64_t result = qword_1002EEFE8;
  if (!qword_1002EEFE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100016864()
{
  sub_10001695C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Locale();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10001695C()
{
  if (!qword_1002F56D0)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F56D0);
    }
  }
}

uint64_t sub_1000169B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000169D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v73 = a2;
  uint64_t v3 = type metadata accessor for AudioRoutingMenu();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v70 = v3 - 8;
  uint64_t v74 = v4;
  unint64_t v69 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v76 = (uint64_t)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100007620(&qword_1002EF070);
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002EF060);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v65 = v12;
  uint64_t v66 = v13;
  __chkstk_darwin(v12);
  unint64_t v60 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002EF090);
  uint64_t v67 = *(void *)(v15 - 8);
  uint64_t v68 = v15;
  __chkstk_darwin(v15);
  uint64_t v62 = (uint64_t)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100007620(&qword_1002EF050);
  __chkstk_darwin(v75);
  uint64_t v64 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002EF040);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v71 = v18;
  uint64_t v72 = v19;
  __chkstk_darwin(v18);
  long long v77 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = a1;
  sub_100007620(&qword_1002EF098);
  sub_100014894(&qword_1002EF0A0, &qword_1002EF098);
  Form.init(content:)();
  LocalizedStringKey.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v6);
  uint64_t v21 = sub_100014894(&qword_1002EF078, &qword_1002EF070);
  uint64_t v22 = v60;
  uint64_t v23 = v61;
  View.navigationBarTitle(_:displayMode:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v11, v23);
  uint64_t v24 = v59;
  uint64_t v78 = v59;
  sub_100007620(&qword_1002EF068);
  *(void *)&long long v80 = v23;
  *((void *)&v80 + 1) = v21;
  swift_getOpaqueTypeConformance2();
  sub_100014894(&qword_1002EF080, &qword_1002EF068);
  uint64_t v25 = v62;
  uint64_t v26 = v65;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v22, v26);
  uint64_t v27 = v24;
  uint64_t v28 = v76;
  sub_100019374(v24, v76);
  uint64_t v29 = *(unsigned __int8 *)(v74 + 80);
  uint64_t v65 = ((v29 + 16) & ~v29) + v69;
  uint64_t v30 = (v29 + 16) & ~v29;
  uint64_t v74 = v29 | 7;
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = v30;
  uint64_t v66 = v30;
  sub_1000193DC(v28, v31 + v30);
  uint64_t v34 = v67;
  uint64_t v33 = v68;
  uint64_t v35 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v64, v25, v68);
  uint64_t v36 = (uint64_t (**)())(v35 + *(int *)(v75 + 36));
  *uint64_t v36 = sub_100019440;
  v36[1] = (uint64_t (*)())v31;
  v36[2] = 0;
  v36[3] = 0;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v25, v33);
  uint64_t v37 = v70;
  uint64_t v38 = (long long *)(v27 + *(int *)(v70 + 28));
  long long v39 = v38[1];
  long long v80 = *v38;
  long long v81 = v39;
  long long v40 = v38[3];
  long long v82 = v38[2];
  long long v83 = v40;
  long long v41 = v38[5];
  long long v84 = v38[4];
  long long v85 = v41;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  long long v80 = v86;
  long long v81 = v87;
  long long v82 = v88;
  long long v83 = v89;
  long long v84 = v90;
  *(void *)&long long v85 = v91;
  sub_100019374(v27, v28);
  uint64_t v42 = swift_allocObject();
  sub_1000193DC(v28, v42 + v32);
  uint64_t v68 = sub_100007620(&qword_1002EF048);
  unint64_t v69 = sub_10001920C();
  uint64_t v67 = sub_100019A74(&qword_1002EF088, &qword_1002EF048, (void (*)(void))sub_10001398C);
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1000194BC(v80, *((uint64_t *)&v80 + 1), v81, *((uint64_t *)&v81 + 1), v82, *((uint64_t *)&v82 + 1), v83, *((uint64_t *)&v83 + 1), v84, *((void **)&v84 + 1), (void *)v85);
  sub_10000B070(v35, &qword_1002EF050);
  uint64_t v43 = v27;
  id v44 = (uint64_t *)(v27 + *(int *)(v37 + 44));
  uint64_t v45 = v44[1];
  uint64_t v70 = *v44;
  uint64_t v46 = v44[3];
  uint64_t v63 = v44[2];
  uint64_t v64 = v45;
  uint64_t v47 = v44[4];
  uint64_t v48 = v44[5];
  uint64_t v49 = v44[6];
  uint64_t v62 = v44[7];
  uint64_t v50 = v44[8];
  long long v51 = (void *)v44[9];
  long long v52 = (void *)v44[10];
  *(void *)&long long v80 = v70;
  *((void *)&v80 + 1) = v45;
  *(void *)&long long v81 = v63;
  *((void *)&v81 + 1) = v46;
  *(void *)&long long v82 = v47;
  *((void *)&v82 + 1) = v48;
  *(void *)&long long v83 = v49;
  *((void *)&v83 + 1) = v62;
  *(void *)&long long v84 = v50;
  *((void *)&v84 + 1) = v51;
  *(void *)&long long v85 = v52;
  uint64_t v53 = v76;
  sub_100019374(v43, v76);
  uint64_t v54 = swift_allocObject();
  sub_1000193DC(v53, v54 + v66);
  sub_10001959C(v70, v64, v63, v46, v47, v48, v49, v62, v50, v51, v52);
  *(void *)&long long v86 = v75;
  *((void *)&v86 + 1) = v68;
  *(void *)&long long v87 = v69;
  *((void *)&v87 + 1) = v67;
  swift_getOpaqueTypeConformance2();
  uint64_t v55 = v71;
  uint64_t v56 = v77;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1000194BC(v80, *((uint64_t *)&v80 + 1), v81, *((uint64_t *)&v81 + 1), v82, *((uint64_t *)&v82 + 1), v83, *((uint64_t *)&v83 + 1), v84, *((void **)&v84 + 1), (void *)v85);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v56, v55);
}

uint64_t sub_100017328@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v38 = sub_100007620(&qword_1002EF0F8);
  uint64_t v35 = *(void *)(v38 - 8);
  uint64_t v3 = __chkstk_darwin(v38);
  uint64_t v36 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - v5;
  uint64_t v7 = sub_100007620(&qword_1002EF100);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = v34;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v40 = a1;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v41 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v42 = v14;
  char v43 = v15 & 1;
  uint64_t v44 = v16;
  sub_100007620(&qword_1002EF108);
  sub_100014894(&qword_1002EF110, &qword_1002EF108);
  uint64_t v33 = v13;
  Section<>.init(header:content:)();
  uint64_t v39 = a1;
  sub_100007620(&qword_1002EF118);
  sub_100014894(&qword_1002EF120, &qword_1002EF118);
  uint64_t v17 = v6;
  uint64_t v31 = v6;
  Section<>.init(content:)();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v32 = v11;
  uint64_t v19 = v13;
  uint64_t v20 = v7;
  v18(v11, v19, v7);
  uint64_t v22 = v35;
  uint64_t v21 = v36;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  uint64_t v24 = v17;
  uint64_t v25 = v38;
  v23(v36, v24, v38);
  uint64_t v26 = v37;
  v18(v37, v11, v20);
  uint64_t v27 = sub_100007620(&qword_1002EF128);
  v23(&v26[*(int *)(v27 + 48)], v21, v25);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
  v28(v31, v25);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v34 + 8);
  v29(v33, v20);
  v28(v21, v25);
  return ((uint64_t (*)(char *, uint64_t))v29)(v32, v20);
}

uint64_t sub_1000176D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v90 = a1;
  long long v89 = a2;
  uint64_t v80 = type metadata accessor for MenuOrder();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100007620(&qword_1002EF140);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100007620(&qword_1002EF148);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v74 = (char *)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002EF150);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v88 = (uint64_t)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v83 = (char *)v66 - v8;
  uint64_t v85 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v11 = (char *)v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002EF130);
  uint64_t v91 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  long long v84 = (char *)v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v66 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v66 - v18;
  uint64_t v82 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v81 = v20;
  uint64_t v21 = type metadata accessor for AudioRoutingMenu();
  static Locale.current.getter();
  uint64_t v22 = Locale.sqDisplayName(context:in:)();
  unint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v85);
  if (v24) {
    uint64_t v25 = v22;
  }
  else {
    uint64_t v25 = 0;
  }
  unint64_t v26 = 0xE000000000000000;
  if (v24) {
    unint64_t v26 = v24;
  }
  uint64_t v104 = v25;
  unint64_t v105 = v26;
  sub_10000C350();
  LabeledContent<>.init<A>(_:value:)();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
  uint64_t v82 = (uint64_t)v19;
  uint64_t v85 = v12;
  v27(v19, v17, v12);
  uint64_t v28 = (uint64_t *)(v90 + *(int *)(v21 + 20));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  uint64_t v31 = v28[2];
  uint64_t v32 = v28[3];
  uint64_t v33 = v28[4];
  uint64_t v34 = v28[5];
  uint64_t v36 = v28[6];
  uint64_t v35 = v28[7];
  uint64_t v37 = v28[8];
  uint64_t v38 = (void *)v28[9];
  uint64_t v40 = (void *)v28[10];
  uint64_t v39 = v28[11];
  uint64_t v104 = v29;
  unint64_t v105 = v30;
  uint64_t v106 = v31;
  uint64_t v107 = v32;
  uint64_t v108 = v33;
  uint64_t v109 = v34;
  uint64_t v110 = v36;
  uint64_t v111 = v35;
  uint64_t v81 = v35;
  uint64_t v73 = v37;
  uint64_t v112 = v37;
  v113 = v38;
  uint64_t v72 = v38;
  uint64_t v71 = v40;
  v114 = v40;
  uint64_t v115 = v39;
  uint64_t v70 = v39;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  uint64_t v41 = v93;
  sub_1000194BC(v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102);
  if (v41)
  {
    uint64_t v69 = LocalizedStringKey.init(stringLiteral:)();
    uint64_t v68 = v42;
    v66[1] = v43;
    uint64_t v67 = v44;
    uint64_t v92 = v29;
    uint64_t v93 = v30;
    uint64_t v94 = v31;
    uint64_t v95 = v32;
    uint64_t v96 = v33;
    uint64_t v97 = v34;
    uint64_t v98 = v36;
    uint64_t v99 = v81;
    uint64_t v100 = v73;
    unint64_t v101 = v72;
    v102 = v71;
    uint64_t v103 = v70;
    uint64_t v45 = State.projectedValue.getter();
    __chkstk_darwin(v45);
    sub_100007620(&qword_1002EF048);
    sub_100007620(&qword_1002EF160);
    sub_100019A74(&qword_1002EF168, &qword_1002EF048, (void (*)(void))sub_100019AE0);
    sub_100019A74(&qword_1002EF178, &qword_1002EF160, (void (*)(void))sub_100019B34);
    uint64_t v46 = v75;
    Picker<>.init(_:selection:content:)();
    uint64_t v47 = v78;
    static MenuOrder.fixed.getter();
    sub_100014894(&qword_1002EF1C0, &qword_1002EF140);
    uint64_t v48 = v74;
    uint64_t v49 = v77;
    View.menuOrder(_:)();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v80);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v49);
    uint64_t v50 = v86;
    uint64_t v51 = (uint64_t)v83;
    uint64_t v52 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v83, v48, v87);
    uint64_t v53 = 0;
    uint64_t v54 = v52;
    uint64_t v55 = v50;
  }
  else
  {
    uint64_t v53 = 1;
    uint64_t v54 = v87;
    uint64_t v55 = v86;
    uint64_t v51 = (uint64_t)v83;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v51, v53, 1, v54);
  uint64_t v56 = v91;
  id v57 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
  uint64_t v58 = v84;
  uint64_t v59 = v82;
  uint64_t v60 = v85;
  v57(v84, v82, v85);
  uint64_t v61 = v88;
  sub_100019A04(v51, v88);
  uint64_t v62 = v89;
  v57(v89, (uint64_t)v58, v60);
  uint64_t v63 = sub_100007620(&qword_1002EF158);
  sub_100019A04(v61, (uint64_t)&v62[*(int *)(v63 + 48)]);
  sub_10000B070(v51, &qword_1002EF150);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
  v64(v59, v60);
  sub_10000B070(v61, &qword_1002EF150);
  return ((uint64_t (*)(char *, uint64_t))v64)(v58, v60);
}

uint64_t sub_10001805C()
{
  return ForEach<>.init(_:id:content:)();
}

id sub_100018134@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v18 = a1[7];
  id v19 = (id)a1[6];
  uint64_t v17 = *((unsigned __int8 *)a1 + 64);
  uint64_t v10 = (void *)a1[9];
  uint64_t v9 = (void *)a1[10];
  sub_10000C350();
  swift_bridgeObjectRetain();
  *(void *)a2 = Text.init<A>(_:)();
  *(void *)(a2 + 8) = v12;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v13;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v5;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v19;
  *(void *)(a2 + 88) = v18;
  *(void *)(a2 + 96) = v17;
  *(void *)(a2 + 104) = v10;
  *(void *)(a2 + 112) = v9;
  *(void *)(a2 + 120) = v4;
  *(void *)(a2 + 128) = v3;
  *(void *)(a2 + 136) = v6;
  *(void *)(a2 + 144) = v5;
  *(void *)(a2 + 152) = v8;
  *(void *)(a2 + 160) = v7;
  *(void *)(a2 + 168) = v19;
  *(void *)(a2 + 176) = v18;
  *(void *)(a2 + 184) = v17;
  *(void *)(a2 + 192) = v10;
  *(void *)(a2 + 200) = v9;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v14 = v10;
  id v20 = v9;
  id v15 = v14;

  return v20;
}

uint64_t sub_10001825C@<X0>(char *a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v40 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v3 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EF130);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v43 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v42 = (char *)v38 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (char *)v38 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v38 - v15;
  uint64_t v39 = (char *)v38 - v15;
  uint64_t v17 = LocalizedStringKey.init(stringLiteral:)();
  v38[0] = v18;
  v38[1] = v17;
  type metadata accessor for AudioRoutingMenu();
  static Locale.current.getter();
  uint64_t v19 = Locale.sqDisplayName(context:in:)();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v40);
  if (v21) {
    uint64_t v22 = v19;
  }
  else {
    uint64_t v22 = 0;
  }
  unint64_t v23 = 0xE000000000000000;
  if (v21) {
    unint64_t v23 = v21;
  }
  uint64_t v45 = v22;
  unint64_t v46 = v23;
  sub_10000C350();
  LabeledContent<>.init<A>(_:value:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v14, v4);
  LocalizedStringKey.init(stringLiteral:)();
  id v24 = [self currentDevice];
  id v25 = [v24 name];

  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v28 = v27;

  uint64_t v45 = v26;
  unint64_t v46 = v28;
  uint64_t v29 = v41;
  LabeledContent<>.init<A>(_:value:)();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v31 = v42;
  uint64_t v32 = v39;
  v30(v42, v39, v4);
  uint64_t v33 = v43;
  v30(v43, v29, v4);
  uint64_t v34 = v44;
  v30(v44, v31, v4);
  uint64_t v35 = sub_100007620(&qword_1002EF138);
  v30(&v34[*(int *)(v35 + 48)], v33, v4);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v5 + 8);
  v36(v29, v4);
  v36(v32, v4);
  v36(v33, v4);
  return ((uint64_t (*)(char *, uint64_t))v36)(v31, v4);
}

uint64_t sub_10001868C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_100007620(&qword_1002EF0B0);
  __chkstk_darwin(v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002EF0B8);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_100007620(&qword_1002EF0C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.navigationBarLeading.getter();
  uint64_t v22 = a1;
  sub_100007620(&qword_1002EF0C8);
  sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  uint64_t v21 = a1;
  sub_100007620(&qword_1002EF0D8);
  sub_1000196C0();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v13 = &v4[*(int *)(v19 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v4, v12, v9);
  id v14 = v13;
  uint64_t v15 = v18;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v14, v7, v18);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1000189B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioRoutingMenu();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  LocalizedStringKey.init(stringLiteral:)();
  sub_100019374(a1, (uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  sub_1000193DC((uint64_t)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5);
  return Button<>.init(_:action:)();
}

uint64_t sub_100018AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for AudioRoutingMenu();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v17 = sub_100007620(&qword_1002EF0C8);
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  sub_100019374(a1, (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1000193DC((uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  Button<>.init(_:action:)();
  static Font.body.getter();
  uint64_t v11 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v14 = v17;
  uint64_t v13 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v18, v8, v17);
  uint64_t v15 = (uint64_t *)(v13 + *(int *)(sub_100007620(&qword_1002EF0D8) + 36));
  *uint64_t v15 = KeyPath;
  v15[1] = v11;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v14);
}

uint64_t sub_100018D38()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000FFC58((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100018E04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioRoutingMenu();
  uint64_t v3 = (long long *)(a1 + *(int *)(v2 + 20));
  long long v4 = v3[1];
  long long v24 = *v3;
  long long v25 = v4;
  long long v5 = v3[3];
  long long v26 = v3[2];
  long long v27 = v5;
  long long v6 = v3[5];
  long long v28 = v3[4];
  long long v29 = v6;
  sub_100007620(&qword_1002EF0A8);
  State.wrappedValue.getter();
  uint64_t v7 = v31;
  if (v31)
  {
    uint64_t v8 = v30;
    uint64_t v10 = v32;
    uint64_t v9 = v33;
    uint64_t v11 = v34;
    uint64_t v12 = v35;
    uint64_t v13 = v37;
    uint64_t v22 = v38;
    uint64_t v23 = v36;
    uint64_t v20 = v40;
    uint64_t v21 = v39;
    uint64_t v14 = (uint64_t *)(a1 + *(int *)(v2 + 44));
    uint64_t v15 = *v14;
    uint64_t v16 = (uint64_t (*)(uint64_t))nullsub_1;
    if (*v14)
    {
      uint64_t v17 = v14[1];
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v15;
      *(void *)(v18 + 24) = v17;
      uint64_t v16 = sub_10001965C;
    }
    uint64_t v19 = v16;
    *(void *)&long long v24 = v8;
    *((void *)&v24 + 1) = v7;
    *(void *)&long long v25 = v10;
    *((void *)&v25 + 1) = v9;
    *(void *)&long long v26 = v11;
    *((void *)&v26 + 1) = v12;
    *(void *)&long long v27 = v23;
    *((void *)&v27 + 1) = v13;
    LOBYTE(v28) = v22;
    *((void *)&v28 + 1) = v21;
    *(void *)&long long v29 = v20;
    sub_100019614(v15);
    v19((uint64_t)&v24);
    swift_release();
    sub_1000194BC(v8, v7, v10, v9, v11, v12, v23, v13, v22, v21, v20);
  }
}

uint64_t sub_100018F98(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  long long v2 = *(_OWORD *)(a1 + 48);
  uint64_t v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v5[4] = *(_OWORD *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  return a2(v5);
}

uint64_t sub_100018FEC(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + *(int *)(type metadata accessor for AudioRoutingMenu() + 36));
  uint64_t result = v1[1];
  if (result)
  {
    long long v4 = (void *)v1[9];
    long long v3 = (void *)v1[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v5 = v4;
    id v6 = v3;
    sub_100007620(&qword_1002EF0A8);
    return State.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_1000190CC()
{
  return NavigationStack.init<>(root:)();
}

uint64_t sub_100019204@<X0>(uint64_t a1@<X8>)
{
  return sub_1000169D0(*(void *)(v1 + 16), a1);
}

unint64_t sub_10001920C()
{
  unint64_t result = qword_1002EF058;
  if (!qword_1002EF058)
  {
    sub_100007928(&qword_1002EF050);
    sub_100007928(&qword_1002EF060);
    sub_100007928(&qword_1002EF068);
    sub_100007928(&qword_1002EF070);
    sub_100014894(&qword_1002EF078, &qword_1002EF070);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EF080, &qword_1002EF068);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF058);
  }
  return result;
}

uint64_t sub_100019364@<X0>(char *a1@<X8>)
{
  return sub_100017328(*(void *)(v1 + 16), a1);
}

uint64_t sub_10001936C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001868C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100019374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioRoutingMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000193DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AudioRoutingMenu();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100019440()
{
  return sub_100019538((uint64_t (*)(unint64_t))sub_100018FEC);
}

void sub_10001945C()
{
  uint64_t v1 = *(void *)(type metadata accessor for AudioRoutingMenu() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100018E04(v2);
}

void sub_1000194BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100019538(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for AudioRoutingMenu() - 8);
  return a1(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_10001959C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = a10;
    id v12 = a11;
  }
}

uint64_t sub_100019614(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100019624()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001965C(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *))(v1 + 16);
  long long v3 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v3;
  v6[4] = *(_OWORD *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 80);
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  return v2(v6);
}

uint64_t sub_1000196B0()
{
  return sub_1000189B0(*(void *)(v0 + 16));
}

uint64_t sub_1000196B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100018AF8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000196C0()
{
  unint64_t result = qword_1002EF0E0;
  if (!qword_1002EF0E0)
  {
    sub_100007928(&qword_1002EF0D8);
    sub_100014894(&qword_1002EF0D0, &qword_1002EF0C8);
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF0E0);
  }
  return result;
}

uint64_t sub_100019788()
{
  return sub_100019538((uint64_t (*)(unint64_t))sub_100018D38);
}

uint64_t sub_1000197AC()
{
  uint64_t v1 = (int *)type metadata accessor for AudioRoutingMenu();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_100007620(&qword_1002EEF88);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v5 + v1[5];
  if (*(void *)(v7 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v8 = v5 + v1[6];
  if (*(void *)(v8 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v9 = v5 + v1[7];
  uint64_t v10 = type metadata accessor for Locale();
  id v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  v11(v5 + v1[8], v10);
  uint64_t v12 = v5 + v1[9];
  if (*(void *)(v12 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v5 + v1[11])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000199F4@<X0>(char *a1@<X8>)
{
  return sub_1000176D8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000199FC@<X0>(char *a1@<X8>)
{
  return sub_10001825C(a1);
}

uint64_t sub_100019A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EF150);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100019A6C()
{
  return sub_10001805C();
}

uint64_t sub_100019A74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100019AE0()
{
  unint64_t result = qword_1002EF170;
  if (!qword_1002EF170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF170);
  }
  return result;
}

unint64_t sub_100019B34()
{
  unint64_t result = qword_1002EF180;
  if (!qword_1002EF180)
  {
    sub_100007928(&qword_1002EF188);
    sub_100019BD4();
    sub_100014894(&qword_1002EF1B0, &qword_1002EF1B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF180);
  }
  return result;
}

unint64_t sub_100019BD4()
{
  unint64_t result = qword_1002EF190;
  if (!qword_1002EF190)
  {
    sub_100007928(&qword_1002EF198);
    sub_100014894(&qword_1002EF1A0, &qword_1002EF1A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF190);
  }
  return result;
}

unint64_t sub_100019C74()
{
  unint64_t result = qword_1002EF1D0;
  if (!qword_1002EF1D0)
  {
    sub_100007928(&qword_1002EF1C8);
    sub_100014894(&qword_1002EF1D8, &qword_1002EF1E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF1D0);
  }
  return result;
}

uint64_t sub_100019D0C()
{
  return sub_100014894(&qword_1002EF1E8, (uint64_t *)&unk_1002EF1F0);
}

void sub_100019D48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v52 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v49 - v5;
  uint64_t v7 = (objc_class *)type metadata accessor for BottomToTopLayout();
  v63.receiver = v0;
  v63.super_class = v7;
  id v57 = v7;
  [super prepareLayout];
  uint64_t v8 = &v0[OBJC_IVAR____TtC17SequoiaTranslator17BottomToTopLayout_cachedAttributes];
  swift_beginAccess();
  uint64_t v58 = v8;
  *(void *)uint64_t v8 = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  id v9 = [v0 collectionView];
  if (v9)
  {
    uint64_t v10 = v9;
    [v9 bounds];
    double Height = CGRectGetHeight(v64);
    [v10 adjustedContentInset];
    double v13 = Height - v12;
    [v0 collectionViewContentSize];
    if (v13 - v14 >= 0.0) {
      double v15 = v13 - v14;
    }
    else {
      double v15 = 0.0;
    }
    unint64_t v16 = (unint64_t)[v10 numberOfSections];
    if ((v16 & 0x8000000000000000) == 0)
    {
      unint64_t v17 = v16;
      if (!v16)
      {
LABEL_29:

        return;
      }
      uint64_t v18 = 0;
      uint64_t v55 = (void (**)(uint64_t, char *, uint64_t))(v52 + 16);
      uint64_t v56 = (void (**)(char *, uint64_t))(v52 + 8);
      uint64_t v51 = v10;
      unint64_t v50 = v16;
      while (1)
      {
        if (v18 == v17) {
          goto LABEL_34;
        }
        unint64_t v19 = (unint64_t)[v10 numberOfItemsInSection:v18];
        if ((v19 & 0x8000000000000000) != 0) {
          break;
        }
        unint64_t v20 = v19;
        if (v19)
        {
          uint64_t v21 = 0;
          uint64_t v54 = v18;
          unint64_t v53 = v19;
          while (1)
          {
            if (v20 == v21)
            {
              __break(1u);
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
            IndexPath.init(row:section:)();
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v62.receiver = v1;
            v62.super_class = v57;
            id v23 = [super layoutAttributesForItemAtIndexPath:isa];

            if (v23) {
              break;
            }
            (*v56)(v6, v2);
LABEL_14:
            if (v20 == ++v21) {
              goto LABEL_8;
            }
          }
          long long v24 = v1;
          CGAffineTransformMakeTranslation(&v61, 0.0, v15);
          [v23 setTransform:&v61];
          long long v25 = *v55;
          uint64_t v26 = (uint64_t)v59;
          long long v27 = v6;
          long long v28 = v6;
          uint64_t v29 = v2;
          (*v55)((uint64_t)v59, v28, v2);
          uint64_t v30 = v58;
          swift_beginAccess();
          id v31 = v23;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v60 = *(void **)v30;
          uint64_t v33 = v60;
          *(void *)uint64_t v30 = 0x8000000000000000;
          unint64_t v35 = sub_100203720(v26);
          uint64_t v36 = v33[2];
          BOOL v37 = (v34 & 1) == 0;
          uint64_t v38 = v36 + v37;
          if (__OFADD__(v36, v37)) {
            goto LABEL_32;
          }
          char v39 = v34;
          if (v33[3] >= v38)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              uint64_t v42 = v60;
              if ((v34 & 1) == 0) {
                goto LABEL_26;
              }
            }
            else
            {
              sub_10020657C();
              uint64_t v42 = v60;
              if ((v39 & 1) == 0) {
                goto LABEL_26;
              }
            }
          }
          else
          {
            sub_10020423C(v38, isUniquelyReferenced_nonNull_native);
            unint64_t v40 = sub_100203720((uint64_t)v59);
            if ((v39 & 1) != (v41 & 1)) {
              goto LABEL_37;
            }
            unint64_t v35 = v40;
            uint64_t v42 = v60;
            if ((v39 & 1) == 0)
            {
LABEL_26:
              v42[(v35 >> 6) + 8] |= 1 << v35;
              uint64_t v2 = v29;
              v25(v42[6] + *(void *)(v52 + 72) * v35, v59, v29);
              *(void *)(v42[7] + 8 * v35) = v31;
              uint64_t v45 = v42[2];
              BOOL v46 = __OFADD__(v45, 1);
              uint64_t v47 = v45 + 1;
              if (v46) {
                goto LABEL_33;
              }
              v42[2] = v47;
              goto LABEL_28;
            }
          }
          uint64_t v43 = v42[7];
          uint64_t v44 = 8 * v35;

          *(void *)(v43 + v44) = v31;
          uint64_t v2 = v29;
LABEL_28:
          *(void *)uint64_t v58 = v42;
          swift_bridgeObjectRelease();
          uint64_t v48 = *v56;
          (*v56)(v59, v2);
          swift_endAccess();

          uint64_t v6 = v27;
          v48(v27, v2);
          uint64_t v1 = v24;
          uint64_t v18 = v54;
          unint64_t v20 = v53;
          goto LABEL_14;
        }
LABEL_8:
        ++v18;
        unint64_t v17 = v50;
        uint64_t v10 = v51;
        if (v18 == v50) {
          goto LABEL_29;
        }
      }
LABEL_35:
      __break(1u);
    }
    __break(1u);
LABEL_37:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
}

void sub_10001A28C(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  int64_t v10 = 0;
  uint64_t v12 = a1 + 64;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v11;
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  if ((v14 & v11) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v19 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v19 < v16)
    {
      unint64_t v20 = *(void *)(v12 + 8 * v19);
      ++v10;
      if (v20) {
        goto LABEL_22;
      }
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v12 + 8 * v10);
      if (v20) {
        goto LABEL_22;
      }
      int64_t v10 = v19 + 2;
      if (v19 + 2 >= v16) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v12 + 8 * v10);
      if (v20) {
        goto LABEL_22;
      }
      int64_t v10 = v19 + 3;
      if (v19 + 3 >= v16) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v12 + 8 * v10);
      if (v20)
      {
LABEL_22:
        unint64_t v15 = (v20 - 1) & v20;
        for (unint64_t i = __clz(__rbit64(v20)) + (v10 << 6); ; unint64_t i = v17 | (v10 << 6))
        {
          id v22 = *(id *)(*(void *)(a1 + 56) + 8 * i);
          [v22 frame];
          v24.origin.x = a2;
          v24.origin.y = a3;
          v24.size.width = a4;
          v24.size.height = a5;
          if (CGRectIntersectsRect(v23, v24))
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            if (!v15) {
              goto LABEL_7;
            }
          }
          else
          {

            if (!v15) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v17 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
        }
      }
      int64_t v21 = v19 + 4;
      if (v21 < v16)
      {
        unint64_t v20 = *(void *)(v12 + 8 * v21);
        if (v20)
        {
          int64_t v10 = v21;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v10 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_28;
          }
          if (v10 >= v16) {
            break;
          }
          unint64_t v20 = *(void *)(v12 + 8 * v10);
          ++v21;
          if (v20) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_26:
    swift_release();
    return;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void *sub_10001A54C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator17BottomToTopLayout_cachedAttributes);
  swift_beginAccess();
  if (!*(void *)(*v7 + 16)
    || (swift_bridgeObjectRetain(), sub_100203720(a1), char v9 = v8, swift_bridgeObjectRelease(), (v9 & 1) == 0))
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100011554(v15, (uint64_t)qword_10030E978);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    int64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136446210;
      sub_10001AD78();
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      v22[1] = sub_100202FD4(v19, v20, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "BottomToTopLayout can't find cached attributes for indexPath: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }

    return 0;
  }
  uint64_t v10 = *v7;
  if (!*(void *)(*v7 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100203720(a1);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v13 = *(void **)(*(void *)(v10 + 56) + 8 * v11);
  id v14 = v13;
  swift_bridgeObjectRelease();
  return v13;
}

id sub_10001ACB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BottomToTopLayout();
  return [super dealloc];
}

uint64_t type metadata accessor for BottomToTopLayout()
{
  return self;
}

uint64_t sub_10001AD20()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_10001AD58(uint64_t a1, uint64_t a2)
{
  return sub_1001D1780(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10001AD60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001AD70()
{
  return swift_release();
}

unint64_t sub_10001AD78()
{
  unint64_t result = qword_1002EF290;
  if (!qword_1002EF290)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF290);
  }
  return result;
}

unint64_t sub_10001ADD0()
{
  unint64_t result = qword_1002EF298;
  if (!qword_1002EF298)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002EF298);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for BroadcastPresentation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for BroadcastPresentation()
{
  return swift_release();
}

void *assignWithCopy for BroadcastPresentation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for BroadcastPresentation(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for BroadcastPresentation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BroadcastPresentation(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BroadcastPresentation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BroadcastPresentation()
{
  return &type metadata for BroadcastPresentation;
}

uint64_t sub_10001AF90()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_10001AFAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for ConversationManager();
  sub_10001B294((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
  swift_retain();
  uint64_t v3 = (void *)EnvironmentObject.init()();
  type metadata accessor for ConversationContext(0);
  sub_10001B294(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  EnvironmentObject.init()();
  type metadata accessor for SceneContext();
  sub_10001B294((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  EnvironmentObject.init()();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  static Alignment.center.getter();
  sub_10001C350(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v18, 0.0, 1, 0.0, 1);
  swift_release();

  swift_release();
  swift_release();
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  uint64_t v7 = sub_100007620(&qword_1002EF2A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t v8 = a2 + *(int *)(sub_100007620(&qword_1002EF2B0) + 36);
  long long v9 = v18[11];
  *(_OWORD *)(v8 + 160) = v18[10];
  *(_OWORD *)(v8 + 176) = v9;
  *(_OWORD *)(v8 + 192) = v18[12];
  uint64_t v10 = v19;
  long long v11 = v18[7];
  *(_OWORD *)(v8 + 96) = v18[6];
  *(_OWORD *)(v8 + 112) = v11;
  long long v12 = v18[9];
  *(_OWORD *)(v8 + 128) = v18[8];
  *(_OWORD *)(v8 + 144) = v12;
  long long v13 = v18[3];
  *(_OWORD *)(v8 + 32) = v18[2];
  *(_OWORD *)(v8 + 48) = v13;
  long long v14 = v18[5];
  *(_OWORD *)(v8 + 64) = v18[4];
  *(_OWORD *)(v8 + 80) = v14;
  double result = *(double *)v18;
  long long v16 = v18[1];
  *(_OWORD *)uint64_t v8 = v18[0];
  *(_OWORD *)(v8 + 16) = v16;
  *(void *)(v8 + 208) = v10;
  *(void *)(v8 + 216) = v4;
  *(void *)(v8 + 224) = v6;
  return result;
}

uint64_t sub_10001B270()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

double sub_10001B28C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001AFAC(a1, a2);
}

uint64_t sub_10001B294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001B2E0()
{
  unint64_t result = qword_1002EF2B8;
  if (!qword_1002EF2B8)
  {
    sub_100007928(&qword_1002EF2B0);
    sub_100014894(&qword_1002EF2C0, &qword_1002EF2A8);
    sub_100014894(&qword_1002EF2C8, &qword_1002EF2D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF2B8);
  }
  return result;
}

uint64_t destroy for BroadcastPresenter(uint64_t a1)
{
  swift_release();

  swift_release();

  return swift_release();
}

void *initializeWithCopy for BroadcastPresenter(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BroadcastPresenter(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for BroadcastPresenter(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for BroadcastPresenter(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BroadcastPresenter(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BroadcastPresenter()
{
  return &type metadata for BroadcastPresenter;
}

void *sub_10001B630()
{
  return &protocol witness table for Never;
}

void sub_10001B63C(void *a1)
{
  CGRect v24 = &type metadata for TranslateFeatures;
  unint64_t v3 = sub_10000AB14();
  unint64_t v25 = v3;
  LOBYTE(v23[0]) = 2;
  char v4 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v23);
  if (v4)
  {
    if (*(void *)(v1 + 40))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v5 = v23[0];
      if (v23[0])
      {
        uint64_t v6 = v23[1];
        goto LABEL_8;
      }
      goto LABEL_14;
    }
    type metadata accessor for SceneContext();
    int64_t v21 = (unint64_t *)&unk_1002F97F0;
    id v22 = (void (*)(uint64_t))type metadata accessor for SceneContext;
LABEL_21:
    sub_10001C088(v21, v22);
    EnvironmentObject.error()();
    __break(1u);
LABEL_22:
    type metadata accessor for ConversationManager();
    sub_10001C088((unint64_t *)&unk_1002F97E0, (void (*)(uint64_t))type metadata accessor for ConversationManager);
    swift_unknownObjectRetain();
    EnvironmentObject.error()();
    __break(1u);
    return;
  }
  if (!*(void *)(v1 + 24))
  {
    type metadata accessor for ConversationContext(0);
    int64_t v21 = &qword_1002EF2A0;
    id v22 = (void (*)(uint64_t))type metadata accessor for ConversationContext;
    goto LABEL_21;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v23[0];
  if (v23[0])
  {
    uint64_t v6 = sub_10001C088(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
LABEL_8:
    swift_unknownObjectRetain();
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v8 = swift_allocObject();
    long long v9 = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v8 + 16) = *(_OWORD *)v1;
    *(_OWORD *)(v8 + 32) = v9;
    *(_OWORD *)(v8 + 48) = *(_OWORD *)(v1 + 32);
    *(void *)(v8 + 64) = *(void *)(v1 + 48);
    *(void *)(v8 + 72) = v7;
    CGRect v24 = &type metadata for TranslateFeatures;
    unint64_t v25 = v3;
    LOBYTE(v23[0]) = 2;
    sub_10001BFA4(v1);
    char v10 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v23);
    if (v10)
    {
      sub_10001BFF4(v1, (uint64_t)v26);
      sub_10001BFF4((uint64_t)v26, (uint64_t)v23);
      uint64_t v11 = v23[0];
      if (v23[0])
      {
        type metadata accessor for BroadcastViewModel();
        uint64_t v12 = swift_allocObject();
        uint64_t ObjectType = swift_getObjectType();
        sub_10001C05C((uint64_t)v26);
        swift_unknownObjectRetain();
        swift_retain();
        sub_100021CC4(v5, v11, (uint64_t)sub_10001BF98, v8, v12, ObjectType, v6);
LABEL_13:
        id v15 = objc_allocWithZone((Class)type metadata accessor for BroadcastViewController());
        swift_retain();
        id v16 = sub_10001FF70();
        [a1 presentViewController:v16 animated:1 completion:0];

        swift_release();
        swift_release();
        swift_unknownObjectRelease_n();
        return;
      }
    }
    long long v14 = *(void **)(v1 + 8);
    if (v14)
    {
      type metadata accessor for BroadcastViewModel();
      swift_allocObject();
      swift_unknownObjectRetain();
      swift_retain();
      sub_10002030C(v5, v6, v14, (uint64_t)sub_10001BF98, v8);
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_14:
  if (qword_1002EE5C0 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100011554(v17, (uint64_t)qword_10030E948);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    unint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "There's no translation object to present; early returning",
      v20,
      2u);
    swift_slowDealloc();
  }
}

void sub_10001BB44(uint64_t a1)
{
  if (!*(void *)(a1 + 24))
  {
    type metadata accessor for ConversationContext(0);
    char v4 = &qword_1002EF2A0;
    uint64_t v5 = (void (*)(uint64_t))type metadata accessor for ConversationContext;
LABEL_8:
    sub_10001C088(v4, v5);
    EnvironmentObject.error()();
    __break(1u);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  if (!*(void *)(a1 + 40))
  {
    type metadata accessor for SceneContext();
    char v4 = (unint64_t *)&unk_1002F97F0;
    uint64_t v5 = (void (*)(uint64_t))type metadata accessor for SceneContext;
    goto LABEL_8;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

id sub_10001BCEC()
{
  id v0 = objc_allocWithZone((Class)UIViewController);

  return [v0 initWithNibName:0 bundle:0];
}

void sub_10001BD2C(void *a1)
{
}

uint64_t sub_10001BD7C()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_10001BDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10001C0D8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10001BE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10001C0D8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10001BE80()
{
}

unint64_t sub_10001BEAC()
{
  unint64_t result = qword_1002EF2D8;
  if (!qword_1002EF2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF2D8);
  }
  return result;
}

uint64_t sub_10001BF08()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001BF40()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10001BF98()
{
  sub_10001BB44(v0 + 16);
}

uint64_t sub_10001BFA4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  swift_retain();
  swift_retain();
  id v3 = v2;
  swift_retain();
  return a1;
}

uint64_t sub_10001BFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EF2E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10001C05C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001C088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001C0D8()
{
  unint64_t result = qword_1002EF2F0;
  if (!qword_1002EF2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF2F0);
  }
  return result;
}

uint64_t destroy for BroadcastView()
{
  swift_release();

  return swift_release();
}

void *initializeWithCopy for BroadcastView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for BroadcastView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for BroadcastView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for BroadcastView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for BroadcastView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BroadcastView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BroadcastView()
{
  return &type metadata for BroadcastView;
}

uint64_t sub_10001C334()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10001C350@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v24;
  *(void *)(a9 + 96) = *(void *)(v13 + 96);
  long long v25 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v25;
  long long v26 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v26;
  *(_OWORD *)(a9 + 104) = v28;
  *(_OWORD *)(a9 + 120) = v29;
  *(_OWORD *)(a9 + 136) = v30;
  *(_OWORD *)(a9 + 200) = v34;
  *(_OWORD *)(a9 + 184) = v33;
  *(_OWORD *)(a9 + 168) = v32;
  *(_OWORD *)(a9 + 152) = v31;

  return sub_10001BFA4(v13);
}

double sub_10001C524@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001CAD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4D0, &qword_1002EF4D8).n128_u64[0];
  return result;
}

double sub_10001C580@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4C0, &qword_1002EF4C8).n128_u64[0];
  return result;
}

__n128 sub_10001C5DC@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  os_log_type_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    os_log_type_t v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10000C3A4(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(sub_100007620(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *long long v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_10001C7AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001CAD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF510, &qword_1002EF500).n128_u64[0];
  return result;
}

double sub_10001C808@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF500, &qword_1002EF508).n128_u64[0];
  return result;
}

double sub_10001C864@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF518, &qword_1002EF520).n128_u64[0];
  return result;
}

__n128 sub_10001C8C0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10001FE80(v13, a9);
  long long v24 = (_OWORD *)(a9 + *(int *)(sub_100007620(&qword_1002EF528) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *long long v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

double sub_10001CA78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001CAD4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4F0, &qword_1002EF4F8).n128_u64[0];
  return result;
}

__n128 sub_10001CAD4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  os_log_type_t v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    os_log_type_t v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_100007620(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(sub_100007620(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_10001CCD0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  long long v25 = v13[5];
  a9[4] = v13[4];
  a9[5] = v25;
  long long v26 = v13[1];
  *a9 = *v13;
  a9[1] = v26;
  a9[10] = v32;
  a9[11] = v33;
  a9[12] = v34;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;
  a9[9] = v31;

  return sub_10001FE38((uint64_t)v13);
}

__n128 sub_10001CE90@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    id v22 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

uint64_t sub_10001D01C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  long long v25 = v13[5];
  a9[4] = v13[4];
  a9[5] = v25;
  long long v26 = v13[1];
  *a9 = *v13;
  a9[1] = v26;
  a9[10] = v32;
  a9[11] = v33;
  a9[12] = v34;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;
  a9[9] = v31;

  return sub_10001FDA0((uint64_t)v13);
}

double sub_10001D1DC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4A0, &qword_1002EF4A8).n128_u64[0];
  return result;
}

double sub_10001D238@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4B0, &qword_1002EF4B8).n128_u64[0];
  return result;
}

double sub_10001D294@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_10001C5DC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1002EF4E0, &qword_1002EF4E8).n128_u64[0];
  return result;
}

uint64_t sub_10001D2F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v2 = sub_100007620(&qword_1002EF2F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100007620(&qword_1002EF300);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002EF308);
  uint64_t v8 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  char v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v4 = static Alignment.center.getter();
  v4[1] = v11;
  uint64_t v12 = sub_100007620(&qword_1002EF310);
  sub_10001D554(v1, (uint64_t (**)(uint64_t))((char *)v4 + *(int *)(v12 + 44)));
  uint64_t v13 = static Color.broadcastTintColor.getter();
  char v14 = static Edge.Set.all.getter();
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  sub_10000C3A4((uint64_t)v4, (uint64_t)v7, &qword_1002EF2F8);
  uint64_t v18 = &v7[*(int *)(v5 + 36)];
  *(void *)uint64_t v18 = v13;
  v18[8] = v14;
  *((void *)v18 + 2) = v15;
  *((void *)v18 + 3) = v17;
  sub_10000B070((uint64_t)v4, &qword_1002EF2F8);
  sub_10001F1CC();
  View.statusBar(hidden:)();
  sub_10000B070((uint64_t)v7, &qword_1002EF300);
  uint64_t v20 = v23;
  uint64_t v19 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v24, v10, v23);
  int64_t v21 = (void (**)())(v19 + *(int *)(sub_100007620(&qword_1002EF338) + 36));
  *int64_t v21 = sub_10001F17C;
  v21[1] = 0;
  v21[2] = 0;
  v21[3] = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
}

uint64_t sub_10001D554@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  long long v36 = a2;
  uint64_t v3 = sub_100007620(&qword_1002EF340);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002EF348);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002EF350);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v35 - v14;
  long long v16 = *(_OWORD *)a1;
  long long v37 = *(_OWORD *)(a1 + 16);
  long long v38 = v16;
  uint64_t v17 = swift_allocObject();
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v17 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v17 + 32) = v18;
  *(void *)(v17 + 48) = *(void *)(a1 + 32);
  sub_10001F2D8((uint64_t)&v38);
  sub_10001F2D8((uint64_t)&v37);
  *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v19 = sub_100007620(&qword_1002EF358);
  sub_10001E934((long long *)a1, (uint64_t)&v5[*(int *)(v19 + 44)]);
  uint64_t v20 = static Alignment.bottom.getter();
  sub_10001C5DC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v20, v21, &qword_1002EF340, &qword_1002EF348);
  sub_10000B070((uint64_t)v5, &qword_1002EF340);
  LOBYTE(v5) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_10000C3A4((uint64_t)v8, (uint64_t)v13, &qword_1002EF348);
  long long v30 = &v13[*(int *)(v10 + 44)];
  *long long v30 = (char)v5;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_10000B070((uint64_t)v8, &qword_1002EF348);
  sub_10001323C((uint64_t)v13, (uint64_t)v15, &qword_1002EF350);
  sub_10000C3A4((uint64_t)v15, (uint64_t)v13, &qword_1002EF350);
  long long v31 = v36;
  *long long v36 = sub_10001F2D0;
  v31[1] = (uint64_t (*)(uint64_t))v17;
  long long v32 = v31;
  uint64_t v33 = sub_100007620(&qword_1002EF360);
  sub_10000C3A4((uint64_t)v13, (uint64_t)v32 + *(int *)(v33 + 48), &qword_1002EF350);
  swift_retain();
  sub_10000B070((uint64_t)v15, &qword_1002EF350);
  sub_10000B070((uint64_t)v13, &qword_1002EF350);
  return swift_release();
}

uint64_t sub_10001D860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EF3E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Axis.Set.vertical.getter();
  uint64_t v10 = a2;
  uint64_t v11 = a1;
  sub_100007620(&qword_1002EF3F0);
  sub_10001F8E4(&qword_1002EF3F8, &qword_1002EF3F0, (void (*)(void))sub_10001F884);
  ScrollView.init(_:showsIndicators:content:)();
  long long v12 = *(_OWORD *)(a2 + 16);
  sub_100007620(&qword_1002EF470);
  State.wrappedValue.getter();
  GeometryProxy.size.getter();
  sub_100014894(&qword_1002EF478, &qword_1002EF3E8);
  View.scrollDisabled(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10001DA48@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v92 = a1;
  uint64_t v122 = a3;
  uint64_t v4 = sub_100007620(&qword_1002EF480);
  __chkstk_darwin(v4 - 8);
  v118 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for EnabledTextSelectability();
  uint64_t v113 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v108 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100007620(&qword_1002EF468) - 8;
  __chkstk_darwin(v100);
  uint64_t v99 = (uint64_t *)((char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = type metadata accessor for Locale();
  uint64_t v96 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for LayoutDirection();
  uint64_t v123 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v93 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100007620(&qword_1002EF450);
  __chkstk_darwin(v95);
  long long v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100007620(&qword_1002EF488);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v98 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100007620(&qword_1002EF448) - 8;
  __chkstk_darwin(v103);
  unint64_t v101 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100007620(&qword_1002EF430);
  __chkstk_darwin(v104);
  uint64_t v102 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100007620(&qword_1002EF490);
  uint64_t v114 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  unint64_t v105 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100007620(&qword_1002EF428) - 8;
  __chkstk_darwin(v110);
  uint64_t v109 = (char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100007620(&qword_1002EF418) - 8;
  __chkstk_darwin(v115);
  uint64_t v111 = (uint64_t)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100007620(&qword_1002EF408) - 8;
  __chkstk_darwin(v117);
  uint64_t v91 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100007620(&qword_1002EF3F0);
  __chkstk_darwin(v119);
  uint64_t v120 = (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v134 = *a1;
  uint64_t v21 = *((void *)&v134 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001F72C((uint64_t)&v134);
  sub_10000C350();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  uint64_t v90 = v25;
  char v27 = v26 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = *(void *)(v21 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation + 8);
  uint64_t ObjectType = swift_getObjectType();
  long long v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 48);
  sub_10001F2D8((uint64_t)&v134);
  swift_unknownObjectRetain();
  long long v31 = (void *)v30(ObjectType, v28);
  swift_unknownObjectRelease();
  id v32 = [v31 targetLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v32) = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v9, v94);
  sub_10001F72C((uint64_t)&v134);
  uint64_t v33 = v123;
  long long v34 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if ((v32 & 1) == 0) {
    long long v34 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v35 = v93;
  uint64_t v36 = v97;
  (*(void (**)(char *, void, uint64_t))(v123 + 104))(v93, *v34, v97);
  long long v37 = v99;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))((char *)v99 + *(int *)(v100 + 36), v35, v36);
  *long long v37 = KeyPath;
  sub_10000C3A4((uint64_t)v37, (uint64_t)&v12[*(int *)(v95 + 36)], &qword_1002EF468);
  *(void *)long long v12 = v22;
  *((void *)v12 + 1) = v24;
  v12[16] = v27;
  *((void *)v12 + 3) = v90;
  sub_10001FC74(v22, v24, v27);
  swift_bridgeObjectRetain();
  sub_10000B070((uint64_t)v37, &qword_1002EF468);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v35, v36);
  sub_10001FC84(v22, v24, v27);
  swift_bridgeObjectRelease();
  long long v38 = v108;
  EnabledTextSelectability.init()();
  sub_10001FBA4();
  char v39 = v98;
  uint64_t v40 = v112;
  View.textSelection<A>(_:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v38, v40);
  uint64_t v41 = (uint64_t)v91;
  sub_10000B070((uint64_t)v12, &qword_1002EF450);
  static Font.Weight.bold.getter();
  uint64_t v42 = type metadata accessor for Font.Design();
  uint64_t v43 = (uint64_t)v118;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v118, 1, 1, v42);
  uint64_t v44 = static Font.system(size:weight:design:)();
  sub_10000B070(v43, &qword_1002EF480);
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v106;
  uint64_t v47 = (uint64_t)v101;
  uint64_t v48 = v107;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v101, v39, v107);
  uint64_t v49 = (uint64_t *)(v47 + *(int *)(v103 + 44));
  uint64_t *v49 = v45;
  v49[1] = v44;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v48);
  uint64_t v50 = static Color.white.getter();
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v102;
  sub_10000C3A4(v47, v102, &qword_1002EF448);
  unint64_t v53 = (uint64_t *)(v52 + *(int *)(v104 + 36));
  *unint64_t v53 = v51;
  v53[1] = v50;
  sub_10000B070(v47, &qword_1002EF448);
  long long v124 = v92[1];
  sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  sub_10001FA10();
  uint64_t v54 = v105;
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  sub_10000B070(v52, &qword_1002EF430);
  LOBYTE(v50) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v63 = v114;
  CGRect v64 = v109;
  uint64_t v65 = v54;
  uint64_t v66 = v116;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v109, v54, v116);
  uint64_t v67 = &v64[*(int *)(v110 + 44)];
  uint64_t v68 = (uint64_t)v64;
  *uint64_t v67 = v50;
  *((void *)v67 + 1) = v56;
  *((void *)v67 + 2) = v58;
  *((void *)v67 + 3) = v60;
  *((void *)v67 + 4) = v62;
  v67[40] = 0;
  (*(void (**)(char *, uint64_t))(v63 + 8))(v65, v66);
  LOBYTE(v50) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v77 = (uint64_t)v64;
  uint64_t v78 = v111;
  sub_10000C3A4(v77, v111, &qword_1002EF428);
  uint64_t v79 = v78 + *(int *)(v115 + 44);
  *(unsigned char *)uint64_t v79 = v50;
  *(void *)(v79 + 8) = v70;
  *(void *)(v79 + 16) = v72;
  *(void *)(v79 + 24) = v74;
  *(void *)(v79 + 32) = v76;
  *(unsigned char *)(v79 + 40) = 0;
  sub_10000B070(v68, &qword_1002EF428);
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10000C3A4(v78, v41, &qword_1002EF418);
  uint64_t v80 = (_OWORD *)(v41 + *(int *)(v117 + 44));
  long long v81 = v125;
  *uint64_t v80 = v124;
  v80[1] = v81;
  v80[2] = v126;
  sub_10000B070(v78, &qword_1002EF418);
  GeometryProxy.size.getter();
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v82 = v120;
  sub_10000C3A4(v41, v120, &qword_1002EF408);
  long long v83 = (_OWORD *)(v82 + *(int *)(v119 + 36));
  long long v84 = v132;
  v83[4] = v131;
  v83[5] = v84;
  v83[6] = v133;
  long long v85 = v128;
  *long long v83 = v127;
  v83[1] = v85;
  long long v86 = v130;
  v83[2] = v129;
  v83[3] = v86;
  sub_10000B070(v41, &qword_1002EF408);
  return sub_10001323C(v82, v122, &qword_1002EF3F0);
}

uint64_t sub_10001E820()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10001E844(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutDirection();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.layoutDirection.setter();
}

double sub_10001E90C()
{
  GeometryProxy.size.getter();
  return v0;
}

uint64_t sub_10001E934@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v68 = type metadata accessor for AccessibilityTraits();
  uint64_t v61 = *(void *)(v68 - 8);
  uint64_t v62 = v68 - 8;
  uint64_t v64 = v61;
  __chkstk_darwin(v68 - 8);
  uint64_t v67 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002EF368);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PlayButton();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100007620(&qword_1002EF370);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100007620(&qword_1002EF378);
  uint64_t v9 = __chkstk_darwin(v66);
  uint64_t v60 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v53 - v12;
  __chkstk_darwin(v11);
  uint64_t v65 = (uint64_t)&v53 - v13;
  uint64_t v14 = type metadata accessor for ConversationButton();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002EF380);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002EF388);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v26 = (char *)&v53 - v25;
  long long v71 = *a1;
  swift_retain();
  ConversationButton.init(action:)();
  uint64_t v27 = static Color.broadcastTintColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v17, v14);
  uint64_t v29 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  *uint64_t v29 = KeyPath;
  v29[1] = v27;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_10001F654();
  View.accessibilityIdentifier(_:)();
  sub_10000B070((uint64_t)v20, &qword_1002EF380);
  uint64_t v30 = (uint64_t)v26;
  sub_10001323C((uint64_t)v24, (uint64_t)v26, &qword_1002EF388);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10001F72C((uint64_t)&v71);
  uint64_t v31 = enum case for PlayButton.Size.large(_:);
  uint64_t v32 = type metadata accessor for PlayButton.Size();
  uint64_t v33 = *(void *)(v32 - 8);
  long long v34 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v54, v31, v32);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v32);
  swift_retain();
  uint64_t v35 = v55;
  PlayButton.init(isPlaying:size:action:)();
  uint64_t v36 = static Color.white.getter();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v39 = v58;
  uint64_t v38 = v59;
  uint64_t v40 = (uint64_t)v56;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v56, v35, v59);
  uint64_t v41 = (uint64_t *)(v40 + *(int *)(v57 + 36));
  *uint64_t v41 = v37;
  v41[1] = v36;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v38);
  sub_100007620(&qword_1002EF3B0);
  uint64_t v42 = v64;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_100247140;
  static AccessibilityTraits.playsSound.getter();
  static AccessibilityTraits.startsMediaSession.getter();
  uint64_t v70 = v43;
  sub_10001F834(&qword_1002EF3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_100007620(&qword_1002EF3C0);
  sub_100014894(&qword_1002EF3C8, &qword_1002EF3C0);
  uint64_t v44 = v67;
  uint64_t v45 = v68;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10001F764();
  uint64_t v46 = (uint64_t)v60;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v45);
  sub_10000B070(v40, &qword_1002EF370);
  uint64_t v47 = (uint64_t)v63;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_10000B070(v46, &qword_1002EF378);
  uint64_t v48 = v65;
  sub_10001323C(v47, v65, &qword_1002EF378);
  sub_10000C3A4(v30, (uint64_t)v24, &qword_1002EF388);
  sub_10000C3A4(v48, v47, &qword_1002EF378);
  uint64_t v49 = v69;
  sub_10000C3A4((uint64_t)v24, v69, &qword_1002EF388);
  uint64_t v50 = sub_100007620(&qword_1002EF3E0);
  uint64_t v51 = v49 + *(int *)(v50 + 48);
  *(void *)uint64_t v51 = 0;
  *(unsigned char *)(v51 + 8) = 1;
  sub_10000C3A4(v47, v49 + *(int *)(v50 + 64), &qword_1002EF378);
  sub_10000B070(v48, &qword_1002EF378);
  sub_10000B070(v30, &qword_1002EF388);
  sub_10000B070(v47, &qword_1002EF378);
  return sub_10000B070((uint64_t)v24, &qword_1002EF388);
}

void sub_10001F17C()
{
}

uint64_t sub_10001F190@<X0>(uint64_t a1@<X8>)
{
  return sub_10001D2F0(a1);
}

unint64_t sub_10001F1CC()
{
  unint64_t result = qword_1002EF318;
  if (!qword_1002EF318)
  {
    sub_100007928(&qword_1002EF300);
    sub_100014894(&qword_1002EF320, &qword_1002EF2F8);
    sub_100014894(&qword_1002EF328, &qword_1002EF330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF318);
  }
  return result;
}

uint64_t sub_10001F290()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10001F2D0(uint64_t a1)
{
  return sub_10001D860(a1, v1 + 16);
}

uint64_t sub_10001F2D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10001F304()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_dismissHandler);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10001F354@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10001F3D4()
{
  return static Published.subscript.setter();
}

uint64_t sub_10001F458@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10001F4D8()
{
  return static Published.subscript.setter();
}

uint64_t sub_10001F54C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001F578()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_10001F5A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001F5D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accentColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001F5FC()
{
  return EnvironmentValues.accentColor.setter();
}

uint64_t sub_10001F628()
{
  return EnvironmentValues.accentColor.setter();
}

unint64_t sub_10001F654()
{
  unint64_t result = qword_1002EF390;
  if (!qword_1002EF390)
  {
    sub_100007928(&qword_1002EF380);
    sub_10001F834(&qword_1002EF398, (void (*)(uint64_t))&type metadata accessor for ConversationButton);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF390);
  }
  return result;
}

uint64_t sub_10001F72C(uint64_t a1)
{
  return a1;
}

unint64_t sub_10001F764()
{
  unint64_t result = qword_1002EF3D0;
  if (!qword_1002EF3D0)
  {
    sub_100007928(&qword_1002EF370);
    sub_10001F834(&qword_1002EF3D8, (void (*)(uint64_t))&type metadata accessor for PlayButton);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF3D0);
  }
  return result;
}

uint64_t sub_10001F834(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001F87C@<X0>(uint64_t a1@<X8>)
{
  return sub_10001DA48(*(_OWORD **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10001F884()
{
  return sub_10001F8E4(&qword_1002EF400, &qword_1002EF408, (void (*)(void))sub_10001F8B4);
}

uint64_t sub_10001F8B4()
{
  return sub_10001F8E4(&qword_1002EF410, &qword_1002EF418, (void (*)(void))sub_10001F960);
}

uint64_t sub_10001F8E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001F960()
{
  unint64_t result = qword_1002EF420;
  if (!qword_1002EF420)
  {
    sub_100007928(&qword_1002EF428);
    sub_100007928(&qword_1002EF430);
    sub_10001FA10();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF420);
  }
  return result;
}

unint64_t sub_10001FA10()
{
  unint64_t result = qword_1002EF438;
  if (!qword_1002EF438)
  {
    sub_100007928(&qword_1002EF430);
    sub_10001FAB0();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF438);
  }
  return result;
}

unint64_t sub_10001FAB0()
{
  unint64_t result = qword_1002EF440;
  if (!qword_1002EF440)
  {
    sub_100007928(&qword_1002EF448);
    sub_100007928(&qword_1002EF450);
    type metadata accessor for EnabledTextSelectability();
    sub_10001FBA4();
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF440);
  }
  return result;
}

unint64_t sub_10001FBA4()
{
  unint64_t result = qword_1002EF458;
  if (!qword_1002EF458)
  {
    sub_100007928(&qword_1002EF450);
    sub_100014894(&qword_1002EF460, &qword_1002EF468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF458);
  }
  return result;
}

uint64_t sub_10001FC4C()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_10001FC74(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_10001FC84(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10001FC94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10001FCC0()
{
  return EnvironmentValues.font.setter();
}

unint64_t sub_10001FCF0()
{
  unint64_t result = qword_1002EF498;
  if (!qword_1002EF498)
  {
    sub_100007928(&qword_1002EF338);
    sub_100007928(&qword_1002EF300);
    sub_10001F1CC();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF498);
  }
  return result;
}

uint64_t sub_10001FDA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001FC74(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10001FE38(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  swift_retain();
  id v3 = v2;
  swift_retain();
  return a1;
}

uint64_t sub_10001FE80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranslateText();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BroadcastViewController()
{
  uint64_t result = qword_1002EF530;
  if (!qword_1002EF530) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10001FF30()
{
  return swift_initClassMetadata2();
}

id sub_10001FF70()
{
  type metadata accessor for BroadcastViewModel();
  sub_1000201CC();
  swift_retain();
  uint64_t v0 = ObservedObject.init(wrappedValue:)();
  uint64_t v2 = v1;
  State.init(wrappedValue:)();
  id v3 = (id)UIHostingController.init(rootView:)();
  [v3 setModalPresentationStyle:0 v0, v2, v5, v6, 0x404E000000000000, 0];
  [v3 setModalTransitionStyle:2];

  swift_release();
  return v3;
}

void sub_100020044()
{
}

uint64_t sub_1000200A0()
{
  return 1;
}

uint64_t sub_1000200A8(void *a1)
{
  uint64_t v2 = self;
  id v3 = a1;
  id v4 = [v2 currentDevice];
  id v5 = [v4 userInterfaceIdiom];

  if (v5 == (id)1) {
    return 30;
  }
  else {
    return 24;
  }
}

id sub_10002012C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BroadcastViewController();
  [super dealloc];
}

void sub_100020164()
{
}

void sub_100020194()
{
}

uint64_t sub_1000201C4()
{
  return type metadata accessor for BroadcastViewController();
}

unint64_t sub_1000201CC()
{
  unint64_t result = qword_1002EF580;
  if (!qword_1002EF580)
  {
    type metadata accessor for BroadcastViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EF580);
  }
  return result;
}

uint64_t sub_100020224()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100020298()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10002030C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v50 = a5;
  uint64_t v51 = a1;
  uint64_t v10 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EF7B8);
  uint64_t v45 = *(void *)(v13 - 8);
  uint64_t v46 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002EF7C0);
  uint64_t v48 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  __chkstk_darwin(v16);
  uint64_t v47 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel__isPlaying;
  LOBYTE(v54) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v22, v21, v18);
  *(void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_ttsManager) = 0;
  uint64_t v23 = OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_conversationManager;
  *(void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_conversationManager) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v24 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v24 = &_swiftEmptySetSingleton;
  }
  uint64_t v26 = v50;
  uint64_t v25 = v51;
  v44[1] = v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_observers;
  *(void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_observers) = v24;
  uint64_t v27 = (void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation);
  *uint64_t v27 = v25;
  v27[1] = a2;
  uint64_t v28 = (void *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_dismissHandler);
  *uint64_t v28 = a4;
  v28[1] = v26;
  uint64_t v29 = *(void **)(v6 + v23);
  *(void *)(v6 + v23) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  v44[0] = a3;

  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(ObjectType, a2);
  Swift::Int v31 = static String.TRANSLATION_LIMIT.getter();
  Swift::tuple_Bool_String v55 = String.truncated(limit:)(v31);
  uint64_t countAndFlagsBits = v55._1._countAndFlagsBits;
  object = v55._1._object;
  if (v55._0)
  {
    if (qword_1002EE5C0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_100011554(v34, (uint64_t)qword_10030E948);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Warning: Attempted to display text that was too long; only displaying a truncated version",
        v37,
        2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v52 = countAndFlagsBits;
  uint64_t v53 = object;
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v38 = (void *)v44[0];
  swift_beginAccess();
  sub_100007620(&qword_1002EF7C8);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100022324();
  id v54 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 1, 1, v39);
  sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  sub_100022364();
  uint64_t v40 = v46;
  uint64_t v41 = v47;
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v12, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v40);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002EF7D8, &qword_1002EF7C0);
  uint64_t v42 = v49;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v42);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  return v6;
}

uint64_t sub_100020964(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation + 8);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(ObjectType, v5);
      uint64_t v9 = v8;
      swift_unknownObjectRelease();
      if (v1)
      {
        if (v7 != v2 || v1 != v9) {
          _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

void sub_100020AC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[3] = (uint64_t)&type metadata for TranslateFeatures;
  v29[4] = sub_10000AB14();
  LOBYTE(v29[0]) = 2;
  char v5 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v29);
  if (v5)
  {
    uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_ttsManager);
    if (v6)
    {
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      v8[4] = v6;
      v8[5] = v1;
      swift_retain();
      swift_retain();
      sub_100056780((uint64_t)v4, (uint64_t)&unk_1002EF7A8, (uint64_t)v8);
      swift_release();
    }
    else
    {
      if (qword_1002EE658 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100011554(v13, (uint64_t)qword_10030EB10);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Can't toggle TTS because there's no TTSManager", v16, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    type metadata accessor for PersistedTranslation();
    uint64_t v9 = swift_dynamicCastClass();
    if (v9)
    {
      uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_conversationManager);
      if (v10)
      {
        uint64_t v11 = (void *)v9;
        type metadata accessor for TTSPlaybackViewModel();
        swift_allocObject();
        id v12 = v10;
        swift_unknownObjectRetain();
        sub_1002301BC(v12);
        sub_1002306F0(v11, 0);
        swift_unknownObjectRelease();

        swift_release();
      }
      else
      {
        uint64_t v23 = qword_1002EE5C0;
        swift_unknownObjectRetain();
        if (v23 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_100011554(v24, (uint64_t)qword_10030E948);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "Can't toggle TTS because there's no ConversationManager", v27, 2u);
          swift_slowDealloc();
        }

        swift_unknownObjectRelease();
      }
    }
    else
    {
      if (qword_1002EE5C0 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100011554(v17, (uint64_t)qword_10030E948);
      swift_retain_n();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        v29[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 136446210;
        swift_getObjectType();
        uint64_t v21 = _typeName(_:qualified:)();
        uint64_t v28 = sub_100202FD4(v21, v22, v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
  }
}

uint64_t sub_100020FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for UUID();
  _OWORD v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F33E0);
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  return _swift_task_switch(sub_1000210AC, 0, 0);
}

uint64_t sub_1000210AC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation;
  v0[10] = OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation;
  uint64_t v3 = (uint64_t *)(v1 + v2);
  uint64_t v4 = *v3;
  v0[11] = *v3;
  uint64_t v5 = v3[1];
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  void *v6 = v0;
  v6[1] = sub_100021190;
  return sub_100231610(v4, v5, 0, 0, 0, 0, 1, 0);
}

uint64_t sub_100021190()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1000214E8;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1000212AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000212AC()
{
  uint64_t v1 = v0[4] + v0[10];
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 128);
  swift_unknownObjectRetain();
  v4(ObjectType, v2);
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v6 = swift_getObjectType();
  uint64_t v7 = *(double (**)(uint64_t, uint64_t))(v5 + 96);
  swift_unknownObjectRetain();
  double v8 = v7(v6, v5);
  swift_unknownObjectRelease();
  uint64_t v9 = 2;
  uint64_t v10 = 3;
  uint64_t v11 = 3;
  if (v8 == 1.25) {
    uint64_t v11 = 4;
  }
  if (v8 != 1.0) {
    uint64_t v10 = v11;
  }
  if (v8 != 0.75) {
    uint64_t v9 = v10;
  }
  if (v8 == 0.5) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = v9;
  }
  uint64_t v13 = v0[8];
  uint64_t v14 = v0[5];
  uint64_t v15 = v0[6];
  sub_100021C4C(v0[9], v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10000B070(v0[8], (uint64_t *)&unk_1002F33E0);
  }
  else
  {
    uint64_t v17 = v0[6];
    uint64_t v16 = v0[7];
    uint64_t v18 = v0[5];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v16, v0[8], v18);
    os_log_type_t v19 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v19 translationTTSPlayedWithInvocationId:isa sourceOrTargetLanguage:2 isAutoplayTranslation:0 ttsPlaybackSpeed:v12 audioChannel:1];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  sub_10000B070(v0[9], (uint64_t *)&unk_1002F33E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1000214E8()
{
  swift_unknownObjectRelease();
  if (qword_1002EE658 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EB10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Exception while toggling TTS: %@", v4, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100021710()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel__isPlaying;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002FCB50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel__displayText;
  uint64_t v4 = sub_100007620(&qword_1002EF7B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100021850()
{
  return type metadata accessor for BroadcastViewModel();
}

uint64_t type metadata accessor for BroadcastViewModel()
{
  uint64_t result = qword_1002EF5E8;
  if (!qword_1002EF5E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000218A4()
{
  sub_1000219BC(319, (unint64_t *)&qword_1002F9EF0);
  if (v0 <= 0x3F)
  {
    sub_1000219BC(319, (unint64_t *)&qword_1002EF5F8);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000219BC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for Published();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void *sub_100021A04()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_100021A10@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for BroadcastViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100021A50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100021A98(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  double v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100021B58;
  return sub_100020FAC(a1, v4, v5, v7, v6);
}

uint64_t sub_100021B58()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100021C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F33E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100021CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v41[0] = a6;
  uint64_t v46 = a4;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v10 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EF7B8);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002EF7C0);
  uint64_t v44 = *(void *)(v16 - 8);
  uint64_t v45 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel__isPlaying;
  LOBYTE(v51) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v23, v22, v19);
  uint64_t v24 = OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_ttsManager;
  *(void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_ttsManager) = 0;
  *(void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_conversationManager) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v25 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v25 = &_swiftEmptySetSingleton;
  }
  uint64_t v26 = v46;
  uint64_t v27 = v47;
  v41[1] = a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_observers;
  *(void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_observers) = v25;
  uint64_t v28 = (void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_translation);
  *uint64_t v28 = v27;
  v28[1] = a7;
  uint64_t v29 = (void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator18BroadcastViewModel_dismissHandler);
  *uint64_t v29 = a3;
  v29[1] = v26;
  *(void *)(a5 + v24) = v48;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  (*(void (**)(void, uint64_t))(a7 + 72))(v41[0], a7);
  Swift::Int v30 = static String.TRANSLATION_LIMIT.getter();
  Swift::tuple_Bool_String v52 = String.truncated(limit:)(v30);
  uint64_t countAndFlagsBits = v52._1._countAndFlagsBits;
  object = v52._1._object;
  if (v52._0)
  {
    if (qword_1002EE5C0 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100011554(v33, (uint64_t)qword_10030E948);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Warning: Attempted to display text that was too long; only displaying a truncated version",
        v36,
        2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v49 = countAndFlagsBits;
  uint64_t v50 = object;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  sub_100007620(&qword_1002EF7C8);
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100022324();
  id v51 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v37 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v12, 1, 1, v37);
  sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  sub_100022364();
  uint64_t v38 = v43;
  Publisher.receive<A>(on:options:)();
  sub_10000B070((uint64_t)v12, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v38);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002EF7D8, &qword_1002EF7C0);
  uint64_t v39 = v45;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v39);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return a5;
}

unint64_t sub_100022324()
{
  unint64_t result = qword_1002EEE30;
  if (!qword_1002EEE30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002EEE30);
  }
  return result;
}

unint64_t sub_100022364()
{
  unint64_t result = qword_1002F9840;
  if (!qword_1002F9840)
  {
    sub_100022324();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9840);
  }
  return result;
}

uint64_t sub_1000223BC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000223F4(uint64_t *a1)
{
  return sub_100020964(a1);
}

BOOL sub_100022418(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *sub_100022430@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_100022450(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t *sub_10002245C@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_100022474()
{
  return sub_10002249C();
}

uint64_t sub_100022488()
{
  return sub_10002249C();
}

uint64_t sub_10002249C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100022508()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100022580()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__sceneTypeSelection;
  uint64_t v2 = sub_100007620(&qword_1002EFE58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__presentationTypeSelection;
  uint64_t v4 = sub_100007620(&qword_1002EFE60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__planeDetectionSelection;
  uint64_t v6 = sub_100007620(&qword_1002EFE68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__translationEnabled;
  uint64_t v8 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__groupingEnabled, v8);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__usesAlternateLineGrouping, v8);
  uint64_t v10 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__textRecognitionDefaultFrequency;
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F3470);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__textRecognitionInfrequentFrequency, v11);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__pauseOnLowStability, v8);
  uint64_t v13 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__staticImage;
  uint64_t v14 = sub_100007620(&qword_1002EFE70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__isShareSheetPresented, v8);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__showRegionAdjustmentView, v8);
  v9(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__showBoundingBox, v8);
  uint64_t v15 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__staticInteractionSelection;
  uint64_t v16 = sub_100007620(&qword_1002EFE78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__currentHeight;
  uint64_t v18 = sub_100007620(&qword_1002EFE80);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  v19(v17, v18);
  v19(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__currentWidth, v18);
  uint64_t v20 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__regionOfInterest;
  uint64_t v21 = sub_100007620(&qword_1002EFE88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  return v0;
}

uint64_t sub_10002292C()
{
  sub_100022580();

  return swift_deallocClassInstance();
}

uint64_t sub_100022984()
{
  return type metadata accessor for CameraConfiguration(0);
}

uint64_t type metadata accessor for CameraConfiguration(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002EF890);
}

void sub_1000229AC()
{
  sub_1000219BC(319, &qword_1002EF8A0);
  if (v0 <= 0x3F)
  {
    sub_1000219BC(319, &qword_1002EF8A8);
    if (v1 <= 0x3F)
    {
      sub_1000219BC(319, &qword_1002EF8B0);
      if (v2 <= 0x3F)
      {
        sub_1000219BC(319, (unint64_t *)&qword_1002F9EF0);
        if (v3 <= 0x3F)
        {
          sub_1000219BC(319, &qword_1002EF8B8);
          if (v4 <= 0x3F)
          {
            sub_100022CC4(319, &qword_1002EF8C0, &qword_1002EF8C8);
            if (v5 <= 0x3F)
            {
              sub_1000219BC(319, &qword_1002EF8D0);
              if (v6 <= 0x3F)
              {
                sub_1000219BC(319, &qword_1002EF8D8);
                if (v7 <= 0x3F)
                {
                  sub_100022CC4(319, &qword_1002EF8E0, (uint64_t *)&unk_1002EF8E8);
                  if (v8 <= 0x3F) {
                    swift_updateClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100022CC4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100007928(a3);
    unint64_t v4 = type metadata accessor for Published();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for CameraConfiguration.StaticInteraction()
{
  return &type metadata for CameraConfiguration.StaticInteraction;
}

char *sub_100022D2C(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    *((void *)a1 + 1) = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    unint64_t v7 = &a1[v6];
    unint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v4;
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v13 = sub_100007620(&qword_1002EFD90);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

uint64_t sub_100022EB0(id *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  unint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    unint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_100022F88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v6 = *(int *)(a3 + 24);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  id v12 = v5;
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v13 = sub_100007620(&qword_1002EFD90);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1000230B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  unint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100007620(&qword_1002EFD90);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

void *sub_10002325C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_100007620(&qword_1002EFD90);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_100023370(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100007620(&qword_1002EFD90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100023508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10002351C);
}

uint64_t sub_10002351C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002EFD90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000235D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000235E4);
}

uint64_t sub_1000235E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002EFD90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CameraConfiguration.StaticImage(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002EFDF0);
}

uint64_t sub_1000236B0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000236E8()
{
  sub_10002378C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10002378C()
{
  if (!qword_1002EFE00)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002EFE00);
    }
  }
}

uint64_t getEnumTagSinglePayload for CameraConfiguration.PlaneDetection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CameraConfiguration.PlaneDetection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100023940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraConfiguration.PlaneDetection()
{
  return &type metadata for CameraConfiguration.PlaneDetection;
}

unsigned char *sub_100023978(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CameraConfiguration.PresentationType()
{
  return &type metadata for CameraConfiguration.PresentationType;
}

uint64_t getEnumTagSinglePayload for TTSManager.PlaybackSide(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17SequoiaTranslator19CameraConfigurationC9SceneTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100023AF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraConfiguration.SceneType()
{
  return &type metadata for CameraConfiguration.SceneType;
}

unint64_t sub_100023B2C()
{
  unint64_t result = qword_1002EFE38;
  if (!qword_1002EFE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFE38);
  }
  return result;
}

unint64_t sub_100023B84()
{
  unint64_t result = qword_1002EFE40;
  if (!qword_1002EFE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFE40);
  }
  return result;
}

unint64_t sub_100023BDC()
{
  unint64_t result = qword_1002EFE48;
  if (!qword_1002EFE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFE48);
  }
  return result;
}

unint64_t sub_100023C34()
{
  unint64_t result = qword_1002EFE50;
  if (!qword_1002EFE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFE50);
  }
  return result;
}

uint64_t sub_100023C88()
{
  uint64_t v1 = sub_100007620(&qword_1002EFE88);
  uint64_t v76 = *(void *)(v1 - 8);
  uint64_t v77 = v1;
  __chkstk_darwin(v1);
  uint64_t v75 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007620(&qword_1002EFE80);
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin(v3);
  uint64_t v72 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002EFE78);
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002EFE70);
  uint64_t v67 = *(void *)(v7 - 8);
  uint64_t v68 = v7;
  __chkstk_darwin(v7);
  uint64_t v66 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100007620(&qword_1002EF8C8);
  uint64_t v9 = __chkstk_darwin(v65);
  uint64_t v64 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v63 = (char *)&v56 - v11;
  uint64_t v62 = sub_100007620((uint64_t *)&unk_1002F3470);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  int v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100007620(&qword_1002EFE68);
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  int v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002EFE60);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002EFE58);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__sceneTypeSelection;
  LOBYTE(v78) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v25, v24, v21);
  uint64_t v26 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__presentationTypeSelection;
  LOBYTE(v78) = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v26, v20, v17);
  uint64_t v27 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__planeDetectionSelection;
  LOBYTE(v78) = 2;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v27, v16, v57);
  uint64_t v28 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__translationEnabled;
  LOBYTE(v78) = 1;
  Published.init(initialValue:)();
  uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v58 + 32);
  uint64_t v30 = v59;
  v29(v28, v14, v59);
  uint64_t v31 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__groupingEnabled;
  LOBYTE(v78) = 1;
  Published.init(initialValue:)();
  v29(v31, v14, v30);
  uint64_t v32 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__usesAlternateLineGrouping;
  LOBYTE(v78) = 0;
  Published.init(initialValue:)();
  v29(v32, v14, v30);
  uint64_t v33 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__textRecognitionDefaultFrequency;
  LODWORD(v78) = 1048576000;
  uint64_t v34 = v60;
  Published.init(initialValue:)();
  os_log_type_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v61 + 32);
  uint64_t v36 = v62;
  v35(v33, v34, v62);
  uint64_t v37 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__textRecognitionInfrequentFrequency;
  LODWORD(v78) = 1069547520;
  Published.init(initialValue:)();
  v35(v37, v34, v36);
  uint64_t v38 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__pauseOnLowStability;
  LOBYTE(v78) = 1;
  Published.init(initialValue:)();
  v29(v38, v14, v30);
  uint64_t v39 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__staticImage;
  uint64_t v40 = type metadata accessor for CameraConfiguration.StaticImage(0);
  uint64_t v41 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v63, 1, 1, v40);
  sub_10002470C(v41, v64);
  uint64_t v42 = v66;
  Published.init(initialValue:)();
  sub_100024774(v41);
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v39, v42, v68);
  uint64_t v43 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__isShareSheetPresented;
  LOBYTE(v78) = 0;
  Published.init(initialValue:)();
  v29(v43, v14, v30);
  uint64_t v44 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__showRegionAdjustmentView;
  LOBYTE(v78) = 1;
  Published.init(initialValue:)();
  v29(v44, v14, v30);
  uint64_t v45 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__showBoundingBox;
  LOBYTE(v78) = 0;
  Published.init(initialValue:)();
  v29(v45, v14, v30);
  uint64_t v46 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__staticInteractionSelection;
  LOBYTE(v78) = 0;
  uint64_t v47 = v69;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v46, v47, v71);
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration_maxHeight) = 0x4069000000000000;
  *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration_maxWidth) = 0x4069000000000000;
  uint64_t v48 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__currentHeight;
  *(void *)&long long v78 = 0x4069000000000000;
  uint64_t v49 = v72;
  Published.init(initialValue:)();
  uint64_t v50 = v74;
  id v51 = *(void (**)(uint64_t, char *, uint64_t))(v73 + 32);
  v51(v48, v49, v74);
  uint64_t v52 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__currentWidth;
  *(void *)&long long v78 = 0x4069000000000000;
  Published.init(initialValue:)();
  v51(v52, v49, v50);
  uint64_t v53 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19CameraConfiguration__regionOfInterest;
  long long v78 = 0u;
  long long v79 = 0u;
  char v80 = 1;
  sub_100007620((uint64_t *)&unk_1002EF8E8);
  id v54 = v75;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v53, v54, v77);
  return v0;
}

uint64_t sub_1000246B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CameraConfiguration(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10002470C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EF8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100024774(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002EF8C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000247E8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for CardActionButtons(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);

  return sub_10002485C(v2, v3);
}

uint64_t sub_10002485C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for CardActionButtons(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v5 = *(void *)(a2 + 96);
  char v6 = *(unsigned char *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000247E8(v5, v6);
  *(void *)(a1 + 96) = v5;
  *(unsigned char *)(a1 + 104) = v6;
  return a1;
}

uint64_t assignWithCopy for CardActionButtons(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = v2[3];
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = v2[5];
  *(void *)(a1 + 32) = v2[4];
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = v2[7];
  *(void *)(a1 + 48) = v2[6];
  *(void *)(a1 + 56) = v7;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 64) = *((unsigned char *)v2 + 64);
  *(void *)(a1 + 72) = v2[9];
  swift_retain();
  swift_release();
  *(void *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2[10];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 88) = *((unsigned char *)v2 + 88);
  *(unsigned char *)(a1 + 89) = *((unsigned char *)v2 + 89);
  uint64_t v8 = v2[12];
  LOBYTE(v2) = *((unsigned char *)v2 + 104);
  sub_1000247E8(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 96);
  char v10 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = (_BYTE)v2;
  sub_10002485C(v9, v10);
  return a1;
}

__n128 initializeWithTake for CardActionButtons(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for CardActionButtons(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  char v4 = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)(a1 + 96);
  char v6 = *(unsigned char *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = v4;
  sub_10002485C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardActionButtons(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardActionButtons(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardActionButtons()
{
  return &type metadata for CardActionButtons;
}

uint64_t sub_100024BDC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100024BF8()
{
  uint64_t result = Image.init(systemName:)();
  qword_10030E690 = result;
  return result;
}

uint64_t sub_100024C30()
{
  uint64_t result = Image.init(systemName:)();
  qword_10030E698 = result;
  return result;
}

uint64_t sub_100024C5C()
{
  uint64_t result = Image.init(systemName:)();
  qword_10030E6A0 = result;
  return result;
}

uint64_t sub_100024C94()
{
  uint64_t result = Image.init(systemName:)();
  qword_10030E6A8 = result;
  return result;
}

uint64_t sub_100024CD0()
{
  uint64_t result = Image.init(systemName:)();
  qword_10030E6B0 = result;
  return result;
}

uint64_t sub_100024D08@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v99 = sub_100007620(&qword_1002EFE98);
  uint64_t v3 = __chkstk_darwin(v99);
  uint64_t v97 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v98 = (char *)&v92 - v5;
  uint64_t v101 = sub_100007620(&qword_1002EFEA0);
  uint64_t v100 = *(void *)(v101 - 8);
  uint64_t v6 = __chkstk_darwin(v101);
  uint64_t v111 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v112 = (char *)&v92 - v8;
  uint64_t v9 = sub_100007620(&qword_1002EFEA8);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v113 = (uint64_t)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v116 = (char *)&v92 - v12;
  uint64_t v13 = sub_100007620(&qword_1002EFEB0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  int v16 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100007620(&qword_1002EFEB8);
  uint64_t v17 = __chkstk_darwin(v109);
  uint64_t v19 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v92 - v20;
  uint64_t v22 = sub_100007620(&qword_1002EFEC0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v120 = v22;
  uint64_t v121 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v119 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  v118 = (char *)&v92 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v92 - v29;
  __chkstk_darwin(v28);
  uint64_t v117 = (char *)&v92 - v31;
  uint64_t v110 = a1;
  swift_retain();
  Button.init(action:label:)();
  uint64_t v106 = sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
  uint64_t v108 = v13;
  View.accessibilityIdentifier(_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v107 = v14 + 8;
  unint64_t v105 = v32;
  v32(v16, v13);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v33 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v35 = v34;
  LOBYTE(v14) = v36 & 1;
  ModifiedContent<>.accessibility(label:)();
  sub_10001FC84(v33, v35, v14);
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v19, &qword_1002EFEB8);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v124) = 0;
  unint64_t v104 = sub_1000263BC();
  unint64_t v114 = sub_10002648C();
  uint64_t v115 = v30;
  uint64_t v37 = v16;
  View.buttonStyle<A>(_:)();
  swift_release();
  sub_10000B070((uint64_t)v21, &qword_1002EFEB8);
  uint64_t v38 = v121 + 32;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v121 + 32);
  uint64_t v39 = v30;
  uint64_t v40 = v120;
  v103(v117, v39, v120);
  uint64_t v122 = v110;
  swift_retain();
  Button.init(action:label:)();
  uint64_t v41 = v108;
  View.accessibilityIdentifier(_:)();
  uint64_t v94 = v37;
  v105(v37, v41);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v42 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v44 = v43;
  LOBYTE(v33) = v45 & 1;
  ModifiedContent<>.accessibility(label:)();
  uint64_t v46 = v44;
  char v47 = v33;
  uint64_t v48 = v40;
  uint64_t v49 = v115;
  uint64_t v50 = v110;
  sub_10001FC84(v42, v46, v47);
  swift_bridgeObjectRelease();
  uint64_t v96 = v19;
  sub_10000B070((uint64_t)v19, &qword_1002EFEB8);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v124) = 0;
  View.buttonStyle<A>(_:)();
  swift_release();
  uint64_t v93 = v21;
  sub_10000B070((uint64_t)v21, &qword_1002EFEB8);
  uint64_t v95 = v38;
  uint64_t v51 = ((uint64_t (*)(char *, char *, uint64_t))v103)(v118, v49, v48);
  if (*(unsigned char *)(v50 + 89))
  {
    __chkstk_darwin(v51);
    swift_retain();
    id v54 = v94;
    Button.init(action:label:)();
    Swift::tuple_Bool_String v55 = v49;
    uint64_t v56 = (uint64_t)v96;
    uint64_t v57 = v108;
    View.accessibilityIdentifier(_:)();
    v105(v54, v57);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v58 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v60 = v59;
    char v62 = v61 & 1;
    uint64_t v63 = (uint64_t)v93;
    ModifiedContent<>.accessibility(label:)();
    sub_10001FC84(v58, v60, v62);
    swift_bridgeObjectRelease();
    sub_10000B070(v56, &qword_1002EFEB8);
    uint64_t KeyPath = swift_getKeyPath();
    LOBYTE(v124) = 0;
    View.buttonStyle<A>(_:)();
    swift_release();
    sub_10000B070(v63, &qword_1002EFEB8);
    uint64_t v64 = (uint64_t)v116;
    v103(v116, v55, v120);
    uint64_t v52 = 0;
    uint64_t v53 = v64;
  }
  else
  {
    uint64_t v52 = 1;
    uint64_t v53 = (uint64_t)v116;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v121 + 56))(v53, v52, 1, v120);
  uint64_t v66 = *(void *)(v50 + 48);
  uint64_t v65 = *(void *)(v50 + 56);
  uint64_t v127 = 0;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v125 = v66;
  uint64_t v126 = v65;
  sub_1000264E8();
  uint64_t v67 = (uint64_t)v97;
  View.accessibilityIdentifier(_:)();
  swift_release();
  swift_release();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v68 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v70 = v69;
  char v72 = v71 & 1;
  uint64_t v73 = (uint64_t)v98;
  ModifiedContent<>.accessibility(label:)();
  sub_10001FC84(v68, v70, v72);
  swift_bridgeObjectRelease();
  sub_10000B070(v67, &qword_1002EFE98);
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v124) = 0;
  sub_10002653C();
  uint64_t v74 = v111;
  View.buttonStyle<A>(_:)();
  swift_release();
  sub_10000B070(v73, &qword_1002EFE98);
  uint64_t v75 = v120;
  uint64_t v76 = v100;
  uint64_t v77 = v112;
  long long v78 = v74;
  uint64_t v79 = v101;
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v112, v74, v101);
  char v80 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
  long long v81 = v115;
  v80(v115, v117, v75);
  v80(v119, v118, v75);
  sub_10000C3A4((uint64_t)v116, v113, &qword_1002EFEA8);
  uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  v82(v78, v77, v79);
  long long v83 = (void (*)(uint64_t, char *, uint64_t))v82;
  long long v84 = v102;
  v80(v102, v81, v75);
  long long v85 = (int *)sub_100007620(&qword_1002EFEF0);
  v80(&v84[v85[12]], v119, v75);
  uint64_t v86 = v113;
  sub_10000C3A4(v113, (uint64_t)&v84[v85[16]], &qword_1002EFEA8);
  uint64_t v87 = &v84[v85[20]];
  uint64_t v88 = v111;
  v83((uint64_t)v87, v111, v79);
  long long v89 = *(void (**)(char *, uint64_t))(v76 + 8);
  v89(v112, v79);
  sub_10000B070((uint64_t)v116, &qword_1002EFEA8);
  uint64_t v90 = *(void (**)(char *, uint64_t))(v121 + 8);
  v90(v118, v75);
  v90(v117, v75);
  v89(v88, v79);
  sub_10000B070(v86, &qword_1002EFEA8);
  v90(v119, v75);
  return ((uint64_t (*)(char *, uint64_t))v90)(v115, v75);
}

uint64_t sub_100025AA4@<X0>(void *a1@<X8>)
{
  if (qword_1002EE530 != -1) {
    swift_once();
  }
  *a1 = qword_10030E690;

  return swift_retain();
}

uint64_t sub_100025B10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    if (qword_1002EE538 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1002EE540 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  uint64_t result = swift_retain();
  *a2 = result;
  return result;
}

uint64_t sub_100025BB8@<X0>(uint64_t *a1@<X8>)
{
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  if (v3 == 1)
  {
    if (qword_1002EE550 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_1002EE548 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  uint64_t result = swift_retain();
  *a1 = result;
  return result;
}

uint64_t sub_100025C94@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[5];
  v8[4] = v1[4];
  v9[0] = v3;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v1 + 89);
  long long v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  long long v5 = v1[3];
  v8[2] = v1[2];
  v8[3] = v5;
  *(void *)a1 = static VerticalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4038000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v6 = sub_100007620(&qword_1002EFE90);
  return sub_100024D08((uint64_t)v8, (char *)(a1 + *(int *)(v6 + 44)));
}

uint64_t sub_100025D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v60 = a3;
  uint64_t v61 = a2;
  uint64_t v63 = a4;
  uint64_t v59 = sub_100007620(&qword_1002EFF08);
  __chkstk_darwin(v59);
  uint64_t v66 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002EFF10);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002EFF18);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100007620(&qword_1002EFF20);
  uint64_t v57 = *(void *)(v19 - 8);
  uint64_t v58 = v19;
  __chkstk_darwin(v19);
  uint64_t v52 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100007620(&qword_1002EFF28);
  __chkstk_darwin(v53);
  uint64_t v56 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100007620(&qword_1002EFF30);
  __chkstk_darwin(v55);
  uint64_t v54 = (uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a1;
  ButtonStyleConfiguration.label.getter();
  uint64_t v23 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v11, v8);
  uint64_t v25 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  *uint64_t v25 = KeyPath;
  v25[1] = v23;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v26 = v16;
  uint64_t v28 = v64;
  uint64_t v27 = v65;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v64, enum case for Image.Scale.large(_:), v65);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = (uint64_t *)&v18[*(int *)(v26 + 36)];
  uint64_t v31 = sub_100007620(&qword_1002EFF38);
  uint64_t v32 = v27;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v30 + *(int *)(v31 + 28), v28, v27);
  *uint64_t v30 = v29;
  sub_10000C3A4((uint64_t)v15, (uint64_t)v18, &qword_1002EFF10);
  uint64_t v33 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v32);
  sub_10000B070((uint64_t)v15, &qword_1002EFF10);
  uint64_t v34 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v35 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
  sub_100026964(&qword_1002EFF40, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1000267F4();
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    uint64_t v37 = v52;
    View.dynamicTypeSize<A>(_:)();
    sub_10000B070(v33, &qword_1002EFF08);
    sub_10000B070((uint64_t)v18, &qword_1002EFF18);
    char v38 = v60 & 1;
    uint64_t v39 = v61;
    sub_1000247E8(v61, v60 & 1);
    char v40 = sub_1000FFC98(v39, v38);
    sub_10002485C(v39, v38);
    uint64_t v41 = v37;
    if (v40) {
      uint64_t v42 = static Color.translateAccentColor.getter();
    }
    else {
      uint64_t v42 = static Color.tertiaryTranslateAccentColor.getter();
    }
    uint64_t v43 = v42;
    uint64_t v44 = swift_getKeyPath();
    uint64_t v46 = (uint64_t)v56;
    uint64_t v45 = v57;
    uint64_t v47 = v58;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v56, v41, v58);
    uint64_t v48 = (uint64_t *)(v46 + *(int *)(v53 + 36));
    *uint64_t v48 = v44;
    v48[1] = v43;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v47);
    if (ButtonStyleConfiguration.isPressed.getter()) {
      double v49 = 0.5;
    }
    else {
      double v49 = 1.0;
    }
    uint64_t v50 = v54;
    sub_10000C3A4(v46, v54, &qword_1002EFF28);
    *(double *)(v50 + *(int *)(v55 + 36)) = v49;
    sub_10000B070(v46, &qword_1002EFF28);
    return sub_1000269B4(v50, v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000263A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100025D08(a1, *(void *)v2, *(unsigned __int8 *)(v2 + 8), a2);
}

unint64_t sub_1000263BC()
{
  unint64_t result = qword_1002EFED0;
  if (!qword_1002EFED0)
  {
    sub_100007928(&qword_1002EFEB8);
    sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
    sub_100026964((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFED0);
  }
  return result;
}

unint64_t sub_10002648C()
{
  unint64_t result = qword_1002EFED8;
  if (!qword_1002EFED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFED8);
  }
  return result;
}

uint64_t sub_1000264E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100025B10(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000264E8()
{
  unint64_t result = qword_1002EFEE0;
  if (!qword_1002EFEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFEE0);
  }
  return result;
}

unint64_t sub_10002653C()
{
  unint64_t result = qword_1002EFEE8;
  if (!qword_1002EFEE8)
  {
    sub_100007928(&qword_1002EFE98);
    sub_1000264E8();
    sub_100026964((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFEE8);
  }
  return result;
}

uint64_t sub_1000265E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100025BB8(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for CardActionButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for CardActionButtonStyle(uint64_t a1)
{
  return sub_10002485C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for CardActionButtonStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1000247E8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10002485C(v5, v6);
  return a1;
}

uint64_t initializeWithTake for StaticImage(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for CardActionButtonStyle(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_10002485C(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardActionButtonStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardActionButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardActionButtonStyle()
{
  return &type metadata for CardActionButtonStyle;
}

uint64_t sub_10002678C()
{
  return sub_100014894(&qword_1002EFEF8, &qword_1002EFF00);
}

uint64_t sub_1000267C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000267F4()
{
  unint64_t result = qword_1002EFF48;
  if (!qword_1002EFF48)
  {
    sub_100007928(&qword_1002EFF18);
    sub_100026894();
    sub_100014894(&qword_1002EFF60, &qword_1002EFF38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFF48);
  }
  return result;
}

unint64_t sub_100026894()
{
  unint64_t result = qword_1002EFF50;
  if (!qword_1002EFF50)
  {
    sub_100007928(&qword_1002EFF10);
    sub_100026964((unint64_t *)&qword_1002EFF58, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFF50);
  }
  return result;
}

uint64_t sub_100026964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000269B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002EFF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100026A20()
{
  unint64_t result = qword_1002EFF70;
  if (!qword_1002EFF70)
  {
    sub_100007928(&qword_1002EFF30);
    sub_100026A9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFF70);
  }
  return result;
}

unint64_t sub_100026A9C()
{
  unint64_t result = qword_1002EFF78;
  if (!qword_1002EFF78)
  {
    sub_100007928(&qword_1002EFF28);
    sub_100007928(&qword_1002EFF18);
    sub_100007928(&qword_1002EFF08);
    sub_1000267F4();
    sub_100014894(&qword_1002EFF68, &qword_1002EFF08);
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFF78);
  }
  return result;
}

id sub_100026BC4()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___stack;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___stack);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___stack);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100007620((uint64_t *)&unk_1002F0270);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100249A50;
    *(void *)(v5 + 32) = sub_100026D50();
    *(void *)(v5 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_1000270A8();
    *(void *)(v5 + 48) = sub_1000272B4();
    id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    LODWORD(v7) = 1128792064;
    [v6 setContentHuggingPriority:1 forAxis:v7];
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    *(void *)(v5 + 56) = v6;
    *(void *)(v5 + 64) = sub_100027AA0();
    *(void *)(v5 + 72) = sub_100027610();
    specialized Array._endMutation()();
    id v8 = objc_allocWithZone((Class)UIStackView);
    sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v8 initWithArrangedSubviews:isa];

    uint64_t v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v10;
    id v3 = v10;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

objc_class *sub_100026D50()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___expandAction;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___expandAction);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___expandAction);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for ActionButton();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100029748;
    *(void *)(v6 + 24) = v5;
    swift_retain_n();
    v24.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v24).super.super.super.super.isa;
    id v8 = self;
    uint64_t v9 = isa;
    id v10 = [v8 systemFontOfSize:17.0];
    uint64_t v11 = self;
    id v12 = [v11 configurationWithFont:v10 scale:3];

    [(objc_class *)v9 setPreferredSymbolConfiguration:v12 forImageInState:0];
    id v13 = [v11 configurationWithScale:3];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14 withConfiguration:v13];

    if (v15)
    {
      id v16 = [self whiteColor];
      id v17 = [v15 imageWithTintColor:v16];
    }
    else
    {
      id v17 = 0;
    }
    [(objc_class *)v9 setImage:v17 forState:0];

    -[objc_class setFrame:](v9, "setFrame:", 0.0, 0.0, 44.0, 44.0);
    uint64_t v18 = self;
    uint64_t v19 = v9;
    id v20 = [v18 whiteColor];
    [(objc_class *)v19 setTintColor:v20];

    swift_release_n();
    uint64_t v21 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v19;
    id v3 = v19;

    uint64_t v2 = 0;
  }
  id v22 = v2;
  return v3;
}

objc_class *sub_1000270A8()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___starAction;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___starAction);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___starAction);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for ActionButton();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v6 = sub_10000915C(1918989427, 0xE400000000000000, 0x6C69662E72617473, 0xE90000000000006CLL, (uint64_t)sub_100029718, v5);
    double v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

uint64_t sub_100027178(void *a1, uint64_t a2, void (*a3)(_OWORD *))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = result + OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate;
    swift_beginAccess();
    sub_100029558(v7, (uint64_t)v10);
    if (v11)
    {
      sub_1000295C0((uint64_t)v10, (uint64_t)v9);
      sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F0290);
      sub_100029624(v9, v9[3]);
      if ([a1 sender])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v8, 0, sizeof(v8));
      }
      a3(v8);

      sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F02C0);
      return sub_10000AB68((uint64_t)v9);
    }
    else
    {

      return sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F0290);
    }
  }
  return result;
}

objc_class *sub_1000272B4()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___bookClosedAction;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___bookClosedAction);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___bookClosedAction);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for ActionButton();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1000296E8;
    *(void *)(v6 + 24) = v5;
    swift_retain_n();
    v24.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v24).super.super.super.super.isa;
    id v8 = self;
    uint64_t v9 = isa;
    id v10 = [v8 systemFontOfSize:17.0];
    uint64_t v11 = self;
    id v12 = [v11 configurationWithFont:v10 scale:3];

    [(objc_class *)v9 setPreferredSymbolConfiguration:v12 forImageInState:0];
    id v13 = [v11 configurationWithScale:3];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14 withConfiguration:v13];

    if (v15)
    {
      id v16 = [self whiteColor];
      id v17 = [v15 imageWithTintColor:v16];
    }
    else
    {
      id v17 = 0;
    }
    [(objc_class *)v9 setImage:v17 forState:0];

    -[objc_class setFrame:](v9, "setFrame:", 0.0, 0.0, 44.0, 44.0);
    uint64_t v18 = self;
    uint64_t v19 = v9;
    id v20 = [v18 whiteColor];
    [(objc_class *)v19 setTintColor:v20];

    swift_release_n();
    uint64_t v21 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v19;
    id v3 = v19;

    uint64_t v2 = 0;
  }
  id v22 = v2;
  return v3;
}

objc_class *sub_100027610()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playButton);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playButton);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for ActionButton();
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_1000296A0;
    *(void *)(v6 + 24) = v5;
    swift_retain_n();
    v24.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v24).super.super.super.super.isa;
    id v8 = self;
    uint64_t v9 = isa;
    id v10 = [v8 systemFontOfSize:17.0];
    uint64_t v11 = self;
    id v12 = [v11 configurationWithFont:v10 scale:3];

    [(objc_class *)v9 setPreferredSymbolConfiguration:v12 forImageInState:0];
    id v13 = [v11 configurationWithScale:3];
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14 withConfiguration:v13];

    if (v15)
    {
      id v16 = [self whiteColor];
      id v17 = [v15 imageWithTintColor:v16];
    }
    else
    {
      id v17 = 0;
    }
    [(objc_class *)v9 setImage:v17 forState:0];

    -[objc_class setFrame:](v9, "setFrame:", 0.0, 0.0, 44.0, 44.0);
    uint64_t v18 = self;
    uint64_t v19 = v9;
    id v20 = [v18 whiteColor];
    [(objc_class *)v19 setTintColor:v20];

    swift_release_n();
    uint64_t v21 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v19;
    id v3 = v19;

    uint64_t v2 = 0;
  }
  id v22 = v2;
  return v3;
}

uint64_t sub_100027968(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = (void *)result;
    uint64_t v4 = result + OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate;
    swift_beginAccess();
    sub_100029558(v4, (uint64_t)v7);
    if (v8)
    {
      sub_1000295C0((uint64_t)v7, (uint64_t)v6);
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F0290);
      sub_100029624(v6, v6[3]);
      if ([a1 sender])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v5, 0, sizeof(v5));
      }
      sub_100032F5C(4, (uint64_t)v5);

      sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F02C0);
      return sub_10000AB68((uint64_t)v6);
    }
    else
    {

      return sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F0290);
    }
  }
  return result;
}

id sub_100027AA0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playbackRateLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playbackRateLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playbackRateLabel);
  }
  else
  {
    id v4 = sub_100027B00();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100027B00()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline compatibleWithTraitCollection:0];
  uint64_t v2 = self;
  [v1 pointSize];
  id v3 = [v2 systemFontOfSize:];
  id v4 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
  id v5 = [v4 scaledFontForFont:v3 maximumPointSize:1.79769313e308];

  [v0 setFont:v5];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [self colorNamed:v6];

  [v0 setTextColor:v7];
  [v0 setHidden:1];
  return v0;
}

char *sub_100027CB8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions_background;
  id v10 = objc_allocWithZone((Class)type metadata accessor for ChromeBar());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v12 = &v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate];
  *((void *)v12 + 4) = 0;
  *(_OWORD *)id v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___stack] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___expandAction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___starAction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___bookClosedAction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_playLongPress] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playbackRateLabel] = 0;

  v95.receiver = v11;
  v95.super_class = (Class)type metadata accessor for CardActions();
  id v13 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v14 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions_background;
  id v15 = *(void **)&v13[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_background];
  id v16 = v13;
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v13[v14] setAlpha:0.0];
  [v16 addSubview:*(void *)&v13[v14]];
  id v17 = *(void **)&v13[v14];
  uint64_t v18 = v16;
  id v19 = v17;
  sub_10023B960(v19);

  id v20 = self;
  id v21 = [v20 systemFontOfSize:28.0];
  id v22 = self;
  id v93 = [v22 configurationWithFont:v21];

  id v23 = [v20 systemFontOfSize:17.0];
  id v24 = [v22 configurationWithFont:v23];

  uint64_t v25 = sub_1000270A8();
  uint64_t v94 = v24;
  [(objc_class *)v25 setPreferredSymbolConfiguration:v24 forImageInState:0];

  uint64_t v26 = sub_1000270A8();
  LODWORD(v27) = 1148846080;
  [(objc_class *)v26 setContentCompressionResistancePriority:1 forAxis:v27];

  uint64_t v28 = sub_1000270A8();
  NSString v29 = String._bridgeToObjectiveC()();
  [(objc_class *)v28 setAccessibilityIdentifier:v29];

  uint64_t v30 = sub_1000270A8();
  [(objc_class *)v30 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v31 = sub_1000272B4();
  [(objc_class *)v31 setPreferredSymbolConfiguration:v24 forImageInState:0];

  uint64_t v32 = sub_1000272B4();
  [(objc_class *)v32 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v33 = sub_100027610();
  [(objc_class *)v33 setPreferredSymbolConfiguration:v93 forImageInState:0];

  uint64_t v34 = sub_100027610();
  LODWORD(v35) = 1148846080;
  [(objc_class *)v34 setContentCompressionResistancePriority:1 forAxis:v35];

  char v36 = sub_100027610();
  [(objc_class *)v36 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v37 = sub_100026D50();
  NSString v38 = String._bridgeToObjectiveC()();
  uint64_t v39 = self;
  id v40 = [v39 colorNamed:v38];

  [(objc_class *)v37 setTintColor:v40];
  uint64_t v41 = sub_1000270A8();
  NSString v42 = String._bridgeToObjectiveC()();
  id v43 = [v39 colorNamed:v42];

  [(objc_class *)v41 setTintColor:v43];
  uint64_t v44 = sub_1000272B4();
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v39 colorNamed:v45];

  [(objc_class *)v44 setTintColor:v46];
  uint64_t v47 = sub_100027610();
  NSString v48 = String._bridgeToObjectiveC()();
  id v49 = [v39 colorNamed:v48];

  [(objc_class *)v47 setTintColor:v49];
  uint64_t v50 = sub_100026D50();
  NSString v51 = String._bridgeToObjectiveC()();
  [(objc_class *)v50 setAccessibilityIdentifier:v51];

  uint64_t v52 = sub_100026D50();
  [(objc_class *)v52 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v53 = sub_1000272B4();
  id v54 = [self mainBundle];
  v55._uint64_t countAndFlagsBits = 0xD000000000000015;
  v96._object = (void *)0xE000000000000000;
  v55._object = (void *)0x800000010025AE70;
  v56._uint64_t countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  v96._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v96);

  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v53 setAccessibilityLabel:v57];

  uint64_t v58 = sub_1000272B4();
  NSString v59 = String._bridgeToObjectiveC()();
  [(objc_class *)v58 setAccessibilityIdentifier:v59];

  id v60 = sub_100026BC4();
  [v60 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v61 = sub_100026BC4();
  [v61 setDistribution:0];

  id v62 = sub_100026BC4();
  [v62 setDirectionalLayoutMargins:10.0, 32.0, 10.0, 32.0];

  id v63 = sub_100026BC4();
  [v63 setLayoutMarginsRelativeArrangement:1];

  id v64 = sub_100026BC4();
  [v64 setInsetsLayoutMarginsFromSafeArea:0];

  id v65 = sub_100026BC4();
  uint64_t v66 = sub_100026D50();
  [v65 setCustomSpacing:v66 afterView:28.0];

  id v67 = sub_100026BC4();
  uint64_t v68 = sub_1000270A8();
  [v67 setCustomSpacing:v68 afterView:28.0];

  id v69 = sub_100026BC4();
  id v70 = sub_100027AA0();
  [v69 setCustomSpacing:v70 afterView:4.0];

  char v71 = v18;
  id v72 = sub_100026BC4();
  [v71 addSubview:v72];

  uint64_t v73 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_100249A60;
  id v75 = sub_100026BC4();
  id v76 = [v75 topAnchor];

  id v77 = [v71 topAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77];

  *(void *)(v74 + 32) = v78;
  id v79 = sub_100026BC4();
  id v80 = [v79 leadingAnchor];

  id v81 = [v71 leadingAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81];

  *(void *)(v74 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v82;
  id v83 = [v71 trailingAnchor];
  id v84 = sub_100026BC4();
  id v85 = [v84 trailingAnchor];

  id v86 = [v83 constraintEqualToAnchor:v85];
  *(void *)(v74 + 48) = v86;
  id v87 = [v71 bottomAnchor];
  id v88 = sub_100026BC4();
  id v89 = [v88 bottomAnchor];

  id v90 = [v87 constraintEqualToAnchor:v89];
  *(void *)(v74 + 56) = v90;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v73 activateConstraints:isa];

  sub_1000286DC();
  return v71;
}

void sub_1000286DC()
{
  id v1 = v0;
  id v20 = self;
  sub_10000B0CC(0, (unint64_t *)&qword_1002F8BD0);
  uint64_t v2 = 0;
  do
  {
    char v3 = *((unsigned char *)&off_1002C81F8 + v2 + 32);
    id v4 = [v20 mainBundle];
    v22._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    v22._object = (void *)0x800000010025B0E0;
    v5._uint64_t countAndFlagsBits = 0xD000000000000013;
    v5._object = (void *)0x800000010025B0C0;
    v6._uint64_t countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v22);

    sub_100007620(&qword_1002EEC80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1002488D0;
    uint64_t v8 = sub_100028ACC(v3);
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_1000149B4();
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v10;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v1;
    *(unsigned char *)(v11 + 24) = v3;
    v1;
    id v12 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v13._uint64_t countAndFlagsBits = 0x6574615279616C70;
    v13._object = (void *)0xE90000000000005FLL;
    String.append(_:)(v13);
    _print_unlocked<A, B>(_:_:)();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setAccessibilityIdentifier:v14];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    ++v2;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  while (v2 != 4);
  id v15 = sub_100027610();
  [(objc_class *)v15 setShowsMenuAsPrimaryAction:0];

  id v16 = sub_100027610();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_10000B0CC(0, &qword_1002F0008);
    swift_bridgeObjectRetain();
    preferredElementSize = (void *)_bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10000B0CC(0, &qword_1002F0008);
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_10000B0CC(0, &qword_1002F0010);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v21.value.super.Class isa = 0;
  v21.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v18, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, 0).super.super.isa;
  [(objc_class *)v16 setMenu:isa];
}

uint64_t sub_100028ACC(char a1)
{
  switch(a1)
  {
    case 1:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD000000000000022;
      unint64_t v9 = 0xE000000000000000;
      id v4 = "PLAYBACK_RATE_SPEED_THREE_QUARTERS";
      goto LABEL_6;
    case 2:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD00000000000001ALL;
      unint64_t v9 = 0xE000000000000000;
      id v4 = "PLAYBACK_RATE_SPEED_NORMAL";
      goto LABEL_6;
    case 3:
      id v1 = [self mainBundle];
      unint64_t v3 = 0xD000000000000027;
      unint64_t v9 = 0xE000000000000000;
      id v4 = "PLAYBACK_RATE_SPEED_ONE_AND_ONE_QUARTER";
LABEL_6:
      unint64_t v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
      break;
    default:
      id v1 = [self mainBundle];
      unint64_t v9 = 0xE000000000000000;
      unint64_t v2 = 0x800000010025B0A0;
      unint64_t v3 = 0xD000000000000018;
      break;
  }
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  uint64_t v6 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)(&v9 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100028C74(void *a1, uint64_t a2, char a3)
{
  uint64_t v5 = a2 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate;
  swift_beginAccess();
  sub_100029558(v5, (uint64_t)v9);
  if (!v10) {
    return sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F0290);
  }
  sub_1000295C0((uint64_t)v9, (uint64_t)v8);
  sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F0290);
  sub_100029624(v8, v8[3]);
  if ([a1 sender])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_100032F5C(a3, (uint64_t)v7);
  sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F02C0);
  return sub_10000AB68((uint64_t)v8);
}

void sub_100028D80(char a1)
{
  unint64_t v2 = sub_100027610();
  id v3 = [self mainBundle];
  v22._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000010025B000;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v22);

  sub_100007620(&qword_1002EEC80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1002488D0;
  uint64_t v7 = sub_100028ACC(a1);
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_1000149B4();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v2 setAccessibilityLabel:v10];

  uint64_t v11 = sub_100027610();
  id v12 = sub_100027610();
  id v13 = [(objc_class *)v12 accessibilityLabel];

  if (v13)
  {
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    unint64_t v21 = sub_10000C350();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    -[objc_class setAccessibilityIdentifier:](v11, "setAccessibilityIdentifier:", v17, &type metadata for String, v21, v21, v21, 95, 0xE100000000000000, 32, 0xE100000000000000, v14, v16);

    id v18 = sub_100027AA0();
    id v19 = v18;
    if (a1 == 2)
    {
      [v18 setHidden:1];
    }
    else
    {
      sub_100028ACC(a1);
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 setText:v20];

      id v19 = sub_100027AA0();
      [v19 setHidden:0];
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100029048()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardActions();
  return [super dealloc];
}

uint64_t type metadata accessor for CardActions()
{
  return self;
}

uint64_t getEnumTagSinglePayload for ConversationContext.ContextMetrics.AppUIMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTSPlaybackRate(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000292C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTSPlaybackRate()
{
  return &type metadata for TTSPlaybackRate;
}

unint64_t sub_1000292FC()
{
  unint64_t result = qword_1002EFFF0;
  if (!qword_1002EFFF0)
  {
    sub_100007928(&qword_1002EFFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002EFFF0);
  }
  return result;
}

void sub_100029358(void *a1@<X8>)
{
  *a1 = &off_1002C8220;
}

unint64_t sub_10002936C()
{
  unint64_t result = qword_1002F0000;
  if (!qword_1002F0000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0000);
  }
  return result;
}

void sub_1000293C0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator11CardActions_background;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for ChromeBar()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  int v2 = &v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate];
  *((void *)v2 + 4) = 0;
  *(_OWORD *)int v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___stack] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___expandAction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___starAction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___bookClosedAction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions_playLongPress] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator11CardActions____lazy_storage___playbackRateLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000294C4(double a1)
{
  if (a1 == 0.5) {
    return 0;
  }
  if (a1 == 0.75) {
    return 1;
  }
  if (a1 == 1.25) {
    unsigned int v2 = 3;
  }
  else {
    unsigned int v2 = 4;
  }
  if (a1 == 1.0) {
    return 2;
  }
  else {
    return v2;
  }
}

uint64_t sub_100029514()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_10002954C(void *a1)
{
  return sub_100028C74(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100029558(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F0290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000295C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_100029624(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100029668()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000296A0(void *a1)
{
  return sub_100027968(a1);
}

uint64_t sub_1000296A8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000296E0(uint64_t a1)
{
  return sub_100009570(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000296E8(void *a1)
{
  return sub_100027178(a1, v1, (void (*)(_OWORD *))sub_100032A2C);
}

uint64_t sub_100029718(void *a1)
{
  return sub_100027178(a1, v1, (void (*)(_OWORD *))sub_1000328C8);
}

uint64_t sub_100029748(void *a1)
{
  return sub_100027178(a1, v1, (void (*)(_OWORD *))sub_1000324F4);
}

id sub_100029784()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___containerView;
  unsigned int v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___containerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___containerView);
  }
  else
  {
    id v4 = sub_1000297E4();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unsigned int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1000297E4()
{
  id v0 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v1 = [v0 layer];
  [v1 setCornerRadius:10.0];

  id v2 = [v0 layer];
  [v2 setMasksToBounds:1];

  id v3 = [self clearColor];
  [v0 setBackgroundColor:v3];

  return v0;
}

id sub_1000298E0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___cardView;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___cardView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___cardView];
  }
  else
  {
    id v4 = sub_100029944(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100029944(void *a1)
{
  id v2 = [objc_allocWithZone((Class)type metadata accessor for TranslationCard()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v12[3] = type metadata accessor for CardCollectionViewCell();
  v12[4] = &off_1002CA618;
  v12[0] = a1;
  uint64_t v3 = (uint64_t)v2 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate;
  swift_beginAccess();
  id v4 = v2;
  id v5 = a1;
  sub_10002AD54((uint64_t)v12, v3);
  swift_endAccess();

  id v6 = self;
  id v7 = v4;
  id v8 = [v6 secondarySystemGroupedBackgroundColor];
  [v7 setBackgroundColor:v8];

  id v9 = v7;
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setAccessibilityIdentifier:v10];

  [v9 setClipsToBounds:1];
  return v9;
}

double sub_100029AA8()
{
  uint64_t v1 = v0;
  id v2 = sub_1000298E0();
  id v3 = sub_100208A90();

  [v3 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  id v12 = sub_1000298E0();
  id v13 = sub_100208A90();

  [v1 convertRect:v13 fromCoordinateSpace:v5, v7, v9, v11];
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;

  v34.origin.x = v15;
  v34.origin.y = v17;
  v34.size.width = v19;
  v34.size.height = v21;
  double MaxY = CGRectGetMaxY(v34);
  id v23 = (char *)sub_1000298E0();
  id v24 = *(id *)&v23[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

  [v24 frame];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  v35.origin.x = v26;
  v35.origin.y = v28;
  v35.size.width = v30;
  v35.size.height = v32;
  return MaxY + CGRectGetHeight(v35);
}

char *sub_100029BEC(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_paddingDefault] = 0x4038000000000000;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_topPaddingDefault] = 0x4010000000000000;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_bottomPaddingDefault] = 0xC010000000000000;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_leadingPadding] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_trailingPadding] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___containerView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___cardView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight] = 0x4056800000000000;
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight] = 0x4077C00000000000;
  v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded] = 0;
  v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying] = 0;
  v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minimumHeightEnabled] = 1;
  double v9 = &v4[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate];
  double v10 = (objc_class *)type metadata accessor for CardCollectionViewCell();
  *(_OWORD *)double v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  v101.receiver = v4;
  v101.super_class = v10;
  double v11 = (char *)[super initWithFrame:a1, a2, a3, a4];
  id v12 = sub_1000298E0();
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v13 = [v11 contentView];
  id v14 = sub_100029784();
  [v13 addSubview:v14];

  id v15 = sub_100029784();
  id v16 = sub_1000298E0();
  [v15 addSubview:v16];

  id v17 = sub_1000298E0();
  id v18 = [v17 bottomAnchor];

  id v19 = sub_100029784();
  id v20 = [v19 bottomAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  LODWORD(v22) = 1132068864;
  [v21 setPriority:v22];
  id v99 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100249A60;
  id v24 = sub_1000298E0();
  id v25 = [v24 topAnchor];

  id v26 = sub_100029784();
  id v27 = [v26 topAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27];
  *(void *)(v23 + 32) = v28;
  id v29 = sub_1000298E0();
  id v30 = [v29 leadingAnchor];

  id v31 = sub_100029784();
  id v32 = [v31 leadingAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32];
  *(void *)(v23 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v33;
  id v34 = sub_1000298E0();
  id v35 = [v34 trailingAnchor];

  id v36 = sub_100029784();
  id v37 = [v36 trailingAnchor];

  id v38 = [v35 constraintEqualToAnchor:v37];
  *(void *)(v23 + 48) = v38;
  *(void *)(v23 + 56) = v21;
  specialized Array._endMutation()();
  sub_10002AEFC();
  id v100 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v99 activateConstraints:isa];

  id v40 = sub_100029784();
  id v41 = [v40 heightAnchor];

  id v42 = [v41 constraintGreaterThanOrEqualToConstant:*(double *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight]];
  LODWORD(v43) = 1148846080;
  uint64_t v44 = v42;
  uint64_t v98 = v42;
  [v42 setPriority:v43];
  NSString v45 = String._bridgeToObjectiveC()();
  [v44 setIdentifier:v45];

  id v46 = sub_1000298E0();
  id v47 = [v46 heightAnchor];

  id v48 = [v47 constraintEqualToConstant:0.0];
  id v49 = *(void **)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight] = v48;

  id v50 = sub_100029784();
  id v51 = [v50 bottomAnchor];

  uint64_t v52 = (char *)sub_1000298E0();
  id v53 = *(id *)&v52[OBJC_IVAR____TtC17SequoiaTranslator8CardView_container];

  id v54 = [v53 bottomAnchor];
  id v55 = [v51 constraintEqualToAnchor:v54 constant:16.0];

  uint64_t v97 = v55;
  LODWORD(v56) = 1132068864;
  [v55 setPriority:v56];
  NSString v57 = String._bridgeToObjectiveC()();
  [v55 setIdentifier:v57];

  id v58 = sub_100029784();
  id v59 = [v58 leadingAnchor];

  id v60 = [v11 contentView];
  id v61 = [v60 leadingAnchor];

  uint64_t v62 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_paddingDefault;
  id v96 = [v59 constraintEqualToAnchor:v61 constant:*(double *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_paddingDefault]];

  LODWORD(v63) = 1148829696;
  [v96 setPriority:v63];
  id v64 = [v11 contentView];
  id v65 = [v64 trailingAnchor];

  id v66 = sub_100029784();
  id v67 = [v66 trailingAnchor];

  id v68 = [v65 constraintEqualToAnchor:v67 constant:*(double *)&v11[v62]];
  id v69 = sub_100029784();
  id v70 = [v69 topAnchor];

  id v71 = [v11 contentView];
  id v72 = [v71 topAnchor];

  id v73 = [v70 constraintEqualToAnchor:v72];
  LODWORD(v74) = 1148829696;
  [v73 setPriority:v74];
  id v75 = sub_100029784();
  id v76 = [v75 bottomAnchor];

  id v77 = [v11 contentView];
  id v78 = [v77 bottomAnchor];

  id v79 = [v76 constraintEqualToAnchor:v78];
  LODWORD(v8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 1148829696;
  [v79 setPriority:v80];
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_100249A50;
  *(void *)(v81 + 32) = v73;
  *(void *)(v81 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v96;
  *(void *)(v81 + 48) = v68;
  *(void *)(v81 + 56) = v79;
  *(void *)(v81 + 64) = v98;
  *(void *)(v81 + 72) = v97;
  specialized Array._endMutation()();
  id v82 = v73;
  id v83 = v96;
  id v84 = v68;
  id v85 = v79;
  id v86 = v98;
  id v87 = v97;
  Class v88 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v99 activateConstraints:v88];

  [v86 setActive:v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minimumHeightEnabled]];
  id v89 = *(void **)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_leadingPadding];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_leadingPadding] = v83;
  id v90 = v83;

  uint64_t v91 = *(void **)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_trailingPadding];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_trailingPadding] = v84;
  id v92 = v84;

  id v93 = *(void **)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight] = v86;
  id v94 = v86;

  sub_10002A648();
  return v11;
}

id sub_10002A648()
{
  uint64_t v1 = v0;
  id v2 = sub_1000298E0();
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded;
  int v4 = v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded];
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded;
  int v6 = v2[OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded];
  v2[OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded] = v4;
  if (v4 != v6)
  {
    sub_10020A9A0();
    int v4 = v2[v5];
  }
  if (v6 != v4) {
    sub_10020A9A0();
  }

  if ((v1[v3] & 1) == 0)
  {
    double v7 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight];
    if (v7) {
      [v7 setActive:0];
    }
  }
  id v8 = sub_1000298E0();
  id v9 = [v8 layer];

  double v10 = 0.0;
  double v11 = 10.0;
  if (!v1[v3]) {
    double v11 = 0.0;
  }
  [v9 setCornerRadius:v11];

  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight;
  id v13 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight];
  if (v13)
  {
    id v14 = v1[v3]
        ? &OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight
        : &OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight;
    [v13 setConstant:*(double *)&v1[*v14]];
    id v15 = *(void **)&v1[v12];
    if (v15)
    {
      if (v1[v3] == 1) {
        uint64_t v16 = v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minimumHeightEnabled];
      }
      else {
        uint64_t v16 = 0;
      }
      [v15 setActive:v16];
    }
  }
  id v17 = [v1 traitCollection];
  id v18 = [v17 horizontalSizeClass];

  if (v18 == (id)1) {
    double v10 = 16.0;
  }
  id v19 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_leadingPadding];
  if (v19)
  {
    double v20 = 0.0;
    if (!v1[v3]) {
      double v20 = v10;
    }
    [v19 setConstant:v20];
  }
  id result = *(id *)&v1[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_trailingPadding];
  if (result)
  {
    double v22 = 0.0;
    if (!v1[v3]) {
      double v22 = v10;
    }
    return [result setConstant:v22];
  }
  return result;
}

id sub_10002A8C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardCollectionViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for CardCollectionViewCell()
{
  return self;
}

uint64_t sub_10002A9B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate;
  swift_beginAccess();
  sub_10002AC8C(v9, (uint64_t)v12);
  if (!v13) {
    return sub_10002ACF4((uint64_t)v12);
  }
  sub_1000295C0((uint64_t)v12, (uint64_t)v11);
  sub_10002ACF4((uint64_t)v12);
  sub_100029624(v11, v11[3]);
  sub_1000307D4(a1, a2, a3, a4, v4);
  return sub_10000AB68((uint64_t)v11);
}

uint64_t sub_10002AA84(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate;
  swift_beginAccess();
  sub_10002AC8C(v3, (uint64_t)v6);
  if (!v7) {
    return sub_10002ACF4((uint64_t)v6);
  }
  sub_1000295C0((uint64_t)v6, (uint64_t)v5);
  sub_10002ACF4((uint64_t)v6);
  sub_100029624(v5, v5[3]);
  sub_100031048(a1);
  return sub_10000AB68((uint64_t)v5);
}

uint64_t sub_10002AB20(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate;
  swift_beginAccess();
  sub_10002AC8C(v5, (uint64_t)v8);
  if (!v9) {
    return sub_10002ACF4((uint64_t)v8);
  }
  sub_1000295C0((uint64_t)v8, (uint64_t)v7);
  sub_10002ACF4((uint64_t)v8);
  sub_100029624(v7, v7[3]);
  a2(a1, v2);
  return sub_10000AB68((uint64_t)v7);
}

uint64_t sub_10002ABD4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10002A9B8(a1, a2, a3, a4);
}

uint64_t sub_10002ABF8(uint64_t a1)
{
  return sub_10002AB20(a1, (void (*)(uint64_t, uint64_t))sub_100030CFC);
}

uint64_t sub_10002AC30(void *a1)
{
  return sub_10002AA84(a1);
}

uint64_t sub_10002AC54(uint64_t a1)
{
  return sub_10002AB20(a1, (void (*)(uint64_t, uint64_t))sub_1000315E0);
}

uint64_t sub_10002AC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F00B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10002ACF4(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F00B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10002AD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F00C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10002ADBC()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_paddingDefault] = 0x4038000000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_topPaddingDefault] = 0x4010000000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_bottomPaddingDefault] = 0xC010000000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_leadingPadding] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_trailingPadding] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_cardHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___containerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell____lazy_storage___cardView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight] = 0x4056800000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight] = 0x4077C00000000000;
  v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minimumHeightEnabled] = 1;
  uint64_t v1 = &v0[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_10002AEFC()
{
  unint64_t result = qword_1002F73C0;
  if (!qword_1002F73C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F73C0);
  }
  return result;
}

NSString sub_10002AF3C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030E6B8 = (uint64_t)result;
  return result;
}

id sub_10002AF9C()
{
  return sub_10002B358(&OBJC_IVAR____TtC17SequoiaTranslator18CardListController____lazy_storage___layout, (uint64_t (*)(uint64_t))sub_10002AFBC);
}

id sub_10002AFBC(void *a1)
{
  uint64_t v2 = self;
  id v3 = [v2 fractionalWidthDimension:1.0];
  id v4 = [v2 estimatedDimension:100.0];
  uint64_t v5 = self;
  id v6 = [v5 sizeWithWidthDimension:v3 heightDimension:v4];

  id v7 = [self itemWithLayoutSize:v6];
  id v8 = [v2 fractionalWidthDimension:1.0];
  id v9 = [v2 estimatedDimension:100.0];
  id v10 = [v5 sizeWithWidthDimension:v8 heightDimension:v9];

  id v11 = [self horizontalGroupWithLayoutSize:v10 subitem:v7 count:1];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v11;
  id v13 = objc_allocWithZone((Class)type metadata accessor for InvertedCollectionViewLayout());
  uint64_t v23 = sub_1000344B4;
  uint64_t v24 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100218A94;
  double v22 = &unk_1002CAB70;
  id v14 = _Block_copy(aBlock);
  id v15 = a1;
  id v16 = v11;
  id v17 = [v13 initWithSectionProvider:v14];
  _Block_release(v14);
  swift_release();
  double v22 = (void *)type metadata accessor for CardListController();
  uint64_t v23 = (id (*)(uint64_t, void *))&off_1002CA658;
  aBlock[0] = v15;
  uint64_t v18 = (uint64_t)v17 + OBJC_IVAR____TtC17SequoiaTranslator28InvertedCollectionViewLayout_swipeDelegate;
  swift_beginAccess();
  id v19 = v15;
  sub_1000344BC((uint64_t)aBlock, v18, (uint64_t *)&unk_1002F02B0);
  swift_endAccess();

  return v17;
}

id sub_10002B288(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_10023BF54(a2);
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  id v14 = [self sectionWithGroup:a4];
  [v14 setInterGroupSpacing:*(double *)(a3 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_collectionViewSpacing)];
  [v14 setContentInsets:v7, v9, v11, v13];
  return v14;
}

id sub_10002B338()
{
  return sub_10002B358(&OBJC_IVAR____TtC17SequoiaTranslator18CardListController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_10002B3BC);
}

id sub_10002B358(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    double v6 = (void *)a2(v2);
    double v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10002B3BC(uint64_t a1)
{
  id v2 = sub_10002AF9C();
  id v3 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v2 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setShowsVerticalScrollIndicator:0];
  [v3 setAlwaysBounceVertical:1];
  [v3 setAllowsMultipleSelection:0];
  [v3 setDataSource:a1];
  [v3 setDelegate:a1];
  [v3 setContentInsetAdjustmentBehavior:2];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 systemGroupedBackgroundColor];
  [v5 setBackgroundColor:v6];

  type metadata accessor for CardCollectionViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v8 = String._bridgeToObjectiveC()();
  [v5 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v8];

  CGAffineTransformMakeScale(&v12, 1.0, -1.0);
  [v5 setTransform:&v12];
  type metadata accessor for MoreHistoryCollectionViewCell();
  uint64_t v9 = swift_getObjCClassFromMetadata();
  NSString v10 = String._bridgeToObjectiveC()();
  [v5 registerClass:v9 forCellWithReuseIdentifier:v10];

  return v5;
}

void sub_10002B5DC()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for CardListController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  id v2 = v1;
  id v3 = [self clearColor];
  [v2 setBackgroundColor:v3];

  sub_10002B9A4();
  id v4 = [v0 view];
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v5 = v4;
  id v6 = sub_10002B338();
  [v5 addSubview:v6];

  id v7 = [v0 view];
  if (v7)
  {
    NSString v8 = v7;
    id v9 = sub_10002B338();
    sub_10023B960(v9);

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_10002B7E8()
{
  v25.receiver = v0;
  v25.super_class = (Class)type metadata accessor for CardListController();
  [super viewSafeAreaInsetsDidChange];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v2 = v1;
  [v1 safeAreaInsets];
  double v4 = v3;
  double v6 = v5;

  id v7 = [v0 view];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  NSString v8 = v7;
  [v7 safeAreaInsets];
  double v10 = v9;

  id v11 = [v0 view];
  if (!v11)
  {
LABEL_12:
    __break(1u);
    return;
  }
  CGAffineTransform v12 = v11;
  [v11 safeAreaInsets];
  double v14 = v13;

  id v15 = sub_10002B338();
  [v15 contentInset];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;

  if (v17 != v10 || v19 != v4 || v21 != v14 || v23 != v6)
  {
    id v24 = sub_10002B338();
    [v24 setContentInset:v10, v4, v14, v6];
  }
}

uint64_t sub_10002B9A4()
{
  uint64_t v1 = v0;
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  id v58 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  double v56 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v55 - 8);
  uint64_t v7 = __chkstk_darwin(v55);
  id v54 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v53 = (char *)&v45 - v9;
  uint64_t v52 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager;
  double v10 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager);
  id v11 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_conversation);
  id v12 = v10;
  id v13 = v11;
  id v14 = sub_10008CD5C();

  sub_1000C45C0(v14);
  uint64_t v60 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v16 = aBlock[0];
  if (!(aBlock[0] >> 62))
  {
    uint64_t v17 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v17 >= 1)
  {
    uint64_t v18 = 0;
    unint64_t v49 = v16 & 0xC000000000000001;
    id v48 = (void (**)(char *, uint64_t))(v6 + 8);
    id v47 = v64;
    id v46 = (void (**)(char *, uint64_t))(v2 + 8);
    NSString v45 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v51 = v16;
    uint64_t v50 = v17;
    double v19 = v56;
    uint64_t v20 = v59;
    do
    {
      if (v49) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v21 = *(id *)(v16 + 8 * v18 + 32);
      }
      double v22 = v21;
      ++v18;
      double v23 = (char *)*(id *)(v60 + v52);
      id v24 = v53;
      id v61 = v22;
      dispatch thunk of PersistedTranslation.sourceLocale.getter();
      objc_super v25 = v54;
      dispatch thunk of PersistedTranslation.targetLocale.getter();
      id v26 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v28 = Locale._bridgeToObjectiveC()().super.isa;
      id v29 = [v26 initWithSourceLocale:isa targetLocale:v28];

      id v30 = *v48;
      uint64_t v31 = v55;
      (*v48)(v25, v55);
      v30(v24, v31);
      id v32 = *(void **)&v23[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_dictionaryQueue];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v23;
      *(void *)(v33 + 24) = v29;
      v64[2] = sub_1000344AC;
      v64[3] = v33;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v64[0] = sub_10008BA1C;
      v64[1] = &unk_1002CAB20;
      id v34 = _Block_copy(aBlock);
      id v35 = v23;
      id v36 = v32;
      id v37 = v29;
      static DispatchQoS.unspecified.getter();
      uint64_t v62 = _swiftEmptyArrayStorage;
      sub_1000342EC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      id v38 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v34);

      (*v46)(v38, v20);
      (*v45)(v19, v57);
      swift_release();
      uint64_t v39 = (uint64_t *)&v35[OBJC_IVAR____TtC17SequoiaTranslator17DictionaryManager_pairAvailability];
      swift_beginAccess();
      uint64_t v40 = *v39;
      swift_bridgeObjectRetain();
      id v41 = [v37 canonicalIdentifier];
      uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v43;

      sub_1000F8844(v42, v44, v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v51;
    }
    while (v50 != v18);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_10002C034(char a1)
{
  v24.receiver = (id)v1;
  v24.super_class = (Class)type metadata accessor for CardListController();
  [super viewDidAppear:a1 & 1];
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_initialAppearance;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_initialAppearance) == 1)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session);
    uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation;
    if (*(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation))
    {
      uint64_t v22 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_initialAppearance;
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v23 >> 62) {
        goto LABEL_20;
      }
      uint64_t v6 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      while (v6)
      {
        uint64_t v21 = v1;
        uint64_t v7 = 0;
        while (1)
        {
          id v8 = (v23 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : *(id *)(v23 + 8 * v7 + 32);
          uint64_t v1 = (uint64_t)v8;
          uint64_t v9 = *(void **)(v4 + v5);
          if (v9) {
            break;
          }

          uint64_t v12 = v7 + 1;
          if (__OFADD__(v7, 1)) {
            goto LABEL_19;
          }
LABEL_15:
          ++v7;
          if (v12 == v6)
          {
            uint64_t v7 = 0;
            int v13 = 1;
            uint64_t v1 = v21;
            goto LABEL_22;
          }
        }
        type metadata accessor for PersistedTranslation();
        id v10 = (id)v1;
        id v11 = v9;
        uint64_t v1 = static NSObject.== infix(_:_:)();

        if (v1)
        {
          int v13 = 0;
          uint64_t v1 = v21;
          goto LABEL_22;
        }
        uint64_t v12 = v7 + 1;
        if (!__OFADD__(v7, 1)) {
          goto LABEL_15;
        }
LABEL_19:
        __break(1u);
LABEL_20:
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = 0;
      int v13 = 1;
LABEL_22:
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v3 = v22;
    }
    else
    {
      uint64_t v7 = 0;
      int v13 = 0;
    }
    sub_10002C3FC(v7, v13);
    *(unsigned char *)(v1 + v3) = 0;
    sub_10002E220();
    id v14 = [self defaultCenter];
    if (qword_1002EE558 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_10030E6B8;
    sub_100007620((uint64_t *)&unk_1002F97D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002488D0;
    AnyHashable.init<A>(_:)();
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize);
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize + 8);
    type metadata accessor for CGSize(0);
    *(void *)(inited + 96) = v19;
    *(void *)(inited + 72) = v17;
    *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v18;
    sub_1001FF548(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v14 postNotificationName:v15 object:0 userInfo:isa];
  }
}

uint64_t sub_10002C3FC(uint64_t a1, int a2)
{
  LODWORD(v61) = a2;
  uint64_t v53 = a1;
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  __chkstk_darwin(v8);
  double v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v54 + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v52 = (char *)&v52 - v16;
  uint64_t v17 = self;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000341EC;
  *(void *)(v19 + 24) = v18;
  id v67 = sub_1000345D4;
  id v68 = (void *)v19;
  uint64_t v62 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  id v65 = sub_10002CE3C;
  id v66 = &unk_1002CAA30;
  uint64_t v20 = _Block_copy(&aBlock);
  id v21 = v2;
  swift_retain();
  swift_release();
  [v17 performWithoutAnimation:v20];
  _Block_release(v20);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v23 = sub_10002B338();
  [v23 contentOffset];
  uint64_t v3 = v24;
  uint64_t v4 = v25;

  id v26 = sub_10002B338();
  id v27 = [v26 indexPathsForSelectedItems];

  if (v27)
  {
    uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v19 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((unint64_t)aBlock >> 62) {
    goto LABEL_25;
  }
  uint64_t v28 = *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  swift_bridgeObjectRelease();
  if (v28 <= 0) {
    goto LABEL_13;
  }
  if (v61)
  {
    id v41 = sub_10002B338();
    if (v19)
    {
      uint64_t v42 = v54;
      if (*(void *)(v19 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v7, v19 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), v12);
        uint64_t v43 = 0;
      }
      else
      {
        uint64_t v43 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v7, v43, 1, v12);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v12) == 1)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v7, 1, 1, v12);
      Class isa = 0;
    }
    [v41 selectItemAtIndexPath:isa animated:0 scrollPosition:1];

    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    NSString v45 = (void *)static OS_dispatch_queue.main.getter();
    id v46 = (void *)swift_allocObject();
    v46[2] = v21;
    v46[3] = v3;
    v46[4] = v4;
    id v67 = sub_100034284;
    id v68 = v46;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    id v65 = sub_10008BA1C;
    id v66 = &unk_1002CAA80;
    id v47 = _Block_copy(&aBlock);
    id v48 = v21;
    swift_release();
    unint64_t v49 = v55;
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000342EC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    uint64_t v50 = v56;
    uint64_t v51 = v60;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v58);
    return swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((unint64_t)aBlock >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v29 <= v53)
  {
LABEL_13:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  id v30 = v52;
  IndexPath.init(item:section:)();
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v61 = static OS_dispatch_queue.main.getter();
  uint64_t v31 = v54;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v15, v30, v12);
  unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v19;
  *(void *)(v33 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v33 + v32, v15, v12);
  id v67 = sub_100034408;
  id v68 = (void *)v33;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  id v65 = sub_10008BA1C;
  id v66 = &unk_1002CAAD0;
  id v34 = _Block_copy(&aBlock);
  id v35 = v21;
  swift_release();
  id v36 = v55;
  static DispatchQoS.unspecified.getter();
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  sub_1000342EC((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  id v37 = v56;
  uint64_t v38 = v60;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v39 = (void *)v61;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v58);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v12);
  return swift_release();
}

uint64_t sub_10002CE3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_10002CE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4B60);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || !*(void *)(a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_6;
  }
  uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
  v15(v10, a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v22(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    sub_10000B070((uint64_t)v10, (uint64_t *)&unk_1002F4B60);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v15(v8, (unint64_t)v14, v11);
  v22(v8, 0, 1, v11);
  sub_10002DB60((uint64_t)v8, 0);
  sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4B60);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_7:
  id v16 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v16 selectItemAtIndexPath:isa animated:0 scrollPosition:0];

  sub_10002D180(a3, 0);
  id v18 = sub_10002B338();
  [v18 layoutIfNeeded];

  id v19 = sub_10002B338();
  Class v20 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v19 scrollToItemAtIndexPath:v20 atScrollPosition:4 animated:0];
}

void sub_10002D180(uint64_t a1, int a2)
{
  int v87 = a2;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v85 - v9;
  uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  uint64_t v16 = (uint64_t)&v2[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_currentExpandedIndexPath];
  swift_beginAccess();
  sub_1000344BC((uint64_t)v13, v16, (uint64_t *)&unk_1002F4B60);
  swift_endAccess();
  uint64_t v17 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session;
  Class v88 = v2;
  swift_retain();
  unint64_t v18 = IndexPath.item.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (((unint64_t)aBlock & 0xC000000000000001) == 0)
  {
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v19 = aBlock[v18 + 4];
      goto LABEL_5;
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return;
  }
  id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  Class v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)&v88[v17];
  uint64_t v22 = *(void **)(v21 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
  *(void *)(v21 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = v20;
  id v23 = v20;

  id v24 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v26 = [v24 cellForItemAtIndexPath:isa];

  if (!v26)
  {
LABEL_20:

    return;
  }
  type metadata accessor for CardCollectionViewCell();
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {

    goto LABEL_20;
  }
  uint64_t v28 = v27;
  id v85 = v26;
  id v29 = sub_1000298E0();
  id v30 = *(id *)&v88[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager];
  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  id v86 = v23;
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  id v31 = objc_allocWithZone((Class)_LTLocalePair);
  Class v32 = Locale._bridgeToObjectiveC()().super.isa;
  Class v33 = Locale._bridgeToObjectiveC()().super.isa;
  id v34 = [v31 initWithSourceLocale:v32 targetLocale:v33];

  id v35 = *(void (**)(char *, uint64_t))(v5 + 8);
  v35(v8, v4);
  v35(v10, v4);
  LOBYTE(v32) = sub_1000C45C0(v34);

  id v36 = sub_1000272B4();
  [(objc_class *)v36 setHidden:(v32 & 1) == 0];

  uint64_t v37 = OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded;
  char v38 = *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
  *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) = 1;
  if ((v38 & 1) == 0) {
    sub_10002A648();
  }
  id v39 = [v88 view];
  if (!v39) {
    goto LABEL_36;
  }
  uint64_t v40 = v39;
  id v41 = [v39 safeAreaLayoutGuide];

  [v41 layoutFrame];
  CGFloat v43 = v42;
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;

  v95.origin.x = v43;
  v95.origin.y = v45;
  v95.size.width = v47;
  v95.size.height = v49;
  double Height = CGRectGetHeight(v95);
  *(double *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight) = Height;
  uint64_t v51 = *(void **)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight);
  uint64_t v52 = v85;
  if (v51)
  {
    if ((*(unsigned char *)(v28 + v37) & 1) == 0) {
      double Height = *(double *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight);
    }
    [v51 setConstant:Height];
  }
  uint64_t v53 = *(void **)&v88[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_conversation];
  swift_getKeyPath();
  swift_getKeyPath();
  id v54 = v53;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  double v56 = aBlock;
  uint64_t v55 = v90;
  id v57 = [v86 identifier];
  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v60 = v59;

  if (v55)
  {
    if (v56 == (void **)v58 && v55 == v60)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v61 = *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
      *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = 1;
      if (v61) {
        goto LABEL_28;
      }
    }
    else
    {
      char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v64 = *(unsigned __int8 *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
      *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = v63 & 1;
      if ((v63 & 1) == v64) {
        goto LABEL_28;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v62 = *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
    *(unsigned char *)(v28 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = 0;
    if ((v62 & 1) == 0) {
      goto LABEL_28;
    }
  }
  id v65 = (char *)sub_1000298E0();
  id v66 = *(id *)&v65[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

  id v67 = sub_100027610();
  id v68 = [self configurationWithScale:3];
  swift_bridgeObjectRetain();
  id v69 = v68;
  NSString v70 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v71 = [self systemImageNamed:v70 withConfiguration:v69];

  if (v71)
  {
    id v72 = [self whiteColor];
    id v73 = [v71 imageWithTintColor:v72];
  }
  else
  {
    id v73 = 0;
  }
  [(objc_class *)v67 setImage:v73 forState:0];
  swift_bridgeObjectRelease();

LABEL_28:
  if (v87)
  {
    double v74 = self;
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v28;
    id v93 = sub_1000341DC;
    uint64_t v94 = v75;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v90 = 1107296256;
    uint64_t v91 = sub_10008BA1C;
    id v92 = &unk_1002CA9B8;
    id v76 = _Block_copy(&aBlock);
    id v77 = v52;
    swift_release();
    [v74 animateWithDuration:v76 animations:0.25];
    _Block_release(v76);
  }
  id v78 = self;
  uint64_t v79 = swift_allocObject();
  id v80 = v88;
  *(void *)(v79 + 16) = v88;
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = sub_100034100;
  *(void *)(v81 + 24) = v79;
  id v93 = sub_1000345D4;
  uint64_t v94 = v81;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v90 = 1107296256;
  uint64_t v91 = sub_10002CE3C;
  id v92 = &unk_1002CA968;
  id v82 = _Block_copy(&aBlock);
  id v83 = v80;
  swift_retain();
  swift_release();
  [v78 performWithoutAnimation:v82];

  _Block_release(v82);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_35;
  }
}

uint64_t sub_10002DB60(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v51[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C3A4(a1, (uint64_t)v8, (uint64_t *)&unk_1002F4B60);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4B60);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
  id v14 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v16 = [v14 cellForItemAtIndexPath:isa];

  if (!v16) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  type metadata accessor for CardCollectionViewCell();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v18 = v17;
  int v52 = a2;
  uint64_t v19 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session;
  id v54 = v3;
  swift_retain();
  unint64_t v20 = IndexPath.item.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (((unint64_t)aBlock & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v20 >= *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  id v21 = aBlock[v20 + 4];
LABEL_9:
  id v53 = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void **)(*(void *)&v54[v19] + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
  if (v22)
  {
    type metadata accessor for PersistedTranslation();
    id v23 = v53;
    id v24 = v22;
    char v25 = static NSObject.== infix(_:_:)();

    if (v25)
    {
      uint64_t v26 = *(void *)&v54[v19];
      uint64_t v27 = *(void **)(v26 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
      *(void *)(v26 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation) = 0;
    }
  }
  int v28 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
  *(unsigned char *)(v18 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) = 0;
  if (v28 == 1) {
    sub_10002A648();
  }
  char v29 = *(unsigned char *)(v18 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
  *(unsigned char *)(v18 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = 0;
  char v30 = v52;
  if (v29)
  {
    id v31 = (char *)sub_1000298E0();
    id v32 = *(id *)&v31[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

    Class v33 = sub_100027610();
    id v34 = [self configurationWithScale:3];
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = [self systemImageNamed:v35 withConfiguration:v34];

    if (v36)
    {
      uint64_t v37 = v33;
      id v38 = [self whiteColor];
      id v39 = [v36 imageWithTintColor:v38];

      Class v33 = v37;
      char v30 = v52;
    }
    else
    {
      id v39 = 0;
    }
    [(objc_class *)v33 setImage:v39 forState:0];
  }
  if (v30)
  {
    uint64_t v40 = self;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v18;
    uint64_t v59 = sub_100034618;
    uint64_t v60 = v41;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    id v57 = sub_10008BA1C;
    uint64_t v58 = &unk_1002CA8F0;
    double v42 = _Block_copy(&aBlock);
    id v43 = v16;
    swift_release();
    [v40 animateWithDuration:v42 animations:0.25];
    _Block_release(v42);
  }
  double v44 = self;
  uint64_t v45 = swift_allocObject();
  double v46 = v54;
  *(void *)(v45 + 16) = v54;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_100034100;
  *(void *)(v47 + 24) = v45;
  uint64_t v59 = sub_100034114;
  uint64_t v60 = v47;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  id v57 = sub_10002CE3C;
  uint64_t v58 = &unk_1002CA8A0;
  double v48 = _Block_copy(&aBlock);
  id v49 = v46;
  swift_retain();
  swift_release();
  [v44 performWithoutAnimation:v48];
  _Block_release(v48);

  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_28;
  }
  return result;
}

void sub_10002E220()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)type metadata accessor for CardCollectionViewCell()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = [v0 view];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 safeAreaLayoutGuide];

    [v5 layoutFrame];
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;
    CGFloat v13 = v12;

    v68.origin.x = v7;
    v68.origin.y = v9;
    v68.size.width = v11;
    v68.size.height = v13;
    double Width = CGRectGetWidth(v68);
    id v14 = sub_1000298E0();
    id v15 = sub_100208CFC();

    [v15 textContainerInset];
    double v17 = v16;

    id v18 = sub_1000298E0();
    id v19 = sub_100208CFC();

    [v19 textContainerInset];
    double v21 = v20;

    id v22 = sub_1000298E0();
    id v23 = sub_100208CFC();

    [v23 contentInset];
    double v25 = v24;

    id v26 = sub_1000298E0();
    id v27 = sub_100208CFC();

    [v27 contentInset];
    double v29 = v28;

    id v30 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
    id v31 = self;
    [v30 pointSize];
    id v32 = [v31 systemFontOfSize:];
    id v33 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleFootnote];
    id v34 = [v33 scaledFontForFont:v32 maximumPointSize:1.79769313e308];

    id v35 = objc_allocWithZone((Class)NSString);
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = [v35 initWithString:v36];

    sub_100007620(&qword_1002FC3D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002488D0;
    *(void *)(inited + 32) = NSFontAttributeName;
    *(void *)(inited + 64) = sub_10000B0CC(0, (unint64_t *)&qword_1002F02A0);
    *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v34;
    id v39 = NSFontAttributeName;
    id v40 = v34;
    sub_1001FF520(inited);
    type metadata accessor for Key(0);
    sub_1000342EC((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v37 boundingRectWithSize:1 options:isa context:0 1.79769313e308 1.79769313e308];
    CGFloat v43 = v42;
    CGFloat v45 = v44;
    CGFloat v47 = v46;
    CGFloat v49 = v48;

    v69.origin.x = v43;
    v69.origin.y = v45;
    v69.size.width = v47;
    v69.size.height = v49;
    double Height = CGRectGetHeight(v69);

    id v51 = [v1 view];
    if (v51)
    {
      int v52 = v51;
      double v53 = ceil(Height);
      double v54 = v53 + v53;
      double v55 = Width - v17 - v21 - v25 - v29 + -64.0;
      id v56 = [v51 safeAreaLayoutGuide];

      [v56 layoutFrame];
      CGFloat v58 = v57;
      CGFloat v60 = v59;
      CGFloat v62 = v61;
      CGFloat v64 = v63;

      v70.origin.x = v58;
      v70.origin.y = v60;
      v70.size.width = v62;
      v70.size.height = v64;
      double v65 = CGRectGetHeight(v70);

      id v66 = (double *)&v1[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize];
      *id v66 = floor(v55);
      v66[1] = floor((v65 + -88.0 + -34.0 + -1.0 - v54) / 2.3);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10002E750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardListController();
  return [super dealloc];
}

uint64_t sub_10002E84C()
{
  return type metadata accessor for CardListController();
}

uint64_t type metadata accessor for CardListController()
{
  uint64_t result = qword_1002F0130;
  if (!qword_1002F0130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002E8A0()
{
  sub_10002E994();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10002E994()
{
  if (!qword_1002F0140)
  {
    type metadata accessor for IndexPath();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F0140);
    }
  }
}

id sub_10002E9EC()
{
  return sub_10002B338();
}

id sub_10002EA9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v9 = (objc_class *)type metadata accessor for CardListController();
  v30.receiver = v1;
  v30.super_class = v9;
  [super viewWillLayoutSubviews];
  uint64_t v10 = (uint64_t)v1 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_currentExpandedIndexPath;
  swift_beginAccess();
  sub_10000C3A4(v10, (uint64_t)v4, (uint64_t *)&unk_1002F4B60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return (id)sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F4B60);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  id v12 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v14 = [v12 cellForItemAtIndexPath:isa];

  if (!v14) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for CardCollectionViewCell();
  uint64_t v15 = swift_dynamicCastClass();
  if (!v15)
  {
LABEL_10:

    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v16 = v15;
  id result = [v1 view];
  if (result)
  {
    double v17 = result;
    id v18 = [result safeAreaLayoutGuide];

    [v18 layoutFrame];
    CGFloat v20 = v19;
    CGFloat v22 = v21;
    CGFloat v24 = v23;
    CGFloat v26 = v25;

    v31.origin.x = v20;
    v31.origin.y = v22;
    v31.size.width = v24;
    v31.size.height = v26;
    double Height = CGRectGetHeight(v31);
    *(double *)(v16 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight) = Height;
    double v28 = *(void **)(v16 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight);
    if (v28)
    {
      if ((*(unsigned char *)(v16 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) & 1) == 0) {
        double Height = *(double *)(v16 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight);
      }
      [v28 setConstant:Height];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_10002EEE0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v96 = (char *)&v93 - v11;
  NSString v12 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v97 = a1;
  id v14 = [a1 dequeueReusableCellWithReuseIdentifier:v12 forIndexPath:isa];

  type metadata accessor for CardCollectionViewCell();
  uint64_t v15 = swift_dynamicCastClassUnconditional();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v98[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v98[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (IndexPath.row.getter() >= v16) {
    return;
  }
  swift_retain();
  unint64_t v17 = IndexPath.item.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v93 = v7;
  uint64_t v94 = v6;
  CGRect v95 = v10;
  if ((v98[0] & 0xC000000000000001) == 0)
  {
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(void *)((v98[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v18 = *(id *)(v98[0] + 8 * v17 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_40;
  }
  id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  double v19 = v18;
  swift_bridgeObjectRelease();
  CGFloat v20 = *(void **)&v3[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_conversation];
  swift_getKeyPath();
  swift_getKeyPath();
  id v21 = v20;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v23 = v98[0];
  uint64_t v22 = v98[1];
  id v24 = [v19 identifier];
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;

  if (v22)
  {
    if (v23 == v25 && v22 == v27)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v28 = *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
      *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = 1;
      if (v28) {
        goto LABEL_20;
      }
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v31 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
      *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = v30 & 1;
      if ((v30 & 1) == v31) {
        goto LABEL_20;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    char v29 = *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isPlaying) = 0;
    if ((v29 & 1) == 0) {
      goto LABEL_20;
    }
  }
  id v32 = (char *)sub_1000298E0();
  id v33 = *(id *)&v32[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

  id v34 = sub_100027610();
  id v35 = [self configurationWithScale:3];
  swift_bridgeObjectRetain();
  id v36 = v35;
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = [self systemImageNamed:v37 withConfiguration:v36];

  if (v38)
  {
    id v39 = [self whiteColor];
    id v40 = [v38 imageWithTintColor:v39];
  }
  else
  {
    id v40 = 0;
  }
  -[objc_class setImage:forState:](v34, "setImage:forState:", v40, 0, v93, v94);
  swift_bridgeObjectRelease();

LABEL_20:
  id v41 = sub_1000298E0();
  sub_1001FFD78(v19);

  id v42 = [v3 view];
  if (!v42)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    return;
  }
  CGFloat v43 = v42;
  id v44 = [v42 safeAreaLayoutGuide];

  [v44 layoutFrame];
  CGFloat v46 = v45;
  CGFloat v48 = v47;
  CGFloat v50 = v49;
  CGFloat v52 = v51;

  v101.origin.x = v46;
  v101.origin.y = v48;
  v101.size.width = v50;
  v101.size.height = v52;
  double Height = CGRectGetHeight(v101);
  *(double *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight) = Height;
  double v54 = *(void **)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_minHeight);
  double v55 = v95;
  if (v54)
  {
    if ((*(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) & 1) == 0) {
      double Height = *(double *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_collapsedMinHeight);
    }
    [v54 setConstant:Height v93, v94];
  }
  id v56 = (char *)sub_1000298E0();
  double v57 = *(double *)&v3[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize];
  double v58 = *(double *)&v3[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize + 8];
  id v59 = sub_1000298E0();
  id v60 = sub_100208CFC();

  id v61 = [v60 text];
  if (!v61) {
    goto LABEL_41;
  }
  uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v63;

  double v65 = (void *)sub_100239B68(v57, v58, v62, v64, 0);
  swift_bridgeObjectRelease();
  id v66 = *(void **)&v56[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont];
  *(void *)&v56[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont] = v65;
  id v67 = v65;

  sub_10020BC64();
  uint64_t v68 = type metadata accessor for CardListController();
  uint64_t v99 = v68;
  id v100 = &off_1002CA668;
  v98[0] = v3;
  uint64_t v69 = v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_delegate;
  swift_beginAccess();
  CGRect v70 = v3;
  sub_1000344BC((uint64_t)v98, v69, &qword_1002F00B8);
  swift_endAccess();
  id v71 = (char *)sub_1000298E0();
  id v72 = *(id *)&v71[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

  uint64_t v99 = v68;
  id v100 = &off_1002CA690;
  v98[0] = v70;
  uint64_t v73 = (uint64_t)v72 + OBJC_IVAR____TtC17SequoiaTranslator11CardActions_delegate;
  swift_beginAccess();
  double v74 = v70;
  sub_1000344BC((uint64_t)v98, v73, (uint64_t *)&unk_1002F0290);
  swift_endAccess();

  id v75 = [v97 indexPathsForSelectedItems];
  if (!v75)
  {
    uint64_t v79 = (unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
    char v92 = *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
    *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) = 0;
    if ((v92 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  id v76 = v75;
  type metadata accessor for IndexPath();
  uint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v78);
  *(&v93 - 2) = a2;
  LOBYTE(v76) = sub_10011417C((uint64_t (*)(char *))sub_1000340E0, (uint64_t)(&v93 - 4), v77);
  swift_bridgeObjectRelease();
  uint64_t v79 = (unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
  int v80 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded);
  *(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) = v76 & 1;
  if ((v76 & 1) != v80) {
LABEL_28:
  }
    sub_10002A648();
LABEL_29:
  id v81 = sub_1000298E0();
  if (*v79 == 1)
  {
    id v82 = *(id *)&v74[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager];
    id v83 = v96;
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    dispatch thunk of PersistedTranslation.targetLocale.getter();
    id v84 = objc_allocWithZone((Class)_LTLocalePair);
    Class v85 = Locale._bridgeToObjectiveC()().super.isa;
    Class v86 = Locale._bridgeToObjectiveC()().super.isa;
    id v87 = [v84 initWithSourceLocale:v85 targetLocale:v86];

    uint64_t v88 = v94;
    id v89 = *(void (**)(char *, uint64_t))(v93 + 8);
    v89(v55, v94);
    v89(v83, v88);
    LOBYTE(v89) = sub_1000C45C0(v87);

    char v90 = v89 ^ 1;
  }
  else
  {
    char v90 = 1;
  }
  uint64_t v91 = sub_1000272B4();
  [(objc_class *)v91 setHidden:v90 & 1];
}

void sub_10002FD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v8 = v7;
  id v15 = [v7 presentedViewController];
  if (v15)
  {
    uint64_t v16 = v15;
    type metadata accessor for DictionaryWordSelectionController();
    uint64_t v17 = swift_dynamicCastClass();
    if (v17)
    {
      id v18 = *(void **)(v17 + OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_dictionaryController);
      v149 = v18;

      if (v18)
      {
        double v19 = &v149[OBJC_IVAR____TtC17SequoiaTranslator24DictionaryViewController_text];
        *(void *)double v19 = a2;
        *((void *)v19 + 1) = a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1000C8CC8();
        goto LABEL_22;
      }
    }
    else
    {
    }
  }
  id v20 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v20 scrollToItemAtIndexPath:isa atScrollPosition:1 animated:1];

  id v22 = sub_10002B338();
  Class v23 = IndexPath._bridgeToObjectiveC()().super.isa;
  v149 = (char *)[v22 cellForItemAtIndexPath:v23];

  if (v149)
  {
    uint64_t v147 = a5;
    type metadata accessor for CardCollectionViewCell();
    uint64_t v24 = swift_dynamicCastClass();
    if (!v24)
    {
LABEL_22:
LABEL_24:

      return;
    }
    uint64_t v25 = (char *)v24;
    char v145 = a6;
    char v146 = a7;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v150 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease_n();
      if ((v26 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      unint64_t v26 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    unint64_t v27 = IndexPath.row.getter();
    if ((v27 & 0x8000000000000000) != 0 || v27 >= v26) {
      goto LABEL_24;
    }
    swift_retain();
    unint64_t v28 = IndexPath.row.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if ((v150 & 0xC000000000000001) == 0)
    {
      if ((v28 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v28 < *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v29 = *(id *)(v150 + 8 * v28 + 32);
        goto LABEL_16;
      }
      __break(1u);
      goto LABEL_34;
    }
LABEL_31:
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
    char v30 = v29;
    swift_bridgeObjectRelease();
    double v31 = *(double *)&v25[OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_expandedMinimumHeight];
    id v32 = objc_allocWithZone((Class)type metadata accessor for DictionaryWordSelectionController());
    id v33 = sub_1000CA9A0(v31);
    uint64_t v34 = OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation;
    id v35 = *(void **)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation];
    *(void *)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translation] = v30;
    id v36 = v30;

    NSString v37 = *(void **)&v33[v34];
    id v38 = v36;
    if (v37)
    {
      id v39 = v37;
      id v40 = sub_1000CA6E8();
      id v38 = sub_1000298E0();

      sub_1001FFD78(v39);
    }

    id v41 = &v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_word];
    *id v41 = a2;
    v41[1] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    id v42 = &v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initialTouchPointInTargetView];
    *(void *)id v42 = a4;
    *((void *)v42 + 1) = v147;
    v42[16] = v145 & 1;
    v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_initiallySetHighlightToFirstWord] = v146 & 1;
    CGFloat v43 = sub_1000CA6E8();
    id v44 = (char *)sub_1000298E0();

    double v45 = (char *)sub_1000298E0();
    id v46 = *(id *)&v45[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont];

    double v47 = *(void **)&v44[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont];
    *(void *)&v44[OBJC_IVAR____TtC17SequoiaTranslator15TranslationCard_expandedFont] = v46;
    id v48 = v46;

    sub_10020BC64();
    uint64_t v49 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v50 = swift_allocObject();
    swift_unknownObjectWeakInit();
    double v51 = (void (*)(uint64_t))swift_allocObject();
    *((void *)v51 + 2) = v49;
    *((void *)v51 + 3) = v50;
    *((void *)v51 + 4) = v8;
    CGFloat v52 = (void (**)(uint64_t))&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translationAlternativeSelectedHandler];
    uint64_t v53 = *(void *)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_translationAlternativeSelectedHandler];
    *CGFloat v52 = sub_1000324D8;
    v52[1] = v51;
    double v54 = v8;
    sub_1000324E4(v53);
    [v25 bounds];
    [v25 convertRect:0 toView:];
    CGFloat v56 = v55;
    CGFloat v58 = v57;
    CGFloat v60 = v59;
    CGFloat v62 = v61;
    id v63 = sub_10002B338();
    id v64 = sub_10002B338();
    [v64 bounds];
    double v66 = v65;
    double v68 = v67;
    double v70 = v69;
    double v72 = v71;

    [v63 convertRect:0 toView:v66];
    CGFloat v74 = v73;
    double v76 = v75;
    CGFloat v78 = v77;
    CGFloat v80 = v79;

    v152.origin.x = v74;
    v152.origin.y = v76;
    v152.size.width = v78;
    v152.size.height = v80;
    double v81 = v76 + CGRectGetHeight(v152);
    id v82 = sub_10002B338();
    [v82 safeAreaInsets];
    double v84 = v83;

    v153.origin.x = v56;
    v153.origin.y = v58;
    v153.size.width = v60;
    v153.size.height = v62;
    double v85 = v81 - v84 - CGRectGetHeight(v153);
    v154.origin.x = v56;
    v154.origin.y = v58;
    v154.size.width = v60;
    v154.size.height = v62;
    CGFloat Width = CGRectGetWidth(v154);
    v155.origin.x = v56;
    v155.origin.y = v58;
    v155.size.width = v60;
    v155.size.height = v62;
    CGFloat Height = CGRectGetHeight(v155);
    uint64_t v88 = (CGFloat *)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalCardFrame];
    CGFloat *v88 = v56;
    v88[1] = v85;
    v88[2] = Width;
    v88[3] = Height;
    id v89 = sub_10002B338();
    [v89 frame];
    CGFloat v91 = v90;
    CGFloat v93 = v92;
    CGFloat v95 = v94;
    CGFloat v97 = v96;

    v156.origin.x = v91;
    v156.origin.y = v93;
    v156.size.width = v95;
    v156.size.height = v97;
    double MinY = CGRectGetMinY(v156);
    id v98 = sub_10002B338();
    [v98 adjustedContentInset];
    double v100 = v99;

    id v101 = sub_10002B338();
    [v101 frame];
    CGFloat v103 = v102;
    CGFloat v105 = v104;
    CGFloat v107 = v106;
    CGFloat v109 = v108;

    v157.origin.x = v103;
    v157.origin.y = v105;
    v157.size.width = v107;
    v157.size.height = v109;
    double MaxY = CGRectGetMaxY(v157);
    id v111 = sub_10002B338();
    [v111 adjustedContentInset];
    double v113 = v112;

    double v114 = *(double *)&v54[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_collectionViewSpacing];
    id v115 = sub_10002B338();
    [v115 frame];
    CGFloat v117 = v116;
    CGFloat v119 = v118;
    CGFloat v121 = v120;
    CGFloat v123 = v122;

    v158.origin.x = v117;
    v158.origin.y = v119;
    v158.size.width = v121;
    v158.size.height = v123;
    double MinX = CGRectGetMinX(v158);
    id v125 = sub_10002B338();
    [v125 contentSize];
    double v127 = v126;

    id v128 = [v54 view];
    if (v128)
    {
      long long v129 = v128;
      double v130 = v114;
      [v128 convertRect:0 toView:MinX, MinY + v100, v127, MaxY - v113 + v114 - (MinY + v100)];
      uint64_t v132 = v131;
      uint64_t v134 = v133;
      uint64_t v136 = v135;
      uint64_t v138 = v137;

      v139 = &v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_originalVisibleScrollRect];
      void *v139 = v132;
      v139[1] = v134;
      v139[2] = v136;
      v139[3] = v138;
      *(double *)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_scrollViewAdditionalContentHeight] = v130;
      id v140 = [v54 view];
      if (v140)
      {
        v141 = v140;
        id v142 = [v140 window];

        if (v142)
        {
          id v143 = [v142 snapshotViewAfterScreenUpdates:0];
        }
        else
        {
          id v143 = 0;
        }
        v144 = *(void **)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView];
        *(void *)&v33[OBJC_IVAR____TtC17SequoiaTranslator33DictionaryWordSelectionController_backgroundView] = v143;

        [v33 setModalPresentationStyle:0];
        [v54 presentViewController:v33 animated:0 completion:0];

        return;
      }
LABEL_35:
      __break(1u);
      return;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
}

void sub_100030650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    swift_beginAccess();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      PersistedTranslation.selectedAlternativeIndex.setter();
      sub_1000295C0(*(void *)(a4 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session)+ OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v10);
      sub_100029624(v10, v10[3]);
      dispatch thunk of TranslationStore.save()();
      sub_10000AB68((uint64_t)v10);
      id v9 = sub_1000298E0();
      sub_1001FFD78(v8);

      uint64_t v6 = v9;
    }
  }
}

uint64_t sub_10003075C()
{
  type metadata accessor for CardCollectionViewCell();
  uint64_t v1 = swift_dynamicCastClass();
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = v0;
  }
  else
  {
    id v4 = [v0 superview];
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v2 = sub_10003075C();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1000307D4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v48 = a1;
  id v49 = a2;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  CGFloat v52 = (char *)&v48 - v12;
  uint64_t v13 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v48 - v21;
  id v23 = sub_10002B338();
  id v24 = [v23 indexPathForCell:a5, v48, v49];

  if (v24)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v25(v15, v20, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      v25(v22, v15, v16);
      swift_retain();
      unint64_t v26 = IndexPath.row.getter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      if ((v55 & 0xC000000000000001) == 0)
      {
        if ((v26 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v26 < *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v27 = *(id *)(v55 + 8 * v26 + 32);
          goto LABEL_7;
        }
        __break(1u);
LABEL_15:
        __break(1u);
        return;
      }
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
      unint64_t v28 = v27;
      swift_bridgeObjectRelease();
      id v29 = sub_1000298E0();
      id v30 = sub_100208CFC();

      id v31 = [v30 text];
      if (v31)
      {
        NSString v32 = String._bridgeToObjectiveC()();
        id v33 = [v31 stringByReplacingCharactersInRange:v50 withString:v51];

        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v50 = v35;
        uint64_t v51 = v34;

        id v49 = *(id *)(v6 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_conversation);
        id v36 = [v28 identifier];
        uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v38 = v37;

        id v39 = v52;
        dispatch thunk of PersistedTranslation.sourceLocale.getter();
        dispatch thunk of PersistedTranslation.targetLocale.getter();
        id v40 = v28;
        id v41 = objc_allocWithZone((Class)_LTLocalePair);
        Class isa = Locale._bridgeToObjectiveC()().super.isa;
        Class v43 = Locale._bridgeToObjectiveC()().super.isa;
        id v44 = [v41 initWithSourceLocale:isa targetLocale:v43];

        uint64_t v45 = v54;
        id v46 = *(void (**)(char *, uint64_t))(v53 + 8);
        v46(v11, v54);
        v46(v39, v45);
        double v47 = v49;
        sub_10008C144(v48, v38, v51, v50, v44);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
        return;
      }
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  sub_10000B070((uint64_t)v15, (uint64_t *)&unk_1002F4B60);
}

uint64_t sub_100030CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24[-1] - v13;
  id v15 = sub_10002B338();
  id v16 = [v15 indexPathForCell:a2];

  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4B60);
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v17(v7, v12, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4B60);
  }
  v17(v14, v7, v8);
  uint64_t v18 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session;
  swift_retain();
  unint64_t v19 = IndexPath.row.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((v24[0] & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if ((v19 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v19 < *(void *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v21 = *(id *)(v24[0] + 8 * v19 + 32);
LABEL_7:
    id v22 = v21;
    swift_bridgeObjectRelease();
    PersistedTranslation.selectedAlternativeIndex.setter();
    sub_1000295C0(*(void *)(v3 + v18) + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v24);
    sub_100029624(v24, v24[3]);
    dispatch thunk of TranslationStore.save()();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return sub_10000AB68((uint64_t)v24);
  }
  __break(1u);
  return result;
}

void sub_100031048(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v40 - v17;
  id v19 = [a1 view];
  if (v19)
  {
    uint64_t v43 = v2;
    uint64_t v44 = v13;
    id v45 = v19;
    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    if (v20)
    {
      id v21 = (void *)v20;
      uint64_t v22 = sub_10003075C();
      if (v22)
      {
        id v23 = (void *)v22;
        uint64_t v41 = v3;
        id v24 = sub_10002B338();
        id v42 = v23;
        id v25 = [v24 indexPathForCell:v23];

        if (v25)
        {
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v26 = v44;
          id v27 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
          v27(v11, v16, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v12) != 1)
          {
            v27(v18, v11, v12);
            swift_retain();
            unint64_t v28 = IndexPath.item.getter();
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            swift_release();
            if ((v46[0] & 0xC000000000000001) == 0)
            {
              if ((v28 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else
              {
                id v29 = v42;
                if (v28 < *(void *)((v46[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  id v30 = *(id *)(v46[0] + 8 * v28 + 32);
LABEL_10:
                  swift_bridgeObjectRelease();
                  dispatch thunk of PersistedTranslation.speechResult.getter();
                  sub_100029624(v46, v47);
                  dispatch thunk of AnnotatedResult.locale.getter();
                  sub_10000AB68((uint64_t)v46);
                  dispatch thunk of PersistedTranslation.translationResult.getter();
                  sub_100029624(v46, v47);
                  dispatch thunk of TranslationResult.locale.getter();
                  sub_10000AB68((uint64_t)v46);
                  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                  if (!Strong)
                  {

                    goto LABEL_19;
                  }
                  NSString v32 = (void *)Strong;
                  id v33 = [v21 text];
                  if (v33)
                  {
                    uint64_t v34 = v33;
                    Class isa = Locale._bridgeToObjectiveC()().super.isa;
                    Class v36 = Locale._bridgeToObjectiveC()().super.isa;
                    [v32 startTranslationWith:v34 sourceLocale:isa targetLocale:v36];

                    swift_unknownObjectRelease();
LABEL_19:
                    uint64_t v38 = *(void (**)(char *, uint64_t))(v41 + 8);
                    uint64_t v39 = v43;
                    v38(v6, v43);
                    v38(v8, v39);
                    (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v12);
                    return;
                  }
LABEL_24:
                  __break(1u);
                  return;
                }
              }
              __break(1u);
              goto LABEL_24;
            }
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            id v29 = v42;
            goto LABEL_10;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v11, 1, 1, v12);
        }

        sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4B60);
        return;
      }
    }
    id v37 = v45;
  }
}

void sub_1000315E0(void *a1, uint64_t a2)
{
  id v45 = a1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v47 = v2;
  uint64_t v48 = (char *)&v44 - v18;
  id v19 = sub_10002B338();
  id v20 = [v19 indexPathForCell:a2];

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_13;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  id v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v21(v12, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_13:
    sub_10000B070((uint64_t)v12, (uint64_t *)&unk_1002F4B60);
    return;
  }
  v21(v48, v12, v13);
  swift_retain();
  unint64_t v22 = IndexPath.row.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((v49 & 0xC000000000000001) != 0)
  {
    id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    id v24 = v23;
    swift_bridgeObjectRelease();
    id v25 = *(id *)(v47 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager);
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    dispatch thunk of PersistedTranslation.targetLocale.getter();
    id v26 = objc_allocWithZone((Class)_LTLocalePair);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v28 = Locale._bridgeToObjectiveC()().super.isa;
    id v29 = [v26 initWithSourceLocale:isa targetLocale:v28];

    id v30 = *(void (**)(char *, uint64_t))(v46 + 8);
    v30(v7, v4);
    v30(v9, v4);
    LOBYTE(v3UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_1000C45C0(v29);

    if ((v30 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v14 + 8))(v48, v13);

      return;
    }
    id v31 = v45;
    id v32 = [v45 view];
    if (v32)
    {
      id v33 = v32;
      type metadata accessor for HighlightTextView();
      uint64_t v34 = swift_dynamicCastClass();
      if (v34)
      {
        uint64_t v35 = v34;
        [v31 locationInView:v34];
        uint64_t v37 = v36;
        uint64_t v39 = v38;
        [v31 locationInView:v35];
        uint64_t v42 = HighlightTextView.getWordAtPoint(_:)(v40, v41);
        if (v43)
        {
          sub_10002FD40((uint64_t)v48, v42, v43, v37, v39, 0, 0);

          swift_bridgeObjectRelease();
LABEL_17:
          (*(void (**)(char *, uint64_t))(v14 + 8))(v48, v13);
          return;
        }
      }
    }
    goto LABEL_17;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v23 = *(id *)(v49 + 8 * v22 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void sub_100031B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a5 deleteCell:isa];

  id v7 = sub_10002AF9C();
  id v8 = sub_10011445C();

  [v8 resetSwipedItemAnimated:1 completion:0];
}

void sub_100031BAC(int a1, int a2, int a3, int a4, id a5, uint64_t a6)
{
  [a5 favorite:a6];
  id v6 = sub_10002AF9C();
  id v7 = sub_10011445C();

  [v7 resetSwipedItemAnimated:1 completion:0];
}

void sub_100031C28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24[-1] - v12;
  id v14 = sub_10002B338();
  id v15 = [v14 indexPathForCell:a1];

  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_10;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_10:
    sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4B60);
    return;
  }
  v16(v13, v6, v7);
  uint64_t v17 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_session;
  swift_retain();
  unint64_t v18 = IndexPath.row.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((v24[0] & 0xC000000000000001) == 0)
  {
    if ((v18 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v18 < *(void *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v19 = *(id *)(v24[0] + 8 * v18 + 32);
      goto LABEL_7;
    }
    __break(1u);
    return;
  }
  id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
  id v20 = v19;
  swift_bridgeObjectRelease();
  sub_1000295C0(*(void *)(v2 + v17) + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v24);
  sub_100029624(v24, v24[3]);
  dispatch thunk of TranslationStore.toggleFavoriteBackground(_:)();
  sub_10000AB68((uint64_t)v24);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  else
  {
    id v21 = sub_1000298E0();
    id v22 = sub_100209C48();

    [v22 setHidden:(dispatch thunk of PersistedTranslation.isFavorite.getter() & 1) == 0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

void sub_100032040(uint64_t a1)
{
  swift_retain();
  unint64_t v2 = IndexPath.row.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v2 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v3 = *(id *)(v12 + 8 * v2 + 32);
LABEL_5:
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1001FDE40(v4);
    swift_release();
    id v5 = sub_10002B338();
    sub_100007620((uint64_t *)&unk_1002F0280);
    uint64_t v6 = type metadata accessor for IndexPath();
    uint64_t v7 = *(void *)(v6 - 8);
    unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1002488D0;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deleteItemsAtIndexPaths:isa];

    id v11 = sub_10002B338();
    [v11 performBatchUpdates:0 completion:0];

    return;
  }
  __break(1u);
}

uint64_t sub_100032354@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000323D8()
{
  return static Published.subscript.setter();
}

uint64_t sub_100032458()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100032490()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000324D8(uint64_t a1)
{
  sub_100030650(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1000324E4(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1000324F4(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)v23 - v10;
  sub_10000C3A4(a1, (uint64_t)v24, (uint64_t *)&unk_1002F02C0);
  if (!v24[3])
  {
    id v21 = (uint64_t *)&unk_1002F02C0;
    id v22 = (char *)v24;
LABEL_14:
    sub_10000B070((uint64_t)v22, v21);
    return;
  }
  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v12 = (void *)v23[1];
  uint64_t v13 = (void *)sub_10003075C();

  if (!v13) {
    return;
  }
  id v14 = sub_10002B338();
  id v15 = [v14 indexPathForCell:v13];

  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_13;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v16(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_13:

    id v21 = (uint64_t *)&unk_1002F4B60;
    id v22 = v4;
    goto LABEL_14;
  }
  v16(v11, v4, v5);
  swift_retain();
  unint64_t v17 = IndexPath.row.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((v24[0] & 0xC000000000000001) != 0)
  {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((v17 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v17 < *(void *)((v24[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(v24[0] + 8 * v17 + 32);
LABEL_10:
    id v19 = v18;
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    v24[0] = v19;
    swift_retain();
    id v20 = v19;
    static Published.subscript.setter();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return;
  }
  __break(1u);
}

void sub_1000328C8(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10000C3A4(a1, (uint64_t)v7, (uint64_t *)&unk_1002F02C0);
  if (!v8) {
    goto LABEL_8;
  }
  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  if (swift_dynamicCast())
  {
    uint64_t v4 = (void *)sub_10003075C();

    if (v4)
    {
      sub_10000C3A4(a1, (uint64_t)v7, (uint64_t *)&unk_1002F02C0);
      if (v8)
      {
        type metadata accessor for ActionButton();
        if (swift_dynamicCast())
        {
          id v5 = v6;
          [v5 setSelected:[v5 isSelected] ^ 1];

          [v4 endEditing:1];
          [v2 favorite:v4];
        }
        else
        {
        }
        return;
      }

LABEL_8:
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F02C0);
    }
  }
}

void sub_100032A2C(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v31 - v10;
  sub_10000C3A4(a1, (uint64_t)v35, (uint64_t *)&unk_1002F02C0);
  if (!v35[3])
  {
    id v29 = (uint64_t *)&unk_1002F02C0;
    id v30 = (char *)v35;
    goto LABEL_15;
  }
  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  if (swift_dynamicCast())
  {
    uint64_t v12 = (void *)v34;
    uint64_t v13 = (void *)sub_10003075C();

    if (v13)
    {
      id v14 = sub_10002B338();
      id v15 = [v14 indexPathForCell:v13];

      if (v15)
      {
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v16(v4, v9, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
        {
          v16(v11, v4, v5);
          swift_retain();
          unint64_t v17 = IndexPath.row.getter();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          if ((v35[0] & 0xC000000000000001) == 0)
          {
            if ((v17 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v17 < *(void *)((v35[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v18 = *(id *)(v35[0] + 8 * v17 + 32);
              goto LABEL_10;
            }
            __break(1u);
            return;
          }
          id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
          id v19 = v18;
          swift_bridgeObjectRelease();
          id v33 = v19;
          uint64_t v20 = dispatch thunk of PersistedTranslation.displayText.getter();
          uint64_t v22 = v21;
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 32) = 0u;
          *(_OWORD *)(v23 + 16) = 0u;
          v35[0] = v20;
          v35[1] = v22;
          uint64_t v34 = 15;
          id v24 = (void *)swift_allocObject();
          v24[2] = v23;
          v24[3] = v20;
          void v24[4] = v22;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_100007620((uint64_t *)&unk_1002F02D0);
          unint64_t v31 = sub_10000C350();
          sub_100014894((unint64_t *)&unk_1002F02E0, (uint64_t *)&unk_1002F02D0);
          StringProtocol.enumerateSubstrings<A>(in:options:_:)();
          swift_release();
          swift_beginAccess();
          uint64_t v32 = *(void *)(v23 + 24);
          uint64_t v25 = *(void *)(v23 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_release();
          if (v25)
          {
            uint64_t v26 = static String._fromSubstring(_:)();
            uint64_t v28 = v27;
            swift_bridgeObjectRelease();
            sub_10002FD40((uint64_t)v11, v26, v28, 0, 0, 1, 1);

            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
          }
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      }

      id v29 = (uint64_t *)&unk_1002F4B60;
      id v30 = v4;
LABEL_15:
      sub_10000B070((uint64_t)v30, v29);
    }
  }
}

void sub_100032F5C(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4B60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)v27 - v14;
  sub_10000C3A4(a2, (uint64_t)v28, (uint64_t *)&unk_1002F02C0);
  if (!v28[3])
  {
    sub_10000B070((uint64_t)v28, (uint64_t *)&unk_1002F02C0);
    return;
  }
  sub_10000B0CC(0, (unint64_t *)&unk_1002F4120);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)v27[1];
    unint64_t v17 = (void *)sub_10003075C();

    if (v17)
    {
      id v18 = sub_10002B338();
      id v19 = [v18 indexPathForCell:v17];

      if (v19)
      {
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v20(v8, v13, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
        {
          v20(v15, v8, v9);
          swift_retain();
          unint64_t v21 = IndexPath.row.getter();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          if ((v28[0] & 0xC000000000000001) == 0)
          {
            if ((v21 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v21 < *(void *)((v28[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v22 = *(id *)(v28[0] + 8 * v21 + 32);
              goto LABEL_10;
            }
            __break(1u);
            JUMPOUT(0x1000333CCLL);
          }
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
          uint64_t v23 = v22;
          swift_bridgeObjectRelease();
          [v17 endEditing:1];
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v24 = LOBYTE(v28[0]);
          double v25 = 0.5;
          switch(a1)
          {
            case 1:
              double v25 = 0.75;
              goto LABEL_17;
            case 2:
              double v25 = 1.0;
              goto LABEL_17;
            case 3:
              double v25 = 1.25;
              goto LABEL_17;
            case 4:
              goto LABEL_18;
            default:
LABEL_17:
              [v23 setTtsPlaybackRateDouble:v25];
LABEL_18:
              id v26 = *(id *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator18CardListController_conversation);
              sub_10008BA60(v23, v24);

              (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
              break;
          }
          return;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
      }

      sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4B60);
    }
  }
}

void sub_1000333E0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator18CardListController_dictionaryManager;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for DictionaryManager()) init];
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v2 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_subscriptions] = v2;
  uint64_t v3 = &v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_currentExpandedIndexPath];
  uint64_t v4 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_collectionViewSpacing] = 0x4020000000000000;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController____lazy_storage___layout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController____lazy_storage___collectionView] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_initialAppearance] = 1;
  *(int64x2_t *)&v0[OBJC_IVAR____TtC17SequoiaTranslator18CardListController_minSourceTextSize] = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10003355C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = sub_10002B338();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [v8 cellForItemAtIndexPath:isa];

  if (!v10) {
    return 0;
  }
  type metadata accessor for CardCollectionViewCell();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11 || *(unsigned char *)(v11 + OBJC_IVAR____TtC17SequoiaTranslator22CardCollectionViewCell_isExpanded) == 1)
  {

    return 0;
  }
  uint64_t v75 = v11;
  uint64_t v14 = v5;
  id v15 = self;
  uint64_t v81 = a1;
  id v16 = [v15 mainBundle];
  v88._id countAndFlagsBits = 0xD000000000000029;
  v88._id object = (void *)0x800000010025B520;
  v17._id countAndFlagsBits = 0x455449524F564146;
  v17._id object = (void *)0xE800000000000000;
  v18._id countAndFlagsBits = 0;
  v18._id object = (void *)0xE000000000000000;
  Swift::String v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v88);
  id object = v19._object;
  id countAndFlagsBits = (id)v19._countAndFlagsBits;

  id v20 = [v15 mainBundle];
  v89._id countAndFlagsBits = 0xD00000000000002BLL;
  v89._id object = (void *)0x800000010025B550;
  v21._id countAndFlagsBits = 0x49524F5641464E55;
  v21._id object = (void *)0xEA00000000004554;
  v22._id countAndFlagsBits = 0;
  v22._id object = (void *)0xE000000000000000;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v89);
  double v79 = v23._object;
  *(void *)&long long v80 = v23._countAndFlagsBits;

  id v24 = [v15 mainBundle];
  v90._id countAndFlagsBits = 0xD000000000000027;
  v90._id object = (void *)0x800000010025B580;
  v25._id countAndFlagsBits = 0x4554454C4544;
  v25._id object = (void *)0xE600000000000000;
  v26._id countAndFlagsBits = 0;
  v26._id object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v90);

  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v81, v4);
  unint64_t v27 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v28 + v27, v7, v4);
  id v29 = v2;
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v86 = sub_100034008;
  uint64_t v87 = v28;
  unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
  uint64_t v83 = 1107296256;
  CGFloat v74 = &v84;
  double v84 = sub_10021827C;
  double v85 = &unk_1002CA788;
  unint64_t v31 = _Block_copy(&aBlock);
  uint64_t v32 = self;
  id v33 = [v32 contextualActionWithStyle:1 title:v30 handler:v31];

  _Block_release(v31);
  swift_release();
  uint64_t v34 = self;
  id v35 = [v34 systemRedColor];
  id v78 = v33;
  [v33 setBackgroundColor:v35];

  NSString v36 = String._bridgeToObjectiveC()();
  uint64_t v37 = self;
  id v38 = [v37 systemImageNamed:v36];

  [v33 setImage:v38];
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v75;
  *(void *)(v39 + 16) = v29;
  *(void *)(v39 + 24) = v40;
  id v41 = v29;
  id v73 = v10;
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v86 = sub_1000340BC;
  uint64_t v87 = v39;
  unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
  uint64_t v83 = 1107296256;
  double v84 = sub_10021827C;
  double v85 = &unk_1002CA7D8;
  uint64_t v43 = _Block_copy(&aBlock);
  id v44 = [v32 contextualActionWithStyle:0 title:v42 handler:v43];

  _Block_release(v43);
  swift_release();
  NSString v45 = String._bridgeToObjectiveC()();
  id v46 = [v34 colorNamed:v45];

  [v44 setBackgroundColor:v46];
  NSString v47 = String._bridgeToObjectiveC()();
  id v48 = [v37 systemImageNamed:v47];

  [v44 setImage:v48];
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(void *)(v49 + 24) = v40;
  id countAndFlagsBits = v41;
  id object = v73;
  NSString v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v86 = sub_1000345D8;
  uint64_t v87 = v49;
  unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
  uint64_t v83 = 1107296256;
  double v84 = sub_10021827C;
  double v85 = &unk_1002CA828;
  uint64_t v51 = _Block_copy(&aBlock);
  id v52 = [v32 contextualActionWithStyle:0 title:v50 handler:v51];

  _Block_release(v51);
  swift_release();
  NSString v53 = String._bridgeToObjectiveC()();
  id v54 = [v34 colorNamed:v53];

  [v52 setBackgroundColor:v54];
  NSString v55 = String._bridgeToObjectiveC()();
  id v56 = [v37 systemImageNamed:v55];

  [v52 setImage:v56];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v57 = swift_allocObject();
  long long v80 = xmmword_100249BA0;
  *(_OWORD *)(v57 + 16) = xmmword_100249BA0;
  CGFloat v58 = v78;
  *(void *)(v57 + 32) = v78;
  *(void *)(v57 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v44;
  unint64_t aBlock = v57;
  specialized Array._endMutation()();
  sub_10000B0CC(0, &qword_1002F4B70);
  id v59 = v58;
  id v60 = v44;
  Class v61 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CGFloat v62 = self;
  id v12 = [v62 configurationWithActions:v61];

  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v80;
  *(void *)(v63 + 32) = v59;
  *(void *)(v63 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v52;
  unint64_t aBlock = v63;
  specialized Array._endMutation()();
  id v64 = v59;
  id v65 = v52;
  Class v66 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v67 = [v62 configurationWithActions:v66];

  swift_retain();
  unint64_t v68 = IndexPath.item.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if ((aBlock & 0xC000000000000001) != 0)
  {
    id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_11:
    double v70 = v69;
    swift_bridgeObjectRelease();
    char v71 = dispatch thunk of PersistedTranslation.isFavorite.getter();

    if (v71)
    {

      return (uint64_t)v67;
    }
    else
    {
    }
    return (uint64_t)v12;
  }
  if ((v68 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v68 < *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v69 = *(id *)(aBlock + 8 * v68 + 32);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100033F3C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100034008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for IndexPath();
  uint64_t v9 = *(void **)(v4 + 16);

  sub_100031B1C(a1, a2, a3, a4, v9);
}

uint64_t sub_1000340A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  return swift_retain();
}

uint64_t sub_1000340B4()
{
  return swift_release();
}

void sub_1000340BC(int a1, int a2, int a3, int a4)
{
  sub_100031BAC(a1, a2, a3, a4, *(id *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1000340E0()
{
  return sub_100115D70() & 1;
}

uint64_t sub_100034104()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100034114()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_10003413C()
{
  id v0 = sub_10002B338();
  [v0 performBatchUpdates:0 completion:0];
}

uint64_t sub_100034194()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000341A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000341DC()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

void sub_1000341EC()
{
  id v0 = sub_10002B338();
  [v0 reloadData];
}

uint64_t sub_10003423C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003424C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100034284()
{
  double v1 = *(double *)(v0 + 24);
  double v2 = *(double *)(v0 + 32);
  id v3 = sub_10002B338();
  [v3 setContentOffset:v1, v2];
}

uint64_t sub_1000342EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100034334()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100034408()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10002CE64(v2, v3, v4);
}

uint64_t sub_10003446C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000344AC()
{
  sub_1000C4908(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_1000344B4(uint64_t a1, void *a2)
{
  return sub_10002B288(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000344BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100007620(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_100034528()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100034560()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000345A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  return sub_1001D1608(a1, a2, a3, a4, a5, a6, a7, *(void **)(v7 + 16));
}

id sub_1000346E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardRevealController();
  return [super dealloc];
}

uint64_t type metadata accessor for CardRevealController()
{
  return self;
}

id sub_100034740(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions;
  id v10 = objc_allocWithZone((Class)type metadata accessor for CardActions());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = &v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate];
  *((void *)v13 + 4) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionLeadingAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionTrailingAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionBottomAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_separationConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom] = 0;
  v11[OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded] = 0;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for CardView();
  [super initWithFrame:a1, a2, a3, a4];
  id v15 = self;
  id v16 = v14;
  id v17 = [v15 secondarySystemGroupedBackgroundColor];
  [v16 setBackgroundColor:v17];

  [v16 setClipsToBounds:1];
  sub_100034980();
  sub_100034A40();

  return v16;
}

id sub_100034980()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  [*(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_container] setAxis:1];
  [*(id *)&v0[v1] setDistribution:0];
  [*(id *)&v0[v1] setAlignment:0];
  [*(id *)&v0[v1] setLayoutMarginsRelativeArrangement:1];
  [*(id *)&v0[v1] setInsetsLayoutMarginsFromSafeArea:0];
  [v0 addSubview:*(void *)&v0[v1]];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions];

  return [v0 addSubview:v2];
}

void sub_100034A40()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_container) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions);
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [*(id *)((char *)v1 + v2) topAnchor];
  id v5 = [v1 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  uint64_t v7 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor;
  id v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor);
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor) = v6;

  id v9 = [*(id *)((char *)v1 + v2) leadingAnchor];
  id v10 = [v1 leadingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  uint64_t v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor);
  uint64_t v62 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor;
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor) = v11;

  id v13 = [v1 trailingAnchor];
  id v14 = [*(id *)((char *)v1 + v2) trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  id v16 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor);
  id v60 = (char *)OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor;
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor) = v15;

  id v17 = [v3 leadingAnchor];
  id v18 = [v1 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  uint64_t v20 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionLeadingAnchor;
  Swift::String v21 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionLeadingAnchor);
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionLeadingAnchor) = v19;

  id v22 = [v3 trailingAnchor];
  id v23 = [v1 trailingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  Swift::String v25 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionTrailingAnchor);
  uint64_t v59 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionTrailingAnchor;
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionTrailingAnchor) = v24;

  id v26 = [v3 bottomAnchor];
  id v27 = [v1 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  uint64_t v29 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionBottomAnchor;
  NSString v30 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionBottomAnchor);
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionBottomAnchor) = v28;

  id v31 = [v1 bottomAnchor];
  id v32 = [*(id *)((char *)v1 + v2) bottomAnchor];
  id v33 = [v31 constraintGreaterThanOrEqualToAnchor:v32 constant:20.0];

  uint64_t v34 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom;
  id v35 = *(void **)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom);
  *(void *)((char *)v1 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom) = v33;

  uint64_t v37 = *(void **)((char *)v1 + v34);
  if (v37)
  {
    LODWORD(v36) = 1132068864;
    [v37 setPriority:v36];
  }
  id v38 = [*(id *)((char *)v1 + v2) heightAnchor];
  id v39 = [v38 constraintLessThanOrEqualToConstant:0.0];

  type metadata accessor for UILayoutPriority(0);
  sub_100035334();
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v64;
  [v39 setPriority:v40];
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_100249E10;
  NSString v42 = *(void **)((char *)v1 + v7);
  if (!v42)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v43 = v41;
  *(void *)(v41 + 32) = v42;
  id v44 = *(void **)((char *)v1 + v62);
  if (!v44)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(void *)(v41 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v44;
  NSString v45 = *(void **)&v60[(void)v1];
  if (!v45)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  *(void *)(v41 + 48) = v45;
  id v46 = *(void **)((char *)v1 + v34);
  if (!v46)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v41 + 56) = v46;
  *(void *)(v41 + 64) = v39;
  NSString v47 = *(void **)((char *)v1 + v20);
  if (!v47)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v63 = v39;
  *(void *)(v41 + 72) = v47;
  id v48 = *(void **)((char *)v1 + v59);
  if (!v48)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(void *)(v41 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v48;
  uint64_t v49 = *(void **)((char *)v1 + v29);
  if (v49)
  {
    id v61 = self;
    *(void *)(v43 + 88) = v49;
    specialized Array._endMutation()();
    sub_10002AEFC();
    id v50 = v42;
    id v51 = v44;
    id v52 = v45;
    id v53 = v46;
    id v54 = v63;
    id v55 = v47;
    id v56 = v48;
    id v57 = v49;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v61 activateConstraints:isa];

    (*(void (**)(void))((swift_isaMask & *v1) + 0x1E0))();
    return;
  }
LABEL_17:
  __break(1u);
}

uint64_t sub_100034FD8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded);
}

id sub_100034FE8()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 horizontalSizeClass];

  if (v2 == (id)1) {
    double v4 = 16.0;
  }
  else {
    double v4 = 32.0;
  }
  id v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor);
  if (v5)
  {
    char v6 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C8))();
    double v7 = 32.0;
    if ((v6 & 1) == 0) {
      double v7 = 16.0;
    }
    id v3 = [v5 setConstant:v7];
  }
  id v8 = *(void **)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor);
  if (v8)
  {
    char v9 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x1C8))(v3);
    double v10 = 32.0;
    if ((v9 & 1) == 0) {
      double v10 = v4;
    }
    id v3 = [v8 setConstant:v10];
  }
  id v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor);
  if (v11)
  {
    char v12 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x1C8))(v3);
    double v13 = 32.0;
    if ((v12 & 1) == 0) {
      double v13 = v4;
    }
    id v3 = [v11 setConstant:v13];
  }
  id v14 = *(void **)((char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom);
  if (v14)
  {
    char v15 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x1C8))(v3);
    double v16 = 0.0;
    if (v15) {
      double v16 = 20.0;
    }
    [v14 setConstant:v16];
  }

  return [v0 setNeedsLayout];
}

id sub_100035200()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CardView();
  return [super dealloc];
}

uint64_t type metadata accessor for CardView()
{
  return self;
}

unint64_t sub_100035334()
{
  unint64_t result = qword_1002F0428;
  if (!qword_1002F0428)
  {
    type metadata accessor for UILayoutPriority(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0428);
  }
  return result;
}

void sub_10003538C()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_actions;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for CardActions()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator8CardView_container;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v3 = &v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_delegate];
  *((void *)v3 + 4) = 0;
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTopAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackLeadingAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_stackTrailingAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionLeadingAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionTrailingAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_actionBottomAnchor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_separationConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_containerBottom] = 0;
  v0[OBJC_IVAR____TtC17SequoiaTranslator8CardView_expanded] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000354DC(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F00C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10003553C()
{
  qword_10030E6E8 = 0x4014000000000000;
}

uint64_t getEnumTagSinglePayload for ChatBubbleShape(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ChatBubbleShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChatBubbleShape()
{
  return &type metadata for ChatBubbleShape;
}

unint64_t sub_1000355F4()
{
  unint64_t result = qword_1002F0430;
  if (!qword_1002F0430)
  {
    sub_100007928(&qword_1002F0438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0430);
  }
  return result;
}

double sub_100035650@<D0>(char a1@<W0>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a3);
  if (qword_1002EE560 != -1) {
    swift_once();
  }
  double v13 = *(double *)&qword_10030E6E8;
  CGFloat v14 = MinX + *(double *)&qword_10030E6E8;
  v41.origin.x = a3;
  v41.origin.y = a4;
  v41.size.width = a5;
  v41.size.height = a6;
  CGFloat v15 = a4;
  CGFloat v24 = a4;
  CGFloat MinY = CGRectGetMinY(v41);
  v42.origin.x = a3;
  v42.origin.y = v15;
  v42.size.width = a5;
  v42.size.height = a6;
  CGFloat Width = CGRectGetWidth(v42);
  CGFloat v18 = a3;
  CGFloat v23 = a3;
  CGFloat v19 = Width - v13;
  v43.origin.x = v18;
  v43.origin.y = v15;
  v43.size.width = a5;
  v43.size.height = a6;
  CGFloat Height = CGRectGetHeight(v43);
  Path.init()();
  v44.origin.x = v14;
  v44.origin.y = MinY;
  v44.size.width = v19;
  v44.size.height = Height;
  CGRectGetMinX(v44);
  v45.origin.x = v14;
  v45.origin.y = MinY;
  v45.size.width = v19;
  v45.size.height = Height;
  CGRectGetMinY(v45);
  Path.move(to:)();
  v46.origin.x = v14;
  v46.origin.y = MinY;
  v46.size.width = v19;
  v46.size.height = Height;
  CGRectGetMaxX(v46);
  v47.origin.x = v14;
  v47.origin.y = MinY;
  v47.size.width = v19;
  v47.size.height = Height;
  CGRectGetMinY(v47);
  Path.addLine(to:)();
  v48.origin.x = v14;
  v48.origin.y = MinY;
  v48.size.width = v19;
  v48.size.height = Height;
  CGRectGetMaxX(v48);
  v49.origin.x = v14;
  v49.origin.y = MinY;
  v49.size.width = v19;
  v49.size.height = Height;
  CGRectGetMinY(v49);
  uint64_t v34 = 0x3FF0000000000000;
  uint64_t v35 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0x3FF0000000000000;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
  v50.origin.x = v14;
  v50.origin.y = MinY;
  v50.size.width = v19;
  v50.size.height = Height;
  CGRectGetMaxX(v50);
  v51.origin.x = v14;
  v51.origin.y = MinY;
  v51.size.width = v19;
  v51.size.height = Height;
  CGRectGetMaxY(v51);
  Path.addLine(to:)();
  v52.origin.x = v14;
  v52.origin.y = MinY;
  v52.size.width = v19;
  v52.size.height = Height;
  CGRectGetMaxX(v52);
  v53.origin.x = v14;
  v53.origin.y = MinY;
  v53.size.width = v19;
  v53.size.height = Height;
  CGRectGetMaxY(v53);
  Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
  v54.origin.x = v14;
  v54.origin.y = MinY;
  v54.size.width = v19;
  v54.size.height = Height;
  CGRectGetMinX(v54);
  v55.origin.x = v14;
  v55.origin.y = MinY;
  v55.size.width = v19;
  v55.size.height = Height;
  CGRectGetMaxY(v55);
  Path.addLine(to:)();
  v56.origin.x = v14;
  v56.origin.y = MinY;
  v56.size.width = v19;
  v56.size.height = Height;
  CGRectGetMinX(v56);
  v57.origin.x = v14;
  v57.origin.y = MinY;
  v57.size.width = v19;
  v57.size.height = Height;
  CGRectGetMaxY(v57);
  Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
  v58.origin.x = v23;
  v58.origin.y = v24;
  v58.size.width = a5;
  v58.size.height = a6;
  CGRectGetMinX(v58);
  v59.origin.x = v23;
  v59.origin.y = v24;
  v59.size.width = a5;
  v59.size.height = a6;
  CGRectGetMaxY(v59);
  Path.addCurve(to:control1:control2:)();
  v60.origin.x = v14;
  v60.origin.y = MinY;
  v60.size.width = v19;
  v60.size.height = Height;
  CGRectGetMinX(v60);
  v61.origin.x = v14;
  v61.origin.y = MinY;
  v61.size.width = v19;
  v61.size.height = Height;
  CGRectGetMaxY(v61);
  Path.addCurve(to:control1:control2:)();
  v62.origin.x = v14;
  v62.origin.y = MinY;
  v62.size.width = v19;
  v62.size.height = Height;
  CGRectGetMinX(v62);
  v63.origin.x = v14;
  v63.origin.y = MinY;
  v63.size.width = v19;
  v63.size.height = Height;
  CGRectGetMinY(v63);
  Path.addLine(to:)();
  v64.origin.x = v14;
  v64.origin.y = MinY;
  v64.size.width = v19;
  v64.size.height = Height;
  CGRectGetMinX(v64);
  v65.origin.x = v14;
  v65.origin.y = MinY;
  v65.size.width = v19;
  v65.size.height = Height;
  CGRectGetMinY(v65);
  Path.addArc(center:radius:startAngle:endAngle:clockwise:transform:)();
  if ((a1 & 1) == 0)
  {
    v32[0] = v25;
    v32[1] = v26;
    char v33 = v27;
    CGAffineTransformMakeScale(&v31, -1.0, 1.0);
    sub_100035F24((uint64_t)v32, (uint64_t)v40);
    sub_100035F98((uint64_t)v40, (void (*)(void, void, void, void, void))sub_100035F80);
    Path.applying(_:)();
    sub_100035F98((uint64_t)v32, (void (*)(void, void, void, void, void))sub_100035FD8);
    sub_100035F98((uint64_t)v32, (void (*)(void, void, void, void, void))sub_100035FD8);
    sub_100035F24((uint64_t)v28, (uint64_t)v29);
    sub_100035F98((uint64_t)v29, (void (*)(void, void, void, void, void))sub_100035F80);
    v66.origin.x = v23;
    v66.origin.y = v24;
    v66.size.height = a6;
    v66.size.width = a5;
    CGFloat v21 = CGRectGetWidth(v66);
    CGAffineTransformMakeTranslation(&v30, v21, 0.0);
    Path.applying(_:)();
    sub_100035F98((uint64_t)v28, (void (*)(void, void, void, void, void))sub_100035FD8);
    sub_100035F98((uint64_t)v28, (void (*)(void, void, void, void, void))sub_100035FD8);
  }
  double result = *(double *)&v25;
  *(_OWORD *)a2 = v25;
  *(_OWORD *)(a2 + 16) = v26;
  *(unsigned char *)(a2 + 32) = v27;
  return result;
}

double sub_100035BE0@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_100035650(*v5, (uint64_t)v9, a2, a3, a4, a5);
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_100035C34()
{
  return Shape.sizeThatFits(_:)();
}

void (*sub_100035C4C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_100035CBC;
}

void sub_100035CBC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100035D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100035FF0();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100035D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100035FF0();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100035DD0(uint64_t a1)
{
  unint64_t v2 = sub_100035FF0();

  return Shape.body.getter(a1, v2);
}

unint64_t sub_100035E20()
{
  unint64_t result = qword_1002F0440;
  if (!qword_1002F0440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0440);
  }
  return result;
}

unint64_t sub_100035E78()
{
  unint64_t result = qword_1002F0448;
  if (!qword_1002F0448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0448);
  }
  return result;
}

unint64_t sub_100035ED0()
{
  unint64_t result = qword_1002F0450;
  if (!qword_1002F0450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0450);
  }
  return result;
}

uint64_t sub_100035F24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100035F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100035F98(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100035FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

unint64_t sub_100035FF0()
{
  unint64_t result = qword_1002F0458;
  if (!qword_1002F0458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0458);
  }
  return result;
}

id sub_100036044()
{
  id result = [self effectWithStyle:10];
  qword_1002F0460 = (uint64_t)result;
  return result;
}

char *sub_100036084(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator9ChromeBar_backgroundView;
  uint64_t v10 = qword_1002EE568;
  id v11 = v4;
  if (v10 != -1) {
    swift_once();
  }
  *(void *)&v11[v9] = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:qword_1002F0460];

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for ChromeBar();
  char v12 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator9ChromeBar_backgroundView];
  CGFloat v14 = v12;
  [v14 addSubview:v13];
  sub_100036288();

  return v14;
}

void sub_100036288()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator9ChromeBar_backgroundView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v2 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100249A60;
  id v4 = [v1 topAnchor];
  id v5 = [v0 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v3 + 32) = v6;
  id v7 = [v1 leadingAnchor];
  id v8 = [v0 leadingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  id v10 = [v1 trailingAnchor];
  id v11 = [v0 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v3 + 48) = v12;
  id v13 = [v1 bottomAnchor];
  id v14 = [v0 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 56) = v15;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_1000364E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ChromeBar();
  return [super dealloc];
}

uint64_t type metadata accessor for ChromeBar()
{
  return self;
}

void *sub_100036550(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    id v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(sub_100007620(&qword_1002F0498) + 32);
    id v9 = (char *)v7 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for LanguageOption();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[5];
    id v13 = (void *)((char *)v7 + v12);
    id v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)((char *)a2 + v12 + 8);
    *id v13 = *(void *)((char *)a2 + v12);
    v13[1] = v15;
    swift_retain();
    swift_retain();
    uint64_t v16 = *(int *)(sub_100007620(&qword_1002F04A0) + 32);
    id v17 = (char *)v13 + v16;
    CGFloat v18 = &v14[v16];
    uint64_t v19 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[6];
    uint64_t v21 = a3[7];
    id v22 = (char *)v7 + v20;
    CGFloat v23 = (char *)a2 + v20;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)id v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v22[16] = v23[16];
    long long v25 = (char *)v7 + v21;
    long long v26 = (char *)a2 + v21;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)long long v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    v25[16] = v26[16];
    uint64_t v28 = a3[9];
    *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v7 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[10];
    CGAffineTransform v30 = (void *)((char *)v7 + v29);
    CGAffineTransform v31 = (void *)((char *)a2 + v29);
    uint64_t v32 = v31[1];
    *CGAffineTransform v30 = *v31;
    v30[1] = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_100036740(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(sub_100007620(&qword_1002F0498) + 32);
  uint64_t v5 = type metadata accessor for LanguageOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_100007620(&qword_1002F04A0) + 32);
  uint64_t v8 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_100036878(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(sub_100007620(&qword_1002F0498) + 32);
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for LanguageOption();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)((char *)a1 + v11);
  id v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = v14;
  swift_retain();
  swift_retain();
  uint64_t v15 = *(int *)(sub_100007620(&qword_1002F04A0) + 32);
  uint64_t v16 = (char *)v12 + v15;
  id v17 = &v13[v15];
  uint64_t v18 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v19;
  id v22 = (char *)a2 + v19;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  v21[16] = v22[16];
  uint64_t v24 = (char *)a1 + v20;
  long long v25 = (char *)a2 + v20;
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  v24[16] = v25[16];
  uint64_t v27 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)((char *)a1 + v28);
  CGAffineTransform v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_100036A10(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(sub_100007620(&qword_1002F0498) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LanguageOption();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)((char *)a2 + v10);
  swift_retain();
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  uint64_t v13 = *(int *)(sub_100007620(&qword_1002F04A0) + 32);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_retain();
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_retain();
  swift_release();
  v18[16] = v19[16];
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  id v22 = (char *)a2 + v20;
  *(void *)((char *)a1 + v2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)((char *)a2 + v20);
  swift_retain();
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_retain();
  swift_release();
  v21[16] = v22[16];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)((char *)a1 + v23);
  long long v25 = (void *)((char *)a2 + v23);
  *uint64_t v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100036C2C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(sub_100007620(&qword_1002F0498) + 32);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for LanguageOption();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)((char *)a2 + v11 + 8);
  *uint64_t v12 = *(void *)((char *)a2 + v11);
  v12[1] = v14;
  uint64_t v15 = *(int *)(sub_100007620(&qword_1002F04A0) + 32);
  uint64_t v16 = (char *)v12 + v15;
  uint64_t v17 = &v13[v15];
  uint64_t v18 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[6];
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v19;
  id v22 = (char *)a2 + v19;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  v21[16] = v22[16];
  uint64_t v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  uint64_t v25 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  return a1;
}

void *sub_100036D80(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(sub_100007620(&qword_1002F0498) + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LanguageOption();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)((char *)a1 + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)((char *)a2 + v10);
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_release();
  uint64_t v13 = *(int *)(sub_100007620(&qword_1002F04A0) + 32);
  uint64_t v14 = &v11[v13];
  uint64_t v15 = &v12[v13];
  uint64_t v16 = type metadata accessor for Locale();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  swift_release();
  *((void *)v18 + 1) = *((void *)v19 + 1);
  swift_release();
  v18[16] = v19[16];
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  id v22 = (char *)a2 + v20;
  *(void *)((char *)a1 + v2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)((char *)a2 + v20);
  swift_release();
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_release();
  v21[16] = v22[16];
  uint64_t v23 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_release();
  return a1;
}

uint64_t sub_100036F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036F5C);
}

uint64_t sub_100036F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F0498);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100007620(&qword_1002F04A0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_10003707C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100037090);
}

uint64_t sub_100037090(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100007620(&qword_1002F0498);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_100007620(&qword_1002F04A0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CombinedLanguagePickerPill()
{
  uint64_t result = qword_1002F0500;
  if (!qword_1002F0500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000371F8()
{
  sub_100037318(319, &qword_1002F0510, (void (*)(uint64_t))&type metadata accessor for LanguageOption);
  if (v0 <= 0x3F)
  {
    sub_100037318(319, (unint64_t *)&unk_1002F0518, (void (*)(uint64_t))&type metadata accessor for Locale);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100037318(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Binding();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10003736C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100037388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F0578);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100007620(&qword_1002F0580) - 8;
  uint64_t v6 = __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v44 = (uint64_t)&v42 - v9;
  uint64_t v10 = sub_100007620(&qword_1002F0588);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F0590);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002F0598);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v43 = (uint64_t)&v42 - v22;
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v23 = (uint64_t)&v12[*(int *)(sub_100007620(&qword_1002F05A0) + 44)];
  uint64_t v42 = a1;
  sub_1000377E0(a1, v23);
  uint64_t v24 = a1 + *(int *)(type metadata accessor for CombinedLanguagePickerPill() + 28);
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  LOBYTE(v24) = *(unsigned char *)(v24 + 16);
  uint64_t v47 = v25;
  uint64_t v48 = v26;
  char v49 = v24;
  sub_100007620(&qword_1002FAF70);
  Binding.wrappedValue.getter();
  char v27 = v50;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = &v16[*(int *)(v14 + 44)];
  *(void *)&v29[*(int *)(type metadata accessor for CombinedLanguagePickerPillStyle() + 24)] = KeyPath;
  sub_100007620(&qword_1002F05A8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v29 = v27;
  v29[1] = 1;
  sub_10001323C((uint64_t)v12, (uint64_t)v16, &qword_1002F0588);
  uint64_t v30 = static Color.primary.getter();
  uint64_t v31 = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v16, (uint64_t)v21, &qword_1002F0590);
  uint64_t v32 = (uint64_t *)&v21[*(int *)(v18 + 44)];
  *uint64_t v32 = v31;
  v32[1] = v30;
  sub_10000B070((uint64_t)v16, &qword_1002F0590);
  uint64_t v33 = v43;
  sub_10001323C((uint64_t)v21, v43, &qword_1002F0598);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v34 = sub_100007620(&qword_1002F05B0);
  sub_100038310(v42, (uint64_t)&v5[*(int *)(v34 + 44)]);
  uint64_t v35 = static Color.primary.getter();
  uint64_t v36 = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v5, (uint64_t)v8, &qword_1002F0578);
  uint64_t v37 = (uint64_t *)&v8[*(int *)(v45 + 44)];
  *uint64_t v37 = v36;
  v37[1] = v35;
  sub_10000B070((uint64_t)v5, &qword_1002F0578);
  uint64_t v38 = v44;
  sub_10001323C((uint64_t)v8, v44, &qword_1002F0580);
  sub_10000C3A4(v33, (uint64_t)v21, &qword_1002F0598);
  sub_10000C3A4(v38, (uint64_t)v8, &qword_1002F0580);
  uint64_t v39 = v46;
  sub_10000C3A4((uint64_t)v21, v46, &qword_1002F0598);
  uint64_t v40 = sub_100007620(&qword_1002F05B8);
  sub_10000C3A4((uint64_t)v8, v39 + *(int *)(v40 + 48), &qword_1002F0580);
  sub_10000B070(v38, &qword_1002F0580);
  sub_10000B070(v33, &qword_1002F0598);
  sub_10000B070((uint64_t)v8, &qword_1002F0580);
  return sub_10000B070((uint64_t)v21, &qword_1002F0598);
}

uint64_t sub_1000377E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  Swift::String v88 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LanguageOption();
  uint64_t v90 = *(void *)(v5 - 8);
  uint64_t v91 = v5;
  __chkstk_darwin(v5);
  Swift::String v89 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100007620(&qword_1002F04A0);
  __chkstk_darwin(v102);
  uint64_t v87 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LanguagePicker();
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  __chkstk_darwin(v8);
  CGFloat v93 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F0608);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v97 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  double v92 = (char *)&v72 - v14;
  __chkstk_darwin(v13);
  uint64_t v96 = (uint64_t)&v72 - v15;
  uint64_t v85 = sub_100007620(&qword_1002F0610);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v81 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100007620(&qword_1002F0618);
  __chkstk_darwin(v82);
  long long v80 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F0620);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  double v76 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  double v77 = (char *)&v72 - v21;
  uint64_t v83 = type metadata accessor for Locale();
  uint64_t v79 = *(void *)(v83 - 8);
  uint64_t v22 = __chkstk_darwin(v83);
  Class v86 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v99 = sub_100007620(&qword_1002F0498);
  __chkstk_darwin(v99);
  uint64_t v72 = type metadata accessor for DetectableLanguagePicker();
  uint64_t v73 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100007620(&qword_1002F0628);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v101 = (uint64_t)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v100 = (uint64_t)&v72 - v29;
  uint64_t v30 = (int *)type metadata accessor for CombinedLanguagePickerPill();
  uint64_t v31 = (uint64_t *)(a1 + v30[6]);
  uint64_t v32 = *v31;
  uint64_t v33 = v31[1];
  LOBYTE(v31) = *((unsigned char *)v31 + 16);
  uint64_t v107 = v32;
  uint64_t v108 = v33;
  char v109 = (char)v31;
  sub_100007620(&qword_1002FAF70);
  Binding.projectedValue.getter();
  Binding.projectedValue.getter();
  uint64_t v75 = a1 + v30[5];
  Binding.wrappedValue.getter();
  uint64_t v34 = a1 + v30[10];
  uint64_t v74 = a1;
  uint64_t v78 = v34;
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  uint64_t v35 = v101;
  uint64_t v36 = v76;
  DetectableLanguagePicker.init(isDetected:selectedOption:preferredLocales:oppositeLocale:languageModels:sourceUsesOCR:)();
  sub_100039070(&qword_1002F0630, (void (*)(uint64_t))&type metadata accessor for DetectableLanguagePicker);
  uint64_t v37 = v72;
  View.accessibilityIdentifier(_:)();
  uint64_t v38 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v25, v37);
  sub_10001323C(v35, v100, &qword_1002F0628);
  uint64_t v39 = Image.init(systemName:)();
  static UnitPoint.center.getter();
  uint64_t v103 = v39;
  __asm { FMOV            V2.2D, #0.75 }
  long long v104 = _Q2;
  uint64_t v105 = v45;
  uint64_t v106 = v46;
  sub_100007620(&qword_1002F0638);
  sub_100038F20();
  uint64_t v47 = v81;
  View.bold(_:)();
  swift_release();
  uint64_t v48 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v50 = v84;
  uint64_t v51 = (uint64_t)v80;
  uint64_t v52 = v85;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v80, v47, v85);
  CGRect v53 = (uint64_t *)(v51 + *(int *)(v82 + 36));
  *CGRect v53 = KeyPath;
  v53[1] = v48;
  uint64_t v54 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v47, v52);
  sub_100038F9C();
  View.accessibilityHidden(_:)();
  sub_10000B070(v51, &qword_1002F0618);
  uint64_t v55 = (uint64_t)v36;
  uint64_t v56 = (uint64_t)v36;
  uint64_t v57 = v79;
  uint64_t v58 = v38;
  sub_10001323C(v56, v38, &qword_1002F0620);
  Binding.projectedValue.getter();
  CGRect v59 = v89;
  Binding.wrappedValue.getter();
  LanguageOption.locale.getter();
  uint64_t v60 = v83;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v91);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v54, 1, v60) == 1)
  {
    static Locale.current.getter();
    sub_10000B070(v54, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v86, v54, v60);
  }
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  CGRect v61 = v93;
  LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)();
  sub_100039070(&qword_1002F0650, (void (*)(uint64_t))&type metadata accessor for LanguagePicker);
  uint64_t v62 = (uint64_t)v92;
  uint64_t v63 = v95;
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v61, v63);
  uint64_t v64 = v96;
  sub_10001323C(v62, v96, &qword_1002F0608);
  uint64_t v66 = v100;
  uint64_t v65 = v101;
  sub_10000C3A4(v100, v101, &qword_1002F0628);
  uint64_t v67 = v55;
  sub_10000C3A4(v58, v55, &qword_1002F0620);
  uint64_t v68 = v97;
  sub_10000C3A4(v64, v97, &qword_1002F0608);
  uint64_t v69 = v98;
  sub_10000C3A4(v65, v98, &qword_1002F0628);
  uint64_t v70 = sub_100007620(&qword_1002F0658);
  sub_10000C3A4(v67, v69 + *(int *)(v70 + 48), &qword_1002F0620);
  sub_10000C3A4(v68, v69 + *(int *)(v70 + 64), &qword_1002F0608);
  sub_10000B070(v64, &qword_1002F0608);
  sub_10000B070(v58, &qword_1002F0620);
  sub_10000B070(v66, &qword_1002F0628);
  sub_10000B070(v68, &qword_1002F0608);
  sub_10000B070(v67, &qword_1002F0620);
  return sub_10000B070(v65, &qword_1002F0628);
}

uint64_t sub_100038310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LanguageOption();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  __chkstk_darwin(v5);
  char v71 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100007620(&qword_1002F04A0);
  __chkstk_darwin(v86);
  uint64_t v68 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for LanguagePicker();
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  double v76 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100007620(&qword_1002F05C0);
  __chkstk_darwin(v80);
  double v77 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F05C8);
  __chkstk_darwin(v10 - 8);
  uint64_t v78 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100007620(&qword_1002F05D0);
  uint64_t v12 = __chkstk_darwin(v74);
  uint64_t v83 = (uint64_t)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v75 = (char *)v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v82 = (uint64_t)v59 - v16;
  uint64_t v65 = type metadata accessor for Locale();
  uint64_t v66 = *(void *)(v65 - 8);
  uint64_t v17 = __chkstk_darwin(v65);
  uint64_t v67 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v85 = sub_100007620(&qword_1002F0498);
  __chkstk_darwin(v85);
  uint64_t v63 = sub_100007620(&qword_1002F05D8);
  __chkstk_darwin(v63);
  uint64_t v20 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100007620(&qword_1002F05E0);
  __chkstk_darwin(v21 - 8);
  uint64_t v60 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002F05E8);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v69 = (uint64_t)v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v62 = (char *)v59 - v27;
  uint64_t v28 = (int *)type metadata accessor for CombinedLanguagePickerPill();
  uint64_t v29 = v28[6];
  v59[0] = a1;
  uint64_t v30 = (uint64_t *)(a1 + v29);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  LOBYTE(v3UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *((unsigned char *)v30 + 16);
  uint64_t v87 = v31;
  uint64_t v88 = v32;
  char v89 = (char)v30;
  v59[1] = sub_100007620(&qword_1002FAF70);
  Binding.projectedValue.getter();
  Binding.projectedValue.getter();
  uint64_t v61 = a1 + v28[5];
  Binding.wrappedValue.getter();
  uint64_t v64 = a1 + v28[10];
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  DetectableLanguagePicker.init(isDetected:selectedOption:preferredLocales:oppositeLocale:languageModels:sourceUsesOCR:)();
  sub_100014894(&qword_1002F05F0, &qword_1002F05D8);
  uint64_t v33 = (uint64_t)v60;
  View.accessibilityIdentifier(_:)();
  sub_10000B070((uint64_t)v20, &qword_1002F05D8);
  uint64_t v34 = (uint64_t *)(v59[0] + v28[7]);
  uint64_t v35 = *v34;
  uint64_t v36 = v34[1];
  LOBYTE(v34) = *((unsigned char *)v34 + 16);
  uint64_t v90 = v35;
  uint64_t v91 = v36;
  char v92 = (char)v34;
  Binding.wrappedValue.getter();
  LOBYTE(v2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v87;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = *(int *)(v24 + 44);
  uint64_t v39 = (uint64_t)v62;
  uint64_t v40 = &v62[v38];
  uint64_t v41 = type metadata accessor for CombinedLanguagePickerPillStyle();
  *(void *)&v40[*(int *)(v41 + 24)] = KeyPath;
  uint64_t v42 = (uint64_t)v70;
  sub_100007620(&qword_1002F05A8);
  swift_storeEnumTagMultiPayload();
  *uint64_t v40 = (char)v20;
  v40[1] = 0;
  sub_10001323C(v33, v39, &qword_1002F05E0);
  Binding.projectedValue.getter();
  uint64_t v43 = v71;
  Binding.wrappedValue.getter();
  LanguageOption.locale.getter();
  uint64_t v44 = v65;
  uint64_t v45 = v43;
  uint64_t v46 = v66;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v45, v73);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v42, 1, v44) == 1)
  {
    static Locale.current.getter();
    sub_10000B070(v42, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v67, v42, v44);
  }
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  uint64_t v47 = v76;
  LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)();
  uint64_t v48 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v77, v47, v81);
  sub_100014894(&qword_1002F05F8, &qword_1002F05C0);
  uint64_t v49 = (uint64_t)v78;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v48, &qword_1002F05C0);
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = (uint64_t)v75;
  uint64_t v52 = &v75[*(int *)(v74 + 36)];
  *(void *)&v52[*(int *)(v41 + 24)] = v50;
  swift_storeEnumTagMultiPayload();
  *(_WORD *)uint64_t v52 = 0;
  sub_10001323C(v49, v51, &qword_1002F05C8);
  uint64_t v53 = v82;
  sub_10001323C(v51, v82, &qword_1002F05D0);
  uint64_t v54 = v69;
  sub_10000C3A4(v39, v69, &qword_1002F05E8);
  uint64_t v55 = v83;
  sub_10000C3A4(v53, v83, &qword_1002F05D0);
  uint64_t v56 = v84;
  sub_10000C3A4(v54, v84, &qword_1002F05E8);
  uint64_t v57 = sub_100007620(&qword_1002F0600);
  sub_10000C3A4(v55, v56 + *(int *)(v57 + 48), &qword_1002F05D0);
  sub_10000B070(v53, &qword_1002F05D0);
  sub_10000B070(v39, &qword_1002F05E8);
  sub_10000B070(v55, &qword_1002F05D0);
  return sub_10000B070(v54, &qword_1002F05E8);
}

uint64_t sub_100038CF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002F0560);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v5 = static Axis.Set.horizontal.getter();
  uint64_t v6 = sub_100007620(&qword_1002F0568);
  sub_100037388(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v5, a1, &qword_1002F0560);
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(sub_100007620(&qword_1002F0570) + 36));
  uint64_t *v8 = KeyPath;
  v8[1] = 1;
  return sub_10000B070((uint64_t)v5, &qword_1002F0560);
}

uint64_t sub_100038DD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.languageLabelContext.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100038E00()
{
  return EnvironmentValues.languageLabelContext.setter();
}

uint64_t sub_100038E28()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100038E4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.dynamicTypeSize.setter();
}

unint64_t sub_100038F20()
{
  unint64_t result = qword_1002F0640;
  if (!qword_1002F0640)
  {
    sub_100007928(&qword_1002F0638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0640);
  }
  return result;
}

unint64_t sub_100038F9C()
{
  unint64_t result = qword_1002F0648;
  if (!qword_1002F0648)
  {
    sub_100007928(&qword_1002F0618);
    sub_100007928(&qword_1002F0638);
    sub_100038F20();
    swift_getOpaqueTypeConformance2();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0648);
  }
  return result;
}

uint64_t sub_100039070(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000390BC()
{
  unint64_t result = qword_1002F0660;
  if (!qword_1002F0660)
  {
    sub_100007928(&qword_1002F0570);
    sub_100014894(&qword_1002F0668, &qword_1002F0560);
    sub_100014894(&qword_1002F0670, &qword_1002F0678);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0660);
  }
  return result;
}

uint64_t *sub_100039180(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (uint64_t *)((char *)a1 + v5);
    uint64_t v7 = (uint64_t *)((char *)a2 + v5);
    sub_100007620(&qword_1002F05A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      void *v6 = *v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_10003929C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  sub_100007620(&qword_1002F05A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for DynamicTypeSize();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(v2, v3);
  }
  else
  {
    return swift_release();
  }
}

_WORD *sub_100039344(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  sub_100007620(&qword_1002F05A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  }
  else
  {
    *uint64_t v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_100039408(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_10000B070((uint64_t)&a1[v4], &qword_1002F05A8);
    sub_100007620(&qword_1002F05A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
    }
    else
    {
      *uint64_t v5 = *v6;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_WORD *sub_1000394EC(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100007620(&qword_1002F05A8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1000395C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 24);
    uint64_t v5 = &a1[v4];
    uint64_t v6 = &a2[v4];
    sub_10000B070((uint64_t)&a1[v4], &qword_1002F05A8);
    uint64_t v7 = sub_100007620(&qword_1002F05A8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1000396B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000396C8);
}

uint64_t sub_1000396C8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_100007620(&qword_1002F0680);
    uint64_t v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_10003977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100039790);
}

unsigned char *sub_100039790(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F0680);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CombinedLanguagePickerPillStyle()
{
  uint64_t result = qword_1002F06E0;
  if (!qword_1002F06E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100039884()
{
  sub_10003991C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10003991C()
{
  if (!qword_1002F06F0)
  {
    type metadata accessor for DynamicTypeSize();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F06F0);
    }
  }
}

uint64_t sub_100039974()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100039990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v55 = a2;
  uint64_t v2 = sub_100007620(&qword_1002F0728);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F0730);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F0738);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002F0740);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620(&qword_1002F0748);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v20 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = sub_100007620(&qword_1002F0750);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v8, v53, v29);
  uint64_t v30 = &v8[*(int *)(v6 + 44)];
  *uint64_t v30 = v20;
  *((void *)v30 + 1) = v22;
  *((void *)v30 + 2) = v24;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v28;
  v30[40] = 0;
  char v31 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_10000C3A4((uint64_t)v8, (uint64_t)v12, &qword_1002F0730);
  uint64_t v40 = &v12[*(int *)(v10 + 44)];
  *uint64_t v40 = v31;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  unsigned char v40[40] = 0;
  sub_10000B070((uint64_t)v8, &qword_1002F0730);
  uint64_t v41 = v54;
  sub_100039D2C((uint64_t)v4);
  uint64_t v42 = static Alignment.center.getter();
  uint64_t v44 = v43;
  uint64_t v45 = (uint64_t)&v16[*(int *)(v14 + 44)];
  sub_10000C3A4((uint64_t)v4, v45, &qword_1002F0728);
  uint64_t v46 = (uint64_t *)(v45 + *(int *)(sub_100007620(&qword_1002F0758) + 36));
  *uint64_t v46 = v42;
  v46[1] = v44;
  sub_10000C3A4((uint64_t)v12, (uint64_t)v16, &qword_1002F0738);
  sub_10000B070((uint64_t)v4, &qword_1002F0728);
  sub_10000B070((uint64_t)v12, &qword_1002F0738);
  if (*(unsigned char *)(v41 + 1) == 1) {
    uint64_t v47 = static Color.primary.getter();
  }
  else {
    uint64_t v47 = static Color.secondary.getter();
  }
  uint64_t v48 = v47;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4((uint64_t)v16, (uint64_t)v19, &qword_1002F0740);
  uint64_t v50 = (uint64_t *)&v19[*(int *)(v17 + 36)];
  *uint64_t v50 = KeyPath;
  v50[1] = v48;
  sub_10000B070((uint64_t)v16, &qword_1002F0740);
  return sub_10001323C((uint64_t)v19, v55, &qword_1002F0748);
}

uint64_t sub_100039D2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v100 = a1;
  uint64_t v94 = sub_100007620(&qword_1002F0760);
  uint64_t v2 = __chkstk_darwin(v94);
  uint64_t v79 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v81 = (uint64_t)&v76 - v4;
  uint64_t v91 = type metadata accessor for Material();
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v87 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100007620(&qword_1002F0768);
  uint64_t v6 = __chkstk_darwin(v93);
  uint64_t v78 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v80 = (char *)&v76 - v8;
  uint64_t v88 = sub_100007620(&qword_1002F0770);
  __chkstk_darwin(v88);
  uint64_t v92 = (uint64_t)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100007620(&qword_1002F0778);
  __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Capsule();
  __chkstk_darwin(v11 - 8);
  uint64_t v84 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100007620(&qword_1002F0780);
  uint64_t v13 = __chkstk_darwin(v86);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v77 = (uint64_t)&v76 - v16;
  uint64_t v96 = sub_100007620(&qword_1002F0788);
  __chkstk_darwin(v96);
  uint64_t v98 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100007620(&qword_1002F0790);
  __chkstk_darwin(v83);
  uint64_t v85 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100007620(&qword_1002F0798);
  __chkstk_darwin(v97);
  uint64_t v90 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v20);
  uint64_t v22 = (_OWORD *)((char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_100007620(&qword_1002F07A0);
  uint64_t v23 = __chkstk_darwin(v82);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v76 - v26;
  uint64_t v28 = type metadata accessor for DynamicTypeSize();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v31 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v32 = *v1;
  type metadata accessor for CombinedLanguagePickerPillStyle();
  sub_1000FFE9C((uint64_t)v31);
  char v33 = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  if (v32 != 1)
  {
    if ((v33 & 1) == 0)
    {
      uint64_t v65 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v66 = type metadata accessor for RoundedCornerStyle();
      uint64_t v67 = (uint64_t)v84;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v84, v65, v66);
      uint64_t v68 = v87;
      static Material.bar.getter();
      uint64_t v69 = (uint64_t)v79;
      uint64_t v70 = v89;
      uint64_t v71 = v91;
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(&v79[*(int *)(v94 + 36)], v68, v91);
      sub_10003AE1C(v67, v69, (uint64_t (*)(void))&type metadata accessor for Capsule);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v71);
      sub_10003AE84(v67, (uint64_t (*)(void))&type metadata accessor for Capsule);
      uint64_t v45 = &qword_1002F0760;
      uint64_t v72 = v69;
      uint64_t v73 = v81;
      sub_10001323C(v72, v81, &qword_1002F0760);
      sub_10000C3A4(v73, v92, &qword_1002F0760);
      swift_storeEnumTagMultiPayload();
      sub_10003AA0C();
      sub_10003AADC();
      uint64_t v74 = (uint64_t)v95;
      _ConditionalContent<>.init(storage:)();
      sub_10000C3A4(v74, v98, &qword_1002F0778);
      swift_storeEnumTagMultiPayload();
      sub_10003ABAC(&qword_1002F07D0, &qword_1002F0798, (void (*)(void))sub_10003AC34, (void (*)(void))sub_10003AD4C);
      sub_10003ABAC(&qword_1002F07F0, &qword_1002F0778, (void (*)(void))sub_10003AA0C, (void (*)(void))sub_10003AADC);
      _ConditionalContent<>.init(storage:)();
      sub_10000B070(v74, &qword_1002F0778);
      uint64_t v55 = v73;
      goto LABEL_9;
    }
    uint64_t v47 = (char *)v22 + *(int *)(v20 + 20);
    uint64_t v48 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v49 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 104))(v47, v48, v49);
    __asm { FMOV            V0.2D, #10.0 }
    *uint64_t v22 = _Q0;
    uint64_t v51 = v87;
    static Material.bar.getter();
    uint64_t v52 = (uint64_t)v78;
    uint64_t v53 = v89;
    uint64_t v54 = v91;
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(&v78[*(int *)(v93 + 36)], v51, v91);
    sub_10003AE1C((uint64_t)v22, v52, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v51, v54);
    sub_10003AE84((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v45 = &qword_1002F0768;
    uint64_t v27 = v80;
    sub_10001323C(v52, (uint64_t)v80, &qword_1002F0768);
    sub_10000C3A4((uint64_t)v27, v85, &qword_1002F0768);
    swift_storeEnumTagMultiPayload();
    sub_10003AC34();
    sub_10003AD4C();
    uint64_t v46 = (uint64_t)v90;
LABEL_6:
    _ConditionalContent<>.init(storage:)();
    sub_10000C3A4(v46, v98, &qword_1002F0798);
    swift_storeEnumTagMultiPayload();
    sub_10003ABAC(&qword_1002F07D0, &qword_1002F0798, (void (*)(void))sub_10003AC34, (void (*)(void))sub_10003AD4C);
    sub_10003ABAC(&qword_1002F07F0, &qword_1002F0778, (void (*)(void))sub_10003AA0C, (void (*)(void))sub_10003AADC);
    _ConditionalContent<>.init(storage:)();
    sub_10000B070(v46, &qword_1002F0798);
    uint64_t v55 = (uint64_t)v27;
LABEL_9:
    uint64_t v64 = v45;
    return sub_10000B070(v55, v64);
  }
  if (v33)
  {
    uint64_t v34 = (char *)v22 + *(int *)(v20 + 20);
    uint64_t v35 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v36 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v34, v35, v36);
    __asm { FMOV            V0.2D, #10.0 }
    *uint64_t v22 = _Q0;
    uint64_t v42 = static Color.translateAccentColor.getter();
    uint64_t KeyPath = swift_getKeyPath();
    sub_10003AE1C((uint64_t)v22, (uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v44 = (uint64_t *)&v25[*(int *)(v82 + 36)];
    *uint64_t v44 = KeyPath;
    v44[1] = v42;
    sub_10003AE84((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
    uint64_t v45 = &qword_1002F07A0;
    sub_10001323C((uint64_t)v25, (uint64_t)v27, &qword_1002F07A0);
    sub_10000C3A4((uint64_t)v27, v85, &qword_1002F07A0);
    swift_storeEnumTagMultiPayload();
    sub_10003AC34();
    sub_10003AD4C();
    uint64_t v46 = (uint64_t)v90;
    goto LABEL_6;
  }
  uint64_t v56 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v57 = type metadata accessor for RoundedCornerStyle();
  uint64_t v58 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 104))(v84, v56, v57);
  uint64_t v59 = static Color.translateAccentColor.getter();
  uint64_t v60 = swift_getKeyPath();
  sub_10003AE1C(v58, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v61 = (uint64_t *)&v15[*(int *)(v86 + 36)];
  *uint64_t v61 = v60;
  v61[1] = v59;
  sub_10003AE84(v58, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v62 = v77;
  sub_10001323C((uint64_t)v15, v77, &qword_1002F0780);
  sub_10000C3A4(v62, v92, &qword_1002F0780);
  swift_storeEnumTagMultiPayload();
  sub_10003AA0C();
  sub_10003AADC();
  uint64_t v63 = (uint64_t)v95;
  _ConditionalContent<>.init(storage:)();
  sub_10000C3A4(v63, v98, &qword_1002F0778);
  swift_storeEnumTagMultiPayload();
  sub_10003ABAC(&qword_1002F07D0, &qword_1002F0798, (void (*)(void))sub_10003AC34, (void (*)(void))sub_10003AD4C);
  sub_10003ABAC(&qword_1002F07F0, &qword_1002F0778, (void (*)(void))sub_10003AA0C, (void (*)(void))sub_10003AADC);
  _ConditionalContent<>.init(storage:)();
  sub_10000B070(v63, &qword_1002F0778);
  uint64_t v55 = v62;
  uint64_t v64 = &qword_1002F0780;
  return sub_10000B070(v55, v64);
}

unint64_t sub_10003AA0C()
{
  unint64_t result = qword_1002F07A8;
  if (!qword_1002F07A8)
  {
    sub_100007928(&qword_1002F0780);
    sub_10003AD04(&qword_1002F07B0, (void (*)(uint64_t))&type metadata accessor for Capsule);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F07A8);
  }
  return result;
}

unint64_t sub_10003AADC()
{
  unint64_t result = qword_1002F07B8;
  if (!qword_1002F07B8)
  {
    sub_100007928(&qword_1002F0760);
    sub_10003AD04(&qword_1002F07B0, (void (*)(uint64_t))&type metadata accessor for Capsule);
    sub_100014894(&qword_1002F07C0, &qword_1002F07C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F07B8);
  }
  return result;
}

uint64_t sub_10003ABAC(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003AC34()
{
  unint64_t result = qword_1002F07D8;
  if (!qword_1002F07D8)
  {
    sub_100007928(&qword_1002F07A0);
    sub_10003AD04(&qword_1002F07E0, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F07D8);
  }
  return result;
}

uint64_t sub_10003AD04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10003AD4C()
{
  unint64_t result = qword_1002F07E8;
  if (!qword_1002F07E8)
  {
    sub_100007928(&qword_1002F0768);
    sub_10003AD04(&qword_1002F07E0, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    sub_100014894(&qword_1002F07C0, &qword_1002F07C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F07E8);
  }
  return result;
}

uint64_t sub_10003AE1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10003AE84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10003AEE8()
{
  unint64_t result = qword_1002F07F8;
  if (!qword_1002F07F8)
  {
    sub_100007928(&qword_1002F0748);
    sub_10003AF88();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F07F8);
  }
  return result;
}

unint64_t sub_10003AF88()
{
  unint64_t result = qword_1002F0800;
  if (!qword_1002F0800)
  {
    sub_100007928(&qword_1002F0740);
    sub_10003B028();
    sub_100014894(&qword_1002F0820, &qword_1002F0758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0800);
  }
  return result;
}

unint64_t sub_10003B028()
{
  unint64_t result = qword_1002F0808;
  if (!qword_1002F0808)
  {
    sub_100007928(&qword_1002F0738);
    sub_10003B0A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0808);
  }
  return result;
}

unint64_t sub_10003B0A4()
{
  unint64_t result = qword_1002F0810;
  if (!qword_1002F0810)
  {
    sub_100007928(&qword_1002F0730);
    sub_100014894(&qword_1002F0818, &qword_1002F0750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F0810);
  }
  return result;
}

NSString sub_10003B144()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030E6F0 = (uint64_t)result;
  return result;
}

uint64_t sub_10003B17C()
{
  return swift_retain();
}

uint64_t sub_10003B220@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_10003B2CC()
{
  return swift_release();
}

uint64_t sub_10003B3AC()
{
  return swift_retain();
}

uint64_t sub_10003B450@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 64);
  return swift_retain();
}

uint64_t sub_10003B4FC()
{
  return swift_release();
}

id sub_10003B5DC()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 72);

  return v1;
}

void sub_10003B68C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = a2;
  id v3 = a2;
}

void *sub_10003B6C0()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

id sub_10003B768@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 80);
  *a2 = v4;

  return v4;
}

void sub_10003B820(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

void *sub_10003B8FC()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 88);
  id v2 = v1;
  return v1;
}

id sub_10003B9A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 88);
  *a2 = v4;

  return v4;
}

void sub_10003BA5C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10003BB38()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_100019614(v1);
  return v1;
}

uint64_t sub_10003BBEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 96);
  uint64_t v5 = *(void *)(v3 + 104);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_100048B88;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_100019614(v4);
}

uint64_t sub_10003BCD8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = sub_100048B38;
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_100019614(v2);
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4((uint64_t)v4);
  return swift_release();
}

uint64_t sub_10003BE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  sub_100019614(a2);
  return sub_1000324E4(v3);
}

uint64_t sub_10003BE80()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 112);
  sub_100019614(v1);
  return v1;
}

uint64_t sub_10003BF34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 112);
  uint64_t v5 = *(void *)(v3 + 120);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_100047760;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_100019614(v4);
}

uint64_t sub_10003C020(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = sub_100047720;
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_100019614(v2);
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4((uint64_t)v4);
  return swift_release();
}

uint64_t sub_10003C17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a3;
  sub_100019614(a2);
  return sub_1000324E4(v3);
}

uint64_t sub_10003C1C8()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t sub_10003C268@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 128);
  return result;
}

uint64_t sub_10003C310()
{
  return swift_release();
}

uint64_t sub_10003C3E0()
{
  return swift_retain();
}

uint64_t sub_10003C484@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 136);
  return swift_retain();
}

uint64_t sub_10003C530()
{
  return swift_release();
}

uint64_t sub_10003C610()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t sub_10003C6B0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 144);
  return result;
}

uint64_t sub_10003C758()
{
  return swift_release();
}

uint64_t sub_10003C828()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 145);
}

uint64_t sub_10003C8C8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 145);
  return result;
}

uint64_t sub_10003C970()
{
  return swift_release();
}

uint64_t sub_10003CA40()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 146);
}

uint64_t sub_10003CAE0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 146);
  return result;
}

uint64_t sub_10003CB88()
{
  return swift_release();
}

void *sub_10003CC58()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 152);
  id v2 = v1;
  return v1;
}

id sub_10003CD00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 152);
  *a2 = v4;

  return v4;
}

void sub_10003CDB8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

void *sub_10003CE94()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = v1;
  return v1;
}

id sub_10003CF3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 160);
  *a2 = v4;

  return v4;
}

void sub_10003CFF4(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

void *sub_10003D0D0()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 168);
  id v2 = v1;
  return v1;
}

id sub_10003D178@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 168);
  *a2 = v4;

  return v4;
}

void sub_10003D230(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_10003D30C()
{
  return swift_release();
}

uint64_t sub_10003D3A8()
{
  return swift_release();
}

uint64_t sub_10003D444()
{
  return swift_release();
}

uint64_t sub_10003D508()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t sub_10003D5A8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 176);
  return result;
}

uint64_t sub_10003D650()
{
  return swift_release();
}

uint64_t sub_10003D720()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t sub_10003D7C0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 177);
  return result;
}

uint64_t sub_10003D868()
{
  return swift_release();
}

uint64_t sub_10003D938(char a1)
{
  uint64_t v2 = v1;
  int v3 = a1 & 1;
  uint64_t v4 = type metadata accessor for DisambiguationResultModel.RenderingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v16 = v1;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned __int8 *)(v1 + 178) != v3)
  {
    swift_getKeyPath();
    uint64_t v16 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v9 = *(void **)(v1 + 88);
    if (v9)
    {
      swift_getKeyPath();
      uint64_t v16 = v2;
      id v10 = v9;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v11 = (unsigned int *)&enum case for DisambiguationResultModel.RenderingMode.dictionary(_:);
      if (!*(unsigned char *)(v2 + 178)) {
        uint64_t v11 = (unsigned int *)&enum case for DisambiguationResultModel.RenderingMode.disambiguation(_:);
      }
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *v11, v4);
      dispatch thunk of DisambiguationResultModel.renderMode.setter();
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v15 - 3) = 0;
    *(&v15 - 2) = 0;
    *(&v15 - 4) = v2;
    *((unsigned char *)&v15 - 8) = 1;
    uint64_t v16 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v13 = swift_getKeyPath();
    __chkstk_darwin(v13);
    *(&v15 - 3) = 0;
    *(&v15 - 2) = 0;
    *(&v15 - 4) = v2;
    *((unsigned char *)&v15 - 8) = 1;
    uint64_t v16 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_getKeyPath();
    uint64_t v16 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    uint64_t v14 = *(void (**)(uint64_t, void))(v2 + 112);
    if (v14)
    {
      swift_getKeyPath();
      uint64_t v16 = v2;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      v14(v2, *(unsigned __int8 *)(v2 + 178));
      return sub_1000324E4((uint64_t)v14);
    }
  }
  return result;
}

uint64_t sub_10003DCCC()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 178);
}

uint64_t sub_10003DD6C(uint64_t a1, char a2)
{
  char v3 = *(unsigned char *)(a1 + 178);
  *(unsigned char *)(a1 + 178) = a2;
  return sub_10003D938(v3);
}

uint64_t sub_10003DDA0()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v0 + 178) == 1)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v0 + 200) & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10003DF10()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 184);
}

__n128 sub_10003DFB4@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned __int8 v4 = *(unsigned char *)(v3 + 200);
  __n128 result = *(__n128 *)(v3 + 184);
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_10003E064()
{
  return swift_release();
}

uint64_t sub_10003E144(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = a3;
  *(unsigned char *)(a1 + 20UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a4 & 1;
  return sub_10003DDA0();
}

uint64_t sub_10003E17C()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v0 + 178) == 1)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    if ((*(unsigned char *)(v0 + 224) & 1) == 0)
    {
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10003E2EC()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 208);
}

__n128 sub_10003E390@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unsigned __int8 v4 = v3[14].n128_u8[0];
  __n128 result = v3[13];
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_10003E440()
{
  return swift_release();
}

uint64_t sub_10003E520(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = a3;
  *(unsigned char *)(a1 + 224) = a4 & 1;
  return sub_10003E17C();
}

uint64_t sub_10003E558()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 225);
}

uint64_t sub_10003E5F8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 225) = a2;
  return result;
}

uint64_t sub_10003E600()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 226);
}

uint64_t sub_10003E6A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 226);
  return result;
}

uint64_t sub_10003E748()
{
  return swift_release();
}

uint64_t sub_10003E818()
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 227);
}

uint64_t sub_10003E8B8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 227);
  return result;
}

uint64_t sub_10003E960()
{
  return swift_release();
}

uint64_t sub_10003EA30()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003EAE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 232);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003EBA8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EC88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 232) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003ECF0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003EDA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 240);
  return swift_bridgeObjectRetain();
}

uint64_t sub_10003EE68()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EF48(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10003EFB0@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_10000C3A4(v1 + 264, a1, &qword_1002FC3C0);
}

uint64_t sub_10003F07C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  return sub_10000C3A4(v3 + 264, a2, &qword_1002FC3C0);
}

uint64_t sub_10003F148(uint64_t a1)
{
  sub_10000C3A4(a1, (uint64_t)v2, &qword_1002FC3C0);
  swift_getKeyPath();
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_10000B070((uint64_t)v2, &qword_1002FC3C0);
}

uint64_t sub_10003F238(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 264;
  swift_beginAccess();
  sub_100048F5C(a2, v3);
  return swift_endAccess();
}

void sub_10003F29C(void *a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v53) = a2;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v52 = &v50[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v54 = &v50[-v9];
  swift_getKeyPath();
  uint64_t v57 = v3;
  uint64_t v58 = a1;
  *(void *)&long long v61 = v3;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  id v10 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v11 = *(id *)(v3 + 72);
  char v12 = dispatch thunk of PersistedTranslation.showDisambiguation.getter();

  if (v12)
  {
    swift_getKeyPath();
    *(void *)&long long v61 = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v13 = *(id *)(v3 + 72);
    dispatch thunk of PersistedTranslation.speechResult.getter();

    sub_100029624(&v61, *((uint64_t *)&v62 + 1));
    dispatch thunk of SpeechResult.alternatives.getter();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v50[-16] = v3;
    *(void *)&v50[-8] = v60;
    uint64_t v59 = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10000B070((uint64_t)v60, &qword_1002FC3C0);
    sub_10000AB68((uint64_t)&v61);
  }
  else
  {
    uint64_t v63 = 0;
    long long v61 = 0u;
    long long v62 = 0u;
    uint64_t v15 = swift_getKeyPath();
    __chkstk_darwin(v15);
    *(void *)&v50[-16] = v3;
    *(void *)&v50[-8] = &v61;
    v60[0] = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    sub_10000B070((uint64_t)&v61, &qword_1002FC3C0);
  }
  int v51 = sub_100043F14();
  if (v51)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EAE0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "asrAlternatives exists and has low-confidence items so creating asrAlternativesBehaviour object", v19, 2u);
      swift_slowDealloc();
    }

    id v20 = [objc_allocWithZone((Class)type metadata accessor for ASRAlternativesBehaviour()) init];
    uint64_t v21 = swift_getKeyPath();
    __chkstk_darwin(v21);
    *(void *)&v50[-16] = v3;
    *(void *)&v50[-8] = v20;
    *(void *)&long long v61 = v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();

    swift_getKeyPath();
    *(void *)&long long v61 = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v22 = *(void *)(v3 + 168);
    if (v22)
    {
      *(void *)(v22 + OBJC_IVAR____TtC17SequoiaTranslator24ASRAlternativesBehaviour_delegate + 8) = &off_1002CAC68;
      swift_unknownObjectWeakAssign();
    }
  }
  else
  {
    swift_getKeyPath();
    *(void *)&long long v61 = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v3 + 168))
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100011554(v23, (uint64_t)qword_10030EAE0);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "asrAlternatives is nil or is high confidence, so clearing asrAlternativesBehaviour object", v26, 2u);
        swift_slowDealloc();
      }

      uint64_t v27 = swift_getKeyPath();
      __chkstk_darwin(v27);
      *(void *)&v50[-16] = v3;
      *(void *)&v50[-8] = 0;
      *(void *)&long long v61 = v3;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
    }
  }
  if (v53) {
    [*(id *)(v3 + 304) reset];
  }
  sub_100041C68();
  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v28 = *(id *)(v3 + 72);
  uint64_t v29 = v54;
  dispatch thunk of PersistedTranslation.sourceLocale.getter();

  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v30 = *(id *)(v3 + 72);
  char v31 = v52;
  dispatch thunk of PersistedTranslation.targetLocale.getter();

  id v32 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v34 = Locale._bridgeToObjectiveC()().super.isa;
  id v53 = [v32 initWithSourceLocale:isa targetLocale:v34];

  uint64_t v35 = v55;
  uint64_t v37 = v56 + 8;
  uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v56 + 8);
  v36(v31, v55);
  v36(v29, v35);
  uint64_t v56 = v37;
  if ((v51 & 1) != 0
    || (swift_getKeyPath(),
        *(void *)&long long v61 = v3,
        ObservationRegistrar.access<A, B>(_:keyPath:)(),
        swift_release(),
        (uint64_t v38 = *(void **)(v3 + 80)) == 0))
  {
    char v40 = 0;
  }
  else
  {
    id v39 = v38;
    char v40 = sub_1000C45C0(v53);
  }
  uint64_t v41 = swift_getKeyPath();
  __chkstk_darwin(v41);
  *(void *)&v50[-16] = v3;
  v50[-8] = v40 & 1;
  *(void *)&long long v61 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v42 = *(void **)(v3 + 72);
  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  id v43 = v42;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v44 = *(id *)(v3 + 72);
  uint64_t v45 = (uint64_t)v54;
  dispatch thunk of PersistedTranslation.sourceLocale.getter();

  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v46 = (void *)sub_100047B44(v43, v45, (uint64_t)sub_1000494BC);

  swift_release();
  v36((unsigned char *)v45, v55);
  swift_release();
  uint64_t v47 = swift_getKeyPath();
  __chkstk_darwin(v47);
  *(void *)&v50[-16] = v3;
  *(void *)&v50[-8] = v46;
  *(void *)&long long v61 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  swift_getKeyPath();
  *(void *)&long long v61 = v3;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v48 = *(id *)(v3 + 72);
  LOBYTE(v43) = sub_100200C14();

  uint64_t v49 = swift_getKeyPath();
  __chkstk_darwin(v49);
  *(void *)&v50[-16] = v3;
  v50[-8] = (_BYTE)v43;
  *(void *)&long long v61 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  sub_100040FEC();
}

uint64_t sub_10003FDB0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000438E0(a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_10003FE10()
{
  uint64_t v1 = v0;
  uint64_t v53 = sub_100007620(&qword_1002EF7C0);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  int v51 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100007620(&qword_1002F0FF8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  uint64_t v63 = v4;
  __chkstk_darwin(v3);
  uint64_t v60 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F1000);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  uint64_t v65 = v7;
  __chkstk_darwin(v6);
  long long v61 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v69 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F1008);
  char v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 - 8);
  uint64_t v67 = v11;
  uint64_t v68 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002EF7B8);
  uint64_t v70 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100007620(&qword_1002F1010);
  uint64_t v57 = *(void (***)(char *, uint64_t))(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100007620(&qword_1002F1018);
  uint64_t v59 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v55 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v72[0] = v0;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  uint64_t v48 = sub_100007620(&qword_1002EF7C8);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  v72[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  swift_retain();
  sub_100007620(&qword_1002F1020);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_release();
  uint64_t v20 = sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  sub_100014894(&qword_1002F1028, &qword_1002F1008);
  uint64_t v21 = v54;
  uint64_t v22 = v14;
  uint64_t v23 = v67;
  uint64_t v47 = v20;
  Publisher.combineLatest<A>(_:)();
  (*((void (**)(char *, uint64_t))v68 + 1))(v22, v23);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v49 = v17;
  uint64_t v50 = v15;
  v70 += 8;
  uint64_t v46 = v24;
  v24(v17, v15);
  uint64_t v25 = sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  v72[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v27 = *(void *)(v26 - 8);
  id v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v67 = v27 + 56;
  uint64_t v68 = v28;
  uint64_t v29 = (uint64_t)v69;
  v28((uint64_t)v69, 1, 1, v26);
  sub_100014894(&qword_1002F1030, &qword_1002F1010);
  unint64_t v66 = sub_100022364();
  id v30 = v55;
  uint64_t v31 = v56;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v29, &qword_1002FAEF0);

  v57[1](v21, v31);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1000493C0;
  *(void *)(v33 + 24) = v32;
  uint64_t v57 = (void (**)(char *, uint64_t))&protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100014894(&qword_1002F1038, &qword_1002F1018);
  uint64_t v34 = v58;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v34);
  swift_getKeyPath();
  v72[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v72[0] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v72[0] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v72[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_10000C3A4((uint64_t)(v1 + 33), (uint64_t)v72, &qword_1002FC3C0);
  sub_100007620(&qword_1002FC3C0);
  uint64_t v35 = v60;
  Optional.publisher.getter();
  sub_10000B070((uint64_t)v72, &qword_1002FC3C0);
  id v71 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v58 = v26;
  v68(v29, 1, 1, v26);
  sub_100014894(&qword_1002F1040, &qword_1002F0FF8);
  uint64_t v37 = v61;
  uint64_t v36 = v62;
  uint64_t v59 = v25;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v29, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v36);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002F1048, &qword_1002F1000);
  uint64_t v38 = v64;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v37, v38);
  swift_getKeyPath();
  v72[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v72[0] = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v72[0] = v1;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  v72[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (v1[17])
  {
    swift_beginAccess();
    swift_retain();
    char v40 = v49;
    Published.projectedValue.getter();
    swift_endAccess();
    swift_release();
    v72[0] = (id)static OS_dispatch_queue.main.getter();
    uint64_t v41 = (uint64_t)v69;
    v68((uint64_t)v69, 1, 1, v58);
    uint64_t v42 = v51;
    uint64_t v43 = v50;
    Publisher.receive<A>(on:options:)();
    sub_10000B070(v41, &qword_1002FAEF0);

    v46(v40, v43);
    swift_allocObject();
    swift_weakInit();
    sub_100014894(&qword_1002EF7D8, &qword_1002EF7C0);
    uint64_t v44 = v53;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v44);
    swift_getKeyPath();
    v72[0] = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v72[0] = v1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    v72[0] = v1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100040C0C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    swift_getKeyPath();
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v6 = [*(id *)(v5 + 72) identifier];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    if (a2)
    {
      if (v7 != a1 || v9 != a2) {
        _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v12 = [*(id *)(v5 + 72) identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    if (!a2 || v13 == a1 && v15 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
    uint64_t v16 = swift_getKeyPath();
    __chkstk_darwin(v16);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100040F3C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100044168();
    return swift_release();
  }
  return result;
}

uint64_t sub_100040F94()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100041C68();
    return swift_release();
  }
  return result;
}

uint64_t sub_100040FEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F0FD0);
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F0FD8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v42 - v11;
  swift_getKeyPath();
  uint64_t v13 = (char *)v0 + OBJC_IVAR____TtC17SequoiaTranslator29CommittedTranslationViewModel___observationRegistrar;
  uint64_t v52 = v1;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_10004186C(v14);
  swift_bridgeObjectRelease();
  uint64_t v43 = v12;
  uint64_t v44 = v10;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v15 = v1 + 30;
    uint64_t v16 = v6;
    uint64_t v17 = (void *)sub_10011050C((unint64_t)&_swiftEmptyArrayStorage);
  }
  else
  {
    uint64_t v15 = v1 + 30;
    uint64_t v16 = v6;
    uint64_t v17 = &_swiftEmptySetSingleton;
  }
  uint64_t v45 = v15;
  uint64_t v46 = v7;
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(&v42 - 2) = (uint64_t)v1;
  *(&v42 - 1) = (uint64_t)v17;
  id v51 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  id v51 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v19 = (void *)v1[11];
  uint64_t v20 = v16;
  uint64_t v21 = v13;
  if (v19)
  {
    id v22 = v19;
    uint64_t v23 = v21;
    uint64_t v24 = v16;
    uint64_t v25 = v47;
    dispatch thunk of DisambiguationResultModel.$sourceAttributedText.getter();

    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    id v51 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v26 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v27 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v48, 1, 1, v26);
    sub_100014894(&qword_1002F0FE0, &qword_1002F0FD0);
    sub_100022364();
    id v28 = v43;
    uint64_t v29 = v50;
    Publisher.receive<A>(on:options:)();
    sub_10000B070(v27, &qword_1002FAEF0);

    id v30 = v25;
    uint64_t v20 = v24;
    uint64_t v21 = v23;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v29);
    swift_allocObject();
    swift_weakInit();
    sub_100014894(&qword_1002F0FE8, &qword_1002F0FD8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v20);
    swift_getKeyPath();
    id v51 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v51 = v1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v51 = v1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
  }
  swift_getKeyPath();
  id v51 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v32 = (void *)v1[11];
  if (v32)
  {
    id v33 = v32;
    uint64_t v35 = v46;
    uint64_t v34 = v47;
    dispatch thunk of DisambiguationResultModel.$targetAttributedText.getter();

    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    id v51 = (id)static OS_dispatch_queue.main.getter();
    uint64_t v36 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
    uint64_t v43 = v21;
    uint64_t v38 = v20;
    uint64_t v39 = (uint64_t)v48;
    v37(v48, 1, 1, v36);
    sub_100014894(&qword_1002F0FE0, &qword_1002F0FD0);
    sub_100022364();
    char v40 = v44;
    uint64_t v41 = v50;
    Publisher.receive<A>(on:options:)();
    sub_10000B070(v39, &qword_1002FAEF0);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v34, v41);
    swift_allocObject();
    swift_weakInit();
    sub_100014894(&qword_1002F0FE8, &qword_1002F0FD8);
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v40, v38);
    swift_getKeyPath();
    id v51 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v51 = v1;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    id v51 = v1;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_10004186C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for AnyCancellable();
    sub_100048E2C(&qword_1002F0FF0, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
      uint64_t v12 = v4;
      goto LABEL_29;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v13 >= v9) {
      return sub_100011710();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_100011710();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_100011710();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_100011710();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_100011710();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_100011710();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_100011710();
    }
    while (1)
    {
      AnyCancellable.cancel()();
      uint64_t result = swift_release();
      uint64_t v4 = v12;
      unint64_t v5 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        type metadata accessor for AnyCancellable();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v12 = v4;
        uint64_t v10 = v5;
        if (v23) {
          continue;
        }
      }
      return sub_100011710();
    }
  }
  __break(1u);
  return result;
}

void sub_100041B28(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    id v3 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
}

uint64_t sub_100041C68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for GenderTipManager.Registration(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  uint64_t v13 = v0;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v5 = *(id *)(v0 + 72);
  char v6 = dispatch thunk of PersistedTranslation.showDisambiguation.getter();

  if (v6)
  {
    swift_getKeyPath();
    uint64_t v13 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v1 + 136))
    {
      swift_getKeyPath();
      uint64_t v13 = v1;
      swift_retain();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v7 = *(id *)(v1 + 72);
      sub_1000F5AFC(v7, 0, v4);
      char v8 = sub_1000F5D28(v4);
      sub_1000492B4((uint64_t)v4);
      swift_release();
    }
    else
    {
      char v8 = 0;
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v12 - 2) = v1;
    *((unsigned char *)&v12 - 8) = v8 & 1;
    uint64_t v13 = v1;
  }
  else
  {
    uint64_t v9 = swift_getKeyPath();
    __chkstk_darwin(v9);
    *(&v12 - 2) = v1;
    *((unsigned char *)&v12 - 8) = 0;
    uint64_t v13 = v1;
  }
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_100041F1C(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_getKeyPath();
    uint64_t v17 = v4;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    [*(id *)(v4 + 72) setTtsPlaybackRateDouble:*(double *)&a1];
    char v11 = sub_1000294C4(*(double *)&a1);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v4;
    *((unsigned char *)&v16 - 8) = v11;
    uint64_t v17 = v4;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
  }
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = v4;
  *(unsigned char *)(v14 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a3 & 1;
  swift_retain();
  sub_100056780((uint64_t)v10, (uint64_t)&unk_1002F0FB8, v14);
  return swift_release();
}

uint64_t sub_100042164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 208) = a5;
  *(void *)(v5 + 96) = a4;
  sub_100007620(&qword_1002F33C0);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v5 + 112) = v6;
  *(void *)(v5 + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(v6 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F33E0);
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = swift_task_alloc();
  return _swift_task_switch(sub_100042298, 0, 0);
}

uint64_t sub_100042298()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_getKeyPath();
  *(void *)(v0 + 152) = OBJC_IVAR____TtC17SequoiaTranslator29CommittedTranslationViewModel___observationRegistrar;
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(void *)(v0 + 168) = v1[8];
  swift_getKeyPath();
  *(void *)(v0 + 32) = v1;
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = (void *)v1[9];
  *(void *)(v0 + 176) = v2;
  swift_getKeyPath();
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v1;
  id v3 = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v1[2];
  if (v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 184) = v5;
  uint64_t v6 = sub_100048E2C(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v7;
  *id v7 = v0;
  v7[1] = sub_100042504;
  char v8 = *(unsigned char *)(v0 + 208);
  return sub_100231610((uint64_t)v3, v6, v8, v4, v5, 0, 0, 0);
}

uint64_t sub_100042504()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 20UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v0;
  swift_task_dealloc();
  id v3 = *(void **)(v2 + 176);
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_release();

    uint64_t v4 = sub_1000428E8;
  }
  else
  {

    swift_release();
    uint64_t v4 = sub_100042684;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100042684()
{
  int v1 = *(unsigned __int8 *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 96);
  swift_getKeyPath();
  *(void *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v3 = *(id *)(v2 + 72);
  dispatch thunk of PersistedTranslation.selfLoggingInvocationId.getter();

  if (v1) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = 2;
  }
  swift_getKeyPath();
  *(void *)(v0 + 88) = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  [*(id *)(v2 + 72) ttsPlaybackRateDouble];
  uint64_t v6 = 2;
  uint64_t v7 = 3;
  uint64_t v8 = 3;
  if (v5 == 1.25) {
    uint64_t v8 = 4;
  }
  if (v5 != 1.0) {
    uint64_t v7 = v8;
  }
  if (v5 != 0.75) {
    uint64_t v6 = v7;
  }
  if (v5 == 0.5) {
    uint64_t v9 = 1;
  }
  else {
    uint64_t v9 = v6;
  }
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 120);
  sub_10000C3A4(*(void *)(v0 + 144), v10, (uint64_t *)&unk_1002F33E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10000B070(*(void *)(v0 + 136), (uint64_t *)&unk_1002F33E0);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 120);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v15 = *(void *)(v0 + 112);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 32))(v13, *(void *)(v0 + 136), v15);
    uint64_t v16 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v16 translationTTSPlayedWithInvocationId:isa sourceOrTargetLanguage:v4 isAutoplayTranslation:0 ttsPlaybackSpeed:v9 audioChannel:1];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  sub_10000B070(*(void *)(v0 + 144), (uint64_t *)&unk_1002F33E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1000428E8()
{
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    double v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *double v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Exception while toggling TTS: %@", v4, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  id v8 = [v7 underlyingErrors];

  sub_100007620((uint64_t *)&unk_1002FA720);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)(v9 + 32);
  swift_errorRetain();
  swift_bridgeObjectRelease();
  v0[7] = v10;
  sub_10000B0CC(0, &qword_1002EEC58);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    swift_errorRelease();
    goto LABEL_18;
  }
  uint64_t v11 = (void *)v0[8];
  id v12 = [v11 domain];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v13 == 0x65746F6D6552544CLL && v15 == 0xEF6572756C696146)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
LABEL_16:
      swift_errorRelease();
      goto LABEL_17;
    }
  }
  if ([v11 code] != (id)919) {
    goto LABEL_16;
  }
  uint64_t v17 = v0[13];
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v20 = static MainActor.shared.getter();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = &protocol witness table for MainActor;
  v21[4] = v19;
  swift_release();
  sub_10005692C(v17, (uint64_t)&unk_1002F0FC8, (uint64_t)v21);
  swift_errorRelease();
  swift_release();
LABEL_17:

LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100042DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a1;
  v4[7] = a4;
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100042E38, v6, v5);
}

uint64_t sub_100042E38()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    swift_getKeyPath();
    uint64_t v2 = swift_task_alloc();
    *(void *)(v2 + 16) = Strong;
    *(unsigned char *)(v2 + 24) = 1;
    *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = Strong;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  **(unsigned char **)(v0 + 48) = Strong == 0;
  os_log_type_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100042FA4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v62 = a3;
  uint64_t v57 = a2;
  uint64_t v6 = type metadata accessor for DisambiguationResultModel.TextLocation();
  uint64_t v56 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F0FA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DisambiguationResultModel.LinkRangeInfo();
  uint64_t v61 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v58 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002F0FA8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = type metadata accessor for DisambiguationLinkInfo();
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v53 - 3) = 0;
    *(&v53 - 4) = (id)v4;
    uint64_t v63 = v4;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v30 = swift_getKeyPath();
    __chkstk_darwin(v30);
    *(&v53 - 3) = 0;
    uint64_t v51 = 0;
    *(&v53 - 4) = (id)v4;
    LOBYTE(v52) = 1;
    uint64_t v63 = v4;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    return swift_release();
  }
  uint64_t v54 = v12;
  uint64_t v55 = v21;
  swift_getKeyPath();
  uint64_t v24 = v4 + OBJC_IVAR____TtC17SequoiaTranslator29CommittedTranslationViewModel___observationRegistrar;
  uint64_t v63 = v4;
  uint64_t v59 = sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  uint64_t v60 = v24;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v25 = *(void **)(v4 + 88);
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = (void *)DisambiguationResultModel.disambiguableResult.getter();

    if (v27)
    {
      id v53 = v26;
      sub_10000C3A4(v62, (uint64_t)v19, &qword_1002F0FA8);
      uint64_t v28 = v55;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v19, 1, v20) == 1)
      {

        sub_10000B070((uint64_t)v19, &qword_1002F0FA8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v23, v19, v20);
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v17, v23, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v17, 0, 1, v20);
        id v32 = v53;
        dispatch thunk of DisambiguationResultModel.rangeInfo(for:)();
        sub_10000B070((uint64_t)v17, &qword_1002F0FA8);
        uint64_t v33 = v61;
        uint64_t v34 = v54;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v11, 1, v54) == 1)
        {
          (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v20);

          sub_10000B070((uint64_t)v11, &qword_1002F0FA0);
        }
        else
        {
          uint64_t v35 = v34;
          uint64_t v36 = v58;
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v58, v11, v35);
          swift_getKeyPath();
          uint64_t v63 = v4;
          ObservationRegistrar.access<A, B>(_:keyPath:)();
          swift_release();
          if ((*(unsigned char *)(v4 + 178) & 1) == 0)
          {
            uint64_t v39 = v56;
            (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v8, v57, v6);
            int v40 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v8, v6);
            id v41 = v53;
            if (v40 == enum case for DisambiguationResultModel.TextLocation.source(_:))
            {
              uint64_t v42 = (void *)DisambiguationResultModel.LinkRangeInfo.targetRange.getter();
              uint64_t v44 = v43;
              uint64_t v45 = swift_getKeyPath();
              uint64_t v46 = v36;
              __chkstk_darwin(v45);
              *(&v53 - 4) = (id)v4;
              *(&v53 - 3) = v42;
              uint64_t v51 = v44;
              LOBYTE(v52) = 0;
              uint64_t v63 = v4;
            }
            else
            {
              if (v40 != enum case for DisambiguationResultModel.TextLocation.target(_:))
              {
                uint64_t result = _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
                return result;
              }
              uint64_t v47 = (void *)DisambiguationResultModel.LinkRangeInfo.sourceRange.getter();
              uint64_t v49 = v48;
              uint64_t v50 = swift_getKeyPath();
              uint64_t v46 = v36;
              __chkstk_darwin(v50);
              *(&v53 - 4) = (id)v4;
              *(&v53 - 3) = v47;
              uint64_t v51 = v49;
              LOBYTE(v52) = 0;
              uint64_t v63 = v4;
            }
            ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

            swift_release();
            (*(void (**)(char *, uint64_t))(v33 + 8))(v46, v54);
            return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v23, v20);
          }

          (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v35);
          (*(void (**)(char *, uint64_t))(v55 + 8))(v23, v20);
        }
      }
    }
    else
    {
    }
  }
  uint64_t v37 = swift_getKeyPath();
  __chkstk_darwin(v37);
  *(&v53 - 3) = 0;
  *(&v53 - 4) = (id)v4;
  uint64_t v63 = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  uint64_t v38 = swift_getKeyPath();
  __chkstk_darwin(v38);
  *(&v53 - 3) = 0;
  uint64_t v51 = 0;
  *(&v53 - 4) = (id)v4;
  LOBYTE(v52) = 1;
  uint64_t v63 = v4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

id sub_1000438E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CoreAnalyticsLogger.CardType();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v47 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v46 = (char *)&v44 - v9;
  uint64_t v10 = sub_100007620(&qword_1002F0F98);
  __chkstk_darwin(v10 - 8);
  uint64_t v54 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CoreAnalyticsLogger.InteractionLocation();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v48 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100011554(v15, (uint64_t)qword_10030EAE0);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "User changed disambiguation selection; saving changes to the database",
      v18,
      2u);
    swift_slowDealloc();
  }
  uint64_t v56 = v12;

  uint64_t v55 = v13;
  if (a1)
  {
    id v19 = [a1 edge];
    id v20 = [v19 type];

    uint64_t v21 = *(void **)(v2 + 304);
    id v45 = v20;
    unsigned __int8 v22 = [v21 hasAnyChangeOfType:v20];
  }
  else
  {
    id v45 = 0;
    unsigned __int8 v22 = 1;
  }
  sub_100029624((void *)(v2 + 24), *(void *)(v2 + 48));
  swift_getKeyPath();
  uint64_t v57 = v2;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v23 = *(id *)(v2 + 72);
  dispatch thunk of TranslationStore.updateDisambiguation(for:)();

  id result = [*(id *)(v2 + 304) addUserSelection:a1];
  if (a1 && (v22 & 1) == 0)
  {
    uint64_t v25 = *(void *)(v2 + 248);
    unint64_t v26 = *(void *)(v2 + 256);
    sub_10000CB44(v25, v26);
    uint64_t v27 = v54;
    sub_10000CB58(v25, v26, v54);
    uint64_t v29 = v55;
    uint64_t v28 = v56;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v27, 1, v56) == 1)
    {
      return (id)sub_10000B070(v27, &qword_1002F0F98);
    }
    else
    {
      uint64_t v30 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v48, v27, v28);
      swift_getKeyPath();
      uint64_t v57 = v2;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v31 = *(id *)(v2 + 72);
      id v32 = v46;
      dispatch thunk of PersistedTranslation.sourceLocale.getter();

      swift_getKeyPath();
      uint64_t v57 = v2;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v33 = *(id *)(v2 + 72);
      uint64_t v34 = v47;
      dispatch thunk of PersistedTranslation.targetLocale.getter();

      id v35 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v37 = Locale._bridgeToObjectiveC()().super.isa;
      id v38 = [v35 initWithSourceLocale:isa targetLocale:v37];

      uint64_t v39 = v50;
      int v40 = *(void (**)(char *, uint64_t))(v49 + 8);
      v40(v34, v50);
      v40(v32, v39);
      type metadata accessor for CoreAnalyticsLogger();
      static CoreAnalyticsLogger.shared.getter();
      uint64_t v42 = v51;
      uint64_t v41 = v52;
      uint64_t v43 = v53;
      (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for CoreAnalyticsLogger.CardType.committed(_:), v53);
      dispatch thunk of CoreAnalyticsLogger.didInteractWithDisambiguation(fromCard:location:type:localePair:)();

      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v28);
    }
  }
  return result;
}

uint64_t sub_100043F14()
{
  swift_getKeyPath();
  v12[0] = v0;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  sub_10000C3A4(v0 + 264, (uint64_t)&v10, &qword_1002FC3C0);
  if (v11)
  {
    sub_100048DE4(&v10, (uint64_t)v12);
    sub_100029624(v12, v12[3]);
    uint64_t v1 = dispatch thunk of SpeechSausage.tokenBins.getter();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = v1 + 32;
      swift_bridgeObjectRetain();
      do
      {
        sub_1000295C0(v3, (uint64_t)&v10);
        sub_100029624(&v10, v11);
        sub_100200C94((uint64_t)v9);
        sub_100029624(v9, v9[3]);
        char v4 = dispatch thunk of SpeechTokenAlternatives.isLowConfidence.getter();
        sub_1000295C0((uint64_t)&v10, (uint64_t)v8);
        if (v4)
        {
          sub_100029624(v8, v8[3]);
          uint64_t v5 = *(void *)(sub_100200D20() + 16);
          swift_bridgeObjectRelease();
          sub_10000AB68((uint64_t)v8);
          sub_10000AB68((uint64_t)v9);
          sub_10000AB68((uint64_t)&v10);
          if (v5)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v6 = 1;
            goto LABEL_13;
          }
        }
        else
        {
          sub_10000AB68((uint64_t)v8);
          sub_10000AB68((uint64_t)v9);
          sub_10000AB68((uint64_t)&v10);
        }
        v3 += 40;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = 0;
LABEL_13:
    sub_10000AB68((uint64_t)v12);
  }
  else
  {
    sub_10000B070((uint64_t)&v10, &qword_1002FC3C0);
    return 0;
  }
  return v6;
}

void sub_100044168()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v65 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v58 - v5;
  uint64_t v7 = type metadata accessor for DisambiguationResultModel.TextLocation();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v67 = (uint64_t)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DisambiguationResultModel.RenderingMode();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100043F14())
  {
    uint64_t v61 = v2;
    uint64_t v63 = v8;
    uint64_t v64 = v7;
    swift_getKeyPath();
    uint64_t v14 = (void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator29CommittedTranslationViewModel___observationRegistrar);
    uint64_t v69 = v0;
    uint64_t v15 = sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_beginAccess();
    sub_10000C3A4(v0 + 264, (uint64_t)&v70, &qword_1002FC3C0);
    if (v71)
    {
      sub_100048DE4(&v70, (uint64_t)v72);
      swift_getKeyPath();
      *(void *)&long long v70 = v0;
      uint64_t v62 = v15;
      v58[1] = v14;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v59 = v11;
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
      os_log_type_t v17 = (unsigned int *)&enum case for DisambiguationResultModel.RenderingMode.dictionary(_:);
      if (!*(unsigned char *)(v0 + 178)) {
        os_log_type_t v17 = (unsigned int *)&enum case for DisambiguationResultModel.RenderingMode.disambiguation(_:);
      }
      uint64_t v18 = *v17;
      uint64_t v60 = v10;
      v16(v13, v18, v10);
      id v19 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v19 initWithString:v20];

      sub_100029624(v72, v72[3]);
      uint64_t v22 = dispatch thunk of SpeechSausage.tokenBins.getter();
      uint64_t v23 = *(void *)(v22 + 16);
      if (v23)
      {
        uint64_t v24 = (void *)(v22 + 32);
        do
        {
          sub_100044B54(v24, (uint64_t)v13, v21);
          v24 += 5;
          --v23;
        }
        while (v23);
      }
      swift_bridgeObjectRelease();
      swift_weakInit();
      (*(void (**)(uint64_t, void, uint64_t))(v63 + 104))(v67, enum case for DisambiguationResultModel.TextLocation.source(_:), v64);
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v26 = Strong;
        swift_getKeyPath();
        uint64_t v68 = (void *)v26;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        id v27 = *(id *)(v26 + 72);
        swift_release();
        v58[0] = v27;
        dispatch thunk of PersistedTranslation.sourceLocale.getter();
        uint64_t v28 = v65;
        dispatch thunk of PersistedTranslation.targetLocale.getter();
        id v29 = objc_allocWithZone((Class)_LTLocalePair);
        Class isa = Locale._bridgeToObjectiveC()().super.isa;
        Class v31 = Locale._bridgeToObjectiveC()().super.isa;
        id v32 = [v29 initWithSourceLocale:isa targetLocale:v31];

        id v33 = *(void (**)(char *, uint64_t))(v66 + 8);
        uint64_t v34 = v28;
        uint64_t v35 = v61;
        v33(v34, v61);
        v33(v6, v35);

        id v36 = [v32 sourceLocale];
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        Locale.isRTL()();
        v33(v6, v35);
      }
      uint64_t v45 = v60;
      type metadata accessor for DisambiguationResultModel();
      unint64_t v46 = static DisambiguationResultModel.defaultAttributes(forRTL:)();
      uint64_t v48 = v63;
      uint64_t v47 = v64;
      if (!v46) {
        unint64_t v46 = sub_1001FF520((uint64_t)&_swiftEmptyArrayStorage);
      }
      uint64_t v49 = v46;
      unint64_t v50 = sub_1000CD84C(v67, (uint64_t)v13);
      if (!v50) {
        unint64_t v50 = sub_1001FF520((uint64_t)&_swiftEmptyArrayStorage);
      }
      sub_100044E88(v49, v50);
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v67, v47);
      type metadata accessor for Key(0);
      sub_100048E2C((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
      Class v51 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v21 addAttributes:v51 range:0, [v21 length]];

      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v52 = type metadata accessor for Logger();
      sub_100011554(v52, (uint64_t)qword_10030EAE0);
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v55 = 0;
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Updating sourceText from ASR alternatives", v55, 2u);
        swift_slowDealloc();
      }

      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      v58[-2] = v1;
      v58[-1] = v21;
      uint64_t v68 = v1;
      id v57 = v21;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();

      swift_weakDestroy();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v13, v45);
      sub_10000AB68((uint64_t)v72);
      return;
    }
    sub_10000B070((uint64_t)&v70, &qword_1002FC3C0);
  }
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_100011554(v37, (uint64_t)qword_10030EAE0);
  id v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    int v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Updating sourceText from resultModel", v40, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  v72[0] = v1;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v41 = (void *)v1[11];
  if (v41)
  {
    id v42 = v41;
    uint64_t v43 = (void *)dispatch thunk of DisambiguationResultModel.sourceAttributedText.getter();
  }
  else
  {
    uint64_t v43 = 0;
  }
  uint64_t v44 = swift_getKeyPath();
  __chkstk_darwin(v44);
  v58[-2] = v1;
  v58[-1] = v43;
  v72[0] = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_100044B54(void *a1, uint64_t a2, void *a3)
{
  id v18 = a3;
  type metadata accessor for AttributedString();
  __chkstk_darwin();
  uint64_t v4 = type metadata accessor for DisambiguationResultModel.RenderingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  sub_100200C94((uint64_t)v19);
  sub_100029624(v19, v20);
  dispatch thunk of SpeechTokenAlternatives.text.getter();
  id v8 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithString:v9];

  sub_100029624(a1, a1[3]);
  id v11 = sub_100200DAC();
  if (v11)
  {
    uint64_t v12 = v11;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DisambiguationResultModel.RenderingMode.disambiguation(_:), v4);
    char v13 = static DisambiguationResultModel.RenderingMode.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v13)
    {
      if (qword_1002EE570 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_10030E6F0;
      id v15 = v12;
      [v10 addAttribute:v14 value:v15 range:0, [v10 length]];
    }
  }
  sub_100029624(v19, v20);
  if (dispatch thunk of SpeechTokenAlternatives.hasSpaceAfter.getter())
  {
    sub_10000B0CC(0, &qword_1002F0F90);
    AttributedString.init(stringLiteral:)();
    uint64_t v16 = NSAttributedString.init(_:)();
    [v10 appendAttributedString:v16];
  }
  [v18 appendAttributedString:v10];

  return sub_10000AB68((uint64_t)v19);
}

uint64_t sub_100044E88(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_100047818(a1, (uint64_t)sub_1000477C8, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_100044F14(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v56 - v14;
  unint64_t v16 = a2;
  if (!a2)
  {
    swift_getKeyPath();
    uint64_t v67 = v2;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    os_log_type_t v17 = *(void **)(v2 + 152);
    if (!v17) {
      goto LABEL_12;
    }
    id v18 = [v17 string];
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v19;
  }
  uint64_t v20 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v20 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    unint64_t v62 = v16;
    uint64_t v63 = a1;
    uint64_t v65 = v8;
    swift_getKeyPath();
    uint64_t v67 = v3;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v21 = [*(id *)(v3 + 72) identifier];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v59 = v22;

    swift_getKeyPath();
    uint64_t v67 = v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v64 = v3;
    id v23 = *(id *)(v3 + 72);
    dispatch thunk of PersistedTranslation.sourceLocale.getter();
    dispatch thunk of PersistedTranslation.targetLocale.getter();
    id v24 = objc_allocWithZone((Class)_LTLocalePair);
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    Class v26 = Locale._bridgeToObjectiveC()().super.isa;
    id v27 = [v24 initWithSourceLocale:isa targetLocale:v26];

    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v13, v9);
    v28(v15, v9);

    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100011554(v29, (uint64_t)qword_10030EAE0);
    unint64_t v30 = v59;
    swift_bridgeObjectRetain_n();
    unint64_t v31 = v62;
    swift_bridgeObjectRetain_n();
    id v32 = v27;
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    int v35 = v34;
    uint64_t v60 = v33;
    BOOL v36 = os_log_type_enabled(v33, v34);
    uint64_t v37 = (uint64_t)v65;
    if (v36)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      uint64_t v67 = v58;
      *(_DWORD *)uint64_t v38 = 136446722;
      int v57 = v35;
      swift_bridgeObjectRetain();
      uint64_t v39 = v61;
      uint64_t v66 = sub_100202FD4(v61, v30, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2050;
      uint64_t v40 = v63;
      uint64_t v41 = String.count.getter();
      swift_bridgeObjectRelease();
      uint64_t v66 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2114;
      uint64_t v66 = (uint64_t)v32;
      id v42 = v32;
      uint64_t v37 = (uint64_t)v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v56 = v32;

      uint64_t v43 = v40;
      uint64_t v44 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v57, "Retranslating translation %{public}s with text of length %{public}ld with pair: %{public}@", (uint8_t *)v38, 0x20u);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      uint64_t v43 = v63;
      uint64_t v39 = v61;
    }
    uint64_t v53 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v37, 1, 1, v53);
    uint64_t v54 = swift_allocObject();
    swift_weakInit();
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = 0;
    v55[3] = 0;
    v55[4] = v43;
    v55[5] = v31;
    v55[6] = v32;
    v55[7] = v54;
    v55[8] = v39;
    v55[9] = v30;
    sub_100056780(v37, (uint64_t)&unk_1002F0F70, (uint64_t)v55);
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v45 = type metadata accessor for Logger();
  sub_100011554(v45, (uint64_t)qword_10030EAE0);
  swift_retain_n();
  unint64_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136446210;
    swift_getKeyPath();
    uint64_t v66 = v3;
    sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v49 = [*(id *)(v3 + 72) identifier];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    uint64_t v66 = sub_100202FD4(v50, v52, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "Not retranslating translation %{public}s because the new source text is empty or nil", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1000457C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[28] = a8;
  v8[29] = v15;
  v8[26] = a6;
  v8[27] = a7;
  unsigned char v8[24] = a4;
  v8[25] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[30] = v9;
  v8[31] = *(void *)(v9 - 8);
  v8[32] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[33] = v10;
  v8[34] = *(void *)(v10 - 8);
  v8[35] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Locale();
  v8[36] = v11;
  v8[37] = *(void *)(v11 - 8);
  v8[38] = swift_task_alloc();
  v8[39] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v8[40] = v12;
  v8[41] = *(void *)(v12 - 8);
  v8[42] = swift_task_alloc();
  return _swift_task_switch(sub_1000459BC, 0, 0);
}

uint64_t sub_1000459BC()
{
  uint64_t v1 = (void *)v0[26];
  UUID.init()();
  v0[43] = [objc_allocWithZone((Class)_LTTranslator) init];
  id v2 = [v1 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = [v1 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100045AFC;
  uint64_t v5 = v0[42];
  uint64_t v7 = v0[38];
  uint64_t v6 = v0[39];
  uint64_t v8 = v0[24];
  uint64_t v9 = v0[25];
  return sub_100164530((uint64_t)(v0 + 8), v8, v9, v6, v7, 257, 0, v5);
}

uint64_t sub_100045AFC()
{
  id v2 = *(void **)v1;
  id v3 = *(void **)(*(void *)v1 + 344);
  *(void *)(*(void *)v1 + 36UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v0;
  swift_task_dealloc();

  uint64_t v4 = v2[39];
  uint64_t v5 = v2[36];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2[37] + 8);
  v6(v2[38], v5);
  v6(v4, v5);
  if (v0) {
    uint64_t v7 = sub_100046030;
  }
  else {
    uint64_t v7 = sub_100045CB0;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100045CB0()
{
  uint64_t v21 = v0[42];
  uint64_t v19 = v0[41];
  uint64_t v20 = v0[40];
  uint64_t v17 = v0[34];
  uint64_t v18 = v0[33];
  uint64_t v16 = v0[31];
  uint64_t v1 = v0[29];
  uint64_t v14 = v0[32];
  uint64_t v15 = v0[30];
  uint64_t v11 = (void *)v0[26];
  uint64_t v12 = v0[35];
  uint64_t v2 = v0[25];
  uint64_t v9 = v0[28];
  uint64_t v10 = v0[24];
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  char v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_1000295C0((uint64_t)(v0 + 8), (uint64_t)(v0 + 13));
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v9;
  v4[4] = v1;
  sub_100048DE4((long long *)(v0 + 13), (uint64_t)(v4 + 5));
  v4[10] = v10;
  v4[11] = v2;
  v4[12] = v11;
  v0[6] = sub_100048DFC;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10008BA1C;
  v0[5] = &unk_1002CAD90;
  uint64_t v5 = _Block_copy(v0 + 2);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v11;
  static DispatchQoS.unspecified.getter();
  v0[23] = _swiftEmptyArrayStorage;
  sub_100048E2C((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v5);

  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v12, v18);
  sub_10000AB68((uint64_t)(v0 + 8));
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100046030()
{
  char v13 = v0;
  (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030EAE0);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[29];
  if (v4)
  {
    uint64_t v6 = v0[28];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    swift_bridgeObjectRetain();
    v0[22] = sub_100202FD4(v6, v5, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2112;
    uint64_t v9 = _convertErrorToNSError(_:)();
    v0[21] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to retranslate %{public}s with new source: %@", (uint8_t *)v7, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100046328(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v62 = a7;
  uint64_t v64 = a5;
  uint64_t v68 = a2;
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StoredSpeechResult();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620((uint64_t *)&unk_1002F33A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SpeechResultOrigin();
  uint64_t v65 = *(void *)(v19 - 8);
  uint64_t v66 = (char *)v19;
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v61 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v23 = (char *)v51 - v22;
  uint64_t v54 = type metadata accessor for CoreAnalyticsLogger.CardType();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  unint64_t v52 = (char *)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v26 = result;
  uint64_t v58 = a6;
  uint64_t v67 = v23;
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v55 = type metadata accessor for Logger();
  sub_100011554(v55, (uint64_t)qword_10030EAE0);
  swift_bridgeObjectRetain_n();
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.info.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v60 = a4;
  uint64_t v57 = v12;
  uint64_t v56 = v13;
  unint64_t v59 = a3;
  if (v29)
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    v70[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v30 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v69 = sub_100202FD4(v68, a3, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Finished retranslation with identifier %{public}s, replacing it in the card", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a4 = v60;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100029624(a4, a4[3]);
  uint64_t v31 = dispatch thunk of TranslationResult.disambiguableResult.getter();
  id v32 = v67;
  if (v31)
  {
    id v33 = (void *)v31;
    if ([*(id *)(v26 + 304) restoreChangesToResult:v31])
    {
      if (qword_1002EE5E8 != -1) {
        swift_once();
      }
      sub_100011554(v55, (uint64_t)qword_10030E9C0);
      os_log_type_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v34, v35))
      {
        BOOL v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Restored user selection changes to disambiguable result after retranslation", v36, 2u);
        swift_slowDealloc();
      }

      id v32 = v67;
    }
    if ([v33 hasDisambiguations])
    {
      [v33 hasDisambiguationsOfType:1];
      v51[1] = [v33 hasDisambiguationsOfType:0];
      sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
      uint64_t v37 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
      NSUserDefaults.genderDisambiguationEnabled.getter();

      type metadata accessor for CoreAnalyticsLogger();
      static CoreAnalyticsLogger.shared.getter();
      uint64_t v38 = v53;
      uint64_t v39 = v52;
      uint64_t v40 = v54;
      (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, enum case for CoreAnalyticsLogger.CardType.committed(_:), v54);
      id v32 = v67;
      dispatch thunk of CoreAnalyticsLogger.didOfferDisambiguation(fromCard:hasGender:hasMeaning:genderDisambiguationSettingEnabled:)();

      swift_release();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
    }
    else
    {
    }
  }
  swift_getKeyPath();
  v70[0] = v26;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  id v41 = [*(id *)(v26 + 72) sourceInput];
  if (v41)
  {
    id v42 = v41;
    dispatch thunk of AnySpeechResult.value.getter();

    sub_100029624(v70, v70[3]);
    dispatch thunk of SpeechResult.origin.getter();
    uint64_t v43 = v65;
    uint64_t v44 = v66;
    (*(void (**)(char *, void, uint64_t, char *))(v65 + 56))(v18, 0, 1, v66);
    sub_10000AB68((uint64_t)v70);
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v43 + 48))(v18, 1, v44) != 1)
    {
      (*(void (**)(char *, char *, char *))(v43 + 32))(v32, v18, v44);
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v43 = v65;
    uint64_t v44 = v66;
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v65 + 56))(v18, 1, 1, v66);
  }
  (*(void (**)(char *, void, char *))(v43 + 104))(v32, enum case for SpeechResultOrigin.text(_:), v44);
  sub_10000B070((uint64_t)v18, (uint64_t *)&unk_1002F33A0);
LABEL_22:
  swift_bridgeObjectRetain();
  id v45 = [v62 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(char *, char *, char *))(v43 + 16))(v61, v32, v44);
  StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
  swift_getKeyPath();
  v70[0] = v26;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v46 = *(void *)(v26 + 16);
  unint64_t v47 = v59;
  if (v46
    && (swift_retain(), uint64_t v48 = sub_10004805C(v68, v47, (uint64_t)v15, (uint64_t)v60, v46), swift_release(), v48))
  {
    sub_10003F29C(v48, 1);
  }
  else
  {
    if (qword_1002EE628 != -1) {
      swift_once();
    }
    sub_100011554(v55, (uint64_t)qword_10030EA80);
    swift_bridgeObjectRetain_n();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v66 = v15;
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      v70[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_100202FD4(v68, v47, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Failed to update translation %{public}s in session after retranslating", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(char *, uint64_t))(v56 + 8))(v66, v57);
      return (*(uint64_t (**)(char *, char *))(v43 + 8))(v67, v44);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_release();

  (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v57);
  return (*(uint64_t (**)(char *, char *))(v43 + 8))(v32, v44);
}

void sub_100046E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getKeyPath();
  uint64_t v31 = v4;
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = *(void **)(v4 + 152);
  if (!v7)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100011554(v20, (uint64_t)qword_10030EA98);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v22)) {
      goto LABEL_17;
    }
    id v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Can't retranslate after ASR disambiguation because source text is nil", v23, 2u);
    goto LABEL_16;
  }
  id v8 = [v7 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = String.count.getter();
  if (a3 < 0 || v9 < a4 + a3)
  {
    swift_bridgeObjectRelease();
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100011554(v24, (uint64_t)qword_10030EA98);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v21, v25)) {
      goto LABEL_17;
    }
    uint64_t v26 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136446466;
    uint64_t v27 = _NSRange.description.getter();
    sub_100202FD4(v27, v28, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2082;
    uint64_t v29 = _NSRange.description.getter();
    sub_100202FD4(v29, v30, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v25, "Can't retranslate after ASR disambiguation because replacement range %{public}s is out of bounds of source text range %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_16:
    swift_slowDealloc();
LABEL_17:

    return;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 stringByReplacingCharactersInRange:a3 withString:a4];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030EA98);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136642819;
    swift_bridgeObjectRetain();
    sub_100202FD4(v13, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "User selected ASR disambiguation; retranslating with new source text: %{sensitive}s",
      v19,
      0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_100044F14(v13, v15);
  swift_bridgeObjectRelease();
}

uint64_t sub_10004734C()
{
  swift_release();
  sub_10000AB68(v0 + 24);
  swift_release();

  sub_1000324E4(*(void *)(v0 + 96));
  sub_1000324E4(*(void *)(v0 + 112));
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000CDF0(*(void *)(v0 + 248), *(void *)(v0 + 256));
  sub_10000B070(v0 + 264, &qword_1002FC3C0);

  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator29CommittedTranslationViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100047440()
{
  sub_10004734C();

  return swift_deallocClassInstance();
}

uint64_t sub_100047498()
{
  return type metadata accessor for CommittedTranslationViewModel();
}

uint64_t type metadata accessor for CommittedTranslationViewModel()
{
  uint64_t result = qword_1002F0858;
  if (!qword_1002F0858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000474EC()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_100047624@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CommittedTranslationViewModel();
  uint64_t result = Identifiable<>.id.getter();
  *a1 = result;
  return result;
}

void *sub_10004766C()
{
  return &protocol witness table for ObjectIdentifier;
}

uint64_t sub_100047690()
{
  return sub_100048FC4();
}

uint64_t sub_1000476B0()
{
  return sub_100049004();
}

uint64_t sub_1000476D0()
{
  return sub_100048AA0();
}

uint64_t sub_1000476E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100047720(uint64_t a1, char a2)
{
  os_log_type_t v3 = *(uint64_t (**)(uint64_t *, char *))(v2 + 16);
  uint64_t v6 = a1;
  char v5 = a2;
  return v3(&v6, &v5);
}

uint64_t sub_100047760(void *a1, unsigned __int8 *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

void sub_100047790()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  os_log_type_t v3 = *(void **)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  id v4 = v2;
}

id sub_1000477C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v4 = *a1;
  sub_10000B170((uint64_t)(a1 + 1), (uint64_t)(a2 + 1));
  *a2 = v4;

  return v4;
}

uint64_t sub_100047818(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v46 = a1;
  uint64_t v47 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v48 = v8;
  uint64_t v49 = 0;
  uint64_t v50 = v11 & v9;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100047E84((uint64_t)&v44);
  id v12 = v44;
  if (!v44) {
    goto LABEL_27;
  }
  sub_100048EC8(v45, v43);
  uint64_t v13 = *(void **)a5;
  unint64_t v15 = sub_1002037B8((uint64_t)v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_100206814();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    id v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(void *)(v23[6] + 8 * v15) = v12;
    sub_100048EC8(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    void v23[2] = v26;
LABEL_16:
    sub_100047E84((uint64_t)&v44);
    for (unint64_t i = v44; v44; unint64_t i = v44)
    {
      sub_100048EC8(v45, v43);
      uint64_t v29 = *(void **)a5;
      unint64_t v31 = sub_1002037B8((uint64_t)i);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_100204660(v34, 1);
        unint64_t v36 = sub_1002037B8((uint64_t)i);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_10000B170((uint64_t)v43, (uint64_t)v42);
        sub_10000AB68((uint64_t)v43);

        unint64_t v28 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        sub_10000AB68((uint64_t)v28);
        sub_100048EC8(v42, v28);
      }
      else
      {
        uint64_t v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = i;
        sub_100048EC8(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        void v38[2] = v40;
      }
      sub_100047E84((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_100011710();
    return swift_release();
  }
  sub_100204660(v18, a4 & 1);
  unint64_t v20 = sub_1002037B8((uint64_t)v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_10000B170((uint64_t)v43, (uint64_t)v42);
    sub_10000AB68((uint64_t)v43);

    os_log_type_t v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    sub_10000AB68((uint64_t)v22);
    sub_100048EC8(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for Key(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100047B44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v24 - v11;
  __chkstk_darwin(v10);
  char v14 = (char *)&v24 - v13;
  sub_100048E2C(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  unint64_t v28 = &type metadata for TranslateFeatures;
  unint64_t v29 = sub_10000AB14();
  v27[0] = 5;
  char v15 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v27);
  if ((v15 & 1) == 0) {
    goto LABEL_7;
  }
  if ((dispatch thunk of PersistedTranslation.showDisambiguation.getter() & 1) == 0) {
    goto LABEL_7;
  }
  type metadata accessor for PersistedTranslation();
  if (!swift_dynamicCastClass()) {
    goto LABEL_7;
  }
  swift_unknownObjectRetain();
  uint64_t v16 = dispatch thunk of PersistedTranslation.disambiguableResult.getter();
  if (!v16)
  {

LABEL_7:
    uint64_t v25 = dispatch thunk of PersistedTranslation.displaySourceText.getter();
    dispatch thunk of PersistedTranslation.displayText.getter();
    unint64_t v20 = v9;
    char v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v21(v12, v26, v5);
    v21(v20, (uint64_t)v14, v5);
    id v22 = objc_allocWithZone((Class)type metadata accessor for DisambiguationResultModel());
    uint64_t v19 = DisambiguationResultModel.init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)();
    goto LABEL_8;
  }
  BOOL v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v25 = v16;
  v17(v12, v26, v5);
  v17(v9, (uint64_t)v14, v5);
  id v18 = objc_allocWithZone((Class)type metadata accessor for DisambiguationResultModel());
  sub_100019614(a3);
  uint64_t v19 = DisambiguationResultModel.init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)();

LABEL_8:
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  return v19;
}

uint64_t sub_100047E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    sub_10000B170(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(void *)&v24[0] = v11;
    id v12 = v11;
    goto LABEL_23;
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      uint64_t v9 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v13 << 6);
      int64_t v7 = v13;
      goto LABEL_3;
    }
    int64_t v16 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      unint64_t v15 = *(void *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        int64_t v13 = v16;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        unint64_t v15 = *(void *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          int64_t v13 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v16 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          unint64_t v15 = *(void *)(v4 + 8 * v16);
          if (v15) {
            goto LABEL_10;
          }
          int64_t v13 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            unint64_t v15 = *(void *)(v4 + 8 * v13);
            if (v15) {
              goto LABEL_7;
            }
            int64_t v7 = v14 - 1;
            int64_t v17 = v5 + 6;
            while (v14 != v17)
            {
              unint64_t v15 = *(void *)(v4 + 8 * v17++);
              if (v15)
              {
                int64_t v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  id v18 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_100048ED8((uint64_t)v24, (uint64_t)v22);
  if (*(void *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    uint64_t v21 = v23;
    v18(v20);
    return sub_10000B070((uint64_t)v20, &qword_1002F0F88);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_10004805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for StoredSpeechResult();
  v29[3] = v10;
  v29[4] = sub_100048E2C(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  uint64_t v11 = sub_100014830(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, a3, v10);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_1000483F4(v28[0], a1, a2);
  LOBYTE(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v14 = 0;
  if (v10) {
    goto LABEL_13;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v28[0] & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >= *(void *)((v28[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v16 = *(id *)(v28[0] + 8 * v12 + 32);
LABEL_6:
  int64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_1000295C0((uint64_t)v29, (uint64_t)v28);
  dispatch thunk of PersistedTranslation.speechResult.setter();
  sub_1000295C0(a4, (uint64_t)v28);
  dispatch thunk of PersistedTranslation.translationResult.setter();
  sub_100029624((void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store), *(void *)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store + 24));
  dispatch thunk of TranslationStore.save()();
  swift_getKeyPath();
  swift_getKeyPath();
  id v14 = v17;
  id v18 = (void (*)(unint64_t *, void))static Published.subscript.modify();
  unint64_t v20 = v19;
  unint64_t v21 = *v19;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v20 = v21;
  if (!result || (v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100098590(v21);
    unint64_t v21 = result;
    *unint64_t v20 = result;
  }
  if ((v12 & 0x8000000000000000) != 0) {
    goto LABEL_17;
  }
  if (v12 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v22 = *(void **)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x20);
    *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v12 + 0x2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v14;

    specialized Array._endMutation()();
    v18(v28, 0);
    swift_release();
    swift_release();
    sub_100007620(&qword_1002EE8A0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002488D0;
    id v24 = [v14 identifier];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    *(void *)(inited + 32) = v25;
    *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v27;
    sub_1002299E4((void *)inited);
    swift_setDeallocating();
    swift_arrayDestroy();
LABEL_13:
    sub_10000AB68((uint64_t)v29);
    return (uint64_t)v14;
  }
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_1000483F4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  unint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    unint64_t v19 = v4;
    unint64_t v4 = a1 & 0xC000000000000001;
    while (!__OFSUB__(v8--, 1))
    {
      if (v4)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_19;
        }
        if (v8 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_20;
        }
        id v10 = *(id *)(a1 + 32 + 8 * v8);
      }
      uint64_t v11 = v10;
      id v12 = [v10 identifier:v19];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      if (v13 == a2 && v15 == a3)
      {

        swift_bridgeObjectRelease();
        return v8;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0 || !v8) {
        return v8;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
    unint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_100048584(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  v32[3] = a14;
  v32[4] = a15;
  unint64_t v21 = sub_100014830(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(v21, a3, a14);
  *(void *)(a13 + 16) = 0;
  *(void *)(a13 + 136) = 0;
  *(_WORD *)(a13 + 144) = 0;
  *(_OWORD *)(a13 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
  *(_OWORD *)(a13 + 96) = 0u;
  *(_OWORD *)(a13 + 112) = 0u;
  *(unsigned char *)(a13 + 128) = 0;
  *(unsigned char *)(a13 + 146) = 4;
  *(void *)(a13 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  *(void *)(a13 + 168) = 0;
  *(void *)(a13 + 152) = 0;
  *(_DWORD *)(a13 + 175) = 0;
  *(void *)(a13 + 184) = 0;
  *(void *)(a13 + 192) = 0;
  *(unsigned char *)(a13 + 20UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 1;
  *(void *)(a13 + 208) = 0;
  *(void *)(a13 + 216) = 0;
  *(unsigned char *)(a13 + 224) = 1;
  *(_WORD *)(a13 + 225) = 1;
  *(unsigned char *)(a13 + 227) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      unint64_t v29 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      unint64_t v29 = &_swiftEmptySetSingleton;
    }
    *(void *)(a13 + 232) = v29;
    if (_CocoaArrayWrapper.endIndex.getter()) {
      id v22 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      id v22 = &_swiftEmptySetSingleton;
    }
  }
  else
  {
    id v22 = &_swiftEmptySetSingleton;
    *(void *)(a13 + 232) = &_swiftEmptySetSingleton;
  }
  *(void *)(a13 + 24UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v22;
  *(void *)(a13 + 296) = 0;
  *(_OWORD *)(a13 + 264) = 0u;
  *(_OWORD *)(a13 + 28UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
  ObservationRegistrar.init()();
  *(void *)(a13 + 72) = a1;
  id v23 = a1;
  swift_retain();
  swift_release();
  *(void *)(a13 + 16) = a2;
  sub_1000295C0((uint64_t)v32, a13 + 24);
  *(void *)(a13 + 64) = a4;
  id v24 = *(void **)(a13 + 80);
  swift_retain();
  id v25 = a8;

  *(void *)(a13 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a8;
  swift_retain();
  swift_release();
  *(void *)(a13 + 136) = a7;
  *(void *)(a13 + 248) = a5;
  *(void *)(a13 + 256) = a6;
  *(void *)(a13 + 304) = [objc_allocWithZone((Class)_LTDisambiguationChangeManager) init];
  sub_10003F29C(v23, 1);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  sub_100019614(a9);
  sub_100048E2C(&qword_1002F4B90, (void (*)(uint64_t))type metadata accessor for CommittedTranslationViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4(a9);
  swift_release();
  uint64_t v27 = swift_getKeyPath();
  __chkstk_darwin(v27);
  sub_100019614(a11);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  sub_1000324E4(a11);
  swift_release();
  sub_10003FE10();
  sub_10000AB68((uint64_t)v32);
  return a13;
}

uint64_t sub_10004893C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  long long v22 = a9;
  uint64_t v17 = *(void *)(a13 - 8);
  __chkstk_darwin(a1);
  unint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommittedTranslationViewModel();
  uint64_t v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3, a13);
  return sub_100048584(a1, a2, (uint64_t)v19, v23, v24, v25, v26, v27, v22, *((uint64_t *)&v22 + 1), a10, a11, v20, a13, a14);
}

uint64_t sub_100048A88()
{
  return sub_100048AEC();
}

uint64_t sub_100048AA0()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(v2 + 112);
  *(void *)(v2 + 112) = v1;
  *(void *)(v2 + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v3;
  sub_100019614(v1);
  return sub_1000324E4(v4);
}

uint64_t sub_100048AEC()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = v1;
  *(void *)(v2 + 104) = v3;
  sub_100019614(v1);
  return sub_1000324E4(v4);
}

uint64_t sub_100048B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t *, void *, void *))(v7 + 16);
  uint64_t v13 = a1;
  v11[1] = a5;
  uint64_t v12 = a3;
  v10[1] = a7;
  v11[0] = a4;
  v10[0] = a6;
  return v8(&v13, a2, &v12, v11, v10);
}

uint64_t sub_100048B88(void *a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  return (*(uint64_t (**)(void, uint64_t, void, void, void, void, void))(v5 + 16))(*a1, a2, *a3, *a4, a4[1], *a5, a5[1]);
}

void sub_100048BD0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 152);
  *(void *)(v1 + 152) = v2;
  id v4 = v2;
}

uint64_t sub_100048C10()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100048C48()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100048CA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100021B58;
  return sub_1000457C8(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100048D8C()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000AB68(v0 + 40);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100048DE4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100048DFC()
{
  return sub_100046328(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (void *)(v0 + 40), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void **)(v0 + 96));
}

uint64_t sub_100048E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  return swift_retain();
}

uint64_t sub_100048E24()
{
  return swift_release();
}

uint64_t sub_100048E2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100048E84()
{
  *(void *)(*(void *)(v0 + 16) + 16) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

_OWORD *sub_100048EC8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_100048ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F0F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048F40()
{
  return sub_10003F238(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100048F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002FC3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100048FC4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 40);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v1 + 20UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  return sub_10003DDA0();
}

uint64_t sub_100049004()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 40);
  *(_OWORD *)(v1 + 208) = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v1 + 224) = v2;
  return sub_10003E17C();
}

uint64_t sub_100049044()
{
  return sub_100049140(41);
}

uint64_t sub_10004904C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_100042164(a1, v4, v5, v6, v7);
}

void sub_100049118()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 146) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100049138()
{
  return sub_100049140(40);
}

uint64_t sub_100049140(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_10004918C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_100042DA0(a1, v4, v5, v6);
}

void sub_100049248()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 226) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_100049258()
{
  *(void *)(*(void *)(v0 + 16) + 64) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_10004929C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 176) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000492B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenderTipManager.Registration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100049310()
{
  *(void *)(*(void *)(v0 + 16) + 136) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_100049354()
{
  return sub_10003EF48(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100049370()
{
  return sub_100040F3C();
}

void sub_100049378(void **a1)
{
}

void sub_100049388()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  long long v3 = *(void **)(v1 + 160);
  *(void *)(v1 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  id v4 = v2;
}

uint64_t sub_1000493C0(uint64_t a1, uint64_t a2)
{
  return sub_100040C0C(a1, a2);
}

uint64_t sub_1000493CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_100049408()
{
  return sub_100040F94();
}

uint64_t sub_100049410()
{
  return sub_10003EC88(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100049434()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 144) = *(unsigned char *)(v0 + 24);
}

void sub_10004944C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 145) = *(unsigned char *)(v0 + 24);
}

void sub_10004945C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  long long v3 = *(void **)(v1 + 72);
  *(void *)(v1 + 72) = v2;
  id v4 = v2;
}

void sub_1000494AC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 177) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1000494BC(uint64_t a1, void *a2)
{
  return sub_10003FDB0(a1, a2);
}

void sub_1000494C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  long long v3 = *(void **)(v1 + 168);
  *(void *)(v1 + 168) = v2;
  id v4 = v2;
}

void sub_1000494FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  long long v3 = *(void **)(v1 + 80);
  *(void *)(v1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  id v4 = v2;
}

void sub_10004953C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 227) = *(unsigned char *)(v0 + 24);
}

void sub_100049564()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 128) = *(unsigned char *)(v0 + 24);
}

void sub_100049584()
{
}

void sub_10004959C()
{
}

void sub_1000495B4()
{
}

void sub_1000495CC()
{
}

void sub_1000495E4()
{
}

void sub_1000495FC()
{
}

void sub_100049614()
{
}

void sub_10004962C()
{
}

void sub_100049644()
{
}

uint64_t sub_10004965C()
{
  return sub_100049354();
}

uint64_t sub_100049674()
{
  return sub_100048F40();
}

void sub_10004968C()
{
}

uint64_t sub_1000496A8()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  char v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F1058);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v22 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v22 - v15;
  sub_100100194((uint64_t)&v22 - v15);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v14, enum case for UserInterfaceSizeClass.regular(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v14, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10000C3A4((uint64_t)v16, (uint64_t)v7, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v14, v17, &qword_1002F1058);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v18((uint64_t)v7, 1, v0) != 1)
  {
    sub_10000C3A4((uint64_t)v7, (uint64_t)v11, &qword_1002F1058);
    if (v18(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_1000565D0((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      sub_10000B070((uint64_t)v14, &qword_1002F1058);
      sub_10000B070((uint64_t)v16, &qword_1002F1058);
      v20(v11, v0);
      sub_10000B070((uint64_t)v7, &qword_1002F1058);
      if (v19) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v23 = static HorizontalAlignment.leading.getter();
      uint64_t v24 = 0;
      char v25 = 1;
      sub_100055E98();
      return AnyLayout.init<A>(_:)();
    }
    sub_10000B070((uint64_t)v14, &qword_1002F1058);
    sub_10000B070((uint64_t)v16, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v11, v0);
LABEL_6:
    sub_10000B070((uint64_t)v7, &qword_1002F1200);
    goto LABEL_9;
  }
  sub_10000B070((uint64_t)v14, &qword_1002F1058);
  sub_10000B070((uint64_t)v16, &qword_1002F1058);
  if (v18(v17, 1, v0) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v7, &qword_1002F1058);
LABEL_8:
  uint64_t v23 = static VerticalAlignment.top.getter();
  uint64_t v24 = 0;
  char v25 = 1;
  sub_100055EEC();
  return AnyLayout.init<A>(_:)();
}

id sub_100049ACC()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v7 == 1)
  {
    UIFontTextStyle v0 = UIFontTextStyleTitle3;
    id v1 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:0];
  }
  else
  {
    UIFontTextStyle v0 = UIFontTextStyleTitle1;
    id v1 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle1 compatibleWithTraitCollection:0];
  }
  uint64_t v2 = self;
  [v1 pointSize];
  id v3 = [v2 systemFontOfSize:];
  id v4 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:v0];
  id v5 = [v4 scaledFontForFont:v3 maximumPointSize:1.79769313e308];

  return v5;
}

uint64_t sub_100049CB0()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v2
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        swift_retain(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        swift_release(),
        (((unsigned __int16)v1 | (BYTE2(v1) << 16)) & 0xFF0000) == 0x80000))
  {
    type metadata accessor for ComposeTranslationViewModel(0);
    sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
  }
  else
  {
    sub_100009AF8(BYTE1(v1));
    sub_100007620(&qword_1002F1378);
    static Binding.constant(_:)();
    swift_bridgeObjectRelease();
  }
  return v1;
}

id sub_100049E88()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v3
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        swift_retain(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        swift_release(),
        v2 << 16 == 0x80000))
  {
    id v0 = [self labelColor];
    return v0;
  }
  else
  {
    sub_100055020();
    return (id)static UIColor.quaternarySourceTextColor.getter();
  }
}

id sub_100049FD8()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((((unsigned __int16)v9 | (BYTE2(v9) << 16)) & 0xFF0000) == 0x80000)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    return (id)v9;
  }
  else
  {
    sub_100009AF8(BYTE1(v9));
    sub_100007620(&qword_1002FC3D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1002488D0;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    unint64_t v2 = sub_100055020();
    uint64_t v3 = NSForegroundColorAttributeName;
    uint64_t v4 = static UIColor.quaternaryTranslateAccentColor.getter();
    *(void *)(inited + 64) = v2;
    *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v4;
    sub_1001FF520(inited);
    id v5 = objc_allocWithZone((Class)NSAttributedString);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1000565D0((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v0 = [v5 initWithString:v6 attributes:isa];
  }
  return v0;
}

uint64_t sub_10004A204@<X0>(uint64_t a1@<X8>)
{
  uint64_t v82 = a1;
  uint64_t v83 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v80 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v4 = v3 - 8;
  uint64_t v85 = *(void *)(v86 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v74 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F1130);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F1138);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F1140);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100007620(&qword_1002F1148);
  __chkstk_darwin(v70);
  uint64_t v69 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002F1150);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v77 = v16;
  __chkstk_darwin(v15);
  uint64_t v84 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F1158);
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  uint64_t v75 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0x3FF0000000000000;
  v8[16] = 0;
  uint64_t v20 = sub_100007620(&qword_1002F1160);
  sub_10004AC30(v1, (uint64_t)&v8[*(int *)(v20 + 44)]);
  uint64_t v21 = v4;
  uint64_t v67 = v4;
  uint64_t v71 = v1 + *(int *)(v4 + 36);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v4) = v87;
  sub_10000C3A4((uint64_t)v8, (uint64_t)v11, &qword_1002F1130);
  v11[*(int *)(v9 + 36)] = v4;
  sub_10000B070((uint64_t)v8, &qword_1002F1130);
  uint64_t v22 = v1 + *(int *)(v21 + 48);
  char v23 = *(unsigned char *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  char v91 = v23;
  uint64_t v92 = v24;
  sub_100007620(&qword_1002F1168);
  State.projectedValue.getter();
  type metadata accessor for GenderDisambiguationLearnMoreView();
  sub_100054410();
  sub_1000565D0(&qword_1002F1188, (void (*)(uint64_t))&type metadata accessor for GenderDisambiguationLearnMoreView);
  char v25 = v68;
  View.formSheet<A>(isPresented:content:)();
  swift_release();
  swift_release();
  sub_10000B070((uint64_t)v11, &qword_1002F1138);
  uint64_t v65 = type metadata accessor for ComposeTranslationCardView;
  uint64_t v26 = v1;
  uint64_t v27 = v74;
  sub_1000551C8(v1, v74, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v28 = *(unsigned __int8 *)(v86 + 80);
  uint64_t v29 = (v28 + 16) & ~v28;
  uint64_t v30 = v29 + v85;
  uint64_t v85 = v28 | 7;
  uint64_t v86 = v30;
  uint64_t v31 = swift_allocObject();
  sub_100054508(v27, v31 + v29);
  uint64_t v32 = v72;
  uint64_t v33 = (uint64_t)v69;
  uint64_t v34 = v25;
  char v35 = v25;
  uint64_t v36 = v73;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v34, v73);
  uint64_t v37 = v70;
  uint64_t v38 = (uint64_t (**)())(v33 + *(int *)(v70 + 36));
  void *v38 = sub_10005456C;
  v38[1] = (uint64_t (*)())v31;
  void v38[2] = 0;
  v38[3] = 0;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v36);
  uint64_t v39 = v26 + *(int *)(v67 + 44);
  uint64_t v66 = v26;
  char v40 = *(unsigned char *)v39;
  id v41 = *(void **)(v39 + 8);
  LOBYTE(v39) = *(unsigned char *)(v39 + 16);
  LOBYTE(v87) = v40;
  uint64_t v88 = v41;
  LOBYTE(v89) = v39;
  sub_100007620(&qword_1002F1190);
  FocusState.wrappedValue.getter();
  LOBYTE(v87) = v91;
  id v42 = v65;
  sub_1000551C8(v26, v27, (uint64_t (*)(void))v65);
  uint64_t v43 = swift_allocObject();
  sub_100054508(v27, v43 + v29);
  unint64_t v44 = sub_1000545A0();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10000B070(v33, &qword_1002F1148);
  uint64_t v45 = *(void *)(*(void *)(v71 + 8) + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
  swift_getKeyPath();
  uint64_t v87 = v45;
  sub_1000565D0((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  swift_retain();
  uint64_t v46 = v66;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t v47 = v29;
  swift_release();
  LOBYTE(v31) = *(unsigned char *)(v45 + 24);
  uint64_t v48 = v27;
  swift_release();
  char v91 = v31;
  sub_1000551C8(v46, v27, (uint64_t (*)(void))v42);
  uint64_t v49 = swift_allocObject();
  sub_100054508(v27, v49 + v29);
  uint64_t v87 = v37;
  uint64_t v88 = &type metadata for Bool;
  unint64_t v89 = v44;
  uint64_t v50 = v75;
  uint64_t v90 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v76;
  uint64_t v52 = v84;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v52, v51);
  id v53 = [self defaultCenter];
  if (qword_1002EE6F0 != -1) {
    swift_once();
  }
  uint64_t v54 = v80;
  NSNotificationCenter.publisher(for:object:)();

  sub_1000551C8(v46, v48, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v55 = swift_allocObject();
  sub_100054508(v48, v55 + v47);
  uint64_t v57 = v78;
  uint64_t v56 = v79;
  uint64_t v58 = v82;
  (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v82, v50, v79);
  uint64_t v59 = sub_100007620(&qword_1002F11A0);
  uint64_t v60 = v81;
  uint64_t v61 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v58 + *(int *)(v59 + 52), v54, v83);
  id v62 = (uint64_t (**)(uint64_t))(v58 + *(int *)(v59 + 56));
  char *v62 = sub_10005475C;
  v62[1] = (uint64_t (*)(uint64_t))v55;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v54, v61);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v50, v56);
}

uint64_t sub_10004AC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v56 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F11A8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100007620(&qword_1002F11B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F11B8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002F11C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v52 = (uint64_t)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100007620(&qword_1002F11C8) - 8;
  __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static HorizontalAlignment.leading.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v19 = sub_100007620(&qword_1002F11D0);
  sub_10004B14C(a1, (uint64_t)&v10[*(int *)(v19 + 44)]);
  uint64_t v20 = *(void *)(*(void *)(a1 + *(int *)(type metadata accessor for ComposeTranslationCardView() + 28) + 8)
                  + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
  swift_getKeyPath();
  uint64_t v58 = v20;
  sub_1000565D0((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = *(void *)(v20 + 16);
  swift_release();
  sub_10000C3A4((uint64_t)v10, (uint64_t)v7 + *(int *)(v5 + 44), &qword_1002F11B0);
  *uint64_t v7 = v21;
  uint64_t v22 = static Animation.linear.getter();
  sub_10000C3A4((uint64_t)v7, (uint64_t)v14, &qword_1002F11A8);
  char v23 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t *v23 = v22;
  v23[1] = v21;
  sub_10000B070((uint64_t)v7, &qword_1002F11A8);
  sub_10000B070((uint64_t)v10, &qword_1002F11B0);
  LOBYTE(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v32 = v52;
  sub_10000C3A4((uint64_t)v14, v52, &qword_1002F11B8);
  uint64_t v33 = v32 + *(int *)(v16 + 44);
  *(unsigned char *)uint64_t v33 = (_BYTE)v10;
  *(void *)(v33 + 8) = v25;
  *(void *)(v33 + 16) = v27;
  *(void *)(v33 + 24) = v29;
  *(void *)(v33 + 32) = v31;
  *(unsigned char *)(v33 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  sub_10000B070((uint64_t)v14, &qword_1002F11B8);
  id v34 = [self secondarySystemGroupedBackgroundColor];
  uint64_t v35 = Color.init(uiColor:)();
  LOBYTE(v22) = static Edge.Set.all.getter();
  uint64_t v36 = v53;
  sub_10000C3A4(v32, v53, &qword_1002F11C0);
  uint64_t v37 = v36 + *(int *)(v54 + 44);
  *(void *)uint64_t v37 = v35;
  *(unsigned char *)(v37 + 8) = v22;
  sub_10000B070(v32, &qword_1002F11C0);
  uint64_t v38 = v55;
  uint64_t v39 = &v55[*(int *)(v56 + 28)];
  uint64_t v40 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v41 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v39, v40, v41);
  __asm { FMOV            V0.2D, #10.0 }
  _OWORD *v38 = _Q0;
  uint64_t v47 = sub_100007620(&qword_1002F11D8);
  uint64_t v48 = v57;
  uint64_t v49 = v57 + *(int *)(v47 + 36);
  sub_1000551C8((uint64_t)v38, v49, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v49 + *(int *)(sub_100007620(&qword_1002F11E0) + 36)) = 256;
  sub_10000C3A4(v36, v48, &qword_1002F11C8);
  sub_10005595C((uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  return sub_10000B070(v36, &qword_1002F11C8);
}

uint64_t sub_10004B14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002F11E8);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (void *)((char *)v22 - v9);
  *uint64_t v10 = sub_1000496A8();
  sub_10004B320(a1, (uint64_t)v10 + *(int *)(v5 + 52));
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v22[1];
  LOBYTE(v5) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_10000C3A4((uint64_t)v10, (uint64_t)v8, &qword_1002F11E8);
  sub_10000C3A4((uint64_t)v8, a2, &qword_1002F11E8);
  uint64_t v20 = a2 + *(int *)(sub_100007620(&qword_1002F11F0) + 48);
  *(void *)uint64_t v20 = v11;
  *(unsigned char *)(v20 + 8) = v5;
  *(void *)(v20 + 16) = v13;
  *(void *)(v20 + 24) = v15;
  *(void *)(v20 + 32) = v17;
  *(void *)(v20 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v19;
  *(unsigned char *)(v20 + 48) = 0;
  swift_bridgeObjectRetain();
  sub_10000B070((uint64_t)v10, &qword_1002F11E8);
  swift_bridgeObjectRelease();
  return sub_10000B070((uint64_t)v8, &qword_1002F11E8);
}

uint64_t sub_10004B320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v140 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F11F8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v141 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v139 = (uint64_t *)((char *)&v108 - v6);
  uint64_t v129 = type metadata accessor for UUID();
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v7 = __chkstk_darwin(v129);
  double v127 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v126 = (char *)&v108 - v9;
  uint64_t v10 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v123 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v124 = v11;
  uint64_t v125 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v110 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100007620(&qword_1002F1200);
  uint64_t v15 = __chkstk_darwin(v146);
  uint64_t v136 = (uint64_t)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v115 = (char *)&v108 - v17;
  uint64_t v18 = sub_100007620(&qword_1002F1058);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v109 = (uint64_t)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v144 = (uint64_t)&v108 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v142 = (uint64_t)&v108 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v111 = (char *)&v108 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v108 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v108 - v30;
  uint64_t v121 = type metadata accessor for LanguageFlipperBindingView(0);
  __chkstk_darwin(v121);
  uint64_t v33 = (char *)&v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100007620(&qword_1002F1208);
  __chkstk_darwin(v122);
  uint64_t v143 = (uint64_t)&v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100007620(&qword_1002F1210);
  uint64_t v35 = __chkstk_darwin(v131);
  uint64_t v137 = (uint64_t)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v130 = (uint64_t)&v108 - v38;
  __chkstk_darwin(v37);
  uint64_t v133 = (uint64_t)&v108 - v39;
  uint64_t v40 = sub_100007620(&qword_1002F1218);
  uint64_t v41 = __chkstk_darwin(v40 - 8);
  uint64_t v134 = (uint64_t)&v108 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v108 - v44;
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v108 - v46;
  *(void *)uint64_t v45 = static HorizontalAlignment.leading.getter();
  *((void *)v45 + 1) = 0x4008000000000000;
  v45[16] = 0;
  uint64_t v48 = sub_100007620(&qword_1002F1220);
  sub_10004C2C0(a1, (uint64_t)&v45[*(int *)(v48 + 44)]);
  uint64_t v132 = v47;
  sub_10001323C((uint64_t)v45, (uint64_t)v47, &qword_1002F1218);
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  uint64_t v49 = (uint64_t)v115;
  swift_release();
  uint64_t v114 = v150;
  uint64_t v113 = v151;
  int v112 = v152;
  uint64_t v138 = a1;
  sub_100100194((uint64_t)v31);
  uint64_t v50 = (void (*)(void))v13[13];
  unsigned int v120 = enum case for UserInterfaceSizeClass.compact(_:);
  CGFloat v119 = v13 + 13;
  double v118 = (void (*)(uint64_t, void, uint64_t))v50;
  v50(v29);
  uint64_t v51 = (void (*)(uint64_t, void, uint64_t, uint64_t))v13[7];
  CGFloat v117 = v13 + 7;
  double v116 = v51;
  v51((uint64_t)v29, 0, 1, v12);
  uint64_t v52 = v49 + *(int *)(v146 + 48);
  sub_10000C3A4((uint64_t)v31, v49, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v29, v52, &qword_1002F1058);
  uint64_t v135 = v13;
  uint64_t v53 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v13[6];
  unsigned int v54 = v53(v49, 1, v12);
  char v145 = v53;
  if (v54 == 1)
  {
    sub_10000B070((uint64_t)v29, &qword_1002F1058);
    sub_10000B070((uint64_t)v31, &qword_1002F1058);
    unsigned int v55 = v53(v52, 1, v12);
    if (v55 == 1) {
      uint64_t v56 = &qword_1002F1058;
    }
    else {
      uint64_t v56 = &qword_1002F1200;
    }
    if (v55 == 1) {
      char v57 = -1;
    }
    else {
      char v57 = 0;
    }
  }
  else
  {
    uint64_t v58 = (uint64_t)v111;
    sub_10000C3A4(v49, (uint64_t)v111, &qword_1002F1058);
    if (v53(v52, 1, v12) == 1)
    {
      sub_10000B070((uint64_t)v29, &qword_1002F1058);
      sub_10000B070((uint64_t)v31, &qword_1002F1058);
      ((void (*)(uint64_t, uint64_t))v135[1])(v58, v12);
      char v57 = 0;
      uint64_t v56 = &qword_1002F1200;
    }
    else
    {
      uint64_t v59 = v135;
      uint64_t v60 = (void (*)(char *, uint64_t, uint64_t))v135[4];
      uint64_t v108 = v31;
      uint64_t v61 = v110;
      v60(v110, v52, v12);
      sub_1000565D0((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v62 = (void (*)(char *, uint64_t))v59[1];
      v62(v61, v12);
      uint64_t v56 = &qword_1002F1058;
      sub_10000B070((uint64_t)v29, &qword_1002F1058);
      sub_10000B070((uint64_t)v108, &qword_1002F1058);
      v62(v111, v12);
    }
  }
  sub_10000B070(v49, v56);
  uint64_t v63 = v138;
  uint64_t v64 = v125;
  sub_1000551C8(v138, v125, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  unint64_t v65 = (*(unsigned __int8 *)(v123 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
  uint64_t v66 = swift_allocObject();
  sub_100054508(v64, v66 + v65);
  uint64_t v67 = v113;
  *(void *)uint64_t v33 = v114;
  *((void *)v33 + 1) = v67;
  v33[16] = v112;
  v33[17] = v57 & 1;
  *((_WORD *)v33 + 9) = 256;
  *((void *)v33 + 3) = sub_1000547D0;
  *((void *)v33 + 4) = v66;
  uint64_t v68 = v121;
  uint64_t v69 = v126;
  UUID.init()();
  uint64_t v70 = v128;
  uint64_t v71 = v129;
  (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v127, v69, v129);
  State.init(wrappedValue:)();
  uint64_t v72 = v69;
  uint64_t v73 = v63;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
  uint64_t v74 = &v33[*(int *)(v68 + 40)];
  uint64_t v147 = 0;
  State.init(wrappedValue:)();
  uint64_t v75 = v149;
  *(void *)uint64_t v74 = v148;
  *((void *)v74 + 1) = v75;
  uint64_t v76 = v143;
  sub_1000551C8((uint64_t)v33, v143, type metadata accessor for LanguageFlipperBindingView);
  *(void *)(v76 + *(int *)(v122 + 36)) = 0x3FB999999999999ALL;
  sub_10005595C((uint64_t)v33, type metadata accessor for LanguageFlipperBindingView);
  char v77 = static Edge.Set.horizontal.getter();
  uint64_t v78 = v142;
  sub_100100194(v142);
  uint64_t v79 = v144;
  v118(v144, v120, v12);
  v116(v79, 0, 1, v12);
  uint64_t v80 = v136;
  uint64_t v81 = v136 + *(int *)(v146 + 48);
  sub_10000C3A4(v78, v136, &qword_1002F1058);
  sub_10000C3A4(v79, v81, &qword_1002F1058);
  if (v145(v80, 1, v12) != 1)
  {
    uint64_t v82 = v109;
    sub_10000C3A4(v80, v109, &qword_1002F1058);
    if (v145(v81, 1, v12) != 1)
    {
      uint64_t v83 = v135;
      uint64_t v84 = v110;
      ((void (*)(char *, uint64_t, uint64_t))v135[4])(v110, v81, v12);
      sub_1000565D0((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v85 = (void (*)(char *, uint64_t))v83[1];
      uint64_t v86 = v84;
      uint64_t v76 = v143;
      v85(v86, v12);
      sub_10000B070(v144, &qword_1002F1058);
      sub_10000B070(v142, &qword_1002F1058);
      v85((char *)v82, v12);
      sub_10000B070(v80, &qword_1002F1058);
      goto LABEL_18;
    }
    sub_10000B070(v144, &qword_1002F1058);
    sub_10000B070(v78, &qword_1002F1058);
    ((void (*)(uint64_t, uint64_t))v135[1])(v82, v12);
    goto LABEL_16;
  }
  sub_10000B070(v79, &qword_1002F1058);
  sub_10000B070(v78, &qword_1002F1058);
  if (v145(v81, 1, v12) != 1)
  {
LABEL_16:
    sub_10000B070(v80, &qword_1002F1200);
    goto LABEL_18;
  }
  sub_10000B070(v80, &qword_1002F1058);
LABEL_18:
  EdgeInsets.init(_all:)();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = v130;
  sub_10000C3A4(v76, v130, &qword_1002F1208);
  uint64_t v96 = v95 + *(int *)(v131 + 36);
  *(unsigned char *)uint64_t v96 = v77;
  *(void *)(v96 + 8) = v88;
  *(void *)(v96 + 16) = v90;
  *(void *)(v96 + 24) = v92;
  *(void *)(v96 + 32) = v94;
  *(unsigned char *)(v96 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  sub_10000B070(v76, &qword_1002F1208);
  uint64_t v97 = v133;
  sub_10001323C(v95, v133, &qword_1002F1210);
  uint64_t v98 = static HorizontalAlignment.leading.getter();
  uint64_t v99 = (uint64_t)v139;
  uint64_t *v139 = v98;
  *(void *)(v99 + 8) = 0x4008000000000000;
  *(unsigned char *)(v99 + 16) = 0;
  uint64_t v100 = sub_100007620(&qword_1002F1230);
  sub_10004E660(v73, v99 + *(int *)(v100 + 44));
  uint64_t v101 = (uint64_t)v132;
  uint64_t v102 = v134;
  sub_10000C3A4((uint64_t)v132, v134, &qword_1002F1218);
  uint64_t v103 = v137;
  sub_10000C3A4(v97, v137, &qword_1002F1210);
  uint64_t v104 = v141;
  sub_10000C3A4(v99, v141, &qword_1002F11F8);
  uint64_t v105 = v140;
  sub_10000C3A4(v102, v140, &qword_1002F1218);
  uint64_t v106 = sub_100007620(&qword_1002F1238);
  sub_10000C3A4(v103, v105 + *(int *)(v106 + 48), &qword_1002F1210);
  sub_10000C3A4(v104, v105 + *(int *)(v106 + 64), &qword_1002F11F8);
  sub_10000B070(v99, &qword_1002F11F8);
  sub_10000B070(v97, &qword_1002F1210);
  sub_10000B070(v101, &qword_1002F1218);
  sub_10000B070(v104, &qword_1002F11F8);
  sub_10000B070(v103, &qword_1002F1210);
  return sub_10000B070(v102, &qword_1002F1218);
}

uint64_t sub_10004C2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v89 = a1;
  uint64_t v80 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v83 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v71 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100007620(&qword_1002F1200) - 8;
  __chkstk_darwin(v84);
  uint64_t v79 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1058);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v72 = (uint64_t)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v82 = (char *)&v71 - v9;
  __chkstk_darwin(v8);
  uint64_t v81 = (char *)&v71 - v10;
  uint64_t v11 = sub_100007620(&qword_1002F1270);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v87 = (uint64_t)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)&v71 - v14;
  uint64_t v15 = sub_100007620(&qword_1002F1320);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v85 = (uint64_t)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v78 = (uint64_t *)((char *)&v71 - v19);
  __chkstk_darwin(v18);
  uint64_t v90 = (uint64_t)&v71 - v20;
  uint64_t v21 = type metadata accessor for Locale();
  __chkstk_darwin(v21 - 8);
  uint64_t v74 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002F04A0);
  __chkstk_darwin(v23 - 8);
  uint64_t v24 = type metadata accessor for LanguagePicker();
  uint64_t v76 = *(void *)(v24 - 8);
  uint64_t v77 = v24;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100007620(&qword_1002F1328);
  __chkstk_darwin(v75);
  uint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007620(&qword_1002F1330);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v92 = (uint64_t)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v91 = (uint64_t)&v71 - v32;
  uint64_t v33 = a1 + *(int *)(type metadata accessor for ComposeTranslationCardView() + 28);
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v73 = v33;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  uint64_t v34 = v80;
  swift_release();
  uint64_t v35 = (uint64_t)v79;
  swift_release();
  uint64_t v36 = v89;
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)();
  uint64_t v37 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v40 = v76;
  uint64_t v39 = v77;
  (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v28, v26, v77);
  uint64_t v41 = (uint64_t *)&v28[*(int *)(v75 + 36)];
  *uint64_t v41 = KeyPath;
  v41[1] = v37;
  uint64_t v42 = v26;
  uint64_t v43 = v83;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
  sub_100055770();
  uint64_t v44 = v92;
  View.accessibilityIdentifier(_:)();
  uint64_t v45 = (uint64_t)v28;
  uint64_t v46 = (uint64_t)v81;
  sub_10000B070(v45, &qword_1002F1328);
  uint64_t v47 = (uint64_t)v82;
  sub_10001323C(v44, v91, &qword_1002F1330);
  uint64_t v48 = static VerticalAlignment.top.getter();
  uint64_t v49 = (uint64_t)v78;
  *uint64_t v78 = v48;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 1;
  uint64_t v50 = sub_100007620(&qword_1002F1340);
  sub_10004CE0C(v36, v49 + *(int *)(v50 + 44));
  sub_10001323C(v49, v90, &qword_1002F1320);
  sub_100100194(v46);
  (*(void (**)(uint64_t, void, uint64_t))(v43 + 104))(v47, enum case for UserInterfaceSizeClass.compact(_:), v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v34);
  uint64_t v51 = v35 + *(int *)(v84 + 56);
  sub_10000C3A4(v46, v35, &qword_1002F1058);
  sub_10000C3A4(v47, v51, &qword_1002F1058);
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v52(v35, 1, v34) == 1)
  {
    sub_10000B070(v47, &qword_1002F1058);
    sub_10000B070(v46, &qword_1002F1058);
    int v53 = v52(v51, 1, v34);
    uint64_t v54 = (uint64_t)v86;
    if (v53 == 1)
    {
      sub_10000B070(v35, &qword_1002F1058);
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v55 = v72;
    sub_10000C3A4(v35, v72, &qword_1002F1058);
    if (v52(v51, 1, v34) != 1)
    {
      uint64_t v56 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v71, v51, v34);
      sub_1000565D0((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v58 = *(void (**)(char *, uint64_t))(v43 + 8);
      v58(v56, v34);
      sub_10000B070(v47, &qword_1002F1058);
      sub_10000B070(v46, &qword_1002F1058);
      v58((char *)v55, v34);
      sub_10000B070(v35, &qword_1002F1058);
      uint64_t v54 = (uint64_t)v86;
      if (v57) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    sub_10000B070(v47, &qword_1002F1058);
    sub_10000B070(v46, &qword_1002F1058);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v55, v34);
    uint64_t v54 = (uint64_t)v86;
  }
  sub_10000B070(v35, &qword_1002F1200);
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v93 != 3)
  {
    sub_10004E2CC(v93, v54);
    uint64_t v60 = type metadata accessor for ErrorStateView();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v54, 0, 1, v60);
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v59 = type metadata accessor for ErrorStateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v54, 1, 1, v59);
LABEL_11:
  uint64_t v62 = v91;
  uint64_t v61 = v92;
  sub_10000C3A4(v91, v92, &qword_1002F1330);
  uint64_t v63 = v90;
  uint64_t v64 = v85;
  sub_10000C3A4(v90, v85, &qword_1002F1320);
  uint64_t v65 = v87;
  sub_10000C3A4(v54, v87, &qword_1002F1270);
  uint64_t v66 = v88;
  sub_10000C3A4(v61, v88, &qword_1002F1330);
  uint64_t v67 = v54;
  uint64_t v68 = (int *)sub_100007620(&qword_1002F1348);
  sub_10000C3A4(v64, v66 + v68[12], &qword_1002F1320);
  uint64_t v69 = v66 + v68[16];
  *(void *)uint64_t v69 = 0x3F847AE147AE147BLL;
  *(unsigned char *)(v69 + 8) = 0;
  sub_10000C3A4(v65, v66 + v68[20], &qword_1002F1270);
  sub_10000B070(v67, &qword_1002F1270);
  sub_10000B070(v63, &qword_1002F1320);
  sub_10000B070(v62, &qword_1002F1330);
  sub_10000B070(v65, &qword_1002F1270);
  sub_10000B070(v64, &qword_1002F1320);
  return sub_10000B070(v61, &qword_1002F1330);
}

uint64_t sub_10004CE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v3 = type metadata accessor for LayoutDirection();
  id v115 = *(void (***)(char *, char *, uint64_t))(v3 - 8);
  uint64_t v116 = v3;
  __chkstk_darwin(v3);
  uint64_t v114 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v104 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v104 + 64);
  uint64_t v7 = v5 - 8;
  uint64_t v119 = v5 - 8;
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for Locale();
  uint64_t v120 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v97 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for LanguageAwareEditor(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620(&qword_1002EF4D0);
  uint64_t v108 = *(void *)(v13 - 8);
  uint64_t v109 = v13;
  __chkstk_darwin(v13);
  uint64_t v106 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620(&qword_1002EF4D8);
  __chkstk_darwin(v15 - 8);
  uint64_t v107 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100007620(&qword_1002F1350);
  __chkstk_darwin(v111);
  uint64_t v110 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F1358);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v121 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v113 = (char *)&v93 - v22;
  __chkstk_darwin(v21);
  uint64_t v117 = (uint64_t)&v93 - v23;
  uint64_t v24 = sub_100049CB0();
  uint64_t v102 = v25;
  uint64_t v103 = v24;
  uint64_t v100 = v27;
  uint64_t v101 = v26;
  uint64_t v105 = a1 + *(int *)(v7 + 36);
  swift_retain();
  uint64_t v28 = sub_100057E00();
  uint64_t v98 = v29;
  uint64_t v99 = v28;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  id v96 = sub_100049E88();
  id v95 = [self quaternaryLabelColor];
  id v94 = sub_100049ACC();
  sub_1000551C8(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  unint64_t v30 = (*(unsigned __int8 *)(v104 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  uint64_t v104 = swift_allocObject();
  sub_100054508((uint64_t)v8, v104 + v30);
  sub_1000551C8(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v31 = swift_allocObject();
  sub_100054508((uint64_t)v8, v31 + v30);
  sub_1000551C8(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v32 = swift_allocObject();
  sub_100054508((uint64_t)v8, v32 + v30);
  type metadata accessor for LanguageAwareTextViewSizeThatFitsCache();
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
  v33[3] = _swiftEmptyArrayStorage;
  v33[4] = 100;
  uint64_t v34 = v102;
  *(void *)uint64_t v12 = v103;
  *((void *)v12 + 1) = v34;
  uint64_t v35 = v100;
  *((void *)v12 + 2) = v101;
  *((void *)v12 + 3) = v35;
  uint64_t v37 = v97;
  uint64_t v36 = v98;
  *((void *)v12 + 4) = v99;
  *((void *)v12 + 5) = v36;
  (*(void (**)(char *, char *, uint64_t))(v120 + 32))(&v12[v10[6]], v37, v118);
  *(void *)&v12[v10[7]] = v96;
  *(void *)&v12[v10[8]] = v95;
  *(void *)&v12[v10[9]] = v94;
  *(void *)&v12[v10[10]] = 4;
  v12[v10[11]] = 1;
  *(void *)&v12[v10[12]] = 0;
  v12[v10[13]] = 1;
  uint64_t v38 = (uint64_t (**)(uint64_t))&v12[v10[14]];
  uint64_t v39 = v104;
  _OWORD *v38 = sub_100055844;
  v38[1] = (uint64_t (*)(uint64_t))v39;
  uint64_t v40 = (uint64_t (**)(uint64_t))&v12[v10[15]];
  *uint64_t v40 = sub_100055860;
  v40[1] = (uint64_t (*)(uint64_t))v31;
  uint64_t v41 = (uint64_t (**)())&v12[v10[16]];
  *uint64_t v41 = sub_100055900;
  v41[1] = (uint64_t (*)())v32;
  uint64_t v42 = &v12[v10[17]];
  *(void *)uint64_t v42 = 0;
  *((void *)v42 + 1) = 0;
  *(void *)&v12[v10[18]] = 205;
  *(void *)&v12[v10[19]] = v33;
  uint64_t v43 = a1 + *(int *)(v119 + 44);
  uint64_t v44 = a1;
  LOBYTE(v39) = *(unsigned char *)v43;
  uint64_t v45 = *(void *)(v43 + 8);
  LOBYTE(v43) = *(unsigned char *)(v43 + 16);
  LOBYTE(v128) = v39;
  *((void *)&v128 + 1) = v45;
  LOBYTE(v129) = v43;
  sub_100007620(&qword_1002F1190);
  FocusState.projectedValue.getter();
  sub_1000565D0((unint64_t *)&unk_1002F6C60, (void (*)(uint64_t))type metadata accessor for LanguageAwareEditor);
  uint64_t v46 = v106;
  View.focused(_:)();
  swift_release();
  swift_release();
  sub_10005595C((uint64_t)v12, type metadata accessor for LanguageAwareEditor);
  uint64_t v47 = static Alignment.leading.getter();
  uint64_t v48 = v107;
  double v50 = sub_10001C524(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v107, 0.0, 1, 0.0, 1, v47, v49);
  (*(void (**)(char *, uint64_t, double))(v108 + 8))(v46, v109, v50);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(a1) = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v37, v118);
  int v53 = v114;
  uint64_t v52 = v115;
  uint64_t v54 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if ((a1 & 1) == 0) {
    uint64_t v54 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v55 = v116;
  v115[13](v114, (char *)*v54, v116);
  uint64_t v56 = (uint64_t)v110;
  char v57 = (uint64_t *)&v110[*(int *)(v111 + 36)];
  uint64_t v58 = sub_100007620(&qword_1002EF468);
  v52[2]((char *)v57 + *(int *)(v58 + 28), v53, v55);
  uint64_t *v57 = KeyPath;
  sub_10000C3A4(v48, v56, &qword_1002EF4D8);
  ((void (*)(char *, uint64_t))v52[1])(v53, v55);
  sub_10000B070(v48, &qword_1002EF4D8);
  sub_1000559BC();
  uint64_t v59 = (uint64_t)v113;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v56, &qword_1002F1350);
  uint64_t v60 = v117;
  sub_10001323C(v59, v117, &qword_1002F1358);
  uint64_t v61 = static Alignment.center.getter();
  uint64_t v106 = v62;
  sub_10004DBD4(v44, (uint64_t)&v140);
  LOBYTE(v59) = v140;
  LODWORD(v104) = v140;
  LOBYTE(v55) = BYTE1(v140);
  LODWORD(v103) = BYTE1(v140);
  char v63 = BYTE2(v140);
  LODWORD(v102) = BYTE2(v140);
  uint64_t v114 = v142;
  id v115 = v141;
  uint64_t v64 = v144;
  uint64_t v113 = v143;
  uint64_t v105 = (uint64_t)v144;
  uint64_t v101 = v145;
  uint64_t v120 = v146;
  uint64_t v65 = v147;
  uint64_t v118 = v148;
  LODWORD(v116) = v149;
  uint64_t v109 = v151;
  uint64_t v110 = v150;
  uint64_t v66 = v152;
  uint64_t v108 = v153;
  LODWORD(v107) = v154;
  LODWORD(v111) = static Edge.Set.top.getter();
  sub_100007620(&qword_1002F1060);
  ScaledMetric.wrappedValue.getter();
  EdgeInsets.init(_all:)();
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  unsigned __int8 v125 = 0;
  uint64_t v75 = v121;
  sub_10000C3A4(v60, v121, &qword_1002F1358);
  LODWORD(v119) = v125;
  uint64_t v76 = v112;
  sub_10000C3A4(v75, v112, &qword_1002F1358);
  uint64_t v77 = v76 + *(int *)(sub_100007620(&qword_1002F1370) + 48);
  uint64_t v78 = v61;
  *(void *)&long long v128 = v61;
  uint64_t v79 = (void (**)(char *, char *, uint64_t))v106;
  *((void *)&v128 + 1) = v106;
  LOBYTE(v129) = v59;
  BYTE1(v129) = v55;
  BYTE2(v129) = v63;
  *(_DWORD *)((char *)&v129 + 3) = v123;
  BYTE7(v129) = v124;
  *((void *)&v129 + 1) = v115;
  *(void *)&long long v130 = v114;
  *((void *)&v130 + 1) = v113;
  *(void *)&long long v131 = v64;
  uint64_t v80 = v101;
  *((void *)&v131 + 1) = v101;
  *(void *)&long long v132 = v120;
  *((void *)&v132 + 1) = v65;
  *(void *)&long long v133 = v118;
  BYTE8(v133) = v116;
  *(_DWORD *)((char *)&v133 + 9) = *(_DWORD *)v122;
  HIDWORD(v133) = *(_DWORD *)&v122[3];
  uint64_t v82 = v109;
  uint64_t v81 = v110;
  *(void *)&long long v134 = v110;
  *((void *)&v134 + 1) = v109;
  *(void *)&long long v135 = v66;
  uint64_t v83 = v108;
  *((void *)&v135 + 1) = v108;
  LOBYTE(v76) = v107;
  LOBYTE(v136) = v107;
  *(_DWORD *)((char *)&v136 + 1) = *(_DWORD *)v127;
  DWORD1(v136) = *(_DWORD *)&v127[3];
  LOBYTE(v64) = v111;
  BYTE8(v136) = v111;
  HIDWORD(v136) = *(_DWORD *)&v126[3];
  *(_DWORD *)((char *)&v136 + 9) = *(_DWORD *)v126;
  *(void *)&long long v137 = v68;
  *((void *)&v137 + 1) = v70;
  *(void *)&long long v138 = v72;
  *((void *)&v138 + 1) = v74;
  char v139 = v119;
  long long v84 = v137;
  long long v85 = v138;
  *(unsigned char *)(v77 + 176) = v119;
  *(_OWORD *)(v77 + 144) = v84;
  *(_OWORD *)(v77 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v85;
  long long v86 = v136;
  *(_OWORD *)(v77 + 112) = v135;
  *(_OWORD *)(v77 + 128) = v86;
  long long v87 = v128;
  long long v88 = v129;
  long long v89 = v131;
  *(_OWORD *)(v77 + 32) = v130;
  *(_OWORD *)(v77 + 48) = v89;
  *(_OWORD *)uint64_t v77 = v87;
  *(_OWORD *)(v77 + 16) = v88;
  long long v90 = v132;
  long long v91 = v134;
  *(_OWORD *)(v77 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v133;
  *(_OWORD *)(v77 + 96) = v91;
  *(_OWORD *)(v77 + 64) = v90;
  sub_100055B38((uint64_t)&v128);
  sub_10000B070(v117, &qword_1002F1358);
  uint64_t v140 = v78;
  uint64_t v141 = v79;
  LOBYTE(v142) = v104;
  BYTE1(v142) = v103;
  BYTE2(v142) = v102;
  *(_DWORD *)((char *)&v142 + 3) = v123;
  HIBYTE(v142) = v124;
  uint64_t v143 = (char *)v115;
  uint64_t v144 = v114;
  char v145 = v113;
  uint64_t v146 = v105;
  uint64_t v147 = v80;
  uint64_t v148 = v120;
  uint64_t v149 = v65;
  uint64_t v150 = (char *)v118;
  LOBYTE(v151) = v116;
  *(_DWORD *)((char *)&v151 + 1) = *(_DWORD *)v122;
  HIDWORD(v151) = *(_DWORD *)&v122[3];
  unsigned __int8 v152 = v81;
  uint64_t v153 = v82;
  CGRect v154 = v66;
  uint64_t v155 = v83;
  char v156 = v76;
  *(_DWORD *)CGRect v157 = *(_DWORD *)v127;
  *(_DWORD *)&v157[3] = *(_DWORD *)&v127[3];
  char v158 = (char)v64;
  *(_DWORD *)&v159[3] = *(_DWORD *)&v126[3];
  *(_DWORD *)v159 = *(_DWORD *)v126;
  uint64_t v160 = v68;
  uint64_t v161 = v70;
  uint64_t v162 = v72;
  uint64_t v163 = v74;
  char v164 = v119;
  sub_100055BC0((uint64_t)&v140);
  return sub_10000B070(v121, &qword_1002F1358);
}

id sub_10004DAD4(void *a1)
{
  id result = [a1 text];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    type metadata accessor for ComposeTranslationCardView();
    swift_retain();
    sub_10005C080(v3, v5);
    swift_bridgeObjectRelease();
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_10004DB7C()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_retain();
  sub_10005C81C(0);

  return swift_release();
}

uint64_t sub_10004DBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v3 = type metadata accessor for ComposeTranslationCardView();
  uint64_t KeyPath = *(void *)(v3 - 8);
  uint64_t v37 = *(char **)(KeyPath + 64);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v33 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v41 = v46;
  swift_retain();
  int v40 = sub_100057954();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  static Locale.current.getter();
  uint64_t v13 = Locale.sqDisplayName(context:in:)();
  unint64_t v39 = v14;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  v15(v12, v6);
  sub_1000551C8(v42, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  unint64_t v16 = (*(unsigned __int8 *)(KeyPath + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(KeyPath + 80);
  uint64_t v36 = swift_allocObject();
  uint64_t v37 = v5;
  sub_100054508((uint64_t)v5, v36 + v16);
  uint64_t v17 = static Color.sourceTextColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  if (sub_100057954())
  {
    if (!sub_10005E208())
    {
      swift_getKeyPath();
      uint64_t v33 = v17;
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      uint64_t v17 = v33;
      swift_release();
    }
    swift_release();
    double v18 = 0.0;
  }
  else
  {
    swift_release();
    double v18 = 1.0;
  }
  uint64_t v35 = static Animation.default.getter();
  swift_retain();
  if ((sub_100057954() & 1) == 0)
  {
    swift_release();
    int v19 = 2;
LABEL_11:
    int v34 = v19;
    goto LABEL_12;
  }
  if (!sub_10005E208())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v33 = v17;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v17 = v33;
    swift_release();
    int v19 = (v43 & 1) == 0;
    goto LABEL_11;
  }
  swift_release();
  int v34 = 0;
LABEL_12:
  uint64_t v20 = (uint64_t)v37;
  sub_1000551C8(v42, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v21 = swift_allocObject();
  sub_100054508(v20, v21 + v16);
  swift_retain();
  if ((sub_100057954() & 1) == 0 || sub_10005E208())
  {
    swift_release();
LABEL_15:
    double v22 = 0.0;
    goto LABEL_16;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  double v22 = 1.0;
  if (v44) {
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v23 = static Animation.linear(duration:)();
  swift_retain();
  if (sub_100057954())
  {
    if (sub_10005E208())
    {
      swift_release();
      char v24 = 0;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      char v24 = (v45 & 1) == 0;
    }
  }
  else
  {
    swift_release();
    char v24 = 2;
  }
  uint64_t v26 = KeyPath;
  unint64_t v25 = v39;
  char v27 = v40;
  *(unsigned char *)a2 = v41;
  *(unsigned char *)(a2 + 1) = v27 & 1;
  if (v25) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = 0xE000000000000000;
  }
  *(unsigned char *)(a2 + 2) = 1;
  if (v25) {
    uint64_t v29 = v13;
  }
  else {
    uint64_t v29 = 0;
  }
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v28;
  uint64_t v30 = v35;
  uint64_t v31 = v36;
  *(void *)(a2 + 24) = sub_100055C4C;
  *(void *)(a2 + 32) = v31;
  *(void *)(a2 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v26;
  *(void *)(a2 + 48) = v17;
  *(double *)(a2 + 56) = v18;
  *(void *)(a2 + 64) = v30;
  *(unsigned char *)(a2 + 72) = v34;
  *(void *)(a2 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_100055E80;
  *(void *)(a2 + 88) = v21;
  *(double *)(a2 + 96) = v22;
  *(void *)(a2 + 104) = v23;
  *(unsigned char *)(a2 + 112) = v24;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10004E240()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_retain();
  sub_100062854(0);
  swift_retain();
  sub_1001A1A44();
  swift_release();
  sub_10005A31C(0, 0);

  return swift_release();
}

uint64_t sub_10004E2CC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ErrorStateView.Context();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)v17 - v13;
  if (a1)
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ErrorStateView.Context.translate(_:), v4);
    if (a1 == 1) {
      static ErrorStateView.noInternetConnection(context:)();
    }
    else {
      static ErrorStateView.missingOfflineAssets(context:)();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    type metadata accessor for ComposeTranslationCardView();
    swift_getKeyPath();
    swift_getKeyPath();
    v17[1] = a2;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for ErrorStateView.Context.translate(_:), v4);
    static ErrorStateView.airplaneMode(sourceLocale:targetLocale:context:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
    v15(v12, v8);
    return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
  }
}

uint64_t sub_10004E5F8()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_retain();
  sub_10005AFA8(0x72657070696C46, 0xE700000000000000);

  return swift_release();
}

uint64_t sub_10004E660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v145 = a1;
  uint64_t v143 = a2;
  uint64_t v3 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v149 = v3;
  uint64_t v114 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v115 = v4;
  uint64_t v116 = (uint64_t)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1248);
  uint64_t v119 = *(void *)(v5 - 8);
  uint64_t v120 = v5;
  __chkstk_darwin(v5);
  uint64_t v117 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F1250);
  uint64_t v121 = *(void *)(v7 - 8);
  uint64_t v122 = v7;
  __chkstk_darwin(v7);
  uint64_t v118 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F1258);
  uint64_t v126 = *(void *)(v9 - 8);
  uint64_t v127 = v9;
  __chkstk_darwin(v9);
  unsigned __int8 v125 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F1260);
  uint64_t v136 = *(void *)(v11 - 8);
  uint64_t v137 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  char v124 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v123 = (uint64_t)&v113 - v14;
  uint64_t v15 = sub_100007620(&qword_1002F1268);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v142 = (uint64_t)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v141 = (uint64_t)&v113 - v18;
  uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v133 = *(void *)(v19 - 8);
  uint64_t v134 = v19;
  __chkstk_darwin(v19);
  uint64_t v113 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100007620(&qword_1002F1200) - 8;
  __chkstk_darwin(v135);
  long long v132 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002F1058);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v128 = (uint64_t)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  long long v131 = (char *)&v113 - v26;
  __chkstk_darwin(v25);
  unint64_t v144 = (unint64_t)&v113 - v27;
  uint64_t v28 = sub_100007620(&qword_1002F1270);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v140 = (uint64_t)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v148 = (uint64_t)&v113 - v31;
  uint64_t v32 = sub_100007620(&qword_1002F1278);
  uint64_t v33 = __chkstk_darwin(v32 - 8);
  uint64_t v139 = (uint64_t)&v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v113 - v36;
  __chkstk_darwin(v35);
  uint64_t v147 = (uint64_t)&v113 - v38;
  uint64_t v39 = type metadata accessor for Locale();
  __chkstk_darwin(v39 - 8);
  long long v129 = (char *)&v113 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620(&qword_1002F04A0);
  __chkstk_darwin(v41 - 8);
  uint64_t v130 = type metadata accessor for LanguagePicker();
  long long v138 = *(void (***)(char *, uint64_t))(v130 - 8);
  __chkstk_darwin(v130);
  char v43 = (char *)&v113 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100007620(&qword_1002F0608);
  uint64_t v45 = __chkstk_darwin(v44 - 8);
  uint64_t v47 = (void (**)(char *, uint64_t))((char *)&v113 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v45);
  uint64_t v150 = (uint64_t)&v113 - v48;
  uint64_t v49 = a1 + *(int *)(v3 + 28);
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v50 = (uint64_t)v131;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v146 = v49;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = v145;
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  uint64_t v52 = v144;
  LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)();
  sub_1000565D0(&qword_1002F0650, (void (*)(uint64_t))&type metadata accessor for LanguagePicker);
  uint64_t v53 = v130;
  View.accessibilityIdentifier(_:)();
  v138[1](v43, v53);
  uint64_t v54 = v51;
  long long v138 = v47;
  uint64_t v55 = (uint64_t)v47;
  uint64_t v56 = (uint64_t)v132;
  uint64_t v57 = v133;
  sub_10001323C(v55, v150, &qword_1002F0608);
  *(void *)uint64_t v37 = static VerticalAlignment.top.getter();
  *((void *)v37 + 1) = 0;
  v37[16] = 1;
  uint64_t v58 = sub_100007620(&qword_1002F1280);
  sub_10004FA50(v51, (uint64_t)&v37[*(int *)(v58 + 44)]);
  uint64_t v59 = (uint64_t)v37;
  uint64_t v60 = v134;
  sub_10001323C(v59, v147, &qword_1002F1278);
  sub_100100194(v52);
  (*(void (**)(uint64_t, void, uint64_t))(v57 + 104))(v50, enum case for UserInterfaceSizeClass.compact(_:), v60);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v50, 0, 1, v60);
  uint64_t v61 = v56 + *(int *)(v135 + 56);
  sub_10000C3A4(v52, v56, &qword_1002F1058);
  sub_10000C3A4(v50, v61, &qword_1002F1058);
  uint64_t v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v62(v56, 1, v60) == 1)
  {
    sub_10000B070(v50, &qword_1002F1058);
    sub_10000B070(v52, &qword_1002F1058);
    if (v62(v61, 1, v60) == 1)
    {
      sub_10000B070(v56, &qword_1002F1058);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_10000C3A4(v56, v128, &qword_1002F1058);
  if (v62(v61, 1, v60) == 1)
  {
    sub_10000B070(v50, &qword_1002F1058);
    sub_10000B070(v52, &qword_1002F1058);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v128, v60);
LABEL_6:
    sub_10000B070(v56, &qword_1002F1200);
LABEL_9:
    uint64_t v67 = type metadata accessor for ErrorStateView();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v148, 1, 1, v67);
    goto LABEL_11;
  }
  char v63 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v113, v61, v60);
  sub_1000565D0((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  uint64_t v64 = v128;
  char v65 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v57 + 8);
  v66(v63, v60);
  sub_10000B070(v50, &qword_1002F1058);
  sub_10000B070(v144, &qword_1002F1058);
  v66((char *)v64, v60);
  sub_10000B070(v56, &qword_1002F1058);
  if ((v65 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_8:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v169 == 3) {
    goto LABEL_9;
  }
  uint64_t v68 = v148;
  sub_10004E2CC(v169, v148);
  uint64_t v69 = type metadata accessor for ErrorStateView();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
LABEL_11:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v169 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v70 = v116;
    sub_1000551C8(v51, v116, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
    unint64_t v71 = (*(unsigned __int8 *)(v114 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v72 = swift_allocObject();
    sub_100054508(v70, v72 + v71);
    unint64_t v144 = sub_100054B9C();
    uint64_t v73 = v117;
    TipView.init(_:arrowEdge:action:)();
    id v74 = [self systemGroupedBackgroundColor];
    uint64_t v169 = Color.init(_:)();
    uint64_t v75 = sub_100014894(&qword_1002F12A0, &qword_1002F1248);
    uint64_t v76 = v118;
    uint64_t v77 = v120;
    View.tipBackground<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v73, v77);
    uint64_t v169 = v77;
    v170 = &type metadata for Color;
    uint64_t v171 = v75;
    v172 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    uint64_t v78 = v125;
    uint64_t v79 = v122;
    View.tipCornerRadius(_:antialiased:)();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v76, v79);
    char v80 = static Edge.Set.bottom.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    uint64_t v54 = v145;
    swift_release();
    swift_release();
    swift_release();
    Tip.shouldDisplay.getter();
    EdgeInsets.init(_all:)();
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    uint64_t v90 = v126;
    uint64_t v89 = v127;
    uint64_t v91 = (uint64_t)v124;
    (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v124, v78, v127);
    uint64_t v92 = v137;
    uint64_t v93 = v91 + *(int *)(v137 + 36);
    *(unsigned char *)uint64_t v93 = v80;
    *(void *)(v93 + 8) = v82;
    *(void *)(v93 + 16) = v84;
    *(void *)(v93 + 24) = v86;
    *(void *)(v93 + 32) = v88;
    *(unsigned char *)(v93 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v78, v89);
    uint64_t v94 = v123;
    sub_10001323C(v91, v123, &qword_1002F1260);
    uint64_t v95 = v141;
    sub_10001323C(v94, v141, &qword_1002F1260);
    uint64_t v96 = 0;
  }
  else
  {
    uint64_t v96 = 1;
    uint64_t v95 = v141;
    uint64_t v92 = v137;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v95, v96, 1, v92);
  uint64_t v97 = v54 + *(int *)(v149 + 36);
  char v98 = *(unsigned char *)v97;
  uint64_t v99 = *(void **)(v97 + 8);
  LOBYTE(v97) = *(unsigned char *)(v97 + 16);
  LOBYTE(v169) = v98;
  v170 = v99;
  LOBYTE(v171) = v97;
  sub_100007620(&qword_1002F1190);
  FocusState.wrappedValue.getter();
  if (LOBYTE(v155[0]) == 1)
  {
    uint64_t v100 = static VerticalAlignment.center.getter();
    sub_100051128(v54, (uint64_t)v152);
    *(_OWORD *)&v154[135] = v152[8];
    *(_OWORD *)&v154[151] = v152[9];
    *(_OWORD *)&v154[167] = v152[10];
    *(_OWORD *)&v154[183] = v153;
    *(_OWORD *)&v154[71] = v152[4];
    *(_OWORD *)&v154[87] = v152[5];
    *(_OWORD *)&v154[103] = v152[6];
    *(_OWORD *)&v154[119] = v152[7];
    *(_OWORD *)&v154[7] = v152[0];
    *(_OWORD *)&v154[23] = v152[1];
    *(_OWORD *)&v154[39] = v152[2];
    *(_OWORD *)&v154[55] = v152[3];
    long long v166 = *(_OWORD *)&v154[144];
    long long v167 = *(_OWORD *)&v154[160];
    *(_OWORD *)v168 = *(_OWORD *)&v154[176];
    long long v162 = *(_OWORD *)&v154[80];
    long long v163 = *(_OWORD *)&v154[96];
    long long v164 = *(_OWORD *)&v154[112];
    long long v165 = *(_OWORD *)&v154[128];
    long long v158 = *(_OWORD *)&v154[16];
    long long v159 = *(_OWORD *)&v154[32];
    long long v160 = *(_OWORD *)&v154[48];
    long long v161 = *(_OWORD *)&v154[64];
    char v151 = 1;
    v155[0] = v100;
    v155[1] = 0;
    char v156 = 1;
    *(void *)&v168[15] = *((void *)&v153 + 1);
    long long v157 = *(_OWORD *)v154;
    nullsub_1(v155);
  }
  else
  {
    sub_100054874((uint64_t)v155);
  }
  sub_10001323C((uint64_t)v155, (uint64_t)&v169, &qword_1002F1288);
  uint64_t v101 = (uint64_t)v138;
  sub_10000C3A4(v150, (uint64_t)v138, &qword_1002F0608);
  uint64_t v102 = v147;
  uint64_t v103 = v139;
  sub_10000C3A4(v147, v139, &qword_1002F1278);
  uint64_t v104 = v148;
  uint64_t v105 = v140;
  sub_10000C3A4(v148, v140, &qword_1002F1270);
  uint64_t v106 = v142;
  sub_10000C3A4(v95, v142, &qword_1002F1268);
  sub_10001323C((uint64_t)&v169, (uint64_t)v152, &qword_1002F1288);
  uint64_t v107 = v143;
  sub_10000C3A4(v101, v143, &qword_1002F0608);
  uint64_t v108 = v95;
  uint64_t v109 = (int *)sub_100007620(&qword_1002F1290);
  sub_10000C3A4(v103, v107 + v109[12], &qword_1002F1278);
  uint64_t v110 = v107 + v109[16];
  *(void *)uint64_t v110 = 0x3F847AE147AE147BLL;
  *(unsigned char *)(v110 + 8) = 0;
  sub_10000C3A4(v105, v107 + v109[20], &qword_1002F1270);
  sub_10000C3A4(v106, v107 + v109[24], &qword_1002F1268);
  uint64_t v111 = v107 + v109[28];
  sub_10001323C((uint64_t)v152, (uint64_t)v154, &qword_1002F1288);
  sub_10001323C((uint64_t)v154, v111, &qword_1002F1288);
  sub_10005498C(v154, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10005489C);
  sub_10000B070(v108, &qword_1002F1268);
  sub_10000B070(v104, &qword_1002F1270);
  sub_10000B070(v102, &qword_1002F1278);
  sub_10000B070(v150, &qword_1002F0608);
  sub_10001323C((uint64_t)v152, (uint64_t)v155, &qword_1002F1288);
  sub_10005498C(v155, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100054A08);
  sub_10000B070(v106, &qword_1002F1268);
  sub_10000B070(v105, &qword_1002F1270);
  sub_10000B070(v103, &qword_1002F1278);
  return sub_10000B070(v101, &qword_1002F0608);
}

uint64_t sub_10004FA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_100007620(&qword_1002F12A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100007620(&qword_1002F12B0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v55 = (uint64_t)&v47 - v11;
  *uint64_t v5 = static Alignment.topLeading.getter();
  v5[1] = v12;
  uint64_t v13 = sub_100007620(&qword_1002F12B8);
  sub_10004FE88(a1, (uint64_t *)((char *)v5 + *(int *)(v13 + 44)));
  uint64_t v14 = static Animation.easeInOut.getter();
  uint64_t v52 = type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = *(void *)(v73 + 16);
  swift_bridgeObjectRelease();
  sub_10000C3A4((uint64_t)v5, (uint64_t)v10, &qword_1002F12A8);
  uint64_t v16 = &v10[*(int *)(v7 + 44)];
  *(void *)uint64_t v16 = v14;
  v16[8] = v15 == 0;
  sub_10000B070((uint64_t)v5, &qword_1002F12A8);
  uint64_t v17 = v55;
  sub_10001323C((uint64_t)v10, v55, &qword_1002F12B0);
  uint64_t v18 = static Alignment.center.getter();
  uint64_t v49 = v19;
  uint64_t v50 = v18;
  sub_100050BB8(a1, (uint64_t)&v73);
  char v20 = v73;
  char v21 = BYTE1(v73);
  LOBYTE(v5) = BYTE2(v73);
  uint64_t v22 = v74;
  uint64_t v54 = v76;
  uint64_t v47 = v75;
  uint64_t v48 = v78;
  uint64_t v61 = v79;
  uint64_t v62 = v77;
  uint64_t v23 = v80;
  uint64_t v60 = v81;
  int v59 = v82;
  uint64_t v57 = v84;
  uint64_t v58 = v83;
  int v56 = static Edge.Set.top.getter();
  sub_100007620(&qword_1002F1060);
  ScaledMetric.wrappedValue.getter();
  EdgeInsets.init(_all:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  char v63 = 0;
  uint64_t v32 = (uint64_t)v10;
  uint64_t v51 = v10;
  sub_10000C3A4(v17, (uint64_t)v10, &qword_1002F12B0);
  LOBYTE(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v63;
  uint64_t v33 = v53;
  sub_10000C3A4(v32, v53, &qword_1002F12B0);
  uint64_t v34 = (_OWORD *)(v33 + *(int *)(sub_100007620(&qword_1002F12C0) + 48));
  uint64_t v36 = v49;
  uint64_t v35 = v50;
  *(void *)&long long v64 = v50;
  *((void *)&v64 + 1) = v49;
  LOBYTE(v65) = v20;
  BYTE1(v65) = v21;
  BYTE2(v65) = (_BYTE)v5;
  uint64_t v38 = v47;
  uint64_t v37 = v48;
  *((void *)&v65 + 1) = v22;
  *(void *)&long long v66 = v47;
  *((void *)&v66 + 1) = v54;
  *(void *)&long long v67 = v62;
  *((void *)&v67 + 1) = v48;
  *(void *)&long long v68 = v61;
  *((void *)&v68 + 1) = v23;
  *(void *)&long long v69 = v60;
  BYTE8(v69) = v59;
  *(void *)&long long v70 = v58;
  *((void *)&v70 + 1) = v57;
  LOBYTE(v71) = v56;
  *((void *)&v71 + 1) = v25;
  *(void *)&v72[0] = v27;
  *((void *)&v72[0] + 1) = v29;
  *(void *)&v72[1] = v31;
  BYTE8(v72[1]) = (_BYTE)v10;
  long long v39 = v66;
  long long v40 = v67;
  long long v41 = v69;
  v34[4] = v68;
  v34[5] = v41;
  v34[2] = v39;
  v34[3] = v40;
  long long v42 = v65;
  _OWORD *v34 = v64;
  v34[1] = v42;
  long long v43 = v70;
  long long v44 = v71;
  long long v45 = v72[0];
  *(_OWORD *)((char *)v34 + 137) = *(_OWORD *)((char *)v72 + 9);
  v34[7] = v44;
  v34[8] = v45;
  v34[6] = v43;
  sub_100054F04((uint64_t)&v64);
  sub_10000B070(v55, &qword_1002F12B0);
  uint64_t v73 = v35;
  uint64_t v74 = v36;
  LOBYTE(v75) = v20;
  BYTE1(v75) = v21;
  BYTE2(v75) = (_BYTE)v5;
  uint64_t v76 = v22;
  uint64_t v77 = v38;
  uint64_t v78 = v54;
  uint64_t v79 = v62;
  uint64_t v80 = v37;
  uint64_t v81 = v61;
  uint64_t v82 = v23;
  uint64_t v83 = v60;
  LOBYTE(v84) = v59;
  uint64_t v85 = v58;
  uint64_t v86 = v57;
  char v87 = v56;
  uint64_t v88 = v25;
  uint64_t v89 = v27;
  uint64_t v90 = v29;
  uint64_t v91 = v31;
  char v92 = (char)v10;
  sub_100054F78((uint64_t)&v73);
  return sub_10000B070((uint64_t)v51, &qword_1002F12B0);
}

uint64_t sub_10004FE88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v100 = type metadata accessor for Locale();
  uint64_t v102 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v95 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for LayoutDirection();
  uint64_t v97 = *(void *)(v4 - 8);
  uint64_t v98 = v4;
  __chkstk_darwin(v4);
  uint64_t v96 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v7 = v6 - 8;
  uint64_t v82 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v82 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v83 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v12 - 8);
  uint64_t v101 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for LanguageAwareText(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v84 = sub_100007620(&qword_1002EF4C0);
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002EF4C8);
  __chkstk_darwin(v18 - 8);
  uint64_t v88 = (uint64_t)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100007620(&qword_1002F12C8);
  __chkstk_darwin(v86);
  uint64_t v90 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100007620(&qword_1002F12D0);
  __chkstk_darwin(v93);
  uint64_t v91 = (uint64_t)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002F12D8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v94 = (uint64_t)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v89 = (char *)&v73 - v26;
  __chkstk_darwin(v25);
  uint64_t v92 = (uint64_t)&v73 - v27;
  uint64_t v28 = a1 + *(int *)(v7 + 36);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v29 = *(void *)(v103 + 16);
  swift_bridgeObjectRelease();
  if (v29)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v87 = v103;
  }
  else
  {
    uint64_t v87 = 0;
  }
  id v80 = sub_100049FD8();
  swift_retain();
  uint64_t v79 = sub_100057F20();
  uint64_t v78 = v30;
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v31 = v101;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v102 + 56))(v31, 0, 1, v100);
  id v77 = sub_100049ACC();
  uint64_t v81 = v28;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v74 = v103;
  sub_100055020();
  uint64_t v73 = static UIColor.quaternaryTranslateAccentColor.getter();
  sub_1000551C8(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v32 = *(unsigned __int8 *)(v82 + 80);
  uint64_t v33 = (uint64_t)v11;
  uint64_t v76 = v11;
  uint64_t v34 = (v32 + 16) & ~v32;
  uint64_t v75 = a1;
  uint64_t v35 = swift_allocObject();
  sub_100054508(v33, v35 + v34);
  uint64_t v36 = v83;
  sub_1000551C8(a1, v83, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v37 = swift_allocObject();
  sub_100054508(v36, v37 + v34);
  type metadata accessor for LanguageAwareTextViewSizeThatFitsCache();
  uint64_t v38 = (void *)swift_allocObject();
  void v38[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
  v38[3] = _swiftEmptyArrayStorage;
  v38[4] = 100;
  uint64_t v39 = v79;
  *uint64_t v16 = v80;
  v16[1] = v39;
  v16[2] = v78;
  sub_10001323C(v101, (uint64_t)v16 + v14[6], (uint64_t *)&unk_1002F4110);
  *(void *)((char *)v16 + v14[7]) = v77;
  *((unsigned char *)v16 + v14[8]) = v74;
  *(void *)((char *)v16 + v14[9]) = v73;
  *(void *)((char *)v16 + v14[10]) = 0;
  *((unsigned char *)v16 + v14[11]) = 1;
  long long v40 = (char *)v16 + v14[12];
  *(void *)long long v40 = 0;
  *((void *)v40 + 1) = 0;
  v40[16] = 1;
  long long v41 = (void *)((char *)v16 + v14[13]);
  *long long v41 = 0;
  v41[1] = 0;
  *(void *)((char *)v16 + v14[14]) = 0;
  *((unsigned char *)v16 + v14[15]) = 0;
  long long v42 = (uint64_t (**)(uint64_t, uint64_t))((char *)v16 + v14[16]);
  char *v42 = sub_100055064;
  v42[1] = (uint64_t (*)(uint64_t, uint64_t))v35;
  long long v43 = (void *)((char *)v16 + v14[17]);
  void *v43 = 0;
  v43[1] = 0;
  long long v44 = (uint64_t (**)())((char *)v16 + v14[18]);
  *long long v44 = sub_1000550E8;
  v44[1] = (uint64_t (*)())v37;
  *(void *)((char *)v16 + v14[19]) = 0;
  *((unsigned char *)v16 + v14[20]) = 1;
  long long v45 = (void *)((char *)v16 + v14[21]);
  *long long v45 = 0;
  v45[1] = 0;
  *(void *)((char *)v16 + v14[22]) = v38;
  uint64_t v46 = static VerticalAlignment.firstTextBaseline.getter();
  uint64_t v47 = (uint64_t)v76;
  sub_1000551C8(v75, (uint64_t)v76, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v48 = swift_allocObject();
  sub_100054508(v47, v48 + v34);
  uint64_t v49 = v85;
  sub_1000551C8((uint64_t)v16, v85, type metadata accessor for LanguageAwareText);
  uint64_t v50 = (uint64_t *)(v49 + *(int *)(v84 + 36));
  *uint64_t v50 = v46;
  v50[1] = (uint64_t)sub_100055148;
  v50[2] = v48;
  sub_10005595C((uint64_t)v16, type metadata accessor for LanguageAwareText);
  uint64_t v51 = static Alignment.leading.getter();
  uint64_t v52 = v88;
  sub_10001C580(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v88, 0.0, 1, 0.0, 1, v51, v53);
  sub_10000B070(v49, &qword_1002EF4C0);
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v55 = v95;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v48) = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v55, v100);
  uint64_t v57 = v96;
  uint64_t v56 = v97;
  uint64_t v58 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if ((v48 & 1) == 0) {
    uint64_t v58 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v59 = v98;
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v96, *v58, v98);
  uint64_t v60 = (uint64_t)v90;
  uint64_t v61 = (uint64_t *)&v90[*(int *)(v86 + 36)];
  uint64_t v62 = sub_100007620(&qword_1002EF468);
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))((char *)v61 + *(int *)(v62 + 28), v57, v59);
  *uint64_t v61 = KeyPath;
  sub_10000C3A4(v52, v60, &qword_1002EF4C8);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v59);
  sub_10000B070(v52, &qword_1002EF4C8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v63 = *(void *)(v103 + 16);
  swift_bridgeObjectRelease();
  if (v63) {
    double v64 = 0.0;
  }
  else {
    double v64 = 1.0;
  }
  uint64_t v65 = v91;
  sub_10000C3A4(v60, v91, &qword_1002F12C8);
  *(double *)(v65 + *(int *)(v93 + 36)) = v64;
  sub_10000B070(v60, &qword_1002F12C8);
  sub_100055304(&qword_1002F12E8, &qword_1002F12D0, (void (*)(void))sub_100055238);
  long long v66 = v89;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v65, &qword_1002F12D0);
  uint64_t v67 = (uint64_t)v66;
  uint64_t v68 = v92;
  sub_10001323C(v67, v92, &qword_1002F12D8);
  uint64_t v69 = v94;
  sub_10000C3A4(v68, v94, &qword_1002F12D8);
  long long v70 = v99;
  *uint64_t v99 = v87;
  uint64_t v71 = sub_100007620(&qword_1002F1318);
  sub_10000C3A4(v69, (uint64_t)v70 + *(int *)(v71 + 48), &qword_1002F12D8);
  swift_bridgeObjectRetain();
  sub_10000B070(v68, &qword_1002F12D8);
  sub_10000B070(v69, &qword_1002F12D8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100050AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + *(int *)(v6 + 48));
  uint64_t v8 = *(void **)(*(void *)(a3 + *(int *)(v6 + 28) + 8)
                + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
  if (v8)
  {
    swift_retain();
    id v9 = v8;
    uint64_t v10 = (void *)DisambiguationResultModel.disambiguableResult.getter();
    swift_release();
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v7(v10, a1, a2);

  return v11;
}

uint64_t sub_100050BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v4 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v5 = v4 - 8;
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v33 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v31 = a1 + *(int *)(v5 + 36);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v32 = v34;
  swift_retain();
  int v30 = sub_100057954();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  static Locale.current.getter();
  uint64_t v14 = Locale.sqDisplayName(context:in:)();
  unint64_t v16 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, v7);
  v17(v13, v7);
  if (v16) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v16) {
    unint64_t v19 = v16;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  sub_1000551C8(v29, (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  unint64_t v20 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v21 = swift_allocObject();
  sub_100054508((uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  uint64_t v22 = static Color.translateAccentColor.getter();
  uint64_t KeyPath = swift_getKeyPath();
  swift_retain();
  __int16 v24 = sub_100057954();
  swift_release();
  if ((v24 & 0x100) != 0) {
    double v25 = 0.0;
  }
  else {
    double v25 = 1.0;
  }
  uint64_t v26 = static Animation.default.getter();
  swift_retain();
  int v27 = sub_100057954();
  uint64_t result = swift_release();
  *(unsigned char *)a2 = v32;
  *(unsigned char *)(a2 + 1) = BYTE1(v30) & 1;
  *(unsigned char *)(a2 + 2) = 0;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = sub_100054FF8;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = KeyPath;
  *(void *)(a2 + 48) = v22;
  *(double *)(a2 + 56) = v25;
  *(void *)(a2 + 64) = v26;
  *(unsigned char *)(a2 + 72) = BYTE1(v27) & 1;
  *(void *)(a2 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = nullsub_1;
  *(void *)(a2 + 88) = 0;
  return result;
}

uint64_t sub_100050F5C()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_retain();
  sub_10005AFA8(0, 0);
  sub_10005CE58();

  return swift_release();
}

uint64_t sub_100050FBC()
{
  if (qword_1002EE5E8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E9C0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Presenting learn more from compose card", v3, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for ComposeTranslationCardView();
  sub_100007620(&qword_1002F1190);
  FocusState.wrappedValue.setter();
  sub_100007620(&qword_1002F1168);
  return State.wrappedValue.setter();
}

uint64_t sub_100051128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t KeyPath = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t)&v33[-v9];
  __chkstk_darwin(v8);
  uint64_t v12 = &v33[-v11];
  sub_1000551C8(a1, (uint64_t)&v33[-v11], (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v15 = v13 | 7;
  uint64_t v52 = swift_allocObject();
  sub_100054508((uint64_t)v12, v52 + v14);
  long long v40 = v12;
  sub_1000551C8(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v51 = swift_allocObject();
  sub_100054508((uint64_t)v12, v51 + v14);
  uint64_t v37 = type metadata accessor for ComposeTranslationCardView;
  sub_1000551C8(a1, v10, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v38 = (uint64_t (*)())v15;
  uint64_t v39 = v14 + v6;
  uint64_t v50 = swift_allocObject();
  sub_100054508(v10, v50 + v14);
  unint64_t v16 = KeyPath;
  sub_1000551C8(a1, (uint64_t)KeyPath, (uint64_t (*)(void))type metadata accessor for ComposeTranslationCardView);
  uint64_t v49 = swift_allocObject();
  sub_100054508((uint64_t)v16, v49 + v14);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v46 = v63;
  type metadata accessor for ComposeTranslationViewModel(0);
  sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v44 = v64;
  long long v45 = v63;
  int v43 = v65;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v42 = v53;
  uint64_t KeyPath = (unsigned char *)swift_getKeyPath();
  swift_retain();
  LOBYTE(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_10005DE9C();
  swift_release();
  uint64_t v47 = swift_getKeyPath();
  uint64_t v41 = swift_allocObject();
  *(unsigned char *)(v41 + 16) = v10 & 1;
  unsigned __int8 v86 = 0;
  uint64_t v17 = (uint64_t)v40;
  sub_1000551C8(a1, (uint64_t)v40, (uint64_t (*)(void))v37);
  uint64_t v39 = swift_allocObject();
  sub_100054508(v17, v39 + v14);
  swift_retain();
  if (sub_10005E208()
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        !v64))
  {
    swift_release();
    char v18 = 1;
  }
  else
  {
    char v18 = String.isWhitespaceOnly.getter();
    swift_release();
    swift_bridgeObjectRelease();
  }
  long long v40 = (unsigned char *)swift_getKeyPath();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v18 & 1;
  int v34 = v86;
  uint64_t v38 = sub_100054BFC;
  *(void *)&long long v53 = sub_100054BFC;
  *((void *)&v53 + 1) = v52;
  uint64_t v37 = sub_100054C18;
  *(void *)&long long v54 = sub_100054C18;
  *((void *)&v54 + 1) = v51;
  uint64_t v36 = sub_100054C98;
  *(void *)&long long v55 = sub_100054C98;
  *((void *)&v55 + 1) = v50;
  uint64_t v35 = sub_100054CB4;
  *(void *)&long long v56 = sub_100054CB4;
  *((void *)&v56 + 1) = v49;
  char v20 = v46;
  LOBYTE(v57) = v46;
  *(_DWORD *)((char *)&v57 + 1) = v89[0];
  DWORD1(v57) = *(_DWORD *)((char *)v89 + 3);
  uint64_t v22 = v44;
  uint64_t v21 = v45;
  *((void *)&v57 + 1) = v45;
  *(void *)&long long v58 = v44;
  char v24 = v42;
  char v23 = v43;
  BYTE8(v58) = v43;
  BYTE9(v58) = v42;
  *(_DWORD *)((char *)&v58 + 1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v87;
  HIWORD(v58) = v88;
  *(void *)&long long v59 = KeyPath;
  BYTE8(v59) = v86;
  *(_DWORD *)((char *)&v59 + 9) = *(_DWORD *)v85;
  HIDWORD(v59) = *(_DWORD *)&v85[3];
  *(void *)&long long v60 = v47;
  *((void *)&v60 + 1) = sub_100054D5C;
  uint64_t v25 = v41;
  uint64_t v61 = v41;
  long long v26 = v56;
  *(_OWORD *)(a2 + 32) = v55;
  *(_OWORD *)(a2 + 48) = v26;
  long long v27 = v54;
  *(_OWORD *)a2 = v53;
  *(_OWORD *)(a2 + 16) = v27;
  long long v28 = v57;
  long long v29 = v58;
  long long v30 = v60;
  *(_OWORD *)(a2 + 96) = v59;
  *(_OWORD *)(a2 + 112) = v30;
  *(_OWORD *)(a2 + 64) = v28;
  *(_OWORD *)(a2 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v29;
  char v62 = 1;
  *(void *)(a2 + 128) = v25;
  *(void *)(a2 + 136) = 0;
  *(unsigned char *)(a2 + 144) = 1;
  uint64_t v31 = v39;
  *(void *)(a2 + 152) = sub_100054D68;
  *(void *)(a2 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v31;
  *(void *)(a2 + 168) = v40;
  *(void *)(a2 + 176) = sub_10005675C;
  *(void *)(a2 + 184) = v19;
  sub_100054D98((uint64_t)&v53);
  uint64_t v63 = v38;
  uint64_t v64 = v52;
  uint64_t v65 = v37;
  uint64_t v66 = v51;
  uint64_t v67 = v36;
  uint64_t v68 = v50;
  uint64_t v69 = v35;
  uint64_t v70 = v49;
  char v71 = v20;
  *(_DWORD *)uint64_t v72 = v89[0];
  *(_DWORD *)&id v72[3] = *(_DWORD *)((char *)v89 + 3);
  uint64_t v73 = v21;
  uint64_t v74 = v22;
  char v75 = v23;
  char v76 = v24;
  __int16 v78 = v88;
  int v77 = v87;
  uint64_t v79 = KeyPath;
  char v80 = v34;
  *(_DWORD *)&v81[3] = *(_DWORD *)&v85[3];
  *(_DWORD *)uint64_t v81 = *(_DWORD *)v85;
  uint64_t v82 = v47;
  uint64_t v83 = sub_100054D5C;
  uint64_t v84 = v25;
  return sub_100054E4C((uint64_t)&v63);
}

uint64_t sub_1000517FC(uint64_t a1)
{
  if (*(void *)(a1 + *(int *)(type metadata accessor for ComposeTranslationCardView() + 24)))
  {
    swift_retain();
    swift_retain();
    uint64_t v1 = sub_10005E2AC();
    swift_release();
    if (v1)
    {
      id v2 = [self sharedApplication];
      [v2 sendAction:"resignFirstResponder" to:0 from:0 forEvent:0];
    }
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000565D0((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100051954(uint64_t a1, void (*a2)(uint64_t))
{
  type metadata accessor for ComposeTranslationCardView();
  uint64_t v3 = swift_retain();
  a2(v3);

  return swift_release();
}

uint64_t sub_1000519B0()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_retain();
  sub_10005C81C(0);

  return swift_release();
}

uint64_t sub_100051A0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for ComposeTranslationCardView() + 28) + 8);
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
  if (v2)
  {
    swift_retain();
    id v3 = v2;
    dispatch thunk of DisambiguationResultModel.didAppear()();
    swift_release();
  }
  sub_100007620(&qword_1002F1190);
  FocusState.wrappedValue.getter();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
  swift_getKeyPath();
  sub_1000565D0((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v5 = *(unsigned __int8 *)(v4 + 24);
  uint64_t result = swift_release();
  if (v8 != v5)
  {
    swift_retain();
    FocusState.wrappedValue.getter();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100051C44(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + *(int *)(type metadata accessor for ComposeTranslationCardView() + 28) + 8)
                 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
  swift_getKeyPath();
  sub_1000565D0((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  int v5 = *(unsigned __int8 *)(v4 + 24);
  uint64_t result = swift_release();
  if (v3 != v5)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100051DDC(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  type metadata accessor for ComposeTranslationCardView();
  sub_100007620(&qword_1002F1190);
  uint64_t result = FocusState.wrappedValue.getter();
  if (v2 != v4) {
    return FocusState.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100051E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ComposeTranslationCardView();
  if (!*(void *)(a2 + *(int *)(v3 + 20)))
  {
    type metadata accessor for ConversationContext(0);
    uint64_t v6 = &qword_1002EF2A0;
    uint64_t v7 = (void (*)(uint64_t))type metadata accessor for ConversationContext;
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v9 != 5)
  {
    uint64_t result = sub_10005477C(v8, v9);
    if (!v9)
    {
      if (!*(void *)(a2 + *(int *)(v4 + 24)))
      {
        while (1)
        {
          type metadata accessor for SceneContext();
          uint64_t v6 = (unint64_t *)&unk_1002F97F0;
          uint64_t v7 = (void (*)(uint64_t))type metadata accessor for SceneContext;
LABEL_9:
          sub_1000565D0(v6, v7);
          EnvironmentObject.error()();
          __break(1u);
        }
      }
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_unknownObjectRelease();
      if (!v8)
      {
        swift_retain();
        sub_10005CE58();
        return swift_release();
      }
    }
  }
  return result;
}

unint64_t sub_100052074(void *a1, uint64_t a2, Swift::UInt a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30[3] = (uint64_t)&type metadata for TranslateFeatures;
  v30[4] = sub_10000AB14();
  LOBYTE(v30[0]) = 5;
  char v10 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v30);
  unint64_t v11 = 0;
  if ((v10 & 1) != 0 && a1)
  {
    id v12 = a1;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v14 = [v12 sentenceWithUUID:isa];

    if (v14)
    {
      unint64_t v11 = (unint64_t)_LTDisambiguableSentence.menu(forLinkIndex:)(a3);
    }
    else
    {
      if (qword_1002EE5E8 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100011554(v15, (uint64_t)qword_10030E9C0);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
      id v16 = v12;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        long long v27 = (void *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        v30[0] = v28;
        *(_DWORD *)uint64_t v19 = 136446466;
        sub_1000565D0(&qword_1002F1050, (void (*)(uint64_t))&type metadata accessor for UUID);
        os_log_t v26 = v17;
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v29 = sub_100202FD4(v20, v21, v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        *(_WORD *)(v19 + 12) = 2114;
        uint64_t v29 = (uint64_t)v16;
        id v22 = v16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *long long v27 = a1;

        os_log_t v23 = v26;
        _os_log_impl((void *)&_mh_execute_header, v26, v18, "Unable to find sentence UUID %{public}s in result %{public}@", (uint8_t *)v19, 0x16u);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      return 0;
    }
  }
  return v11;
}

uint64_t sub_100052450@<X0>(uint64_t a1@<X8>)
{
  int v2 = v1;
  uint64_t v64 = a1;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v62 = *(void *)(v3 - 8);
  uint64_t v63 = v3;
  __chkstk_darwin(v3);
  uint64_t v61 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100007620(&qword_1002EFEB0);
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100007620(&qword_1002EFEB8);
  uint64_t v7 = __chkstk_darwin(v55);
  unint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v49 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  long long v54 = (char *)&v49 - v14;
  __chkstk_darwin(v13);
  long long v59 = (char *)&v49 - v15;
  uint64_t v56 = sub_100007620(&qword_1002F13B8);
  __chkstk_darwin(v56);
  uint64_t v60 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100007620(&qword_1002F13C0);
  __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  long long v19 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v18 + 32) = v19;
  *(void *)(v18 + 48) = *((void *)v2 + 4);
  long long v66 = *(_OWORD *)(v2 + 8);
  sub_100056454((uint64_t)&v66);
  swift_retain();
  Button.init(action:label:)();
  int v51 = *v2;
  if (v51)
  {
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v23 = v24;
    unint64_t v50 = 0x74747542706F7473;
  }
  else
  {
    unint64_t v50 = 0xD000000000000012;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v21 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v23 = v22;
  }
  char v25 = v20 & 1;
  sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
  uint64_t v26 = v53;
  View.accessibility(label:)();
  sub_10001FC84(v21, v23, v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v26);
  long long v65 = v66;
  sub_10000C350();
  swift_bridgeObjectRetain();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  ModifiedContent<>.accessibility(value:)();
  sub_10001FC84(v27, v29, v31);
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v9, &qword_1002EFEB8);
  uint64_t v32 = (uint64_t)v54;
  ModifiedContent<>.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v12, &qword_1002EFEB8);
  sub_100007620(&qword_1002EF3B0);
  uint64_t v33 = v62;
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1002488D0;
  static AccessibilityTraits.startsMediaSession.getter();
  *(void *)&long long v65 = v34;
  sub_1000565D0(&qword_1002EF3B8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
  sub_100007620(&qword_1002EF3C0);
  sub_100014894(&qword_1002EF3C8, &qword_1002EF3C0);
  uint64_t v35 = v61;
  uint64_t v36 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v37 = (uint64_t)v59;
  ModifiedContent<>.accessibility(addTraits:)();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v36);
  sub_10000B070(v32, &qword_1002EFEB8);
  unsigned __int8 v38 = v2[1];
  uint64_t v39 = static Color.accentColor.getter();
  if (v38)
  {
    uint64_t v40 = Color.opacity(_:)();
    swift_release();
    uint64_t v39 = v40;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v42 = v60;
  sub_10000C3A4(v37, v60, &qword_1002EFEB8);
  int v43 = (uint64_t *)(v42 + *(int *)(v56 + 36));
  uint64_t *v43 = KeyPath;
  v43[1] = v39;
  sub_10000B070(v37, &qword_1002EFEB8);
  uint64_t v44 = static Font.title2.getter();
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v57;
  sub_10000C3A4(v42, v57, &qword_1002F13B8);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v58 + 36));
  *uint64_t v47 = v45;
  v47[1] = v44;
  sub_10000B070(v42, &qword_1002F13B8);
  return sub_10001323C(v46, v64, &qword_1002F13C0);
}

uint64_t sub_100052BF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_100052C24@<X0>(uint64_t a1@<X8>)
{
  return sub_100052450(a1);
}

uint64_t sub_100052C60@<X0>(uint64_t a1@<X8>)
{
  v27[0] = a1;
  uint64_t v1 = sub_100007620(&qword_1002EFEB0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002F1398);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F13A0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v27 - v12;
  swift_retain();
  Button.init(action:label:)();
  id v14 = [self tertiaryLabelColor];
  uint64_t v15 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v4, v1);
  uint64_t v17 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *uint64_t v17 = KeyPath;
  v17[1] = v15;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v18 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v20 = v19;
  LOBYTE(v4) = v21 & 1;
  sub_100056318();
  View.accessibility(label:)();
  sub_10001FC84(v18, v20, (char)v4);
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v7, &qword_1002F1398);
  ModifiedContent<>.accessibilityIdentifier(_:)();
  sub_10000B070((uint64_t)v11, &qword_1002F13A0);
  uint64_t v22 = static Font.title2.getter();
  uint64_t v23 = swift_getKeyPath();
  uint64_t v24 = v27[0];
  sub_10000C3A4((uint64_t)v13, v27[0], &qword_1002F13A0);
  char v25 = (uint64_t *)(v24 + *(int *)(sub_100007620(&qword_1002F13B0) + 36));
  *char v25 = v23;
  v25[1] = v22;
  return sub_10000B070((uint64_t)v13, &qword_1002F13A0);
}

uint64_t sub_100052FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10005301C@<X0>(uint64_t a1@<X8>)
{
  return sub_100052C60(a1);
}

uint64_t *sub_100053024(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (uint64_t *)((char *)a1 + v11);
    id v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    *uint64_t v13 = v15;
    v13[1] = v16;
    uint64_t v17 = (uint64_t *)((char *)a1 + v12);
    uint64_t v18 = (uint64_t *)((char *)a2 + v12);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    *uint64_t v17 = v20;
    v17[1] = v19;
    uint64_t v21 = a3[7];
    uint64_t v22 = a3[8];
    uint64_t v23 = (uint64_t *)((char *)a1 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (uint64_t *)((char *)a1 + v22);
    uint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[9];
    uint64_t v30 = a3[10];
    char v31 = (char *)a1 + v29;
    uint64_t v32 = (char *)a2 + v29;
    *char v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    v31[16] = v32[16];
    uint64_t v33 = (char *)a1 + v30;
    uint64_t v34 = (char *)a2 + v30;
    char *v33 = *v34;
    *((void *)v33 + 1) = *((void *)v34 + 1);
    uint64_t v35 = a3[11];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v38 = sub_100007620(&qword_1002F1060);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = a3[12];
    uint64_t v40 = (uint64_t *)((char *)a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
  }
  swift_retain();
  return a1;
}

uint64_t sub_100053300(uint64_t a1, uint64_t a2)
{
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 44);
  uint64_t v7 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_release();
}

void *sub_100053498(void *a1, void *a2, int *a3)
{
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_100007620(&qword_1002F1058);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v9);
  uint64_t v12 = (void *)((char *)a2 + v9);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  uint64_t v15 = (void *)((char *)a1 + v10);
  uint64_t v16 = (void *)((char *)a2 + v10);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  uint64_t v19 = a3[7];
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *uint64_t v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  v29[16] = v30[16];
  char v31 = (char *)a1 + v28;
  uint64_t v32 = (char *)a2 + v28;
  *char v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = a3[11];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v36 = sub_100007620(&qword_1002F1060);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  uint64_t v40 = v39[1];
  void *v38 = *v39;
  v38[1] = v40;
  swift_retain();
  return a1;
}

void *sub_100053728(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  swift_retain();
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_retain();
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_retain();
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_retain();
  swift_release();
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *((unsigned char *)a2 + v21);
  *((void *)v22 + 1) = *(void *)((char *)a2 + v21 + 8);
  swift_retain();
  swift_release();
  v22[16] = v23[16];
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *uint64_t v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[11];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = sub_100007620(&qword_1002F1060);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  uint64_t v31 = a3[12];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100053A2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007620(&qword_1002F1058);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v10 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  uint64_t v12 = a3[9];
  uint64_t v13 = a3[10];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  long long v16 = *(_OWORD *)&a2[v13];
  v14[16] = v15[16];
  *(_OWORD *)&a1[v13] = v16;
  uint64_t v17 = a3[11];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_100007620(&qword_1002F1060);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  return a1;
}

char *sub_100053C44(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, (uint64_t *)&unk_1002F5770);
    uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_release();
  *((void *)v14 + 1) = *((void *)v15 + 1);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v20 = *(void *)v18;
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_release();
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *uint64_t v27 = a2[v26];
  *((void *)v27 + 1) = *(void *)&a2[v26 + 8];
  swift_release();
  v27[16] = v28[16];
  uint64_t v29 = a3[10];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *uint64_t v30 = *v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_100007620(&qword_1002F1060);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  return a1;
}

uint64_t sub_100053F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100053F18);
}

uint64_t sub_100053F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1068);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100007620(&qword_1002F1060);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 44);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100054050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100054064);
}

uint64_t sub_100054064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F1068);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100007620(&qword_1002F1060);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 44);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for ComposeTranslationCardView()
{
  uint64_t result = qword_1002F10C8;
  if (!qword_1002F10C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000541E8()
{
  sub_1000542E0();
  if (v0 <= 0x3F)
  {
    sub_10005433C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000542E0()
{
  if (!qword_1002F6750)
  {
    sub_100007928(&qword_1002F1058);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F6750);
    }
  }
}

void sub_10005433C()
{
  if (!qword_1002F10D8)
  {
    sub_100054398();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F10D8);
    }
  }
}

unint64_t sub_100054398()
{
  unint64_t result = qword_1002F10E0;
  if (!qword_1002F10E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F10E0);
  }
  return result;
}

uint64_t sub_1000543EC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100054410()
{
  unint64_t result = qword_1002F1170;
  if (!qword_1002F1170)
  {
    sub_100007928(&qword_1002F1138);
    sub_100014894(&qword_1002F1178, &qword_1002F1130);
    sub_1000544B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1170);
  }
  return result;
}

unint64_t sub_1000544B0()
{
  unint64_t result = qword_1002F1180;
  if (!qword_1002F1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1180);
  }
  return result;
}

uint64_t sub_100054508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ComposeTranslationCardView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005456C()
{
  return sub_1000547E8(sub_100051A0C);
}

uint64_t sub_100054588(uint64_t a1, uint64_t a2)
{
  return sub_1000546C4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100051C44);
}

unint64_t sub_1000545A0()
{
  unint64_t result = qword_1002F1198;
  if (!qword_1002F1198)
  {
    sub_100007928(&qword_1002F1148);
    sub_100007928(&qword_1002F1138);
    type metadata accessor for GenderDisambiguationLearnMoreView();
    sub_100054410();
    sub_1000565D0(&qword_1002F1188, (void (*)(uint64_t))&type metadata accessor for GenderDisambiguationLearnMoreView);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1198);
  }
  return result;
}

uint64_t sub_1000546AC(uint64_t a1, uint64_t a2)
{
  return sub_1000546C4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100051DDC);
}

uint64_t sub_1000546C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_10005475C(uint64_t a1)
{
  return sub_100054B18(a1, sub_100051E88);
}

uint64_t sub_10005477C(uint64_t a1, unint64_t a2)
{
  if (a2 != 5) {
    return sub_10000CDF0(a1, a2);
  }
  return a1;
}

uint64_t sub_100054794()
{
  return sub_100063F74(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000547D0()
{
  return sub_1000547E8((uint64_t (*)(uint64_t))sub_10004E5F8);
}

uint64_t sub_1000547E8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

double sub_100054874(uint64_t a1)
{
  *(void *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_10005489C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a4)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000247E8(a16, a17 & 1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_10005498C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

uint64_t sub_100054A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a4)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_10002485C(a16, a17 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100054B00(uint64_t a1)
{
  return sub_100054B18(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100050FBC);
}

uint64_t sub_100054B18(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_100054B9C()
{
  unint64_t result = qword_1002F1298;
  if (!qword_1002F1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1298);
  }
  return result;
}

uint64_t sub_100054BFC()
{
  return sub_1000547E8(sub_1000517FC);
}

uint64_t sub_100054C18()
{
  return sub_100054C30((void (*)(uint64_t))sub_10005E8B8);
}

uint64_t sub_100054C30(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  return sub_100051954(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100054C98()
{
  return sub_100054C30((void (*)(uint64_t))sub_10005F00C);
}

uint64_t sub_100054CB4()
{
  return sub_100054C30((void (*)(uint64_t))sub_10005F1B4);
}

uint64_t sub_100054CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100054D18()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_100054D4C()
{
  return _swift_deallocObject(v0, 17, 7);
}

unsigned char *sub_100054D5C(unsigned char *a1)
{
  return sub_10010FE0C(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100054D68()
{
  return sub_1000547E8((uint64_t (*)(uint64_t))sub_1000519B0);
}

uint64_t sub_100054D88()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100054D98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1000247E8(v2, v3);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100054E4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  char v3 = *(unsigned char *)(a1 + 104);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10002485C(v2, v3);
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100054F04(uint64_t a1)
{
  return a1;
}

uint64_t sub_100054F78(uint64_t a1)
{
  return a1;
}

uint64_t sub_100054FF8()
{
  return sub_1000547E8((uint64_t (*)(uint64_t))sub_100050F5C);
}

unint64_t sub_100055020()
{
  unint64_t result = qword_1002F12E0;
  if (!qword_1002F12E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F12E0);
  }
  return result;
}

uint64_t sub_100055064(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100050AF8(a1, a2, v6);
}

uint64_t sub_1000550E8()
{
  return sub_1000555A4();
}

double sub_100055148()
{
  type metadata accessor for ComposeTranslationCardView();
  id v0 = sub_100049ACC();
  [v0 ascender];
  double v2 = v1;

  return v2;
}

uint64_t sub_1000551C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100055238()
{
  unint64_t result = qword_1002F12F0;
  if (!qword_1002F12F0)
  {
    sub_100007928(&qword_1002F12C8);
    sub_100055304(&qword_1002F12F8, &qword_1002EF4C8, (void (*)(void))sub_100055380);
    sub_100014894(&qword_1002EF460, &qword_1002EF468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F12F0);
  }
  return result;
}

uint64_t sub_100055304(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100055380()
{
  unint64_t result = qword_1002F1300;
  if (!qword_1002F1300)
  {
    sub_100007928(&qword_1002EF4C0);
    sub_1000565D0(&qword_1002F1308, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);
    sub_10005542C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1300);
  }
  return result;
}

unint64_t sub_10005542C()
{
  unint64_t result = qword_1002F1310;
  if (!qword_1002F1310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1310);
  }
  return result;
}

uint64_t sub_100055480()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v1 == 1)
  {
    swift_retain();
    sub_10005D934(0);
  }
  else
  {
    type metadata accessor for ComposeTranslationViewModel(0);
    sub_1000565D0(&qword_1002F1228, (void (*)(uint64_t))type metadata accessor for ComposeTranslationViewModel);
    swift_retain();
    ObservableObject<>.objectWillChange.getter();
    swift_release();
    ObservableObjectPublisher.send()();
  }
  return swift_release();
}

uint64_t sub_1000555A4()
{
  type metadata accessor for ComposeTranslationCardView();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (!v6) {
    goto LABEL_5;
  }
  id v0 = [v6 string];

  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v3 = v2;

  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v5 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
LABEL_5:
    swift_retain();
    sub_10005AFA8(0, 0);
    swift_release();
    sub_100007620(&qword_1002F1190);
    return FocusState.wrappedValue.setter();
  }
  return result;
}

uint64_t sub_100055718@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100055744()
{
  return EnvironmentValues.tintColor.setter();
}

unint64_t sub_100055770()
{
  unint64_t result = qword_1002F1338;
  if (!qword_1002F1338)
  {
    sub_100007928(&qword_1002F1328);
    sub_1000565D0(&qword_1002F0650, (void (*)(uint64_t))&type metadata accessor for LanguagePicker);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1338);
  }
  return result;
}

uint64_t sub_100055844(uint64_t a1)
{
  return sub_100055878(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004DAD4);
}

uint64_t sub_100055860(uint64_t a1)
{
  return sub_100055878(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10004DB7C);
}

uint64_t sub_100055878(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for ComposeTranslationCardView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_100055900()
{
  return sub_100055480();
}

uint64_t sub_10005595C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000559BC()
{
  unint64_t result = qword_1002F1360;
  if (!qword_1002F1360)
  {
    sub_100007928(&qword_1002F1350);
    sub_100055A5C();
    sub_100014894(&qword_1002EF460, &qword_1002EF468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1360);
  }
  return result;
}

unint64_t sub_100055A5C()
{
  unint64_t result = qword_1002F1368;
  if (!qword_1002F1368)
  {
    sub_100007928(&qword_1002EF4D8);
    type metadata accessor for LanguageAwareEditor(255);
    sub_1000565D0((unint64_t *)&unk_1002F6C60, (void (*)(uint64_t))type metadata accessor for LanguageAwareEditor);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1368);
  }
  return result;
}

uint64_t sub_100055B38(uint64_t a1)
{
  return a1;
}

uint64_t sub_100055BC0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100055C4C()
{
  return sub_100054C30((void (*)(uint64_t))sub_10005CE58);
}

uint64_t sub_100055C68()
{
  uint64_t v1 = type metadata accessor for ComposeTranslationCardView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v2 | 7;
  uint64_t v8 = v3 + v4;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 44);
  uint64_t v10 = sub_100007620(&qword_1002F1060);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return _swift_deallocObject(v0, v8, v7);
}

uint64_t sub_100055E80()
{
  return sub_1000547E8((uint64_t (*)(uint64_t))sub_10004E240);
}

unint64_t sub_100055E98()
{
  unint64_t result = qword_1002F1380;
  if (!qword_1002F1380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1380);
  }
  return result;
}

unint64_t sub_100055EEC()
{
  unint64_t result = qword_1002F1388;
  if (!qword_1002F1388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1388);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ClearButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ClearButton()
{
  return swift_release();
}

void *assignWithCopy for ClearButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ClearButton(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClearButton(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClearButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClearButton()
{
  return &type metadata for ClearButton;
}

uint64_t destroy for DictationButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for DictationButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DictationButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DictationButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DictationButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DictationButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DictationButton()
{
  return &type metadata for DictationButton;
}

uint64_t sub_10005629C()
{
  return sub_100014894(&qword_1002F1390, &qword_1002F11A0);
}

uint64_t sub_1000562D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000562F4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100056318()
{
  unint64_t result = qword_1002F13A8;
  if (!qword_1002F13A8)
  {
    sub_100007928(&qword_1002F1398);
    sub_100014894(&qword_1002EFEC8, &qword_1002EFEB0);
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F13A8);
  }
  return result;
}

uint64_t sub_1000563E4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100056424()
{
  if ((*(unsigned char *)(v0 + 17) & 1) == 0) {
    return (*(uint64_t (**)(void))(v0 + 40))();
  }
  return result;
}

uint64_t sub_100056454(uint64_t a1)
{
  return a1;
}

unint64_t sub_100056484()
{
  unint64_t result = qword_1002F13C8;
  if (!qword_1002F13C8)
  {
    sub_100007928(&qword_1002F13B0);
    sub_100056524();
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F13C8);
  }
  return result;
}

unint64_t sub_100056524()
{
  unint64_t result = qword_1002F13D0;
  if (!qword_1002F13D0)
  {
    sub_100007928(&qword_1002F13A0);
    sub_100056318();
    sub_1000565D0((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F13D0);
  }
  return result;
}

uint64_t sub_1000565D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10005661C()
{
  unint64_t result = qword_1002F13D8;
  if (!qword_1002F13D8)
  {
    sub_100007928(&qword_1002F13C0);
    sub_1000566BC();
    sub_100014894(&qword_1002EF0E8, &qword_1002EF0F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F13D8);
  }
  return result;
}

unint64_t sub_1000566BC()
{
  unint64_t result = qword_1002F13E0;
  if (!qword_1002F13E0)
  {
    sub_100007928(&qword_1002F13B8);
    sub_1000263BC();
    sub_100014894(&qword_1002EF3A0, &qword_1002EF3A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F13E0);
  }
  return result;
}

uint64_t sub_100056764()
{
  return sub_100054794();
}

uint64_t sub_100056780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000B070(a1, &qword_1002F33C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10005692C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005697C(a1, a2, a3, (uint64_t)&unk_1002CB5D0, &qword_1002F20A8);
}

uint64_t sub_100056954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10005697C(a1, a2, a3, (uint64_t)&unk_1002CB8D0, &qword_1002F2248);
}

uint64_t sub_10005697C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10000B070(a1, &qword_1002F33C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_100007620(a5);
  return swift_task_create();
}

double sub_100056B2C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100056BAC()
{
  return static Published.subscript.setter();
}

uint64_t sub_100056C30()
{
  return sub_100056CA8();
}

uint64_t sub_100056C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100056D48(a1, a2, a3, a4, (uint64_t)&unk_10024B630, (uint64_t)&unk_10024B658, (void (*)(uint64_t))sub_100057138);
}

uint64_t sub_100056C6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_100056C80()
{
  return sub_1000694BC();
}

uint64_t sub_100056C94()
{
  return sub_100056CA8();
}

uint64_t sub_100056CA8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100056D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100056D48(a1, a2, a3, a4, (uint64_t)&unk_10024B360, (uint64_t)&unk_10024B388, (void (*)(uint64_t))sub_100057468);
}

uint64_t sub_100056D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t))
{
  uint64_t v19 = a7;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v15((char *)&v18 - v13, a1, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  v15(v12, (uint64_t)v14, v8);
  swift_retain();
  uint64_t v16 = static Published.subscript.setter();
  v19(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_100056ED0(unsigned __int8 *a1, char *a2)
{
  return sub_10023684C(*a1, *a2);
}

Swift::Int sub_100056EDC()
{
  return sub_1000F781C();
}

uint64_t sub_100056EE4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100056FE8()
{
  return sub_1000F82D0();
}

unint64_t sub_100056FF0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10006DAA0(*a1);
  *a2 = result;
  return result;
}

void sub_100057020(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1954047348;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007478;
      uint64_t v3 = 0x6554746567726174;
      goto LABEL_3;
    case 2:
      uint64_t v4 = 0x656372756F73;
      goto LABEL_6;
    case 3:
      uint64_t v4 = 0x746567726174;
LABEL_6:
      *a1 = v4 & 0xFFFFFFFFFFFFLL | 0x6F4C000000000000;
      a1[1] = 0xEE004449656C6163;
      break;
    case 4:
      *a1 = 0x656D757274736E69;
      a1[1] = 0xEF6E6F697461746ELL;
      break;
    case 5:
      *a1 = 0x7375636F66;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

NSString sub_100057100()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10030E6F8 = (uint64_t)result;
  return result;
}

uint64_t sub_100057138()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = self;
  id v8 = [v7 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 stringForKey:v9];

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Locale.init(identifier:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10006A478(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
  char v11 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v4, v0);
  v12(v6, v0);
  if ((v11 & 1) == 0) {
    sub_10005B3DC();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v13 = [v7 standardUserDefaults];
  Locale.identifier.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  [v13 setObject:v14 forKey:v15];

  return ((uint64_t (*)(char *, uint64_t))v12)(v4, v0);
}

uint64_t sub_100057454()
{
  return sub_10005770C();
}

uint64_t sub_100057468()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  sub_1001A47C4();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10006A478(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
  char v7 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if ((v7 & 1) == 0) {
    sub_10005B3DC();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v9 = [self standardUserDefaults];
  Locale.identifier.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  [v9 setObject:v10 forKey:v11];

  Locale.identifier.getter();
  sub_1001A52A0();
  return ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
}

uint64_t sub_1000576F8()
{
  return sub_10005770C();
}

uint64_t sub_10005770C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10005777C()
{
  return sub_100057C6C();
}

uint64_t sub_100057790()
{
  return sub_100057B20();
}

uint64_t sub_1000577A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100057818()
{
  return sub_100057840();
}

uint64_t sub_10005782C()
{
  return sub_100057840();
}

uint64_t sub_100057840()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000578AC()
{
  return sub_1000578D4();
}

uint64_t sub_1000578C0()
{
  return sub_1000578D4();
}

uint64_t sub_1000578D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3) {
    int v0 = 256;
  }
  else {
    int v0 = 0;
  }
  return v0 | v2;
}

uint64_t sub_100057954()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6)
  {
    char v0 = 1;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v0 = v5 ^ 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v1 = 256;
  if ((v4 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v3) {
      int v1 = 0;
    }
    else {
      int v1 = 256;
    }
  }
  return v1 | v0 & 1u;
}

uint64_t sub_100057AD0()
{
  return sub_100057C6C();
}

uint64_t sub_100057AE4()
{
  return sub_100057C6C();
}

uint64_t sub_100057AF8()
{
  return sub_100057C6C();
}

uint64_t sub_100057B0C()
{
  return sub_100057B20();
}

uint64_t sub_100057B20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100057B8C()
{
  return sub_100057C6C();
}

uint64_t sub_100057BA0()
{
  return sub_100057C6C();
}

uint64_t sub_100057BB4()
{
  return sub_100057C6C();
}

uint64_t sub_100057BC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1 | (v2 << 16);
}

uint64_t sub_100057C44()
{
  return sub_100057C6C();
}

uint64_t sub_100057C58()
{
  return sub_100057C6C();
}

uint64_t sub_100057C6C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100057CD8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100057D4C()
{
  return sub_100057C6C();
}

uint64_t sub_100057D60()
{
  return sub_100057C6C();
}

uint64_t sub_100057D74()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100057DEC()
{
  return sub_100057C6C();
}

uint64_t sub_100057E00()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 != 3) {
    return 0xD000000000000019;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1) {
    return 0x4E494E455453494CLL;
  }
  else {
    return 0x545F4F545F504154;
  }
}

uint64_t sub_100057F20()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v0 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v0 = *(void *)v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v1 = v0 != 0;
  }
  else
  {
    BOOL v1 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = 0;
  if ((v3[0] & 1) == 0 && !v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v3[0] == 3) {
      return 0x545F4F545F504154;
    }
    else {
      return 0xD000000000000019;
    }
  }
  return result;
}

char *sub_1000580AC()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel____lazy_storage___streamingManager;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel____lazy_storage___streamingManager))
  {
    char v2 = *(char **)(v0
                  + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel____lazy_storage___streamingManager);
  }
  else
  {
    char v3 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_translator);
    type metadata accessor for TextStreamingTranslationManager(0);
    unint64_t v4 = (char *)swift_allocObject();
    id v5 = v3;
    swift_retain();
    char v2 = sub_1000B5CB8(v5, v0, v4);

    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100058154()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1000581C4()
{
  return sub_100057C6C();
}

uint64_t sub_1000581D8()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10005F92C();
    swift_release();
  }
  if (qword_1002EE6D8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  sub_100011554(v0, (uint64_t)qword_10030EC68);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_1000582B4(char a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v5 = a2 & 1;
    if (a2 == 2) {
      int v5 = 0;
    }
    if (a1 == 1) {
      int v6 = v5;
    }
    else {
      int v6 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v6 == v7)
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      return static Published.subscript.setter();
    }
  }
  return result;
}

uint64_t sub_1000583BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for CharacterSet();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (a2)
    {
      uint64_t v19 = a1;
      uint64_t v20 = a2;
      swift_bridgeObjectRetain();
      static CharacterSet.whitespacesAndNewlines.getter();
      sub_10000C350();
      StringProtocol.trimmingCharacters(in:)();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      uint64_t v11 = String.count.getter();
      swift_bridgeObjectRelease();
      if (a3) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v11 = 0;
      if (a3)
      {
LABEL_4:
        id v12 = [a3 string];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;

        uint64_t v19 = v13;
        uint64_t v20 = v15;
        static CharacterSet.whitespacesAndNewlines.getter();
        sub_10000C350();
        StringProtocol.trimmingCharacters(in:)();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_bridgeObjectRelease();
        uint64_t v16 = String.count.getter();
        swift_bridgeObjectRelease();
        if (v16 <= v11) {
          uint64_t v17 = v11;
        }
        else {
          uint64_t v17 = v16;
        }
        goto LABEL_9;
      }
    }
    uint64_t v17 = v11 & ~(v11 >> 63);
LABEL_9:
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v17 > 50 == v19)
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v19) = v17 > 50;
      return static Published.subscript.setter();
    }
  }
  return result;
}

uint64_t sub_100058670()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030EAE0);
    char v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Clearing compose card since the previous session timed out", v4, 2u);
      swift_slowDealloc();
    }

    sub_10005A31C(0, 0);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100058884(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (v1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v3 == 1)
      {
        sub_10005D934(1);
        sub_10005A31C(0, 1);
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10005894C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000589D8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100062C8C();
    return swift_release();
  }
  return result;
}

uint64_t sub_100058A30(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10005AD48(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100058A90()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  uint64_t v2 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__sourceLocale;
  uint64_t v3 = sub_100007620(&qword_1002F34A0);
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__targetLocale, v3);
  uint64_t v5 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isFlipped;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__sourceText;
  uint64_t v9 = sub_100007620(&qword_1002EF7C8);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v31(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__targetText;
  uint64_t v11 = sub_100007620(&qword_1002F2168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__textStreamingErrorTips;
  uint64_t v13 = sub_100007620(&qword_1002F2160);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  v14(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__tips, v13);
  uint64_t v15 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__forceDisableDictation;
  uint64_t v16 = sub_100007620(&qword_1002F2158);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
  v17(v15, v16);
  v17(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isASRSupported, v16);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__unableToTranslate, v6);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isFavorite, v6);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isDictionaryModeActive, v6);
  v31(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__pendingDictionaryModeSourceText, v9);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__canShowDictionary, v6);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__userInteractionEnabled, v6);
  uint64_t v18 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__stateError;
  uint64_t v19 = sub_100007620(&qword_1002F2150);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__transactionalError;
  uint64_t v21 = sub_100007620(&qword_1002F2148);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__showErrorAlert, v6);
  uint64_t v22 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__inputStyle;
  uint64_t v23 = sub_100007620(&qword_1002F2140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__state;
  uint64_t v25 = sub_100007620(&qword_1002F2138);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isListening, v6);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__useSmallerFont, v6);
  swift_release();
  uint64_t v26 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__partialSpeechResult;
  uint64_t v27 = sub_100007620(&qword_1002F2130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__redactTargetText, v6);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  uint64_t v28 = v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__genderDisambiguationTip;
  uint64_t v29 = sub_100007620(&qword_1002F2220);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  v7(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__canShowGenderTip, v6);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_100059124()
{
  sub_100058A90();

  return swift_deallocClassInstance();
}

uint64_t sub_10005917C()
{
  return type metadata accessor for ComposeTranslationViewModel(0);
}

uint64_t type metadata accessor for ComposeTranslationViewModel(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F1518);
}

void sub_1000591A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v62 = a2;
  uint64_t v63 = a4;
  uint64_t v7 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v7 - 8);
  long long v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F0FD0);
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  __chkstk_darwin(v9);
  uint64_t v64 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100007620(&qword_1002F0FD8);
  uint64_t v69 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  __chkstk_darwin(v11);
  uint64_t v68 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v13 - 8);
  uint64_t v61 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v72 = (char *)&v58 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v74 = (char *)&v58 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v58 - v23;
  uint64_t v73 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationUpdateSubscription;
  if (*(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationUpdateSubscription))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t v25 = *(void **)(v4 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
  uint64_t v71 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel;
  *(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel) = 0;

  uint64_t v60 = a1;
  sub_10000C3A4(a1, (uint64_t)aBlock, (uint64_t *)&unk_1002F33F0);
  if (!v76)
  {
    sub_10000B070((uint64_t)aBlock, (uint64_t *)&unk_1002F33F0);
    goto LABEL_15;
  }
  long long v59 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(aBlock, (uint64_t)v76);
  uint64_t v26 = dispatch thunk of TranslationResult.disambiguableResult.getter();
  sub_10000AB68((uint64_t)aBlock);
  if (!v26)
  {
LABEL_15:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v33 = objc_allocWithZone((Class)type metadata accessor for DisambiguationResultModel());
    uint64_t v34 = DisambiguationResultModel.init(withStaticSource:staticTarget:sourceLocale:targetLocale:globalAttributeProvider:)();
    goto LABEL_19;
  }
  unsigned int v27 = [*(id *)(v4+ OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager) restoreChangesToResult:v26];
  uint64_t v28 = (uint64_t)v61;
  if (v27)
  {
    if (qword_1002EE5E8 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100011554(v29, (uint64_t)qword_10030E9C0);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Restored changes to new result from previous user-selections", v32, 2u);
      swift_slowDealloc();
    }
  }
  sub_10000C3A4(v60, (uint64_t)aBlock, (uint64_t *)&unk_1002F33F0);
  uint64_t v58 = v26;
  if (!v76)
  {
    sub_10000B070((uint64_t)aBlock, (uint64_t *)&unk_1002F33F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v28, 1, 1, v15);
    goto LABEL_17;
  }
  sub_100029624(aBlock, (uint64_t)v76);
  dispatch thunk of TranslationResult.locale.getter();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v28, 0, 1, v15);
  sub_10000AB68((uint64_t)aBlock);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v28, 1, v15) == 1)
  {
LABEL_17:
    Locale.init(identifier:)();
    sub_10000B070(v28, (uint64_t *)&unk_1002F4110);
    goto LABEL_18;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v24, v28, v15);
LABEL_18:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v35(v72, v24, v15);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = v24;
  uint64_t v38 = v59;
  v35(v59, v37, v15);
  unint64_t v39 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v40 + v39, v38, v15);
  objc_allocWithZone((Class)type metadata accessor for DisambiguationResultModel());
  swift_retain();
  uint64_t v34 = DisambiguationResultModel.init(disambiguableResult:excludedTypes:sourceLocale:targetLocale:globalAttributeProvider:linkAttributeProvider:userSelectionHandler:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v37, v15);
  swift_release();
LABEL_19:
  uint64_t v41 = v71;
  uint64_t v42 = *(void **)(v5 + v71);
  *(void *)(v5 + v71) = v34;

  int v43 = *(void **)(v5 + v41);
  if (v43)
  {
    id v44 = v43;
    uint64_t v45 = v64;
    dispatch thunk of DisambiguationResultModel.$targetAttributedText.getter();

    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    aBlock[0] = (id)static OS_dispatch_queue.main.getter();
    uint64_t v46 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v47 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v65, 1, 1, v46);
    sub_100014894(&qword_1002F0FE0, &qword_1002F0FD0);
    sub_100022364();
    uint64_t v48 = v67;
    uint64_t v49 = v68;
    Publisher.receive<A>(on:options:)();
    sub_10000B070(v47, &qword_1002FAEF0);

    (*(void (**)(char *, uint64_t))(v66 + 8))(v45, v48);
    swift_allocObject();
    swift_weakInit();
    sub_100014894(&qword_1002F0FE8, &qword_1002F0FD8);
    uint64_t v50 = v70;
    uint64_t v51 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v49, v50);
  }
  else
  {
    uint64_t v51 = 0;
  }
  *(void *)(v5 + v73) = v51;
  swift_release();
  sub_10005F92C();
  uint64_t v52 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_debounceTimer;
  [*(id *)(v5 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_debounceTimer) invalidate];
  uint64_t v53 = self;
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  int v77 = sub_10006EB40;
  uint64_t v78 = v54;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  void aBlock[2] = sub_100158A24;
  char v76 = &unk_1002CB728;
  uint64_t v55 = _Block_copy(aBlock);
  swift_release();
  id v56 = [v53 scheduledTimerWithTimeInterval:0 repeats:v55 block:1.0];
  _Block_release(v55);
  uint64_t v57 = *(void **)(v5 + v52);
  *(void *)(v5 + v52) = v56;
}

unint64_t sub_100059CA4()
{
  uint64_t v0 = type metadata accessor for DisambiguationResultModel.TextLocation();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for DisambiguationResultModel.TextLocation.source(_:), v0);
  char v4 = static DisambiguationResultModel.TextLocation.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v5 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  if (v4) {
    uint64_t v6 = static UIColor.sourceLinkColor.getter();
  }
  else {
    uint64_t v6 = static UIColor.targetLinkColor.getter();
  }
  uint64_t v7 = v6;
  sub_100007620(&qword_1002FC3D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1002488D0;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v7;
  uint64_t v9 = NSForegroundColorAttributeName;
  return sub_1001FF520(inited);
}

uint64_t sub_100059E10(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v5 = type metadata accessor for CoreAnalyticsLogger.InteractionLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CoreAnalyticsLogger.CardType();
  uint64_t v36 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v31 = v9;
    uint64_t v33 = v6;
    uint64_t v34 = v5;
    id v18 = [a2 edge];
    id v19 = [v18 type];

    uint64_t v20 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager;
    uint64_t v21 = *(void **)(v17 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager);
    id v32 = v19;
    LOBYTE(v18) = [v21 hasAnyChangeOfType:v19];
    [*(id *)(v17 + v20) addUserSelection:a2];
    if (v18)
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      id v22 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v24 = Locale._bridgeToObjectiveC()().super.isa;
      id v25 = [v22 initWithSourceLocale:isa targetLocale:v24];

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      type metadata accessor for CoreAnalyticsLogger();
      static CoreAnalyticsLogger.shared.getter();
      uint64_t v26 = v36;
      uint64_t v27 = v31;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))(v11, enum case for CoreAnalyticsLogger.CardType.compose(_:), v31);
      uint64_t v29 = v33;
      uint64_t v28 = v34;
      (*(void (**)(char *, void, uint64_t))(v33 + 104))(v8, enum case for CoreAnalyticsLogger.InteractionLocation.translationTab(_:), v34);
      dispatch thunk of CoreAnalyticsLogger.didInteractWithDisambiguation(fromCard:location:type:localePair:)();
      swift_release();

      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    }
  }
  return result;
}

uint64_t sub_10005A1E0(void **a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v7
      && (sub_10000B0CC(0, &qword_1002F0F90),
          id v3 = v1,
          id v4 = v7,
          char v5 = static NSObject.== infix(_:_:)(),
          v3,
          v4,
          v4,
          (v5 & 1) != 0))
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      id v6 = v1;
      return static Published.subscript.setter();
    }
  }
  return result;
}

void sub_10005A31C(void *a1, char a2)
{
  uint64_t v3 = v2;
  if (a1)
  {
    uint64_t v6 = qword_1002EE648;
    id v7 = a1;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030EAE0);
    id v9 = v7;
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      char v20 = a2;
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412290;
      *(void *)&v21[0] = v9;
      id v14 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v13 = a1;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Resetting translation compose card due to error: %@", v12, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      a2 = v20;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100011554(v15, (uint64_t)qword_10030EAE0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Resetting translation compose card", v18, 2u);
      swift_slowDealloc();
    }

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    if (*((void *)&v21[0] + 1))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      v21[0] = 0uLL;
      swift_retain();
      static Published.subscript.setter();
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) == 1) {
    sub_10005DDAC(a2 & 1);
  }
  sub_1000580AC();
  sub_1001D7F84(a1 != 0);
  swift_release();
  [*(id *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager) reset];
  [*(id *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_debounceTimer) invalidate];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) != 2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 2;
    swift_retain();
    static Published.subscript.setter();
  }
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  sub_1000591A4((uint64_t)v21, 0, 0, 0);
  sub_10000B070((uint64_t)v21, (uint64_t *)&unk_1002F33F0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v21[0] & 1) != 0 || BYTE1(v21[0]))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  sub_10005ABC4();
  sub_10005B764();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (BYTE2(v21[0]) << 16 != 0x80000)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    BYTE2(v21[0]) = 8;
    LOWORD(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (LOBYTE(v21[0]) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v21[0]) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  if (a1)
  {
    id v19 = a1;
    sub_100063024(v19);
  }
}

uint64_t sub_10005ABC4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v0 = sub_1000E5BC4((uint64_t)v3, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  if ((v0 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v3 = _swiftEmptyArrayStorage;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v1 = sub_1000E5BC4((uint64_t)v3, (uint64_t)_swiftEmptyArrayStorage);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

void sub_10005AD48(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  if (a1)
  {
    id v6 = a1;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    uint64_t v8 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
    v8(v5, v2);
    unsigned __int8 v9 = [v6 locale:isa supportsModality:1];

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Class v10 = Locale._bridgeToObjectiveC()().super.isa;
    v8(v5, v2);
    unsigned __int8 v11 = [v6 locale:v10 supportsModality:1];

    swift_getKeyPath();
    swift_getKeyPath();
    v12[12] = v9;
    v12[13] = v11;
    swift_retain();
    static Published.subscript.setter();
  }
  else
  {
    __int16 v13 = 257;
    swift_retain();
    static Published.subscript.setter();
  }
}

uint64_t sub_10005AFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  unsigned __int8 v11 = (char *)&v23 - v10;
  __chkstk_darwin(v9);
  __int16 v13 = (char *)&v23 - v12;
  if (a2
    && (a1 == 0x72657070696C46 && a2 == 0xE700000000000000
     || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    NSString v14 = String._bridgeToObjectiveC()();
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_10006EA64;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001BB31C;
    id aBlock[3] = &unk_1002CB700;
    uint64_t v16 = _Block_copy(aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v16);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  os_log_type_t v17 = (void (*)(void *, void))static Published.subscript.modify();
  *id v18 = !*v18;
  v17(aBlock, 0);
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  id v19 = v13;
  Class v24 = v13;
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  char v20 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v20(v8, v11, v4);
  swift_retain();
  static Published.subscript.setter();
  sub_100057138();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v11, v4);
  v20(v11, v19, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  v20(v8, v11, v4);
  swift_retain();
  static Published.subscript.setter();
  sub_100057468();
  v21(v11, v4);
  sub_10005ABC4();
  return ((uint64_t (*)(char *, uint64_t))v21)(v24, v4);
}

void sub_10005B3DC()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v7 = v16;
  if (v16 != 2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v16 == 1)
    {
      if (v7)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v16 == 1) {
          sub_10005D934(0);
        }
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        if (v17) {
          uint64_t v8 = v16;
        }
        else {
          uint64_t v8 = 0;
        }
        if (v17) {
          unint64_t v9 = v17;
        }
        else {
          unint64_t v9 = 0xE000000000000000;
        }
        sub_10005C080(v8, v9);
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v10 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v12 = Locale._bridgeToObjectiveC()().super.isa;
  id v13 = [v10 initWithSourceLocale:isa targetLocale:v12];

  NSString v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v4, v0);
  v14(v6, v0);
  sub_1000C4930(v13);
  sub_10005B764();
  uint64_t v15 = (void *)LanguagesService.localeModalities.getter();
  sub_10005AD48(v15);
}

void sub_10005B764()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v18 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v7 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v9 = Locale._bridgeToObjectiveC()().super.isa;
  id v10 = [v7 initWithSourceLocale:isa targetLocale:v9];

  unsigned __int8 v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  char v12 = sub_1000C45C0(v10);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v13 = v19;
  if (v19)
  {
    uint64_t v14 = v18;
    swift_bridgeObjectRelease();
    uint64_t v15 = HIBYTE(v13) & 0xF;
    if ((v13 & 0x2000000000000000) == 0) {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v16 = v15 == 0;
    if ((v12 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_8:
    int v17 = !v16;
    goto LABEL_10;
  }
  if (v12)
  {
    BOOL v16 = 1;
    goto LABEL_8;
  }
LABEL_9:
  int v17 = 0;
LABEL_10:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v17 != v18)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v18) = v17;
    swift_retain();
    static Published.subscript.setter();
  }
}

void sub_10005BA74(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v33 = a1;
  unint64_t v34 = a2;
  uint64_t v35 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = __chkstk_darwin(v35);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  Class v9 = (char *)&v32 - v8;
  id v10 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v37 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v16 = v39;
  if (v39 == 3)
  {
    uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(&v12[v10[14]], 1, 1, v37);
    uint64_t v18 = v35;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v12, v9, v35);
    *(void *)&v12[v10[6]] = 1;
    *(void *)&v12[v10[7]] = 1;
    *(void *)&v12[v10[8]] = 0;
    v12[v10[9]] = 0;
    unint64_t v19 = &v12[v10[10]];
    *(void *)unint64_t v19 = 0;
    v19[8] = 1;
    v12[v10[11]] = 0;
    *(void *)&v12[v10[12]] = 0;
    char v20 = &v12[v10[13]];
    *(void *)char v20 = 0;
    v20[8] = 1;
    sub_1001A1344((uint64_t)v12);
    uint64_t v21 = *(void **)(v17 + 16);
    if (v21)
    {
      id v22 = [v21 invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_release();
      sub_10006E658((uint64_t)v12, type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
      sub_1000580AC();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      sub_1001DBD5C(v33, v34, (uint64_t)v9, (uint64_t)v7, (uint64_t)v15);
      swift_release();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
      v23(v7, v18);
      v23(v9, v18);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v37);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100011554(v24, (uint64_t)qword_10030EAE0);
    id v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      unint64_t v28 = 0xE90000000000006BLL;
      unint64_t v29 = 0x726F7774654E6F6ELL;
      if (v16 != 1)
      {
        unint64_t v29 = 0xD000000000000014;
        unint64_t v28 = 0x8000000100259F00;
      }
      if (v16) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 0xD000000000000013;
      }
      if (v16) {
        unint64_t v31 = v28;
      }
      else {
        unint64_t v31 = 0x8000000100259EE0;
      }
      uint64_t v38 = sub_100202FD4(v30, v31, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Skipping partial translation because an error state is active: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_10005C080(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = type metadata accessor for CharacterSet();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005ABC4();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v33 == 1) {
    sub_10005E8B8();
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v13 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFLL;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v13)
  {
    LOBYTE(v33) = 0;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v33) = 1;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v33) = 257;
    swift_retain();
    static Published.subscript.setter();
    *((void *)&v34 + 1) = &type metadata for TranslateFeatures;
    unint64_t v35 = sub_10000AB14();
    LOBYTE(v33) = 4;
    char v14 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v33);
    if (v14)
    {
      *(void *)&long long v33 = a1;
      *((void *)&v33 + 1) = a2;
      static CharacterSet.whitespacesAndNewlines.getter();
      sub_10000C350();
      uint64_t v15 = StringProtocol.trimmingCharacters(in:)();
      unint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_bridgeObjectRelease();
      uint64_t v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0) {
        uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
      }
      if (!v18) {
        goto LABEL_15;
      }
      sub_1000580AC();
      uint64_t v19 = sub_1001D7AF0();
      unint64_t v21 = v20;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v22 = HIBYTE(v21) & 0xF;
      if ((v21 & 0x2000000000000000) == 0) {
        uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (!v22)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v23 = v30;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        char v24 = static Locale.== infix(_:_:)();
        id v25 = *(void (**)(char *, uint64_t))(v31 + 8);
        os_log_type_t v26 = v23;
        uint64_t v27 = v32;
        v25(v26, v32);
        v25(v8, v27);
        if ((v24 & 1) == 0)
        {
LABEL_15:
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          if ((v33 & 1) == 0)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(v33) = 1;
            swift_retain();
            static Published.subscript.setter();
          }
          unint64_t v35 = 0;
          long long v33 = 0u;
          long long v34 = 0u;
          sub_1000591A4((uint64_t)&v33, a1, a2, a1);
          sub_10000B070((uint64_t)&v33, (uint64_t *)&unk_1002F33F0);
        }
      }
      sub_10005BA74(a1, a2);
    }
    else
    {
      unint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      sub_1000591A4((uint64_t)&v33, a1, a2, a1);
      sub_10000B070((uint64_t)&v33, (uint64_t *)&unk_1002F33F0);
    }
  }
  else
  {
    LOBYTE(v33) = 2;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v33) = 0;
    swift_retain();
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v33) = 0;
    swift_retain();
    static Published.subscript.setter();
    unint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    sub_1000591A4((uint64_t)&v33, 0, 0, 0);
    sub_10000B070((uint64_t)&v33, (uint64_t *)&unk_1002F33F0);
    *((void *)&v34 + 1) = &type metadata for TranslateFeatures;
    unint64_t v35 = sub_10000AB14();
    LOBYTE(v33) = 4;
    char v28 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v33);
    if (v28)
    {
      unint64_t v35 = 0;
      long long v33 = 0u;
      long long v34 = 0u;
      sub_1000591A4((uint64_t)&v33, a1, a2, a1);
      sub_10000B070((uint64_t)&v33, (uint64_t *)&unk_1002F33F0);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v33 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v33) = 0;
      swift_retain();
      static Published.subscript.setter();
    }
    sub_1000580AC();
    sub_1001D7F84(0);
    swift_release();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v33 = a1;
  *((void *)&v33 + 1) = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  static Published.subscript.setter();
  sub_10005B764();
}

void sub_10005C81C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10005ABC4();
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100011554(v8, (uint64_t)qword_10030EAE0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "in performFinalTextTranslation", v11, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v27)
  {
LABEL_15:
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Skipping final translation: no text to translate", v21, 2u);
      swift_slowDealloc();
    }

    if (a1) {
      goto LABEL_20;
    }
    return;
  }
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000C350();
  uint64_t v12 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v14 = v13;
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v15)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v26 != 2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v26) = 2;
    swift_retain();
    static Published.subscript.setter();
    sub_100061DDC(v12, v14, v22, 0);
    swift_bridgeObjectRelease();
    sub_100062854(1);
    if ((a1 & 1) == 0) {
      return;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Early returning and not translating because translation is in progress with the same text already", v18, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
LABEL_20:
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(void *)&v25[-16] = v23;
    v25[-8] = 0;
    uint64_t v26 = v23;
    sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
}

void sub_10005CE58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v58 = (char *)v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (char *)v53 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)v53 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v53 - v11;
  unint64_t v13 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v62 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v61 = (uint64_t)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v18 = v64;
  if (!v64) {
    goto LABEL_10;
  }
  uint64_t v19 = v63;
  swift_bridgeObjectRelease();
  uint64_t v20 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v20)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100011554(v21, (uint64_t)qword_10030EAE0);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "begingListening called when source text is present", v24, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
LABEL_10:
    uint64_t v59 = v16;
    uint64_t v60 = v12;
    uint64_t v54 = v10;
    uint64_t v55 = v3;
    uint64_t v56 = v2;
    uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    uint64_t v63 = v25;
    sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v27 = v64;
    swift_bridgeObjectRelease();
    uint64_t v28 = v62;
    if (v27)
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100011554(v29, (uint64_t)qword_10030EAE0);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Cancelling TTS when dictation starts", v32, 2u);
        swift_slowDealloc();
      }

      sub_100234200();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if ((v63 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v63) = 1;
      swift_retain();
      static Published.subscript.setter();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v33 = v56;
    uint64_t v34 = v59;
    uint64_t v35 = (uint64_t)v60;
    if (v63 != 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v63) = 1;
      swift_retain();
      static Published.subscript.setter();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v63) = 257;
    swift_retain();
    static Published.subscript.setter();
    uint64_t v36 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(&v15[v13[14]], 1, 1, v34);
    uint64_t v37 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v15, v35, v33);
    *(void *)&v15[v13[6]] = 2;
    *(void *)&v15[v13[7]] = 2;
    *(void *)&v15[v13[8]] = 0;
    v15[v13[9]] = 0;
    uint64_t v38 = &v15[v13[10]];
    *(void *)uint64_t v38 = 0;
    v38[8] = 1;
    v15[v13[11]] = 0;
    *(void *)&v15[v13[12]] = 0;
    uint64_t v39 = &v15[v13[13]];
    *(void *)uint64_t v39 = 0;
    v39[8] = 1;
    sub_1001A1344((uint64_t)v15);
    uint64_t v40 = *(void **)(v36 + 16);
    if (v40)
    {
      id v41 = [v40 invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_release();
      sub_10006E658((uint64_t)v15, type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
      v53[1] = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_speechManager);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v42 = (uint64_t)v54;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v43 = v64;
      v53[0] = v63;
      swift_getKeyPath();
      swift_getKeyPath();
      id v44 = v57;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v45 = v58;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      id v46 = objc_allocWithZone((Class)_LTLocalePair);
      Class isa = Locale._bridgeToObjectiveC()().super.isa;
      Class v48 = Locale._bridgeToObjectiveC()().super.isa;
      id v49 = [v46 initWithSourceLocale:isa targetLocale:v48];

      uint64_t v50 = *(void (**)(char *, uint64_t))(v37 + 8);
      v50(v45, v33);
      v50(v44, v33);
      LOBYTE(v48) = sub_1001A6530(v49);

      uint64_t v51 = v61;
      uint64_t v52 = (uint64_t)v60;
      sub_1001B689C((uint64_t)v60, v42, v53[0], v43, 0, v48 & 1, 1, 1, 0x101u, 0, 0, v61);
      swift_bridgeObjectRelease();
      v50((char *)v42, v33);
      v50((char *)v52, v33);
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v51, v59);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10005D934(char a1)
{
  uint64_t v2 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v13 & 1) != 0 || BYTE1(v13))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOWORD(v13) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v13 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v13) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_speechManager);
  if (a1)
  {
    sub_1001B7638();
  }
  else
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v6 = *(void *)(v5 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, void, uint64_t, uint64_t))(v6 + 16))(0, 0, ObjectType, v6);
      swift_unknownObjectRelease();
    }
    uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer);
    if (v8) {
      [*(id *)(v8 + 48) endAudio];
    }
    sub_10018A180();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v9 = *((void *)&v14 + 1);
  sub_10000B070((uint64_t)&v13, &qword_1002F15A0);
  if (v9)
  {
    long long v16 = 0u;
    long long v17 = 0u;
    long long v14 = 0u;
    long long v15 = 0u;
    long long v13 = 0u;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10000C3A4((uint64_t)&v13, (uint64_t)&v12, &qword_1002F15A0);
    swift_retain();
    static Published.subscript.setter();
    sub_10000B070((uint64_t)&v13, &qword_1002F15A0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v13 != 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v13) = 1;
    swift_retain();
    static Published.subscript.setter();
  }
  *((void *)&v14 + 1) = &type metadata for TranslateFeatures;
  *(void *)&long long v15 = sub_10000AB14();
  LOBYTE(v13) = 9;
  char v10 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v13);
  if (v10)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v13) {
      sub_10018C25C(1, 1);
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if v13 == 2 || (v13)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v13) = 0;
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_10005DDAC(char a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 == 1) {
    sub_10005D934(0);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v4)
  {
    if ((a1 & 1) == 0) {
      return sub_100234200();
    }
  }
  return result;
}

uint64_t sub_10005DE9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_10;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v0 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0) {
    unint64_t v0 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v0
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        uint64_t v1 = String.count.getter(),
        swift_bridgeObjectRelease(),
        v1))
  {
    long long v16 = &type metadata for TranslateFeatures;
    unint64_t v17 = sub_10000AB14();
    LOBYTE(v14) = 4;
    char v2 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v14);
    if (v2)
    {
      char v3 = sub_1000580AC();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (sub_1001DD5C8(v14, v15))
      {
        uint64_t v4 = (uint64_t)&v3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation];
        swift_beginAccess();
        sub_10000C3A4(v4, (uint64_t)&v14, (uint64_t *)&unk_1002F33F0);
        uint64_t v5 = v16;
        if (v16)
        {
          uint64_t v6 = sub_100029624(&v14, (uint64_t)v16);
          Description = (void (**)(unsigned char *))v5[-1].Description;
          __chkstk_darwin(v6);
          uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
          Description[2](v9);
          sub_10000B070((uint64_t)&v14, (uint64_t *)&unk_1002F33F0);
          char v10 = dispatch thunk of TranslationResult.isFinal.getter();
          ((void (*)(unsigned char *, ValueMetadata *))Description[1])(v9, v5);
          swift_release();
          swift_bridgeObjectRelease();
LABEL_15:
          char v11 = v10 ^ 1;
          return v11 & 1;
        }
        sub_10000B070((uint64_t)&v14, (uint64_t *)&unk_1002F33F0);
      }
      swift_release();
      swift_bridgeObjectRelease();
      char v10 = 0;
      goto LABEL_15;
    }
    char v11 = 0;
  }
  else
  {
LABEL_10:
    char v11 = 1;
  }
  return v11 & 1;
}

BOOL sub_10005E208()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v3) {
    return 1;
  }
  swift_bridgeObjectRelease();
  uint64_t v0 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0) {
    uint64_t v0 = *(void *)v2 & 0xFFFFFFFFFFFFLL;
  }
  return v0 == 0;
}

uint64_t sub_10005E2AC()
{
  uint64_t v0 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v38 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  char v10 = (char *)&v32 - v9;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v11 = (uint64_t)v40;
  if (!v41) {
    uint64_t v11 = 0;
  }
  uint64_t v39 = v11;
  uint64_t v12 = 0xE000000000000000;
  if (v41) {
    uint64_t v13 = v41;
  }
  else {
    uint64_t v13 = 0xE000000000000000;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v14 = v40;
  if (v40)
  {
    id v15 = [v40 string];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v17;
  }
  else
  {
    uint64_t v16 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v18 = static Locale.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  if (v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v16 = v39;
    uint64_t v12 = v13;
  }
  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100011554(v27, (uint64_t)qword_10030EAE0);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Request to broadcast a translation when the text to display is empty", v30, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    uint64_t v20 = v35;
    UUID.init()();
    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v33 = v22;
    uint64_t v34 = v21;
    uint64_t v23 = v36;
    uint64_t v24 = v37;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v37);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    LOBYTE(v2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = (_BYTE)v40;
    uint64_t v25 = (uint64_t)v38;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v38, 1, 1, v24);
    type metadata accessor for TestableTranslation();
    swift_allocObject();
    uint64_t v26 = sub_1000CDF74(v34, v33, (uint64_t)v10, (uint64_t)v8, (char)v20, v39, v13, v16, 1.0, v12, 0, 0, 0, v25);
    sub_10006A478(&qword_1002F2208, (void (*)(uint64_t))type metadata accessor for TestableTranslation);
  }
  return v26;
}

void sub_10005E8B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  os_log_t v39 = *(os_log_t *)(v12 - 8);
  __chkstk_darwin(v12);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10005DE9C())
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100011554(v15, (uint64_t)qword_10030EAE0);
    os_log_t v39 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v16, "Ignoring request to toggleFavorite with actions disabled", v17, 2u);
      swift_slowDealloc();
    }
    os_log_t v18 = v39;
  }
  else
  {
    uint64_t v37 = v3;
    uint64_t v38 = v2;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v19 = (void (*)(uint64_t *, void))static Published.subscript.modify();
    *uint64_t v20 = !*v20;
    v19(&v40, 0);
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v21 = v41;
    if (v41)
    {
      uint64_t v36 = v40;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v40 == 1)
      {
        unint64_t v35 = v21;
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        sub_100011554(v22, (uint64_t)qword_10030EAE0);
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Creating a new final translation request for the favorited translation", v25, 2u);
          swift_slowDealloc();
        }

        uint64_t v26 = *(void *)(v1
                        + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39[7].isa)(&v11[v9[14]], 1, 1, v12);
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v11, v8, v38);
        *(void *)&v11[v9[6]] = 1;
        *(void *)&v11[v9[7]] = 1;
        *(void *)&v11[v9[8]] = 0;
        v11[v9[9]] = 0;
        uint64_t v27 = &v11[v9[10]];
        *(void *)uint64_t v27 = 0;
        v27[8] = 1;
        v11[v9[11]] = 0;
        *(void *)&v11[v9[12]] = 0;
        uint64_t v28 = &v11[v9[13]];
        *(void *)uint64_t v28 = 0;
        v28[8] = 1;
        sub_1001A1344((uint64_t)v11);
        os_log_type_t v29 = *(void **)(v26 + 16);
        if (v29)
        {
          id v30 = [v29 invocationId];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          swift_release();
          sub_10006E658((uint64_t)v11, type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
          sub_1000580AC();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          sub_1001DCB0C(v36, v35, (uint64_t)v8, (uint64_t)v6, v40, (uint64_t)v14);
          swift_release();
          swift_bridgeObjectRelease();
          os_log_type_t v31 = *(void (**)(char *, uint64_t))(v37 + 8);
          uint64_t v32 = v6;
          uint64_t v33 = v38;
          v31(v32, v38);
          v31(v8, v33);
          ((void (*)(char *, uint64_t))v39[1].isa)(v14, v12);
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_10005F00C()
{
  if (sub_10005DE9C())
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_100011554(v0, (uint64_t)qword_10030EAE0);
    oslog = Logger.logObject.getter();
    os_log_type_t v1 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v1))
    {
      uint64_t v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Ignoring request to show dictionary with actions disabled", v2, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
    sub_10005C81C(1);
  }
}

void sub_10005F1B4()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10005DE9C())
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030EAE0);
    os_log_t v21 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v21, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v5, "Ignoring request to copy translation with actions disabled", v6, 2u);
      swift_slowDealloc();
    }
    os_log_t v7 = v21;
  }
  else
  {
    NSString v8 = String._bridgeToObjectiveC()();
    uint64_t v9 = (void *)swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_10006E8E8;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    void aBlock[2] = sub_1001BB31C;
    id aBlock[3] = &unk_1002CB6D8;
    uint64_t v10 = _Block_copy(aBlock);
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v10);

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    id v11 = aBlock[0];
    if (aBlock[0])
    {
      id v12 = [aBlock[0] string];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (String.count.getter() >= 1)
      {
        id v13 = [self generalPasteboard];
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        static UTType.plainText.getter();
        UTType.identifier.getter();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
        NSString v15 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v13 setValue:v14 forPasteboardType:v15];

        return;
      }
      swift_bridgeObjectRelease();
    }
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EAE0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to get valid target text to copy to pasteboard", v19, 2u);
      swift_slowDealloc();
    }
  }
}

unint64_t sub_10005F614()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v13[-v5];
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  sub_100007620(&qword_1002F2200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100248B60;
  *(void *)(inited + 32) = 0x6D614E746E657665;
  *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0xE900000000000065;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEC78);
  *(void *)(inited + 48) = NSString.init(stringLiteral:)();
  *(void *)(inited + 56) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 64) = 0xE800000000000000;
  *(void *)(inited + 72) = NSString.init(stringLiteral:)();
  strcpy((char *)(inited + 80), "sourceLocale");
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  NSString v8 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 96) = v9;
  strcpy((char *)(inited + 104), "targetLocale");
  *(unsigned char *)(inited + 117) = 0;
  *(_WORD *)(inited + 118) = -5120;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Locale.ltIdentifier.getter();
  v8(v4, v0);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v10;
  unint64_t v11 = sub_1001FF7B4(inited);
  swift_release();
  return v11;
}

void sub_10005F92C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v12 == 1)
  {
    uint64_t v1 = sub_10020255C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v3 = v1[2];
    unint64_t v2 = v1[3];
    int64_t v4 = v2 >> 1;
    unint64_t v5 = v3 + 1;
    if (v2 >> 1 <= v3)
    {
      uint64_t v1 = sub_10020255C((void *)(v2 > 1), v3 + 1, 1, v1);
      unint64_t v2 = v1[3];
      int64_t v4 = v2 >> 1;
    }
    v1[2] = v5;
    v1[v3 + 4] = 1;
    int64_t v6 = v3 + 2;
    if (v4 < v6) {
      uint64_t v1 = sub_10020255C((void *)(v2 > 1), v6, 1, v1);
    }
    uint64_t v7 = 0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v11) {
      goto LABEL_11;
    }
    uint64_t v7 = 1;
    uint64_t v1 = sub_10020255C(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v5 = v1[2];
    unint64_t v8 = v1[3];
    int64_t v6 = v5 + 1;
    if (v5 >= v8 >> 1)
    {
      uint64_t v7 = 1;
      uint64_t v1 = sub_10020255C((void *)(v8 > 1), v5 + 1, 1, v1);
    }
  }
  v1[2] = v6;
  v1[v5 + 4] = v7;
LABEL_11:
  NSString v9 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
  if (v9)
  {
    id v10 = v9;
    dispatch thunk of DisambiguationResultModel.excludedTypes.setter();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10005FB44()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  int64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_100056780((uint64_t)v2, (uint64_t)&unk_1002F2218, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_10005FCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for CoreAnalyticsLogger.CardType();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10005FDB4, v7, v6);
}

uint64_t sub_10005FDB4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v4 = v0[7];
    uint64_t v3 = v0[8];
    uint64_t v5 = v0[6];
    sub_100062C8C();
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for CoreAnalyticsLogger.CardType.compose(_:), v5);
    uint64_t v6 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = (void *)DisambiguationResultModel.disambiguableResult.getter();
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v0[7];
    uint64_t v9 = v0[8];
    uint64_t v11 = v0[6];
    sub_10005FEF8(v9, v8);
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  swift_task_dealloc();
  char v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

void sub_10005FEF8(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for CoreAnalyticsLogger.CardType();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v23 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v23 - v13;
  if (a2)
  {
    id v29 = a2;
    if ([v29 hasDisambiguations])
    {
      uint64_t v26 = v2;
      unsigned int v28 = [v29 hasDisambiguationsOfType:1];
      unsigned int v27 = [v29 hasDisambiguationsOfType:0];
      uint64_t v25 = sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
      NSString v15 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
      NSUserDefaults.genderDisambiguationEnabled.getter();

      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v24 = a1;
      v16(v14, a1, v5);
      uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v14, v5);
      uint64_t v18 = v17;
      if (v17 == enum case for CoreAnalyticsLogger.CardType.compose(_:))
      {
        uint64_t v19 = *(void *)(v26
                        + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
        if (*(unsigned char *)(v19
                      + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) != 1)
        {
          *(unsigned char *)(v19 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 1;
          swift_retain();
          uint64_t v20 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
          NSUserDefaults.genderDisambiguationEnabled.getter();

          type metadata accessor for CoreAnalyticsLogger();
          static CoreAnalyticsLogger.shared.getter();
          (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v12, v18, v5);
          dispatch thunk of CoreAnalyticsLogger.didOfferDisambiguation(fromCard:hasGender:hasMeaning:genderDisambiguationSettingEnabled:)();
          swift_release();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
          swift_release();
        }
      }
      else if (v17 == enum case for CoreAnalyticsLogger.CardType.committed(_:))
      {
        type metadata accessor for CoreAnalyticsLogger();
        static CoreAnalyticsLogger.shared.getter();
        (*(void (**)(char *, uint64_t, uint64_t))(v6 + 104))(v12, v18, v5);
        dispatch thunk of CoreAnalyticsLogger.didOfferDisambiguation(fromCard:hasGender:hasMeaning:genderDisambiguationSettingEnabled:)();
        swift_release();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      }
      else
      {
        v16(v9, v24, v5);
        uint64_t v30 = 0;
        unint64_t v31 = 0xE000000000000000;
        _StringGuts.grow(_:)(19);
        v22._id object = (void *)0x800000010025C2C0;
        v22._id countAndFlagsBits = 0xD000000000000011;
        String.append(_:)(v22);
        _print_unlocked<A, B>(_:_:)();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
    else
    {
      id v21 = v29;
    }
  }
}

void sub_10006031C(void *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F8BA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DispatchQoS();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for DispatchTime();
  uint64_t v105 = *(void *)(v106 - 8);
  uint64_t v7 = __chkstk_darwin(v106);
  uint64_t v103 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v104 = (char *)&v97 - v9;
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StoredTranslationResult();
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = (void (*)(char *, uint64_t))v13;
  __chkstk_darwin(v13);
  uint64_t v116 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SpeechResultOrigin();
  uint64_t v113 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for StoredSpeechResult();
  uint64_t v114 = *(void *)(v18 - 8);
  uint64_t v115 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Locale();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v97 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  unsigned int v27 = (char *)&v97 - v26;
  id v120 = a1;
  id v28 = [a1 userInfo];
  if (!v28)
  {
    long long v128 = 0u;
    long long v129 = 0u;
LABEL_16:
    sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
    goto LABEL_17;
  }
  id v29 = v28;
  uint64_t v102 = v4;
  uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  char v127 = 0;
  unint64_t v31 = sub_10006E758();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v30 + 16) && (unint64_t v32 = sub_10020384C((uint64_t)&aBlock), (v33 & 1) != 0))
  {
    sub_10000B170(*(void *)(v30 + 56) + 32 * v32, (uint64_t)&v128);
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)&aBlock);
  if (!*((void *)&v129 + 1)) {
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100011554(v40, (uint64_t)qword_10030EAE0);
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Request to open a system translation with nil or empty source text", v43, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v34 = HIBYTE(v122) & 0xF;
  if ((v122 & 0x2000000000000000) == 0) {
    uint64_t v34 = (unint64_t)aBlock & 0xFFFFFFFFFFFFLL;
  }
  if (!v34)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v99 = aBlock;
  unint64_t v100 = v122;
  unint64_t v101 = v31;
  sub_10005A31C(0, 0);
  id v35 = [v120 userInfo];
  if (!v35)
  {
    long long v128 = 0u;
    long long v129 = 0u;
LABEL_29:
    sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
    goto LABEL_30;
  }
  uint64_t v36 = v35;
  uint64_t v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  char v127 = 2;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v37 + 16) && (unint64_t v38 = sub_10020384C((uint64_t)&aBlock), (v39 & 1) != 0))
  {
    sub_10000B170(*(void *)(v37 + 56) + 32 * v38, (uint64_t)&v128);
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)&aBlock);
  if (!*((void *)&v129 + 1)) {
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    Locale.init(identifier:)();
    uint64_t KeyPath = swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
    swift_retain();
    static Published.subscript.setter();
    sub_100057138();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
  }
LABEL_30:
  id v44 = [v120 userInfo];
  if (!v44)
  {
    long long v128 = 0u;
    long long v129 = 0u;
LABEL_39:
    sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
    goto LABEL_40;
  }
  uint64_t v45 = v44;
  uint64_t v46 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  char v127 = 3;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v46 + 16) && (unint64_t v47 = sub_10020384C((uint64_t)&aBlock), (v48 & 1) != 0))
  {
    sub_10000B170(*(void *)(v46 + 56) + 32 * v47, (uint64_t)&v128);
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)&aBlock);
  if (!*((void *)&v129 + 1)) {
    goto LABEL_39;
  }
  if (swift_dynamicCast())
  {
    Locale.init(identifier:)();
    uint64_t KeyPath = swift_getKeyPath();
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
    swift_retain();
    static Published.subscript.setter();
    sub_100057468();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
  }
LABEL_40:
  id v49 = [v120 userInfo];
  if (!v49)
  {
    long long v128 = 0u;
    long long v129 = 0u;
LABEL_50:
    sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
    goto LABEL_51;
  }
  uint64_t v50 = v49;
  uint64_t v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  char v127 = 1;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v51 + 16) && (unint64_t v52 = sub_10020384C((uint64_t)&aBlock), (v53 & 1) != 0))
  {
    sub_10000B170(*(void *)(v51 + 56) + 32 * v52, (uint64_t)&v128);
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)&aBlock);
  if (!*((void *)&v129 + 1)) {
    goto LABEL_50;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_51:
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(aBlock) = 1;
    swift_retain();
    static Published.subscript.setter();
    sub_10005C080((uint64_t)v99, v100);
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v54 = v119;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v113 + 104))(v17, enum case for SpeechResultOrigin.text(_:), v15);
  StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v55 = (uint64_t)v116;
  StoredTranslationResult.init(text:locale:isOffline:romanization:)();
  *(unsigned char *)(v54 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_newTranslationFromPunchOut) = 1;
  uint64_t v56 = *(void **)(*(void *)(v54
                             + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation)
                 + 16);
  if (v56)
  {
    swift_retain();
    id v57 = [v56 invocationId];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v58 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v12, 0, 1, v58);
    swift_release();
  }
  else
  {
    uint64_t v88 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v12, 1, 1, v88);
  }
  uint64_t v89 = v119;
  swift_retain();
  sub_1001A1C14();
  swift_release();
  uint64_t v90 = *(char **)(v89 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
  uint64_t v91 = sub_100069BBC((uint64_t)v20, v55, 0, (uint64_t)v12, v90);
  if (v91)
  {
    uint64_t v92 = (void *)v91;
    sub_100029624(&v90[OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store], *(void *)&v90[OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store + 24]);
    dispatch thunk of TranslationStore.save()();

    sub_10000B070((uint64_t)v12, (uint64_t *)&unk_1002F33E0);
    (*(void (**)(uint64_t, void))(v117 + 8))(v55, v118);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v20, v115);
LABEL_52:
    id v59 = [v120 userInfo];
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      char v127 = 5;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v61 + 16) && (unint64_t v62 = sub_10020384C((uint64_t)&aBlock), (v63 & 1) != 0))
      {
        sub_10000B170(*(void *)(v61 + 56) + 32 * v62, (uint64_t)&v128);
      }
      else
      {
        long long v128 = 0u;
        long long v129 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10006E7AC((uint64_t)&aBlock);
      if (*((void *)&v129 + 1))
      {
        if ((swift_dynamicCast() & 1) != 0 && aBlock == 1)
        {
          uint64_t v64 = v119;
          long long v65 = *(void ***)(v119 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics);
          uint64_t v66 = swift_getKeyPath();
          __chkstk_darwin(v66);
          *(&v97 - 2) = (uint64_t)v65;
          *((unsigned char *)&v97 - 8) = 0;
          unint64_t aBlock = v65;
          sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
          swift_retain();
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
          swift_release();
          swift_release();
          sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
          uint64_t v67 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v68 = v103;
          static DispatchTime.now()();
          uint64_t v69 = v104;
          + infix(_:_:)();
          uint64_t v118 = *(void (**)(char *, uint64_t))(v105 + 8);
          uint64_t v70 = v106;
          v118(v68, v106);
          unsigned __int8 v125 = sub_10006E8C0;
          uint64_t v126 = v64;
          unint64_t aBlock = _NSConcreteStackBlock;
          unint64_t v122 = 1107296256;
          uint64_t v123 = sub_10008BA1C;
          char v124 = &unk_1002CB6B0;
          uint64_t v71 = _Block_copy(&aBlock);
          swift_retain();
          uint64_t v72 = v107;
          static DispatchQoS.unspecified.getter();
          *(void *)&long long v128 = _swiftEmptyArrayStorage;
          sub_10006A478((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100007620(&qword_1002EEE40);
          sub_100014894((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
          uint64_t v73 = v109;
          uint64_t v74 = v112;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v71);

          (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v74);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v72, v110);
          v118(v69, v70);
          swift_release();
        }
LABEL_63:
        id v75 = [v120 userInfo];
        if (v75)
        {
          char v76 = v75;
          uint64_t v77 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          char v127 = 4;
          AnyHashable.init<A>(_:)();
          if (*(void *)(v77 + 16) && (unint64_t v78 = sub_10020384C((uint64_t)&aBlock), (v79 & 1) != 0))
          {
            sub_10000B170(*(void *)(v77 + 56) + 32 * v78, (uint64_t)&v128);
          }
          else
          {
            long long v128 = 0u;
            long long v129 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_10006E7AC((uint64_t)&aBlock);
          if (*((void *)&v129 + 1))
          {
            type metadata accessor for TypedInputInstrumentation();
            if (swift_dynamicCast())
            {
              char v80 = aBlock;
              uint64_t v81 = (uint64_t)v102;
              Date.init()();
              uint64_t v82 = type metadata accessor for Date();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 0, 1, v82);
              uint64_t v83 = (uint64_t)v80 + OBJC_IVAR____TtC17SequoiaTranslator25TypedInputInstrumentation_start;
              swift_beginAccess();
              sub_10006E800(v81, v83);
              swift_endAccess();
              NSString v84 = String._bridgeToObjectiveC()();
              uint64_t v85 = swift_allocObject();
              *(void *)(v85 + 16) = v80;
              unsigned __int8 v125 = sub_10006E8A0;
              uint64_t v126 = v85;
              unint64_t aBlock = _NSConcreteStackBlock;
              unint64_t v122 = 1107296256;
              uint64_t v123 = sub_1001BB31C;
              char v124 = &unk_1002CB688;
              unsigned __int8 v86 = _Block_copy(&aBlock);
              id v87 = v80;
              swift_release();
              AnalyticsSendEventLazy();
              _Block_release(v86);
            }
            return;
          }
        }
        else
        {
          long long v128 = 0u;
          long long v129 = 0u;
        }
        sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
        return;
      }
    }
    else
    {
      long long v128 = 0u;
      long long v129 = 0u;
    }
    sub_10000B070((uint64_t)&v128, (uint64_t *)&unk_1002F02C0);
    goto LABEL_63;
  }
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v93 = type metadata accessor for Logger();
  sub_100011554(v93, (uint64_t)qword_10030EAE0);
  uint64_t v94 = Logger.logObject.getter();
  os_log_type_t v95 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v94, v95))
  {
    uint64_t v96 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v96 = 0;
    _os_log_impl((void *)&_mh_execute_header, v94, v95, "Failed to insert translation from punchout", v96, 2u);
    swift_slowDealloc();
  }

  sub_10000B070((uint64_t)v12, (uint64_t *)&unk_1002F33E0);
  (*(void (**)(uint64_t, void))(v117 + 8))(v55, v118);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v20, v115);
}

uint64_t sub_100061848()
{
  return swift_release();
}

void sub_100061990()
{
  sub_100063C08();
  if (v0 <= 0x3F)
  {
    sub_1000219BC(319, (unint64_t *)&qword_1002F9EF0);
    if (v1 <= 0x3F)
    {
      sub_100022CC4(319, (unint64_t *)&qword_1002F32F0, &qword_1002F1378);
      if (v2 <= 0x3F)
      {
        sub_100022CC4(319, &qword_1002F1530, &qword_1002F1538);
        if (v3 <= 0x3F)
        {
          sub_100022CC4(319, &qword_1002F1540, &qword_1002F1548);
          if (v4 <= 0x3F)
          {
            sub_100022CC4(319, &qword_1002F1550, &qword_1002F1558);
            if (v5 <= 0x3F)
            {
              sub_100022CC4(319, &qword_1002F1560, &qword_1002F1568);
              if (v6 <= 0x3F)
              {
                sub_100022CC4(319, &qword_1002F1570, &qword_1002F1578);
                if (v7 <= 0x3F)
                {
                  sub_100022CC4(319, &qword_1002F1580, &qword_1002F1588);
                  if (v8 <= 0x3F)
                  {
                    sub_1000219BC(319, &qword_1002F1590);
                    if (v9 <= 0x3F)
                    {
                      sub_100022CC4(319, &qword_1002F1598, &qword_1002F15A0);
                      if (v10 <= 0x3F)
                      {
                        sub_1000219BC(319, (unint64_t *)&unk_1002F15A8);
                        if (v11 <= 0x3F) {
                          swift_updateClassMetadata2();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_100061DDC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v71 = a4;
  unint64_t v73 = a2;
  uint64_t v69 = a1;
  uint64_t v68 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v68);
  unint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  unint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v67 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v72 = (char *)&v58 - v15;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v16 = v75;
  if (v75 == 3)
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    uint64_t v18 = sub_100011554(v17, (uint64_t)qword_10030EAE0);
    swift_retain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.debug.getter();
    int v21 = v20;
    BOOL v22 = os_log_type_enabled(v19, v20);
    uint64_t v65 = v8;
    uint64_t v66 = v11;
    char v63 = v10;
    uint64_t v64 = v12;
    if (v22)
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v75 = v61;
      *(_DWORD *)uint64_t v23 = 136446466;
      swift_getKeyPath();
      uint64_t v62 = v18;
      os_log_t v60 = v19;
      swift_getKeyPath();
      int v59 = v21;
      uint64_t v24 = v72;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v25 = Locale.ltIdentifier.getter();
      unint64_t v27 = v26;
      id v28 = *(void (**)(char *, uint64_t))(v12 + 8);
      v28(v24, v11);
      uint64_t v74 = sub_100202FD4(v25, v27, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v23 + 12) = 2082;
      uint64_t v58 = v23 + 14;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v29 = Locale.ltIdentifier.getter();
      unint64_t v31 = v30;
      v28(v24, v11);
      uint64_t v74 = sub_100202FD4(v29, v31, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v19 = v60;
      _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v59, "Requested text translation from '%{public}s'->'%{public}s'", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v40 = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 134218240;
      uint64_t v75 = String.count.getter();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 1024;
      LODWORD(v75) = v40 != 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "... of length %ld has sanitized text: %{BOOL}d", (uint8_t *)v43, 0x12u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v44 = v65;
    uint64_t v45 = v66;
    uint64_t v46 = v64;

    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if ((v75 & 1) == 0)
    {
      uint64_t v47 = *(void *)(v5
                      + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      uint64_t v48 = (uint64_t)v72;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      id v49 = (int *)v68;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(&v7[v49[14]], 1, 1, v70);
      (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v7, v48, v45);
      *(void *)&v7[v49[6]] = 1;
      *(void *)&v7[v49[7]] = 1;
      *(void *)&v7[v49[8]] = 0;
      v7[v49[9]] = 0;
      uint64_t v50 = &v7[v49[10]];
      *(void *)uint64_t v50 = 0;
      v50[8] = 1;
      v7[v49[11]] = 0;
      *(void *)&v7[v49[12]] = 0;
      uint64_t v51 = &v7[v49[13]];
      *(void *)uint64_t v51 = 0;
      v51[8] = 1;
      sub_1001A1344((uint64_t)v7);
      unint64_t v52 = *(void **)(v47 + 16);
      if (v52)
      {
        id v53 = [v52 invocationId];
        uint64_t v54 = (uint64_t)v63;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        swift_release();
        sub_10006E658((uint64_t)v7, type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
        sub_1000580AC();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v55 = (uint64_t)v67;
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        sub_1001DCB0C(v69, v73, v48, v55, v75, v54);
        swift_release();
        uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
        uint64_t v57 = v66;
        v56(v55, v66);
        v56(v48, v57);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v54, v70);
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100011554(v32, (uint64_t)qword_10030EAE0);
    char v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      *(_DWORD *)id v35 = 136315138;
      unint64_t v36 = 0xE90000000000006BLL;
      unint64_t v37 = 0x726F7774654E6F6ELL;
      if (v16 != 1)
      {
        unint64_t v37 = 0xD000000000000014;
        unint64_t v36 = 0x8000000100259F00;
      }
      if (v16) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 0xD000000000000013;
      }
      if (v16) {
        unint64_t v39 = v36;
      }
      else {
        unint64_t v39 = 0x8000000100259EE0;
      }
      uint64_t v74 = sub_100202FD4(v38, v39, &v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Skipping final translation because an error state is active: %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100062854(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v15 - 8);
  uint64_t v3 = __chkstk_darwin(v15);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v14 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v9 = v16;
  unint64_t v8 = v17;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1001A16F0(v9, v8, (uint64_t)v7, (uint64_t)v5, a1);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v11 = v5;
  uint64_t v12 = v15;
  v10(v11, v15);
  return ((uint64_t (*)(char *, uint64_t))v10)(v7, v12);
}

uint64_t sub_100062A78()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v11 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = v11[0];
  uint64_t v7 = v11[1];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_1001A1818(v8, v7, (uint64_t)v6, (uint64_t)v4);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v4, v0);
  return ((uint64_t (*)(char *, uint64_t))v9)(v6, v0);
}

uint64_t sub_100062C8C()
{
  uint64_t v1 = (int *)type metadata accessor for GenderTipManager.Registration(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  id v28 = (uint64_t *)((char *)&v27 - v6);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v27 - v8);
  __chkstk_darwin(v7);
  uint64_t v11 = (uint64_t *)((char *)&v27 - v10);
  uint64_t v27 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_genderTipManager);
  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel;
  uint64_t v29 = v0;
  uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel);
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = (void *)DisambiguationResultModel.disambiguableResult.getter();
  }
  else
  {
    uint64_t v15 = 0;
  }
  *uint64_t v9 = 0x65736F706D6F43;
  v9[1] = 0xE700000000000000;
  uint64_t v16 = (char *)v9 + v1[5];
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  if (v15) {
    unsigned __int8 v19 = [v15 hasDisambiguationsOfType:1];
  }
  else {
    unsigned __int8 v19 = 0;
  }
  *((unsigned char *)v9 + v1[6]) = v19;
  *((unsigned char *)v9 + v1[7]) = 1;
  sub_10006E5F0((uint64_t)v9, (uint64_t)v11, type metadata accessor for GenderTipManager.Registration);
  sub_1000F6070(v11);
  sub_10006E658((uint64_t)v11, type metadata accessor for GenderTipManager.Registration);

  os_log_type_t v20 = *(void **)(v29 + v12);
  if (v20)
  {
    id v21 = v20;
    BOOL v22 = (void *)DisambiguationResultModel.disambiguableResult.getter();
  }
  else
  {
    BOOL v22 = 0;
  }
  *(void *)uint64_t v4 = 0x65736F706D6F43;
  *((void *)v4 + 1) = 0xE700000000000000;
  v18(&v4[v1[5]], 1, 1, v17);
  if (v22) {
    unsigned __int8 v23 = [v22 hasDisambiguationsOfType:1];
  }
  else {
    unsigned __int8 v23 = 0;
  }
  v4[v1[6]] = v23;
  v4[v1[7]] = 1;
  uint64_t v24 = v28;
  sub_10006E5F0((uint64_t)v4, (uint64_t)v28, type metadata accessor for GenderTipManager.Registration);
  int v25 = sub_1000F5D28(v24) & 1;
  sub_10006E658((uint64_t)v24, type metadata accessor for GenderTipManager.Registration);

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v25 != v31)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    char v30 = v25;
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_100063024(void *a1)
{
  uint64_t v2 = v1;
  id v3 = a1;
  int v4 = sub_10000A1FC(v3);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EAE0);
  id v6 = v3;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = String.init<A>(describing:)();
    sub_100202FD4(v11, v12, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v13 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v10 = v6;

    uint64_t v2 = v1;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Received error with reason '%{public}s': %@", (uint8_t *)v9, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  switch(BYTE2(v4))
  {
    case 1u:
      goto LABEL_9;
    case 6u:
      swift_getKeyPath();
      swift_getKeyPath();
      BYTE2(v36) = 6;
      LOWORD(v36) = v4;
      swift_retain();
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v36) = 1;
LABEL_16:
      swift_retain();
      return static Published.subscript.setter();
    case 5u:
LABEL_9:
      swift_getKeyPath();
      swift_getKeyPath();
      BYTE2(v36) = BYTE2(v4);
      LOWORD(v36) = v4;
      swift_retain();
      static Published.subscript.setter();
      sub_100007620(&qword_1002F21F8);
      id v14 = (int *)(type metadata accessor for TranslateTip(0) - 8);
      unint64_t v15 = (*(unsigned __int8 *)(*(void *)v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v14 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1002488D0;
      unint64_t v17 = v16 + v15;
      uint64_t v18 = self;
      swift_retain();
      id v19 = [v18 mainBundle];
      v38._id object = (void *)0xE000000000000000;
      v20._id object = (void *)0x800000010025C210;
      v20._id countAndFlagsBits = 0xD000000000000016;
      v21._id countAndFlagsBits = 0;
      v21._id object = (void *)0xE000000000000000;
      v38._id countAndFlagsBits = 0;
      Swift::String v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v38);

      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_10006E5B8;
      *(void *)(v23 + 24) = v2;
      swift_retain();
      UUID.init()();
      *(Swift::String *)(v17 + v14[7]) = v22;
      uint64_t v24 = (void *)(v17 + v14[8]);
      *uint64_t v24 = 0;
      v24[1] = 0;
      int v25 = (uint64_t (**)())(v17 + v14[9]);
      *int v25 = sub_10006E5E8;
      v25[1] = (uint64_t (*)())v23;
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v36 = v16;
      swift_retain();
      return static Published.subscript.setter();
  }
  id v26 = v6;
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    char v30 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v31 = String.init<A>(describing:)();
    sub_100202FD4(v31, v32, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2112;
    id v33 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v30 = v26;

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Ignoring displaying an error because it's not allow-listed to display to the user: reason '%{public}s': %@", (uint8_t *)v29, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v34 = v37;
  uint64_t result = swift_bridgeObjectRelease();
  if (v34)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    goto LABEL_16;
  }
  return result;
}

void sub_10006373C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)NSError);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDomain:v1 code:14 userInfo:0];

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v19) {
    goto LABEL_3;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v20) {
    goto LABEL_3;
  }
  int v10 = sub_1000580AC()[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState];
  swift_release();
  if (v10 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_3:
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030EAE0);
    id v4 = v2;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v8 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v18 = v4;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Translate view was active during XPC interruption: %@", v7, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10005D934(0);
    uint64_t v9 = v4;
    sub_10005A31C(v4, 0);
    goto LABEL_9;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_3;
  }
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100011554(v12, (uint64_t)qword_10030EAE0);
  id v13 = v2;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 138412290;
    unint64_t v17 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v13;

    _os_log_impl((void *)&_mh_execute_header, v9, v14, "Translate view was idle during XPC interruption, ignoring XPC error: %@", v15, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v9 = v13;
  }
LABEL_9:
}

void sub_100063C08()
{
  if (!qword_1002F1528)
  {
    type metadata accessor for Locale();
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F1528);
    }
  }
}

uint64_t sub_100063C60@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ComposeTranslationViewModel(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_100063CA0()
{
  qword_10030E700 = 0x4071800000000000;
}

double sub_100063CB4()
{
  swift_getKeyPath();
  sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + 16);
}

uint64_t sub_100063D54(uint64_t result, double a2)
{
  *(double *)(result + 16) = a2;
  return result;
}

uint64_t sub_100063D5C()
{
  swift_getKeyPath();
  sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_100063DFC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_10006A478((unint64_t *)&unk_1002FC9F0, (void (*)(uint64_t))type metadata accessor for CardMetrics);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_100063EA4()
{
  return swift_release();
}

uint64_t sub_100063F74(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t sub_100063F7C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator11CardMetrics___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10006401C()
{
  return type metadata accessor for CardMetrics(0);
}

uint64_t type metadata accessor for CardMetrics(uint64_t a1)
{
  return sub_1000236B0(a1, qword_1002F1EE8);
}

uint64_t sub_100064044()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ComposeTranslationViewModel.TranslationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000641B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeTranslationViewModel.TranslationState()
{
  return &type metadata for ComposeTranslationViewModel.TranslationState;
}

unsigned char *storeEnumTagSinglePayload for ComposeTranslationViewModel.InputStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000642BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeTranslationViewModel.InputStyle()
{
  return &type metadata for ComposeTranslationViewModel.InputStyle;
}

unint64_t sub_1000642F8()
{
  unint64_t result = qword_1002F1FF0;
  if (!qword_1002F1FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F1FF0);
  }
  return result;
}

unint64_t sub_100064350()
{
  unint64_t result = qword_1002F1FF8;
  if (!qword_1002F1FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002F1FF8);
  }
  return result;
}

uint64_t sub_1000643A4(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100011554(v7, (uint64_t)qword_10030EAE0);
  swift_bridgeObjectRetain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109378;
    LODWORD(v18) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 8) = 2082;
    uint64_t v18 = a2;
    sub_100007620(&qword_1002F2058);
    uint64_t v11 = Optional.debugDescription.getter();
    uint64_t v18 = sub_100202FD4(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Speech: listening status changed to %{BOOL}d, locales: %{public}s", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v15 = static MainActor.shared.getter();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  *(void *)(v16 + 24) = &protocol witness table for MainActor;
  *(void *)(v16 + 32) = v14;
  *(unsigned char *)(v16 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a1 & 1;
  swift_release();
  sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F2050, v16);
  return swift_release();
}

uint64_t sub_1000646B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 256) = a5;
  *(void *)(v5 + 24UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 248) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006474C, v7, v6);
}

uint64_t sub_10006474C()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v1 = (unsigned char *)(v0 + 16);
    int v2 = *(unsigned __int8 *)(v0 + 256);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v2 == *(unsigned __int8 *)(v0 + 16)
      || (*(unsigned char *)(v0 + 256) ? (int v3 = 1) : (int v3 = 3),
          swift_getKeyPath(),
          swift_getKeyPath(),
          static Published.subscript.getter(),
          swift_release(),
          swift_release(),
          v3 == *v1))
    {
LABEL_7:
      swift_release();
      goto LABEL_8;
    }
    char v6 = *(unsigned char *)(v0 + 256);
    swift_getKeyPath();
    swift_getKeyPath();
    *unint64_t v1 = v3;
    swift_retain();
    static Published.subscript.setter();
    if (v6)
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100011554(v7, (uint64_t)qword_10030EAE0);
      id v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v10 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Speech: empty ELSE case", v10, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (!*(void *)(v0 + 120))
      {
        sub_10000B070(v0 + 96, &qword_1002F15A0);
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_100011554(v15, (uint64_t)qword_10030EAE0);
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "isListening false without a partial result.  This is likely just be an audio interruption (see rdar://129403664)", v18, 2u);
          swift_slowDealloc();
        }

        sub_10005D934(1);
        goto LABEL_7;
      }
      sub_100048DE4((long long *)(v0 + 96), v0 + 16);
      sub_10006A24C(v0 + 136, v0 + 56);
      sub_1000295C0(v0 + 16, v0 + 96);
      sub_10000C3A4(v0 + 56, v0 + 136, (uint64_t *)&unk_1002F33F0);
      if (*(void *)(v0 + 160))
      {
        sub_100048DE4((long long *)(v0 + 136), v0 + 176);
        sub_10000AB68(v0 + 96);
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v11 = type metadata accessor for Logger();
        sub_100011554(v11, (uint64_t)qword_10030EAE0);
        unint64_t v12 = Logger.logObject.getter();
        os_log_type_t v13 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v14 = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, v13, "Speech: finalizing partial translation", v14, 2u);
          swift_slowDealloc();
        }

        sub_100064D0C((void *)(v0 + 16), (void *)(v0 + 176));
        swift_release();
        sub_10000AB68(v0 + 176);
      }
      else
      {
        sub_10000B070(v0 + 136, (uint64_t *)&unk_1002F33F0);
        sub_10000AB68(v0 + 96);
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_100011554(v19, (uint64_t)qword_10030EAE0);
        uint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v20, v21))
        {
          Swift::String v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::String v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "Speech: Performing final text translation", v22, 2u);
          swift_slowDealloc();
        }

        sub_10005C81C(0);
        sub_10005D934(0);
        swift_release();
      }
      sub_10000B070(v0 + 16, &qword_1002F2060);
    }
  }
LABEL_8:
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100064D0C(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for CoreAnalyticsLogger.CardType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  if (dispatch thunk of SpeechResult.isEmpty()())
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100011554(v12, (uint64_t)qword_10030EAE0);
    os_log_type_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Not storing speech translation result, as speech result is empty.", v15, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
    uint64_t v30 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation;
    uint64_t v16 = *(void **)(*(void *)(v2
                               + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation)
                   + 16);
    uint64_t v31 = v5;
    if (v16)
    {
      swift_retain();
      id v17 = [v16 invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = type metadata accessor for UUID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
      swift_release();
    }
    else
    {
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 1, 1, v19);
    }
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    Swift::String v22 = sub_100029624(a1, v20);
    uint64_t v24 = a2[3];
    uint64_t v23 = a2[4];
    int v25 = sub_100029624(a2, v24);

    sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F33E0);
    swift_retain();
    sub_1001A1C14();
    swift_release();
    uint64_t v26 = v31;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for CoreAnalyticsLogger.CardType.committed(_:), v31);
    sub_100029624(a2, a2[3]);
    uint64_t v27 = (void *)dispatch thunk of TranslationResult.disambiguableResult.getter();
    sub_10005FEF8((uint64_t)v8, v27);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
  }
  sub_10005D934(0);
  sub_10005A31C(0, 0);
}

uint64_t sub_1000650F0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  uint64_t v31 = AnnotatedResult.displayString.getter();
  unint64_t v8 = v7;
  sub_10000C3A4(a2, (uint64_t)v32, (uint64_t *)&unk_1002F33F0);
  if (v33)
  {
    sub_100029624(v32, v33);
    uint64_t v9 = dispatch thunk of TranslationResult.alternatives.getter();
    if (*(void *)(v9 + 16))
    {
      sub_1000295C0(v9 + 32, (uint64_t)&v34);
    }
    else
    {
      uint64_t v36 = 0;
      long long v34 = 0u;
      long long v35 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v35 + 1))
    {
      sub_100029624(&v34, *((uint64_t *)&v35 + 1));
      uint64_t v12 = TranslationAlternative.displayString.getter();
      unint64_t v14 = v13;
      sub_10000AB68((uint64_t)&v34);
      sub_10000AB68((uint64_t)v32);
      goto LABEL_10;
    }
    sub_10000AB68((uint64_t)v32);
    uint64_t v10 = &qword_1002FA730;
    uint64_t v11 = &v34;
  }
  else
  {
    uint64_t v10 = (uint64_t *)&unk_1002F33F0;
    uint64_t v11 = (long long *)v32;
  }
  sub_10000B070((uint64_t)v11, v10);
  uint64_t v12 = 0;
  unint64_t v14 = 0xE000000000000000;
LABEL_10:
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100011554(v15, (uint64_t)qword_10030EAE0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v12;
    uint64_t v19 = v18;
    *(void *)&long long v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136643075;
    uint64_t v29 = a2;
    swift_bridgeObjectRetain();
    v32[0] = sub_100202FD4(v31, v8, (uint64_t *)&v34);
    uint64_t v28 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2085;
    swift_bridgeObjectRetain();
    v32[0] = sub_100202FD4(v30, v14, (uint64_t *)&v34);
    uint64_t v6 = v28;
    a2 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    os_log_type_t v20 = v17;
    unint64_t v21 = v14;
    _os_log_impl((void *)&_mh_execute_header, v16, v20, "Speech: partial %{sensitive}s -> %{sensitive}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v12 = v30;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unint64_t v21 = v14;
  }
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  sub_1000295C0((uint64_t)a1, (uint64_t)&v34);
  sub_10000C3A4(a2, (uint64_t)v32, (uint64_t *)&unk_1002F33F0);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v24 = static MainActor.shared.getter();
  int v25 = (void *)swift_allocObject();
  v25[2] = v24;
  v25[3] = &protocol witness table for MainActor;
  v25[4] = v23;
  sub_100048DE4(&v34, (uint64_t)(v25 + 5));
  sub_10006A24C((uint64_t)v32, (uint64_t)(v25 + 10));
  v25[15] = v31;
  unsigned char v25[16] = v8;
  v25[17] = v12;
  v25[18] = v21;
  swift_release();
  sub_100056780((uint64_t)v6, (uint64_t)&unk_1002F2038, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_10006558C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[54] = v15;
  v8[55] = v16;
  v8[52] = a7;
  v8[53] = a8;
  v8[50] = a5;
  v8[51] = a6;
  v8[49] = a4;
  uint64_t v9 = type metadata accessor for TranslateTip(0);
  v8[56] = v9;
  v8[57] = *(void *)(v9 - 8);
  v8[58] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Locale();
  v8[59] = v10;
  v8[60] = *(void *)(v10 - 8);
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[63] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100065700, v12, v11);
}

uint64_t sub_100065700()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v63 = (uint64_t)(v0 + 2);
    uint64_t v2 = v0[61];
    uint64_t v1 = v0[62];
    uint64_t v4 = v0[59];
    uint64_t v3 = v0[60];
    uint64_t v5 = (void *)v0[50];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v6 = Locale.identifier.getter();
    uint64_t v8 = v7;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v9(v1, v4);
    sub_100029624(v5, v5[3]);
    dispatch thunk of AnnotatedResult.locale.getter();
    LOBYTE(v1) = sub_1000C5D60(v2, v6, v8);
    swift_bridgeObjectRelease();
    uint64_t v10 = v4;
    uint64_t v11 = v0 + 31;
    uint64_t v61 = v9;
    v9(v2, v10);
    sub_1000295C0((uint64_t)v5, (uint64_t)(v0 + 31));
    if (v1)
    {
      sub_100029624(v11, v0[34]);
      char v12 = dispatch thunk of AnnotatedResult.isLowConfidence.getter();
      sub_10000AB68((uint64_t)v11);
      if ((v12 & 1) == 0)
      {
        uint64_t v14 = v0[61];
        uint64_t v13 = v0[62];
        uint64_t v15 = v0[59];
        uint64_t v16 = (void *)v0[50];
        sub_10005AFA8(0, 0);
        static Locale.current.getter();
        sub_100029624(v16, v5[3]);
        dispatch thunk of AnnotatedResult.locale.getter();
        uint64_t v17 = Locale.identifier.getter();
        uint64_t v19 = v18;
        v61(v14, v15);
        v20._id countAndFlagsBits = v17;
        v20._id object = v19;
        Swift::String_optional v21 = Locale.localizedString(forIdentifier:)(v20);
        swift_bridgeObjectRelease();
        v61(v13, v15);
        if (v21.value._object)
        {
          uint64_t v22 = v0[58];
          uint64_t v23 = (int *)v0[56];
          id v24 = [self mainBundle];
          v65._id countAndFlagsBits = 0xD000000000000027;
          v65._id object = (void *)0x800000010025C160;
          v25._id object = (void *)0x800000010025C140;
          v25._id countAndFlagsBits = 0xD00000000000001CLL;
          v26._id countAndFlagsBits = 0;
          v26._id object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v65);

          sub_100007620(&qword_1002EEC80);
          uint64_t v27 = swift_allocObject();
          *(_OWORD *)(v27 + 16) = xmmword_1002488D0;
          *(void *)(v27 + 56) = &type metadata for String;
          *(void *)(v27 + 64) = sub_1000149B4();
          *(Swift::String_optional *)(v27 + 32) = v21;
          uint64_t v28 = String.init(format:_:)();
          uint64_t v30 = v29;
          swift_bridgeObjectRelease();
          UUID.init()();
          uint64_t v31 = (uint64_t *)(v22 + v23[5]);
          *uint64_t v31 = v28;
          v31[1] = v30;
          unint64_t v32 = (void *)(v22 + v23[6]);
          *unint64_t v32 = 0;
          v32[1] = 0;
          uint64_t v33 = (void *)(v22 + v23[7]);
          void *v33 = 0;
          v33[1] = 0;
          swift_getKeyPath();
          swift_getKeyPath();
          uint64_t v62 = (void (*)(void *, void))static Published.subscript.modify();
          long long v35 = v34;
          unint64_t v36 = *v34;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *long long v35 = v36;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v36 = sub_10020277C(0, *(void *)(v36 + 16) + 1, 1, v36);
            *long long v35 = v36;
          }
          unint64_t v39 = *(void *)(v36 + 16);
          unint64_t v38 = *(void *)(v36 + 24);
          if (v39 >= v38 >> 1)
          {
            unint64_t v36 = sub_10020277C(v38 > 1, v39 + 1, 1, v36);
            *long long v35 = v36;
          }
          uint64_t v41 = v0[57];
          uint64_t v40 = v0[58];
          *(void *)(v36 + 16) = v39 + 1;
          sub_10006E5F0(v40, v36+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v39, type metadata accessor for TranslateTip);
          v62(v0 + 36, 0);
          swift_release();
          swift_release();
        }
      }
    }
    else
    {
      sub_10000AB68((uint64_t)v11);
    }
    uint64_t v42 = v0[51];
    sub_1000295C0(v0[50], v63);
    sub_10000C3A4(v42, (uint64_t)(v0 + 7), (uint64_t *)&unk_1002F33F0);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10000C3A4(v63, (uint64_t)(v0 + 12), &qword_1002F15A0);
    swift_retain();
    static Published.subscript.setter();
    sub_10000B070(v63, &qword_1002F15A0);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v43 = v0[44];
    uint64_t v44 = v0[53];
    if (v43)
    {
      if (v0[43] == v0[52] && v43 == v44)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        sub_100007620(&qword_1002FC3D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1002488D0;
        *(void *)(inited + 32) = NSForegroundColorAttributeName;
        uint64_t v48 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
        swift_bridgeObjectRetain();
        id v49 = NSForegroundColorAttributeName;
        uint64_t v50 = static UIColor.targetTextColor.getter();
        *(void *)(inited + 64) = v48;
        *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v50;
        sub_1001FF520(inited);
        id v51 = objc_allocWithZone((Class)NSAttributedString);
        NSString v52 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_10006A478((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v54 = [v51 initWithString:v52 attributes:isa];

        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        uint64_t v55 = (void *)v0[47];
        if (v55
          && (sub_10000B0CC(0, &qword_1002F0F90),
              id v56 = v54,
              id v57 = v55,
              char v58 = static NSObject.== infix(_:_:)(),
              v56,
              v57,
              v57,
              (v58 & 1) != 0))
        {

          swift_release();
        }
        else
        {
          swift_getKeyPath();
          swift_getKeyPath();
          v0[48] = v54;
          static Published.subscript.setter();
        }
        goto LABEL_22;
      }
      char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v45) {
        goto LABEL_18;
      }
    }
    uint64_t v46 = v0[52];
    swift_getKeyPath();
    swift_getKeyPath();
    v0[45] = v46;
    v0[46] = v44;
    swift_retain();
    swift_bridgeObjectRetain();
    static Published.subscript.setter();
    goto LABEL_18;
  }
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v59 = (uint64_t (*)(void))v0[1];
  return v59();
}

uint64_t sub_100065F84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100011554(v8, (uint64_t)qword_10030EAE0);
  sub_1000295C0(a1, (uint64_t)&v32);
  sub_1000295C0(a2, (uint64_t)&v30);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v25[1] = v2;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136643075;
    sub_100029624(&v32, v33);
    uint64_t v12 = AnnotatedResult.displayString.getter();
    *(void *)&long long v26 = sub_100202FD4(v12, v13, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000AB68((uint64_t)&v32);
    *(_WORD *)(v11 + 12) = 2085;
    sub_100029624(&v30, v31);
    uint64_t v14 = dispatch thunk of TranslationResult.alternatives.getter();
    if (*(void *)(v14 + 16))
    {
      sub_1000295C0(v14 + 32, (uint64_t)&v26);
    }
    else
    {
      uint64_t v28 = 0;
      long long v26 = 0u;
      long long v27 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = *((void *)&v27 + 1);
    if (*((void *)&v27 + 1))
    {
      sub_100029624(&v26, *((uint64_t *)&v27 + 1));
      uint64_t v15 = TranslationAlternative.displayString.getter();
      uint64_t v17 = v16;
      sub_10000AB68((uint64_t)&v26);
    }
    else
    {
      sub_10000B070((uint64_t)&v26, &qword_1002FA730);
      uint64_t v17 = 0;
    }
    *(void *)&long long v26 = v15;
    *((void *)&v26 + 1) = v17;
    sub_100007620(&qword_1002F1378);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)&long long v26 = sub_100202FD4(v18, v19, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000AB68((uint64_t)&v30);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Speech: final: %{sensitive}s -> %{sensitive}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000AB68((uint64_t)&v32);
    sub_10000AB68((uint64_t)&v30);
  }
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  sub_1000295C0(a1, (uint64_t)&v32);
  sub_1000295C0(a2, (uint64_t)&v30);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v22 = static MainActor.shared.getter();
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v22;
  void v23[3] = &protocol witness table for MainActor;
  v23[4] = v21;
  sub_100048DE4(&v32, (uint64_t)(v23 + 5));
  sub_100048DE4(&v30, (uint64_t)(v23 + 10));
  swift_release();
  sub_100056780((uint64_t)v7, (uint64_t)&unk_1002F2028, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1000663B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[5] = a4;
  type metadata accessor for MainActor();
  v6[8] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100066454, v8, v7);
}

uint64_t sub_100066454()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100064D0C(*(void **)(v0 + 48), *(void **)(v0 + 56));
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000664F4(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100011554(v5, (uint64_t)qword_10030EAE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v16[1] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Speech: finished with error %@", v8, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_errorRetain();
  swift_retain();
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = v12;
  v14[5] = a1;
  swift_release();
  sub_100056780((uint64_t)v4, (uint64_t)&unk_1002F2008, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1000667D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100066868, v7, v6);
}

uint64_t sub_100066868()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10005D934(0);
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v1 = (void *)_convertErrorToNSError(_:)();
    sub_10005A31C(v1, 1);

    swift_release();
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100066974(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v13 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TranslateTip(0) - 8;
  uint64_t v17 = __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  if (!a4)
  {
    uint64_t v32 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v15, 1, 1, v32);
    sub_10000C3A4(a2, (uint64_t)v58, (uint64_t *)&unk_1002F33F0);
    sub_10006DEF4(a1, (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StreamingRequestInfo);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v33 = static MainActor.shared.getter();
    char v34 = a3;
    unint64_t v35 = (*(unsigned __int8 *)(v11 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = v33;
    *(void *)(v36 + 24) = &protocol witness table for MainActor;
    *(unsigned char *)(v36 + 32) = v34 & 1;
    sub_10006A24C((uint64_t)v58, v36 + 40);
    *(void *)(v36 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v5;
    sub_10006E5F0((uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v36 + v35, type metadata accessor for StreamingRequestInfo);
    sub_100056780((uint64_t)v15, (uint64_t)&unk_1002F2070, v36);
    swift_release();
    return;
  }
  uint64_t v54 = v20;
  uint64_t v55 = v19;
  uint64_t v56 = (uint64_t)&v49 - v18;
  swift_errorRetain();
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_100011554(v21, (uint64_t)qword_10030EAE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v51 = v22;
    uint64_t v26 = v25;
    long long v27 = (void *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v58[0] = v50;
    *(_DWORD *)uint64_t v26 = 136315394;
    if (a3) {
      uint64_t v28 = 0x6C616E6966;
    }
    else {
      uint64_t v28 = 0x6C616974726170;
    }
    int v52 = a3;
    if (a3) {
      unint64_t v29 = 0xE500000000000000;
    }
    else {
      unint64_t v29 = 0xE700000000000000;
    }
    uint64_t v53 = v5;
    uint64_t v57 = sub_100202FD4(v28, v29, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2112;
    swift_errorRetain();
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v57 = v30;
    char v31 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *long long v27 = v30;
    uint64_t v5 = v53;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Exception while creating a %s translation: %@", (uint8_t *)v26, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((v31 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();

    if ((a3 & 1) == 0) {
      goto LABEL_16;
    }
  }
  swift_retain();
  uint64_t v37 = v56;
  sub_1001FAD7C(1, (uint64_t)sub_10006DEEC, v5, v56);
  swift_release();
  uint64_t v38 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
  uint64_t v39 = swift_allocObject();
  swift_weakInit();
  uint64_t v40 = v55;
  sub_10006DEF4(v37, v55, type metadata accessor for TranslateTip);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v41 = static MainActor.shared.getter();
  unint64_t v42 = (*(unsigned __int8 *)(v54 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v43 = (void *)swift_allocObject();
  _OWORD v43[2] = v41;
  v43[3] = &protocol witness table for MainActor;
  v43[4] = v39;
  sub_10006E5F0(v40, (uint64_t)v43 + v42, type metadata accessor for TranslateTip);
  swift_release();
  sub_100056780((uint64_t)v15, (uint64_t)&unk_1002F2080, (uint64_t)v43);
  swift_release();
  sub_10006E658(v37, type metadata accessor for TranslateTip);
LABEL_16:
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 138412290;
    swift_errorRetain();
    uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
    v58[0] = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v47 = v48;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Ignoring text streaming error since it occurred during a partial translation: %@", v46, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100067144()
{
  uint64_t v0 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_100056780((uint64_t)v2, (uint64_t)&unk_1002F2090, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_10006728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100067324, v6, v5);
}

uint64_t sub_100067324()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_10005C81C(0);
    swift_release();
  }
  else
  {
    if (qword_1002EE648 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030EAE0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "self is nil in retranslation action handler", v4, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100067480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[12] = *(void *)(type metadata accessor for TranslateTip(0) - 8);
  v5[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[14] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100067570, v7, v6);
}

uint64_t sub_100067570()
{
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (*(unsigned char *)(v0 + 120) == 3)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 16);
      swift_bridgeObjectRelease();
      if (v1)
      {
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v2 = type metadata accessor for Logger();
        sub_100011554(v2, (uint64_t)qword_10030EAE0);
        os_log_type_t v3 = Logger.logObject.getter();
        os_log_type_t v4 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v3, v4))
        {
          uint64_t v5 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v5 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, v4, "Not showing 'Try Again' tip to user in response to streaming error because we're already showing a text streaming error tip", v5, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        sub_100011554(v10, (uint64_t)qword_10030EAE0);
        uint64_t v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Showing 'Try Again' tip to user in response to streaming error", v13, 2u);
          swift_slowDealloc();
        }
        uint64_t v14 = *(void *)(v0 + 104);
        uint64_t v15 = *(void *)(v0 + 88);

        sub_10006DEF4(v15, v14, type metadata accessor for TranslateTip);
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v16 = (void (*)(uint64_t, void))static Published.subscript.modify();
        uint64_t v18 = v17;
        unint64_t v19 = *v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v18 = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v19 = sub_10020277C(0, *(void *)(v19 + 16) + 1, 1, v19);
          *uint64_t v18 = v19;
        }
        unint64_t v21 = *(void *)(v19 + 16);
        unint64_t v22 = *(void *)(v19 + 24);
        unint64_t v23 = v21 + 1;
        if (v21 >= v22 >> 1)
        {
          unint64_t v31 = v21 + 1;
          unint64_t v28 = v19;
          unint64_t v29 = *(void *)(v19 + 16);
          uint64_t v30 = sub_10020277C(v22 > 1, v21 + 1, 1, v28);
          unint64_t v21 = v29;
          unint64_t v23 = v31;
          unint64_t v19 = v30;
          *uint64_t v18 = v30;
        }
        uint64_t v25 = *(void *)(v0 + 96);
        uint64_t v24 = *(void *)(v0 + 104);
        *(void *)(v19 + 16) = v23;
        sub_10006E5F0(v24, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v21, type metadata accessor for TranslateTip);
        v16(v0 + 16, 0);
        swift_release();
        swift_release();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      *(unsigned char *)(v0 + 121) = 1;
      static Published.subscript.setter();
    }
    else
    {
      if (qword_1002EE648 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_100011554(v6, (uint64_t)qword_10030EAE0);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Not showing 'Try Again' tip to the user because already showing a state-based error", v9, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
  }
  swift_task_dealloc();
  uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

uint64_t sub_100067A74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 296) = a6;
  *(void *)(v7 + 304) = a7;
  *(void *)(v7 + 288) = a5;
  *(unsigned char *)(v7 + 442) = a4;
  uint64_t v8 = type metadata accessor for CoreAnalyticsLogger.CardType();
  *(void *)(v7 + 312) = v8;
  *(void *)(v7 + 32UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(v8 - 8);
  *(void *)(v7 + 328) = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F33E0);
  *(void *)(v7 + 336) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for SpeechResultOrigin();
  *(void *)(v7 + 344) = v9;
  *(void *)(v7 + 352) = *(void *)(v9 - 8);
  *(void *)(v7 + 36UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Locale();
  *(void *)(v7 + 368) = v10;
  *(void *)(v7 + 376) = *(void *)(v10 - 8);
  *(void *)(v7 + 384) = swift_task_alloc();
  *(void *)(v7 + 392) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for StoredSpeechResult();
  *(void *)(v7 + 40UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v11;
  *(void *)(v7 + 408) = *(void *)(v11 - 8);
  *(void *)(v7 + 416) = swift_task_alloc();
  *(void *)(v7 + 424) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 432) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100067CD4, v13, v12);
}

uint64_t sub_100067CD4()
{
  int v1 = *(unsigned __int8 *)(v0 + 442);
  swift_release();
  if (v1 == 1)
  {
    sub_10000C3A4(*(void *)(v0 + 288), v0 + 216, (uint64_t *)&unk_1002F33F0);
    if (*(void *)(v0 + 240))
    {
      sub_100048DE4((long long *)(v0 + 216), v0 + 56);
      Swift::String v65 = (void *)(v0 + 56);
      sub_100029624((void *)(v0 + 56), *(void *)(v0 + 80));
      uint64_t v2 = dispatch thunk of TranslationResult.disambiguableResult.getter();
      if (v2)
      {
        os_log_type_t v3 = (void *)v2;
        if ([*(id *)(*(void *)(v0 + 296)+ OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager) restoreChangesToResult:v2])
        {
          if (qword_1002EE5E8 != -1) {
            swift_once();
          }
          uint64_t v4 = type metadata accessor for Logger();
          sub_100011554(v4, (uint64_t)qword_10030E9C0);
          uint64_t v5 = Logger.logObject.getter();
          os_log_type_t v6 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v5, v6))
          {
            uint64_t v7 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v7 = 0;
            _os_log_impl((void *)&_mh_execute_header, v5, v6, "Restored changes to finalized result from previous user-selections", v7, 2u);
            swift_slowDealloc();
          }
        }
      }
      uint64_t v8 = *(void *)(v0 + 408);
      uint64_t v63 = *(void *)(v0 + 400);
      uint64_t v64 = *(void *)(v0 + 416);
      uint64_t v9 = *(void *)(v0 + 352);
      uint64_t v10 = *(void *)(v0 + 360);
      uint64_t v61 = *(void *)(v0 + 344);
      uint64_t v11 = *(void *)(v0 + 296);
      uint64_t v57 = *(void *)(v0 + 424);
      uint64_t v59 = *(void *)(v0 + 304);
      uint64_t v12 = type metadata accessor for StreamingRequestInfo(0);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_bridgeObjectRetain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v10, enum case for SpeechResultOrigin.text(_:), v61);
      StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
      uint64_t v13 = *(void *)(v11 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v64, v57, v63);
      int v14 = *(unsigned __int8 *)(v59 + *(int *)(v12 + 36));
      uint64_t v15 = *(void **)(*(void *)(v11
                                 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation)
                     + 16);
      uint64_t v16 = *(void *)(v0 + 336);
      uint64_t v62 = v13;
      int v60 = v14;
      if (v15)
      {
        swift_retain();
        id v17 = [v15 invocationId];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v18 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 0, 1, v18);
        swift_release();
      }
      else
      {
        uint64_t v33 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 1, 1, v33);
      }
      uint64_t v34 = *(void *)(v0 + 416);
      uint64_t v36 = *(void *)(v0 + 400);
      uint64_t v35 = *(void *)(v0 + 408);
      uint64_t v38 = *(void *)(v0 + 328);
      uint64_t v37 = *(void *)(v0 + 336);
      uint64_t v39 = *(void *)(v0 + 320);
      uint64_t v56 = *(void *)(v0 + 312);
      uint64_t v58 = *(void *)(v0 + 424);
      uint64_t v40 = *(void *)(v0 + 80);
      uint64_t v41 = *(void *)(v0 + 88);
      unint64_t v42 = sub_100029624(v65, v40);
      uint64_t v43 = sub_10006A478(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);

      sub_10000B070(v37, (uint64_t *)&unk_1002F33E0);
      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v44(v34, v36);
      swift_retain();
      sub_1001A1C14();
      swift_release();
      (*(void (**)(uint64_t, void, uint64_t))(v39 + 104))(v38, enum case for CoreAnalyticsLogger.CardType.committed(_:), v56);
      sub_100029624(v65, *(void *)(v0 + 80));
      os_log_type_t v45 = (void *)dispatch thunk of TranslationResult.disambiguableResult.getter();
      sub_10005FEF8(v38, v45);

      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v56);
      v44(v58, v36);
      sub_10000AB68((uint64_t)v65);
    }
    else
    {
      sub_10000B070(v0 + 216, (uint64_t *)&unk_1002F33F0);
    }
    sub_10005A31C(0, 0);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v19 = *(void *)(v0 + 280);
    if (v19)
    {
      uint64_t v20 = *(void *)(v0 + 272);
      swift_bridgeObjectRelease();
      uint64_t v21 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0) {
        uint64_t v21 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        sub_1000580AC();
        uint64_t v22 = sub_1001D7AF0();
        unint64_t v24 = v23;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v25 = HIBYTE(v24) & 0xF;
        if ((v24 & 0x2000000000000000) == 0) {
          uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
        }
        if (v25) {
          goto LABEL_49;
        }
        uint64_t v27 = *(void *)(v0 + 384);
        uint64_t v26 = *(void *)(v0 + 392);
        uint64_t v28 = *(void *)(v0 + 368);
        uint64_t v29 = *(void *)(v0 + 376);
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        char v30 = static Locale.== infix(_:_:)();
        unint64_t v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
        v31(v27, v28);
        v31(v26, v28);
        if (v30)
        {
LABEL_49:
          swift_getKeyPath();
          swift_getKeyPath();
          static Published.subscript.getter();
          swift_release();
          swift_release();
          if (*(unsigned char *)(v0 + 441) == 1)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            *(unsigned char *)(v0 + 44UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
            swift_retain();
            static Published.subscript.setter();
          }
        }
        sub_10000C3A4(*(void *)(v0 + 288), v0 + 96, (uint64_t *)&unk_1002F33F0);
        if (*(void *)(v0 + 120))
        {
          sub_100029624((void *)(v0 + 96), *(void *)(v0 + 120));
          uint64_t v32 = (void *)dispatch thunk of TranslationResult.disambiguableResult.getter();
          sub_10000AB68(v0 + 96);

          if (v32)
          {
            sub_1000591A4(*(void *)(v0 + 288), 0, 0, 0);
            goto LABEL_30;
          }
        }
        else
        {
          sub_10000B070(v0 + 96, (uint64_t *)&unk_1002F33F0);
        }
        sub_10000C3A4(*(void *)(v0 + 288), v0 + 176, (uint64_t *)&unk_1002F33F0);
        if (*(void *)(v0 + 200))
        {
          sub_100029624((void *)(v0 + 176), *(void *)(v0 + 200));
          uint64_t v48 = dispatch thunk of TranslationResult.alternatives.getter();
          if (*(void *)(v48 + 16))
          {
            sub_1000295C0(v48 + 32, v0 + 136);
          }
          else
          {
            *(void *)(v0 + 168) = 0;
            *(_OWORD *)(v0 + 136) = 0u;
            *(_OWORD *)(v0 + 152) = 0u;
          }
          swift_bridgeObjectRelease();
          if (*(void *)(v0 + 160))
          {
            sub_100029624((void *)(v0 + 136), *(void *)(v0 + 160));
            uint64_t v51 = TranslationAlternative.displayString.getter();
            sub_10000AB68(v0 + 136);
            sub_10000AB68(v0 + 176);
            *(void *)(v0 + 48) = 0;
            *(_OWORD *)(v0 + 16) = 0u;
            *(_OWORD *)(v0 + 32) = 0u;
            swift_getKeyPath();
            swift_getKeyPath();
            static Published.subscript.getter();
            swift_release();
            swift_release();
            sub_1000591A4(v0 + 16, *(void *)(v0 + 256), *(void *)(v0 + 264), v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10000B070(v0 + 16, (uint64_t *)&unk_1002F33F0);
            goto LABEL_30;
          }
          sub_10000AB68(v0 + 176);
          uint64_t v49 = &qword_1002FA730;
          uint64_t v50 = v0 + 136;
        }
        else
        {
          uint64_t v49 = (uint64_t *)&unk_1002F33F0;
          uint64_t v50 = v0 + 176;
        }
        sub_10000B070(v50, v49);
        if (qword_1002EE648 != -1) {
          swift_once();
        }
        uint64_t v52 = type metadata accessor for Logger();
        sub_100011554(v52, (uint64_t)qword_10030EAE0);
        uint64_t v53 = Logger.logObject.getter();
        os_log_type_t v54 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "Can't find any text to display for result", v55, 2u);
          swift_slowDealloc();
        }
      }
    }
  }
LABEL_30:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

void sub_10006872C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
}

void *sub_100068750@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  uint64_t v39 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v36 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v32 - v17;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v41)
  {
    uint64_t v34 = v41;
    uint64_t v35 = a1;
    uint64_t v33 = v40;
    uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(&v12[v10[14]], 1, 1, v13);
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
    v39 += 32;
    v20(v12, v9, v38);
    *(void *)&v12[v10[6]] = 1;
    *(void *)&v12[v10[7]] = 1;
    *(void *)&v12[v10[8]] = 0;
    v12[v10[9]] = 0;
    uint64_t v21 = &v12[v10[10]];
    *(void *)uint64_t v21 = 0;
    v21[8] = 1;
    v12[v10[11]] = 0;
    *(void *)&v12[v10[12]] = 0;
    uint64_t v22 = &v12[v10[13]];
    *(void *)uint64_t v22 = 0;
    v22[8] = 1;
    sub_1001A1344((uint64_t)v12);
    unint64_t result = *(void **)(v19 + 16);
    if (result)
    {
      id v24 = [result invocationId];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      swift_release();

      sub_10006E658((uint64_t)v12, type metadata accessor for SELFLoggingInvocationWrapper.Parameters);
      uint64_t v25 = v36;
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v36, v18, v13);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v26 = v37;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
      uint64_t v27 = v35;
      uint64_t v28 = v34;
      *(void *)uint64_t v35 = v33;
      *((void *)v27 + 1) = v28;
      uint64_t v29 = (int *)type metadata accessor for SELFLoggingInvocationDescription();
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v27[v29[5]], v25, v13);
      uint64_t v30 = v38;
      v20(&v27[v29[6]], v9, v38);
      v20(&v27[v29[7]], v26, v30);
      return (void *)(*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v29 - 1) + 56))(v27, 0, 1, v29);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v31 = type metadata accessor for SELFLoggingInvocationDescription();
    return (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a1, 1, 1, v31);
  }
  return result;
}

void *sub_100068CC4@<X0>(char *a1@<X8>)
{
  return sub_100068750(a1);
}

uint64_t sub_100068CE8()
{
  swift_retain();
  sub_1001A1A44();

  return swift_release();
}

uint64_t sub_100068D34()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100068D6C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100068DB4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100021B58;
  return sub_1000667D0(a1, v4, v5, v7, v6);
}

uint64_t sub_100068E74@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_100068E88()
{
  return sub_1000694BC();
}

uint64_t sub_100068E9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100068F10()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();

  return static Published.subscript.setter();
}

uint64_t sub_100068F7C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100068FFC(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_100069074@<X0>(void *a1@<X8>)
{
  return sub_1000690B0(a1);
}

uint64_t sub_100069088()
{
  return sub_100069140();
}

uint64_t sub_10006909C@<X0>(void *a1@<X8>)
{
  return sub_1000690B0(a1);
}

uint64_t sub_1000690B0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10006912C()
{
  return sub_100069140();
}

uint64_t sub_100069140()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000691B8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_10006923C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1000692BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000692D0()
{
  return sub_1000694BC();
}

uint64_t sub_1000692E4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000692F8()
{
  return sub_1000694BC();
}

uint64_t sub_10006930C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_100069320()
{
  return sub_1000694BC();
}

uint64_t sub_100069334@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a1 + 2) = v4;
  *(_WORD *)a1 = v3;
  return result;
}

uint64_t sub_1000693BC()
{
  return static Published.subscript.setter();
}

uint64_t sub_100069440@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000694BC()
{
  return static Published.subscript.setter();
}

uint64_t sub_10006952C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000695AC()
{
  return static Published.subscript.setter();
}

uint64_t sub_100069620@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_100069634()
{
  return sub_1000694BC();
}

uint64_t sub_100069648@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006965C()
{
  return sub_1000694BC();
}

uint64_t sub_100069670()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1000696EC(uint64_t a1)
{
  sub_10000C3A4(a1, (uint64_t)v3, &qword_1002F15A0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10000C3A4((uint64_t)v3, (uint64_t)&v2, &qword_1002F15A0);
  swift_retain();
  static Published.subscript.setter();
  return sub_10000B070((uint64_t)v3, &qword_1002F15A0);
}

uint64_t sub_10006978C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000697A0()
{
  return sub_1000694BC();
}

uint64_t sub_1000697B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000697C8()
{
  return sub_1000694BC();
}

uint64_t sub_1000697DC(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  char v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *char v4 = v2;
  v4[1] = sub_1000698B8;
  return v6(a1);
}

uint64_t sub_1000698B8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000699B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000699E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000496A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002F2010 + dword_1002F2010);
  return v6(a1, v4);
}

uint64_t sub_100069AA0()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10000AB68(v0 + 40);
  sub_10000AB68(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100069AF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_1000663B8(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

uint64_t sub_100069BBC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5)
{
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v13 = type metadata accessor for DispatchPredicate();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  uint64_t v17 = type metadata accessor for StoredSpeechResult();
  v28[3] = v17;
  void v28[4] = sub_10006A478(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  uint64_t v18 = sub_100014830(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v18, a1, v17);
  uint64_t v19 = type metadata accessor for StoredTranslationResult();
  v27[3] = v19;
  v27[4] = sub_10006A478((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
  uint64_t v20 = sub_100014830(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v20, a2, v19);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  *uint64_t v16 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  uint64_t v21 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v21)
  {
    sub_100029624(&a5[OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store], *(void *)&a5[OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store + 24]);
    a3 = (void *)dispatch thunk of TranslationStore.insert(speech:translationResult:isFavorite:)();
    if (!a3)
    {
LABEL_5:
      sub_10000AB68((uint64_t)v28);
      sub_10000AB68((uint64_t)v27);
      return (uint64_t)a3;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a3 setSessionID:v22];

    sub_10000C3A4(a4, (uint64_t)v12, (uint64_t *)&unk_1002F33E0);
    dispatch thunk of PersistedTranslation.selfLoggingInvocationId.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v21 = a3;
    a5 = (char *)static Published.subscript.modify();
    if (!(*v23 >> 62))
    {
LABEL_4:
      sub_10022B77C(0, 0, v21);
      ((void (*)(uint64_t *, void))a5)(&v26, 0);
      swift_release();
      swift_release();
      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v25 & 0x8000000000000000) == 0) {
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_100069FF0(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10006A0D0;
  return v5(v2 + 32);
}

uint64_t sub_10006A0D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_10006A1E4()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10000AB68(v0 + 40);
  if (*(void *)(v0 + 104)) {
    sub_10000AB68(v0 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10006A24C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F33F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006A2B4(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v10 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_10006558C(a1, v10, v4, v5, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10), v6, v7);
}

uint64_t sub_10006A3AC()
{
  return sub_100056CA8();
}

uint64_t sub_10006A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100056D48(a1, a2, a3, a4, (uint64_t)&unk_10024B360, (uint64_t)&unk_10024B388, (void (*)(uint64_t))sub_100057468);
}

uint64_t sub_10006A428@<X0>(void *a1@<X8>)
{
  return sub_1000690B0(a1);
}

uint64_t sub_10006A450()
{
  return sub_100069140();
}

uint64_t sub_10006A478(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006A4C0()
{
  return sub_100049140(41);
}

uint64_t sub_10006A4C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_1000646B0(a1, v4, v5, v6, v7);
}

uint64_t sub_10006A58C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006A5B4()
{
  return sub_1000694BC();
}

uint64_t sub_10006A5E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v296 = a8;
  v206 = a7;
  v207 = a6;
  uint64_t v285 = a5;
  uint64_t v286 = a4;
  uint64_t v293 = a3;
  uint64_t v304 = a2;
  v298 = a1;
  uint64_t v281 = sub_100007620(&qword_1002F20B0);
  uint64_t v280 = *(void *)(v281 - 8);
  __chkstk_darwin(v281);
  v279 = (char *)&v205 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = sub_100007620(&qword_1002F20B8);
  uint64_t v283 = *(void *)(v284 - 8);
  __chkstk_darwin(v284);
  v282 = (char *)&v205 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = sub_100007620(&qword_1002F20C0);
  uint64_t v273 = *(void *)(v274 - 8);
  __chkstk_darwin(v274);
  v270 = (char *)&v205 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_100007620(&qword_1002FAED0);
  uint64_t v271 = *(void *)(v272 - 8);
  uint64_t v12 = __chkstk_darwin(v272);
  v269 = (char *)&v205 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v268 = (char *)&v205 - v14;
  uint64_t v277 = sub_100007620(&qword_1002F20C8);
  uint64_t v276 = *(void *)(v277 - 8);
  __chkstk_darwin(v277);
  v275 = (char *)&v205 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = sub_100007620(&qword_1002EF7C0);
  uint64_t v303 = *(void *)(v295 - 8);
  __chkstk_darwin(v295);
  v278 = (char *)&v205 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v257 = sub_100007620(&qword_1002F20D0);
  uint64_t v256 = *(void *)(v257 - 8);
  __chkstk_darwin(v257);
  v255 = (char *)&v205 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v262 = sub_100007620(&qword_1002F20D8);
  uint64_t v260 = *(void *)(v262 - 8);
  __chkstk_darwin(v262);
  v258 = (char *)&v205 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = sub_100007620(&qword_1002F20E0);
  uint64_t v261 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  v259 = (char *)&v205 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v266 = sub_100007620(&qword_1002F20E8);
  uint64_t v265 = *(void *)(v266 - 8);
  __chkstk_darwin(v266);
  v264 = (char *)&v205 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v249 = sub_100007620(&qword_1002F20F0);
  uint64_t v247 = *(void *)(v249 - 8);
  __chkstk_darwin(v249);
  v246 = (char *)&v205 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = sub_100007620(&qword_1002EF7B8);
  uint64_t v309 = *(void *)(v301 - 8);
  __chkstk_darwin(v301);
  v300 = (char *)&v205 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_100007620(&qword_1002F20F8);
  uint64_t v250 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  v248 = (char *)&v205 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = sub_100007620(&qword_1002F2100);
  uint64_t v253 = *(void *)(v254 - 8);
  __chkstk_darwin(v254);
  v252 = (char *)&v205 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = sub_100007620(&qword_1002F2108);
  uint64_t v238 = *(void *)(v239 - 8);
  __chkstk_darwin(v239);
  v237 = (char *)&v205 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = sub_100007620(&qword_1002F2110);
  uint64_t v235 = *(void *)(v236 - 8);
  __chkstk_darwin(v236);
  v234 = (char *)&v205 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = sub_100007620(&qword_1002F2118);
  uint64_t v241 = *(void *)(v242 - 8);
  __chkstk_darwin(v242);
  v240 = (char *)&v205 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_100007620(&qword_1002F2120);
  uint64_t v244 = *(void *)(v245 - 8);
  __chkstk_darwin(v245);
  v243 = (char *)&v205 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v29 - 8);
  v267 = (char *)&v205 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = sub_100007620(&qword_1002F2128);
  uint64_t v230 = *(void *)(v231 - 8);
  __chkstk_darwin(v231);
  v229 = (char *)&v205 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = sub_100007620(&qword_1002FCB10);
  uint64_t v233 = *(void *)(v287 - 8);
  __chkstk_darwin(v287);
  v232 = (char *)&v205 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v297 = type metadata accessor for Locale();
  uint64_t v310 = *(void *)(v297 - 8);
  uint64_t v33 = __chkstk_darwin(v297);
  v288 = (char *)&v205 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  v307 = (char *)&v205 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v306 = (char *)&v205 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v302 = (char *)&v205 - v40;
  __chkstk_darwin(v39);
  v294 = (char *)&v205 - v41;
  v292 = (void (*)(char *, uint64_t))sub_100007620(&qword_1002F2130);
  uint64_t v228 = *((void *)v292 - 1);
  __chkstk_darwin(v292);
  v227 = (char *)&v205 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v290 = sub_100007620(&qword_1002F2138);
  uint64_t v226 = *(void *)(v290 - 8);
  __chkstk_darwin(v290);
  v225 = (char *)&v205 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = (void (*)(char *, uint64_t))sub_100007620(&qword_1002F2140);
  uint64_t v224 = *((void *)v289 - 1);
  __chkstk_darwin(v289);
  v223 = (char *)&v205 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = sub_100007620(&qword_1002F2148);
  uint64_t v221 = *(void *)(v222 - 8);
  __chkstk_darwin(v222);
  v220 = (char *)&v205 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = sub_100007620(&qword_1002F2150);
  uint64_t v218 = *(void *)(v219 - 8);
  __chkstk_darwin(v219);
  v217 = (char *)&v205 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_100007620(&qword_1002F2158);
  uint64_t v215 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  v214 = (char *)&v205 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_100007620(&qword_1002F2160);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin(v211);
  uint64_t v49 = (char *)&v205 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v291 = (void (*)(char *, uint64_t))sub_100007620(&qword_1002F2168);
  uint64_t v50 = *((void *)v291 - 1);
  __chkstk_darwin(v291);
  uint64_t v52 = (char *)&v205 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100007620(&qword_1002EF7C8);
  uint64_t v308 = v53;
  v311 = *(void **)(v53 - 8);
  __chkstk_darwin(v53);
  v299 = (char *)&v205 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100007620((uint64_t *)&unk_1002FCB50);
  v305 = (void (*)(void, void, void, void))v55;
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v58 = (char *)&v205 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isFlipped;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  int v60 = *(void (**)(void, void, void))(v56 + 32);
  uint64_t v208 = v56 + 32;
  v209 = v60;
  v60(v59, v58, v55);
  uint64_t v61 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__sourceText;
  v314[0] = 0uLL;
  uint64_t v213 = sub_100007620(&qword_1002F1378);
  uint64_t v62 = v299;
  Published.init(initialValue:)();
  uint64_t v63 = (void (*)(uint64_t, char *, uint64_t))v311[4];
  v311 += 4;
  v212 = v63;
  v63(v61, v62, v53);
  uint64_t v64 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__targetText;
  *(void *)&v314[0] = 0;
  sub_100007620(&qword_1002F1538);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, void (*)(char *, uint64_t)))(v50 + 32))(v64, v52, v291);
  uint64_t v65 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__textStreamingErrorTips;
  *(void *)&v314[0] = _swiftEmptyArrayStorage;
  sub_100007620(&qword_1002F1548);
  Published.init(initialValue:)();
  uint64_t v66 = *(void (**)(uint64_t, char *, uint64_t))(v210 + 32);
  uint64_t v67 = v211;
  v66(v65, v49, v211);
  uint64_t v68 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__tips;
  *(void *)&v314[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v66(v68, v49, v67);
  uint64_t v69 = v8;
  uint64_t v70 = v8 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__forceDisableDictation;
  LOWORD(v314[0]) = 0;
  sub_100007620(&qword_1002F1558);
  uint64_t v71 = v214;
  Published.init(initialValue:)();
  uint64_t v72 = *(void (**)(uint64_t, char *, uint64_t))(v215 + 32);
  uint64_t v73 = v216;
  v72(v70, v71, v216);
  uint64_t v74 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isASRSupported;
  LOWORD(v314[0]) = 257;
  Published.init(initialValue:)();
  v72(v74, v71, v73);
  uint64_t v75 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__unableToTranslate;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  char v76 = v305;
  uint64_t v77 = v209;
  v209(v75, v58, v305);
  uint64_t v78 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isFavorite;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v78, v58, v76);
  uint64_t v79 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isDictionaryModeActive;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v79, v58, v76);
  uint64_t v80 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__pendingDictionaryModeSourceText;
  v314[0] = 0uLL;
  uint64_t v81 = v299;
  Published.init(initialValue:)();
  v212(v80, v81, v308);
  uint64_t v82 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__canShowDictionary;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v82, v58, v76);
  uint64_t v83 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__userInteractionEnabled;
  LOBYTE(v314[0]) = 1;
  Published.init(initialValue:)();
  v77(v83, v58, v76);
  uint64_t v84 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__stateError;
  LOBYTE(v314[0]) = 3;
  sub_100007620(&qword_1002F1568);
  uint64_t v85 = v217;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v218 + 32))(v84, v85, v219);
  uint64_t v86 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__transactionalError;
  BYTE2(v314[0]) = 8;
  LOWORD(v314[0]) = 0;
  sub_100007620(&qword_1002F1578);
  id v87 = v220;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v221 + 32))(v86, v87, v222);
  uint64_t v88 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__showErrorAlert;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v88, v58, v76);
  uint64_t v89 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__inputStyle;
  LOBYTE(v314[0]) = 2;
  sub_100007620(&qword_1002F1588);
  uint64_t v90 = v223;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, void (*)(char *, uint64_t)))(v224 + 32))(v89, v90, v289);
  uint64_t v91 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__state;
  LOBYTE(v314[0]) = 0;
  uint64_t v92 = v225;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v226 + 32))(v91, v92, v290);
  uint64_t v93 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__isListening;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v93, v58, v76);
  uint64_t v94 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__useSmallerFont;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v94, v58, v76);
  uint64_t v95 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__partialSpeechResult;
  memset(v314, 0, sizeof(v314));
  sub_10000C3A4((uint64_t)v314, (uint64_t)&v313, &qword_1002F15A0);
  sub_100007620(&qword_1002F15A0);
  uint64_t v96 = v227;
  Published.init(initialValue:)();
  sub_10000B070((uint64_t)v314, &qword_1002F15A0);
  (*(void (**)(uint64_t, char *, void (*)(char *, uint64_t)))(v228 + 32))(v95, v96, v292);
  uint64_t v97 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__redactTargetText;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v97, v58, v76);
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel____lazy_storage___streamingManager) = 0;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_debounceTimer) = 0;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationResultModel) = 0;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationUpdateSubscription) = 0;
  uint64_t v98 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_disambiguationChangeManager;
  *(void *)(v69 + v98) = [objc_allocWithZone((Class)_LTDisambiguationChangeManager) init];
  uint64_t v99 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__canShowGenderTip;
  LOBYTE(v314[0]) = 0;
  Published.init(initialValue:)();
  v77(v99, v58, v76);
  uint64_t v100 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_dictionaryManager;
  *(void *)(v69 + v10UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = [objc_allocWithZone((Class)type metadata accessor for DictionaryManager()) init];
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    unint64_t v101 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    unint64_t v101 = &_swiftEmptySetSingleton;
  }
  uint64_t v102 = v286;
  uint64_t v103 = v297;
  uint64_t v104 = v285;
  uint64_t v105 = v207;
  uint64_t v106 = v206;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_observers) = v101;
  uint64_t v107 = OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_currentSelfLoggingInvocation;
  type metadata accessor for SELFLoggingInvocationWrapper(0);
  uint64_t v108 = swift_allocObject();
  *(void *)(v108 + 16) = 0;
  uint64_t v109 = v108 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  uint64_t v110 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v109, 1, 1, v110);
  UUID.init()();
  *(unsigned char *)(v108 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 0;
  *(void *)(v108 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabName) = 1;
  *(void *)(v69 + v107) = v108;
  *(unsigned char *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_newTranslationFromPunchOut) = 0;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_service) = v304;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_ttsManager) = v104;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_session) = v293;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_errorStateContext) = v102;
  uint64_t v111 = v298;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_translator) = v298;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_translationOptions) = v106;
  id v112 = objc_allocWithZone((Class)type metadata accessor for SpeechManager());
  id v113 = v111;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v311 = v106;
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_speechManager) = sub_1001B6728(v113, v105);
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_genderTipManager) = v296;
  swift_beginAccess();
  swift_retain();
  Published.init(initialValue:)();
  swift_endAccess();
  type metadata accessor for CardMetrics(0);
  uint64_t v114 = swift_allocObject();
  if (qword_1002EE580 != -1) {
    swift_once();
  }
  *(void *)(v114 + 16) = qword_10030E700;
  *(unsigned char *)(v114 + 24) = 0;
  ObservationRegistrar.init()();
  *(void *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_cardMetrics) = v114;
  id v115 = [self standardUserDefaults];
  NSString v116 = String._bridgeToObjectiveC()();
  id v117 = [v115 stringForKey:v116];

  uint64_t v118 = v310;
  if (v117)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v119 = v294;
  Locale.init(identifier:)();
  sub_1001A47C4();
  id v120 = *(void (**)(char *, char *, uint64_t))(v118 + 16);
  uint64_t v121 = v306;
  v120(v306, v119, v103);
  uint64_t v122 = v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__sourceLocale;
  swift_beginAccess();
  v120(v307, v121, v103);
  uint64_t v228 = v122;
  Published.init(initialValue:)();
  char v124 = *(void (**)(char *, uint64_t))(v118 + 8);
  uint64_t v123 = v118 + 8;
  v292 = v124;
  v124(v121, v103);
  swift_endAccess();
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v125 = type metadata accessor for Logger();
  sub_100011554(v125, (uint64_t)qword_10030EAE0);
  uint64_t v126 = v288;
  v120(v288, v119, v103);
  char v127 = Logger.logObject.getter();
  os_log_type_t v128 = static os_log_type_t.debug.getter();
  BOOL v129 = os_log_type_enabled(v127, v128);
  uint64_t v312 = v69;
  uint64_t v310 = v123;
  if (v129)
  {
    uint64_t v130 = (uint8_t *)swift_slowAlloc();
    *(void *)&v314[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v130 = 136315138;
    uint64_t v131 = Locale.languageIdentifier.getter();
    id v313 = (id)sub_100202FD4(v131, v132, (uint64_t *)v314);
    uint64_t v103 = v297;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v133 = v292;
    v292(v126, v103);
    _os_log_impl((void *)&_mh_execute_header, v127, v128, "source locale: %s", v130, 0xCu);
    swift_arrayDestroy();
    uint64_t v69 = v312;
    swift_slowDealloc();
    uint64_t v134 = v302;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v133 = v292;
    v292(v126, v103);

    uint64_t v134 = v302;
  }
  uint64_t v135 = v306;
  v120(v306, v134, v103);
  v227 = (char *)(v69 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel__targetLocale);
  swift_beginAccess();
  v120(v307, v135, v103);
  Published.init(initialValue:)();
  v133(v135, v103);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v136 = v229;
  Published.projectedValue.getter();
  swift_endAccess();
  v311 = (void *)sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  uint64_t v137 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v138 = *(void *)(v137 - 8);
  v305 = *(void (**)(void, void, void, void))(v138 + 56);
  v298 = (void *)(v138 + 56);
  uint64_t v139 = (uint64_t)v267;
  v299 = (char *)v137;
  v305(v267, 1, 1, v137);
  sub_100014894(&qword_1002F2170, &qword_1002F2128);
  v306 = (char *)sub_100022364();
  uint64_t v140 = v232;
  uint64_t v141 = v231;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v230 + 8))(v136, v141);
  swift_allocObject();
  swift_weakInit();
  v307 = (char *)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100014894(&qword_1002FCB60, &qword_1002FCB10);
  uint64_t v142 = v287;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v233 + 8))(v140, v142);
  uint64_t v143 = v312 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_observers;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  unint64_t v144 = v234;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v145 = v237;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F2178, &qword_1002F2110);
  sub_100014894(&qword_1002F2180, &qword_1002F2108);
  uint64_t v146 = v240;
  uint64_t v147 = v236;
  uint64_t v148 = v239;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v238 + 8))(v145, v148);
  (*(void (**)(char *, uint64_t))(v235 + 8))(v144, v147);
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  uint64_t v149 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v305;
  v305(v139, 1, 1, v137);
  v289 = (void (*)(char *, uint64_t))&protocol conformance descriptor for Publishers.CombineLatest<A, B>;
  sub_100014894(&qword_1002F2188, &qword_1002F2118);
  uint64_t v150 = v243;
  uint64_t v151 = v242;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v241 + 8))(v146, v151);
  uint64_t v152 = swift_allocObject();
  swift_weakInit();
  uint64_t v153 = swift_allocObject();
  *(void *)(v153 + 16) = sub_10006E44C;
  *(void *)(v153 + 24) = v152;
  sub_100014894(&qword_1002F2190, &qword_1002F2120);
  uint64_t v154 = v245;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v244 + 8))(v150, v154);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v155 = v300;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  char v156 = v246;
  Published.projectedValue.getter();
  swift_endAccess();
  v288 = (char *)&protocol conformance descriptor for Published<A>.Publisher;
  uint64_t v290 = sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  sub_100014894(&qword_1002F2198, &qword_1002F20F0);
  long long v157 = v248;
  uint64_t v158 = v301;
  uint64_t v159 = v249;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v247 + 8))(v156, v159);
  long long v160 = *(void (**)(char *, uint64_t))(v309 + 8);
  v309 += 8;
  v291 = v160;
  v160(v155, v158);
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  v149(v139, 1, 1, v299);
  sub_100014894(&qword_1002F21A0, &qword_1002F20F8);
  long long v161 = v252;
  uint64_t v162 = v251;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v250 + 8))(v157, v162);
  uint64_t v163 = swift_allocObject();
  swift_weakInit();
  uint64_t v164 = swift_allocObject();
  *(void *)(v164 + 16) = sub_10006E484;
  *(void *)(v164 + 24) = v163;
  sub_100014894(&qword_1002F21A8, &qword_1002F2100);
  uint64_t v165 = v254;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v253 + 8))(v161, v165);
  uint64_t v287 = v143;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100007620(&qword_1002EF7B0);
  long long v166 = v255;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F21B0, &qword_1002F20D0);
  long long v167 = v258;
  uint64_t v168 = v257;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v256 + 8))(v166, v168);
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  uint64_t v169 = v299;
  v170 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v305;
  v305(v139, 1, 1, v299);
  sub_100014894(&qword_1002F21B8, &qword_1002F20D8);
  uint64_t v171 = v259;
  uint64_t v172 = v262;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v260 + 8))(v167, v172);
  sub_100014894(&qword_1002F21C0, &qword_1002F20E0);
  v173 = v264;
  uint64_t v174 = v263;
  Publisher.dropFirst(_:)();
  (*(void (**)(char *, uint64_t))(v261 + 8))(v171, v174);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002F21C8, &qword_1002F20E8);
  uint64_t v175 = v266;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v265 + 8))(v173, v175);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v176 = v300;
  Published.projectedValue.getter();
  swift_endAccess();
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  v170(v139, 1, 1, v169);
  v177 = v278;
  uint64_t v178 = v301;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  v291(v176, v178);
  swift_allocObject();
  swift_weakInit();
  uint64_t v293 = sub_100014894(&qword_1002EF7D8, &qword_1002EF7C0);
  uint64_t v179 = v295;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v180 = *(void (**)(char *, uint64_t))(v303 + 8);
  v303 += 8;
  v289 = v180;
  v180(v177, v179);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100007620(&qword_1002F34A0);
  uint64_t v181 = (uint64_t)v268;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v182 = (uint64_t)v269;
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v183 = (uint64_t)v270;
  LanguagesService.$models.getter();
  uint64_t v184 = sub_1000D2FE8(v181, v182, v183);
  (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v183, v274);
  v185 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
  uint64_t v186 = v182;
  uint64_t v187 = v272;
  v185(v186, v272);
  v185(v181, v187);
  *(void *)&v314[0] = v184;
  id v313 = (id)static OS_dispatch_queue.main.getter();
  v188 = v299;
  v305(v139, 1, 1, v299);
  sub_100007620(&qword_1002F21D0);
  sub_100014894(&qword_1002F21D8, &qword_1002F21D0);
  v189 = v275;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002F21E0, &qword_1002F20C8);
  uint64_t v190 = v277;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v276 + 8))(v189, v190);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v191 = v300;
  Published.projectedValue.getter();
  swift_endAccess();
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  v192 = (void (*)(uint64_t, uint64_t, uint64_t, char *))v305;
  v305(v139, 1, 1, v188);
  uint64_t v193 = v301;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  v291(v191, v193);
  swift_allocObject();
  swift_weakInit();
  uint64_t v194 = v295;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v289(v177, v194);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  v195 = v279;
  LanguagesService.$localeModalities.getter();
  *(void *)&v314[0] = static OS_dispatch_queue.main.getter();
  v192(v139, 1, 1, v188);
  sub_100014894(&qword_1002F21E8, &qword_1002F20B0);
  v196 = v282;
  uint64_t v197 = v281;
  uint64_t v198 = v312;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v139, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v280 + 8))(v195, v197);
  swift_allocObject();
  swift_weakInit();
  sub_100014894(&qword_1002F21F0, &qword_1002F20B8);
  uint64_t v199 = v284;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v283 + 8))(v196, v199);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  *(void *)(*(void *)(v198 + OBJC_IVAR____TtC17SequoiaTranslator27ComposeTranslationViewModel_speechManager)
            + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate
            + 8) = &off_1002CB420;
  swift_unknownObjectWeakAssign();
  id v200 = [self defaultCenter];
  uint64_t v201 = qword_1002EE578;
  swift_retain();
  if (v201 != -1) {
    swift_once();
  }
  [v200 addObserver:v198 selector:"openTranslation:" name:qword_10030E6F8 object:0];

  swift_release();
  uint64_t v202 = v297;
  v203 = v292;
  v292(v302, v297);
  v203(v294, v202);
  return v198;
}

unint64_t sub_10006DAA0(Swift::String string)
{
  id object = string._object;
  v2._id countAndFlagsBits = string._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C8248, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

void sub_10006DAEC()
{
  if (qword_1002EE648 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EAE0);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    Swift::String v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::String v2 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Speech: input detected at %f level.", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_10006DC34()
{
  os_log_type_t v1 = (int *)type metadata accessor for StreamingRequestInfo(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 64)) {
    sub_10000AB68(v0 + 40);
  }
  uint64_t v4 = (v2 + 88) & ~v2;
  uint64_t v12 = v4 + v3;
  swift_release();
  uint64_t v5 = v0 + v4;
  uint64_t v6 = type metadata accessor for UUID();
  char v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v1[6];
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v5 + v1[7], v9);
  v7(v5 + v1[10], v6);

  return _swift_deallocObject(v0, v12, v2 | 7);
}

uint64_t sub_10006DDD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = v1 + 40;
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v10 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000496A4;
  return sub_100067A74(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10006DEEC()
{
  return sub_100067144();
}

uint64_t sub_10006DEF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006DF5C()
{
  uint64_t v1 = (int *)(type metadata accessor for TranslateTip(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v3 + v1[9])) {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10006E080(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TranslateTip(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_100067480(a1, v5, v6, v7, v8);
}

uint64_t sub_10006E17C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E1A4()
{
  return sub_1000694BC();
}

uint64_t sub_10006E1CC@<X0>(void *a1@<X8>)
{
  return sub_1000690B0(a1);
}

uint64_t sub_10006E1F4()
{
  return sub_100069140();
}

uint64_t sub_10006E21C()
{
  return sub_100049140(40);
}

uint64_t sub_10006E224(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_10006728C(a1, v4, v5, v6);
}

uint64_t sub_10006E2D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E300()
{
  return sub_1000694BC();
}

uint64_t sub_10006E328()
{
  return sub_100056CA8();
}

uint64_t sub_10006E350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100056D48(a1, a2, a3, a4, (uint64_t)&unk_10024B630, (uint64_t)&unk_10024B658, (void (*)(uint64_t))sub_100057138);
}

uint64_t sub_10006E38C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000496A4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002F2098 + dword_1002F2098);
  return v6(a1, v4);
}

uint64_t sub_10006E444()
{
  return sub_1000581D8();
}

uint64_t sub_10006E44C(char a1, char a2)
{
  return sub_1000582B4(a1, a2);
}

uint64_t sub_10006E454(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_10006E484(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000583BC(a1, a2, a3);
}

uint64_t sub_10006E48C(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(v1 + 16))(*a1, a1[1], a1[2]);
}

uint64_t sub_10006E4C0()
{
  return sub_100058670();
}

uint64_t sub_10006E4C8(uint64_t a1)
{
  return sub_100058884(a1);
}

uint64_t sub_10006E4D0()
{
  return sub_10005894C();
}

uint64_t sub_10006E4D8()
{
  return sub_1000589D8();
}

uint64_t sub_10006E4E0(void **a1)
{
  return sub_100058A30(a1);
}

void sub_10006E4F0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 24) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_10006E500@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E528()
{
  return sub_1000694BC();
}

uint64_t sub_10006E568@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E590()
{
  return sub_1000694BC();
}

void sub_10006E5B8()
{
  sub_10005A31C(0, 0);

  sub_10005CE58();
}

uint64_t sub_10006E5E8()
{
  return sub_1001FAFC8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10006E5F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006E658(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10006E6B8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E6E0()
{
  return sub_1000694BC();
}

uint64_t sub_10006E708@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E730()
{
  return sub_1000694BC();
}

unint64_t sub_10006E758()
{
  unint64_t result = qword_1002F9750;
  if (!qword_1002F9750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F9750);
  }
  return result;
}

uint64_t sub_10006E7AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10006E800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006E868()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10006E8A0()
{
  return sub_100178430();
}

uint64_t sub_10006E8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  return swift_retain();
}

uint64_t sub_10006E8B8()
{
  return swift_release();
}

uint64_t sub_10006E8C0()
{
  return sub_100061848();
}

unint64_t sub_10006E8E8()
{
  return sub_10005F614();
}

uint64_t sub_10006E924@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000691B8(a1);
}

uint64_t sub_10006E94C()
{
  return sub_10006923C();
}

uint64_t sub_10006E974@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E99C()
{
  return sub_1000694BC();
}

uint64_t sub_10006E9C4@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006E9EC()
{
  return sub_1000694BC();
}

uint64_t sub_10006EA14@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006EA3C()
{
  return sub_1000694BC();
}

unint64_t sub_10006EA64()
{
  return sub_10005F614();
}

uint64_t sub_10006EA98@<X0>(unsigned char *a1@<X8>)
{
  return sub_1000691B8(a1);
}

uint64_t sub_10006EAC0()
{
  return sub_10006923C();
}

uint64_t sub_10006EAE8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_10006EB10()
{
  return sub_1000694BC();
}

uint64_t sub_10006EB38(void **a1)
{
  return sub_10005A1E0(a1);
}

uint64_t sub_10006EB40()
{
  return sub_10005FB44();
}

uint64_t sub_10006EB48()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10006EC14(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100059E10(a1, a2, v6, v7);
}

uint64_t sub_10006EC98()
{
  return sub_100049140(40);
}

uint64_t sub_10006ECA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000496A4;
  return sub_10005FCC0(a1, v4, v5, v6);
}

uint64_t getEnumTagSinglePayload for ComposeTranslationViewModel.OpenInTranslateKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ComposeTranslationViewModel.OpenInTranslateKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006EEC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeTranslationViewModel.OpenInTranslateKeys()
{
  return &type metadata for ComposeTranslationViewModel.OpenInTranslateKeys;
}

unint64_t sub_10006EEFC()
{
  unint64_t result = qword_1002F2228;
  if (!qword_1002F2228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2228);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ComposeTranslationViewModel.SupplementaryControlVisibility(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10006F01CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComposeTranslationViewModel.SupplementaryControlVisibility()
{
  return &type metadata for ComposeTranslationViewModel.SupplementaryControlVisibility;
}

unint64_t sub_10006F058()
{
  unint64_t result = qword_1002F2230;
  if (!qword_1002F2230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2230);
  }
  return result;
}

uint64_t sub_10006F0AC(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100021B58;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1002F2238 + dword_1002F2238);
  return v6(a1, v4);
}

void sub_10006F19C()
{
}

id sub_10006F1B4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_layoutStack;
  id v10 = objc_allocWithZone((Class)UIStackView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_titleLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button;
  uint64_t v14 = self;
  *(void *)&v11[v13] = [v14 buttonWithType:0];
  uint64_t v15 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button;
  *(void *)&v11[v15] = [v14 buttonWithType:0];
  id v16 = [self effectWithStyle:10];
  id v17 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v16];
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_background] = v17;
  uint64_t v18 = (objc_class *)type metadata accessor for SeparatorView();
  objc_allocWithZone(v18);
  id v19 = v16;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator1] = sub_1001A4550(v19);
  id v20 = objc_allocWithZone(v18);
  id v21 = v19;
  *(void *)&v11[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator2] = sub_1001A4550(v21);

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for ConfirmationView();
  id v22 = [super initWithFrame:a1, a2, a3, a4];
  sub_10006F408();
  sub_10006FB54();

  return v22;
}

void sub_10006F408()
{
  uint64_t v1 = self;
  id v2 = [v1 clearColor];
  [v0 setBackgroundColor:v2];

  int v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_layoutStack];
  id v4 = [v1 clearColor];
  [v3 setBackgroundColor:v4];

  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_background];
  id v6 = [v1 clearColor];
  [v5 setBackgroundColor:v6];

  [v0 setClipsToBounds:1];
  id v7 = [v0 layer];
  [v7 setCornerRadius:10.0];

  [v0 addSubview:v5];
  id v8 = [v5 contentView];
  [v8 addSubview:v3];

  [v3 setAxis:1];
  [v3 setAlignment:0];
  [v3 setDistribution:3];
  [v3 setSpacing:10.0];
  [v3 setLayoutMarginsRelativeArrangement:1];
  [v3 setDirectionalLayoutMargins:10.0, 0.0, 10.0, 0.0];
  uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_titleLabel];
  [v3 addArrangedSubview:v9];
  [v3 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator1]];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button];
  [v3 addArrangedSubview:v10];
  [v3 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator2]];
  id v36 = *(id *)&v0[OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button];
  [v3 addArrangedSubview:];
  id v11 = [v1 secondaryLabelColor];
  [v9 setTextColor:v11];

  [v9 setTextAlignment:1];
  [v9 setAdjustsFontForContentSizeCategory:1];
  uint64_t v12 = self;
  id v13 = [v12 preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:0];
  uint64_t v14 = self;
  [v13 pointSize];
  id v15 = [v14 systemFontOfSize:];
  id v16 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleSubheadline];
  id v17 = [v16 scaledFontForFont:v15 maximumPointSize:1.79769313e308];

  [v9 setFont:v17];
  [v9 setAdjustsFontSizeToFitWidth:1];
  [v9 setMinimumScaleFactor:0.1];
  [v9 setNumberOfLines:0];
  LODWORD(v18) = 1132068864;
  [v9 setContentCompressionResistancePriority:1 forAxis:v18];
  id v19 = [v1 labelColor];
  [v10 setTitleColor:v19 forState:0];

  id v20 = [v10 titleLabel];
  if (v20)
  {
    id v21 = v20;
    id v22 = [v12 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
    [v22 pointSize];
    id v23 = [v14 systemFontOfSize:];
    id v24 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
    id v25 = [v24 scaledFontForFont:v23 maximumPointSize:1.79769313e308];

    [v21 setFont:v25];
  }
  id v26 = [v10 titleLabel];
  [v26 setAdjustsFontSizeToFitWidth:1];

  id v27 = [v10 titleLabel];
  [v27 setMinimumScaleFactor:0.1];

  id v28 = [v1 labelColor];
  [v36 setTitleColor:v28 forState:0];

  id v29 = [v36 titleLabel];
  if (v29)
  {
    uint64_t v30 = v29;
    id v31 = [v12 preferredFontDescriptorWithTextStyle:UIFontTextStyleBody compatibleWithTraitCollection:0];
    [v31 pointSize];
    id v32 = [v14 systemFontOfSize:];
    id v33 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleBody];
    id v34 = [v33 scaledFontForFont:v32 maximumPointSize:1.79769313e308];

    [v30 setFont:v34];
  }
  id v35 = [v36 titleLabel];
  [v35 setAdjustsFontSizeToFitWidth:1];

  id v37 = [v36 titleLabel];
  [v37 setMinimumScaleFactor:0.1];
}

void sub_10006FB54()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_background);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_layoutStack);
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10023B960(v2);
  sub_10023B960(v3);
  id v4 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10024BD70;
  id v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator1), "heightAnchor"));
  id v7 = [v6 constraintEqualToConstant:1.0];

  *(void *)(v5 + 32) = v7;
  id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_separator2), "heightAnchor"));
  id v9 = [v8 constraintEqualToConstant:1.0];

  *(void *)(v5 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_titleLabel), "heightAnchor"));
  id v11 = [v10 constraintGreaterThanOrEqualToConstant:37.0];

  *(void *)(v5 + 48) = v11;
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button);
  id v13 = [v12 heightAnchor];
  id v14 = [v13 constraintGreaterThanOrEqualToConstant:44.0];

  *(void *)(v5 + 56) = v14;
  id v15 = [v12 heightAnchor];
  id v16 = [*(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button) heightAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v5 + 64) = v17;
  specialized Array._endMutation()();
  sub_10002AEFC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];
}

id sub_10006FDF8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConfirmationView();
  return [super dealloc];
}

uint64_t type metadata accessor for ConfirmationView()
{
  return self;
}

void sub_10006FEEC()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_layoutStack;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIStackView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v2 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_titleLabel;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v3 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option1Button;
  id v4 = self;
  *(void *)&v0[v3] = [v4 buttonWithType:0];
  uint64_t v5 = OBJC_IVAR____TtC17SequoiaTranslator16ConfirmationView_option2Button;
  *(void *)&v0[v5] = [v4 buttonWithType:0];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t destroy for ConversationBubbleContextMenu(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ConversationBubbleContextMenu(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  uint64_t v5 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v6 = (id)v8;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ConversationBubbleContextMenu(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  uint64_t v4 = (void *)a2[7];
  uint64_t v5 = (void *)a1[7];
  a1[7] = v4;
  id v6 = v4;

  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ConversationBubbleContextMenu(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for ConversationBubbleContextMenu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationBubbleContextMenu(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationBubbleContextMenu(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationBubbleContextMenu()
{
  return &type metadata for ConversationBubbleContextMenu;
}

uint64_t sub_100070354()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100070370@<X0>(char *a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v2 = sub_100007620(&qword_1002F22B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v69 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100007620(&qword_1002F22B8);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v85 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v81 = (char *)&v67 - v7;
  uint64_t v70 = type metadata accessor for Divider();
  uint64_t v78 = *(void *)(v70 - 8);
  uint64_t v8 = __chkstk_darwin(v70);
  uint64_t v86 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  char v76 = (char *)&v67 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v67 - v13;
  __chkstk_darwin(v12);
  uint64_t v75 = (char *)&v67 - v14;
  uint64_t v83 = sub_100007620(&qword_1002F22C0);
  uint64_t v77 = *(void *)(v83 - 8);
  uint64_t v15 = __chkstk_darwin(v83);
  uint64_t v84 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v82 = (char *)&v67 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v74 = (char *)&v67 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v73 = (char *)&v67 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  id v25 = (char *)&v67 - v24;
  __chkstk_darwin(v23);
  id v27 = (char *)&v67 - v26;
  id v28 = (_OWORD *)swift_allocObject();
  long long v29 = v1[3];
  v28[3] = v1[2];
  void v28[4] = v29;
  long long v30 = v1[5];
  uint64_t v28[5] = v1[4];
  unint64_t v28[6] = v30;
  long long v31 = v1[1];
  v28[1] = *v1;
  v28[2] = v31;
  sub_100071794((uint64_t)v1);
  sub_100007620(&qword_1002F22C8);
  sub_100071808();
  uint64_t v68 = v27;
  Button.init(action:label:)();
  Divider.init()();
  id v32 = (_OWORD *)swift_allocObject();
  long long v33 = v1[3];
  void v32[3] = v1[2];
  v32[4] = v33;
  long long v34 = v1[5];
  uint64_t v32[5] = v1[4];
  v32[6] = v34;
  long long v35 = v1[1];
  v32[1] = *v1;
  _OWORD v32[2] = v35;
  sub_100071794((uint64_t)v1);
  id v36 = v25;
  uint64_t v67 = v25;
  Button.init(action:label:)();
  id v37 = (_OWORD *)swift_allocObject();
  long long v38 = v1[3];
  v37[3] = v1[2];
  v37[4] = v38;
  long long v39 = v1[5];
  v37[5] = v1[4];
  v37[6] = v39;
  long long v40 = v1[1];
  v37[1] = *v1;
  v37[2] = v40;
  id v87 = v1;
  sub_100071794((uint64_t)v1);
  sub_100007620(&qword_1002F22D8);
  sub_1000718F8();
  Button.init(action:label:)();
  Divider.init()();
  uint64_t v41 = v69;
  static ButtonRole.destructive.getter();
  uint64_t v42 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
  uint64_t v43 = (_OWORD *)swift_allocObject();
  long long v44 = v1[3];
  v43[3] = v1[2];
  v43[4] = v44;
  long long v45 = v1[5];
  v43[5] = v1[4];
  v43[6] = v45;
  long long v46 = v1[1];
  v43[1] = *v1;
  _OWORD v43[2] = v46;
  sub_100071794((uint64_t)v1);
  uint64_t v47 = v73;
  Button.init(role:action:label:)();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  uint64_t v49 = v74;
  uint64_t v50 = v83;
  v48(v74, v27, v83);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v52 = v76;
  uint64_t v53 = v70;
  v51(v76, v75, v70);
  v48(v82, v36, v50);
  uint64_t v69 = *(char **)(v79 + 16);
  ((void (*)(char *, char *, uint64_t))v69)(v85, v81, v80);
  uint64_t v54 = v53;
  v51(v86, v72, v53);
  uint64_t v55 = v83;
  v48(v84, v47, v83);
  uint64_t v56 = v71;
  v48(v71, v49, v55);
  uint64_t v57 = (int *)sub_100007620(&qword_1002F22E8);
  uint64_t v58 = v52;
  uint64_t v59 = (void (*)(uint64_t, char *, uint64_t))v51;
  v51(&v56[v57[12]], v58, v54);
  v48(&v56[v57[16]], v82, v55);
  uint64_t v60 = v80;
  ((void (*)(char *, char *, uint64_t))v69)(&v56[v57[20]], v85, v80);
  v59((uint64_t)&v56[v57[24]], v86, v54);
  uint64_t v61 = &v56[v57[28]];
  uint64_t v62 = v83;
  v48(v61, v84, v83);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v77 + 8);
  v63(v73, v62);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v78 + 8);
  v64(v72, v54);
  uint64_t v65 = *(void (**)(char *, uint64_t))(v79 + 8);
  v65(v81, v60);
  v63(v67, v62);
  v64(v75, v54);
  v63(v68, v62);
  v63(v84, v62);
  v64(v86, v54);
  v65(v85, v60);
  v63(v82, v62);
  v64(v76, v54);
  return ((uint64_t (*)(char *, uint64_t))v63)(v74, v62);
}

void sub_100070BD4()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self generalPasteboard];
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  static UTType.plainText.getter();
  UTType.identifier.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setValue:v5 forPasteboardType:v6];
}

uint64_t sub_100070D4C()
{
  uint64_t v0 = sub_100007620(&qword_1002EED40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100070E90(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    long long v4 = *(_OWORD *)(a1 + 48);
    sub_100071B34(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
    uint64_t v1 = self;
    swift_retain();
    sub_100071B7C((uint64_t)&v4);
    id v2 = [v1 sharedApplication];
    [v2 sendAction:"resignFirstResponder" to:0 from:0 forEvent:0];

    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_100071B34((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_100070FF8()
{
  uint64_t v0 = sub_100007620(&qword_1002EED40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100071160(uint64_t a1)
{
  uint64_t v1 = *(void (**)(id, uint64_t))(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 48);
  uint64_t v2 = sub_100071B34(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  v1(*((id *)&v4 + 1), v2);
  return sub_1000719D8((uint64_t)&v4);
}

uint64_t sub_1000711EC(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F22F0);
  __chkstk_darwin(v2);
  long long v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002EED40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F22C8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v17 - v13;
  long long v17 = *(_OWORD *)(a1 + 48);
  id v15 = *((id *)&v17 + 1);
  dispatch thunk of PersistedTranslation.isFavorite.getter();
  sub_1000719D8((uint64_t)&v17);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100071A04((uint64_t)v12, (uint64_t)v14);
  sub_100071A6C((uint64_t)v14, (uint64_t)v4);
  swift_storeEnumTagMultiPayload();
  sub_100071808();
  _ConditionalContent<>.init(storage:)();
  return sub_100071AD4((uint64_t)v14);
}

uint64_t sub_100071574(uint64_t a1)
{
  uint64_t v1 = *(void (**)(id, uint64_t))(a1 + 80);
  long long v4 = *(_OWORD *)(a1 + 48);
  uint64_t v2 = sub_100071B34(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  v1(*((id *)&v4 + 1), v2);
  return sub_1000719D8((uint64_t)&v4);
}

uint64_t sub_100071600()
{
  uint64_t v0 = sub_100007620(&qword_1002EED40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  sub_100014894(&qword_1002EED78, &qword_1002EED40);
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100071744@<X0>(char *a1@<X8>)
{
  return sub_100070370(a1);
}

void sub_10007178C()
{
}

uint64_t sub_100071794(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

unint64_t sub_100071808()
{
  unint64_t result = qword_1002F22D0;
  if (!qword_1002F22D0)
  {
    sub_100007928(&qword_1002F22C8);
    sub_100014894(&qword_1002EED78, &qword_1002EED40);
    sub_100071B34((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F22D0);
  }
  return result;
}

uint64_t sub_1000718DC()
{
  return sub_100070E90(v0 + 16);
}

uint64_t sub_1000718E8()
{
  return sub_100071160(v0 + 16);
}

uint64_t sub_1000718F0()
{
  return sub_1000711EC(*(void *)(v0 + 16));
}

unint64_t sub_1000718F8()
{
  unint64_t result = qword_1002F22E0;
  if (!qword_1002F22E0)
  {
    sub_100007928(&qword_1002F22D8);
    sub_100071808();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F22E0);
  }
  return result;
}

uint64_t sub_100071970()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1000719D0()
{
  return sub_100071574(v0 + 16);
}

uint64_t sub_1000719D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100071A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F22C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100071A6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F22C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100071AD4(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F22C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100071B34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100071B7C(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_100071BB0()
{
  return sub_100014894(&qword_1002F22F8, &qword_1002F2300);
}

uint64_t getEnumTagSinglePayload for ConversationBubbleStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for ConversationBubbleStyle()
{
  return &type metadata for ConversationBubbleStyle;
}

unsigned char *storeEnumTagSinglePayload for ConversationBubbleStyle.BubbleAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100071D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationBubbleStyle.BubbleAlignment()
{
  return &type metadata for ConversationBubbleStyle.BubbleAlignment;
}

unint64_t sub_100071D48()
{
  unint64_t result = qword_1002F2308;
  if (!qword_1002F2308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2308);
  }
  return result;
}

uint64_t sub_100071D9C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v73 = a3;
  int v69 = a2 & 1;
  uint64_t v4 = type metadata accessor for ContentShapeKinds();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  __chkstk_darwin(v4);
  uint64_t v70 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F2310);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100007620(&qword_1002F2318);
  __chkstk_darwin(v63);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100007620(&qword_1002F2320);
  __chkstk_darwin(v65);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100007620(&qword_1002F2328);
  __chkstk_darwin(v68);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100007620(&qword_1002F2330);
  __chkstk_darwin(v67);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100007620(&qword_1002F2338);
  __chkstk_darwin(v66);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = static Edge.Set.leading.getter();
  if ((a2 & 1) == 0 && qword_1002EE560 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = sub_100007620(&qword_1002F2340);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v8, v64, v28);
  long long v29 = &v8[*(int *)(v6 + 36)];
  *long long v29 = v19;
  *((void *)v29 + 1) = v21;
  *((void *)v29 + 2) = v23;
  *((void *)v29 + 3) = v25;
  *((void *)v29 + 4) = v27;
  unsigned char v29[40] = 0;
  char v30 = static Edge.Set.trailing.getter();
  char v31 = v69;
  if (v69 && qword_1002EE560 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  sub_10000C3A4((uint64_t)v8, (uint64_t)v10, &qword_1002F2310);
  long long v40 = &v10[*(int *)(v63 + 36)];
  *long long v40 = v30;
  *((void *)v40 + 1) = v33;
  *((void *)v40 + 2) = v35;
  *((void *)v40 + 3) = v37;
  *((void *)v40 + 4) = v39;
  unsigned char v40[40] = 0;
  sub_10000B070((uint64_t)v8, &qword_1002F2310);
  char v41 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_10000C3A4((uint64_t)v10, (uint64_t)v12, &qword_1002F2318);
  uint64_t v50 = &v12[*(int *)(v65 + 36)];
  *uint64_t v50 = v41;
  *((void *)v50 + 1) = v43;
  *((void *)v50 + 2) = v45;
  *((void *)v50 + 3) = v47;
  *((void *)v50 + 4) = v49;
  v50[40] = 0;
  sub_10000B070((uint64_t)v10, &qword_1002F2318);
  id v51 = [self secondarySystemGroupedBackgroundColor];
  uint64_t v52 = Color.init(uiColor:)();
  char v53 = static Edge.Set.all.getter();
  sub_10000C3A4((uint64_t)v12, (uint64_t)v14, &qword_1002F2320);
  uint64_t v54 = &v14[*(int *)(v68 + 36)];
  *(void *)uint64_t v54 = v52;
  v54[8] = v53;
  sub_10000B070((uint64_t)v12, &qword_1002F2320);
  sub_10000C3A4((uint64_t)v14, (uint64_t)v16, &qword_1002F2328);
  uint64_t v55 = &v16[*(int *)(v67 + 36)];
  *uint64_t v55 = v31 ^ 1;
  *((void *)v55 + 1) = 0x4031000000000000;
  *((_WORD *)v55 + 8) = 256;
  sub_10000B070((uint64_t)v14, &qword_1002F2328);
  uint64_t v56 = v70;
  static ContentShapeKinds.contextMenuPreview.getter();
  uint64_t v57 = &v18[*(int *)(v66 + 36)];
  uint64_t v58 = sub_100007620(&qword_1002F2348);
  uint64_t v60 = v71;
  uint64_t v59 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(&v57[*(int *)(v58 + 40)], v56, v72);
  char *v57 = v31 ^ 1;
  *((void *)v57 + 1) = 0x4031000000000000;
  v57[16] = 0;
  sub_10000C3A4((uint64_t)v16, (uint64_t)v18, &qword_1002F2330);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v56, v59);
  sub_10000B070((uint64_t)v16, &qword_1002F2330);
  return sub_1000723A0((uint64_t)v18, v73);
}

uint64_t sub_100072378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100071D9C(a1, *v2, a2);
}

uint64_t sub_100072384()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000723A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F2338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10007240C()
{
  unint64_t result = qword_1002F2350;
  if (!qword_1002F2350)
  {
    sub_100007928(&qword_1002F2338);
    sub_1000724AC();
    sub_100014894(&qword_1002F23A8, &qword_1002F2348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2350);
  }
  return result;
}

unint64_t sub_1000724AC()
{
  unint64_t result = qword_1002F2358;
  if (!qword_1002F2358)
  {
    sub_100007928(&qword_1002F2330);
    sub_10007254C();
    sub_100014894(&qword_1002F2398, &qword_1002F23A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2358);
  }
  return result;
}

unint64_t sub_10007254C()
{
  unint64_t result = qword_1002F2360;
  if (!qword_1002F2360)
  {
    sub_100007928(&qword_1002F2328);
    sub_100072638(&qword_1002F2368, &qword_1002F2320, (void (*)(void))sub_100072610);
    sub_100014894(&qword_1002F2388, &qword_1002F2390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2360);
  }
  return result;
}

uint64_t sub_100072610()
{
  return sub_100072638(&qword_1002F2370, &qword_1002F2318, (void (*)(void))sub_1000726B8);
}

uint64_t sub_100072638(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000726B8()
{
  unint64_t result = qword_1002F2378;
  if (!qword_1002F2378)
  {
    sub_100007928(&qword_1002F2310);
    sub_100014894(&qword_1002F2380, &qword_1002F2340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2378);
  }
  return result;
}

uint64_t destroy for ConversationBubbleWidthManager()
{
  return swift_release();
}

uint64_t initializeWithCopy for ConversationBubbleWidthManager(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ConversationBubbleWidthManager(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ConversationBubbleWidthManager(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationBubbleWidthManager(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationBubbleWidthManager(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationBubbleWidthManager()
{
  return &type metadata for ConversationBubbleWidthManager;
}

uint64_t sub_100072910()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007292C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a1;
  uint64_t v21 = a2;
  uint64_t v3 = sub_100007620(&qword_1002EF500);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002EF508);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100007620(&qword_1002F23B0);
  uint64_t v9 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *(_OWORD *)(v2 + 24);
  sub_100007620(&qword_1002EF470);
  State.wrappedValue.getter();
  double v12 = *(double *)&v22;
  char v13 = *v2;
  if (*v2) {
    uint64_t v14 = static Alignment.trailing.getter();
  }
  else {
    uint64_t v14 = static Alignment.leading.getter();
  }
  sub_10001C7AC(0.0, 1, 0.0, 1, v12 * *((double *)v2 + 2) + *((double *)v2 + 1), 0, 0.0, 1, (uint64_t)v5, 0.0, 1, 0.0, 1, v14, v15);
  if (v13) {
    uint64_t v16 = static Alignment.trailing.getter();
  }
  else {
    uint64_t v16 = static Alignment.leading.getter();
  }
  sub_10001C808(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, 0.0, 1, v16, v17);
  sub_10000B070((uint64_t)v5, &qword_1002EF500);
  long long v22 = *(_OWORD *)(v2 + 24);
  State.projectedValue.getter();
  sub_100072CA4(&qword_1002F23B8, &qword_1002EF508, (void (*)(void))sub_100072C7C);
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  sub_10000B070((uint64_t)v8, &qword_1002EF508);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21, v11, v20);
}

uint64_t sub_100072C54()
{
  return GeometryProxy.size.getter();
}

uint64_t sub_100072C7C()
{
  return sub_100072CA4(&qword_1002F23C0, &qword_1002EF500, (void (*)(void))sub_100072D24);
}

uint64_t sub_100072CA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100072D24()
{
  unint64_t result = qword_1002F23C8;
  if (!qword_1002F23C8)
  {
    sub_100007928(&qword_1002EF510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F23C8);
  }
  return result;
}

uint64_t sub_100072D80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100072E00(unsigned __int8 *a1, char *a2)
{
  return sub_100236EB0(*a1, *a2);
}

Swift::Int sub_100072E0C()
{
  return Hasher._finalize()();
}

uint64_t sub_100072EF0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100072FBC()
{
  return Hasher._finalize()();
}

unint64_t sub_10007309C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100078AC0(*a1);
  *a2 = result;
  return result;
}

void sub_1000730CC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x7465736E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x7469617274726F70;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "conversation");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      *(void *)a1 = 0x73616364616F7262;
      *(void *)(a1 + 8) = 0xE900000000000074;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_100073170(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = 0xE500000000000000;
  uint64_t v15 = 0x7465736E75;
  switch(a1)
  {
    case 1:
      unint64_t v14 = 0xE800000000000000;
      uint64_t v15 = 0x7469617274726F70;
      break;
    case 2:
      uint64_t v15 = 0x61737265766E6F63;
      unint64_t v14 = 0xEC0000006E6F6974;
      break;
    case 3:
      uint64_t v15 = 0x73616364616F7262;
      unint64_t v14 = 0xE900000000000074;
      break;
    default:
      break;
  }
  unint64_t v16 = 0xE500000000000000;
  uint64_t v17 = 0x7465736E75;
  switch(*v2)
  {
    case 1:
      unint64_t v16 = 0xE800000000000000;
      if (v15 == 0x7469617274726F70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v17 = 0x61737265766E6F63;
      unint64_t v16 = 0xEC0000006E6F6974;
      goto LABEL_9;
    case 3:
      unint64_t v16 = 0xE900000000000074;
      if (v15 == 0x73616364616F7262) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v15 != v17) {
        goto LABEL_14;
      }
LABEL_12:
      if (v14 == v16) {
        return swift_bridgeObjectRelease_n();
      }
LABEL_14:
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        uint64_t v20 = 0x7469617274726F70;
        switch(a1)
        {
          case 1:
          case 2:
          case 3:
            char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v21 & 1) == 0)
            {
              uint64_t v22 = type metadata accessor for ConversationContext.ContextMetrics(0);
              sub_1000786D8((uint64_t)&v2[*(int *)(v22 + 24)], (uint64_t)v9);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
              {
                sub_10000B070((uint64_t)v9, &qword_1002F8BA0);
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
                NSString v23 = String._bridgeToObjectiveC()();
                sub_100007620(&qword_1002F2200);
                uint64_t inited = swift_initStackObject();
                uint64_t v25 = inited;
                *(_OWORD *)(inited + 16) = xmmword_1002488D0;
                if (a1 == 1)
                {
                  unint64_t v26 = 0xE800000000000000;
                }
                else if (a1 == 2)
                {
                  uint64_t v20 = 0x61737265766E6F63;
                  unint64_t v26 = 0xEC0000006E6F6974;
                }
                else
                {
                  uint64_t v20 = 0x73616364616F7262;
                  unint64_t v26 = 0xE900000000000074;
                }
                *(void *)(inited + 32) = v20;
                *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v26;
                Date.timeIntervalSinceNow.getter();
                *(void *)(v25 + 48) = [objc_allocWithZone((Class)NSNumber) initWithDouble:-v27];
                sub_1001FF7B4(v25);
                sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
                Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                AnalyticsSendEvent();

                (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
              }
            }
            break;
          default:
            swift_bridgeObjectRelease();
            break;
        }
        id v29 = [self now];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
        uint64_t v30 = type metadata accessor for ConversationContext.ContextMetrics(0);
        return sub_10006E800((uint64_t)v7, (uint64_t)&v2[*(int *)(v30 + 24)]);
      }
      return result;
  }
}

uint64_t sub_100073710(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_100007620(&qword_1002F8BA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v34 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v31 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - v11;
  id v13 = [self now];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = type metadata accessor for ConversationContext.ContextMetrics(0);
  uint64_t v15 = v1 + *(int *)(v14 + 20);
  sub_10000B070(v15, &qword_1002F8BA0);
  uint64_t v32 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 16);
  v32(v15, v12, v7);
  uint64_t v33 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  v33(v15, 0, 1, v7);
  uint64_t v16 = *(int *)(v14 + 24);
  uint64_t v35 = v1;
  uint64_t v17 = v1 + v16;
  sub_1000786D8(v1 + v16, (uint64_t)v6);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v19 = v18(v6, 1, v7);
  uint64_t v37 = v8;
  if (v19 == 1)
  {
    sub_10000B070((uint64_t)v6, &qword_1002F8BA0);
    uint64_t v20 = v12;
  }
  else
  {
    char v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v30 = v14;
    uint64_t v22 = v31;
    v21(v31, v6, v7);
    char v23 = static Date.< infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
    uint64_t v20 = v12;
    if (v23)
    {
LABEL_5:
      sub_10000B070(v17, &qword_1002F8BA0);
      v32(v17, v20, v7);
      v33(v17, 0, 1, v7);
      goto LABEL_6;
    }
  }
  uint64_t v24 = v34;
  sub_1000786D8(v17, v34);
  int v25 = v18((char *)v24, 1, v7);
  sub_10000B070(v24, &qword_1002F8BA0);
  if (v25 == 1) {
    goto LABEL_5;
  }
LABEL_6:
  NSString v26 = String._bridgeToObjectiveC()();
  sub_100007620(&qword_1002F2200);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100247140;
  *(void *)(inited + 32) = 0x6E75614C6C6F6F62;
  *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0xEA00000000006863;
  *(NSNumber *)(inited + 48) = Bool._bridgeToObjectiveC()();
  strcpy((char *)(inited + 56), "favoritesCount");
  *(unsigned char *)(inited + 71) = -18;
  *(NSNumber *)(inited + 72) = Int._bridgeToObjectiveC()();
  sub_1001FF7B4(inited);
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v7);
}

uint64_t sub_100073B68()
{
  uint64_t v1 = sub_100007620(&qword_1002F8BA0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - v4;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = (int *)type metadata accessor for ConversationContext.ContextMetrics(0);
  v0[v12[7]] = 0;
  id v13 = v0;
  sub_1000786D8((uint64_t)&v0[v12[5]], (uint64_t)v5);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v14(v5, 1, v6) == 1) {
    return sub_10000B070((uint64_t)v5, &qword_1002F8BA0);
  }
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v11, v5, v6);
  uint64_t v17 = v12[6];
  uint64_t v18 = v13;
  uint64_t v19 = (uint64_t)&v13[v17];
  uint64_t v20 = v32;
  sub_1000786D8(v19, v32);
  if (v14((char *)v20, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return sub_10000B070(v20, &qword_1002F8BA0);
  }
  else
  {
    char v21 = v31;
    ((void (*)(char *, uint64_t))v16)(v31, v20);
    NSString v22 = String._bridgeToObjectiveC()();
    sub_100007620(&qword_1002F2200);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100247140;
    unint64_t v24 = 0xE500000000000000;
    uint64_t v25 = 0x7465736E75;
    NSString v26 = (void *)inited;
    switch(*v18)
    {
      case 1:
        unint64_t v24 = 0xE800000000000000;
        uint64_t v25 = 0x7469617274726F70;
        break;
      case 2:
        unint64_t v24 = 0xEC0000006E6F6974;
        uint64_t v25 = 0x61737265766E6F63;
        break;
      case 3:
        unint64_t v24 = 0xE900000000000074;
        uint64_t v25 = 0x73616364616F7262;
        break;
      default:
        break;
    }
    *(void *)(inited + 32) = v25;
    *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v24;
    Date.timeIntervalSinceNow.getter();
    v26[6] = [objc_allocWithZone((Class)NSNumber) initWithDouble:-v27];
    v26[7] = 0x6E6F697461727564;
    unsigned char v26[8] = 0xE800000000000000;
    Date.timeIntervalSinceNow.getter();
    v26[9] = [objc_allocWithZone((Class)NSNumber) initWithDouble:-v28];
    sub_1001FF7B4((uint64_t)v26);
    sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    uint64_t v30 = *(void (**)(char *, uint64_t))(v7 + 8);
    v30(v21, v6);
    return ((uint64_t (*)(char *, uint64_t))v30)(v11, v6);
  }
}

uint64_t sub_100073F98()
{
  return sub_10002249C();
}

uint64_t sub_100073FAC()
{
  return sub_10002249C();
}

uint64_t sub_100073FC0()
{
  return sub_10002249C();
}

uint64_t sub_100073FD4()
{
  return sub_10002249C();
}

uint64_t sub_100073FE8()
{
  return sub_10002249C();
}

uint64_t sub_100073FFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100074070()
{
  return sub_10002249C();
}

uint64_t sub_100074084()
{
  return sub_10002249C();
}

uint64_t sub_100074098()
{
  return sub_10002249C();
}

uint64_t sub_1000740AC()
{
  return sub_10002249C();
}

uint64_t sub_1000740C0()
{
  return sub_10002249C();
}

uint64_t sub_1000740D4()
{
  return sub_10002249C();
}

uint64_t sub_1000740E8()
{
  return sub_10002249C();
}

double sub_1000740FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100074170()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000741E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007425C()
{
  return sub_10002249C();
}

double sub_100074270()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000742E8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100074360()
{
  uint64_t v1 = v0;
  uint64_t v155 = sub_100007620(&qword_1002F2BD0);
  uint64_t v156 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v152 = (char *)&v129 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100007620(&qword_1002F2BD8);
  uint64_t v158 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v153 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100007620(&qword_1002F2BE0);
  uint64_t v160 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v154 = (char *)&v129 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v149 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_100007620(&qword_1002F2BE8);
  uint64_t v151 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100007620(&qword_1002F2BF0);
  uint64_t v147 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  unint64_t v144 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620(&qword_1002F2BF8);
  __chkstk_darwin(v9 - 8);
  uint64_t v172 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v179 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  v170 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_100007620(&qword_1002F2C00);
  uint64_t v178 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v171 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TranslationTaskHint();
  uint64_t v176 = *(void *)(v13 - 8);
  uint64_t v177 = v13;
  __chkstk_darwin(v13);
  uint64_t v169 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100007620(&qword_1002F2C08);
  uint64_t v168 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  long long v167 = (char *)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v165 = *(void *)(v16 - 8);
  long long v166 = (void (*)(void, void))v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v164 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v163 = (char *)&v129 - v19;
  uint64_t v162 = (void *)sub_100007620(&qword_1002F2C10);
  uint64_t v161 = *(v162 - 1);
  __chkstk_darwin(v162);
  uint64_t v143 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = (void (*)(char *, uint64_t))sub_100007620(&qword_1002F2C18);
  uint64_t v141 = (void (**)(void, void, void))*((void *)v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v129 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100007620(&qword_1002F2C20);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (char *)&v129 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_100007620(&qword_1002EFE80);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)&v129 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100007620(&qword_1002F9830);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v129 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100007620(&qword_1002F2C28);
  uint64_t v25 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  double v27 = (char *)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v129 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100007620(&qword_1002F2C30);
  uint64_t v145 = v32;
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v129 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v36 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__displayMode;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v36, v35, v32);
  uint64_t v37 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_airplaneModeConfiguration;
  *(void *)(v1 + v37) = [objc_allocWithZone((Class)type metadata accessor for AirplaneModeConfiguration()) init];
  uint64_t v38 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__airplaneModeEnabled;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 32);
  v39(v38, v31, v28);
  uint64_t v40 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__onDeviceModeEnabled;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v40, v31, v28);
  uint64_t v41 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isErrorShowing;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v41, v31, v28);
  uint64_t v42 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__imageTranslationState;
  LOBYTE(v181) = 1;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v42, v27, v130);
  uint64_t v43 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_saveImageEvent;
  sub_100007620(&qword_1002F2C38);
  swift_allocObject();
  *(void *)(v1 + v43) = PassthroughSubject.init()();
  uint64_t v44 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__currentTab;
  long long v181 = 0uLL;
  sub_100007620(&qword_1002F24E8);
  uint64_t v45 = v131;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v132 + 32))(v44, v45, v133);
  uint64_t v46 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__languageDownloadSheetVisible;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v46, v31, v28);
  uint64_t v47 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__pencilActive;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v47, v31, v28);
  uint64_t v48 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__pencilWriting;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v48, v31, v28);
  uint64_t v49 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isCardEditing;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v49, v31, v28);
  uint64_t v50 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__faceToFaceVisible;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v50, v31, v28);
  uint64_t v51 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isHalfScreenMultitasking;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v51, v31, v28);
  uint64_t v52 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isMultitasking;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v52, v31, v28);
  uint64_t v53 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__sceneWidth;
  *(void *)&long long v181 = 0x7FF0000000000000;
  uint64_t v54 = v134;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v135 + 32))(v53, v54, v136);
  uint64_t v55 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__staticImage;
  *(void *)&long long v181 = 0;
  BYTE8(v181) = -1;
  sub_100007620(&qword_1002F24F8);
  uint64_t v56 = v137;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v138 + 32))(v55, v56, v139);
  uint64_t v57 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__broadcastTranslation;
  *(void *)&long long v181 = 0;
  sub_100007620(&qword_1002F2508);
  uint64_t v58 = v140;
  Published.init(initialValue:)();
  ((void (**)(uint64_t, char *, void (*)(char *, uint64_t)))v141)[4](v57, v58, v142);
  uint64_t v59 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__clearConfirmationVisible;
  LOBYTE(v181) = 0;
  Published.init(initialValue:)();
  v39(v59, v31, v28);
  uint64_t v60 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__rootWindowSafeAreaInsets;
  type metadata accessor for UIEdgeInsets(0);
  long long v181 = 0u;
  long long v182 = 0u;
  uint64_t v61 = v143;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, void *))(v161 + 32))(v60, v61, v162);
  uint64_t v62 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__sidebarVisibility;
  uint64_t v63 = v163;
  static NavigationSplitViewVisibility.automatic.getter();
  uint64_t v65 = v165;
  uint64_t v64 = v166;
  (*(void (**)(char *, char *, void (*)(void, void)))(v165 + 16))(v164, v63, v166);
  uint64_t v66 = v167;
  Published.init(initialValue:)();
  (*(void (**)(char *, void))(v65 + 8))(v63, v64);
  (*(void (**)(uint64_t, char *, uint64_t))(v168 + 32))(v62, v66, v175);
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_lastKnownInterfaceOrientation) = 0;
  uint64_t v67 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autodetectSpeech;
  uint64_t KeyPath = swift_getKeyPath();
  int v69 = self;
  id v70 = [v69 standardUserDefaults];
  sub_100007620(&qword_1002F3480);
  swift_allocObject();
  uint64_t v71 = PassthroughSubject.init()();
  *(void *)uint64_t v67 = v70;
  *(void *)(v67 + 8) = KeyPath;
  *(unsigned char *)(v67 + 16) = 1;
  *(void *)(v67 + 24) = v71;
  uint64_t v72 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__continuousListening;
  uint64_t v73 = swift_getKeyPath();
  id v74 = [v69 standardUserDefaults];
  swift_allocObject();
  uint64_t v75 = PassthroughSubject.init()();
  *(void *)uint64_t v72 = v74;
  *(void *)(v72 + 8) = v73;
  *(unsigned char *)(v72 + 16) = 0;
  *(void *)(v72 + 24) = v75;
  uint64_t v76 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autoplayTTS;
  uint64_t v77 = swift_getKeyPath();
  id v78 = [v69 standardUserDefaults];
  swift_allocObject();
  uint64_t v79 = PassthroughSubject.init()();
  *(void *)uint64_t v76 = v78;
  *(void *)(v76 + 8) = v77;
  *(unsigned char *)(v76 + 16) = 0;
  *(void *)(v76 + 24) = v79;
  uint64_t v175 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_subscriptions;
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_subscriptions) = _swiftEmptyArrayStorage;
  uint64_t v80 = v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_metrics;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_metrics) = 0;
  uint64_t v81 = (int *)type metadata accessor for ConversationContext.ContextMetrics(0);
  uint64_t v82 = v80 + v81[5];
  uint64_t v83 = type metadata accessor for Date();
  uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56);
  v84(v82, 1, 1, v83);
  v84(v80 + v81[6], 1, 1, v83);
  *(unsigned char *)(v80 + v81[7]) = 1;
  uint64_t v85 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_languagesService;
  (*(void (**)(char *, void, uint64_t))(v176 + 104))(v169, enum case for TranslationTaskHint.speech(_:), v177);
  type metadata accessor for LanguagesService();
  swift_allocObject();
  *(void *)(v1 + v85) = LanguagesService.init(task:)();
  uint64_t v141 = (void (**)(void, void, void))self;
  id v86 = [v141 defaultCenter];
  id v87 = v170;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v169 = (char *)self;
  *(void *)&long long v181 = [v169 mainRunLoop];
  uint64_t v176 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v88 = *(void *)(v176 - 8);
  long long v167 = *(char **)(v88 + 56);
  uint64_t v168 = v88 + 56;
  uint64_t v89 = (uint64_t)v172;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v172, 1, 1, v176);
  uint64_t v90 = sub_10000B0CC(0, &qword_1002F2C40);
  uint64_t v165 = sub_100078740(&qword_1002FAF50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  uint64_t v177 = sub_10007854C(&qword_1002F2C48, &qword_1002F2C40);
  uint64_t v91 = v171;
  uint64_t v92 = v173;
  uint64_t v164 = (char *)v90;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v89, &qword_1002F2BF8);

  uint64_t v93 = *(void (**)(void, void))(v179 + 8);
  v179 += 8;
  long long v166 = v93;
  v93(v87, v92);
  uint64_t v162 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  uint64_t v143 = (char *)sub_100014894(&qword_1002F2C50, &qword_1002F2C00);
  swift_retain();
  uint64_t v94 = v174;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v95 = *(void (**)(char *, uint64_t))(v178 + 8);
  v178 += 8;
  uint64_t v142 = v95;
  v95(v91, v94);
  swift_beginAccess();
  uint64_t v96 = sub_100007620((uint64_t *)&unk_1002F9850);
  uint64_t v97 = sub_100014894(&qword_1002F2C58, (uint64_t *)&unk_1002F9850);
  uint64_t v161 = v96;
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v98 = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_airplaneModeConfiguration);
  uint64_t v99 = dispatch thunk of AirplaneModeConfiguration.isEnabled.getter();

  *(void *)&long long v181 = v99;
  id v180 = [v169 mainRunLoop];
  uint64_t v100 = v89;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167)(v89, 1, 1, v176);
  sub_100007620(&qword_1002F2C60);
  sub_100014894(&qword_1002F2C68, &qword_1002F2C60);
  unint64_t v101 = v144;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v100, &qword_1002F2BF8);

  swift_release();
  swift_getKeyPath();
  *(void *)&long long v181 = v1;
  sub_100014894(&qword_1002F2C70, &qword_1002F2BF0);
  uint64_t v102 = v146;
  Publisher<>.assign<A>(to:on:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v147 + 8))(v101, v102);
  swift_beginAccess();
  uint64_t v163 = (char *)v97;
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v103 = v141;
  id v104 = [v141 defaultCenter];
  NSString v105 = String._bridgeToObjectiveC()();
  uint64_t v106 = v170;
  NSNotificationCenter.publisher(for:object:)();

  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  *(void *)&long long v181 = static OS_dispatch_queue.main.getter();
  uint64_t v107 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v108 = (uint64_t)v149;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v149, 1, 1, v107);
  sub_10007854C((unint64_t *)&qword_1002F9840, (unint64_t *)&qword_1002EEE30);
  uint64_t v109 = v148;
  uint64_t v110 = v173;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v108, &qword_1002FAEF0);

  v166(v106, v110);
  sub_100014894(&qword_1002F2C78, &qword_1002F2BE8);
  swift_retain();
  uint64_t v111 = v150;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v109, v111);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  id v112 = [v103 defaultCenter];
  id v113 = v106;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v114 = v169;
  *(void *)&long long v181 = [v169 mainRunLoop];
  uint64_t v115 = (uint64_t)v172;
  NSString v116 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v167;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v167)(v172, 1, 1, v176);
  id v117 = v171;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v115, &qword_1002F2BF8);

  v166(v113, v110);
  swift_retain();
  uint64_t v118 = v174;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  v142(v117, v118);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v119 = v152;
  Published.projectedValue.getter();
  swift_endAccess();
  *(void *)&long long v181 = [v114 mainRunLoop];
  v116(v115, 1, 1, v176);
  sub_100014894(&qword_1002F2C80, &qword_1002F2BD0);
  id v120 = v153;
  uint64_t v121 = v155;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v115, &qword_1002F2BF8);

  (*(void (**)(char *, uint64_t))(v156 + 8))(v119, v121);
  sub_100014894(&qword_1002F2C88, &qword_1002F2BD8);
  sub_1000780E8();
  uint64_t v122 = v154;
  uint64_t v123 = v157;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v120, v123);
  sub_100014894(&qword_1002F2C90, &qword_1002F2BE0);
  swift_retain();
  uint64_t v124 = v159;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v122, v124);
  swift_beginAccess();
  AnyCancellable.store<A>(in:)();
  swift_endAccess();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v125 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  LOBYTE(v118) = NSUserDefaults.onDeviceOnly.getter();

  swift_getKeyPath();
  swift_getKeyPath();
  LOBYTE(v181) = v118 & 1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v126 = CFNotificationCenterGetDarwinNotifyCenter();
  char v127 = (__CFString *)String._bridgeToObjectiveC()();
  CFNotificationCenterAddObserver(v126, 0, (CFNotificationCallback)sub_100076344, v127, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v1;
}

uint64_t sub_10007610C()
{
  type metadata accessor for ConversationContext(0);
  sub_100078740(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSUserDefaults.onDeviceOnly.getter();

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_100076210@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_100076224()
{
  return sub_1000694BC();
}

uint64_t sub_100076238()
{
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  uint64_t v0 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  NSUserDefaults.onDeviceOnly.getter();

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000762DC(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = (char *)(a2 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_metrics);
  swift_beginAccess();
  if (v2) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  char v5 = *v3;
  *uint64_t v3 = v4;
  sub_100073170(v5);
  return swift_endAccess();
}

void sub_100076344(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8 = self;
  id v9 = a1;
  id v10 = a3;
  id v11 = a5;
  id v12 = [v8 defaultCenter];
  NSString v13 = String._bridgeToObjectiveC()();
  [v12 postNotificationName:v13 object:0];
}

uint64_t sub_10007641C(void *a1)
{
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autodetectSpeech + 16);
  id v4 = *(id *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autodetectSpeech);
  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  swift_release();

  char v5 = v13;
  if (v13 == 2) {
    char v5 = v3;
  }
  if (v5)
  {
    swift_retain();
    uint64_t v6 = LanguagesService.autoDetectSpeechUnsupportedPairs.getter();
    swift_release();
    id v7 = [a1 canonicalIdentifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    LOBYTE(v7) = sub_1000F8844(v8, v10, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = v7 ^ 1;
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_100076540()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v1) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v1) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v1) = 0;
    swift_retain();
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000767AC()
{
  sub_100013384(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__displayMode;
  uint64_t v2 = sub_100007620(&qword_1002F2C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  uint64_t v3 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__airplaneModeEnabled;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002FCB50);
  char v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__onDeviceModeEnabled, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isErrorShowing, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__imageTranslationState;
  uint64_t v7 = sub_100007620(&qword_1002F2C28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  uint64_t v8 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__currentTab;
  uint64_t v9 = sub_100007620(&qword_1002F9830);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__languageDownloadSheetVisible, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__pencilActive, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__pencilWriting, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isCardEditing, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__faceToFaceVisible, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isHalfScreenMultitasking, v4);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__isMultitasking, v4);
  uint64_t v10 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__sceneWidth;
  uint64_t v11 = sub_100007620(&qword_1002EFE80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__staticImage;
  uint64_t v13 = sub_100007620(&qword_1002F2C20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__broadcastTranslation;
  uint64_t v15 = sub_100007620(&qword_1002F2C18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  v5(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__clearConfirmationVisible, v4);
  uint64_t v16 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__rootWindowSafeAreaInsets;
  uint64_t v17 = sub_100007620(&qword_1002F2C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__sidebarVisibility;
  uint64_t v19 = sub_100007620(&qword_1002F2C08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autodetectSpeech);
  swift_release();
  swift_release();

  uint64_t v21 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__continuousListening);
  swift_release();
  swift_release();

  uint64_t v22 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext__autoplayTTS);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  sub_100078908(v0 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationContext_metrics);
  swift_release();
  return v0;
}

uint64_t sub_100076C44()
{
  sub_1000767AC();

  return swift_deallocClassInstance();
}

uint64_t sub_100076C9C()
{
  return type metadata accessor for ConversationContext(0);
}

uint64_t type metadata accessor for ConversationContext(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F24C0);
}

void sub_100076CC4()
{
  sub_1000219BC(319, &qword_1002F24D0);
  if (v0 <= 0x3F)
  {
    sub_1000219BC(319, (unint64_t *)&qword_1002F9EF0);
    if (v1 <= 0x3F)
    {
      sub_1000219BC(319, &qword_1002F24D8);
      if (v2 <= 0x3F)
      {
        sub_100022CC4(319, &qword_1002F24E0, &qword_1002F24E8);
        if (v3 <= 0x3F)
        {
          sub_1000219BC(319, &qword_1002EF8D8);
          if (v4 <= 0x3F)
          {
            sub_100022CC4(319, &qword_1002F24F0, &qword_1002F24F8);
            if (v5 <= 0x3F)
            {
              sub_100022CC4(319, &qword_1002F2500, &qword_1002F2508);
              if (v6 <= 0x3F)
              {
                sub_100077F7C(319, &qword_1002F2510, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
                if (v7 <= 0x3F)
                {
                  sub_100077F7C(319, (unint64_t *)&unk_1002F2518, (uint64_t (*)(uint64_t))&type metadata accessor for NavigationSplitViewVisibility, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
                  if (v8 <= 0x3F)
                  {
                    type metadata accessor for ConversationContext.ContextMetrics(319);
                    if (v9 <= 0x3F) {
                      swift_updateClassMetadata2();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t type metadata accessor for ConversationContext.ContextMetrics(uint64_t a1)
{
  return sub_1000236B0(a1, (uint64_t *)&unk_1002F2B80);
}

void *sub_1000770C4(char *a1, char *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *unint64_t v4 = *(void *)a2;
    unint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    unint64_t v8 = &a1[v7];
    unint64_t v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100007620(&qword_1002F8BA0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v15 = a3[6];
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = &a2[v15];
    if (v12(&a2[v15], 1, v10))
    {
      uint64_t v18 = sub_100007620(&qword_1002F8BA0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    *((unsigned char *)v4 + a3[7]) = a2[a3[7]];
  }
  return v4;
}

uint64_t sub_1000772E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v5 - 8);
  unint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

unsigned char *sub_10007741C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100007620(&qword_1002F8BA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_1000775F0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007620(&qword_1002F8BA0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_100077880(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if (v11(&a2[v13], 1, v9))
  {
    uint64_t v16 = sub_100007620(&qword_1002F8BA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_100077A54(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  unint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100007620(&qword_1002F8BA0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v16, v17, v9);
      goto LABEL_13;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100007620(&qword_1002F8BA0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v16, v17, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
LABEL_13:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_100077CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100077CF8);
}

uint64_t sub_100077CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F8BA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100077DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100077DE4);
}

uint64_t sub_100077DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F8BA0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

void sub_100077EA8()
{
  sub_100077F7C(319, (unint64_t *)&qword_1002F2B90, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100077F7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConversationContext.DisplayMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000780ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationContext.DisplayMode()
{
  return &type metadata for ConversationContext.DisplayMode;
}

unint64_t sub_1000780E8()
{
  unint64_t result = qword_1002F2BC8;
  if (!qword_1002F2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2BC8);
  }
  return result;
}

uint64_t sub_10007813C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ConversationContext(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10007817C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1000781F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NavigationSplitViewVisibility();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

void sub_100078368(void **a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100078384(unsigned char *a1, void **a2)
{
}

void sub_1000783B4(void **a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1000783D0(unsigned char *a1, void **a2)
{
}

void sub_100078400(void **a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100078420(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  NSString v4 = String._bridgeToObjectiveC()();
  LOBYTE(v3) = [v3 BOOLForKey:v4];

  *a2 = (_BYTE)v3;
}

void sub_10007847C(unsigned char *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1 == 2) {
    Class isa = 0;
  }
  else {
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setObject:isa forKey:v4];
  swift_unknownObjectRelease();
}

void sub_100078518(unsigned char *a1, void **a2)
{
}

uint64_t sub_10007854C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000B0CC(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100078590()
{
  return sub_10007610C();
}

uint64_t sub_100078598@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000785C0()
{
  return sub_1000694BC();
}

uint64_t sub_1000785E8()
{
  return sub_100076238();
}

uint64_t sub_100078604(unsigned __int8 *a1)
{
  return sub_1000762DC(a1, v1);
}

uint64_t sub_10007860C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100078688@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000786B0()
{
  return sub_1000694BC();
}

uint64_t sub_1000786D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F8BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100078740(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100078790@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100078814(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_100078908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConversationContext.ContextMetrics(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ConversationContext.ContextMetrics.AppUIMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100078A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationContext.ContextMetrics.AppUIMode()
{
  return &type metadata for ConversationContext.ContextMetrics.AppUIMode;
}

unint64_t sub_100078A6C()
{
  unint64_t result = qword_1002F2C98;
  if (!qword_1002F2C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2C98);
  }
  return result;
}

unint64_t sub_100078AC0(Swift::String string)
{
  id object = string._object;
  v2._id countAndFlagsBits = string._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C82F8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_100078B0C()
{
  return ViewDimensions.subscript.getter();
}

uint64_t sub_100078B38()
{
  sub_10007F3C0();
  uint64_t result = VerticalAlignment.init(_:)();
  qword_10030E778 = result;
  return result;
}

uint64_t sub_100078B68()
{
  int v1 = v0[48];
  if (v1 == 2)
  {
    int v2 = v0[49];
    if (v2 == 2)
    {
      int v3 = v0[51];
      BOOL v4 = v3 == 2 || (v3 & 1) == 0;
    }
    else
    {
      BOOL v4 = (v2 & 1) == 0;
    }
  }
  else
  {
    BOOL v4 = v1 & 1;
  }
  return (v4 ^ v0[50]) & 1;
}

void sub_100078BBC(uint64_t *a1@<X8>)
{
  int v3 = *(unsigned __int8 *)(v1 + 49);
  if (v3 == 2) {
    goto LABEL_5;
  }
  BOOL v4 = *(void **)(v1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v5 = v4;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = v11;
  uint64_t v7 = v12;
  uint64_t v8 = v13;
  uint64_t v9 = v14;
  uint64_t v10 = v15;
  if (!v13)
  {

    goto LABEL_7;
  }
  uint64_t v6 = v11 & 1;

  if (v6 != (v3 & 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
LABEL_7:
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
}

uint64_t sub_100078CB0()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = __chkstk_darwin(v1);
  BOOL v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v25 - v6;
  if (*(void *)(v0 + 32))
  {
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v26 = v5;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
    swift_unknownObjectRetain();
    v10(ObjectType, v8);
    uint64_t v25 = Locale.identifier.getter();
    uint64_t v12 = v11;
    uint64_t v13 = *(void (**)(char *, uint64_t))(v26 + 8);
    v13(v7, v1);
    uint64_t v26 = v0;
    uint64_t v14 = *(void **)(v0 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v15 = v14;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v16 = Locale.identifier.getter();
    uint64_t v18 = v17;
    v13(v4, v1);
    BOOL v19 = v25 == v16 && v12 == v18;
    if (v19)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
      int v21 = 0;
    }
    else
    {
      int v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      int v21 = v20 ^ 1;
    }
    uint64_t v0 = v26;
  }
  else
  {
    int v22 = *(unsigned __int8 *)(v0 + 49);
    if (v22 == 2)
    {
      int v23 = *(unsigned __int8 *)(v0 + 51);
      BOOL v19 = v23 == 2;
      int v21 = v23 & 1;
      if (v19) {
        int v21 = 0;
      }
    }
    else
    {
      int v21 = v22 & 1;
    }
  }
  return (v21 ^ *(unsigned __int8 *)(v0 + 50)) & 1;
}

id sub_100078F18()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v35 = v0;
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = v4;
    uint64_t v9 = v2;
    uint64_t v10 = v1;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 64);
    swift_unknownObjectRetain();
    v11(ObjectType, v6);
    uint64_t v1 = v10;
    uint64_t v2 = v9;
    BOOL v4 = v8;
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100078BBC(v38);
    sub_10001323C((uint64_t)v38, (uint64_t)v39, &qword_1002F2E18);
    if (v40)
    {
      swift_bridgeObjectRelease();
    }
    else if (*(unsigned char *)(v0 + 51) != 2)
    {
      uint64_t v12 = v1;
      uint64_t v13 = *(void **)(v0 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      id v14 = v13;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      if (((v36 | (v37 << 16)) & 0xFF0000) != 0x80000)
      {
        sub_100009AF8(HIBYTE(v36));
        sub_100007620(&qword_1002FC3D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1002488D0;
        *(void *)(inited + 32) = NSForegroundColorAttributeName;
        uint64_t v31 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
        uint64_t v32 = NSForegroundColorAttributeName;
        uint64_t v33 = static UIColor.quaternarySourceTextColor.getter();
        *(void *)(inited + 64) = v31;
        *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v33;
        sub_1001FF520(inited);
        id v34 = objc_allocWithZone((Class)NSAttributedString);
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_10007EF64((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
        v27.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v28 = [v34 initWithString:v26 attributes:v27.super.isa];
        goto LABEL_13;
      }
      uint64_t v1 = v12;
    }
  }
  id v15 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  if (v5
    && (uint64_t v16 = *(void *)(v35 + 40),
        uint64_t v17 = swift_getObjectType(),
        (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16),
        Swift::Bool v18 = Locale.isRTL()(),
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1),
        v18))
  {
    uint64_t v19 = 2;
  }
  else
  {
    uint64_t v19 = 0;
  }
  [v15 setAlignment:v19, v35];
  sub_100007620(&qword_1002FC3D0);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_100247140;
  *(void *)(v20 + 32) = NSForegroundColorAttributeName;
  uint64_t v21 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  int v22 = NSForegroundColorAttributeName;
  *(void *)(v20 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = static UIColor.sourceTextColor.getter();
  *(void *)(v20 + 64) = v21;
  *(void *)(v20 + 72) = NSParagraphStyleAttributeName;
  *(void *)(v20 + 104) = sub_10000B0CC(0, &qword_1002F2E20);
  *(void *)(v20 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v15;
  int v23 = NSParagraphStyleAttributeName;
  id v24 = v15;
  sub_1001FF520(v20);
  id v25 = objc_allocWithZone((Class)NSAttributedString);
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10007EF64((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
  v27.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v28 = [v25 initWithString:v26 attributes:v27.super.isa];

LABEL_13:
  return v28;
}

id sub_10007942C()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0[4];
  if (v5)
  {
    uint64_t v32 = v1;
    uint64_t v6 = v0[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 72);
    swift_unknownObjectRetain();
    v8(ObjectType, v6);
    swift_unknownObjectRelease();
  }
  else
  {
    id v24 = (void *)v0[1];
    swift_getKeyPath();
    swift_getKeyPath();
    id v25 = v24;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    if (((v34 | (v35 << 16)) & 0xFF0000) != 0x80000)
    {
      sub_100009AF8(HIBYTE(v34));
      sub_100007620(&qword_1002FC3D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1002488D0;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v27 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
      id v28 = NSForegroundColorAttributeName;
      uint64_t v29 = static UIColor.quaternaryTranslateAccentColor.getter();
      *(void *)(inited + 64) = v27;
      *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v29;
      sub_1001FF520(inited);
      id v30 = objc_allocWithZone((Class)NSAttributedString);
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_10007EF64((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
      v21.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v22 = [v30 initWithString:v20 attributes:v21.super.isa];
      goto LABEL_8;
    }
    uint64_t v32 = v1;
    sub_100078BBC(v33);
    sub_10001323C((uint64_t)v33, (uint64_t)&v34, &qword_1002F2E18);
    if (v36) {
      swift_bridgeObjectRelease();
    }
  }
  id v9 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
  if (v5
    && (uint64_t v10 = v0[5],
        uint64_t v11 = swift_getObjectType(),
        (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v11, v10),
        Swift::Bool v12 = Locale.isRTL()(),
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v32),
        v12))
  {
    uint64_t v13 = 2;
  }
  else
  {
    uint64_t v13 = 0;
  }
  [v9 setAlignment:v13];
  sub_100007620(&qword_1002FC3D0);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = xmmword_100247140;
  *(void *)(v14 + 32) = NSForegroundColorAttributeName;
  uint64_t v15 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  uint64_t v16 = NSForegroundColorAttributeName;
  *(void *)(v14 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = static UIColor.targetTextColor.getter();
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = NSParagraphStyleAttributeName;
  *(void *)(v14 + 104) = sub_10000B0CC(0, &qword_1002F2E20);
  *(void *)(v14 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  uint64_t v17 = NSParagraphStyleAttributeName;
  id v18 = v9;
  sub_1001FF520(v14);
  id v19 = objc_allocWithZone((Class)NSAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10007EF64((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
  v21.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [v19 initWithString:v20 attributes:v21.super.isa];

LABEL_8:
  return v22;
}

id sub_10007990C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v31 - v7;
  id v9 = 0;
  int v10 = *(unsigned __int8 *)(v1 + 50);
  if (v10 != 2)
  {
    int v11 = v10 & 1;
    uint64_t v12 = *(void *)(v1 + 32);
    if (v12)
    {
      uint64_t v13 = *(void *)(v1 + 40);
      v31[1] = v10 & 1;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 32);
      swift_unknownObjectRetain();
      uint64_t v32 = v12;
      v15(ObjectType, v13);
      uint64_t v16 = Locale.identifier.getter();
      uint64_t v18 = v17;
      id v19 = *(void (**)(char *, uint64_t))(v3 + 8);
      v19(v8, v2);
      NSString v20 = *(void **)(v1 + 8);
      swift_getKeyPath();
      swift_getKeyPath();
      id v22 = v20;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      uint64_t v23 = Locale.identifier.getter();
      uint64_t v25 = v24;
      v19(v6, v2);
      if (v16 == v23 && v18 == v25)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          id v28 = sub_10007942C();
LABEL_14:
          id v9 = v28;
          swift_unknownObjectRelease();
          return v9;
        }
      }
      id v28 = sub_100078F18();
      goto LABEL_14;
    }
    int v21 = *(unsigned __int8 *)(v1 + 49);
    if (v21 == 2)
    {
      return 0;
    }
    else if ((v21 & 1) == v11)
    {
      return sub_100078F18();
    }
    else
    {
      return sub_10007942C();
    }
  }
  return v9;
}

uint64_t sub_100079BA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Locale();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 50) == 2)
  {
    type metadata accessor for ConversationDisplayBubble();
    return sub_10010041C(a1);
  }
  else
  {
    uint64_t v8 = *(void **)(v1 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LOBYTE(v8) = Locale.isRTL()();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v10 = type metadata accessor for LayoutDirection();
    if (v8) {
      int v11 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
    }
    else {
      int v11 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(a1, *v11, v10);
  }
}

BOOL sub_100079D68()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
    uint64_t v2 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (!v2)
  {
    if (!v10) {
      goto LABEL_12;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v10) {
    goto LABEL_10;
  }
  if (v5 == v9 && v2 == v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
LABEL_12:
  if (*(unsigned char *)(v1 + 50) == 2) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  return v9 == sub_100078CB0();
}

uint64_t sub_100079F48()
{
  if (!*(void *)(v0 + 32)) {
    return 0;
  }
  type metadata accessor for PersistedTranslation();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1)
  {
    uint64_t v3 = qword_1002EE5D0;
    swift_unknownObjectRetain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030E978);
    swift_unknownObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136446210;
      swift_getObjectType();
      uint64_t v8 = _typeName(_:qualified:)();
      sub_100202FD4(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
        v7,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return 0;
  }
  uint64_t v2 = v1;
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_10007A13C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (id *)((char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)v18 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t result = sub_10007F350(v1, (uint64_t)v18 - v9, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  if (!v11)
  {
    sub_10007EFAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    sub_10007F350(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    goto LABEL_6;
  }
  if (*((void *)v10 + 4))
  {
    uint64_t v13 = *((void *)v10 + 5);
    uint64_t ObjectType = swift_getObjectType();
    char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(ObjectType, v13);
    sub_10007EFAC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    sub_10007F350(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    if (v15)
    {
      unsigned __int8 v16 = 1;
LABEL_10:
      sub_10007EFAC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
      return v16 & 1;
    }
LABEL_6:
    sub_100078BBC(v18);
    sub_10007F414(v18);
    sub_10007F350((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    sub_10001323C((uint64_t)v18, (uint64_t)v19, &qword_1002F2E18);
    if (v20)
    {
      id v17 = v5[1];
      unsigned __int8 v16 = sub_1000A8060();
    }
    else
    {
      unsigned __int8 v16 = 0;
    }
    sub_10007EFAC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007A370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620(&qword_1002F2D90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F2D98);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F2DA0);
  uint64_t v86 = *(void *)(v10 - 8);
  uint64_t v87 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100007620(&qword_1002F2DA8);
  __chkstk_darwin(v85);
  uint64_t v89 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100007620(&qword_1002F2DB0);
  uint64_t v14 = __chkstk_darwin(v93);
  uint64_t v88 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v90 = (uint64_t)&v79 - v16;
  uint64_t v91 = sub_100007620(&qword_1002F2DB8);
  __chkstk_darwin(v91);
  uint64_t v92 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v81 = *(void *)(v83 - 8);
  uint64_t v18 = *(void *)(v81 + 64);
  uint64_t v19 = __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v84 = (uint64_t)&v79 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v79 - v23;
  __chkstk_darwin(v22);
  NSString v26 = (char *)&v79 - v25;
  id v27 = sub_10007990C();

  sub_10007F350(v2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  uint64_t v94 = a1;
  if (v27)
  {
    sub_10007EFAC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    sub_10007F350(v2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    uint64_t v28 = v2;
LABEL_7:
    sub_10007EFAC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    goto LABEL_8;
  }
  id v29 = sub_100078F18();
  id v30 = [v29 string];

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v80 = v7;
  uint64_t v32 = v12;
  unint64_t v34 = v33;

  swift_bridgeObjectRelease();
  uint64_t v35 = HIBYTE(v34) & 0xF;
  BOOL v36 = (v34 & 0x2000000000000000) == 0;
  uint64_t v12 = v32;
  uint64_t v7 = v80;
  if (v36) {
    uint64_t v37 = v31 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v37 = v35;
  }
  sub_10007EFAC((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  sub_10007F350(v2, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  uint64_t v28 = v2;
  if (v37) {
    goto LABEL_7;
  }
  id v72 = sub_10007942C();
  id v73 = [v72 string];

  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v76 = v75;

  swift_bridgeObjectRelease();
  uint64_t v77 = HIBYTE(v76) & 0xF;
  BOOL v36 = (v76 & 0x2000000000000000) == 0;
  uint64_t v28 = v2;
  uint64_t v7 = v80;
  if (v36) {
    uint64_t v78 = v74 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v78 = v77;
  }
  sub_10007EFAC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  if (!v78)
  {
    swift_storeEnumTagMultiPayload();
    sub_10007E944();
    return _ConditionalContent<>.init(storage:)();
  }
LABEL_8:
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v38 = sub_100007620(&qword_1002F2DC0);
  sub_10007ACE8(v28, (uint64_t)&v6[*(int *)(v38 + 44)]);
  char v39 = sub_100078B68();
  sub_10000C3A4((uint64_t)v6, (uint64_t)v9, &qword_1002F2D90);
  uint64_t v40 = &v9[*(int *)(v7 + 36)];
  *uint64_t v40 = v39;
  *((void *)v40 + 1) = 0x4030000000000000;
  uint64_t v41 = sub_10000B070((uint64_t)v6, &qword_1002F2D90);
  __chkstk_darwin(v41);
  *(&v79 - 2) = v28;
  sub_100007620(&qword_1002F2DC8);
  sub_10007E6AC();
  sub_10007E7A0();
  View.contextMenu<A>(menuItems:)();
  sub_10000B070((uint64_t)v9, &qword_1002F2D98);
  uint64_t v42 = *(void *)(v28 + 32);
  uint64_t v43 = v84;
  sub_10007F350(v28, v84, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  if (v42) {
    BOOL v44 = *(unsigned __int8 *)(v43 + 51) != 2;
  }
  else {
    BOOL v44 = 1;
  }
  LODWORD(v8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v44;
  uint64_t v46 = (uint64_t)v82;
  uint64_t v45 = v83;
  uint64_t v47 = v81;
  uint64_t v48 = v12;
  sub_10007EFAC(v43, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  LODWORD(v84) = sub_100079D68();
  if (!*(void *)(v28 + 32)
    || (uint64_t v49 = *(void *)(v28 + 40),
        uint64_t ObjectType = swift_getObjectType(),
        int v51 = sub_1000CDBD0(ObjectType, v49),
        v51 == 4))
  {
    int v51 = 2;
  }
  LODWORD(v83) = v51;
  sub_10007F350(v28, v46, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  unint64_t v52 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v53 = swift_allocObject();
  sub_10007E86C(v46, v53 + v52);
  LODWORD(v81) = sub_100078B68();
  uint64_t v54 = (uint64_t *)(v28 + *(int *)(v45 + 56));
  uint64_t v55 = v54[1];
  uint64_t v95 = *v54;
  uint64_t v96 = v55;
  uint64_t v82 = (char *)sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  uint64_t v56 = v97;
  uint64_t v57 = v98;
  uint64_t v58 = v99;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v59 = static VerticalAlignment.center.getter();
  uint64_t v61 = v86;
  uint64_t v60 = v87;
  uint64_t v62 = (uint64_t)v89;
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v89, v48, v87);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v63 = v62 + *(int *)(v85 + 36);
  *(unsigned char *)uint64_t v63 = v80;
  *(unsigned char *)(v63 + 1) = v84 & 1;
  *(unsigned char *)(v63 + 2) = v83;
  *(void *)(v63 + 8) = sub_10007E8D0;
  *(void *)(v63 + 16) = v53;
  *(unsigned char *)(v63 + 24) = v81;
  *(void *)(v63 + 32) = v59;
  *(void *)(v63 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  *(void *)(v63 + 48) = v56;
  *(void *)(v63 + 56) = v57;
  *(void *)(v63 + 64) = v58;
  *(void *)(v63 + 72) = 0x4020000000000000;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v60);
  LOBYTE(v6UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = sub_100078B68();
  uint64_t v64 = v54[1];
  uint64_t v97 = *v54;
  uint64_t v98 = v64;
  State.wrappedValue.getter();
  uint64_t v65 = v95;
  uint64_t v95 = 0x4079000000000000;
  State.init(wrappedValue:)();
  uint64_t v66 = v97;
  uint64_t v67 = v98;
  uint64_t v68 = v88;
  sub_10000C3A4(v62, v88, &qword_1002F2DA8);
  uint64_t v69 = v68 + *(int *)(v93 + 36);
  *(unsigned char *)uint64_t v69 = v60;
  *(void *)(v69 + 8) = v65;
  *(void *)(v69 + 16) = 0x3FE8000000000000;
  *(void *)(v69 + 24) = v66;
  *(void *)(v69 + 32) = v67;
  sub_10000B070(v62, &qword_1002F2DA8);
  uint64_t v70 = v90;
  sub_10001323C(v68, v90, &qword_1002F2DB0);
  sub_10000C3A4(v70, v92, &qword_1002F2DB0);
  swift_storeEnumTagMultiPayload();
  sub_10007E944();
  _ConditionalContent<>.init(storage:)();
  return sub_10000B070(v70, &qword_1002F2DB0);
}

uint64_t sub_10007ACE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v254 = a2;
  uint64_t v255 = sub_100007620(&qword_1002F2E40);
  __chkstk_darwin(v255);
  uint64_t v243 = (uint64_t)&v203 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for Divider();
  uint64_t v231 = *(void *)(v233 - 8);
  __chkstk_darwin(v233);
  uint64_t v230 = (char *)&v203 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = sub_100007620(&qword_1002F2E48);
  __chkstk_darwin(v229);
  uint64_t v235 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = sub_100007620(&qword_1002F2E50);
  uint64_t v6 = __chkstk_darwin(v234);
  uint64_t v228 = (char *)&v203 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v232 = (uint64_t)&v203 - v9;
  __chkstk_darwin(v8);
  uint64_t v236 = (uint64_t)&v203 - v10;
  uint64_t v244 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v225 = *(void *)(v244 - 8);
  uint64_t v11 = __chkstk_darwin(v244);
  uint64_t v242 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v226 = v12;
  __chkstk_darwin(v11);
  uint64_t v241 = (unsigned __int8 *)&v203 - v13;
  uint64_t v14 = sub_100007620(&qword_1002F2E58);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v238 = (char *)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v246 = (char *)&v203 - v17;
  uint64_t v258 = type metadata accessor for Locale();
  uint64_t v256 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  v237 = (char *)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v251 = sub_100007620(&qword_1002F2E60);
  __chkstk_darwin(v251);
  uint64_t v253 = (uint64_t)&v203 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v252 = sub_100007620(&qword_1002F2E68);
  uint64_t v20 = __chkstk_darwin(v252);
  uint64_t v249 = (char *)&v203 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v250 = (char *)&v203 - v22;
  uint64_t v257 = type metadata accessor for LayoutDirection();
  uint64_t v259 = *(void *)(v257 - 8);
  uint64_t v23 = __chkstk_darwin(v257);
  v227 = (char *)&v203 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  v248 = (char *)&v203 - v26;
  __chkstk_darwin(v25);
  v240 = (char *)&v203 - v27;
  uint64_t v28 = (int *)type metadata accessor for LanguageAwareText(0);
  __chkstk_darwin(v28);
  id v30 = (char *)&v203 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v245 = sub_100007620(&qword_1002F2E70);
  uint64_t v247 = *(void *)(v245 - 8);
  uint64_t v31 = __chkstk_darwin(v245);
  unint64_t v33 = (char *)&v203 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v239 = (char *)&v203 - v34;
  uint64_t v35 = sub_100007620(&qword_1002F2E78);
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v203 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v203 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  BOOL v44 = (char *)&v203 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v203 - v46;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v203 - v48;
  uint64_t v260 = a1;
  id v50 = sub_10007990C();
  if (v50)
  {
    int v51 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v256 + 56))(&v30[v28[6]], 1, 1, v258);
    unint64_t v52 = self;
    id v53 = v51;
    id v54 = [v52 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2 compatibleWithTraitCollection:0];
    uint64_t v55 = self;
    [v54 pointSize];
    id v56 = [v55 systemFontOfSize:];
    id v57 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleTitle2];
    id v58 = [v57 scaledFontForFont:v56 maximumPointSize:1.79769313e308];

    double v59 = sub_1001A5388();
    type metadata accessor for LanguageAwareTextViewSizeThatFitsCache();
    uint64_t v60 = (void *)swift_allocObject();
    v60[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
    v60[3] = _swiftEmptyArrayStorage;
    v60[4] = 100;
    *(void *)id v30 = v51;
    *(_OWORD *)(v30 + 8) = xmmword_10024C780;
    *(void *)&v30[v28[7]] = v58;
    v30[v28[8]] = 0;
    *(void *)&v30[v28[9]] = 0;
    *(double *)&v30[v28[10]] = v59;
    v30[v28[11]] = 0;
    uint64_t v61 = &v30[v28[12]];
    *(void *)uint64_t v61 = 0;
    *((void *)v61 + 1) = 0;
    v61[16] = 1;
    uint64_t v62 = &v30[v28[13]];
    *(void *)uint64_t v62 = 0;
    *((void *)v62 + 1) = 0;
    *(void *)&v30[v28[14]] = 0;
    v30[v28[15]] = 0;
    uint64_t v63 = &v30[v28[16]];
    *(void *)uint64_t v63 = 0;
    *((void *)v63 + 1) = 0;
    uint64_t v64 = &v30[v28[17]];
    *(void *)uint64_t v64 = 0;
    *((void *)v64 + 1) = 0;
    uint64_t v65 = &v30[v28[18]];
    *(void *)uint64_t v65 = 0;
    *((void *)v65 + 1) = 0;
    *(void *)&v30[v28[19]] = 0;
    v30[v28[20]] = 0;
    uint64_t v66 = &v30[v28[21]];
    *(void *)uint64_t v66 = 0;
    *((void *)v66 + 1) = 0;
    *(void *)&v30[v28[22]] = v60;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v68 = (uint64_t)v248;
    sub_100079BA8((uint64_t)v248);
    uint64_t v69 = (uint64_t)v249;
    uint64_t v70 = (uint64_t *)&v249[*(int *)(v252 + 36)];
    uint64_t v71 = sub_100007620(&qword_1002EF468);
    uint64_t v72 = v259;
    uint64_t v73 = v257;
    (*(void (**)(char *, uint64_t, uint64_t))(v259 + 16))((char *)v70 + *(int *)(v71 + 28), v68, v257);
    *uint64_t v70 = KeyPath;
    sub_10007F350((uint64_t)v30, v69, type metadata accessor for LanguageAwareText);
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v68, v73);
    sub_10007EFAC((uint64_t)v30, type metadata accessor for LanguageAwareText);
    uint64_t v74 = (uint64_t)v250;
    sub_10001323C(v69, (uint64_t)v250, &qword_1002F2E68);
    sub_10000C3A4(v74, v253, &qword_1002F2E68);
    swift_storeEnumTagMultiPayload();
    sub_10007F014();
    sub_100014894(&qword_1002F2E98, &qword_1002F2E40);
    _ConditionalContent<>.init(storage:)();

    uint64_t v75 = v74;
    unint64_t v76 = &qword_1002F2E68;
    return sub_10000B070(v75, v76);
  }
  uint64_t v224 = v47;
  uint64_t v249 = (char *)v35;
  v220 = v41;
  uint64_t v222 = v33;
  uint64_t v221 = v44;
  v248 = v38;
  uint64_t v250 = v49;
  uint64_t v77 = v260;
  *(void *)&long long v223 = sub_100078F18();
  uint64_t v78 = &v30[v28[6]];
  uint64_t v79 = v256;
  uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v256 + 56);
  uint64_t v81 = v258;
  uint64_t v218 = v256 + 56;
  v217 = v80;
  v80((uint64_t)v78, 1, 1, v258);
  id v216 = self;
  id v82 = [v216 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2 compatibleWithTraitCollection:0];
  uint64_t v83 = self;
  [v82 pointSize];
  id v215 = v83;
  id v84 = [v83 systemFontOfSize:];
  id v85 = objc_allocWithZone((Class)UIFontMetrics);
  UIFontTextStyle v219 = UIFontTextStyleTitle2;
  id v86 = [v85 initForTextStyle:UIFontTextStyleTitle2];
  id v87 = [v86 scaledFontForFont:v84 maximumPointSize:1.79769313e308];

  double v88 = sub_1001A5388();
  uint64_t v214 = type metadata accessor for LanguageAwareTextViewSizeThatFitsCache();
  uint64_t v89 = (void *)swift_allocObject();
  v89[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
  _DWORD v89[3] = _swiftEmptyArrayStorage;
  v89[4] = 100;
  *(void *)id v30 = v223;
  long long v223 = xmmword_10024C780;
  *(_OWORD *)(v30 + 8) = xmmword_10024C780;
  *(void *)&v30[v28[7]] = v87;
  v30[v28[8]] = 0;
  *(void *)&v30[v28[9]] = 0;
  *(double *)&v30[v28[10]] = v88;
  v30[v28[11]] = 0;
  uint64_t v90 = &v30[v28[12]];
  *(void *)uint64_t v90 = 0;
  *((void *)v90 + 1) = 0;
  v90[16] = 1;
  uint64_t v91 = &v30[v28[13]];
  *(void *)uint64_t v91 = 0;
  *((void *)v91 + 1) = 0;
  *(void *)&v30[v28[14]] = 0;
  v30[v28[15]] = 0;
  uint64_t v92 = &v30[v28[16]];
  *(void *)uint64_t v92 = 0;
  *((void *)v92 + 1) = 0;
  uint64_t v93 = &v30[v28[17]];
  *(void *)uint64_t v93 = 0;
  *((void *)v93 + 1) = 0;
  uint64_t v94 = &v30[v28[18]];
  *(void *)uint64_t v94 = 0;
  *((void *)v94 + 1) = 0;
  *(void *)&v30[v28[19]] = 0;
  v30[v28[20]] = 1;
  uint64_t v95 = &v30[v28[21]];
  *(void *)uint64_t v95 = 0;
  *((void *)v95 + 1) = 0;
  *(void *)&v30[v28[22]] = v89;
  uint64_t v96 = (void *)(v77 + *(int *)(v244 + 48));
  uint64_t v97 = *v96;
  v204 = v96;
  uint64_t v98 = v96[1];
  uint64_t v263 = v97;
  uint64_t v264 = v98;
  uint64_t v213 = sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  uint64_t v99 = sub_10007EF64(&qword_1002F1308, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);
  uint64_t v100 = v239;
  uint64_t v212 = v99;
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  sub_10007EFAC((uint64_t)v30, type metadata accessor for LanguageAwareText);
  uint64_t v101 = swift_getKeyPath();
  uint64_t v102 = (uint64_t)v30;
  if (!*(void *)(v77 + 32)) {
    goto LABEL_6;
  }
  uint64_t v103 = v81;
  uint64_t v104 = v79;
  uint64_t v105 = *(void *)(v77 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v107 = v237;
  (*(void (**)(uint64_t, uint64_t))(v105 + 32))(ObjectType, v105);
  Swift::Bool v108 = Locale.isRTL()();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v107, v103);
  if (v108) {
    uint64_t v109 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  }
  else {
LABEL_6:
  }
    uint64_t v109 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  uint64_t v110 = (uint64_t)v250;
  uint64_t v111 = v257;
  uint64_t v112 = v259;
  uint64_t v113 = *v109;
  uint64_t v114 = *(void (**)(char *, void, uint64_t))(v259 + 104);
  uint64_t v115 = v240;
  uint64_t v211 = v259 + 104;
  uint64_t v210 = v114;
  v114(v240, v113, v257);
  uint64_t v116 = (uint64_t)v224;
  id v117 = (uint64_t *)&v224[*((int *)v249 + 9)];
  uint64_t v206 = sub_100007620(&qword_1002EF468);
  uint64_t v118 = (char *)v117 + *(int *)(v206 + 28);
  uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
  uint64_t v209 = v112 + 16;
  uint64_t v208 = v119;
  v119(v118, v115, v111);
  *id v117 = v101;
  uint64_t v120 = v247;
  uint64_t v121 = *(void (**)(uint64_t, char *, uint64_t))(v247 + 16);
  uint64_t v122 = v245;
  uint64_t v207 = v247 + 16;
  uint64_t v205 = v121;
  v121(v116, v100, v245);
  uint64_t v124 = *(char **)(v112 + 8);
  uint64_t v123 = v112 + 8;
  v240 = v124;
  ((void (*)(char *, uint64_t))v124)(v115, v111);
  char v127 = *(unsigned __int8 **)(v120 + 8);
  uint64_t v126 = v120 + 8;
  uint64_t v125 = v127;
  ((void (*)(char *, uint64_t))v127)(v100, v122);
  sub_10001323C(v116, v110, &qword_1002F2E78);
  uint64_t v128 = v260;
  LOBYTE(v116) = sub_10007A13C();
  uint64_t v129 = v241;
  sub_10007F350(v128, (uint64_t)v241, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  if (v116)
  {
    sub_10007EFAC((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    uint64_t v130 = (uint64_t)v246;
  }
  else
  {
    uint64_t v259 = v123;
    int v131 = v129[51];
    sub_10007EFAC((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    uint64_t v130 = (uint64_t)v246;
    if (v131 == 2)
    {
      uint64_t v241 = v125;
      uint64_t v247 = v126;
      uint64_t v132 = v230;
      Divider.init()();
      uint64_t v133 = v204[1];
      *(void *)&long long v265 = *v204;
      *((void *)&v265 + 1) = v133;
      State.wrappedValue.getter();
      uint64_t v134 = v128;
      uint64_t v135 = (void *)(v128 + *(int *)(v244 + 52));
      uint64_t v136 = v135[1];
      *(void *)&long long v265 = *v135;
      *((void *)&v265 + 1) = v136;
      State.wrappedValue.getter();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v137 = v231;
      uint64_t v138 = (uint64_t)v235;
      uint64_t v139 = v233;
      (*(void (**)(char *, char *, uint64_t))(v231 + 16))(v235, v132, v233);
      uint64_t v140 = (_OWORD *)(v138 + *(int *)(v229 + 36));
      long long v141 = v266;
      *uint64_t v140 = v265;
      v140[1] = v141;
      v140[2] = v267;
      (*(void (**)(char *, uint64_t))(v137 + 8))(v132, v139);
      if (qword_1002EE588 != -1) {
        swift_once();
      }
      uint64_t v142 = qword_10030E778;
      uint64_t v143 = v232;
      sub_10000C3A4(v138, v232, &qword_1002F2E48);
      unint64_t v144 = (uint64_t *)(v143 + *(int *)(v234 + 36));
      uint64_t *v144 = v142;
      v144[1] = (uint64_t)sub_100078B0C;
      v144[2] = 0;
      sub_10000B070(v138, &qword_1002F2E48);
      sub_10001323C(v143, v236, &qword_1002F2E50);
      id v145 = sub_10007942C();
      v217(v102 + v28[6], 1, 1, v258);
      UIFontTextStyle v146 = v219;
      id v147 = [v216 preferredFontDescriptorWithTextStyle:v219 compatibleWithTraitCollection:0];
      [v147 pointSize];
      id v148 = [v215 systemFontOfSize:];
      id v149 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:v146];
      id v150 = [v149 scaledFontForFont:v148 maximumPointSize:1.79769313e308];

      uint64_t v151 = (void *)swift_allocObject();
      v151[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
      v151[3] = _swiftEmptyArrayStorage;
      v151[4] = 100;
      *(void *)uint64_t v102 = v145;
      *(_OWORD *)(v102 + 8) = v223;
      *(void *)(v102 + v28[7]) = v150;
      *(unsigned char *)(v102 + v28[8]) = 0;
      *(void *)(v102 + v28[9]) = 0;
      *(void *)(v102 + v28[10]) = 0;
      *(unsigned char *)(v102 + v28[11]) = 0;
      uint64_t v152 = v102 + v28[12];
      *(void *)uint64_t v152 = 0;
      *(void *)(v152 + 8) = 0;
      *(unsigned char *)(v152 + 16) = 1;
      uint64_t v153 = (void *)(v102 + v28[13]);
      *uint64_t v153 = 0;
      v153[1] = 0;
      *(void *)(v102 + v28[14]) = 0;
      *(unsigned char *)(v102 + v28[15]) = 0;
      uint64_t v154 = (void *)(v102 + v28[16]);
      *uint64_t v154 = 0;
      v154[1] = 0;
      uint64_t v155 = (void *)(v102 + v28[17]);
      *uint64_t v155 = 0;
      v155[1] = 0;
      uint64_t v156 = (void *)(v102 + v28[18]);
      *uint64_t v156 = 0;
      v156[1] = 0;
      *(void *)(v102 + v28[19]) = 0;
      *(unsigned char *)(v102 + v28[20]) = 1;
      uint64_t v157 = (void *)(v102 + v28[21]);
      *uint64_t v157 = 0;
      v157[1] = 0;
      *(void *)(v102 + v28[22]) = v151;
      uint64_t v158 = v135[1];
      uint64_t v261 = *v135;
      uint64_t v262 = v158;
      State.projectedValue.getter();
      View.bindGeometry(to:reader:)();
      swift_release();
      swift_release();
      sub_10007EFAC(v102, type metadata accessor for LanguageAwareText);
      uint64_t v159 = swift_getKeyPath();
      uint64_t v128 = v134;
      if (*(void *)(v134 + 32)
        && (uint64_t v160 = *(void *)(v134 + 40),
            uint64_t v161 = swift_getObjectType(),
            uint64_t v162 = v237,
            (*(void (**)(uint64_t, uint64_t))(v160 + 40))(v161, v160),
            Swift::Bool v163 = Locale.isRTL()(),
            (*(void (**)(char *, uint64_t))(v256 + 8))(v162, v258),
            v163))
      {
        uint64_t v164 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
      }
      else
      {
        uint64_t v164 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
      }
      uint64_t v130 = (uint64_t)v246;
      uint64_t v166 = (uint64_t)v238;
      uint64_t v167 = (uint64_t)v248;
      uint64_t v168 = (uint64_t)v228;
      uint64_t v169 = v227;
      uint64_t v170 = v257;
      v210(v227, *v164, v257);
      uint64_t v171 = (uint64_t)v220;
      uint64_t v172 = (uint64_t *)&v220[*((int *)v249 + 9)];
      v208((char *)v172 + *(int *)(v206 + 28), v169, v170);
      uint64_t *v172 = v159;
      uint64_t v173 = v222;
      uint64_t v174 = v245;
      v205(v171, v222, v245);
      ((void (*)(char *, uint64_t))v240)(v169, v170);
      ((void (*)(char *, uint64_t))v241)(v173, v174);
      uint64_t v175 = v171;
      uint64_t v176 = (uint64_t)v221;
      sub_10001323C(v175, (uint64_t)v221, &qword_1002F2E78);
      uint64_t v177 = v236;
      sub_10000C3A4(v236, v168, &qword_1002F2E50);
      sub_10000C3A4(v176, v167, &qword_1002F2E78);
      sub_10000C3A4(v168, v166, &qword_1002F2E50);
      uint64_t v178 = sub_100007620(&qword_1002F2EA0);
      sub_10000C3A4(v167, v166 + *(int *)(v178 + 48), &qword_1002F2E78);
      sub_10000B070(v176, &qword_1002F2E78);
      sub_10000B070(v177, &qword_1002F2E50);
      sub_10000B070(v167, &qword_1002F2E78);
      sub_10000B070(v168, &qword_1002F2E50);
      uint64_t v179 = sub_100007620(&qword_1002F2E80);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v179 - 8) + 56))(v166, 0, 1, v179);
      sub_10001323C(v166, v130, &qword_1002F2E58);
      goto LABEL_18;
    }
  }
  uint64_t v165 = sub_100007620(&qword_1002F2E80);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v130, 1, 1, v165);
  uint64_t v166 = (uint64_t)v238;
LABEL_18:
  uint64_t v180 = (uint64_t)v242;
  uint64_t v181 = v253;
  if (*(void *)(v128 + 32)) {
    goto LABEL_20;
  }
  long long v182 = *(void **)(v128 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v183 = v182;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (BYTE2(v263) << 16 == 0x80000)
  {
LABEL_20:
    uint64_t v184 = 0;
  }
  else
  {
    sub_100007620(&qword_1002F21F8);
    v191 = (int *)(type metadata accessor for TranslateTip(0) - 8);
    unint64_t v192 = (*(unsigned __int8 *)(*(void *)v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v191 + 80);
    uint64_t v184 = swift_allocObject();
    *(_OWORD *)(v184 + 16) = xmmword_1002488D0;
    unint64_t v193 = v184 + v192;
    sub_10007F350(v128, v180, (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    unint64_t v194 = (*(unsigned __int8 *)(v225 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80);
    uint64_t v195 = swift_allocObject();
    sub_10007E86C(v180, v195 + v194);
    id v196 = [self mainBundle];
    v268._id object = (void *)0xE000000000000000;
    v197._id object = (void *)0x800000010025C210;
    v197._id countAndFlagsBits = 0xD000000000000016;
    v198._id countAndFlagsBits = 0;
    v198._id object = (void *)0xE000000000000000;
    v268._id countAndFlagsBits = 0;
    Swift::String v199 = NSLocalizedString(_:tableName:bundle:value:comment:)(v197, (Swift::String_optional)0, (NSBundle)v196, v198, v268);

    uint64_t v200 = swift_allocObject();
    *(void *)(v200 + 16) = sub_10007F2B8;
    *(void *)(v200 + 24) = v195;
    swift_retain();
    UUID.init()();
    *(Swift::String *)(v193 + v191[7]) = v199;
    uint64_t v201 = (void *)(v193 + v191[8]);
    *uint64_t v201 = 0;
    v201[1] = 0;
    uint64_t v202 = (uint64_t (**)())(v193 + v191[9]);
    *uint64_t v202 = sub_10006E5E8;
    v202[1] = (uint64_t (*)())v200;
    uint64_t v130 = (uint64_t)v246;
    swift_release();
  }
  uint64_t v185 = (uint64_t)v250;
  uint64_t v186 = (uint64_t)v248;
  sub_10000C3A4((uint64_t)v250, (uint64_t)v248, &qword_1002F2E78);
  sub_10000C3A4(v130, v166, &qword_1002F2E58);
  uint64_t v187 = v243;
  sub_10000C3A4(v186, v243, &qword_1002F2E78);
  uint64_t v188 = v130;
  uint64_t v189 = sub_100007620(&qword_1002F2E88);
  sub_10000C3A4(v166, v187 + *(int *)(v189 + 48), &qword_1002F2E58);
  *(void *)(v187 + *(int *)(v189 + 64)) = v184;
  sub_10000B070(v166, &qword_1002F2E58);
  sub_10000B070(v186, &qword_1002F2E78);
  sub_10000C3A4(v187, v181, &qword_1002F2E40);
  swift_storeEnumTagMultiPayload();
  sub_10007F014();
  sub_100014894(&qword_1002F2E98, &qword_1002F2E40);
  _ConditionalContent<>.init(storage:)();
  sub_10000B070(v187, &qword_1002F2E40);
  sub_10000B070(v188, &qword_1002F2E58);
  uint64_t v75 = v185;
  unint64_t v76 = &qword_1002F2E78;
  return sub_10000B070(v75, v76);
}

void sub_10007C84C(uint64_t a1)
{
  uint64_t v1 = qword_1002EE5D0;
  uint64_t v2 = (char *)*(id *)(a1 + 8);
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100011554(v3, (uint64_t)qword_10030E978);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Resetting ConversationViewModel", v6, 2u);
    swift_slowDealloc();
  }

  sub_1000AB7B0();
  sub_1000AC2B0(3, 1, 1);
  sub_100234200();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.setter();
  unsigned int v7 = *(unsigned __int16 *)&v2[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation];
  if ((v7 & 0xFF00) == 0x200)
  {
    uint64_t v8 = v2;
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Cannot restart last speech translation since there never was a speech translation that started before", v11, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v9 = v2;
    sub_1000ABAC0(v7, (v7 >> 8) & 1);
  }
}

void *sub_10007CA60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  unsigned int v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)sub_100079F48();
  if (!result)
  {
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    goto LABEL_7;
  }
  if (*(unsigned char *)(a1 + 50) != 2 || *(unsigned char *)(a1 + 51) != 2)
  {

    uint64_t v15 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    uint64_t result = 0;
LABEL_7:
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v13 = 0;
    uint64_t v22 = 0;
    uint64_t v14 = 0;
    goto LABEL_8;
  }
  uint64_t v9 = dispatch thunk of PersistedTranslation.displayText.getter();
  uint64_t v11 = v10;
  uint64_t v25 = (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble;
  sub_10007F350(a1, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_10007E86C((uint64_t)v7, v13 + v12);
  sub_10007F350(a1, (uint64_t)v7, v25);
  uint64_t v14 = swift_allocObject();
  sub_10007E86C((uint64_t)v7, v14 + v12);
  type metadata accessor for ConversationContext(0);
  sub_10007EF64(&qword_1002EF2A0, (void (*)(uint64_t))type metadata accessor for ConversationContext);
  uint64_t v15 = EnvironmentObject.init()();
  uint64_t v17 = v16;
  type metadata accessor for SceneContext();
  sub_10007EF64((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t v18 = EnvironmentObject.init()();
  uint64_t v20 = v19;
  uint64_t v25 = (uint64_t (*)(void))type metadata accessor for PersistedTranslation();
  sub_10007EF64(&qword_1002F2E38, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  uint64_t result = (void *)ObservedObject.init(wrappedValue:)();
  uint64_t v22 = sub_10007EED0;
  uint64_t v23 = sub_10007EEB4;
LABEL_8:
  *a2 = v15;
  a2[1] = v17;
  a2[2] = v18;
  a2[3] = v20;
  a2[4] = v9;
  a2[5] = v11;
  a2[6] = (uint64_t)result;
  a2[7] = v21;
  a2[8] = (uint64_t)v23;
  a2[9] = v13;
  a2[10] = (uint64_t)v22;
  a2[11] = v14;
  return result;
}

void sub_10007CD6C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  id v7 = *(id *)(a3 + 8);
  a4(a1, a2);
}

uint64_t sub_10007CDDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100007620(&qword_1002F33C0);
  uint64_t result = __chkstk_darwin(v10 - 8);
  uint64_t v13 = &v28[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *(void *)(v3 + 32);
  if (v14)
  {
    uint64_t v15 = *(void *)(v3 + 40);
    uint64_t v30 = v7;
    if (a2)
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, double))(v15 + 104);
      swift_unknownObjectRetain();
      v17(ObjectType, v15, *(double *)&a1);
    }
    int v18 = *(unsigned __int8 *)(v3 + 50);
    if (v18 == 2)
    {
      int v19 = *(unsigned __int8 *)(v3 + 48);
      if (v19 == 2)
      {
        char v20 = 0;
        BOOL v29 = 0;
        char v21 = 0;
      }
      else
      {
        BOOL v29 = 0;
        char v21 = v19 & 1;
        char v20 = (v19 & 1) == 0;
      }
    }
    else
    {
      BOOL v29 = sub_100078CB0() == 0;
      char v20 = v18 & 1;
      char v21 = v18 & 1;
    }
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
    sub_10007F350(v3, (uint64_t)&v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for ConversationDisplayBubble);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain();
    uint64_t v23 = static MainActor.shared.getter();
    unint64_t v24 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    unint64_t v25 = (v8 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v23;
    *(void *)(v26 + 24) = &protocol witness table for MainActor;
    sub_10007E86C((uint64_t)v9, v26 + v24);
    unint64_t v27 = v26 + v25;
    *(void *)unint64_t v27 = v14;
    *(void *)(v27 + 8) = v15;
    *(unsigned char *)(v27 + 16) = v29;
    *(unsigned char *)(v27 + 17) = v21 & 1;
    *(unsigned char *)(v27 + 18) = v20;
    sub_100056780((uint64_t)v13, (uint64_t)&unk_1002F2E30, v26);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10007D0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  *(unsigned char *)(v8 + 82) = v13;
  *(unsigned char *)(v8 + 81) = a8;
  *(unsigned char *)(v8 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a7;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v8 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 48) = v10;
  *(void *)(v8 + 56) = v9;
  return _swift_task_switch(sub_10007D164, v10, v9);
}

uint64_t sub_10007D164()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 8);
  *(void *)(v0 + 64) = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = (uint64_t (*)(uint64_t, char, char, char, char, uint64_t, uint64_t, uint64_t))((char *)&dword_1002F3920
                                                                                           + dword_1002F3920);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10007D24C;
  char v5 = *(unsigned char *)(v0 + 82);
  char v6 = *(unsigned char *)(v0 + 81);
  char v7 = *(unsigned char *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v9 = *(void *)(v0 + 24);
  return v11(v9, v7, v6, v5, 0, (uint64_t)v3, ObjectType, v8);
}

uint64_t sub_10007D24C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 64);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10007D38C, v4, v3);
}

uint64_t sub_10007D38C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007D3EC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, char a3@<W4>, char a4@<W5>, char a5@<W6>, char a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  type metadata accessor for ConversationViewModel();
  sub_10007EF64(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  *(void *)a7 = ObservedObject.init(wrappedValue:)();
  *(void *)(a7 + 8) = v15;
  type metadata accessor for TTSManager();
  sub_10007EF64(&qword_1002F2CA8, (void (*)(uint64_t))type metadata accessor for TTSManager);
  *(void *)(a7 + 16) = ObservedObject.init(wrappedValue:)();
  *(void *)(a7 + 24) = v16;
  *(void *)(a7 + 32) = a1;
  *(void *)(a7 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  *(unsigned char *)(a7 + 48) = a3;
  *(unsigned char *)(a7 + 49) = a4;
  *(unsigned char *)(a7 + 5UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a5;
  *(unsigned char *)(a7 + 51) = a6;
  uint64_t v17 = (int *)type metadata accessor for ConversationDisplayBubble();
  sub_10001323C(a8, a7 + v17[11], &qword_1002F2CB0);
  int v18 = (void *)(a7 + v17[12]);
  State.init(wrappedValue:)();
  *int v18 = v23;
  v18[1] = v24;
  int v19 = (void *)(a7 + v17[13]);
  State.init(wrappedValue:)();
  *int v19 = v23;
  v19[1] = v24;
  char v20 = (void *)(a7 + v17[14]);
  State.init(wrappedValue:)();
  *char v20 = v23;
  v20[1] = v24;
  return sub_10001323C(a9, a7 + v17[15], &qword_1002F2CB8);
}

uint64_t type metadata accessor for ConversationDisplayBubble()
{
  uint64_t result = qword_1002F2D20;
  if (!qword_1002F2D20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_10007D650(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    char v7 = (void *)a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    uint64_t v9 = a3[11];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    id v12 = v7;
    swift_retain();
    swift_unknownObjectRetain();
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[12];
    uint64_t v16 = a3[13];
    uint64_t v17 = (void *)((char *)v4 + v15);
    int v18 = (uint64_t *)((char *)a2 + v15);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    char v20 = (void *)((char *)v4 + v16);
    char v21 = (uint64_t *)((char *)a2 + v16);
    uint64_t v22 = v21[1];
    *char v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[14];
    uint64_t v24 = a3[15];
    unint64_t v25 = (void *)((char *)v4 + v23);
    uint64_t v26 = (uint64_t *)((char *)a2 + v23);
    uint64_t v27 = v26[1];
    *unint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (void *)((char *)v4 + v24);
    BOOL v29 = (uint64_t *)((char *)a2 + v24);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10007D890(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 60);
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ContentSizeCategory();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10007DA00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v8 = a3[11];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  id v11 = v6;
  swift_retain();
  swift_unknownObjectRetain();
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = a3[12];
  uint64_t v14 = a3[13];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  int v18 = (void *)(a1 + v14);
  uint64_t v19 = (void *)(a2 + v14);
  uint64_t v20 = v19[1];
  *int v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[14];
  uint64_t v22 = a3[15];
  uint64_t v23 = (void *)(a1 + v21);
  uint64_t v24 = (void *)(a2 + v21);
  uint64_t v25 = v24[1];
  void *v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)(a1 + v22);
  uint64_t v27 = (void *)(a2 + v22);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  }
  else
  {
    *uint64_t v26 = *v27;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007DBE8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 5UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  if (a1 != a2)
  {
    uint64_t v10 = a3[11];
    id v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_10000B070(a1 + v10, &qword_1002FACB0);
    sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *id v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_retain();
  swift_release();
  uint64_t v17 = a3[13];
  int v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  *int v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  uint64_t v20 = a3[14];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v23 = a3[15];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    sub_10000B070(a1 + v23, &qword_1002F2CC0);
    sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007DE70(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v7 = a3[11];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10007E020(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_release();
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v10 = a3[11];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_10000B070(a1 + v10, &qword_1002FACB0);
    uint64_t v13 = sub_100007620(&qword_1002FACB0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[12];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_release();
  uint64_t v18 = a3[13];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_release();
  uint64_t v21 = a3[14];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v24 = a3[15];
    uint64_t v25 = (void *)(a1 + v24);
    uint64_t v26 = (const void *)(a2 + v24);
    sub_10000B070(a1 + v24, &qword_1002F2CC0);
    uint64_t v27 = sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10007E274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007E288);
}

uint64_t sub_10007E288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F2CB0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F2CB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10007E3BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007E3D0);
}

uint64_t sub_10007E3D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F2CB0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100007620(&qword_1002F2CB8);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10007E504()
{
  sub_10007E630(319, (unint64_t *)&qword_1002F2D30, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F)
  {
    sub_10007E630(319, (unint64_t *)&qword_1002F2D38, (void (*)(uint64_t))&type metadata accessor for ContentSizeCategory);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10007E630(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10007E684()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_10007E6A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10007CA60(*(void *)(v1 + 16), a1);
}

unint64_t sub_10007E6AC()
{
  unint64_t result = qword_1002F2DD0;
  if (!qword_1002F2DD0)
  {
    sub_100007928(&qword_1002F2D98);
    sub_100014894(&qword_1002F2DD8, &qword_1002F2D90);
    sub_10007E74C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2DD0);
  }
  return result;
}

unint64_t sub_10007E74C()
{
  unint64_t result = qword_1002F2DE0;
  if (!qword_1002F2DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2DE0);
  }
  return result;
}

unint64_t sub_10007E7A0()
{
  unint64_t result = qword_1002F2DE8;
  if (!qword_1002F2DE8)
  {
    sub_100007928(&qword_1002F2DC8);
    sub_10007E814();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2DE8);
  }
  return result;
}

unint64_t sub_10007E814()
{
  unint64_t result = qword_1002F2DF0;
  if (!qword_1002F2DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2DF0);
  }
  return result;
}

uint64_t sub_10007E86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConversationDisplayBubble();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007E8D0(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  type metadata accessor for ConversationDisplayBubble();
  return sub_10007CDDC(a1, v3);
}

unint64_t sub_10007E944()
{
  unint64_t result = qword_1002F2DF8;
  if (!qword_1002F2DF8)
  {
    sub_100007928(&qword_1002F2DB0);
    sub_10007E9C0();
    sub_10007EAE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2DF8);
  }
  return result;
}

unint64_t sub_10007E9C0()
{
  unint64_t result = qword_1002F2E00;
  if (!qword_1002F2E00)
  {
    sub_100007928(&qword_1002F2DA8);
    sub_100007928(&qword_1002F2D98);
    sub_100007928(&qword_1002F2DC8);
    sub_10007E6AC();
    sub_10007E7A0();
    swift_getOpaqueTypeConformance2();
    sub_10007EA94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2E00);
  }
  return result;
}

unint64_t sub_10007EA94()
{
  unint64_t result = qword_1002F2E08;
  if (!qword_1002F2E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2E08);
  }
  return result;
}

unint64_t sub_10007EAE8()
{
  unint64_t result = qword_1002F2E10;
  if (!qword_1002F2E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2E10);
  }
  return result;
}

uint64_t sub_10007EB4C()
{
  uint64_t v1 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();

  swift_release();
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 44);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 60);
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 19, v2 | 7);
}

uint64_t sub_10007ED40(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ConversationDisplayBubble() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  char v13 = *(unsigned char *)(v9 + 17);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100021B58;
  return sub_10007D0B4(a1, v6, v7, v8, v10, v11, v12, v13);
}

void sub_10007EEB4(uint64_t a1, uint64_t a2)
{
}

void sub_10007EED0(uint64_t a1, uint64_t a2)
{
}

void sub_10007EEE8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(type metadata accessor for ConversationDisplayBubble() - 8);
  sub_10007CD6C(a1, a2, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3);
}

uint64_t sub_10007EF64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007EFAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10007F014()
{
  unint64_t result = qword_1002F2E90;
  if (!qword_1002F2E90)
  {
    sub_100007928(&qword_1002F2E68);
    sub_10007EF64(&qword_1002F1308, (void (*)(uint64_t))type metadata accessor for LanguageAwareText);
    sub_100014894(&qword_1002EF460, &qword_1002EF468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2E90);
  }
  return result;
}

uint64_t sub_10007F0E8()
{
  uint64_t v1 = type metadata accessor for ConversationDisplayBubble();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);

  swift_release();
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 44);
  sub_100007620(&qword_1002FACB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 60);
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_10007F2B8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ConversationDisplayBubble() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10007C84C(v2);
}

uint64_t sub_10007F318()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007F350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10007F3C0()
{
  unint64_t result = qword_1002F2EA8;
  if (!qword_1002F2EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2EA8);
  }
  return result;
}

uint64_t *sub_10007F414(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10007F448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *_s19PlayButtonAlignmentVMa()
{
  return &_s19PlayButtonAlignmentVN;
}

unint64_t sub_10007F4A0()
{
  unint64_t result = qword_1002F2EB0;
  if (!qword_1002F2EB0)
  {
    sub_100007928(&qword_1002F2EB8);
    sub_10007E944();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2EB0);
  }
  return result;
}

void *sub_10007F520(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = (void *)a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(unsigned char *)(a1 + 33) = *((unsigned char *)a2 + 33);
    uint64_t v7 = a2[6];
    *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2[5];
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = a2[8];
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (uint64_t *)((char *)a2 + v9);
    uint64_t v11 = (void *)(a1 + v9);
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    id v12 = v5;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v10, v13);
    }
    else
    {
      *uint64_t v11 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_10007F688(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10007F758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 40);
  uint64_t v9 = (void *)(a2 + v8);
  uint64_t v10 = (void *)(a1 + v8);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  id v11 = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v9, v12);
  }
  else
  {
    *uint64_t v10 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10007F868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v6;
  id v8 = v6;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (void *)(a2 + v9);
    sub_10000B070(a1 + v9, &qword_1002F2CC0);
    sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10007F9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_OWORD *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(_OWORD *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10007FAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;

  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v8;
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (void *)(a1 + v9);
    id v11 = (const void *)(a2 + v9);
    sub_10000B070(a1 + v9, &qword_1002F2CC0);
    uint64_t v12 = sub_100007620(&qword_1002F2CC0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10007FC10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10007FC24);
}

uint64_t sub_10007FC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F2CB8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10007FCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10007FCEC);
}

uint64_t sub_10007FCEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F2CB8);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ConversationEditorBubble()
{
  uint64_t result = qword_1002F2F18;
  if (!qword_1002F2F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10007FDE4()
{
  sub_10007FE9C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_10007FE9C()
{
  if (!qword_1002F2D38)
  {
    type metadata accessor for ContentSizeCategory();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F2D38);
    }
  }
}

uint64_t sub_10007FEF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007FF10()
{
  type metadata accessor for ConversationViewModel();
  sub_1000842D0(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  unint64_t v0 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  return v2;
}

id sub_10007FFEC()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v6 = v5;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v7 = v28;
  if (v28)
  {
    if (((v26 & 1) == 0) == *(unsigned char *)(v0 + 32)) {
      goto LABEL_8;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v8 = v6;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v10 = v26;
    unint64_t v9 = v27;
    if (!v27) {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0) {
      uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      id v12 = [objc_allocWithZone((Class)NSMutableParagraphStyle) init];
      swift_getKeyPath();
      swift_getKeyPath();
      id v14 = v6;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      Swift::Bool v15 = Locale.isRTL()();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      if (v15) {
        uint64_t v16 = 2;
      }
      else {
        uint64_t v16 = 0;
      }
      [v12 setAlignment:v16];
      sub_100007620(&qword_1002FC3D0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100247140;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v18 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
      uint64_t v19 = NSForegroundColorAttributeName;
      *(void *)(inited + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = static UIColor.targetTextColor.getter();
      *(void *)(inited + 64) = v18;
      *(void *)(inited + 72) = NSParagraphStyleAttributeName;
      *(void *)(inited + 104) = sub_10000B0CC(0, &qword_1002F2E20);
      *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v12;
      uint64_t v20 = NSParagraphStyleAttributeName;
      id v21 = v12;
      sub_1001FF520(inited);
      id v22 = objc_allocWithZone((Class)NSAttributedString);
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1000842D0((unint64_t *)&qword_1002EEB70, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v7 = [v22 initWithString:v23 attributes:isa];
    }
    else
    {
LABEL_8:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v7;
}

uint64_t sub_1000803E0()
{
  uint64_t v1 = type metadata accessor for ConversationEditorBubble();
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = &v37[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __chkstk_darwin(v2);
  id v7 = &v37[-v6];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v37[-v9];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v37[-v12];
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = &v37[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v37[-v17];
  uint64_t v19 = *(void **)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v20 = v19;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v37[15] == 1)
  {

    sub_100084258(v0, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
    goto LABEL_4;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  int v21 = v37[14];
  sub_100084258(v0, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  if (v21 == 1)
  {
LABEL_4:
    char v22 = v18[32];
    sub_100084258((uint64_t)v18, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
    if (v22)
    {
      sub_100084A60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      sub_100084258((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      goto LABEL_6;
    }
    uint64_t v28 = (void *)*((void *)v16 + 1);
    swift_getKeyPath();
    swift_getKeyPath();
    id v29 = v28;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    char v30 = v37[11];
    sub_100084258((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
    if (v30)
    {
      sub_100084A60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      sub_100084A60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      sub_100084258((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      char v27 = 1;
    }
    else
    {
      uint64_t v31 = (void *)*((void *)v13 + 1);
      swift_getKeyPath();
      swift_getKeyPath();
      id v32 = v31;
      static Published.subscript.getter();

      swift_release();
      swift_release();
      char v33 = v37[10];
      sub_100084A60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      sub_100084A60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      sub_100084258((uint64_t)v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
      if (v33)
      {
LABEL_6:
        int v23 = v10[32];
        sub_100084258((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
        if (v23 == 1)
        {
          uint64_t v24 = (void *)*((void *)v7 + 1);
          swift_getKeyPath();
          swift_getKeyPath();
          id v25 = v24;
          static Published.subscript.getter();

          swift_release();
          swift_release();
          char v26 = v37[13];
          sub_100084258((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
          if (v26)
          {
            char v27 = 1;
          }
          else
          {
            uint64_t v34 = (void *)*((void *)v4 + 1);
            swift_getKeyPath();
            swift_getKeyPath();
            id v35 = v34;
            static Published.subscript.getter();

            swift_release();
            swift_release();
            char v27 = v37[12] ^ 1;
          }
          sub_100084A60((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
          sub_100084A60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
        }
        else
        {
          sub_100084A60((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
          char v27 = 0;
        }
        goto LABEL_17;
      }
      char v27 = 1;
    }
LABEL_17:
    sub_100084A60((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
    goto LABEL_18;
  }
  char v27 = 0;
LABEL_18:
  sub_100084A60((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  return v27 & 1;
}

uint64_t sub_100080970()
{
  uint64_t v1 = *(void **)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v4 != 3) {
    return 0xD000000000000019;
  }
  if (sub_1000803E0()) {
    return 0x4E494E455453494CLL;
  }
  if (*(unsigned char *)(v0 + 33) == 2) {
    return 0x545F4F545F504154;
  }
  return 0x535F4F545F504154;
}

uint64_t sub_100080A80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002F2F68);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F2F70);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002F2F78);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v14 = sub_100007620(&qword_1002F2F80);
  sub_100080CBC(v1, (uint64_t)&v5[*(int *)(v14 + 44)]);
  char v15 = *(unsigned char *)(v1 + 32) ^ ((*(unsigned char *)(v1 + 33) & 1) == 0);
  sub_10000C3A4((uint64_t)v5, (uint64_t)v9, &qword_1002F2F68);
  uint64_t v16 = &v9[*(int *)(v7 + 44)];
  *uint64_t v16 = v15 & 1;
  *((void *)v16 + 1) = 0x4030000000000000;
  sub_10000B070((uint64_t)v5, &qword_1002F2F68);
  char v17 = *(unsigned char *)(v1 + 32) ^ ((*(unsigned char *)(v1 + 33) & 1) == 0);
  v22[1] = 0x4079000000000000;
  State.init(wrappedValue:)();
  uint64_t v18 = v22[2];
  uint64_t v19 = v22[3];
  sub_10000C3A4((uint64_t)v9, (uint64_t)v13, &qword_1002F2F70);
  id v20 = &v13[*(int *)(v11 + 44)];
  *id v20 = v17 & 1;
  *(_OWORD *)(v20 + 8) = xmmword_10024CA80;
  *((void *)v20 + 3) = v18;
  *((void *)v20 + 4) = v19;
  sub_10000B070((uint64_t)v9, &qword_1002F2F70);
  return sub_10001323C((uint64_t)v13, a1, &qword_1002F2F78);
}

uint64_t sub_100080CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v222 = a2;
  uint64_t v187 = type metadata accessor for LanguageAwareText(0);
  __chkstk_darwin(v187);
  uint64_t v224 = (uint64_t)&v175 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_100007620(&qword_1002F2E68);
  __chkstk_darwin(v190);
  v191 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = sub_100007620(&qword_1002F2F88);
  uint64_t v194 = *(void *)(v195 - 8);
  uint64_t v5 = __chkstk_darwin(v195);
  unint64_t v193 = (char *)&v175 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v188 = (char *)&v175 - v8;
  __chkstk_darwin(v7);
  unint64_t v192 = (char *)&v175 - v9;
  uint64_t v184 = type metadata accessor for Divider();
  uint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  long long v182 = (char *)&v175 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_100007620(&qword_1002F2E48);
  uint64_t v11 = __chkstk_darwin(v181);
  uint64_t v189 = (uint64_t)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v180 = (char *)&v175 - v14;
  __chkstk_darwin(v13);
  uint64_t v223 = (uint64_t)&v175 - v15;
  uint64_t v16 = sub_100007620(&qword_1002F2F90);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v221 = (uint64_t)&v175 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v220 = (uint64_t)&v175 - v19;
  uint64_t v226 = type metadata accessor for LayoutDirection();
  uint64_t v234 = *(void *)(v226 - 8);
  uint64_t v20 = __chkstk_darwin(v226);
  uint64_t v186 = (char *)&v175 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v211 = (char *)&v175 - v22;
  uint64_t v23 = type metadata accessor for ConversationEditorBubble();
  uint64_t v206 = *(void *)(v23 - 8);
  __chkstk_darwin(v23 - 8);
  uint64_t v207 = v24;
  uint64_t v209 = (void (*)(char *, char *, uint64_t))((char *)&v175 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v210 = type metadata accessor for LanguageAwareEditor(0);
  __chkstk_darwin(v210);
  char v26 = (uint64_t *)((char *)&v175 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v215 = sub_100007620(&qword_1002F2F98);
  __chkstk_darwin(v215);
  uint64_t v212 = (char *)&v175 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = sub_100007620(&qword_1002F2FA0);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v214 = (char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100007620(&qword_1002F2FA8);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v219 = (uint64_t)&v175 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v213 = (char *)&v175 - v33;
  __chkstk_darwin(v32);
  uint64_t v232 = (uint64_t)&v175 - v34;
  uint64_t v233 = type metadata accessor for Locale();
  uint64_t v225 = *(void (***)(char *, char *, uint64_t))(v233 - 8);
  uint64_t v35 = __chkstk_darwin(v233);
  uint64_t v185 = (char *)&v175 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v230 = (char *)&v175 - v38;
  __chkstk_darwin(v37);
  v227 = (char *)&v175 - v39;
  uint64_t v229 = sub_100007620(&qword_1002F04A0);
  uint64_t v40 = __chkstk_darwin(v229);
  uint64_t v208 = (void (*)(char *, char *, uint64_t))((char *)&v175 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v205 = (char *)&v175 - v43;
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v175 - v44;
  uint64_t v204 = type metadata accessor for LanguagePicker();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v47 = (char *)&v175 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100007620(&qword_1002F0608);
  __chkstk_darwin(v48 - 8);
  uint64_t v200 = (char *)&v175 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_100007620(&qword_1002F2FB0);
  uint64_t v50 = __chkstk_darwin(v202);
  uint64_t v218 = (uint64_t)&v175 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __chkstk_darwin(v50);
  id v54 = (char *)&v175 - v53;
  __chkstk_darwin(v52);
  uint64_t v231 = (uint64_t)&v175 - v55;
  type metadata accessor for ConversationViewModel();
  uint64_t v56 = sub_1000842D0(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  id v57 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v201 = v45;
  uint64_t v228 = (void (*)(char *, void, uint64_t))v56;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  id v58 = *(void **)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v59 = v58;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  swift_retain();
  LanguagesService.models.getter();
  swift_release();
  swift_retain();
  LanguagesService.asrUnsupportedModels.getter();
  swift_release();
  LanguagePicker.init(selectedLocale:preferredLocales:oppositeLocale:languageModels:disabledLanguages:)();
  sub_1000842D0(&qword_1002F0650, (void (*)(uint64_t))&type metadata accessor for LanguagePicker);
  uint64_t v60 = (uint64_t)v200;
  uint64_t v61 = v204;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v203 + 8))(v47, v61);
  uint64_t v62 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10000C3A4(v60, (uint64_t)v54, &qword_1002F0608);
  uint64_t v64 = (uint64_t *)&v54[*(int *)(v202 + 36)];
  *uint64_t v64 = KeyPath;
  v64[1] = v62;
  sub_10000B070(v60, &qword_1002F0608);
  sub_10001323C((uint64_t)v54, v231, &qword_1002F2FB0);
  uint64_t v204 = sub_10007FF10();
  uint64_t v203 = v65;
  uint64_t v202 = v66;
  uint64_t v201 = v67;
  uint64_t v200 = (char *)sub_100080970();
  uint64_t v199 = v68;
  v227 = (char *)type metadata accessor for ConversationViewModel();
  uint64_t v69 = (void *)ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v70 = (uint64_t)v205;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  Binding.wrappedValue.getter();
  sub_10000B070(v70, &qword_1002F04A0);
  uint64_t v71 = sub_10000B0CC(0, (unint64_t *)&qword_1002F12E0);
  uint64_t v205 = (char *)static UIColor.sourceTextColor.getter();
  uint64_t v179 = v71;
  uint64_t v198 = static UIColor.quaternarySourceTextColor.getter();
  id v177 = self;
  id v72 = [v177 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2 compatibleWithTraitCollection:0];
  uint64_t v73 = self;
  [v72 pointSize];
  id v176 = v73;
  id v74 = [v73 systemFontOfSize:];
  id v75 = objc_allocWithZone((Class)UIFontMetrics);
  UIFontTextStyle v178 = UIFontTextStyleTitle2;
  id v76 = [v75 initForTextStyle:UIFontTextStyleTitle2];
  id v197 = [v76 scaledFontForFont:v74 maximumPointSize:1.79769313e308];

  BOOL v196 = *(unsigned __int8 *)(a1 + 33) == 2;
  double v77 = sub_1001A5388();
  uint64_t v78 = v209;
  sub_100084258(a1, (uint64_t)v209, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  unint64_t v79 = (*(unsigned __int8 *)(v206 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80);
  uint64_t v207 = swift_allocObject();
  sub_100083E64((uint64_t)v78, v207 + v79);
  sub_100084258(a1, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  uint64_t v80 = swift_allocObject();
  sub_100083E64((uint64_t)v78, v80 + v79);
  sub_100084258(a1, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  uint64_t v81 = swift_allocObject();
  sub_100083E64((uint64_t)v78, v81 + v79);
  sub_100084258(a1, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  uint64_t v82 = swift_allocObject();
  sub_100083E64((uint64_t)v78, v82 + v79);
  uint64_t v206 = type metadata accessor for LanguageAwareTextViewSizeThatFitsCache();
  uint64_t v83 = (void *)swift_allocObject();
  v83[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
  v83[3] = _swiftEmptyArrayStorage;
  v83[4] = 100;
  uint64_t v84 = v203;
  *char v26 = v204;
  v26[1] = v84;
  id v85 = v201;
  v26[2] = v202;
  v26[3] = (uint64_t)v85;
  uint64_t v86 = v199;
  v26[4] = (uint64_t)v200;
  v26[5] = v86;
  id v87 = (int *)v210;
  double v88 = v225;
  uint64_t v89 = v230;
  uint64_t v90 = v233;
  v225[4]((char *)v26 + *(int *)(v210 + 24), v230, v233);
  *(uint64_t *)((char *)v26 + v87[7]) = (uint64_t)v205;
  *(uint64_t *)((char *)v26 + v87[8]) = v198;
  *(uint64_t *)((char *)v26 + v87[9]) = (uint64_t)v197;
  *(uint64_t *)((char *)v26 + v87[10]) = 9;
  *((unsigned char *)v26 + v87[11]) = v196;
  *(double *)((char *)v26 + v87[12]) = v77;
  *((unsigned char *)v26 + v87[13]) = 0;
  uint64_t v91 = (void (**)(void *))((char *)v26 + v87[14]);
  uint64_t v92 = v207;
  *uint64_t v91 = sub_100083EC8;
  v91[1] = (void (*)(void *))v92;
  uint64_t v93 = (uint64_t (**)(void *))((char *)v26 + v87[15]);
  *uint64_t v93 = sub_100083F30;
  v93[1] = (uint64_t (*)(void *))v80;
  uint64_t v94 = (void (**)())((char *)v26 + v87[16]);
  char *v94 = sub_100083F54;
  v94[1] = (void (*)())v81;
  uint64_t v95 = (uint64_t (**)(void *))((char *)v26 + v87[17]);
  *uint64_t v95 = sub_1000840E4;
  v95[1] = (uint64_t (*)(void *))v82;
  *(uint64_t *)((char *)v26 + v87[18]) = 0;
  *(uint64_t *)((char *)v26 + v87[19]) = (uint64_t)v83;
  uint64_t v210 = swift_getKeyPath();
  uint64_t v96 = ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v97 = (uint64_t)v208;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  Binding.wrappedValue.getter();
  sub_10000B070(v97, &qword_1002F04A0);
  LOBYTE(v96) = Locale.isRTL()();
  uint64_t v98 = v88[1];
  v227 = (char *)(v88 + 1);
  uint64_t v209 = v98;
  ((void (*)(char *, uint64_t))v98)(v89, v90);
  uint64_t v99 = v234;
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v234 + 104);
  uint64_t v101 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  if ((v96 & 1) == 0) {
    uint64_t v101 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  }
  uint64_t v102 = *v101;
  uint64_t v103 = v211;
  uint64_t v104 = v226;
  uint64_t v228 = *(void (**)(char *, void, uint64_t))(v234 + 104);
  uint64_t v229 = v234 + 104;
  v100(v211, v102, v226);
  uint64_t v105 = v215;
  uint64_t v106 = (uint64_t)v212;
  uint64_t v107 = (uint64_t *)&v212[*(int *)(v215 + 36)];
  uint64_t v207 = sub_100007620(&qword_1002EF468);
  Swift::Bool v108 = (char *)v107 + *(int *)(v207 + 28);
  uint64_t v109 = v99 + 16;
  uint64_t v208 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
  v208(v108, v103, v104);
  *uint64_t v107 = v210;
  sub_100084258((uint64_t)v26, v106, type metadata accessor for LanguageAwareEditor);
  uint64_t v111 = *(char **)(v99 + 8);
  uint64_t v110 = v99 + 8;
  uint64_t v211 = v111;
  ((void (*)(char *, uint64_t))v111)(v103, v104);
  sub_100084A60((uint64_t)v26, type metadata accessor for LanguageAwareEditor);
  uint64_t v112 = *(void *)(a1 + 48);
  uint64_t v237 = *(void *)(a1 + 40);
  uint64_t v238 = v112;
  uint64_t v230 = (char *)sub_100007620(&qword_1002EF470);
  State.projectedValue.getter();
  unint64_t v113 = sub_100084188();
  uint64_t v114 = v214;
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  sub_10000B070(v106, &qword_1002F2F98);
  *(void *)&long long v239 = v105;
  *((void *)&v239 + 1) = v113;
  swift_getOpaqueTypeConformance2();
  uint64_t v115 = (uint64_t)v213;
  uint64_t v116 = v217;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v216 + 8))(v114, v116);
  sub_10001323C(v115, v232, &qword_1002F2FA8);
  id v117 = sub_10007FFEC();
  if (v117)
  {
    uint64_t v118 = v117;
    uint64_t v217 = v109;
    uint64_t v234 = v110;
    uint64_t v119 = v182;
    Divider.init()();
    uint64_t v120 = *(void *)(a1 + 48);
    *(void *)&long long v239 = *(void *)(a1 + 40);
    *((void *)&v239 + 1) = v120;
    State.wrappedValue.getter();
    uint64_t v121 = *(void *)(a1 + 64);
    *(void *)&long long v239 = *(void *)(a1 + 56);
    *((void *)&v239 + 1) = v121;
    State.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v122 = v183;
    uint64_t v123 = (uint64_t)v180;
    uint64_t v124 = v184;
    (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v180, v119, v184);
    uint64_t v125 = (_OWORD *)(v123 + *(int *)(v181 + 36));
    long long v126 = v240;
    *uint64_t v125 = v239;
    v125[1] = v126;
    v125[2] = v241;
    (*(void (**)(char *, uint64_t))(v122 + 8))(v119, v124);
    sub_10001323C(v123, v223, &qword_1002F2E48);
    char v127 = (int *)v187;
    uint64_t v128 = v224;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v225[7])(v224 + *(int *)(v187 + 24), 1, 1, v233);
    uint64_t v225 = v118;
    UIFontTextStyle v129 = v178;
    id v130 = [v177 preferredFontDescriptorWithTextStyle:v178 compatibleWithTraitCollection:0];
    [v130 pointSize];
    id v131 = [v176 systemFontOfSize:];
    id v132 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:v129];
    id v133 = [v132 scaledFontForFont:v131 maximumPointSize:1.79769313e308];

    LOBYTE(v132) = *(unsigned char *)(*(void *)(a1 + 8)
                            + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_redactTargetText);
    uint64_t v134 = static UIColor.quaternaryTranslateAccentColor.getter();
    uint64_t v135 = (void *)swift_allocObject();
    v135[2] = sub_1001FF68C((uint64_t)_swiftEmptyArrayStorage);
    v135[3] = _swiftEmptyArrayStorage;
    v135[4] = 100;
    *(void *)uint64_t v128 = v118;
    *(_OWORD *)(v128 + 8) = xmmword_10024C780;
    *(void *)(v128 + v127[7]) = v133;
    *(unsigned char *)(v128 + v127[8]) = (_BYTE)v132;
    *(void *)(v128 + v127[9]) = v134;
    *(void *)(v128 + v127[10]) = 0;
    *(unsigned char *)(v128 + v127[11]) = 0;
    uint64_t v136 = v128 + v127[12];
    *(void *)uint64_t v136 = 0;
    *(void *)(v136 + 8) = 0;
    *(unsigned char *)(v136 + 16) = 1;
    uint64_t v137 = (void *)(v128 + v127[13]);
    *uint64_t v137 = 0;
    v137[1] = 0;
    *(void *)(v128 + v127[14]) = 0;
    *(unsigned char *)(v128 + v127[15]) = 0;
    uint64_t v138 = (void *)(v128 + v127[16]);
    *uint64_t v138 = 0;
    v138[1] = 0;
    uint64_t v139 = (void *)(v128 + v127[17]);
    void *v139 = 0;
    v139[1] = 0;
    uint64_t v140 = (void *)(v128 + v127[18]);
    *uint64_t v140 = 0;
    v140[1] = 0;
    *(void *)(v128 + v127[19]) = 0;
    *(unsigned char *)(v128 + v127[20]) = 1;
    long long v141 = (void *)(v128 + v127[21]);
    void *v141 = 0;
    v141[1] = 0;
    *(void *)(v128 + v127[22]) = v135;
    uint64_t v142 = swift_getKeyPath();
    uint64_t v143 = *(void **)(a1 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v147 = v143;
    id v148 = v185;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    Swift::Bool v149 = Locale.isRTL()();
    ((void (*)(char *, uint64_t))v209)(v148, v233);
    id v150 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
    if (!v149) {
      id v150 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
    }
    uint64_t v151 = v186;
    uint64_t v152 = v226;
    v228(v186, *v150, v226);
    uint64_t v153 = (uint64_t)v191;
    uint64_t v154 = (uint64_t *)&v191[*(int *)(v190 + 36)];
    v208((char *)v154 + *(int *)(v207 + 28), v151, v152);
    *uint64_t v154 = v142;
    uint64_t v155 = v224;
    sub_100084258(v224, v153, type metadata accessor for LanguageAwareText);
    ((void (*)(char *, uint64_t))v211)(v151, v152);
    sub_100084A60(v155, type metadata accessor for LanguageAwareText);
    uint64_t v156 = *(void *)(a1 + 64);
    uint64_t v235 = *(void *)(a1 + 56);
    uint64_t v236 = v156;
    State.projectedValue.getter();
    sub_10007F014();
    uint64_t v157 = v188;
    View.bindGeometry(to:reader:)();
    swift_release();
    swift_release();
    sub_10000B070(v153, &qword_1002F2E68);
    uint64_t v158 = v194;
    uint64_t v159 = v192;
    uint64_t v160 = v195;
    (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v192, v157, v195);
    uint64_t v161 = v223;
    uint64_t v162 = v189;
    sub_10000C3A4(v223, v189, &qword_1002F2E48);
    Swift::Bool v163 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
    uint64_t v164 = v193;
    v163(v193, v159, v160);
    uint64_t v146 = v221;
    sub_10000C3A4(v162, v221, &qword_1002F2E48);
    uint64_t v165 = sub_100007620(&qword_1002F2FD0);
    v163((char *)(v146 + *(int *)(v165 + 48)), v164, v160);

    uint64_t v166 = *(void (**)(char *, uint64_t))(v158 + 8);
    v166(v159, v160);
    sub_10000B070(v161, &qword_1002F2E48);
    v166(v164, v160);
    sub_10000B070(v162, &qword_1002F2E48);
    uint64_t v167 = sub_100007620(&qword_1002F2FC0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56))(v146, 0, 1, v167);
    uint64_t v145 = v220;
    sub_10001323C(v146, v220, &qword_1002F2F90);
  }
  else
  {
    uint64_t v144 = sub_100007620(&qword_1002F2FC0);
    uint64_t v145 = v220;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v220, 1, 1, v144);
    uint64_t v146 = v221;
  }
  uint64_t v168 = v231;
  uint64_t v169 = v218;
  sub_10000C3A4(v231, v218, &qword_1002F2FB0);
  uint64_t v170 = v232;
  uint64_t v171 = v219;
  sub_10000C3A4(v232, v219, &qword_1002F2FA8);
  sub_10000C3A4(v145, v146, &qword_1002F2F90);
  uint64_t v172 = v222;
  sub_10000C3A4(v169, v222, &qword_1002F2FB0);
  uint64_t v173 = sub_100007620(&qword_1002F2FC8);
  sub_10000C3A4(v171, v172 + *(int *)(v173 + 48), &qword_1002F2FA8);
  sub_10000C3A4(v146, v172 + *(int *)(v173 + 64), &qword_1002F2F90);
  sub_10000B070(v145, &qword_1002F2F90);
  sub_10000B070(v170, &qword_1002F2FA8);
  sub_10000B070(v168, &qword_1002F2FB0);
  sub_10000B070(v146, &qword_1002F2F90);
  sub_10000B070(v171, &qword_1002F2FA8);
  return sub_10000B070(v169, &qword_1002F2FB0);
}

void sub_100082908(void *a1)
{
  uint64_t v3 = type metadata accessor for ConversationEditorBubble();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CharacterSet();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[3] = &type metadata for TranslateFeatures;
  v34[4] = sub_10000AB14();
  LOBYTE(v34[0]) = 4;
  char v14 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v34);
  if (v14)
  {
    uint64_t v32 = v4;
    uint64_t v33 = v1;
    id v15 = [a1 text];
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      v34[0] = v17;
      v34[1] = v19;
      static CharacterSet.whitespacesAndNewlines.getter();
      sub_10000C350();
      uint64_t v20 = StringProtocol.trimmingCharacters(in:)();
      unint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0) {
        uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        uint64_t v24 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v9, 1, 1, v24);
        sub_100084258(v33, (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
        type metadata accessor for MainActor();
        id v25 = a1;
        uint64_t v26 = static MainActor.shared.getter();
        unint64_t v27 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
        unint64_t v28 = (v5 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = v26;
        *(void *)(v29 + 24) = &protocol witness table for MainActor;
        sub_100083E64((uint64_t)v6, v29 + v27);
        *(void *)(v29 + v28) = v25;
        sub_100056780((uint64_t)v9, (uint64_t)&unk_1002F3000, v29);
        swift_release();
      }
      else
      {
        id v30 = *(id *)(v33 + 8);
        sub_1000AB7B0();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100082C64(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for ConversationEditorBubble();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  sub_100084258(a2, (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for ConversationEditorBubble);
  type metadata accessor for MainActor();
  id v14 = a1;
  uint64_t v15 = static MainActor.shared.getter();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = v15;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v14;
  sub_100083E64((uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16);
  sub_100056780((uint64_t)v12, a4, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_100082E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = type metadata accessor for CharacterSet();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[18] = v8;
  v5[19] = v7;
  return _swift_task_switch(sub_100082F30, v8, v7);
}

id sub_100082F30()
{
  id result = [*(id *)(v0 + 96) text];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v2 = result;
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v8;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000C350();
  uint64_t v9 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    id v14 = *(void **)(v0 + 96);
    uint64_t v15 = *(void **)(*(void *)(v0 + 104) + 8);
    *(void *)(v0 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v15;
    v15;
    id result = [v14 text];
    if (result)
    {
      unint64_t v16 = result;
      uint64_t v17 = *(void *)(v0 + 128);
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      *(void *)(v0 + 64) = v20;
      *(void *)(v0 + 72) = v22;
      static CharacterSet.whitespacesAndNewlines.getter();
      uint64_t v23 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v25 = v24;
      *(void *)(v0 + 168) = v24;
      v12(v17, v19);
      swift_bridgeObjectRelease();
      char v26 = *(unsigned char *)(v18 + 32);
      unint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v27;
      *unint64_t v27 = v0;
      v27[1] = sub_100083228;
      return (id)sub_1000AA634(v23, v25, v26);
    }
LABEL_13:
    __break(1u);
    return result;
  }
  swift_release();
  unint64_t v28 = *(void **)(v0 + 96);
  *(void *)(v0 + 16) = sub_10007FF10();
  *(void *)(v0 + 24) = v29;
  *(void *)(v0 + 32) = v30;
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v31;
  *(_OWORD *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = xmmword_10024CA90;
  sub_100007620(&qword_1002F6C70);
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  NSString v32 = String._bridgeToObjectiveC()();
  [v28 setText:v32];

  [v28 resignFirstResponder];
  swift_task_dealloc();
  uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v33();
}

uint64_t sub_100083228()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 160);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100083384, v4, v3);
}

uint64_t sub_100083384()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 96);
  *(void *)(v0 + 16) = sub_10007FF10();
  *(void *)(v0 + 24) = v2;
  *(void *)(v0 + 32) = v3;
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v4;
  *(_OWORD *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = xmmword_10024CA90;
  sub_100007620(&qword_1002F6C70);
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 setText:v5];

  [v1 resignFirstResponder];
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000834A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  void v5[5] = a5;
  uint64_t v6 = type metadata accessor for CharacterSet();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100083598, v8, v7);
}

id sub_100083598()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = *(void **)(v0[4] + 8);
  v0[12] = v2;
  v2;
  id result = [v1 text];
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v6 = v0[7];
    uint64_t v5 = v0[8];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[4];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    v0[2] = v9;
    v0[3] = v11;
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_10000C350();
    uint64_t v12 = StringProtocol.trimmingCharacters(in:)();
    uint64_t v14 = v13;
    v0[13] = v13;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_bridgeObjectRelease();
    char v15 = *(unsigned char *)(v8 + 32);
    unint64_t v16 = (void *)swift_task_alloc();
    v0[14] = v16;
    *unint64_t v16 = v0;
    v16[1] = sub_1000836FC;
    return (id)sub_1000AAEB8(v12, v14, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000836FC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100083858, v4, v3);
}

uint64_t sub_100083858()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000838C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = type metadata accessor for CharacterSet();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[17] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[18] = v8;
  v5[19] = v7;
  return _swift_task_switch(sub_1000839B4, v8, v7);
}

id sub_1000839B4()
{
  id result = [*(id *)(v0 + 96) text];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = result;
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  *(void *)(v0 + 48) = v6;
  *(void *)(v0 + 56) = v8;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_10000C350();
  uint64_t v9 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v11 = v10;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v12(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v13)
  {
    uint64_t v14 = *(void **)(v0 + 96);
    char v15 = *(void **)(*(void *)(v0 + 104) + 8);
    *(void *)(v0 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v15;
    v15;
    id result = [v14 text];
    if (result)
    {
      unint64_t v16 = result;
      uint64_t v17 = *(void *)(v0 + 128);
      uint64_t v18 = *(void *)(v0 + 104);
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      *(void *)(v0 + 64) = v20;
      *(void *)(v0 + 72) = v22;
      static CharacterSet.whitespacesAndNewlines.getter();
      uint64_t v23 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v25 = v24;
      *(void *)(v0 + 168) = v24;
      v12(v17, v19);
      swift_bridgeObjectRelease();
      char v26 = *(unsigned char *)(v18 + 32);
      unint64_t v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v27;
      *unint64_t v27 = v0;
      v27[1] = sub_100083C0C;
      return (id)sub_1000AA634(v23, v25, v26);
    }
LABEL_13:
    __break(1u);
    return result;
  }
  swift_release();
  swift_task_dealloc();
  unint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return (id)v28();
}

uint64_t sub_100083C0C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 160);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100083D68, v4, v3);
}

uint64_t sub_100083D68()
{
  swift_release();
  *(void *)(v0 + 16) = sub_10007FF10();
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v2;
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v3;
  *(_OWORD *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = xmmword_10024CA90;
  sub_100007620(&qword_1002F6C70);
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100083E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConversationEditorBubble();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100083EC8(void *a1)
{
}

uint64_t sub_100083F30(void *a1)
{
  return sub_100084104(a1, (uint64_t)&unk_1002CBEB8, (uint64_t)&unk_1002F2FF0);
}

void sub_100083F54()
{
}

uint64_t sub_100083FB4()
{
  uint64_t v1 = (int *)(type metadata accessor for ConversationEditorBubble() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[12];
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000840E4(void *a1)
{
  return sub_100084104(a1, (uint64_t)&unk_1002CBE90, (uint64_t)&unk_1002F2FE0);
}

uint64_t sub_100084104(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for ConversationEditorBubble() - 8);
  return sub_100082C64(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

unint64_t sub_100084188()
{
  unint64_t result = qword_1002F2FB8;
  if (!qword_1002F2FB8)
  {
    sub_100007928(&qword_1002F2F98);
    sub_1000842D0((unint64_t *)&unk_1002F6C60, (void (*)(uint64_t))type metadata accessor for LanguageAwareEditor);
    sub_100014894(&qword_1002EF460, &qword_1002EF468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F2FB8);
  }
  return result;
}

uint64_t sub_100084258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000842D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100084324(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ConversationEditorBubble() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1000838C0(a1, v5, v6, v7, v8);
}

void sub_100084420()
{
  uint64_t v1 = *(void **)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6 == 1)
  {

LABEL_4:
    id v3 = v2;
    sub_1000AC2B0(4, 0, 1);

    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v5 == 1) {
    goto LABEL_4;
  }
  type metadata accessor for ConversationViewModel();
  sub_1000842D0(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  id v4 = v2;
  ObservableObject<>.objectWillChange.getter();

  ObservableObjectPublisher.send()();
  swift_release();
}

uint64_t sub_1000845A4()
{
  uint64_t v1 = (int *)(type metadata accessor for ConversationEditorBubble() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[12];
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000846E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ConversationEditorBubble() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100021B58;
  return sub_100082E3C(a1, v5, v6, v7, v8);
}

uint64_t sub_1000847E0()
{
  uint64_t v1 = (int *)(type metadata accessor for ConversationEditorBubble() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3 + v1[12];
  sub_100007620(&qword_1002F2CC0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_100084934(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ConversationEditorBubble() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_1000496A4;
  return sub_1000834A4(a1, v6, v7, v8, v9);
}

uint64_t sub_100084A60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100084AC4()
{
  unint64_t result = qword_1002F3008;
  if (!qword_1002F3008)
  {
    sub_100007928(&qword_1002F2F78);
    sub_100084B40();
    sub_10007EAE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3008);
  }
  return result;
}

unint64_t sub_100084B40()
{
  unint64_t result = qword_1002F3010;
  if (!qword_1002F3010)
  {
    sub_100007928(&qword_1002F2F70);
    sub_100014894(&qword_1002F3018, &qword_1002F2F68);
    sub_10007E74C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3010);
  }
  return result;
}

char *sub_100084BE0(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    a1[8] = *((unsigned char *)a2 + 8);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = &a1[v6];
    uint64_t v8 = (char **)((char *)a2 + v6);
    uint64_t v9 = v5;
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = sub_100007620(&qword_1002F1058);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100084DAC(id *a1, uint64_t a2)
{
  int v4 = (char *)a1 + *(int *)(a2 + 24);
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100084ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  id v8 = v4;
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      uint64_t v11 = sub_100007620(&qword_1002F1058);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  else
  {
    void *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100085058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10000B070(a1 + v9, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100085204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = sub_100007620(&qword_1002F1058);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10008538C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_10000B070(a1 + v7, (uint64_t *)&unk_1002F5770);
    uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = sub_100007620(&qword_1002F1058);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10008553C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100085550);
}

uint64_t sub_100085550(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100007620(&qword_1002F1068);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100085604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100085618);
}

void *sub_100085618(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100007620(&qword_1002F1068);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ConversationList()
{
  uint64_t result = qword_1002F3078;
  if (!qword_1002F3078) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100085710()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_1000857B4()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v42 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v41 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100007620(&qword_1002F1200);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002F1058);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - v10;
  __chkstk_darwin(v9);
  uint64_t v46 = (uint64_t)&v41 - v12;
  uint64_t v13 = self;
  id v14 = [v13 fractionalWidthDimension:1.0];
  id v15 = [v13 estimatedDimension:60.0];
  unint64_t v16 = self;
  id v17 = [v16 sizeWithWidthDimension:v14 heightDimension:v15];

  uint64_t v18 = self;
  id v45 = v17;
  id v19 = v17;
  uint64_t v20 = v42;
  id v21 = [v18 itemWithLayoutSize:v19];
  [v21 setContentInsets:0.0, 0.0, 0.0, 0.0];
  id v22 = [v13 fractionalWidthDimension:1.0];
  id v23 = [v13 estimatedDimension:60.0];
  id v24 = [v16 sizeWithWidthDimension:v22 heightDimension:v23];

  uint64_t v25 = self;
  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10024CE10;
  *(void *)(v26 + 32) = v21;
  uint64_t v47 = v26;
  specialized Array._endMutation()();
  sub_100086064();
  id v43 = v21;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unint64_t v28 = (void *)v25;
  uint64_t v29 = v46;
  id v30 = [v28 horizontalGroupWithLayoutSize:v24 subitems:isa];

  type metadata accessor for ConversationList();
  sub_100100194(v29);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v0);
  uint64_t v31 = (uint64_t)&v5[*(int *)(v3 + 56)];
  sub_1000860A4(v29, (uint64_t)v5);
  sub_1000860A4((uint64_t)v11, v31);
  NSString v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v32((uint64_t)v5, 1, v0) != 1)
  {
    sub_1000860A4((uint64_t)v5, v44);
    if (v32(v31, 1, v0) != 1)
    {
      uint64_t v34 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v41, v31, v0);
      sub_10008610C((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      uint64_t v35 = v44;
      char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v20 + 8);
      v37(v34, v0);
      sub_10000B070((uint64_t)v11, &qword_1002F1058);
      sub_10000B070(v46, &qword_1002F1058);
      v37((char *)v35, v0);
      sub_10000B070((uint64_t)v5, &qword_1002F1058);
      double v33 = 0.0;
      if (v36) {
        goto LABEL_9;
      }
LABEL_8:
      double v33 = 65.0;
      goto LABEL_9;
    }
    sub_10000B070((uint64_t)v11, &qword_1002F1058);
    sub_10000B070(v29, &qword_1002F1058);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v44, v0);
LABEL_6:
    sub_10000B070((uint64_t)v5, &qword_1002F1200);
    goto LABEL_8;
  }
  sub_10000B070((uint64_t)v11, &qword_1002F1058);
  sub_10000B070(v29, &qword_1002F1058);
  if (v32(v31, 1, v0) != 1) {
    goto LABEL_6;
  }
  sub_10000B070((uint64_t)v5, &qword_1002F1058);
  double v33 = 0.0;
LABEL_9:
  [v30 setContentInsets:0.0, v33, 0.0, v33];
  id v38 = [self sectionWithGroup:v30];
  [v38 setContentInsets:0.0, 0.0, 0.0, 0.0];
  id v39 = [objc_allocWithZone((Class)type metadata accessor for BottomToTopLayout()) initWithSection:v38];

  return v39;
}

void *sub_100085E40()
{
  id v1 = sub_1000857B4();
  uint64_t v2 = *(void **)v0;
  char v3 = *(unsigned char *)(v0 + 8);
  id v4 = objc_allocWithZone((Class)type metadata accessor for ConversationListController());
  return sub_100086688(v1, v2, v3);
}

uint64_t sub_100085E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008610C(&qword_1002F30C8, (void (*)(uint64_t))type metadata accessor for ConversationList);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100085F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10008610C(&qword_1002F30C8, (void (*)(uint64_t))type metadata accessor for ConversationList);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100085FC4()
{
}

uint64_t sub_10008601C()
{
  return sub_10008610C(&qword_1002F30B8, (void (*)(uint64_t))type metadata accessor for ConversationList);
}

unint64_t sub_100086064()
{
  unint64_t result = qword_1002F30C0;
  if (!qword_1002F30C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F30C0);
  }
  return result;
}

uint64_t sub_1000860A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F1058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10008610C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100086154@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_100086168(void *a1@<X8>)
{
  *a1 = 0;
}

Swift::Int sub_100086170()
{
  return Hasher._finalize()();
}

void sub_1000861B4()
{
}

Swift::Int sub_1000861DC()
{
  return Hasher._finalize()();
}

void sub_10008621C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  switch(a2)
  {
    case 0uLL:
      Swift::UInt v4 = 1;
      goto LABEL_10;
    case 1uLL:
      Swift::UInt v4 = 2;
      goto LABEL_10;
    case 2uLL:
      Swift::UInt v4 = 3;
      goto LABEL_10;
    case 3uLL:
      Swift::UInt v4 = 4;
      goto LABEL_10;
    case 4uLL:
      Swift::UInt v4 = 5;
LABEL_10:
      Hasher._combine(_:)(v4);
      break;
    default:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(a3 + 24);
      swift_unknownObjectRetain();
      v7(ObjectType, a3);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10008AA10(a2);
      break;
  }
}

Swift::Int sub_10008633C(unint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  switch(a1)
  {
    case 0uLL:
      Swift::UInt v4 = 1;
      goto LABEL_8;
    case 1uLL:
      Swift::UInt v4 = 2;
      goto LABEL_8;
    case 2uLL:
      Swift::UInt v4 = 3;
      goto LABEL_8;
    case 3uLL:
      Swift::UInt v4 = 4;
      goto LABEL_8;
    case 4uLL:
      Swift::UInt v4 = 5;
LABEL_8:
      Hasher._combine(_:)(v4);
      break;
    default:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(a2 + 24);
      swift_unknownObjectRetain();
      v6(ObjectType, a2);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10008AA10(a1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_100086468(uint64_t a1, uint64_t a2)
{
  return sub_10008A85C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

Swift::Int sub_10008647C()
{
  return sub_10008633C(*(void *)v0, *(void *)(v0 + 8));
}

void sub_100086484(uint64_t a1)
{
  sub_10008621C(a1, *(void *)v1, *(void *)(v1 + 8));
}

Swift::Int sub_10008648C()
{
  unint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  Hasher.init(_seed:)();
  switch(v2)
  {
    case 0uLL:
      Swift::UInt v3 = 1;
      goto LABEL_8;
    case 1uLL:
      Swift::UInt v3 = 2;
      goto LABEL_8;
    case 2uLL:
      Swift::UInt v3 = 3;
      goto LABEL_8;
    case 3uLL:
      Swift::UInt v3 = 4;
      goto LABEL_8;
    case 4uLL:
      Swift::UInt v3 = 5;
LABEL_8:
      Hasher._combine(_:)(v3);
      break;
    default:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, unint64_t))(v1 + 24);
      swift_unknownObjectRetain();
      v5(ObjectType, v1);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10008AA10(v2);
      break;
  }
  return Hasher._finalize()();
}

id sub_1000865B4()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController____lazy_storage___bottomSeparatorLine;
  unint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController____lazy_storage___bottomSeparatorLine);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController____lazy_storage___bottomSeparatorLine);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [self separatorColor];
    [v4 setBackgroundColor:v5];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void *sub_100086688(void *a1, void *a2, char a3)
{
  id v93 = a1;
  uint64_t v87 = sub_100007620(&qword_1002F20D0);
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v83 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100007620(&qword_1002F3190);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v82 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F3198);
  uint64_t v89 = *(void *)(v8 - 8);
  uint64_t v90 = v8;
  __chkstk_darwin(v8);
  double v88 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v81 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F31A0);
  uint64_t v79 = *(void *)(v12 - 8);
  uint64_t v80 = v12;
  __chkstk_darwin(v12);
  uint64_t v78 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100007620(&qword_1002EF7B8);
  uint64_t v72 = *(void *)(v61 - 8);
  uint64_t v14 = __chkstk_darwin(v61);
  uint64_t v70 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v69 = (char *)&v59 - v16;
  uint64_t v68 = sub_100007620(&qword_1002F31A8);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002FAED0);
  uint64_t v19 = __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v20 = sub_100007620(&qword_1002F31B0);
  __chkstk_darwin(v20);
  uint64_t v60 = sub_100007620(&qword_1002F31B8);
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100007620(&qword_1002F31C0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  id v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100007620(&qword_1002F31C8);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v71 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100007620(&qword_1002F31D0);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  id v75 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_dataSource] = 0;
  unint64_t v27 = v3;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    unint64_t v28 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    unint64_t v28 = &_swiftEmptySetSingleton;
  }
  *(void *)&v27[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_observers] = v28;
  *(void *)&v27[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController____lazy_storage___bottomSeparatorLine] = 0;
  *(void *)&v27[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel] = a2;
  v27[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_faceToFaceSide] = a3;
  id v29 = a2;

  id v30 = (objc_class *)type metadata accessor for ConversationListController();
  v96.receiver = v27;
  v96.super_class = v30;
  [super initWithCollectionViewLayout:v93];
  uint64_t v65 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session;
  swift_beginAccess();
  id v92 = v31;
  sub_100007620((uint64_t *)&unk_1002F9700);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  sub_100007620(&qword_1002F34A0);
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894((unint64_t *)&unk_1002FCB30, &qword_1002F31B0);
  sub_100014894(&qword_1002F31D8, &qword_1002FAED0);
  id v59 = v22;
  Publishers.CombineLatest3.init(_:_:_:)();
  swift_beginAccess();
  sub_100007620(&qword_1002F31E0);
  NSString v32 = v66;
  Published.projectedValue.getter();
  swift_endAccess();
  id v94 = v29;
  swift_beginAccess();
  sub_100007620(&qword_1002EF7C8);
  double v33 = v69;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v34 = v70;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F31E8, &qword_1002F31B8);
  uint64_t v91 = &protocol conformance descriptor for Published<A>.Publisher;
  sub_100014894(&qword_1002F31F0, &qword_1002F31A8);
  sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  uint64_t v35 = v24;
  uint64_t v36 = v60;
  uint64_t v37 = v68;
  uint64_t v38 = v61;
  id v39 = v59;
  Publisher.combineLatest<A, B, C>(_:_:_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v72 + 8);
  v40(v34, v38);
  v40(v33, v38);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v37);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v36);
  swift_beginAccess();
  sub_100007620(&qword_1002F2148);
  uint64_t v41 = v78;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F31F8, &qword_1002F31C0);
  sub_100014894(&qword_1002F3200, &qword_1002F31A0);
  uint64_t v42 = v71;
  uint64_t v43 = v64;
  uint64_t v44 = v80;
  Publisher.combineLatest<A>(_:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v41, v44);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v43);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v95 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v45 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v79 = *(void *)(v46 + 56);
  uint64_t v80 = v46 + 56;
  uint64_t v47 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v79)(v81, 1, 1, v45);
  sub_100014894(&qword_1002F3208, &qword_1002F31C8);
  sub_100022364();
  uint64_t v48 = v75;
  uint64_t v49 = v74;
  Publisher.receive<A>(on:options:)();
  sub_10008B6B4(v47);

  (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v49);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F3210, &qword_1002F31D0);
  uint64_t v50 = v77;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v50);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100007620(&qword_1002EF7B0);
  uint64_t v51 = v83;
  Published.projectedValue.getter();
  swift_endAccess();
  id v95 = (id)static OS_dispatch_queue.main.getter();
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v79)(v47, 1, 1, v45);
  sub_100014894(&qword_1002F21B0, &qword_1002F20D0);
  uint64_t v52 = v82;
  uint64_t v53 = v87;
  Publisher.receive<A>(on:options:)();
  sub_10008B6B4(v47);

  (*(void (**)(char *, uint64_t))(v85 + 8))(v51, v53);
  sub_100014894(&qword_1002F3218, &qword_1002F3190);
  id v54 = v88;
  uint64_t v55 = v86;
  Publisher.dropFirst(_:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v55);
  swift_allocObject();
  uint64_t v56 = v92;
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F3220, &qword_1002F3198);
  uint64_t v57 = v90;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v54, v57);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  return v56;
}

void sub_10008765C(void *a1)
{
  uint64_t v2 = sub_100007620(&qword_1002F3228);
  __chkstk_darwin(v2);
  id v4 = (void *)((char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v88 = (void *)Strong;
    uint64_t v98 = sub_100007620(&qword_1002F3230);
    uint64_t v6 = *(int *)(v98 + 48);
    unint64_t v95 = (unint64_t)v4 + v6;
    uint64_t v7 = *(int *)(v98 + 64);
    uint64_t v89 = (char *)v4 + v7;
    uint64_t v8 = (int *)sub_100007620(&qword_1002F3238);
    uint64_t v9 = v8[12];
    uint64_t v10 = (void *)((char *)v4 + v9);
    unint64_t v91 = v8[16];
    uint64_t v94 = v8[20];
    uint64_t v11 = *(int *)(v2 + 48);
    objc_super v96 = (char *)v4 + v11;
    uint64_t v97 = v2;
    uint64_t v12 = (void *)((char *)a1 + v9);
    uint64_t v102 = (unsigned __int16 *)((char *)a1 + v11);
    uint64_t v103 = (char *)a1 + v91;
    uint64_t v104 = (void *)((char *)a1 + v94);
    uint64_t v13 = (char *)a1 + v6;
    uint64_t v14 = (char *)a1 + v7;
    uint64_t v100 = (char *)a1 + v6;
    uint64_t v101 = (char *)a1 + v7;
    *id v4 = *a1;
    uint64_t v15 = type metadata accessor for Locale();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v99 = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16 + 16;
    uint64_t v18 = *(void (**)(void))(v16 + 16);
    ((void (*)(unint64_t, char *, uint64_t))v18)(v95, v13, v15);
    uint64_t v20 = v89;
    ((void (*)(char *, char *, uint64_t))v18)(v89, v14, v15);
    uint64_t v21 = *v12;
    uint64_t v22 = v12[1];
    uint64_t v24 = v12[2];
    uint64_t v23 = v12[3];
    uint64_t v25 = v12[4];
    *uint64_t v10 = *v12;
    v10[1] = v22;
    void v10[2] = v24;
    v10[3] = v23;
    uint64_t v26 = v24;
    uint64_t v92 = v24;
    void v10[4] = v25;
    unint64_t v27 = v102;
    *(_OWORD *)((char *)v4 + v91) = *(_OWORD *)v103;
    *(_OWORD *)((char *)v4 + v94) = *(_OWORD *)v104;
    LOWORD(v24) = *v27;
    unint64_t v28 = v96;
    v96[2] = *((unsigned char *)v27 + 2);
    *unint64_t v28 = v24;
    uint64_t v85 = v21;
    v84[1] = v25;
    sub_10008B75C(v21, v22, v26);
    id v29 = *(char **)(v17 + 8);
    uint64_t v94 = v17 + 8;
    objc_super v96 = v29;
    ((void (*)(char *, uint64_t))v29)(v20, v15);
    ((void (*)(unint64_t, uint64_t))v29)(v95, v15);
    unint64_t v95 = (unint64_t)v4 + *(int *)(v98 + 48);
    id v30 = (char *)v4 + *(int *)(v98 + 64);
    id v31 = (char *)v4 + v8[12];
    NSString v32 = (void *)((char *)v4 + v8[16]);
    unint64_t v33 = v8[20];
    uint64_t v90 = v18;
    unint64_t v91 = v33;
    uint64_t v34 = (char *)v4 + *(int *)(v97 + 48);
    *id v4 = *v99;
    uint64_t v93 = v19;
    v18();
    ((void (*)(char *, char *, uint64_t))v18)(v30, v101, v15);
    uint64_t v35 = v12[4];
    long long v36 = *((_OWORD *)v12 + 1);
    *(_OWORD *)id v31 = *(_OWORD *)v12;
    *((_OWORD *)v31 + 1) = v36;
    *((void *)v31 + 4) = v35;
    unint64_t v37 = *((void *)v103 + 1);
    uint64_t v86 = *(void *)v103;
    *NSString v32 = v86;
    v32[1] = v37;
    *(_OWORD *)((char *)v4 + v91) = *(_OWORD *)v104;
    LOWORD(v35) = *v102;
    v34[2] = *((unsigned char *)v102 + 2);
    *(_WORD *)uint64_t v34 = v35;
    unint64_t v91 = v37;
    swift_bridgeObjectRetain();
    uint64_t v38 = (void (*)(unint64_t, uint64_t))v96;
    ((void (*)(char *, uint64_t))v96)(v30, v15);
    v38(v95, v15);
    uint64_t v89 = (char *)v4 + *(int *)(v98 + 48);
    id v39 = (char *)v4 + *(int *)(v98 + 64);
    uint64_t v40 = (char *)v4 + v8[12];
    unint64_t v95 = v8[16];
    uint64_t v41 = (void *)((char *)v4 + v8[20]);
    uint64_t v42 = (char *)v4 + *(int *)(v97 + 48);
    *id v4 = *v99;
    uint64_t v43 = v90;
    v90();
    ((void (*)(char *, char *, uint64_t))v43)(v39, v101, v15);
    uint64_t v44 = v12[4];
    long long v45 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v12;
    *((_OWORD *)v40 + 1) = v45;
    *((void *)v40 + 4) = v44;
    uint64_t v46 = v104;
    *(_OWORD *)((char *)v4 + v95) = *(_OWORD *)v103;
    uint64_t v47 = (char *)v46[1];
    uint64_t v87 = *v46;
    *uint64_t v41 = v87;
    v41[1] = v47;
    LOWORD(v44) = *v102;
    _OWORD v42[2] = *((unsigned char *)v102 + 2);
    *(_WORD *)uint64_t v42 = v44;
    unint64_t v95 = (unint64_t)v47;
    swift_bridgeObjectRetain();
    uint64_t v48 = (void (*)(char *, uint64_t))v96;
    ((void (*)(char *, uint64_t))v96)(v39, v15);
    v48(v89, v15);
    uint64_t v49 = (char *)v4 + *(int *)(v98 + 48);
    uint64_t v50 = (char *)v4 + *(int *)(v98 + 64);
    uint64_t v51 = (char *)v4 + v8[12];
    uint64_t v89 = (char *)v8[16];
    uint64_t v98 = v8[20];
    uint64_t v52 = (char *)v4 + *(int *)(v97 + 48);
    uint64_t v53 = v100;
    *id v4 = *v99;
    ((void (*)(char *, char *, uint64_t))v43)(v49, v53, v15);
    ((void (*)(char *, char *, uint64_t))v43)(v50, v101, v15);
    uint64_t v54 = v12[4];
    long long v55 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v12;
    *((_OWORD *)v51 + 1) = v55;
    *((void *)v51 + 4) = v54;
    *(_OWORD *)&v89[(void)v4] = *(_OWORD *)v103;
    *(_OWORD *)((char *)v4 + v98) = *(_OWORD *)v104;
    int v56 = *((unsigned __int8 *)v102 + 2);
    int v57 = *v102;
    v52[2] = v56;
    *(_WORD *)uint64_t v52 = v57;
    id v58 = (void (*)(char *, uint64_t))v96;
    ((void (*)(char *, uint64_t))v96)(v50, v15);
    v58(v49, v15);
    if (v92)
    {
      unint64_t v59 = v95;
      if (!v91 || !v86 && v91 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (!v59)
        {
LABEL_12:
          swift_bridgeObjectRelease();
LABEL_34:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v73 = v85 & 1 | 2;
          uint64_t v74 = sub_1001107C0((uint64_t)&off_1002C83E0);
          swift_arrayDestroy();
          sub_10008AA00(v73);
          id v75 = v88;
          sub_1000896FC((uint64_t)v74, v73, 0);
          sub_10008AA10(v73);
          swift_bridgeObjectRelease();
          sub_10008AA10(v73);
LABEL_35:

          return;
        }
        if (!v87 && v59 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      if (qword_1002EE5D0 != -1) {
        swift_once();
      }
      uint64_t v69 = type metadata accessor for Logger();
      sub_100011554(v69, (uint64_t)qword_10030E978);
      uint64_t v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Partial speech result and any partial text result shouldn't happen at the same time", v72, 2u);
        swift_slowDealloc();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_34;
    }
    unint64_t v60 = v91;
    unint64_t v61 = v95;
    if (v91)
    {
      uint64_t v62 = v86;
      if (v95)
      {
        uint64_t v63 = HIBYTE(v91) & 0xF;
        if ((v91 & 0x2000000000000000) == 0) {
          uint64_t v63 = v86 & 0xFFFFFFFFFFFFLL;
        }
        if (v63)
        {
          uint64_t v64 = HIBYTE(v95) & 0xF;
          if ((v95 & 0x2000000000000000) == 0) {
            uint64_t v64 = v87 & 0xFFFFFFFFFFFFLL;
          }
          if (v64)
          {
            if (qword_1002EE5D0 != -1) {
              swift_once();
            }
            uint64_t v65 = type metadata accessor for Logger();
            sub_100011554(v65, (uint64_t)qword_10030E978);
            uint64_t v66 = Logger.logObject.getter();
            os_log_type_t v67 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v66, v67))
            {
              uint64_t v68 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v68 = 0;
              _os_log_impl((void *)&_mh_execute_header, v66, v67, "Device owner and partner shouldn't have text at the same time", v68, 2u);
              swift_slowDealloc();
            }
          }
        }
      }
      if (v62 || v60 != 0xE000000000000000)
      {
        char v76 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v76 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v81 = &off_1002C8420;
          goto LABEL_47;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    if (!v61)
    {
LABEL_42:
      if (((v57 | (v56 << 16)) & 0xFF0000) == 0x80000)
      {
        id v75 = v88;
        sub_1000896FC(0, 5uLL, 0);
        goto LABEL_35;
      }
      uint64_t v78 = sub_1001107C0((uint64_t)&off_1002C8480);
      swift_arrayDestroy();
      uint64_t v79 = (uint64_t)v78;
      unint64_t v80 = 4;
      goto LABEL_48;
    }
    if (!v87 && v61 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v77) {
      goto LABEL_42;
    }
    uint64_t v81 = &off_1002C8450;
LABEL_47:
    uint64_t v82 = sub_1001107C0((uint64_t)v81);
    swift_arrayDestroy();
    uint64_t v79 = (uint64_t)v82;
    unint64_t v80 = 5;
LABEL_48:
    uint64_t v83 = v88;
    sub_1000896FC(v79, v80, 0);

    swift_bridgeObjectRelease();
  }
}

void sub_100087FAC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong view];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 endEditing:1];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100088058()
{
  uint64_t v1 = sub_100007620(&qword_1002F3150);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v1);
  id v5 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = (objc_class *)type metadata accessor for ConversationListController();
  v17.receiver = v0;
  v17.super_class = v8;
  [super viewDidLoad];
  sub_100088320();
  *(void *)(swift_allocObject() + 16) = v0;
  sub_10000B0CC(0, &qword_1002F5FB0);
  uint64_t v9 = v0;
  UICollectionView.CellRegistration.init(handler:)();
  id result = [v9 collectionView];
  if (result)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
    unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v5, v1);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10008B3E4;
    *(void *)(v13 + 24) = v12;
    id v14 = objc_allocWithZone((Class)sub_100007620(&qword_1002F3158));
    uint64_t v15 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v16 = *(void **)&v9[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_dataSource];
    *(void *)&v9[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_dataSource] = v15;

    return (id)(*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100088320()
{
  uint64_t v1 = v0;
  id v2 = [v0 collectionView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = v2;
  [v2 setDelegate:v1];

  id v4 = [v1 collectionView];
  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v5 = v4;
  id v6 = [self systemGroupedBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = [v1 collectionView];
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  [v7 setAllowsSelection:0];

  id v9 = sub_1000865B4();
  [v9 setHidden:1];

  id v10 = [v1 view];
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v11 = v10;
  id v12 = sub_1000865B4();
  id v13 = [v1 collectionView];
  if (!v13)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v14 = v13;
  [v11 insertSubview:v12 aboveSubview:v13];

  sub_100007620((uint64_t *)&unk_1002F0270);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100249A60;
  id v16 = sub_1000865B4();
  id v17 = [v16 leadingAnchor];

  id v18 = [v1 view];
  if (!v18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v19 = v18;
  id v20 = [v18 leadingAnchor];

  id v21 = [v17 constraintEqualToAnchor:v20];
  *(void *)(v15 + 32) = v21;
  id v22 = sub_1000865B4();
  id v23 = [v22 trailingAnchor];

  id v24 = [v1 view];
  if (!v24)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = v24;
  id v26 = [v24 trailingAnchor];

  id v27 = [v23 constraintEqualToAnchor:v26];
  *(void *)(v15 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v27;
  id v28 = sub_1000865B4();
  id v29 = [v28 bottomAnchor];

  id v30 = [v1 view];
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v31 = v30;
  NSString v32 = self;
  id v33 = [v31 bottomAnchor];

  id v34 = [v29 constraintEqualToAnchor:v33];
  *(void *)(v15 + 48) = v34;
  id v35 = sub_1000865B4();
  id v36 = [v35 heightAnchor];

  id v37 = [v36 constraintEqualToConstant:0.5];
  *(void *)(v15 + 56) = v37;
  specialized Array._endMutation()();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];

  id v39 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"dismissKeyboard"];
  [v39 setCancelsTouchesInView:0];
  id v40 = [v1 view];
  if (!v40)
  {
LABEL_21:
    __break(1u);
    return;
  }
  id v41 = v40;
  [v40 addGestureRecognizer:v39];
}

unint64_t sub_1000887CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v30 - v12;
  unint64_t v14 = *a3;
  unint64_t v15 = a3[1];
  uint64_t v36 = 0;
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v16 = UICollectionViewCell.contentConfiguration.setter();
  switch(v14)
  {
    case 0uLL:
    case 1uLL:
      __chkstk_darwin(v16);
      *(&v30 - 2) = a4;
      *((void *)&v35 + 1) = sub_100007620(&qword_1002F3178);
      uint64_t v36 = sub_100014894(&qword_1002F3180, &qword_1002F3178);
      sub_100014830((uint64_t *)&v34);
      type metadata accessor for ConversationEditorBubble();
      sub_10008B550(&qword_1002F3188, (void (*)(uint64_t))type metadata accessor for ConversationEditorBubble);
      goto LABEL_4;
    case 2uLL:
    case 3uLL:
    case 4uLL:
      __chkstk_darwin(v16);
      *(&v30 - 2) = a4;
      *((void *)&v35 + 1) = sub_100007620(&qword_1002F3160);
      uint64_t v36 = sub_100014894(&qword_1002F3168, &qword_1002F3160);
      sub_100014830((uint64_t *)&v34);
      type metadata accessor for ConversationDisplayBubble();
      sub_10008B550(&qword_1002F3170, (void (*)(uint64_t))type metadata accessor for ConversationDisplayBubble);
LABEL_4:
      UIHostingConfiguration<>.init(content:)();
      unint64_t result = UICollectionViewCell.contentConfiguration.setter();
      break;
    default:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v32 = a1;
      uint64_t v33 = a4;
      uint64_t v19 = *(void (**)(uint64_t, unint64_t))(v15 + 32);
      swift_unknownObjectRetain();
      unint64_t v31 = v15;
      v19(ObjectType, v15);
      uint64_t v20 = Locale.identifier.getter();
      uint64_t v22 = v21;
      id v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v13, v7);
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v24 = Locale.identifier.getter();
      uint64_t v26 = v25;
      v23(v11, v7);
      if (v20 == v24 && v22 == v26) {
        char v28 = 1;
      }
      else {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_bridgeObjectRelease();
      __chkstk_darwin(v29);
      *(&v30 - 4) = v33;
      *(&v30 - 3) = v14;
      *(&v30 - 2) = v31;
      *((unsigned char *)&v30 - 8) = v28 & 1;
      *((void *)&v35 + 1) = sub_100007620(&qword_1002F3160);
      uint64_t v36 = sub_100014894(&qword_1002F3168, &qword_1002F3160);
      sub_100014830((uint64_t *)&v34);
      type metadata accessor for ConversationDisplayBubble();
      sub_10008B550(&qword_1002F3170, (void (*)(uint64_t))type metadata accessor for ConversationDisplayBubble);
      UIHostingConfiguration<>.init(content:)();
      UICollectionViewCell.contentConfiguration.setter();
      unint64_t result = sub_10008AA10(v14);
      break;
  }
  return result;
}

uint64_t sub_100088F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = a4 & 1;
  uint64_t v10 = sub_100007620(&qword_1002F2CB8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100007620(&qword_1002F2CB0);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (uint64_t *)((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel);
  LOBYTE(a1) = *(unsigned char *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_faceToFaceSide);
  *unint64_t v15 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v12 = swift_getKeyPath();
  sub_100007620(&qword_1002F2CC0);
  swift_storeEnumTagMultiPayload();
  id v17 = v16;
  swift_retain();
  swift_unknownObjectRetain();
  return sub_10007D3EC(a2, a3, v9, 2, a1, 2, a5, (uint64_t)v15, (uint64_t)v12);
}

double sub_1000890F8@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel);
  char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_faceToFaceSide);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)(a3 + *(int *)(type metadata accessor for ConversationEditorBubble() + 40)) = KeyPath;
  sub_100007620(&qword_1002F2CC0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ConversationViewModel();
  sub_10008B550(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
  id v8 = v5;
  swift_retain();
  *(void *)a3 = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 8) = v9;
  type metadata accessor for LanguagesService();
  sub_10008B550((unint64_t *)&unk_1002FCA70, (void (*)(uint64_t))&type metadata accessor for LanguagesService);
  *(void *)(a3 + 16) = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 24) = v10;
  *(unsigned char *)(a3 + 32) = a2;
  *(unsigned char *)(a3 + 33) = v6;
  State.init(wrappedValue:)();
  *(double *)(a3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v12;
  *(void *)(a3 + 48) = v13;
  State.init(wrappedValue:)();
  double result = v12;
  *(double *)(a3 + 56) = v12;
  *(void *)(a3 + 64) = v13;
  return result;
}

uint64_t sub_1000892B8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100007620(&qword_1002F2CB8);
  __chkstk_darwin(v6 - 8);
  id v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100007620(&qword_1002F2CB0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v12 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel);
  LOBYTE(a1) = *(unsigned char *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_faceToFaceSide);
  *uint64_t v11 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v8 = swift_getKeyPath();
  sub_100007620(&qword_1002F2CC0);
  swift_storeEnumTagMultiPayload();
  id v13 = v12;
  swift_retain();
  return sub_10007D3EC(0, 0, 2, a2, a1, 2, a3, (uint64_t)v11, (uint64_t)v8);
}

uint64_t sub_100089458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100007620(&qword_1002F2CB8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100007620(&qword_1002F2CB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for ConversationDisplayBubble();
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel);
  char v14 = ((*(_WORD *)((unsigned char *)v13 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation) & 0xFF00) != 512) & *(_WORD *)((unsigned char *)v13 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation);
  *uint64_t v9 = swift_getKeyPath();
  sub_100007620(&qword_1002FACB0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v6 = swift_getKeyPath();
  sub_100007620(&qword_1002F2CC0);
  swift_storeEnumTagMultiPayload();
  id v15 = v13;
  swift_retain();
  sub_10007D3EC(0, 0, 2, 2, 2, v14, (uint64_t)v12, (uint64_t)v9, (uint64_t)v6);
  return sub_10007E86C((uint64_t)v12, a2);
}

uint64_t sub_100089658(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10008AA00(a3);
  sub_10000B0CC(0, &qword_1002F5FB0);
  uint64_t v4 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_10008AA10(a3);
  return v4;
}

id sub_1000896FC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v57 = a3;
  unint64_t v59 = a2;
  uint64_t v60 = a1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v61 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F3130);
  uint64_t v58 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10008AA20();
  sub_10008AA74();
  NSDiffableDataSourceSnapshot.init()();
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1002C8378);
  uint64_t v11 = *(void **)&v3[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_viewModel];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v12 = (unint64_t)v64;
  id v13 = v11;
  char v14 = sub_10008AAD0(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();

  unint64_t v15 = sub_10008A578((unint64_t)v14);
  uint64_t v16 = sub_1001620D8(v15);
  swift_bridgeObjectRelease();
  int64_t v17 = v16[2];
  uint64_t v62 = v8;
  if (v17)
  {
    uint64_t v55 = 0;
    int v56 = v4;
    uint64_t v18 = v6;
    uint64_t v19 = v5;
    uint64_t v64 = _swiftEmptyArrayStorage;
    sub_1000B2E24(0, v17, 0);
    uint64_t v20 = 0;
    uint64_t v21 = v64;
    do
    {
      long long v22 = *(_OWORD *)&v16[2 * v20 + 4];
      uint64_t v64 = v21;
      unint64_t v24 = v21[2];
      unint64_t v23 = v21[3];
      long long v63 = v22;
      swift_unknownObjectRetain();
      if (v24 >= v23 >> 1)
      {
        sub_1000B2E24(v23 > 1, v24 + 1, 1);
        uint64_t v21 = v64;
      }
      ++v20;
      _OWORD v21[2] = v24 + 1;
      *(_OWORD *)&v21[2 * v24 + 4] = v63;
    }
    while (v17 != v20);
    swift_bridgeObjectRelease();
    uint64_t v5 = v19;
    uint64_t v6 = v18;
    uint64_t v4 = v56;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  LOBYTE(v64) = 1;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  unint64_t v25 = v59;
  if (v59 != 5)
  {
    sub_100007620(&qword_1002F3148);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1002488D0;
    uint64_t v27 = v57;
    *(void *)(v26 + 32) = v25;
    *(void *)(v26 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v27;
    LOBYTE(v64) = 1;
    sub_10008AA00(v25);
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = v60;
  if (v60)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_10008AE88((uint64_t)&off_1002C83A0, v28);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = &off_1002C83A0;
  }
  int v30 = v4[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_faceToFaceSide];
  if (v30 != 2)
  {
    uint64_t v60 = v6;
    uint64_t v31 = v5;
    uint64_t v32 = v4;
    uint64_t v33 = v29[2];
    if (v33)
    {
      long long v34 = v29 + 4;
      long long v35 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v39 = *v34;
        if (v30)
        {
          if (v39)
          {
LABEL_24:
            long long v63 = *(_OWORD *)v34;
            sub_10008AA00(v63);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v64 = v35;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1000B2E24(0, v35[2] + 1, 1);
              long long v35 = v64;
            }
            unint64_t v37 = v35[2];
            unint64_t v36 = v35[3];
            long long v38 = v63;
            if (v37 >= v36 >> 1)
            {
              sub_1000B2E24(v36 > 1, v37 + 1, 1);
              long long v38 = v63;
              long long v35 = v64;
            }
            v35[2] = v37 + 1;
            *(_OWORD *)&v35[2 * v37 + 4] = v38;
          }
        }
        else if (v39 != 1)
        {
          goto LABEL_24;
        }
        v34 += 2;
        --v33;
      }
      while (v33);
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v32;
    uint64_t v5 = v31;
    uint64_t v6 = v60;
  }
  LOBYTE(v64) = 1;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  swift_bridgeObjectRelease();
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v41 = type metadata accessor for Logger();
  sub_100011554(v41, (uint64_t)qword_10030E978);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 134217984;
    swift_beginAccess();
    long long v45 = *(void **)(NSDiffableDataSourceSnapshot.itemIdentifiers.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v64 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Snapshot identifiers count: %ld", v44, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v46 = *(void **)&v4[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_dataSource];
  uint64_t v47 = v61;
  if (v46)
  {
    swift_beginAccess();
    id v48 = v46;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  swift_beginAccess();
  uint64_t v49 = v62;
  if (NSDiffableDataSourceSnapshot.numberOfItems.getter() < 1) {
    return (id)(*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v10, v49);
  }
  uint64_t v50 = NSDiffableDataSourceSnapshot.numberOfItems.getter();
  BOOL v51 = __OFSUB__(v50, 1);
  id result = (id)(v50 - 1);
  if (v51)
  {
    __break(1u);
  }
  else
  {
    IndexPath.init(item:section:)();
    id result = [v4 collectionView];
    if (result)
    {
      uint64_t v53 = result;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v53 scrollToItemAtIndexPath:isa atScrollPosition:4 animated:0];

      (*(void (**)(char *, uint64_t))(v6 + 8))(v47, v5);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v10, v49);
    }
  }
  __break(1u);
  return result;
}

id sub_100089EFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationListController();
  return [super dealloc];
}

uint64_t type metadata accessor for ConversationListController()
{
  return self;
}

void sub_100089FC0(void *a1)
{
  [a1 bounds];
  double Height = CGRectGetHeight(v17);
  [a1 contentSize];
  double v4 = Height - v3;
  [a1 adjustedContentInset];
  double v6 = v4 - v5;
  if (v6 > 0.0) {
    double v7 = v6;
  }
  else {
    double v7 = 0.0;
  }
  [a1 bounds];
  double v8 = CGRectGetHeight(v18);
  [a1 adjustedContentInset];
  double v10 = v8 - v9;
  [a1 contentSize];
  double v12 = v7 + v11;
  [a1 contentOffset];
  double v14 = v12 - v13;
  id v15 = sub_1000865B4();
  [v15 setHidden:v14 <= v10 + 1.0];
}

unint64_t destroy for ConversationListController.ConversationCell(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t _s17SequoiaTranslator26ConversationListControllerC16ConversationCellOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_unknownObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for ConversationListController.ConversationCell(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      unint64_t v7 = a2[1];
      *a1 = v5;
      a1[1] = v7;
      swift_unknownObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  unint64_t v6 = a2[1];
  *a1 = v5;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v6;
  return a1;
}

unint64_t *assignWithTake for ConversationListController.ConversationCell(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  swift_unknownObjectRelease();
  a1[1] = v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationListController.ConversationCell(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConversationListController.ConversationCell(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_10008A358(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10008A370(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ConversationListController.ConversationCell()
{
  return &type metadata for ConversationListController.ConversationCell;
}

uint64_t getEnumTagSinglePayload for ConversationListController.ConversationListSection(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for ConversationListController.ConversationListSection(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10008A490);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationListController.ConversationListSection()
{
  return &type metadata for ConversationListController.ConversationListSection;
}

unint64_t sub_10008A4CC()
{
  unint64_t result = qword_1002F3120;
  if (!qword_1002F3120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3120);
  }
  return result;
}

unint64_t sub_10008A524()
{
  unint64_t result = qword_1002F3128;
  if (!qword_1002F3128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3128);
  }
  return result;
}

unint64_t sub_10008A578(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  unint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_100098590(v18);
          unint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_100098590(v18);
          unint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1002256B8(v1);
    unint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_10008A794(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContentSizeCategory();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.sizeCategory.setter();
}

uint64_t sub_10008A85C(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  switch(a1)
  {
    case 0uLL:
      if (a3) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 1uLL:
      if (a3 != 1) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 2uLL:
      if (a3 != 2) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 3uLL:
      if (a3 != 3) {
        goto LABEL_13;
      }
      goto LABEL_11;
    case 4uLL:
      if (a3 != 4) {
        goto LABEL_13;
      }
LABEL_11:
      char v6 = 1;
      break;
    default:
      if (a3 >= 5)
      {
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 24);
        sub_10008AA00(a1);
        sub_10008AA00(a3);
        uint64_t v12 = v11(ObjectType, a2);
        uint64_t v14 = v13;
        uint64_t v15 = swift_getObjectType();
        if (v12 == (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(v15, a4) && v14 == v16) {
          char v6 = 1;
        }
        else {
          char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10008AA10(a3);
        sub_10008AA10(a1);
      }
      else
      {
LABEL_13:
        char v6 = 0;
      }
      break;
  }
  return v6 & 1;
}

unint64_t sub_10008AA00(unint64_t result)
{
  if (result >= 5) {
    return swift_unknownObjectRetain();
  }
  return result;
}

unint64_t sub_10008AA10(unint64_t result)
{
  if (result >= 5) {
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_10008AA20()
{
  unint64_t result = qword_1002F3138;
  if (!qword_1002F3138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3138);
  }
  return result;
}

unint64_t sub_10008AA74()
{
  unint64_t result = qword_1002F3140;
  if (!qword_1002F3140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3140);
  }
  return result;
}

void *sub_10008AAD0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v31 = type metadata accessor for Locale();
  unint64_t v5 = *(void ***)(v31 - 8);
  uint64_t v6 = __chkstk_darwin(v31);
  int v30 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v29 = (char *)v24 - v8;
  unint64_t v36 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      v24[1] = v3;
      unint64_t v3 = 0;
      uint64_t v27 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v28 = a1 & 0xC000000000000001;
      _OWORD v24[2] = v5 + 1;
      uint64_t v25 = v9;
      unint64_t v26 = a1;
      uint64_t v11 = v29;
      id v10 = v30;
      uint64_t v12 = v5 + 1;
      uint64_t v13 = v31;
      while (v28)
      {
        uint64_t v14 = (void **)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        unint64_t v5 = v14;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        unint64_t v34 = v3 + 1;
        unint64_t v35 = v3;
        dispatch thunk of PersistedTranslation.sourceLocale.getter();
        dispatch thunk of PersistedTranslation.targetLocale.getter();
        id v15 = objc_allocWithZone((Class)_LTLocalePair);
        Class isa = Locale._bridgeToObjectiveC()().super.isa;
        Class v17 = Locale._bridgeToObjectiveC()().super.isa;
        id v18 = [v15 initWithSourceLocale:isa targetLocale:v17];

        uint64_t v33 = v5;
        unint64_t v5 = (void **)*v12;
        ((void (*)(char *, uint64_t))*v12)(v10, v13);
        ((void (*)(char *, uint64_t))v5)(v11, v13);
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        id v19 = objc_allocWithZone((Class)_LTLocalePair);
        Class v20 = Locale._bridgeToObjectiveC()().super.isa;
        Class v21 = Locale._bridgeToObjectiveC()().super.isa;
        id v22 = [v19 initWithSourceLocale:v20 targetLocale:v21];

        ((void (*)(char *, uint64_t))v5)(v10, v13);
        ((void (*)(char *, uint64_t))v5)(v11, v13);
        LODWORD(v21) = [v18 isBidirectionalEqual:v22];

        if (v21)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        a1 = v26;
        unint64_t v3 = v35 + 1;
        if (v34 == v25) {
          return v36;
        }
      }
      if (v3 < *(void *)(v27 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        return _swiftEmptyArrayStorage;
      }
    }
    uint64_t v14 = (void **)*(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10008AE88(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v33 = a1 + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v35 = a2 + 56;
  unint64_t v34 = *(void *)(a1 + 16);
  while (1)
  {
    uint64_t v7 = v4 <= v2 ? v2 : v4;
    unint64_t v37 = v6;
    uint64_t v32 = v7;
LABEL_7:
    if (v4 == v7)
    {
      __break(1u);
      JUMPOUT(0x10008B2D8);
    }
    long long v8 = *(_OWORD *)(v33 + 16 * v4);
    uint64_t v9 = *(void *)(v33 + 16 * v4 + 8);
    long long v39 = v8;
    unint64_t v38 = v4 + 1;
    if (*(void *)(v3 + 16)) {
      break;
    }
    sub_10008AA00(v8);
LABEL_42:
    uint64_t v6 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B2E24(0, v37[2] + 1, 1);
      uint64_t v6 = v37;
    }
    long long v28 = v39;
    unint64_t v30 = v6[2];
    unint64_t v29 = v6[3];
    if (v30 >= v29 >> 1)
    {
      sub_1000B2E24(v29 > 1, v30 + 1, 1);
      long long v28 = v39;
      uint64_t v6 = v37;
    }
    v6[2] = v30 + 1;
    *(_OWORD *)&v6[2 * v30 + 4] = v28;
    unint64_t v2 = v34;
    unint64_t v4 = v38;
    if (v38 == v34) {
      return v6;
    }
  }
  Hasher.init(_seed:)();
  switch((uint64_t)v39)
  {
    case 0:
      Swift::UInt v10 = 1;
      goto LABEL_16;
    case 1:
      Swift::UInt v10 = 2;
      goto LABEL_16;
    case 2:
      Swift::UInt v10 = 3;
      goto LABEL_16;
    case 3:
      Swift::UInt v10 = 4;
      goto LABEL_16;
    case 4:
      Swift::UInt v10 = 5;
LABEL_16:
      Hasher._combine(_:)(v10);
      break;
    default:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v9 + 24);
      swift_unknownObjectRetain_n();
      v12(ObjectType, v9);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      sub_10008AA10(v39);
      break;
  }
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v15 = v13 & ~v14;
  if (((*(void *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
    goto LABEL_42;
  }
  uint64_t v16 = ~v14;
  while (2)
  {
    Class v17 = (unint64_t *)(*(void *)(v3 + 48) + 16 * v15);
    unint64_t v18 = *v17;
    switch(*v17)
    {
      case 0uLL:
        if ((void)v39) {
          goto LABEL_20;
        }
        goto LABEL_38;
      case 1uLL:
        if ((void)v39 == 1) {
          goto LABEL_39;
        }
        goto LABEL_20;
      case 2uLL:
        if ((void)v39 == 2) {
          goto LABEL_39;
        }
        goto LABEL_20;
      case 3uLL:
        if ((void)v39 == 3) {
          goto LABEL_39;
        }
        goto LABEL_20;
      case 4uLL:
        if ((void)v39 == 4) {
          goto LABEL_39;
        }
        goto LABEL_20;
      default:
        if ((unint64_t)v39 < 5) {
          goto LABEL_20;
        }
        unint64_t v19 = v17[1];
        uint64_t v20 = swift_getObjectType();
        id v40 = *(uint64_t (**)(uint64_t, unint64_t))(v19 + 24);
        sub_10008AA00(v18);
        sub_10008AA00(v39);
        sub_10008AA00(v18);
        uint64_t v21 = v40(v20, v19);
        uint64_t v23 = v22;
        uint64_t v24 = swift_getObjectType();
        if (v21 != (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v24, v9) || v23 != v25)
        {
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10008AA10(v39);
          sub_10008AA10(v18);
          sub_10008AA10(v18);
          uint64_t v5 = v35;
          uint64_t v3 = a2;
          if (v27) {
            goto LABEL_38;
          }
LABEL_20:
          unint64_t v15 = (v15 + 1) & v16;
          if (((*(void *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            goto LABEL_42;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
        sub_10008AA10(v39);
        sub_10008AA10(v18);
        sub_10008AA10(v18);
        uint64_t v5 = v35;
        uint64_t v3 = a2;
LABEL_38:
        sub_10008AA10(v39);
LABEL_39:
        uint64_t v6 = v37;
        unint64_t v4 = v38;
        uint64_t v7 = v32;
        if (v38 != v34) {
          goto LABEL_7;
        }
        return v6;
    }
  }
}

uint64_t sub_10008B310()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10008B348(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  return sub_1000887CC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_10008B350()
{
  uint64_t v1 = sub_100007620(&qword_1002F3150);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10008B3E4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_100007620(&qword_1002F3150);

  return sub_100089658(a1, a2, a3);
}

uint64_t sub_10008B480()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10008B4B8(uint64_t a1, uint64_t a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v3 + 16))(a1, a2, *a3, a3[1]);
}

uint64_t sub_10008B4E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100089458(*(void *)(v1 + 16), a1);
}

uint64_t sub_10008B4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1000892B8(*(void *)(v1 + 16), 1, a1);
}

uint64_t sub_10008B510@<X0>(uint64_t a1@<X8>)
{
  return sub_1000892B8(*(void *)(v1 + 16), 0, a1);
}

double sub_10008B530@<D0>(uint64_t a1@<X8>)
{
  return sub_1000890F8(*(void *)(v1 + 16), 1, a1);
}

uint64_t sub_10008B550(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_10008B598@<D0>(uint64_t a1@<X8>)
{
  return sub_1000890F8(*(void *)(v1 + 16), 0, a1);
}

uint64_t sub_10008B5B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100088F40(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
}

uint64_t sub_10008B5D0()
{
  return EnvironmentValues.sizeCategory.getter();
}

void sub_10008B5F8()
{
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_dataSource] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v1 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v1 = &_swiftEmptySetSingleton;
  }
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController_observers] = v1;
  *(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator26ConversationListController____lazy_storage___bottomSeparatorLine] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10008B6B4(uint64_t a1)
{
  uint64_t v2 = sub_100007620(&qword_1002FAEF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008B714()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008B74C(void *a1)
{
}

void sub_10008B754()
{
}

uint64_t sub_10008B75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10008B7A0()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v13 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v14 == 2)
  {
    uint64_t v7 = (void *)v13[0];
    id v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v13[0]
                                                               + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request), "localePair"));
    id v9 = [v8 sourceLocale];

    static Locale._unconditionallyBridgeFromObjectiveC(_:)();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v10 = static Locale.== infix(_:_:)();

    uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
    v11(v4, v0);
    v11(v6, v0);
  }
  else
  {
    sub_10008B9C0((uint64_t)v13);
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_10008B9C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10008BA1C(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_10008BA60(void *a1, uint64_t a2)
{
  uint64_t v56 = a2;
  uint64_t v4 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v56 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v58 = v2;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v14 = aBlock;
  uint64_t v13 = v61;
  id v59 = a1;
  id v15 = [a1 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (v13)
  {
    if (v14 == (void **)v16 && v13 == v18)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      if (qword_1002EE658 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100011554(v20, (uint64_t)qword_10030EB10);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "TTS currently playing is same as translation", v23, 2u);
        swift_slowDealloc();
      }

      return [*(id *)&v58[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator] cleanup:v56];
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v25 = [v59 identifier:v56];
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;

  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t aBlock = (void **)v26;
  uint64_t v61 = v28;
  unint64_t v29 = v58;
  static Published.subscript.setter();
  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  id v30 = objc_allocWithZone((Class)_LTSpeakRequest);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v32 = Locale._bridgeToObjectiveC()().super.isa;
  id v33 = [v30 initWithSourceLocale:isa targetLocale:v32];

  unint64_t v34 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34(v10, v6);
  v34(v12, v6);
  uint64_t v35 = *(void *)&v29[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
  if (v35)
  {
    unint64_t v36 = (void **)(v35 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
    swift_beginAccess();
    uint64_t v66 = *v36;
    unint64_t v37 = v66;
    id v38 = v33;
    id v39 = v37;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_getAtKeyPath();
    if (!v61) {
      swift_bridgeObjectRetain();
    }
    swift_release();

    uint64_t v42 = v56;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v40 = v33;
    NSString v41 = 0;
    uint64_t v42 = v56;
  }
  [v33 setSessionID:v41];

  id v43 = v59;
  sub_100098FF0();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v33 setText:v44];

  [v43 ttsPlaybackRateDouble];
  [v33 setTtsPlaybackRate:];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v45 = v33;
  uint64_t v46 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v47 = NSUserDefaults.onDeviceOnly.getter();

  [v45 setForcedOfflineTranslation:v47 & 1];
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v29;
  *(void *)(v48 + 24) = v43;
  uint64_t v64 = sub_10009A0A4;
  uint64_t v65 = v48;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_100230FBC;
  long long v63 = &unk_1002CC1A8;
  uint64_t v49 = _Block_copy(&aBlock);
  uint64_t v50 = v29;
  id v51 = v43;
  swift_release();
  [v45 setCompletionHandler:v49];
  _Block_release(v49);
  uint64_t v52 = type metadata accessor for TaskPriority();
  uint64_t v53 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v57, 1, 1, v52);
  uint64_t v54 = (void *)swift_allocObject();
  v54[2] = 0;
  v54[3] = 0;
  v54[4] = v50;
  v54[5] = v42;
  v54[6] = v45;
  uint64_t v55 = v50;
  sub_100056780(v53, (uint64_t)&unk_1002F33D0, (uint64_t)v54);
  return (id)swift_release();
}

void sub_10008C144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  uint64_t v61 = a2;
  uint64_t v58 = a1;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v57 = (void **)((char *)&v54 - v15);
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100011554(v16, (uint64_t)qword_10030E978);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = a5;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.info.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v55 = v10;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v56 = v6;
    uint64_t v54 = (void *)v23;
    *(_DWORD *)uint64_t v22 = 134218242;
    uint64_t v24 = String.count.getter();
    swift_bridgeObjectRelease();
    unint64_t aBlock = (void **)v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2114;
    unint64_t aBlock = v17;
    id v25 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v54 = v17;

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Retranslate text of length %ld with pair: %{public}@", (uint8_t *)v22, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    uint64_t v6 = v56;
    swift_slowDealloc();
    uint64_t v10 = v55;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v26 = [v17 sourceLocale];
  uint64_t v27 = v57;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  id v28 = [v17 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  id v29 = objc_allocWithZone((Class)_LTCombinedRouteParagraphTranslationRequest);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v31 = Locale._bridgeToObjectiveC()().super.isa;
  id v32 = [v29 initWithSourceLocale:isa targetLocale:v31];

  id v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v14, v10);
  v33((char *)v27, v10);
  uint64_t v34 = *(void *)&v6[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
  if (v34)
  {
    uint64_t v57 = v17;
    uint64_t v35 = (void **)(v34 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
    swift_beginAccess();
    uint64_t v68 = *v35;
    unint64_t v36 = v68;
    id v37 = v32;
    id v38 = v36;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_getAtKeyPath();
    if (!v63) {
      swift_bridgeObjectRetain();
    }
    swift_release();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v17 = v57;
  }
  else
  {
    id v39 = v32;
    NSString v40 = 0;
  }
  [v32 setSessionID:v40];

  id v41 = v32;
  uint64_t v43 = v59;
  uint64_t v42 = v60;
  NSString v44 = String._bridgeToObjectiveC()();
  [v41 setText:v44];

  [v41 setCensorSpeech:sub_100098DC0()];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v45 = v41;
  uint64_t v46 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v47 = NSUserDefaults.onDeviceOnly.getter();

  [v45 setForcedOfflineTranslation:v47 & 1];
  uint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v58;
  v48[2] = v6;
  v48[3] = v49;
  v48[4] = v61;
  v48[5] = v43;
  v48[6] = v42;
  v48[7] = v17;
  uint64_t v66 = sub_100098F54;
  os_log_type_t v67 = v48;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256;
  uint64_t v64 = sub_100094728;
  uint64_t v65 = &unk_1002CC108;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v51 = v17;
  id v52 = v45;
  uint64_t v53 = v6;
  swift_bridgeObjectRetain();
  swift_release();
  [v52 setCompletionHandler:v50];
  _Block_release(v50);

  [*(id *)&v53[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator] translate:v52];
}

void *sub_10008C794@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_10008C7A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10008C7B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10008C7C8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10008C7DC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10008C80C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10008C838@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10008C85C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10008C870(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_10008C884(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10008C898@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10008C8AC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10008C8C0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10008C8D4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10008C8E8()
{
  return *v0 == 0;
}

uint64_t sub_10008C8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10008C910(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_10008C924@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1000991A0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10008C964()
{
  return sub_10008C9C0();
}

uint64_t sub_10008C988()
{
  return sub_10008CB8C();
}

uint64_t sub_10008C99C()
{
  return sub_10008C9C0();
}

uint64_t sub_10008C9C0()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v4 = [self standardUserDefaults];
  Locale.identifier.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setObject:v5 forKey:v6];

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_100090AE4();
}

uint64_t sub_10008CB50()
{
  return sub_10008CB8C();
}

uint64_t sub_10008CB64()
{
  return sub_10008CB8C();
}

uint64_t sub_10008CB78()
{
  return sub_10008CB8C();
}

uint64_t sub_10008CB8C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10008CBFC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_10008CC74()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10008CCE8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_10008CD5C()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  NSString v6 = (char *)&v13 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v7 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v9 = Locale._bridgeToObjectiveC()().super.isa;
  id v10 = [v7 initWithSourceLocale:isa targetLocale:v9];

  uint64_t v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v10;
}

id sub_10008CF30(uint64_t a1, char *a2, char *a3)
{
  id v75 = a3;
  uint64_t v72 = a2;
  uint64_t v73 = a1;
  uint64_t v74 = type metadata accessor for Locale();
  uint64_t v61 = *(void *)(v74 - 8);
  uint64_t v4 = __chkstk_darwin(v74);
  os_log_type_t v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v70 = (char *)&v52 - v6;
  uint64_t v69 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  os_log_type_t v67 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v66);
  uint64_t v65 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  uint64_t v64 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100007620((uint64_t *)&unk_1002F3460);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100007620(&qword_1002EF7C8);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100007620((uint64_t *)&unk_1002F3470);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100007620((uint64_t *)&unk_1002F6830);
  uint64_t v14 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v18 = __chkstk_darwin(v17);
  BOOL v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v52 - v21;
  uint64_t v23 = &v3[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__useCannedSpeech];
  uint64_t KeyPath = swift_getKeyPath();
  id v25 = self;
  id v26 = v3;
  id v27 = [v25 standardUserDefaults];
  sub_100007620(&qword_1002F3480);
  swift_allocObject();
  uint64_t v28 = PassthroughSubject.init()();
  *(void *)uint64_t v23 = v27;
  *((void *)v23 + 1) = KeyPath;
  v23[16] = 0;
  *((void *)v23 + 3) = v28;
  id v29 = &v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__textTranslationLocale];
  uint64_t v30 = v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v22, 1, 1, v74);
  sub_10009A8D8((uint64_t)v22, (uint64_t)v20);
  Published.init(initialValue:)();
  sub_10000B070((uint64_t)v22, (uint64_t *)&unk_1002F4110);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v29, v16, v53);
  Class v31 = &v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__audioLevel];
  LODWORD(v78[0]) = 0;
  id v32 = v54;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v31, v32, v56);
  id v33 = &v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__currentlyPlayingTTS];
  v78[0] = 0;
  v78[1] = 0;
  sub_100007620(&qword_1002F1378);
  uint64_t v34 = v57;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v33, v34, v59);
  uint64_t v35 = &v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager__lastPlayingWord];
  v78[0] = 0;
  sub_100007620(&qword_1002F3308);
  unint64_t v36 = v60;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v35, v36, v63);
  uint64_t v37 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_queue;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  static DispatchQoS.unspecified.getter();
  v78[0] = _swiftEmptyArrayStorage;
  sub_10009A004(&qword_1002F3488, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100007620(&qword_1002F3490);
  sub_10009A940(&qword_1002F3498, &qword_1002F3490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v67, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v69);
  *(void *)&v26[v37] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData] = 0;
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session] = 0;
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_subscriptions] = _swiftEmptyArrayStorage;
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_stateSubscription] = 0;
  id v38 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 16);
  id v39 = v70;
  NSString v40 = v72;
  uint64_t v41 = v74;
  v38(v70, (uint64_t)v72, v74);
  swift_beginAccess();
  uint64_t v42 = v71;
  v38(v71, (uint64_t)v39, v41);
  Published.init(initialValue:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v30 + 8);
  v43(v39, v41);
  swift_endAccess();
  v38(v39, (uint64_t)v75, v41);
  swift_beginAccess();
  v38(v42, (uint64_t)v39, v41);
  Published.init(initialValue:)();
  v43(v39, v41);
  swift_endAccess();
  v38(v39, (uint64_t)v40, v41);
  swift_beginAccess();
  v38(v42, (uint64_t)v39, v41);
  Published.init(initialValue:)();
  v43(v39, v41);
  swift_endAccess();
  type metadata accessor for DeviceHelper();
  swift_allocObject();
  NSString v44 = sub_1000BAA9C();
  id v45 = objc_allocWithZone((Class)type metadata accessor for RecordingHelper());
  id v46 = sub_10018C43C((uint64_t)v44);
  swift_release();
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_recordingHelper] = v46;
  id v47 = [objc_allocWithZone((Class)_LTTranslator) init];
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator] = v47;
  *(void *)&v26[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_ringer] = [objc_allocWithZone((Class)type metadata accessor for RingerSwitchObserver()) init];
  uint64_t v48 = v73;
  sub_10009A1C8(v73, (uint64_t)v78);
  swift_beginAccess();
  sub_10009A1C8((uint64_t)v78, (uint64_t)v77);
  Published.init(initialValue:)();
  sub_10008B9C0((uint64_t)v78);
  swift_endAccess();

  uint64_t v49 = (objc_class *)type metadata accessor for ConversationManager();
  v76.receiver = v26;
  v76.super_class = v49;
  id v50 = [super init];
  sub_10008E360(1);
  sub_10008DAE4();

  v43(v75, v41);
  v43(v40, v41);
  sub_10008B9C0(v48);
  return v50;
}

void sub_10008DAE4()
{
  id v4 = [self defaultCenter];
  uint64_t v1 = self;
  id v2 = [v1 sharedInstance];
  [v4 addObserver:v0 selector:"handleRouteChangeWithNotification:" name:AVAudioSessionRouteChangeNotification object:v2];

  id v3 = [v1 sharedInstance];
  [v4 addObserver:v0 selector:"handleAudioInterruptionWithNotification:" name:AVAudioSessionInterruptionNotification object:v3];

  [v4 addObserver:v0 selector:"handleResignWithNotification:" name:UIApplicationWillResignActiveNotification object:0];
}

void sub_10008DC2C()
{
  NSString v0 = String._bridgeToObjectiveC()();
  swift_beginAccess();
  sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();
}

void sub_10008DDC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10020384C((uint64_t)v18), (v5 & 1) != 0))
  {
    sub_10000B170(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)v18);
  if (!*((void *)&v20 + 1))
  {
    sub_10000B070((uint64_t)&v19, (uint64_t *)&unk_1002F02C0);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  if (!v17)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100011554(v11, (uint64_t)qword_10030EA98);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_27;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Audio interruption ended";
    goto LABEL_26;
  }
  if (v17 != 1)
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100011554(v16, (uint64_t)qword_10030EA98);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_27;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Audio interruption with unhandled type";
LABEL_26:
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v15, v14, 2u);
    swift_slowDealloc();
LABEL_27:

    return;
  }
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100011554(v6, (uint64_t)qword_10030EA98);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Audio interruption began", v9, 2u);
    swift_slowDealloc();
  }

  sub_10018A180();
  if (*(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData))
  {
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (v10) {
      [v10 endAudio];
    }
  }
}

void sub_10008E360(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&aBlock - v9;
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100011554(v11, (uint64_t)qword_10030EAF8);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Preheating translation engine", v14, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v15 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v17 = Locale._bridgeToObjectiveC()().super.isa;
  id v18 = [v15 initWithSourceLocale:isa targetLocale:v17];

  long long v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  id v20 = [objc_allocWithZone((Class)_LTSpeechTranslationRequest) initWithLocalePair:v18];
  [v20 setForcedOfflineTranslation:a1 & 1];
  id v21 = v20;
  [v21 setCensorSpeech:sub_100098DC0()];

  uint64_t v22 = self;
  id v23 = [v18 sourceLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class v24 = Locale._bridgeToObjectiveC()().super.isa;
  v19(v10, v4);
  id v25 = [v18 targetLocale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class v26 = Locale._bridgeToObjectiveC()().super.isa;
  v19(v10, v4);
  uint64_t v34 = sub_10008E80C;
  uint64_t v35 = 0;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_100164A34;
  id v33 = &unk_1002CC518;
  id v27 = _Block_copy(&aBlock);
  [v22 configInfoForLocale:v24 otherLocale:v26 completion:v27];
  _Block_release(v27);

  uint64_t v28 = *(void **)(v2 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator);
  uint64_t v34 = sub_10008E9D4;
  uint64_t v35 = 0;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_100230FBC;
  id v33 = &unk_1002CC540;
  id v29 = _Block_copy(&aBlock);
  [v28 preheatForRequest:v21 completion:v29];
  _Block_release(v29);
}

void sub_10008E80C()
{
  if (qword_1002EE650 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030EAF8);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v4 = Dictionary.description.getter();
    sub_100202FD4(v4, v5, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Finished preheating asset updating if needed with config info: %{public}s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_10008E9D4(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1002EE650 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030EAF8);
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v4 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 138412290;
      uint64_t v9 = _convertErrorToNSError(_:)();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v4 = v9;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Failed to preheat translation engine: %@", v3, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1002EE650 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030EAF8);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Finished preheating translation engine", v7, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10008EC5C()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  static Locale.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  return swift_release();
}

void sub_10008EDE4(unsigned char *a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v12 = type metadata accessor for Locale();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  if (!v18) {
    return;
  }
  uint64_t v62 = (char *)&v58 - v17;
  uint64_t v63 = v9;
  long long v19 = v18;
  uint64_t v64 = v1;
  id v20 = sub_10008CD5C();
  uint64_t v65 = a1;
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  id v22 = [v20 oppositeToLocale:isa];

  if (!v22)
  {
    Class v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v24(v11, 1, 1, v12);
    goto LABEL_6;
  }
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  id v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v23(v11, v16, v12);
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v61(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    Class v24 = v61;
LABEL_6:
    sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F4110);
    goto LABEL_23;
  }
  id v25 = v62;
  v23(v62, v11, v12);
  Class v26 = (uint64_t *)&v19[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech];
  uint64_t v27 = swift_beginAccess();
  uint64_t v28 = *v26;
  __chkstk_darwin(v27);
  swift_bridgeObjectRetain();
  sub_1001BB3B8((uint64_t)sub_10009A990, v28, (uint64_t)&v68);
  swift_bridgeObjectRelease();
  if (v69)
  {
    sub_100048DE4(&v68, (uint64_t)v74);
    id v29 = (uint64_t *)&v19[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation];
    uint64_t v30 = swift_beginAccess();
    uint64_t v31 = *v29;
    __chkstk_darwin(v30);
    swift_bridgeObjectRetain();
    sub_1001BB3B8((uint64_t)sub_10009A800, v31, (uint64_t)&v68);
    swift_bridgeObjectRelease();
    if (v69)
    {
      sub_100048DE4(&v68, (uint64_t)v71);
      id v32 = v64;
      id v33 = *(char **)&v64[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
      if (!v33) {
        goto LABEL_19;
      }
      uint64_t v60 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session;
      uint64_t v34 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v5, 1, 1, v34);
      uint64_t v35 = v75;
      uint64_t v59 = v76;
      unint64_t v36 = (char *)sub_100029624(v74, v75);
      uint64_t v38 = v72;
      uint64_t v37 = v73;
      id v39 = sub_100029624(v71, v72);
      swift_retain();
      uint64_t v57 = v37;
      id v32 = v64;
      NSString v40 = (void *)sub_1001FEA10(v36, (void (*)(void *, void))v39, 0, (uint64_t)v5, v33, v35, v38, v59, v57);
      swift_release();
      sub_10000B070((uint64_t)v5, (uint64_t *)&unk_1002F33E0);
      if (v40)
      {
        uint64_t v41 = *(void **)&v19[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request];
        id v42 = v40;
        NSString v43 = [v41 uniqueID];
        if (!v43)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v43 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v42 setRequestID:v43];
      }
      uint64_t v44 = *(void *)&v32[v60];
      if (v44)
      {
        sub_1000295C0(v44 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)&v68);
        sub_100029624(&v68, v69);
        dispatch thunk of TranslationStore.save()();
        sub_10000AB68((uint64_t)&v68);
      }
      if (v40)
      {
        *(void *)&long long v68 = v40;
        char v70 = 4;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A1C8((uint64_t)&v68, (uint64_t)&v66);
        id v45 = v40;
        id v46 = v32;
        static Published.subscript.setter();
        sub_10008B9C0((uint64_t)&v68);
      }
      else
      {
LABEL_19:
        *(void *)&long long v68 = 0;
        char v70 = 0;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A1C8((uint64_t)&v68, (uint64_t)&v66);
        uint64_t v48 = v32;
        static Published.subscript.setter();
        sub_10008B9C0((uint64_t)&v68);
      }
      sub_10000AB68((uint64_t)v71);
      sub_10000AB68((uint64_t)v74);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
      uint64_t v49 = v65;
      Class v24 = v61;
      goto LABEL_26;
    }
    sub_10000AB68((uint64_t)v74);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
    id v47 = (uint64_t *)&unk_1002F33F0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
    id v47 = (uint64_t *)&unk_1002FA740;
  }
  sub_10000B070((uint64_t)&v68, v47);
  Class v24 = v61;
LABEL_23:
  id v50 = (uint64_t *)&v19[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech];
  uint64_t v51 = swift_beginAccess();
  uint64_t v52 = *v50;
  __chkstk_darwin(v51);
  uint64_t v49 = v65;
  swift_bridgeObjectRetain();
  sub_1001BB3B8((uint64_t)sub_10009A7E0, v52, (uint64_t)&v66);
  swift_bridgeObjectRelease();
  if (v67)
  {
    sub_100048DE4(&v66, (uint64_t)&v68);
    sub_100029624(&v68, v69);
    uint64_t v53 = dispatch thunk of FormattedString.formattedString.getter();
    sub_10008F6EC(v53, v54, 0, 0, v49, *(void *)&v19[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options], 0, 0);
    swift_bridgeObjectRelease();
    sub_10000AB68((uint64_t)&v68);
  }
  else
  {
    sub_10000B070((uint64_t)&v66, (uint64_t *)&unk_1002FA740);
  }
LABEL_26:
  type metadata accessor for SpeechTurn();
  if (swift_dynamicCastClass())
  {
    uint64_t v55 = (uint64_t)v63;
    (*(void (**)(char *, unsigned char *, uint64_t))(v13 + 16))(v63, v49, v12);
    v24((char *)v55, 0, 1, v12);
    uint64_t v56 = v19;
    sub_10009DBB4(v55);
    sub_10000B070(v55, (uint64_t *)&unk_1002F4110);
  }
}

uint64_t sub_10008F6EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v128 = a8;
  uint64_t v127 = a7;
  uint64_t v140 = a6;
  uint64_t v148 = a4;
  uint64_t v132 = a3;
  uint64_t v149 = a1;
  uint64_t v130 = type metadata accessor for SpeechResultOrigin();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  id v131 = &v122[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for StoredSpeechResult();
  uint64_t v134 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = &v122[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v150 = type metadata accessor for Locale();
  uint64_t v15 = *(void *)(v150 - 8);
  uint64_t v16 = __chkstk_darwin(v150);
  uint64_t v142 = &v122[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v143 = &v122[-v19];
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = &v122[-v21];
  uint64_t v23 = __chkstk_darwin(v20);
  id v25 = &v122[-v24];
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = &v122[-v27];
  uint64_t v125 = v29;
  __chkstk_darwin(v26);
  uint64_t v31 = &v122[-v30];
  uint64_t v138 = a5;
  sub_10008EC5C();
  id v145 = v8;
  sub_10008EC5C();
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  id v133 = v14;
  uint64_t v135 = v12;
  uint64_t v32 = type metadata accessor for Logger();
  uint64_t v33 = sub_100011554(v32, (uint64_t)qword_10030E978);
  uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16);
  uint64_t v144 = v28;
  uint64_t v35 = v150;
  v34(v25, v28, v150);
  uint64_t v146 = v31;
  uint64_t v137 = v15 + 16;
  uint64_t v136 = v34;
  v34(v22, v31, v35);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v139 = v33;
  unint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  int v38 = v37;
  long long v141 = v36;
  BOOL v39 = os_log_type_enabled(v36, v37);
  uint64_t v40 = v15;
  uint64_t v126 = v15;
  if (v39)
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v124 = swift_slowAlloc();
    *(void *)&long long aBlock = v124;
    *(_DWORD *)uint64_t v41 = 136446978;
    int v123 = v38;
    uint64_t v42 = Locale.ltIdentifier.getter();
    v151[0] = sub_100202FD4(v42, v43, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v44 = a2;
    uint64_t v45 = v150;
    id v46 = *(void (**)(uint8_t *, uint64_t))(v40 + 8);
    uint64_t v147 = (v40 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v46(v25, v150);
    *(_WORD *)(v41 + 12) = 2082;
    uint64_t v47 = Locale.ltIdentifier.getter();
    v151[0] = sub_100202FD4(v47, v48, (uint64_t *)&aBlock);
    uint64_t v49 = v148;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v46(v22, v45);
    a2 = v44;
    *(_WORD *)(v41 + 22) = 2048;
    uint64_t v50 = String.count.getter();
    swift_bridgeObjectRelease();
    v151[0] = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 32) = 1024;
    swift_bridgeObjectRelease();
    LODWORD(v151[0]) = v49 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v51 = v141;
    _os_log_impl((void *)&_mh_execute_header, v141, (os_log_type_t)v123, "Requested text translation from '%{public}s'->'%{public}s' of length %ld has sanitized text: %{BOOL}d", (uint8_t *)v41, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v52 = v147;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v46 = *(void (**)(uint8_t *, uint64_t))(v15 + 8);
    uint64_t v52 = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v53 = v150;
    v46(v25, v150);
    v46(v22, v53);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v54 = v145;
  id v55 = sub_10008CD5C();
  id v56 = [v55 sourceLocale];

  uint64_t v57 = v143;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  id v58 = sub_10008CD5C();
  id v59 = [v58 targetLocale];

  uint64_t v60 = v142;
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v58) = static Locale.== infix(_:_:)();
  uint64_t v61 = v150;
  v46(v60, v150);
  v46(v57, v61);
  if (v58)
  {
    uint64_t v148 = a2;
    id v62 = v54;
    uint64_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v147 = v52;
      long long v66 = (uint8_t *)v65;
      id v145 = (id)swift_slowAlloc();
      *(void *)&long long aBlock = v145;
      uint64_t v142 = v66;
      *(_DWORD *)long long v66 = 136446210;
      id v67 = sub_10008CD5C();
      id v68 = [v67 sourceLocale];

      static Locale._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v69 = Locale.ltIdentifier.getter();
      unint64_t v71 = v70;
      v46(v57, v150);
      v151[0] = sub_100202FD4(v69, v71, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "Source and target locale are both '%{public}s', performing passthrough translation", v142, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100091420(v149, v148, v140);
    uint64_t v76 = v150;
    v46(v144, v150);
    return ((uint64_t (*)(uint8_t *, uint64_t))v46)(v146, v76);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v156 == 3)
  {
    sub_100048DE4(&aBlock, (uint64_t)v151);
    sub_100029624(v151, v151[3]);
    uint64_t v72 = dispatch thunk of FormattedString.formattedString.getter();
    uint64_t v74 = v146;
    uint64_t v75 = v144;
    if (v72 == v149 && v73 == a2)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      uint64_t v118 = Logger.logObject.getter();
      os_log_type_t v119 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v118, v119))
      {
        uint64_t v120 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v120 = 0;
        _os_log_impl((void *)&_mh_execute_header, v118, v119, "Early returning and not translating because translation is in progress with the same text already", v120, 2u);
        swift_slowDealloc();
      }

      uint64_t v121 = v150;
      v46(v75, v150);
      v46(v74, v121);
      return sub_10000AB68((uint64_t)v151);
    }
    char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v117) {
      goto LABEL_20;
    }
    sub_10000AB68((uint64_t)v151);
  }
  else
  {
    sub_10008B9C0((uint64_t)&aBlock);
    uint64_t v74 = v146;
  }
  uint64_t v147 = v52;
  id v78 = objc_allocWithZone((Class)_LTTextTranslationRequest);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v80 = Locale._bridgeToObjectiveC()().super.isa;
  id v81 = [v78 initWithSourceLocale:isa targetLocale:v80];

  [v81 setTaskHint:1];
  id v82 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v83 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v84 = [v82 initWithString:v83];

  [v81 setText:v84];
  id v85 = v81;
  [v85 setCensorSpeech:sub_100098DC0()];

  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v86 = v85;
  uint64_t v87 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  LOBYTE(v85) = NSUserDefaults.onDeviceOnly.getter();

  [v86 setForcedOfflineTranslation:v85 & 1];
  double v88 = v74;
  uint64_t v89 = v150;
  v136(v57, v88, v150);
  uint64_t v90 = v126;
  unint64_t v91 = (*(unsigned __int8 *)(v126 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
  uint64_t v92 = swift_allocObject();
  uint64_t v93 = v145;
  *(void *)(v92 + 16) = v145;
  *(void *)(v92 + 24) = v86;
  (*(void (**)(unint64_t, uint8_t *, uint64_t))(v90 + 32))(v92 + v91, v57, v89);
  uint64_t v155 = (uint64_t)sub_10009A34C;
  uint64_t v156 = v92;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v154 = sub_100093C28;
  *((void *)&v154 + 1) = &unk_1002CC270;
  uint64_t v94 = _Block_copy(&aBlock);
  unint64_t v95 = v93;
  id v96 = v86;
  swift_release();
  [v96 setTextTranslationHandler:v94];
  _Block_release(v94);
  uint64_t v97 = (objc_class *)type metadata accessor for ConversationTurn();
  uint64_t v98 = (char *)objc_allocWithZone(v97);
  *(void *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid] = _swiftEmptyArrayStorage;
  *(void *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech] = _swiftEmptyArrayStorage;
  *(void *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation] = _swiftEmptyArrayStorage;
  *(void *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request] = v96;
  *(void *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options] = v140;
  uint64_t v99 = (uint64_t *)&v98[OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_completion];
  uint64_t v100 = v127;
  uint64_t v101 = v128;
  *uint64_t v99 = v127;
  v99[1] = v101;
  id v145 = v96;
  sub_100019614(v100);
  v152.receiver = v98;
  v152.super_class = v97;
  id v102 = [super init];
  uint64_t v103 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData;
  uint64_t v104 = *(void **)&v95[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  *(void *)&v95[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData] = v102;

  v136(v57, v138, v89);
  (*(void (**)(unsigned char *, void, uint64_t))(v129 + 104))(v131, enum case for SpeechResultOrigin.text(_:), v130);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v105 = v133;
  StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
  uint64_t v106 = *(void **)&v95[v103];
  uint64_t v107 = v135;
  uint64_t v108 = v134;
  if (v106)
  {
    *((void *)&v154 + 1) = v135;
    uint64_t v155 = sub_10009A004(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
    uint64_t v109 = sub_100014830((uint64_t *)&aBlock);
    (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v108 + 16))(v109, v105, v107);
    uint64_t v110 = *(void (**)(long long *))((swift_isaMask & *v106) + 0xE0);
    uint64_t v111 = v106;
    v110(&aBlock);

    sub_10000AB68((uint64_t)&aBlock);
  }
  uint64_t v155 = 0;
  long long aBlock = 0u;
  long long v154 = 0u;
  LOBYTE(v156) = 5;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009A1C8((uint64_t)&aBlock, (uint64_t)v151);
  uint64_t v112 = v95;
  static Published.subscript.setter();
  sub_10008B9C0((uint64_t)&aBlock);
  *((void *)&v154 + 1) = v107;
  uint64_t v155 = sub_10009A004(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  unint64_t v113 = sub_100014830((uint64_t *)&aBlock);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v108 + 16))(v113, v105, v107);
  LOBYTE(v156) = 3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009A1C8((uint64_t)&aBlock, (uint64_t)v151);
  uint64_t v114 = v112;
  static Published.subscript.setter();
  sub_10008B9C0((uint64_t)&aBlock);
  sub_100091958();
  uint64_t v115 = v145;
  [*(id *)&v114[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator] translate:v145];

  (*(void (**)(unsigned char *, uint64_t))(v108 + 8))(v105, v107);
  uint64_t v116 = v150;
  v46(v144, v150);
  return ((uint64_t (*)(uint8_t *, uint64_t))v46)(v146, v116);
}

void sub_10009073C(void *a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  int v30 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v10(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  char v11 = _dispatchPreconditionTest(_:)();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v12(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t *v8 = static OS_dispatch_queue.main.getter();
  v10(v8, v9, v5);
  char v13 = _dispatchPreconditionTest(_:)();
  v12(v8, v5);
  if ((v13 & 1) == 0)
  {
LABEL_12:
    __break(1u);
    return;
  }
  sub_10018A180();
  uint64_t v14 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_stateSubscription;
  if (*(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_stateSubscription])
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t v15 = v28;
  *(void *)&v4[v14] = 0;
  swift_release();
  if ((v30 & 1) == 0)
  {
    sub_10018AEE4();
    [*(id *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator] cleanup];
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v32 = 0;
    uint64_t v16 = v4;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v17 = v16;
    static Published.subscript.setter();
  }
  uint64_t v18 = *(void **)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData] = 0;

  uint64_t v19 = v29;
  if (v15)
  {
    uint64_t v32 = v15;
    uint64_t v33 = v29;
    char v34 = 1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A1C8((uint64_t)&v32, (uint64_t)v31);
    id v20 = v19;
    id v21 = v15;
    id v22 = v4;
    id v23 = v21;
    static Published.subscript.setter();
    sub_10008B9C0((uint64_t)&v32);
  }
  else
  {
    uint64_t v32 = v29;
    char v34 = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A1C8((uint64_t)&v32, (uint64_t)v31);
    id v24 = v19;
    id v25 = v4;
    static Published.subscript.setter();
    sub_10008B9C0((uint64_t)&v32);
  }
  id v26 = [self sharedApplication];
  [v26 setIdleTimerDisabled:0];
}

uint64_t sub_100090AE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10009A004(&qword_1002F2040, (void (*)(uint64_t))&type metadata accessor for Locale);
  char v9 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
  if ((v9 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
    v10(v6, v2);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
    if ((v12 & 1) == 0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      id v13 = v1;
      static Published.subscript.setter();
      return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
    }
  }
  return result;
}

id sub_100090E44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationManager();
  return [super dealloc];
}

uint64_t sub_100091148()
{
  return type metadata accessor for ConversationManager();
}

uint64_t type metadata accessor for ConversationManager()
{
  uint64_t result = qword_1002F32B8;
  if (!qword_1002F32B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10009119C()
{
  sub_100063C08();
  if (v0 <= 0x3F)
  {
    sub_100022CC4(319, (unint64_t *)&unk_1002F32D0, (uint64_t *)&unk_1002F4110);
    if (v1 <= 0x3F)
    {
      sub_1000219BC(319, (unint64_t *)&unk_1002F32E0);
      if (v2 <= 0x3F)
      {
        sub_1000219BC(319, &qword_1002EF8B8);
        if (v3 <= 0x3F)
        {
          sub_100022CC4(319, (unint64_t *)&qword_1002F32F0, &qword_1002F1378);
          if (v4 <= 0x3F)
          {
            sub_100022CC4(319, &qword_1002F3300, &qword_1002F3308);
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1000913E0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ConversationManager();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

void sub_100091420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v39 = a1;
  uint64_t v7 = type metadata accessor for SpeechResultOrigin();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = sub_10008CD5C();
  id v15 = [objc_allocWithZone((Class)_LTTextToSpeechTranslationRequest) initWithLocalePair:v14];

  uint64_t v16 = *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
  uint64_t v40 = v8;
  uint64_t v41 = v13;
  if (v16)
  {
    uint64_t v36 = a2;
    uint64_t v37 = a3;
    uint64_t v38 = v7;
    uint64_t v17 = (void *)(v16 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession__currentID);
    swift_beginAccess();
    v42[0] = *v17;
    uint64_t v18 = (void *)v42[0];
    id v19 = v15;
    id v20 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_getAtKeyPath();
    if (!*((void *)&v43 + 1)) {
      swift_bridgeObjectRetain();
    }
    swift_release();

    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    a3 = v37;
    uint64_t v7 = v38;
  }
  else
  {
    id v21 = v15;
    NSString v22 = 0;
  }
  [v15 setSessionID:v22];

  [v15 setTaskHint:1];
  NSString v23 = String._bridgeToObjectiveC()();
  [v15 setText:v23];

  id v24 = v15;
  [v24 setCensorSpeech:sub_100098DC0()];

  [v24 setDelegate:v4];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  id v25 = v24;
  id v26 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v27 = NSUserDefaults.onDeviceOnly.getter();

  [v25 setForcedOfflineTranslation:v27 & 1];
  id v28 = objc_allocWithZone((Class)type metadata accessor for PassthroughTextTurn());
  id v29 = v25;
  int v30 = sub_100182390(v29, a3);

  uint64_t v31 = *(void **)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData] = v30;

  uint64_t v45 = 0;
  long long v43 = 0u;
  long long v44 = 0u;
  char v46 = 5;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009A1C8((uint64_t)&v43, (uint64_t)v42);
  uint64_t v32 = v4;
  static Published.subscript.setter();
  sub_10008B9C0((uint64_t)&v43);
  id v33 = [v29 text];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v34 = [v29 localePair];
  id v35 = [v34 sourceLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v10, enum case for SpeechResultOrigin.text(_:), v7);
  *((void *)&v44 + 1) = type metadata accessor for StoredSpeechResult();
  uint64_t v45 = sub_10009A004(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  sub_100014830((uint64_t *)&v43);
  StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
  char v46 = 3;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009A1C8((uint64_t)&v43, (uint64_t)v42);
  v32;
  static Published.subscript.setter();
  sub_10008B9C0((uint64_t)&v43);
  sub_100091958();
}

void sub_100091958()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v122 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v122 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(KeyPath - 8);
  uint64_t v10 = __chkstk_darwin(KeyPath);
  uint64_t v135 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v13 = (char *)&v122 - v12;
  id v14 = (void *)type metadata accessor for DispatchPredicate();
  uint64_t v15 = *(v14 - 1);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  *uint64_t v17 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, void *))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  char v18 = _dispatchPreconditionTest(_:)();
  id v20 = *(void (**)(uint64_t *, void *))(v15 + 8);
  id v19 = (v15 + 8);
  v20(v17, v14);
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
  if (v144 == 4)
  {
    sub_10008B9C0((uint64_t)&v142);
LABEL_17:
    sub_10008B9C0((uint64_t)v145);
    return;
  }
  if (v144 == 5 && (v142 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    int8x16_t v21 = vorrq_s8(v143[0], v143[1]);
    if (!*(void *)&vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL))) {
      goto LABEL_17;
    }
  }
  sub_10008B9C0((uint64_t)&v142);
  sub_10008B9C0((uint64_t)v145);
  id v14 = *(void **)&v1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  if (!v14) {
    return;
  }
  uint64_t v134 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData;
  uint64_t v133 = OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options;
  uint64_t v22 = *(void *)((char *)v14 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options);
  id v19 = v14;
  if ((v22 & 1) != 0 || (sub_10009C060() & 1) == 0)
  {
    sub_10009BDEC((uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, KeyPath) == 1)
    {
      sub_10000B070((uint64_t)v7, (uint64_t *)&unk_1002F4110);
      memset(v145, 0, sizeof(v145));
LABEL_40:
      sub_10000B070((uint64_t)v145, (uint64_t *)&unk_1002FA740);
      *(void *)id v145 = v19;
      char v146 = 2;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
      id v62 = v19;
      uint64_t v63 = v1;
      static Published.subscript.setter();
      sub_10008B9C0((uint64_t)v145);

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, KeyPath);
    id v29 = (uint64_t *)((char *)v19 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech);
    uint64_t v30 = swift_beginAccess();
    uint64_t v132 = v19;
    uint64_t v31 = *v29;
    __chkstk_darwin(v30);
    swift_bridgeObjectRetain();
    sub_1001BB3B8((uint64_t)sub_10009A3D8, v31, (uint64_t)v145);
    swift_bridgeObjectRelease();
    id v19 = v132;
    id v34 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v33 = v9 + 8;
    uint64_t v32 = v34;
    v34(v13, KeyPath);
    if (!*(void *)&v145[24]) {
      goto LABEL_40;
    }
    uint64_t v130 = v32;
    uint64_t v131 = v33;
    sub_100048DE4((long long *)v145, (uint64_t)v139);
    sub_100029624(v139, v140);
    uint64_t v35 = dispatch thunk of FormattedString.formattedString.getter();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v38 = HIBYTE(v37) & 0xF;
    if ((v37 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (v38)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v146 != 2) {
        goto LABEL_55;
      }

      sub_10018A180();
      if (*(void *)&v1[v134])
      {
        self;
        uint64_t v39 = (void *)swift_dynamicCastObjCClass();
        if (v39) {
          [v39 endAudio];
        }
      }
      sub_1000295C0((uint64_t)v139, (uint64_t)v145);
      sub_100007620(&qword_1002FC490);
      sub_10000B0CC(0, (unint64_t *)&unk_1002F3400);
      if (swift_dynamicCast())
      {
        id v40 = (id)v142;
        id v41 = [(id)v142 bestTranscription];

        if (v41)
        {
          if (qword_1002EE630 != -1) {
            swift_once();
          }
          uint64_t v42 = type metadata accessor for Logger();
          uint64_t v43 = sub_100011554(v42, (uint64_t)qword_10030EA98);
          id v44 = v41;
          uint64_t v129 = v43;
          uint64_t v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.info.getter();
          int v47 = v46;
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v48 = swift_slowAlloc();
            uint64_t v127 = swift_slowAlloc();
            *(void *)id v145 = v127;
            *(_DWORD *)uint64_t v48 = 136446723;
            unsigned int v49 = [v44 isLowConfidence];
            BOOL v50 = v49 == 0;
            if (v49) {
              uint64_t v51 = 7562617;
            }
            else {
              uint64_t v51 = 28526;
            }
            if (v50) {
              unint64_t v52 = 0xE200000000000000;
            }
            else {
              unint64_t v52 = 0xE300000000000000;
            }
            LODWORD(v126) = v47;
            uint64_t v142 = sub_100202FD4(v51, v52, (uint64_t *)v145);
            uint64_t v128 = (char *)v143;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            *(_WORD *)(v48 + 12) = 2048;
            uint64_t v124 = v48 + 14;
            id v53 = [v44 formattedString];
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            os_log_t v125 = v45;

            uint64_t v54 = String.count.getter();
            swift_bridgeObjectRelease();
            uint64_t v142 = v54;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            int v123 = (uint8_t *)v48;
            *(_WORD *)(v48 + 22) = 2085;
            uint64_t v124 = v48 + 24;
            id v19 = v132;
            id v55 = [v44 formattedString];
            uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v58 = v57;

            uint64_t v59 = sub_100202FD4(v56, v58, (uint64_t *)v145);
            uint64_t v60 = v123;
            uint64_t v142 = v59;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            os_log_t v61 = v125;
            _os_log_impl((void *)&_mh_execute_header, v125, (os_log_type_t)v126, "Finished recognition with low confidence: %{public}s of length %ld: %{sensitive}s", v60, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          id v65 = [v44 sanitizedFormattedString];
          if (v65)
          {
            long long v66 = v65;
            uint64_t v128 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v68 = v67;

            swift_bridgeObjectRetain();
            uint64_t v69 = Logger.logObject.getter();
            os_log_type_t v70 = static os_log_type_t.info.getter();
            int v71 = v70;
            if (os_log_type_enabled(v69, v70))
            {
              uint64_t v72 = swift_slowAlloc();
              LODWORD(v127) = v71;
              uint64_t v73 = v72;
              uint64_t v129 = swift_slowAlloc();
              *(void *)id v145 = v129;
              *(_DWORD *)uint64_t v73 = 134218243;
              os_log_t v125 = (os_log_t)(v73 + 4);
              uint64_t v142 = String.count.getter();
              os_log_t v126 = v69;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v73 + 12) = 2085;
              os_log_t v125 = (os_log_t)(v73 + 14);
              swift_bridgeObjectRetain();
              uint64_t v142 = sub_100202FD4((uint64_t)v128, v68, (uint64_t *)v145);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              os_log_t v74 = v126;
              _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v127, "Finished recognition (sanitized) of length %ld: %{sensitive}s", (uint8_t *)v73, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
          }
          if (*((unsigned char *)v14 + v133) & 1) == 0 && ([v44 isLowConfidence])
          {
            *(void *)id v145 = 3;
            memset(&v145[8], 0, 32);
            char v146 = 5;
            swift_getKeyPath();
            swift_getKeyPath();
            sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
            uint64_t v75 = v1;
            static Published.subscript.setter();
            sub_10008B9C0((uint64_t)v145);

            goto LABEL_92;
          }
        }
      }
      if (qword_1002EE630 == -1)
      {
LABEL_52:
        uint64_t v76 = type metadata accessor for Logger();
        sub_100011554(v76, (uint64_t)qword_10030EA98);
        char v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v79 = 0;
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "Waiting for translation result", v79, 2u);
          swift_slowDealloc();
        }

        sub_1000295C0((uint64_t)v139, (uint64_t)v145);
        char v146 = 3;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
        Class v80 = v1;
        static Published.subscript.setter();
LABEL_55:
        sub_10008B9C0((uint64_t)v145);
        sub_10009C7C0((uint64_t)v145);
        if (!*(void *)&v145[24])
        {
          sub_10000B070((uint64_t)v145, (uint64_t *)&unk_1002F33F0);
          if (qword_1002EE630 != -1) {
            swift_once();
          }
          uint64_t v101 = type metadata accessor for Logger();
          sub_100011554(v101, (uint64_t)qword_10030EA98);
          id v102 = Logger.logObject.getter();
          os_log_type_t v103 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v102, v103))
          {
            uint64_t v104 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v104 = 0;
            _os_log_impl((void *)&_mh_execute_header, v102, v103, "Don't have a final translation yet", v104, 2u);
            swift_slowDealloc();
            uint64_t v105 = v19;
          }
          else
          {
            uint64_t v105 = v102;
            id v102 = v19;
          }

          goto LABEL_92;
        }
        sub_100048DE4((long long *)v145, (uint64_t)v136);
        uint64_t v81 = OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session;
        id v82 = *(char **)&v1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
        if (!v82) {
          goto LABEL_74;
        }
        uint64_t v83 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v4, 1, 1, v83);
        uint64_t v84 = v140;
        uint64_t v129 = v141;
        uint64_t v128 = (char *)sub_100029624(v139, v140);
        uint64_t v85 = v137;
        uint64_t v86 = v138;
        uint64_t v87 = sub_100029624(v136, v137);
        swift_retain();
        uint64_t v121 = v86;
        id v19 = v132;
        double v88 = (char *)sub_1001FEA10(v128, (void (*)(void *, void))v87, 0, (uint64_t)v4, v82, v84, v85, v129, v121);
        swift_release();
        sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F33E0);
        if (!v88)
        {
LABEL_74:
          sub_10009073C(0, 0, 0);
LABEL_91:
          (*(void (**)(void))((swift_isaMask & (uint64_t)v19->isa) + 0xF0))();
          uint64_t v120 = *(void **)&v1[v134];
          *(void *)&v1[v134] = 0;

          sub_10000AB68((uint64_t)v136);
          goto LABEL_92;
        }
        NSString v89 = [*(id *)((char *)&v19->isa + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request) uniqueID];
        if (!v89)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v89 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        uint64_t v128 = v88;
        [v88 setRequestID:v89];

        uint64_t v90 = *(void *)&v1[v81];
        if (v90)
        {
          sub_1000295C0(v90 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v145);
          sub_100029624(v145, *(uint64_t *)&v145[24]);
          dispatch thunk of TranslationStore.save()();
          sub_10000AB68((uint64_t)v145);
        }
        unint64_t v91 = *(void *)((char *)v14 + v133) & 8;
        LODWORD(v129) = UIAccessibilityIsVoiceOverRunning();
        if (qword_1002EE630 != -1) {
          swift_once();
        }
        uint64_t v92 = type metadata accessor for Logger();
        uint64_t v93 = sub_100011554(v92, (uint64_t)qword_10030EA98);
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v94, v95))
        {
          id v96 = (_DWORD *)swift_slowAlloc();
          uint64_t v127 = v93;
          uint64_t v97 = v96;
          *id v96 = 67240704;
          *(_DWORD *)id v145 = v91 >> 3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v97 + 4) = 1026;
          int v98 = v129 ^ 1;
          *(_DWORD *)id v145 = v129 ^ 1;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *((_WORD *)v97 + 7) = 1026;
          if (v91) {
            int v99 = v98;
          }
          else {
            int v99 = 0;
          }
          id v19 = v132;
          *(_DWORD *)id v145 = v99;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "TTS speak check (turnHasAutoPlayTTS: %{BOOL,public}d && !usingVoiceOver: %{BOOL,public}d: %{BOOL,public}d", (uint8_t *)v97, 0x14u);
          swift_slowDealloc();
        }

        if (v91)
        {
          uint64_t v100 = v128;
          if ((v129 & 1) == 0)
          {
            type metadata accessor for SpeechTurn();
            uint64_t v109 = swift_dynamicCastClass();
            if (v109)
            {
              uint64_t v110 = v109;
              uint64_t v111 = v19;
              uint64_t v112 = Logger.logObject.getter();
              os_log_type_t v113 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v112, v113))
              {
                uint64_t v114 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v114 = 0;
                _os_log_impl((void *)&_mh_execute_header, v112, v113, "TTS Speak with turn", v114, 2u);
                swift_slowDealloc();
              }

              sub_10008BA60(v100, *(void *)(v110 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_options) | 2);
              sub_10009D58C();
            }
            else
            {
              uint64_t v115 = Logger.logObject.getter();
              os_log_type_t v116 = static os_log_type_t.info.getter();
              if (os_log_type_enabled(v115, v116))
              {
                char v117 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)char v117 = 0;
                _os_log_impl((void *)&_mh_execute_header, v115, v116, "TTS Speak without turn", v117, 2u);
                swift_slowDealloc();
              }

              sub_10008BA60(v100, *(void *)((char *)v14 + v133));
            }
            goto LABEL_90;
          }
        }
        else
        {
          uint64_t v100 = v128;
          if (!v129)
          {
            if (!*(void *)&v1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_stateSubscription])
            {
              type metadata accessor for SpeechTurn();
              if (swift_dynamicCastClass()) {
                sub_10018AEE4();
              }
            }
            goto LABEL_90;
          }
        }
        dispatch thunk of PersistedTranslation.displayText.getter();
        NSString v106 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v107 = v135;
        dispatch thunk of PersistedTranslation.targetLocale.getter();
        Locale.identifier.getter();
        v130(v107, KeyPath);
        NSString v108 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 _accessbilityEvaluateTurnData:v106 languageCode:v108];

LABEL_90:
        *(void *)id v145 = v100;
        char v146 = 4;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
        uint64_t v118 = v1;
        os_log_type_t v119 = v100;
        static Published.subscript.setter();
        sub_10008B9C0((uint64_t)v145);

        goto LABEL_91;
      }
LABEL_96:
      swift_once();
      goto LABEL_52;
    }
    *(void *)id v145 = 0;
    char v146 = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
    os_log_type_t v64 = v1;
    static Published.subscript.setter();
    sub_10008B9C0((uint64_t)v145);

LABEL_92:
    sub_10000AB68((uint64_t)v139);
    return;
  }
  *(void *)id v145 = 2;
  memset(&v145[8], 0, 32);
  char v146 = 5;
  swift_getKeyPath();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10009A1C8((uint64_t)v145, (uint64_t)&v142);
  NSString v23 = v1;
  static Published.subscript.setter();
  sub_10008B9C0((uint64_t)v145);
  uint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session];
  if (v24)
  {
    uint64_t v25 = *(void *)(v24 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_lidDisambiguationCounter);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      *(void *)(v24 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_lidDisambiguationCounter) = v27;
      goto LABEL_12;
    }
    goto LABEL_95;
  }
LABEL_12:
  sub_10018A180();
  if (*(void *)&v1[v134])
  {
    self;
    id v28 = (void *)swift_dynamicCastObjCClass();
    if (v28) {
      [v28 endAudio];
    }
  }
}

uint64_t sub_100092EE4(void *a1, void *a2, uint64_t a3, id a4, void *a5, uint64_t a6)
{
  id v78 = a2;
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  Class v80 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v82);
  uint64_t v79 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = v19;
  if (a3)
  {
    swift_errorRetain();
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100011554(v20, (uint64_t)qword_10030E978);
    swift_errorRetain();
    id v21 = a1;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v78 = a4;
      uint64_t v24 = -1;
      uint64_t v25 = a1;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134218242;
      if (v25) {
        uint64_t v24 = (uint64_t)[v21 length];
      }
      long long aBlock = (void **)v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v26 + 12) = 2112;
      id v28 = (void **)_convertErrorToNSError(_:)();
      long long aBlock = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v27 = v28;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to translate text of length %ld: %@; resetting conversation",
        (uint8_t *)v26,
        0x16u);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a4 = v78;
    }
    else
    {

      swift_errorRelease();
    }
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    uint64_t v42 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = a4;
    *(void *)(v43 + 24) = a3;
    unint64_t v91 = sub_10009A4EC;
    uint64_t v92 = v43;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v88 = 1107296256;
    NSString v89 = sub_10008BA1C;
    uint64_t v90 = &unk_1002CC360;
    id v44 = _Block_copy(&aBlock);
    swift_errorRetain();
    id v45 = a4;
    swift_release();
    os_log_type_t v46 = v79;
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    int v47 = v80;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v47, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v46, v82);
  }
  else
  {
    uint64_t v75 = v12;
    uint64_t v76 = v11;
    uint64_t v72 = a6;
    uint64_t v73 = v14;
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    uint64_t v30 = sub_100011554(v29, (uint64_t)qword_10030E978);
    id v31 = a5;
    uint64_t v74 = v30;
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v77 = v16;
    if (v34)
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v70 = (void **)swift_slowAlloc();
      long long aBlock = v70;
      uint64_t v69 = v35;
      *(_DWORD *)uint64_t v35 = 136446210;
      id v36 = [v31 uniqueID:v35 + 4];
      uint64_t v37 = v15;
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int v71 = a1;
      unint64_t v40 = v39;

      uint64_t v41 = v38;
      uint64_t v15 = v37;
      v84[0] = sub_100202FD4(v41, v40, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      a1 = v71;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Processing translation handler for request %{public}s", v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v49 = v76;
    uint64_t v50 = v75;
    if (a1)
    {
      id v51 = [a1 string];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      if (v78)
      {
        uint64_t v85 = sub_10000B0CC(0, &qword_1002F33B0);
        uint64_t v86 = sub_10007854C((unint64_t *)&qword_1002F33B8, &qword_1002F33B0);
        v84[0] = (uint64_t)v78;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v73, v72, v49);
        uint64_t v85 = type metadata accessor for StoredTranslationResult();
        uint64_t v86 = sub_10009A004((unint64_t *)&unk_1002F96D0, (void (*)(uint64_t))&type metadata accessor for StoredTranslationResult);
        sub_100014830(v84);
        swift_bridgeObjectRetain();
        StoredTranslationResult.init(text:locale:isOffline:romanization:)();
      }
      id v61 = v78;
      swift_bridgeObjectRelease();
      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      id v62 = (void *)static OS_dispatch_queue.main.getter();
      sub_1000295C0((uint64_t)v84, (uint64_t)v83);
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = a4;
      sub_100048DE4(v83, v63 + 24);
      unint64_t v91 = sub_10009A4A0;
      uint64_t v92 = v63;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v88 = 1107296256;
      NSString v89 = sub_10008BA1C;
      uint64_t v90 = &unk_1002CC310;
      os_log_type_t v64 = _Block_copy(&aBlock);
      id v65 = a4;
      swift_release();
      long long v66 = v79;
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      unint64_t v67 = v80;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v64);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v67, v15);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v66, v82);
      return sub_10000AB68((uint64_t)v84);
    }
    else
    {
      unint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v52, v53))
      {
        uint64_t v54 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v54 = 0;
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to get text from result, resetting conversation", v54, 2u);
        swift_slowDealloc();
      }

      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      id v55 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = a4;
      unint64_t v91 = sub_10009A430;
      uint64_t v92 = v56;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v88 = 1107296256;
      NSString v89 = sub_10008BA1C;
      uint64_t v90 = &unk_1002CC2C0;
      unint64_t v57 = _Block_copy(&aBlock);
      id v58 = a4;
      swift_release();
      uint64_t v59 = v79;
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      uint64_t v60 = v80;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v57);

      (*(void (**)(char *, uint64_t))(v77 + 8))(v60, v15);
      return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v59, v82);
    }
  }
}

void sub_100093B3C()
{
  id v0 = (id)_convertErrorToNSError(_:)();
  sub_10009073C(0, v0, 0);
}

void sub_100093B94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData);
  if (v2)
  {
    unint64_t v4 = *(void (**)(uint64_t))((swift_isaMask & *v2) + 0xE8);
    uint64_t v5 = v2;
    v4(a2);
  }
  sub_100091958();
}

void sub_100093C28(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v7 = *(void (**)(void *, void *, void *))(a1 + 32);
  swift_retain();
  id v10 = a2;
  id v8 = a3;
  id v9 = a4;
  v7(a2, a3, a4);
  swift_release();
}

void sub_100093CD0(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16 = type metadata accessor for DispatchWorkItemFlags();
  int v47 = *(NSObject **)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v20 = __chkstk_darwin(v19);
  os_log_type_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100011554(v24, (uint64_t)qword_10030E978);
    swift_errorRetain();
    int v47 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      uint64_t v28 = _convertErrorToNSError(_:)();
      aBlock[0] = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v27 = v28;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v25, "Failed to retranslate text: %@", v26, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    id v45 = a4;
    os_log_type_t v46 = v18;
    if (a1)
    {
      uint64_t v29 = v23;
      uint64_t v43 = v20;
      uint64_t v44 = v21;
      sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
      id v30 = a1;
      uint64_t v42 = static OS_dispatch_queue.main.getter();
      id v31 = (void *)swift_allocObject();
      id v32 = v45;
      _DWORD v31[2] = a3;
      v31[3] = v32;
      v31[4] = a5;
      v31[5] = a6;
      v31[6] = a7;
      v31[7] = a8;
      v31[8] = v30;
      aBlock[4] = sub_100098FD4;
      aBlock[5] = v31;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_10008BA1C;
      id aBlock[3] = &unk_1002CC158;
      os_log_type_t v33 = _Block_copy(aBlock);
      id v45 = v30;
      id v34 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v35 = a8;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100007620(&qword_1002EEE40);
      sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
      id v36 = v46;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v37 = (void *)v42;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v33);

      ((void (*)(char *, uint64_t))v47[1].isa)(v36, v16);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v43);
      return;
    }
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100011554(v39, (uint64_t)qword_10030E978);
    int v47 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v40, "Failed to get translation result, but there's no error", v41, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v38 = v47;
}

void sub_100094264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v42 = a4;
  id v43 = a7;
  uint64_t v38 = a5;
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  os_log_type_t v40 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StoredSpeechResult();
  uint64_t v39 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v41 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100007620((uint64_t *)&unk_1002F33A0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SpeechResultOrigin();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  __chkstk_darwin(v20);
  os_log_type_t v23 = (char *)&v34 - v22;
  uint64_t v24 = *(void *)(a1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_session);
  if (v24)
  {
    uint64_t v35 = v21;
    uint64_t v36 = v13;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    unint64_t v25 = v44[0];
    swift_bridgeObjectRetain();
    uint64_t v37 = a2;
    uint64_t v26 = sub_100099E5C(v25, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v26)
    {
      swift_release();
      return;
    }
    id v27 = [v26 sourceInput];
    id v34 = v26;
    if (v27)
    {
      uint64_t v28 = v27;
      dispatch thunk of AnySpeechResult.value.getter();

      sub_100029624(v44, v44[3]);
      dispatch thunk of SpeechResult.origin.getter();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
      sub_10000AB68((uint64_t)v44);
      int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
      uint64_t v30 = v39;
      if (v29 != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v17, v18);
LABEL_9:
        swift_bridgeObjectRetain();
        id v31 = [a6 sourceLocale];
        static Locale._unconditionallyBridgeFromObjectiveC(_:)();

        (*(void (**)(uint64_t, char *, uint64_t))(v19 + 16))(v35, v23, v18);
        uint64_t v32 = (uint64_t)v41;
        StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
        id v33 = v43;
        sub_100098954(v37, a3, v32, v33, v24);

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v36);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);

        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
      uint64_t v30 = v39;
    }
    (*(void (**)(char *, void, uint64_t))(v19 + 104))(v23, enum case for SpeechResultOrigin.text(_:), v18);
    sub_10000B070((uint64_t)v17, (uint64_t *)&unk_1002F33A0);
    goto LABEL_9;
  }
}

void sub_100094728(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1000947B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  aBlock[4] = sub_10009A26C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10008BA1C;
  id aBlock[3] = &unk_1002CC220;
  uint64_t v14 = _Block_copy(aBlock);
  swift_errorRetain();
  id v15 = a2;
  id v16 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_100094A9C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = &off_1002EE000;
  if (a1)
  {
    swift_errorRetain();
    if (qword_1002EE658 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100011554(v6, (uint64_t)qword_10030EB10);
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      uint64_t v45 = _convertErrorToNSError(_:)();
      uint64_t v5 = &off_1002EE000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v10 = v45;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to speak translation: %@", v9, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_12;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1002EE658 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100011554(v11, (uint64_t)qword_10030EB10);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v7, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v12, "TTS speak request complete", v13, 2u);
      swift_slowDealloc();
    }
  }

LABEL_12:
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v14 = [a3 identifier];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  if (v46)
  {
    if (v45 == v15 && v46 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_18:
      swift_getKeyPath();
      swift_getKeyPath();
      id v19 = a2;
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v45 = 0;
      unint64_t v46 = 0;
      uint64_t v20 = (char *)v19;
      static Published.subscript.setter();
      if (*(void *)&v20[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_stateSubscription])
      {
        if (v5[203] != (uint64_t (*)())-1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_100011554(v21, (uint64_t)qword_10030EB10);
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "TTS Voice Activation Detection (VAD) is active", v24, 2u);
          swift_slowDealloc();
        }

        uint64_t v45 = 0;
        char v47 = 0;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10009A1C8((uint64_t)&v45, (uint64_t)v44);
        unint64_t v25 = v20;
        static Published.subscript.setter();
        sub_10008B9C0((uint64_t)&v45);
      }
      else if (!*(void *)&v20[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData])
      {
        if (v5[203] != (uint64_t (*)())-1) {
          swift_once();
        }
        uint64_t v40 = type metadata accessor for Logger();
        sub_100011554(v40, (uint64_t)qword_10030EB10);
        uint64_t v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v41, v42))
        {
          id v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "TTS turn data is nil", v43, 2u);
          swift_slowDealloc();
        }

        sub_10018AEE4();
      }
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (v5[203] != (uint64_t (*)())-1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100011554(v26, (uint64_t)qword_10030EB10);
  id v27 = a2;
  id v28 = a3;
  id v29 = v27;
  id v30 = v28;
  id v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    v44[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446466;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v46) {
      uint64_t v34 = v45;
    }
    else {
      uint64_t v34 = 7104878;
    }
    if (v46) {
      unint64_t v35 = v46;
    }
    else {
      unint64_t v35 = 0xE300000000000000;
    }
    uint64_t v45 = sub_100202FD4(v34, v35, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2082;
    id v36 = [v30 identifier:v44[0]];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;

    uint64_t v45 = sub_100202FD4(v37, v39, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "TTS currently playing is not for the translation. TTS id: %{public}s, translation id: %{public}s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100095284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[20] = a5;
  v6[21] = a6;
  v6[19] = a4;
  return _swift_task_switch(sub_1000952A8, 0, 0);
}

uint64_t sub_1000952A8()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = *(void *)(v0[19] + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_recordingHelper);
  uint64_t v3 = swift_task_alloc();
  v0[22] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[23] = v4;
  uint64_t v5 = sub_100007620(&qword_1002F33D8);
  *unint64_t v4 = v0;
  v4[1] = sub_1000953B8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000022, 0x800000010025CC40, sub_10009A1B0, v3, v5);
}

uint64_t sub_1000953B8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1000954D0, 0, 0);
}

uint64_t sub_1000954D0()
{
  if (*(void *)(v0 + 128))
  {
    uint64_t v1 = v0 + 16;
    swift_errorRetain();
    if (qword_1002EE658 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)(v0 + 112);
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030EB10);
    swift_errorRetain();
    unint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      uint64_t v7 = _convertErrorToNSError(_:)();
      *(void *)(v0 + 144) = v7;
      uint64_t v2 = (void *)(v0 + 112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v20 = v7;
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTS audio session config failed. Error: %@", v6, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      uint64_t v1 = v0 + 16;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
    }
    id v14 = *(void **)(v0 + 152);

    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 136) = 0;
    id v15 = v14;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    *uint64_t v2 = 0;
    v2[1] = 0;
    id v16 = v15;
    static Published.subscript.setter();
    *(void *)(v0 + 16) = _convertErrorToNSError(_:)();
    *(unsigned char *)(v0 + 56) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A1C8(v1, v0 + 64);
    id v17 = v16;
    static Published.subscript.setter();
    sub_10008B9C0(v1);
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1002EE658 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100011554(v8, (uint64_t)qword_10030EB10);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "TTS speak request starting", v11, 2u);
      swift_slowDealloc();
    }
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 152);

    [*(id *)(v13 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_translator) translate:v12];
  }
  char v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1000958A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100011554(v9, (uint64_t)qword_10030EA98);
  os_log_type_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Speech activity detected", v12, 2u);
    swift_slowDealloc();
  }

  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v1;
  aBlock[4] = sub_10009A7D0;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10008BA1C;
  id aBlock[3] = &unk_1002CC4F0;
  id v15 = _Block_copy(aBlock);
  id v16 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
}

void sub_100095C24(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
  if (v1)
  {
    v6[0] = *(void *)&a1[OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData];
    char v7 = 2;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10009A1C8((uint64_t)v6, (uint64_t)&v5);
    id v3 = v1;
    uint64_t v4 = a1;
    static Published.subscript.setter();
    sub_10008B9C0((uint64_t)v6);
  }
}

void sub_100095D14(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  __chkstk_darwin(v2);
  uint64_t v69 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for DispatchQoS();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  long long v66 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v78 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100007620(&qword_1002F3428);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  os_log_type_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v62 - v12;
  uint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  id v64 = a1;
  id v14 = [a1 confidences];
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3430);
  sub_10009A004(&qword_1002F3438, (void (*)(uint64_t))&type metadata accessor for Locale);
  uint64_t v81 = v5;
  uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v80 = 0;
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v72 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v74 = v6 + 16;
  uint64_t v75 = v6;
  uint64_t v76 = v15;
  uint64_t v77 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v79 = (void (**)(char *, uint64_t))(v6 + 8);
  int64_t v73 = (unint64_t)(v17 + 63) >> 6;
  int64_t v63 = v73 - 1;
  uint64_t v20 = v78;
  uint64_t v21 = v81;
  if ((v18 & v16) == 0) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v31 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v32 = v31 | (v80 << 6);
LABEL_7:
  uint64_t v33 = v76;
  (*(void (**)(char *, unint64_t, uint64_t))(v75 + 16))(v11, *(void *)(v76 + 48) + *(void *)(v75 + 72) * v32, v81);
  uint64_t v34 = *(void *)(v33 + 56);
  uint64_t v35 = sub_100007620(&qword_1002F3440);
  id v36 = *(void **)(v34 + 8 * v32);
  *(void *)&v11[*(int *)(v35 + 48)] = v36;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v11, 0, 1, v35);
  id v37 = v36;
  while (1)
  {
    sub_10009A760((uint64_t)v11, (uint64_t)v13);
    uint64_t v42 = sub_100007620(&qword_1002F3440);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v13, 1, v42) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_1002EE600 != -1) {
        goto LABEL_33;
      }
      goto LABEL_28;
    }
    uint64_t v22 = *(void **)&v13[*(int *)(v42 + 48)];
    (*v77)(v20, v13, v21);
    aBlock._id countAndFlagsBits = Locale.identifier.getter();
    aBlock._id object = v23;
    v24._id countAndFlagsBits = 32;
    v24._id object = (void *)0xE100000000000000;
    String.append(_:)(v24);
    id v25 = [v22 description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v28 = v27;

    v29._id countAndFlagsBits = v26;
    v29._id object = v28;
    String.append(_:)(v29);
    swift_bridgeObjectRelease();
    v30._id countAndFlagsBits = 10;
    v30._id object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    String.append(_:)(aBlock);

    swift_bridgeObjectRelease();
    (*v79)(v20, v21);
    if (v19) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v38 = v80 + 1;
    if (__OFADD__(v80, 1)) {
      break;
    }
    if (v38 < v73)
    {
      unint64_t v39 = *(void *)(v72 + 8 * v38);
      if (v39) {
        goto LABEL_11;
      }
      int64_t v40 = v80 + 2;
      ++v80;
      if (v38 + 1 < v73)
      {
        unint64_t v39 = *(void *)(v72 + 8 * v40);
        if (v39) {
          goto LABEL_14;
        }
        int64_t v80 = v38 + 1;
        if (v38 + 2 < v73)
        {
          unint64_t v39 = *(void *)(v72 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_11;
          }
          int64_t v40 = v38 + 3;
          int64_t v80 = v38 + 2;
          if (v38 + 3 < v73)
          {
            unint64_t v39 = *(void *)(v72 + 8 * v40);
            if (!v39)
            {
              while (1)
              {
                int64_t v38 = v40 + 1;
                if (__OFADD__(v40, 1)) {
                  break;
                }
                if (v38 >= v73)
                {
                  int64_t v80 = v63;
                  goto LABEL_25;
                }
                unint64_t v39 = *(void *)(v72 + 8 * v38);
                ++v40;
                if (v39) {
                  goto LABEL_11;
                }
              }
              __break(1u);
              return;
            }
LABEL_14:
            int64_t v38 = v40;
LABEL_11:
            unint64_t v19 = (v39 - 1) & v39;
            unint64_t v32 = __clz(__rbit64(v39)) + (v38 << 6);
            int64_t v80 = v38;
            goto LABEL_7;
          }
        }
      }
    }
LABEL_25:
    uint64_t v41 = sub_100007620(&qword_1002F3440);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v11, 1, 1, v41);
    unint64_t v19 = 0;
  }
  __break(1u);
LABEL_33:
  swift_once();
LABEL_28:
  uint64_t v43 = type metadata accessor for Logger();
  sub_100011554(v43, (uint64_t)qword_10030EA08);
  id v44 = v64;
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    aBlock._id countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 67109634;
    LODWORD(v82) = [v44 isConfident];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v47 + 8) = 1024;
    LODWORD(v82) = [v44 isFinal];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v47 + 14) = 2082;
    id v48 = [v44 dominantLanguage];
    uint64_t v49 = v78;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v50 = Locale.ltIdentifier.getter();
    unint64_t v52 = v51;
    (*v79)(v49, v81);
    uint64_t v82 = sub_100202FD4(v50, v52, &aBlock._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "LID result (confident: %{BOOL}d, final: %{BOOL}d): %{public}s", (uint8_t *)v47, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  os_log_type_t v53 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v54 = swift_allocObject();
  id v55 = v65;
  *(void *)(v54 + 16) = v65;
  *(void *)(v54 + 24) = v44;
  uint64_t v86 = sub_10009A7C8;
  uint64_t v87 = v54;
  aBlock._id countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
  aBlock._id object = (void *)1107296256;
  uint64_t v84 = sub_10008BA1C;
  uint64_t v85 = &unk_1002CC4A0;
  uint64_t v56 = _Block_copy(&aBlock);
  id v57 = v44;
  id v58 = v55;
  swift_release();
  uint64_t v59 = v66;
  static DispatchQoS.unspecified.getter();
  aBlock._id countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  uint64_t v60 = v69;
  uint64_t v61 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v56);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v60, v61);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v59, v68);
}

void sub_10009673C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData);
  if (v2)
  {
    uint64_t v4 = *(void (**)(uint64_t))((swift_isaMask & *v2) + 0xD8);
    uint64_t v5 = v2;
    v4(a2);
  }
  sub_100091958();
}

id sub_100096838(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100011554(v11, (uint64_t)qword_10030EA98);
  id v12 = a1;
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v40 = v4;
    uint64_t v17 = v16;
    uint64_t v38 = swift_slowAlloc();
    aBlock[0] = v38;
    *(_DWORD *)uint64_t v17 = 136446979;
    unint64_t v39 = v2;
    id v18 = [v12 locale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = Locale.ltIdentifier.getter();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v46 = sub_100202FD4(v19, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 1024;
    LODWORD(v19) = [v12 isStable];

    LODWORD(v46) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v17 + 18) = 1024;
    unsigned int v22 = [v12 isFinal];

    LODWORD(v46) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v17 + 24) = 2085;
    id v23 = [v12 bestTranscription];
    id v24 = [v23 formattedString];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;

    uint64_t v2 = v39;
    uint64_t v46 = sub_100202FD4(v25, v27, aBlock);
    p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Speech result (locale: %{public}s, isStable: %{BOOL}d, final: %{BOOL}d): %{sensitive}s", (uint8_t *)v17, 0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v40;
    swift_slowDealloc();

    id v28 = (void **)(&ResourceBundleClass + 56);
  }
  else
  {

    id v28 = &ResourceBundleClass.weak_ivar_lyt;
  }
  if ((objc_msgSend(v12, (SEL)p_weak_ivar_lyt[423]) & 1) != 0
    || (id result = [v12 (SEL)v28[422]], result))
  {
    sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
    Swift::String v30 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v2;
    *(void *)(v31 + 24) = v12;
    aBlock[4] = (uint64_t)sub_10009A758;
    aBlock[5] = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_10008BA1C;
    id aBlock[3] = (uint64_t)&unk_1002CC450;
    unint64_t v32 = _Block_copy(aBlock);
    id v33 = v12;
    id v34 = v2;
    swift_release();
    uint64_t v35 = v41;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100007620(&qword_1002EEE40);
    sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
    id v36 = v43;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v36, v4);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v35, v44);
  }
  return result;
}

void sub_100096EC8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData);
  if (v2)
  {
    v7[3] = sub_10000B0CC(0, (unint64_t *)&unk_1002F3400);
    v7[4] = sub_10007854C(&qword_1002F3420, (unint64_t *)&unk_1002F3400);
    v7[0] = a2;
    uint64_t v4 = *(void (**)(void *))((swift_isaMask & *v2) + 0xE0);
    uint64_t v5 = v2;
    id v6 = a2;
    v4(v7);

    sub_10000AB68((uint64_t)v7);
  }
  sub_100091958();
}

uint64_t sub_10009702C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v52 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchQoS();
  uint64_t v49 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  id v48 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 translations];
  sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = sub_100161E8C(v12);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    sub_1000295C0(v13 + 32, (uint64_t)&aBlock);
    swift_bridgeObjectRelease();
    if (*((void *)&v55 + 1))
    {
      sub_100029624(&aBlock, *((uint64_t *)&v55 + 1));
      uint64_t v14 = dispatch thunk of FormattedString.formattedString.getter();
      unint64_t v16 = v15;
      sub_10000AB68((uint64_t)&aBlock);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v56 = 0;
    long long aBlock = 0u;
    long long v55 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_10000B070((uint64_t)&aBlock, &qword_1002FA730);
  uint64_t v14 = 0;
  unint64_t v16 = 0;
LABEL_6:
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100011554(v17, (uint64_t)qword_10030E978);
  swift_bridgeObjectRetain();
  id v18 = a1;
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v43 = v14;
    id v23 = v10;
    uint64_t v24 = v7;
    uint64_t v25 = v22;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = v2;
    *(void *)&long long aBlock = v45;
    *(_DWORD *)uint64_t v25 = 136446723;
    id v26 = [v18 locale];
    int v44 = v21;
    id v27 = v26;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v28 = Locale.ltIdentifier.getter();
    uint64_t v47 = v4;
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v23, v24);
    uint64_t v53 = sub_100202FD4(v28, v30, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 1024;
    unsigned int v31 = [v18 isFinal];

    LODWORD(v53) = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v25 + 18) = 2085;
    if (v16) {
      uint64_t v32 = v43;
    }
    else {
      uint64_t v32 = 7104878;
    }
    if (v16) {
      unint64_t v33 = v16;
    }
    else {
      unint64_t v33 = 0xE300000000000000;
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_100202FD4(v32, v33, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    uint64_t v4 = v47;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v44, "Got translation result; locale: %{public}s; final: %{BOOL}d; formattedResult: %{sensitive}s",
      (uint8_t *)v25,
      0x1Cu);
    swift_arrayDestroy();
    uint64_t v2 = v46;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  id v34 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v2;
  *(void *)(v35 + 24) = v18;
  uint64_t v56 = sub_10009A750;
  uint64_t v57 = v35;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v55 = sub_10008BA1C;
  *((void *)&v55 + 1) = &unk_1002CC400;
  id v36 = _Block_copy(&aBlock);
  id v37 = v18;
  id v38 = v2;
  swift_release();
  unint64_t v39 = v48;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  uint64_t v40 = v50;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v39, v51);
}

void sub_100097704(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC17SequoiaTranslator19ConversationManager_turnData);
  if (v2)
  {
    v7[3] = sub_10000B0CC(0, &qword_1002F33B0);
    v7[4] = sub_10007854C((unint64_t *)&qword_1002F33B8, &qword_1002F33B0);
    v7[0] = a2;
    uint64_t v4 = *(void (**)(void *))((swift_isaMask & *v2) + 0xE8);
    uint64_t v5 = v2;
    id v6 = a2;
    v4(v7);

    sub_10000AB68((uint64_t)v7);
  }
  sub_100091958();
}

uint64_t sub_100097868(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_10009A748;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10008BA1C;
  id aBlock[3] = &unk_1002CC3B0;
  unint64_t v12 = _Block_copy(aBlock);
  swift_errorRetain();
  id v13 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

void sub_100097B40(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v1 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10009A1C8((uint64_t)v20, (uint64_t)&v16);
  if (v19 == 4)
  {
    sub_10008B9C0((uint64_t)&v16);
  }
  else if (v19 != 5 {
         || (v16 & 0xFFFFFFFFFFFFFFFELL) != 2
  }
         || (int8x16_t v2 = vorrq_s8(v17, v18),
             *(void *)&vorr_s8(*(int8x8_t *)v2.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v2, v2, 8uLL))))
  {
    sub_10008B9C0((uint64_t)&v16);
    sub_10008B9C0((uint64_t)v20);
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030E978);
    uint64_t v4 = v1;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      if (v1)
      {
        v20[0] = v4;
        uint64_t v9 = v4;
      }
      else
      {
        v20[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v8 = v1;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Translation finished with error: %@", v7, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v5 = v4;
    }

    sub_10009073C(0, v1, 0);
    goto LABEL_26;
  }
  sub_10008B9C0((uint64_t)v20);
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100011554(v10, (uint64_t)qword_10030E978);
  uint64_t v11 = v1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)id v13 = 138412290;
    if (v1)
    {
      v20[0] = v11;
      uint64_t v15 = v11;
    }
    else
    {
      v20[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v1;

    _os_log_impl((void *)&_mh_execute_header, v4, v12, "Translation finished with error, but it's not a final translation: %@", v13, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v4 = v11;
  }
LABEL_26:
}

ValueMetadata *type metadata accessor for ConversationOptions()
{
  return &type metadata for ConversationOptions;
}

unint64_t sub_100098060()
{
  unint64_t result = qword_1002F3370;
  if (!qword_1002F3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3370);
  }
  return result;
}

unint64_t sub_1000980B8()
{
  unint64_t result = qword_1002F3378;
  if (!qword_1002F3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3378);
  }
  return result;
}

unint64_t sub_100098110()
{
  unint64_t result = qword_1002F3380;
  if (!qword_1002F3380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3380);
  }
  return result;
}

unint64_t sub_100098168()
{
  unint64_t result = qword_1002F3388;
  if (!qword_1002F3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3388);
  }
  return result;
}

void sub_1000981BC(unsigned char *a1, void **a2)
{
  int8x16_t v2 = *a2;
  if (*a1 == 2) {
    Class isa = 0;
  }
  else {
    Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setObject:isa forKey:v4];
  swift_unknownObjectRelease();
}

uint64_t sub_100098258()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1000982D4(uint64_t a1, void **a2)
{
  sub_10009A1C8(a1, (uint64_t)v7);
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10009A1C8((uint64_t)v7, (uint64_t)&v6);
  id v4 = v3;
  static Published.subscript.setter();
  return sub_10008B9C0((uint64_t)v7);
}

double sub_10009835C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000983DC(uint64_t a1, void **a2)
{
  int8x16_t v2 = *a2;
  if (!*(void *)(a1 + 8))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v3 = v2;
    static Published.subscript.setter();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v4 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_10009849C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10009851C(void **a1, void **a2)
{
  int8x16_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static Published.subscript.setter();
}

uint64_t sub_100098590(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

void *sub_10009860C(void *a1)
{
  return sub_100202908(0, a1[2], 0, a1);
}

uint64_t sub_100098620(unint64_t a1)
{
  return sub_100202A34(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100098634(unint64_t a1)
{
  return sub_100202FA0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t (*sub_100098648(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000987CC(v6, a2, a3);
  return sub_1000986B0;
}

uint64_t (*sub_1000986B4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100098854(v6, a2, a3);
  return sub_1000986B0;
}

uint64_t (*sub_10009871C(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000988D4(v6, a2, a3);
  return sub_1000986B0;
}

void sub_100098784(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1000987CC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for StaticImage;
  }
  __break(1u);
  return result;
}

void destroy for StaticImage(id *a1)
{
}

uint64_t (*sub_100098854(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return destroy for BroadcastPresentation;
  }
  __break(1u);
  return result;
}

void (*sub_1000988D4(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s17SequoiaTranslator11StaticImageOwxx;
  }
  __break(1u);
  return result;
}

uint64_t sub_100098954(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for StoredSpeechResult();
  v38[3] = v10;
  v38[4] = sub_10009A004(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  uint64_t v11 = sub_100014830(v38);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, a3, v10);
  v37[3] = sub_10000B0CC(0, &qword_1002F33B0);
  v37[4] = sub_10007854C((unint64_t *)&qword_1002F33B8, &qword_1002F33B0);
  v37[0] = a4;
  swift_getKeyPath();
  swift_getKeyPath();
  id v12 = a4;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1000483F4(v36[0], a1, a2);
  LOBYTE(a3) = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a3) {
    goto LABEL_23;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v36[0] & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v13 >= *(void *)((v36[0] & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v16 = *(id *)(v36[0] + 8 * v13 + 32);
LABEL_6:
  int8x16_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_1000295C0((uint64_t)v38, (uint64_t)v36);
  dispatch thunk of PersistedTranslation.speechResult.setter();
  sub_1000295C0((uint64_t)v37, (uint64_t)v36);
  dispatch thunk of PersistedTranslation.translationResult.setter();
  sub_1000295C0(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_store, (uint64_t)v36);
  sub_100029624(v36, v36[3]);
  dispatch thunk of TranslationStore.save()();
  sub_10000AB68((uint64_t)v36);
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = v17;
  char v19 = (void (*)(unint64_t *, void))static Published.subscript.modify();
  int v21 = v20;
  unint64_t v22 = *v20;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int v21 = v22;
  if (!result || (v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100098590(v22);
    unint64_t v22 = result;
    *int v21 = result;
  }
  if ((v13 & 0x8000000000000000) != 0) {
    goto LABEL_27;
  }
  if (v13 < *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v23 = *(void **)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x20);
    *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v13 + 0x2UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v18;

    specialized Array._endMutation()();
    v19(v36, 0);
    swift_release();
    swift_release();
    uint64_t v24 = OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation;
    uint64_t v25 = *(void **)(a5 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationAppSession_selectedTranslation);
    if (v25)
    {
      id v26 = [v25 identifier];
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    id v30 = [v18 identifier];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    if (v29)
    {
      if (v27 == v31 && v29 == v33)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v34 & 1) == 0)
        {

          goto LABEL_23;
        }
      }
      uint64_t v35 = *(void **)(a5 + v24);
      *(void *)(a5 + v24) = v18;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
LABEL_23:
    sub_10000AB68((uint64_t)v38);
    return sub_10000AB68((uint64_t)v37);
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL sub_100098DC0()
{
  id v0 = [self sharedConnection];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = MCFeatureAssistantProfanityFilterForced;
    unsigned int v3 = [v1 effectiveBoolValueForSetting:v2];

    return v3 == 1;
  }
  else
  {
    if (qword_1002EE630 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100011554(v5, (uint64_t)qword_10030EA98);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "MCProfileConnection cannot be established", v8, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
}

uint64_t sub_100098F04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100098F54(void *a1, uint64_t a2)
{
  sub_100093CD0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_100098F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  return swift_retain();
}

uint64_t sub_100098F74()
{
  return swift_release();
}

uint64_t sub_100098F7C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100098FD4()
{
  sub_100094264(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_100098FF0()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v14 - v5;
  dispatch thunk of PersistedTranslation.sourceLocale.getter();
  dispatch thunk of PersistedTranslation.targetLocale.getter();
  char v7 = static Locale.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7) {
    return dispatch thunk of PersistedTranslation.displaySourceText.getter();
  }
  uint64_t v9 = dispatch thunk of PersistedTranslation.displayText.getter();
  if (sub_100098DC0())
  {
    uint64_t v10 = self;
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v10 stringReplacingRedactionsWithBeepMarker:v11];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v9;
}

uint64_t sub_1000991A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  id v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id sub_1000991D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  char v7 = &v18[-v6];
  sub_10009A1C8(a1, (uint64_t)v18);
  uint64_t v8 = self;
  id v9 = [v8 standardUserDefaults];
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 stringForKey:v10];

  if (v11)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Locale.init(identifier:)();
  id v12 = [v8 standardUserDefaults];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 stringForKey:v13];

  if (v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Locale.init(identifier:)();
  id v15 = objc_allocWithZone((Class)type metadata accessor for ConversationManager());
  id v16 = sub_10008CF30((uint64_t)v18, v7, v5);
  sub_10008B9C0(a1);
  return v16;
}

void sub_100099408()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v74)
  {
    id v18 = aBlock;
LABEL_8:
    sub_10000B070((uint64_t)v18, (uint64_t *)&unk_1002F02C0);
    return;
  }
  sub_10000B0CC(0, &qword_1002F3448);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v72 = v9;
  id v12 = (void *)v79;
  uint64_t v13 = Notification.userInfo.getter();
  if (!v13)
  {
LABEL_18:

    return;
  }
  uint64_t v14 = v13;
  uint64_t v77 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v78 = v15;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v14 + 16) && (unint64_t v16 = sub_10020384C((uint64_t)aBlock), (v17 & 1) != 0))
  {
    sub_10000B170(*(void *)(v14 + 56) + 32 * v16, (uint64_t)&v79);
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10006E7AC((uint64_t)aBlock);
  if (!*((void *)&v80 + 1))
  {

    id v18 = (uint64_t *)&v79;
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_18;
  }
  uint64_t v65 = v1;
  uint64_t v66 = v4;
  id v67 = v12;
  uint64_t v68 = v5;
  id v19 = [v12 currentRoute];
  uint64_t v20 = swift_allocObject();
  uint64_t v70 = v20;
  *(void *)(v20 + 16) = &_swiftEmptyDictionarySingleton;
  int v21 = (void *)(v20 + 16);
  Class isa = UInt._bridgeToObjectiveC()().super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = (uint64_t)&_swiftEmptyDictionarySingleton;
  *int v21 = 0x8000000000000000;
  sub_100205C04((uint64_t)isa, 0x6E6F73616572, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v69 = v21;
  *int v21 = aBlock[0];
  swift_bridgeObjectRelease();
  id v71 = v19;
  id v24 = [v19 outputs];
  uint64_t v25 = sub_10000B0CC(0, (unint64_t *)&unk_1002F3450);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
    if (v35) {
      goto LABEL_14;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_21;
  }
LABEL_14:
  id v64 = v25;
  if ((v26 & 0xC000000000000001) != 0)
  {
    id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v28 = *(id *)(v26 + 32);
  }
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  id v30 = [v29 p_weak_ivar_lyt[438]];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v32 = v69;
  uint64_t v33 = *v69;
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  aBlock[0] = v33;
  *uint64_t v32 = 0x8000000000000000;
  sub_100205C04((uint64_t)v31, 0x74757074756FLL, 0xE600000000000000, v34);
  *uint64_t v32 = aBlock[0];

  swift_bridgeObjectRelease();
LABEL_22:
  id v36 = [v71 inputs];
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
    if (!v45) {
      goto LABEL_29;
    }
LABEL_24:
    if ((v37 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      id v38 = *(id *)(v37 + 32);
      goto LABEL_27;
    }
LABEL_38:
    id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_27:
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    id v40 = [v39 p_weak_ivar_lyt[438]];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v42 = v69;
    uint64_t v43 = *v69;
    char v44 = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v43;
    void *v42 = 0x8000000000000000;
    sub_100205C04((uint64_t)v41, 0x7475706E69, 0xE500000000000000, v44);
    void *v42 = aBlock[0];

    goto LABEL_29;
  }
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_24;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  if (qword_1002EE658 != -1) {
    swift_once();
  }
  uint64_t v46 = type metadata accessor for Logger();
  sub_100011554(v46, (uint64_t)qword_10030EB10);
  swift_retain_n();
  uint64_t v47 = Logger.logObject.getter();
  os_log_type_t v48 = static os_log_type_t.info.getter();
  int v49 = v48;
  id v64 = v47;
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v50 = swift_slowAlloc();
    int v63 = v49;
    uint64_t v51 = (uint8_t *)v50;
    uint64_t v62 = swift_slowAlloc();
    aBlock[0] = v62;
    uint64_t v61 = v51;
    *(_DWORD *)uint64_t v51 = 136446210;
    v60[1] = v51 + 4;
    swift_beginAccess();
    sub_10000B0CC(0, (unint64_t *)&qword_1002F73B0);
    swift_bridgeObjectRetain();
    uint64_t v52 = Dictionary.description.getter();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v77 = (void *)sub_100202FD4(v52, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    long long v55 = v64;
    _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v63, "Audio route change %{public}s", v61, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v56 = v65;
  sub_10000B0CC(0, (unint64_t *)&qword_1002EEE30);
  uint64_t v57 = v72;
  (*(void (**)(char *, void, uint64_t))(v72 + 104))(v11, enum case for DispatchQoS.QoSClass.utility(_:), v8);
  id v58 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v8);
  uint64_t v75 = sub_10009A860;
  uint64_t v76 = v70;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10008BA1C;
  uint64_t v74 = &unk_1002CC590;
  uint64_t v59 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v77 = _swiftEmptyArrayStorage;
  sub_10009A004((unint64_t *)&qword_1002F5710, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100007620(&qword_1002EEE40);
  sub_10009A940((unint64_t *)&qword_1002F5720, &qword_1002EEE40);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v59);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v66);
  swift_release();
  swift_release();
}

void *sub_100099E5C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = [v10 identifier:v22];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10009A004(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009A064()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009A0A4(uint64_t a1)
{
  return sub_1000947B4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10009A0AC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10009A0F4()
{
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_100021B58;
  *(void *)(v3 + 168) = v2;
  *(_OWORD *)(v3 + 152) = v5;
  return _swift_task_switch(sub_1000952A8, 0, 0);
}

uint64_t sub_10009A1B0(uint64_t a1)
{
  return sub_10018BA14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10009A1C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10009A224()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10009A26C()
{
  sub_100094A9C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10009A278()
{
  uint64_t v1 = type metadata accessor for Locale();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10009A34C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = *(void **)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100092EE4(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_10009A3D8(void *a1)
{
  return sub_10009C4E4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10009A3F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10009A430()
{
}

uint64_t sub_10009A460()
{
  sub_10000AB68(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10009A4A0()
{
  sub_100093B94(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_10009A4AC()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10009A4EC()
{
}

void sub_10009A4F4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (qword_1002EE630 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100011554(v8, (uint64_t)qword_10030EA98);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136643075;
    swift_bridgeObjectRetain();
    sub_100202FD4(a1, a2, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_100202FD4(a3, a4, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Preparing accessibility announcement notification using text: '%{sensitive}s' for locale: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10009A708()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10009A748()
{
  sub_100097B40(*(void *)(v0 + 16));
}

void sub_10009A750()
{
  sub_100097704(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10009A758()
{
  sub_100096EC8(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10009A760(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F3428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10009A7C8()
{
  sub_10009673C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10009A7D0()
{
  sub_100095C24(*(char **)(v0 + 16));
}

uint64_t sub_10009A7E0(void *a1)
{
  return sub_10009C3D4(a1) & 1;
}

uint64_t sub_10009A800(void *a1)
{
  return sub_10009C6B0(a1) & 1;
}

uint64_t sub_10009A828()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10009A860()
{
}

void sub_10009A868(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  NSString v4 = String._bridgeToObjectiveC()();
  LOBYTE(v3) = [v3 BOOLForKey:v4];

  *a2 = (_BYTE)v3;
}

uint64_t sub_10009A8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009A940(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100007928(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10009A990(void *a1)
{
  return sub_10009A7E0(a1) & 1;
}

uint64_t destroy for ConversationPlayButton()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ConversationPlayButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10009073C(0, 0, 0) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ConversationPlayButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10009073C(0, 0, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for ConversationPlayButton(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ConversationPlayButton(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 4sub_10009073C(0, 0, 0) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationPlayButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConversationPlayButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_10009073C(0, 0, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8sub_10009073C(0, 0, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8sub_10009073C(0, 0, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationPlayButton()
{
  return &type metadata for ConversationPlayButton;
}

uint64_t sub_10009AD28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10009AD44@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v5 = sub_100007620(&qword_1002F34B8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&v31 - v9;
  uint64_t v11 = sub_100007620(&qword_1002F34C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  char v20 = (char *)&v31 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v31 - v21;
  char v23 = *a1;
  if ((*a1 & 1) != 0 || a1[24] != 1)
  {
    uint64_t v25 = sub_100007620(&qword_1002F34C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v22, 1, 1, v25);
  }
  else
  {
    sub_10009B0F8();
    uint64_t v24 = sub_100007620(&qword_1002F34C8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v22, 0, 1, v24);
  }
  uint64_t v26 = sub_100007620(&qword_1002F34D0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v10, v32, v26);
  *(void *)&v10[*(int *)(v5 + 36)] = 0x3FF0000000000000;
  if (v23 & 1) != 0 || (a1[24])
  {
    uint64_t v27 = sub_100007620(&qword_1002F34C8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v20, 1, 1, v27);
  }
  else
  {
    sub_10009B0F8();
    uint64_t v28 = sub_100007620(&qword_1002F34C8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 0, 1, v28);
  }
  sub_10000C3A4((uint64_t)v22, (uint64_t)v17, &qword_1002F34C0);
  sub_10000C3A4((uint64_t)v10, (uint64_t)v8, &qword_1002F34B8);
  sub_10000C3A4((uint64_t)v20, (uint64_t)v14, &qword_1002F34C0);
  sub_10000C3A4((uint64_t)v17, a3, &qword_1002F34C0);
  uint64_t v29 = sub_100007620(&qword_1002F34D8);
  sub_10000C3A4((uint64_t)v8, a3 + *(int *)(v29 + 48), &qword_1002F34B8);
  sub_10000C3A4((uint64_t)v14, a3 + *(int *)(v29 + 64), &qword_1002F34C0);
  sub_10000B070((uint64_t)v20, &qword_1002F34C0);
  sub_10000B070((uint64_t)v10, &qword_1002F34B8);
  sub_10000B070((uint64_t)v22, &qword_1002F34C0);
  sub_10000B070((uint64_t)v14, &qword_1002F34C0);
  sub_10000B070((uint64_t)v8, &qword_1002F34B8);
  return sub_10000B070((uint64_t)v17, &qword_1002F34C0);
}

uint64_t sub_10009B0F8()
{
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)();
  sub_100007620(&qword_1002F34E0);
  Binding.projectedValue.getter();
  uint64_t v1 = (_OWORD *)swift_allocObject();
  long long v2 = v0[3];
  v1[3] = v0[2];
  v1[4] = v2;
  v1[5] = v0[4];
  long long v3 = v0[1];
  v1[1] = *v0;
  v1[2] = v3;
  sub_10009B3AC((uint64_t)v0);
  sub_10009B400();
  View.bindGeometry(to:reader:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10009B278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = v2[3];
  void v10[2] = v2[2];
  v10[3] = v5;
  long long v11 = v2[4];
  long long v6 = v2[1];
  v10[0] = *v2;
  v10[1] = v6;
  if (qword_1002EE588 != -1) {
    swift_once();
  }
  uint64_t v7 = *((void *)&v11 + 1);
  *(void *)a2 = qword_10030E778;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v8 = sub_100007620(&qword_1002F34B0);
  return sub_10009AD44((char *)v10, a1, a2 + *(int *)(v8 + 44));
}

uint64_t sub_10009B328()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

double sub_10009B378()
{
  GeometryProxy.size.getter();
  return v1 + *(double *)(v0 + 88) + *(double *)(v0 + 88);
}

uint64_t sub_10009B3AC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10009B400()
{
  unint64_t result = qword_1002F34E8;
  if (!qword_1002F34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F34E8);
  }
  return result;
}

unint64_t sub_10009B458()
{
  unint64_t result = qword_1002F34F0;
  if (!qword_1002F34F0)
  {
    sub_100007928(&qword_1002F34F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F34F0);
  }
  return result;
}

void destroy for ConversationState(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)a1 + 5;
  }
  switch(v2)
  {
    case 0u:
    case 2u:
    case 4u:
      id v3 = *(id *)a1;
      goto LABEL_6;
    case 1u:

      id v3 = *(id *)(a1 + 8);
LABEL_6:

      break;
    case 3u:
      sub_10000AB68(a1);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for ConversationState(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 5) {
    unsigned int v3 = *(_DWORD *)a2 + 5;
  }
  switch(v3)
  {
    case 0u:
      long long v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 0;
      goto LABEL_11;
    case 1u:
      long long v6 = *(void **)a2;
      uint64_t v7 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 1;
      id v8 = v6;
      id v9 = v7;
      return a1;
    case 2u:
      long long v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v10 = 2;
      goto LABEL_10;
    case 3u:
      long long v11 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(uint64_t))(v11 - 8))(a1);
      *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 3;
      return a1;
    case 4u:
      long long v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      char v10 = 4;
LABEL_10:
      *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = v10;
LABEL_11:
      id v12 = v4;
      break;
    default:
      long long v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      break;
  }
  return a1;
}

uint64_t assignWithCopy for ConversationState(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
      case 2u:
      case 4u:
        id v5 = *(id *)a1;
        goto LABEL_7;
      case 1u:

        id v5 = *(id *)(a1 + 8);
LABEL_7:

        break;
      case 3u:
        sub_10000AB68(a1);
        break;
      default:
        break;
    }
    unsigned int v6 = *((unsigned __int8 *)a2 + 40);
    if (v6 >= 5) {
      unsigned int v6 = *(_DWORD *)a2 + 5;
    }
    switch(v6)
    {
      case 0u:
        uint64_t v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 0;
        goto LABEL_19;
      case 1u:
        char v10 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        long long v11 = (void *)*((void *)a2 + 1);
        *(void *)(a1 + 8) = v11;
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 1;
        id v12 = v10;
        id v13 = v11;
        return a1;
      case 2u:
        uint64_t v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v14 = 2;
        goto LABEL_18;
      case 3u:
        uint64_t v15 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v15;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v15 - 8))(a1, a2);
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 3;
        return a1;
      case 4u:
        uint64_t v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        char v14 = 4;
LABEL_18:
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = v14;
LABEL_19:
        id v16 = v7;
        break;
      default:
        long long v8 = *a2;
        long long v9 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v8;
        *(_OWORD *)(a1 + 16) = v9;
        break;
    }
  }
  return a1;
}

__n128 initializeWithTake for ConversationState(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ConversationState(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    switch(v4)
    {
      case 0u:
      case 2u:
      case 4u:
        id v5 = *(id *)a1;
        goto LABEL_7;
      case 1u:

        id v5 = *(id *)(a1 + 8);
LABEL_7:

        break;
      case 3u:
        sub_10000AB68(a1);
        break;
      default:
        break;
    }
    unsigned int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 >= 5) {
      unsigned int v6 = *(_DWORD *)a2 + 5;
    }
    switch(v6)
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = 0;
        return a1;
      case 1u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v8 = 1;
        goto LABEL_18;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v8 = 2;
        goto LABEL_18;
      case 3u:
        long long v9 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v9;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v8 = 3;
        goto LABEL_18;
      case 4u:
        *(void *)a1 = *(void *)a2;
        char v8 = 4;
LABEL_18:
        *(unsigned char *)(a1 + 4sub_10009073C(0, 0, 0) = v8;
        break;
      default:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ConversationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ConversationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4sub_10009073C(0, 0, 0) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10009BA50(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_10009BA6C(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 4sub_10009073C(0, 0, 0) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ConversationState()
{
  return &type metadata for ConversationState;
}

unint64_t sub_10009BAA4()
{
  sub_10009A1C8(v0, (uint64_t)&v2);
  switch(v7)
  {
    case 1:
      sub_10008B9C0((uint64_t)&v2);
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      sub_10008B9C0((uint64_t)&v2);
      unint64_t result = 0x6E696E657473694CLL;
      break;
    case 3:
      sub_10000AB68((uint64_t)&v2);
      unint64_t result = 0x74616C736E617254;
      break;
    case 4:
      sub_10008B9C0((uint64_t)&v2);
      unint64_t result = 1701736260;
      break;
    case 5:
      if (v5 | v6 | v2 | v4 | v3)
      {
        unint64_t result = 0xD000000000000012;
        if (v2 == 1 && !(v5 | v6 | v4 | v3)) {
          unint64_t result = 0xD000000000000019;
        }
      }
      else
      {
        unint64_t result = 0x64657472617453;
      }
      break;
    default:
      sub_10008B9C0((uint64_t)&v2);
      unint64_t result = 0x696E4920656C6449;
      break;
  }
  return result;
}

uint64_t sub_10009BC40(void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid);
  swift_beginAccess();
  id v4 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10009BCE0(void *a1)
{
  return sub_10009BD48(a1, &OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_1002027B0, (uint64_t (*)(uint64_t *, uint64_t))sub_100048DE4);
}

uint64_t sub_10009BD14(void *a1)
{
  return sub_10009BD48(a1, &OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_1002027C4, (uint64_t (*)(uint64_t *, uint64_t))sub_100048DE4);
}

uint64_t sub_10009BD48(void *a1, void *a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t, uint64_t), uint64_t (*a4)(uint64_t *, uint64_t))
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  char v10 = sub_100029624(a1, v8);
  return sub_10009EAA0((uint64_t)v10, v4, v8, v9, a2, a3, a4);
}

uint64_t sub_10009BDA8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_completion);
  if (v1) {
    return v1(v0);
  }
  return result;
}

unint64_t sub_10009BDEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request);
  if ([v3 autodetectLanguage])
  {
    uint64_t v4 = (unint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid);
    swift_beginAccess();
    unint64_t v5 = *v4;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (v6)
      {
LABEL_4:
        unint64_t result = v6 - 1;
        if (__OFSUB__(v6, 1))
        {
          __break(1u);
        }
        else if ((v5 & 0xC000000000000001) == 0)
        {
          if ((result & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v8 = *(id *)(v5 + 8 * result + 32);
LABEL_9:
            uint64_t v9 = v8;
            swift_bridgeObjectRelease();
            if ([v9 isFinal])
            {
              id v10 = [v9 dominantLanguage];
              static Locale._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v11 = type metadata accessor for Locale();
              return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 0, 1, v11);
            }

            goto LABEL_17;
          }
          __break(1u);
          return result;
        }
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v6) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v16 = type metadata accessor for Locale();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
  }
  id v12 = [v3 localePair];
  id v13 = [v12 sourceLocale];

  static Locale._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v15 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);

  return v15(a1, 0, 1, v14);
}

unint64_t sub_10009C060()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009BDEC((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F4110);
    long long v25 = 0u;
    long long v26 = 0u;
    uint64_t v27 = 0;
LABEL_7:
    sub_10000B070((uint64_t)&v25, (uint64_t *)&unk_1002FA740);
    BOOL v16 = 1;
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech);
  uint64_t v10 = swift_beginAccess();
  uint64_t v11 = *v9;
  __chkstk_darwin(v10);
  *(&v24 - 2) = (uint64_t)v8;
  swift_bridgeObjectRetain();
  sub_1001BB3B8((uint64_t)sub_10009EE08, v11, (uint64_t)&v25);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!*((void *)&v26 + 1)) {
    goto LABEL_7;
  }
  sub_100029624(&v25, *((uint64_t *)&v26 + 1));
  uint64_t v12 = dispatch thunk of FormattedString.formattedString.getter();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v16 = v15 == 0;
  sub_10000AB68((uint64_t)&v25);
LABEL_8:
  uint64_t v17 = (unint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid);
  swift_beginAccess();
  unint64_t v18 = *v17;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (v19)
    {
LABEL_10:
      unint64_t result = v19 - 1;
      if (__OFSUB__(v19, 1))
      {
        __break(1u);
      }
      else if ((v18 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v21 = *(id *)(v18 + 8 * result + 32);
LABEL_15:
          uint64_t v22 = v21;
          swift_bridgeObjectRelease();
          if (!v16)
          {
            unsigned int v23 = [v22 isConfident];

            return v23 ^ 1;
          }

          return 0;
        }
        __break(1u);
        return result;
      }
      id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10009C3D4(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  LOBYTE(a1) = static Locale.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

uint64_t sub_10009C4E4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16[-1] - v9;
  sub_100029624(a1, a1[3]);
  char v11 = dispatch thunk of SpeechResult.isFinal.getter();
  sub_1000295C0((uint64_t)a1, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  if (v11)
  {
    sub_100029624(v16, v16[3]);
    dispatch thunk of AnnotatedResult.locale.getter();
    char v12 = static Locale.== infix(_:_:)();
    unint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    char v12 = 0;
  }
  sub_10000AB68((uint64_t)v16);
  return v12 & 1;
}

uint64_t sub_10009C6B0(void *a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100029624(a1, a1[3]);
  dispatch thunk of TranslationResult.locale.getter();
  LOBYTE(a1) = static Locale.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 & 1;
}

uint64_t sub_10009C7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v47 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v8 = (char *)&v39 - v7;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  BOOL v16 = (char *)&v39 - v15;
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v39 - v17;
  sub_10009BDEC((uint64_t)v8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v19(v8, 1, v9) == 1)
  {
    sub_10000B070((uint64_t)v8, (uint64_t *)&unk_1002F4110);
    long long v49 = 0u;
    long long v50 = 0u;
    uint64_t v51 = 0;
LABEL_9:
    uint64_t result = sub_10000B070((uint64_t)&v49, (uint64_t *)&unk_1002FA740);
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  char v44 = v16;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v19;
  v45(v18, v8, v9);
  char v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech);
  uint64_t v21 = swift_beginAccess();
  uint64_t v48 = a1;
  uint64_t v22 = *v20;
  __chkstk_darwin(v21);
  *(&v39 - 2) = (uint64_t)v18;
  swift_bridgeObjectRetain();
  sub_1001BB3B8((uint64_t)sub_10009A3D8, v22, (uint64_t)&v49);
  uint64_t v43 = 0;
  swift_bridgeObjectRelease();
  a1 = v48;
  unsigned int v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v18, v9);
  if (!*((void *)&v50 + 1)) {
    goto LABEL_9;
  }
  sub_100048DE4(&v49, (uint64_t)v52);
  uint64_t v42 = v2;
  id v40 = *(id *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request);
  id v24 = [v40 localePair];
  sub_100029624(v52, v52[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  NSString v41 = v23;
  v23(v13, v9);
  id v26 = [v24 oppositeToLocale:isa];

  if (v26)
  {
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v27 = (uint64_t)v47;
    uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v45;
    v45(v47, v13, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
    int v29 = v46(v27, 1, v9);
    uint64_t v30 = v48;
    if (v29 != 1)
    {
      uint64_t v31 = v44;
      v28(v44, v27, v9);
      id v32 = [v40 localePair];
      unsigned int v33 = [v32 isPassthrough];

      char v34 = (uint64_t *)(v42 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation);
      if (v33)
      {
        swift_beginAccess();
        uint64_t v35 = *(void *)(*v34 + 16);
        if (v35)
        {
          sub_1000295C0(*v34 + 40 * v35 - 8, v30);
        }
        else
        {
          *(void *)(v30 + 32) = 0;
          *(_OWORD *)uint64_t v30 = 0u;
          *(_OWORD *)(v30 + 16) = 0u;
        }
        v41(v44, v9);
      }
      else
      {
        uint64_t v37 = swift_beginAccess();
        uint64_t v38 = *v34;
        __chkstk_darwin(v37);
        *(&v39 - 2) = (uint64_t)v31;
        swift_bridgeObjectRetain();
        sub_1001BB3B8((uint64_t)sub_10009EDE8, v38, v30);
        swift_bridgeObjectRelease();
        v41(v31, v9);
      }
      return sub_10000AB68((uint64_t)v52);
    }
  }
  else
  {
    uint64_t v27 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v47, 1, 1, v9);
    uint64_t v30 = v48;
  }
  sub_10000B070(v27, (uint64_t *)&unk_1002F4110);
  *(_OWORD *)uint64_t v30 = 0u;
  *(_OWORD *)(v30 + 16) = 0u;
  *(void *)(v30 + 32) = 0;
  return sub_10000AB68((uint64_t)v52);
}

uint64_t sub_10009CD58(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16[-1] - v9;
  sub_100029624(a1, a1[3]);
  char v11 = dispatch thunk of TranslationResult.isFinal.getter();
  sub_1000295C0((uint64_t)a1, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
  if (v11)
  {
    sub_100029624(v16, v16[3]);
    dispatch thunk of TranslationResult.locale.getter();
    char v12 = static Locale.== infix(_:_:)();
    unint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v8, v4);
    v13(v10, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    char v12 = 0;
  }
  sub_10000AB68((uint64_t)v16);
  return v12 & 1;
}

id sub_10009CF54()
{
  return sub_10009E664(type metadata accessor for ConversationTurn);
}

uint64_t type metadata accessor for ConversationTurn()
{
  return self;
}

uint64_t sub_10009D010(void *a1)
{
  uint64_t v3 = sub_100007620(&qword_1002F8BA0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v16[-v7];
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_instrumentation)
     + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstLID;
  swift_beginAccess();
  sub_10000C3A4(v9, (uint64_t)v8, &qword_1002F8BA0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
  sub_10000B070((uint64_t)v8, &qword_1002F8BA0);
  if (v12 == 1)
  {
    Date.init()();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
    swift_beginAccess();
    sub_1000344BC((uint64_t)v6, v9, &qword_1002F8BA0);
    swift_endAccess();
  }
  unint64_t v13 = (void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid);
  swift_beginAccess();
  id v14 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_10009D23C(void *a1)
{
  return sub_10009D2B4(a1, &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstResult, &OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_1002027B0, (uint64_t (*)(uint64_t *, uint64_t))sub_100048DE4);
}

uint64_t sub_10009D278(void *a1)
{
  return sub_10009D2B4(a1, &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTranslation, &OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_1002027C4, (uint64_t (*)(uint64_t *, uint64_t))sub_100048DE4);
}

uint64_t sub_10009D2B4(void *a1, void *a2, void *a3, uint64_t (*a4)(BOOL, unint64_t, uint64_t, uint64_t), uint64_t (*a5)(uint64_t *, uint64_t))
{
  unsigned int v23 = a4;
  id v24 = a5;
  uint64_t v9 = sub_100007620(&qword_1002F8BA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  int v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v23 - v13;
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_instrumentation) + *a2;
  swift_beginAccess();
  sub_10000C3A4(v15, (uint64_t)v14, &qword_1002F8BA0);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16);
  sub_10000B070((uint64_t)v14, &qword_1002F8BA0);
  if (v18 == 1)
  {
    Date.init()();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    swift_beginAccess();
    sub_1000344BC((uint64_t)v12, v15, &qword_1002F8BA0);
    swift_endAccess();
  }
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  uint64_t v21 = sub_100029624(a1, v19);
  return sub_10009EAA0((uint64_t)v21, v5, v19, v20, a3, v23, v24);
}

uint64_t sub_10009D49C()
{
  uint64_t v1 = sub_100007620((uint64_t *)&unk_1002F4110);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_10009DBB4((uint64_t)v3);
  uint64_t result = sub_10000B070((uint64_t)v3, (uint64_t *)&unk_1002F4110);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_completion);
  if (v6) {
    return v6(v0);
  }
  return result;
}

uint64_t sub_10009D58C()
{
  uint64_t v1 = sub_100007620(&qword_1002F8BA0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v12[-v5];
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_instrumentation)
     + OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_firstTTS;
  swift_beginAccess();
  sub_10000C3A4(v7, (uint64_t)v6, &qword_1002F8BA0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8);
  uint64_t result = sub_10000B070((uint64_t)v6, &qword_1002F8BA0);
  if (v10 == 1)
  {
    Date.init()();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
    swift_beginAccess();
    sub_1000344BC((uint64_t)v4, v7, &qword_1002F8BA0);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10009D73C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  int v18 = (char *)&v33 - v17;
  sub_10000C3A4(a1, (uint64_t)v9, (uint64_t *)&unk_1002F4110);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
    sub_10000B070((uint64_t)v9, (uint64_t *)&unk_1002F4110);
    sub_10009C7C0((uint64_t)v41);
    if (v42)
    {
      sub_100007620(&qword_1002FC480);
      sub_10000B0CC(0, &qword_1002F33B0);
      int v20 = swift_dynamicCast();
      uint64_t v21 = v40;
      goto LABEL_8;
    }
LABEL_11:
    sub_10000B070((uint64_t)v41, (uint64_t *)&unk_1002F33F0);
    return 0;
  }
  uint64_t v38 = v11;
  id v36 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v36(v18, v9, v10);
  uint64_t v35 = v2;
  id v22 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request), "localePair"));
  char v34 = v18;
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  id v24 = [v22 oppositeToLocale:isa];

  if (!v24)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v7, 1, 1, v10);
    goto LABEL_14;
  }
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  long long v25 = v14;
  id v26 = v36;
  v36(v7, v25, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v7, 0, 1, v10);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v19)(v7, 1, v10);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v28 = v37;
  v26(v37, v7, v10);
  int v29 = (uint64_t *)(v35 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation);
  uint64_t v30 = swift_beginAccess();
  uint64_t v31 = *v29;
  __chkstk_darwin(v30);
  *(&v33 - 2) = (uint64_t)v28;
  swift_bridgeObjectRetain();
  sub_1001BB3B8((uint64_t)sub_10009A800, v31, (uint64_t)v41);
  swift_bridgeObjectRelease();
  id v32 = *(void (**)(char *, uint64_t))(v38 + 8);
  v32(v28, v10);
  v32(v34, v10);
  if (!v42) {
    goto LABEL_11;
  }
  sub_100007620(&qword_1002FC480);
  sub_10000B0CC(0, &qword_1002F33B0);
  int v20 = swift_dynamicCast();
  uint64_t v21 = v39;
LABEL_8:
  if (v20) {
    return v21;
  }
  else {
    return 0;
  }
}

void sub_10009DBB4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v58 = (char *)&v58 - v7;
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v63 = sub_10009E3F8();
  uint64_t v12 = *(unsigned char **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_instrumentation);
  uint64_t v13 = *(void **)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request);
  id v14 = [v13 localePair];
  uint64_t v15 = *(void **)&v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair];
  *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_localePair] = v14;

  unsigned __int8 v16 = [v13 censorSpeech];
  v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_censorSpeech] = v16;
  uint64_t v62 = v9;
  uint64_t v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  BOOL v17 = v59(a1, 1, v8) != 1;
  v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lidTriggered] = v17;
  sub_10000B0CC(0, (unint64_t *)&qword_1002F3390);
  int v18 = (void *)static NSUserDefaults.translationGroupDefaults.getter();
  char v19 = NSUserDefaults.onDeviceOnly.getter();

  v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_onDeviceModeEnabled] = v19 & 1;
  uint64_t v60 = a1;
  int v20 = (void *)sub_10009D73C(a1);
  if (!v20)
  {
    uint64_t v37 = v62;
    id v36 = v63;
    goto LABEL_35;
  }
  uint64_t v21 = v20;
  BOOL v22 = [v20 route] == (id)1;
  v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_offline] = v22;
  aBlock[0] = v21;
  sub_10000B0CC(0, &qword_1002F33B0);
  sub_10009ED80();
  v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_lowQualityMT] = TranslationResult.isLowConfidence.getter() & 1;
  id v23 = [v21 translations];
  sub_10000B0CC(0, (unint64_t *)&unk_1002F3410);
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    long long v25 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_25;
    }
  }
  else
  {
    long long v25 = *(void **)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v25)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_23;
    }
    id v26 = *(id *)(v24 + 32);
  }
  long long v25 = v26;
  swift_bridgeObjectRelease();
  id v27 = [v25 statistics];
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = [v27 inputTokenCount];
    *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputTokenCount] = v29;
    id v30 = [v28 inputSubtokenCount];

    *(void *)&v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_inputSubtokenCount] = v30;
  }
  id v31 = [v25 senses];
  sub_10000B0CC(0, &qword_1002F3590);
  unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v24 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v38) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
  if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:

    goto LABEL_25;
  }
LABEL_11:
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v32 = *(id *)(v24 + 32);
  }
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  unsigned int v34 = [v33 isPhrasebookMatch];

  if (v34) {
    uint64_t v35 = &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_nBestDisplay;
  }
  else {
    uint64_t v35 = &OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_senseDisambiguation;
  }
  v12[*v35] = 1;
LABEL_26:
  if ([v21 route] == (id)1)
  {
    Class isa = (Class)v63;
    int v63 = 0;
  }
  else
  {
    if (!v63)
    {
      int v63 = 0;
      goto LABEL_31;
    }
    uint64_t v40 = v63;
    id v41 = [v21 locale];
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v8);
    [v40 setTargetLocale:isa];
  }
LABEL_31:
  id v42 = [v13 localePair];
  id v43 = [v21 locale];
  static Locale._unconditionallyBridgeFromObjectiveC(_:)();

  Class v44 = Locale._bridgeToObjectiveC()().super.isa;
  uint64_t v37 = v62;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v11, v8);
  id v45 = [v42 oppositeToLocale:v44];

  if (v45)
  {
    uint64_t v46 = (uint64_t)v58;
    static Locale._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v47 = 0;
    id v36 = v63;
  }
  else
  {
    uint64_t v47 = 1;
    id v36 = v63;
    uint64_t v46 = (uint64_t)v58;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(v46, v47, 1, v8);
  uint64_t v48 = (uint64_t)&v12[OBJC_IVAR____TtC17SequoiaTranslator32SpeechTranslationInstrumentation_sourceLocale];
  swift_beginAccess();
  sub_1000344BC(v46, v48, (uint64_t *)&unk_1002F4110);
  swift_endAccess();

LABEL_35:
  long long v49 = v12;
  NSString v50 = String._bridgeToObjectiveC()();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = v49;
  aBlock[4] = sub_10009ED60;
  aBlock[5] = v51;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1001BB31C;
  uint64_t aBlock[3] = &unk_1002CC740;
  uint64_t v52 = _Block_copy(aBlock);
  unint64_t v53 = v49;
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v52);

  if (v36)
  {
    uint64_t v54 = v61;
    sub_10000C3A4(v60, v61, (uint64_t *)&unk_1002F4110);
    unsigned int v55 = v59(v54, 1, v8);
    uint64_t v56 = v36;
    if (v55 == 1)
    {
      Class v57 = 0;
    }
    else
    {
      Class v57 = Locale._bridgeToObjectiveC()().super.isa;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v54, v8);
    }
    [v56 setSelectedLocale:v57];

    [*(id *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_translator) log:v56];
  }
}

char *sub_10009E3F8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_request);
  if (![v1 autodetectLanguage]
    || ([v1 forcedOfflineTranslation] & 1) != 0)
  {
    return 0;
  }
  id v2 = [objc_allocWithZone((Class)_LTSpeechLIDLoggingRequest) init];
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_lid);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = *(char **)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      [v2 setLidResult:v5];

      NSString v8 = [v1 uniqueID];
      if (!v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v2 setRequestID:v8];

      id v9 = [v1 sessionID];
      [v2 setConversationID:v9];

      id v10 = [v1 localePair];
      [v2 setLocalePair:v10];

      return (char *)v2;
    }
  }
  uint64_t result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_19:
    uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v7 = (char *)*(id *)(v4 + 8 * (void)result + 32);
LABEL_11:
    uint64_t v5 = v7;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_10009E60C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17SequoiaTranslator10SpeechTurn_translator);
}

id sub_10009E64C()
{
  return sub_10009E664(type metadata accessor for SpeechTurn);
}

id sub_10009E664(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for SpeechTurn()
{
  return self;
}

unint64_t sub_10009E774()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = 0xD000000000000018;
  unint64_t v36 = 0x800000010025CEC0;
  uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_speech);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(*v6 + 16);
  if (v8)
  {
    uint64_t v29 = v1;
    uint64_t v30 = v3;
    uint64_t v9 = v7 + 32;
    id v10 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v28 = v7;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000295C0(v9, (uint64_t)v33);
      sub_100029624(v33, v34);
      dispatch thunk of AnnotatedResult.locale.getter();
      uint64_t v11 = Locale.ltIdentifier.getter();
      uint64_t v13 = v12;
      (*v10)(v5, v2);
      v32._id countAndFlagsBits = 9;
      v32._id object = (void *)0xE100000000000000;
      v14._id countAndFlagsBits = v11;
      v14._id object = v13;
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v15._id countAndFlagsBits = 10;
      v15._id object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      sub_10000AB68((uint64_t)v33);
      v9 += 40;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v1 = v29;
    uint64_t v3 = v30;
  }
  v16._id countAndFlagsBits = 171594829;
  v16._id object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  BOOL v17 = (uint64_t *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator16ConversationTurn_translation);
  swift_beginAccess();
  uint64_t v18 = *(void *)(*v17 + 16);
  if (v18)
  {
    uint64_t v19 = *v17 + 32;
    int v20 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v30 = *v17;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000295C0(v19, (uint64_t)v33);
      sub_100029624(v33, v34);
      dispatch thunk of TranslationResult.locale.getter();
      uint64_t v21 = Locale.ltIdentifier.getter();
      id v23 = v22;
      (*v20)(v5, v2);
      v31._id countAndFlagsBits = 9;
      v31._id object = (void *)0xE100000000000000;
      v24._id countAndFlagsBits = v21;
      v24._id object = v23;
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v25._id countAndFlagsBits = 10;
      v25._id object = (void *)0xE100000000000000;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      sub_10000AB68((uint64_t)v33);
      v19 += 40;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  v26._id countAndFlagsBits = 2601;
  v26._id object = (void *)0xE200000000000000;
  String.append(_:)(v26);
  return v35;
}

uint64_t sub_10009EAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(BOOL, unint64_t, uint64_t, uint64_t), uint64_t (*a7)(uint64_t *, uint64_t))
{
  uint64_t v26 = a4;
  id v27 = a7;
  uint64_t v11 = *(void *)(a3 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  Swift::String v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v16 = (char *)&v25 - v15;
  BOOL v17 = *(void (**)(char *))(v11 + 16);
  v17((char *)&v25 - v15);
  uint64_t v18 = (uint64_t *)(a2 + *a5);
  swift_beginAccess();
  uint64_t v19 = *v18;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v18 = v19;
  uint64_t v21 = a6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v19 = a6(0, *(void *)(v19 + 16) + 1, 1, v19);
    *uint64_t v18 = v19;
  }
  unint64_t v23 = *(void *)(v19 + 16);
  unint64_t v22 = *(void *)(v19 + 24);
  if (v23 >= v22 >> 1) {
    *uint64_t v18 = v21(v22 > 1, v23 + 1, 1, v19);
  }
  ((void (*)(char *, char *, uint64_t))v17)(v14, v16, a3);
  sub_10009EC80(v23, (uint64_t)v14, v18, a3, v26, v27);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, a3);
}

uint64_t sub_10009EC80(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  v14[3] = a4;
  v14[4] = a5;
  uint64_t v11 = sub_100014830(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v11, a2, a4);
  uint64_t v12 = *a3;
  *(void *)(v12 + 16) = a1 + 1;
  return a6(v14, v12 + 40 * a1 + 32);
}

uint64_t sub_10009ED28()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10009ED60()
{
  return sub_1001BDC4C();
}

uint64_t sub_10009ED68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10009073C(0, 0, 0) = v2;
  return swift_retain();
}

uint64_t sub_10009ED78()
{
  return swift_release();
}

unint64_t sub_10009ED80()
{
  unint64_t result = qword_1002F33B8;
  if (!qword_1002F33B8)
  {
    sub_10000B0CC(255, &qword_1002F33B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F33B8);
  }
  return result;
}

uint64_t sub_10009EDE8(void *a1)
{
  return sub_10009CD58(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10009EE08(void *a1)
{
  return sub_10009A3D8(a1) & 1;
}

char *sub_10009EE24(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    *((void *)a1 + 3) = a2[3];
    uint64_t v9 = a3[6];
    id v10 = &a1[v9];
    uint64_t v11 = (char **)((char *)a2 + v9);
    uint64_t v12 = v4;
    swift_retain();
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      {
        uint64_t v15 = sub_100007620(&qword_1002F1058);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      *(void *)id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    BOOL v17 = &v7[v16];
    uint64_t v18 = (char **)((char *)a2 + v16);
    sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *(void *)BOOL v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    unint64_t v22 = &v7[v20];
    unint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v25 = *v23;
    Swift::String v24 = (void *)v23[1];
    *(void *)unint64_t v22 = v25;
    *((void *)v22 + 1) = v24;
    uint64_t v26 = &v7[v21];
    id v27 = (char **)((char *)a2 + v21);
    uint64_t v28 = v27[1];
    *(void *)uint64_t v26 = *v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    Swift::String v31 = &v7[v29];
    Swift::String v32 = (char **)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *(void *)Swift::String v31 = *v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = &v7[v30];
    unint64_t v35 = (char **)((char *)a2 + v30);
    uint64_t v36 = v35[1];
    *(void *)uint64_t v34 = *v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = a3[12];
    uint64_t v38 = a3[13];
    uint64_t v39 = &v7[v37];
    uint64_t v40 = (uint64_t)a2 + v37;
    *uint64_t v39 = *(unsigned char *)v40;
    *((void *)v39 + 1) = *(void *)(v40 + 8);
    id v41 = &v7[v38];
    id v42 = (char **)((char *)a2 + v38);
    uint64_t v43 = v42[1];
    *(void *)id v41 = *v42;
    *((void *)v41 + 1) = v43;
    id v44 = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_10009F13C(id *a1, int *a2)
{
  swift_release();
  uint64_t v4 = (char *)a1 + a2[6];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v6 = *(void *)(v5 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = (char *)a1 + a2[7];
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ScenePhase();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_10009F314(void *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v9 = a3[6];
  id v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  id v12 = v6;
  swift_retain();
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
    {
      uint64_t v15 = sub_100007620(&qword_1002F1058);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v10, v11, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
    }
  }
  else
  {
    *id v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  BOOL v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for ScenePhase();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *BOOL v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  unint64_t v22 = (void *)((char *)a1 + v20);
  unint64_t v23 = (uint64_t *)(a2 + v20);
  uint64_t v25 = *v23;
  Swift::String v24 = (void *)v23[1];
  *unint64_t v22 = v25;
  v22[1] = v24;
  uint64_t v26 = (void *)((char *)a1 + v21);
  id v27 = (void *)(a2 + v21);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[10];
  uint64_t v30 = a3[11];
  Swift::String v31 = (void *)((char *)a1 + v29);
  Swift::String v32 = (void *)(a2 + v29);
  uint64_t v33 = v32[1];
  *Swift::String v31 = *v32;
  v31[1] = v33;
  uint64_t v34 = (void *)((char *)a1 + v30);
  unint64_t v35 = (void *)(a2 + v30);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[12];
  uint64_t v38 = a3[13];
  uint64_t v39 = (char *)a1 + v37;
  uint64_t v40 = (char *)(a2 + v37);
  *uint64_t v39 = *v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  id v41 = (void *)((char *)a1 + v38);
  id v42 = (void *)(a2 + v38);
  uint64_t v43 = v42[1];
  *id v41 = *v42;
  v41[1] = v43;
  id v44 = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_10009F5E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  if (a1 != a2)
  {
    uint64_t v9 = a3[6];
    id v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10000B070(a1 + v9, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *id v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)(a1 + v15);
    BOOL v17 = (void *)(a2 + v15);
    sub_10000B070(a1 + v15, &qword_1002F3598);
    sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ScenePhase();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  unint64_t v22 = (void *)v21[1];
  unint64_t v23 = (void *)v20[1];
  v20[1] = v22;
  id v24 = v22;

  uint64_t v25 = a3[9];
  uint64_t v26 = (void *)(a1 + v25);
  id v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_retain();
  swift_release();
  uint64_t v28 = a3[10];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_retain();
  swift_release();
  uint64_t v31 = a3[11];
  Swift::String v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *Swift::String v32 = *v33;
  v32[1] = v33[1];
  swift_retain();
  swift_release();
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  *(void *)(v35 + 8) = *(void *)(v36 + 8);
  swift_retain();
  swift_release();
  uint64_t v37 = a3[13];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  void *v38 = *v39;
  v38[1] = v39[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10009F958(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
    {
      uint64_t v13 = sub_100007620(&qword_1002F1058);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for ScenePhase();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v19 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v20 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v2sub_10009073C(0, 0, 0) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  return a1;
}

void **sub_10009FBC4(void **a1, void **a2, int *a3)
{
  long long v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a2[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_release();
  a1[3] = a2[3];
  if (a1 != a2)
  {
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_10000B070((uint64_t)a1 + v8, (uint64_t *)&unk_1002F5770);
    uint64_t v11 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_100007620(&qword_1002F1058);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    sub_10000B070((uint64_t)a1 + v15, &qword_1002F3598);
    uint64_t v18 = sub_100007620(&qword_1002F3598);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for ScenePhase();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (void **)((char *)a1 + v20);
  unint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v25 = (void *)v21[1];
  *uint64_t v21 = v24;
  v21[1] = v23;

  uint64_t v26 = a3[9];
  id v27 = (void **)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *id v27 = v30;
  v27[1] = v29;
  swift_release();
  uint64_t v31 = a3[10];
  Swift::String v32 = (void **)((char *)a1 + v31);
  uint64_t v33 = (uint64_t *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *Swift::String v32 = v35;
  v32[1] = v34;
  swift_release();
  uint64_t v36 = a3[11];
  uint64_t v37 = (void **)((char *)a1 + v36);
  uint64_t v38 = (uint64_t *)((char *)a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  *uint64_t v37 = v40;
  v37[1] = v39;
  swift_release();
  uint64_t v41 = a3[12];
  id v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  char *v42 = *v43;
  *((void *)v42 + 1) = *((void *)v43 + 1);
  swift_release();
  uint64_t v44 = a3[13];
  id v45 = (void **)((char *)a1 + v44);
  uint64_t v46 = (uint64_t *)((char *)a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *id v45 = v48;
  v45[1] = v47;
  swift_release();
  return a1;
}

uint64_t sub_10009FEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10009FF00);
}

uint64_t sub_10009FF00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1068);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[6];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100007620(&qword_1002F35A0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[7];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[8] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1000A001C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000A0030);
}

uint64_t sub_1000A0030(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100007620(&qword_1002F1068);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
  }
  else
  {
    uint64_t result = sub_100007620(&qword_1002F35A0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[8] + 8) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[7];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t type metadata accessor for ConversationView()
{
  uint64_t result = qword_1002F3600;
  if (!qword_1002F3600) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000A0194()
{
  sub_1000542E0();
  if (v0 <= 0x3F)
  {
    sub_1000A027C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1000A027C()
{
  if (!qword_1002F3610)
  {
    type metadata accessor for ScenePhase();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F3610);
    }
  }
}

uint64_t sub_1000A02D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000A02F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  int v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_100007620(&qword_1002F1200);
  __chkstk_darwin(v4);
  uint64_t v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100007620(&qword_1002F1058);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = &v32[-v12];
  __chkstk_darwin(v11);
  uint64_t v15 = &v32[-v14];
  uint64_t v16 = type metadata accessor for ConversationView();
  __chkstk_darwin(v16);
  uint64_t v18 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v19 = [self currentDevice];
  id v20 = [v19 userInterfaceIdiom];

  sub_1000A695C((uint64_t)v39, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationView);
  if (v20 != (id)1)
  {
    sub_1000A69C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationView);
    return static ToolbarItemPlacement.navigationBarLeading.getter();
  }
  uint64_t v35 = v3;
  uint64_t v39 = v10;
  sub_100100194((uint64_t)v15);
  uint64_t v22 = v36;
  uint64_t v21 = v37;
  (*(void (**)(unsigned char *, void, uint64_t))(v36 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v37);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
  uint64_t v23 = *(int *)(v4 + 48);
  uint64_t v24 = v21;
  uint64_t v25 = (uint64_t)&v6[v23];
  sub_10000C3A4((uint64_t)v15, (uint64_t)v6, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v13, v25, &qword_1002F1058);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v26((uint64_t)v6, 1, v21) == 1)
  {
    sub_10000B070((uint64_t)v13, &qword_1002F1058);
    sub_10000B070((uint64_t)v15, &qword_1002F1058);
    sub_1000A69C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationView);
    if (v26(v25, 1, v21) == 1)
    {
      sub_10000B070((uint64_t)v6, &qword_1002F1058);
      return static ToolbarItemPlacement.navigationBarLeading.getter();
    }
    goto LABEL_9;
  }
  uint64_t v28 = (uint64_t)v39;
  sub_10000C3A4((uint64_t)v6, (uint64_t)v39, &qword_1002F1058);
  if (v26(v25, 1, v24) == 1)
  {
    sub_10000B070((uint64_t)v13, &qword_1002F1058);
    sub_10000B070((uint64_t)v15, &qword_1002F1058);
    sub_1000A69C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationView);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v28, v24);
LABEL_9:
    sub_10000B070((uint64_t)v6, &qword_1002F1200);
    return static ToolbarItemPlacement.navigationBarTrailing.getter();
  }
  uint64_t v29 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v22 + 32);
  uint64_t v34 = v6;
  uint64_t v30 = v35;
  v29(v35, v25, v24);
  sub_1000A6844((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  int v33 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v22 + 8);
  v31(v30, v24);
  sub_10000B070((uint64_t)v13, &qword_1002F1058);
  sub_10000B070((uint64_t)v15, &qword_1002F1058);
  sub_1000A69C4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ConversationView);
  v31((unsigned char *)v28, v24);
  sub_10000B070((uint64_t)v34, &qword_1002F1058);
  if (v33) {
    return static ToolbarItemPlacement.navigationBarLeading.getter();
  }
  return static ToolbarItemPlacement.navigationBarTrailing.getter();
}

uint64_t sub_1000A0830()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for ConversationView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = *v0;
  if (*v0)
  {
    uint64_t v9 = *(void **)((char *)v0 + *(int *)(v2 + 32) + 8);
    id v10 = v8;
    id v11 = v9;
    id v12 = sub_1000A7684();

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v21)
    {
      char v13 = sub_1001A6530(v12);

      swift_release();
      sub_1000A695C(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationView);
      if (v13)
      {
        uint64_t v24 = &type metadata for TranslateFeatures;
        unint64_t v25 = sub_10000AB14();
        LOBYTE(v21) = 8;
        char v14 = isFeatureEnabled(_:)();
        sub_10000AB68((uint64_t)&v21);
        sub_1000A695C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationView);
        if (v14)
        {
          uint64_t v15 = *(void **)&v5[*(int *)(v2 + 32) + 8];
          swift_getKeyPath();
          swift_getKeyPath();
          id v16 = v15;
          static Published.subscript.getter();
          swift_release();
          swift_release();
          if (v22)
          {
            uint64_t v17 = v28;
            sub_1000194BC(v21, v22, v23, (uint64_t)v24, v25, v26, v27, v28, v29, v30, v31);

            BOOL v18 = (v17 & 0xFFFFFFFFFFFFFFFELL) == 2;
LABEL_11:
            sub_1000A69C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationView);
            goto LABEL_12;
          }
        }
        BOOL v18 = 0;
        goto LABEL_11;
      }
    }
    else
    {

      swift_release();
      sub_1000A695C(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationView);
    }
    BOOL v18 = 1;
LABEL_12:
    sub_1000A69C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationView);
    return v18;
  }
  type metadata accessor for SharedTranslationOptions();
  sub_1000A6844(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000A0B9C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for ConversationView();
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = *v0;
  if (*v0)
  {
    uint64_t v9 = *(void **)((char *)v0 + *(int *)(v2 + 32) + 8);
    id v10 = v8;
    id v11 = v9;
    id v12 = sub_1000A7684();

    swift_retain();
    char v13 = sub_1001A6530(v12);

    swift_release();
    sub_1000A695C(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationView);
    if ((v13 & 1) == 0)
    {
      BOOL v18 = 1;
LABEL_10:
      sub_1000A69C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ConversationView);
      return v18;
    }
    uint64_t v24 = &type metadata for TranslateFeatures;
    unint64_t v25 = sub_10000AB14();
    LOBYTE(v21) = 8;
    char v14 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)&v21);
    sub_1000A695C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationView);
    if (v14)
    {
      uint64_t v15 = *(void **)&v5[*(int *)(v2 + 32) + 8];
      swift_getKeyPath();
      swift_getKeyPath();
      id v16 = v15;
      static Published.subscript.getter();
      swift_release();
      swift_release();
      if (v22)
      {
        uint64_t v17 = v28;
        sub_1000194BC(v21, v22, v23, (uint64_t)v24, v25, v26, v27, v28, v29, v30, v31);

        BOOL v18 = (v17 & 0xFFFFFFFFFFFFFFFELL) == 2;
LABEL_9:
        sub_1000A69C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConversationView);
        goto LABEL_10;
      }
    }
    BOOL v18 = 0;
    goto LABEL_9;
  }
  type metadata accessor for SharedTranslationOptions();
  sub_1000A6844(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000A0E80@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ConversationView();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(a1 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    char v7 = v10[15];
    sub_1000A695C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConversationView);
    if ((v7 & 1) == 0)
    {
      char v8 = 0;
      goto LABEL_6;
    }
    if (*((void *)v6 + 2))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      char v8 = v10[14] ^ 1;
LABEL_6:
      uint64_t result = sub_1000A69C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConversationView);
      *a2 = v8 & 1;
      return result;
    }
  }
  type metadata accessor for SceneContext();
  sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t result = EnvironmentObject.error()();
  __break(1u);
  return result;
}

uint64_t sub_1000A1070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(void *)(a4 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A1144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v132 = a1;
  uint64_t v126 = type metadata accessor for ScenePhase();
  uint64_t v127 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v125 = (uint64_t)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for ConversationView();
  uint64_t v145 = *(void *)(v139 - 8);
  uint64_t v142 = *(void *)(v145 + 64);
  __chkstk_darwin(v139);
  uint64_t v143 = (uint64_t)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v144 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v120 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F3660);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100007620(&qword_1002F3668);
  uint64_t v108 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  id v11 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = (void *)sub_100007620(&qword_1002F3670);
  uint64_t v112 = (void (**)(void, void))*(v111 - 1);
  __chkstk_darwin(v111);
  uint64_t v104 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100007620(&qword_1002F3678);
  uint64_t v141 = *(uint64_t (**)())(v134 - 8);
  __chkstk_darwin(v134);
  NSString v106 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100007620(&qword_1002F3680);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v133 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_100007620(&qword_1002F3688) - 8;
  __chkstk_darwin(v114);
  os_log_type_t v113 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100007620(&qword_1002F3690) - 8;
  __chkstk_darwin(v118);
  uint64_t v117 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100007620(&qword_1002F3698) - 8;
  __chkstk_darwin(v121);
  uint64_t v119 = (uint64_t)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100007620(&qword_1002F36A0);
  __chkstk_darwin(v135);
  uint64_t v122 = (uint64_t)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100007620(&qword_1002F36A8);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v137 = (char *)&v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100007620(&qword_1002F36B0);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v138 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100007620(&qword_1002F36B8);
  __chkstk_darwin(v128);
  uint64_t v129 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 0;
  uint64_t v22 = sub_100007620(&qword_1002F36C0);
  sub_1000A2514(v2, (uint64_t)&v9[*(int *)(v22 + 44)]);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v23 = sub_100014894(&qword_1002F36C8, &qword_1002F3660);
  View.navigationTitle(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000B070((uint64_t)v9, &qword_1002F3660);
  uint64_t v24 = v109;
  unint64_t v25 = v107;
  uint64_t v26 = v110;
  (*(void (**)(char *, void, uint64_t))(v109 + 104))(v107, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v110);
  uint64_t v148 = v7;
  uint64_t v149 = v23;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = v104;
  uint64_t v29 = v105;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v29);
  uint64_t v146 = v2;
  uint64_t v30 = sub_100007620(&qword_1002F36D0);
  uint64_t v148 = v29;
  uint64_t v149 = OpaqueTypeConformance2;
  uint64_t v31 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = sub_100014894(&qword_1002F36D8, &qword_1002F36D0);
  int v33 = v106;
  uint64_t v34 = v111;
  View.toolbar<A>(content:)();
  ((void (**)(char *, void *))v112)[1](v28, v34);
  sub_100007620(&qword_1002F36E0);
  type metadata accessor for ToolbarPlacement();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1002488D0;
  static ToolbarPlacement.tabBar.getter();
  uint64_t v148 = (uint64_t)v34;
  uint64_t v149 = v30;
  unint64_t v150 = v31;
  uint64_t v151 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v133;
  uint64_t v36 = v134;
  View.toolbarBackground(_:for:)();
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v141 + 1))(v33, v36);
  uint64_t v112 = (void (**)(void, void))self;
  id v37 = [v112 defaultCenter];
  uint64_t v38 = v120;
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v140 = v2;
  uint64_t v141 = type metadata accessor for ConversationView;
  uint64_t v39 = v2;
  uint64_t v40 = v143;
  sub_1000A695C(v39, v143, (uint64_t (*)(void))type metadata accessor for ConversationView);
  uint64_t v41 = *(unsigned __int8 *)(v145 + 80);
  uint64_t v134 = ((v41 + 16) & ~v41) + v142;
  uint64_t v42 = (v41 + 16) & ~v41;
  uint64_t v145 = v42;
  uint64_t v142 = v41 | 7;
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v40;
  sub_1000A5E24(v40, v43 + v42);
  uint64_t v45 = v115;
  uint64_t v46 = (uint64_t)v113;
  uint64_t v47 = v35;
  uint64_t v48 = v116;
  (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v47, v116);
  uint64_t v49 = v114;
  uint64_t v50 = v46 + *(int *)(v114 + 60);
  uint64_t v51 = v144;
  uint64_t v111 = *(void **)(v144 + 16);
  uint64_t v52 = v136;
  ((void (*)(uint64_t, char *, uint64_t))v111)(v50, v38, v136);
  unint64_t v53 = (void (**)(uint64_t))(v46 + *(int *)(v49 + 64));
  *unint64_t v53 = sub_1000A5E88;
  v53[1] = (void (*)(uint64_t))v43;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v144 = v51 + 8;
  uint64_t v114 = (uint64_t)v54;
  v54(v38, v52);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v133, v48);
  id v55 = [v112 defaultCenter];
  NSNotificationCenter.publisher(for:object:)();

  uint64_t v56 = v140;
  uint64_t v57 = v44;
  sub_1000A695C(v140, v44, (uint64_t (*)(void))v141);
  uint64_t v58 = swift_allocObject();
  sub_1000A5E24(v44, v58 + v145);
  uint64_t v59 = v117;
  sub_10000C3A4(v46, v117, &qword_1002F3688);
  uint64_t v60 = v118;
  uint64_t v61 = v136;
  ((void (*)(uint64_t, char *, uint64_t))v111)(v59 + *(int *)(v118 + 60), v38, v136);
  uint64_t v62 = (void (**)(uint64_t))(v59 + *(int *)(v60 + 64));
  void *v62 = sub_1000A5E94;
  v62[1] = (void (*)(uint64_t))v58;
  ((void (*)(char *, uint64_t))v114)(v38, v61);
  sub_10000B070(v46, &qword_1002F3688);
  int v63 = v141;
  sub_1000A695C(v56, v57, (uint64_t (*)(void))v141);
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = v145;
  sub_1000A5E24(v57, v64 + v145);
  uint64_t v66 = v119;
  sub_10000C3A4(v59, v119, &qword_1002F3690);
  id v67 = (uint64_t (**)())(v66 + *(int *)(v121 + 44));
  *id v67 = sub_1000A5F14;
  v67[1] = (uint64_t (*)())v64;
  v67[2] = 0;
  v67[3] = 0;
  sub_10000B070(v59, &qword_1002F3690);
  sub_1000A695C(v56, v57, (uint64_t (*)(void))v63);
  uint64_t v68 = swift_allocObject();
  sub_1000A5E24(v57, v68 + v65);
  uint64_t v69 = v122;
  sub_10000C3A4(v66, v122, &qword_1002F3698);
  uint64_t v70 = (void *)(v69 + *(int *)(v135 + 36));
  *uint64_t v70 = 0;
  v70[1] = 0;
  v70[2] = sub_1000A5F30;
  v70[3] = v68;
  sub_10000B070(v66, &qword_1002F3698);
  uint64_t v71 = v125;
  sub_10010045C(v125);
  sub_1000A695C(v56, v57, (uint64_t (*)(void))v141);
  uint64_t v72 = swift_allocObject() + v145;
  uint64_t v73 = v57;
  uint64_t v74 = v56;
  sub_1000A5E24(v73, v72);
  unint64_t v75 = sub_1000A5FCC();
  uint64_t v76 = sub_1000A6844(&qword_1002F3700, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
  uint64_t v77 = v71;
  uint64_t v78 = v126;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  uint64_t v79 = v77;
  uint64_t v80 = v78;
  (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v79, v78);
  sub_10000B070(v69, &qword_1002F36A0);
  if (*(void *)(v56 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    char v147 = v148;
    uint64_t v81 = v143;
    sub_1000A695C(v74, v143, (uint64_t (*)(void))type metadata accessor for ConversationView);
    uint64_t v82 = swift_allocObject();
    uint64_t v83 = v145;
    sub_1000A5E24(v81, v82 + v145);
    uint64_t v148 = v135;
    uint64_t v149 = v80;
    unint64_t v150 = v75;
    uint64_t v151 = v76;
    swift_getOpaqueTypeConformance2();
    uint64_t v84 = v137;
    uint64_t v85 = v124;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v84, v85);
    uint64_t v86 = *(void **)(v74 + *(int *)(v139 + 32) + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v87 = v86;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    unsigned int v88 = (unsigned __int16)v148 | (BYTE2(v148) << 16);
    uint64_t v89 = v83;
    if ((v88 & 0xFF0000) == 0x80000)
    {
      unsigned int v90 = sub_10000A1FC([objc_allocWithZone((Class)NSError) init]);
      LOBYTE(v88) = v90;
      LODWORD(v144) = v90 >> 8;
      unsigned int v91 = HIWORD(v90);
    }
    else
    {
      LODWORD(v144) = v88 >> 8;
      unsigned int v91 = HIWORD(v88);
    }
    type metadata accessor for ConversationViewModel();
    sub_1000A6844(&qword_1002F2CA0, (void (*)(uint64_t))type metadata accessor for ConversationViewModel);
    uint64_t v92 = (void *)ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();

    uint64_t v93 = v148;
    uint64_t v94 = v149;
    char v95 = v150;
    uint64_t v96 = v143;
    sub_1000A695C(v140, v143, (uint64_t (*)(void))type metadata accessor for ConversationView);
    uint64_t v97 = swift_allocObject();
    sub_1000A5E24(v96, v97 + v89);
    uint64_t v98 = v130;
    uint64_t v99 = (uint64_t)v129;
    uint64_t v100 = v138;
    uint64_t v101 = v131;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v129, v138, v131);
    uint64_t v102 = v99 + *(int *)(v128 + 36);
    *(unsigned char *)uint64_t v102 = v88;
    *(unsigned char *)(v102 + 1) = v144;
    *(unsigned char *)(v102 + 2) = v91;
    *(void *)(v102 + 8) = v93;
    *(void *)(v102 + 16) = v94;
    *(unsigned char *)(v102 + 24) = v95;
    *(void *)(v102 + 32) = sub_1000A6120;
    *(void *)(v102 + 4sub_10009073C(0, 0, 0) = v97;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v101);
    return sub_10001323C(v99, v132, &qword_1002F36B8);
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t sub_1000A2514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v3 = sub_100007620(&qword_1002EF518);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100007620(&qword_1002EF520);
  __chkstk_darwin(v6 - 8);
  uint64_t v42 = (uint64_t)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100007620(&qword_1002F3750) - 8;
  uint64_t v8 = __chkstk_darwin(v44);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v43 = (uint64_t)&v42 - v11;
  uint64_t v12 = type metadata accessor for ConversationList();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100007620(&qword_1002F3758);
  uint64_t v17 = v16 - 8;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v23 = *(void **)(a1 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
  *(void *)&v15[*(int *)(v13 + 32)] = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v15 = v23;
  v15[8] = 2;
  id v24 = v23;
  uint64_t v25 = static SafeAreaRegions.container.getter();
  LOBYTE(v23) = static Edge.Set.all.getter();
  sub_1000A695C((uint64_t)v15, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ConversationList);
  uint64_t v26 = &v20[*(int *)(v17 + 44)];
  *(void *)uint64_t v26 = v25;
  unsigned char v26[8] = (char)v23;
  sub_1000A69C4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ConversationList);
  sub_10001323C((uint64_t)v20, (uint64_t)v22, &qword_1002F3758);
  *(void *)uint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v27 = sub_100007620(&qword_1002F3760);
  sub_1000A2994(a1, (uint64_t)&v5[*(int *)(v27 + 44)]);
  uint64_t v28 = static Alignment.center.getter();
  uint64_t v29 = v42;
  sub_10001C864(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v42, 0.0, 1, 0.0, 1, v28, v30);
  sub_10000B070((uint64_t)v5, &qword_1002EF518);
  id v31 = [self systemGroupedBackgroundColor];
  uint64_t v32 = Color.init(uiColor:)();
  uint64_t v33 = static SafeAreaRegions.all.getter();
  LOBYTE(v15) = static Edge.Set.all.getter();
  uint64_t v34 = static Alignment.center.getter();
  uint64_t v36 = v35;
  sub_10000C3A4(v29, (uint64_t)v10, &qword_1002EF520);
  id v37 = &v10[*(int *)(v44 + 44)];
  *(void *)id v37 = v32;
  *((void *)v37 + 1) = v33;
  unsigned char v37[16] = (char)v15;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  sub_10000B070(v29, &qword_1002EF520);
  uint64_t v38 = v43;
  sub_10001323C((uint64_t)v10, v43, &qword_1002F3750);
  sub_10000C3A4((uint64_t)v22, (uint64_t)v20, &qword_1002F3758);
  sub_10000C3A4(v38, (uint64_t)v10, &qword_1002F3750);
  uint64_t v39 = v45;
  sub_10000C3A4((uint64_t)v20, v45, &qword_1002F3758);
  uint64_t v40 = sub_100007620(&qword_1002F3768);
  sub_10000C3A4((uint64_t)v10, v39 + *(int *)(v40 + 48), &qword_1002F3750);
  sub_10000B070(v38, &qword_1002F3750);
  sub_10000B070((uint64_t)v22, &qword_1002F3758);
  sub_10000B070((uint64_t)v10, &qword_1002F3750);
  return sub_10000B070((uint64_t)v20, &qword_1002F3758);
}

uint64_t sub_1000A2994@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v155 = a2;
  uint64_t v144 = type metadata accessor for Locale();
  uint64_t v143 = *(void *)(v144 - 8);
  uint64_t v3 = __chkstk_darwin(v144);
  uint64_t v142 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  objc_super v152 = (char *)&v128 - v5;
  uint64_t v145 = type metadata accessor for SingleOrPairSpeakButton();
  __chkstk_darwin(v145);
  uint64_t v7 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100007620(&qword_1002F3770);
  uint64_t v153 = *(void *)(v159 - 8);
  uint64_t v8 = __chkstk_darwin(v159);
  uint64_t v147 = (uint64_t)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v146 = (uint64_t)&v128 - v10;
  uint64_t v11 = sub_100007620(&qword_1002F3778);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v154 = (uint64_t)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v158 = (uint64_t)&v128 - v14;
  uint64_t v156 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v137 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v134 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_100007620(&qword_1002F1200);
  __chkstk_darwin(v136);
  uint64_t v17 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100007620(&qword_1002F1058);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v135 = (uint64_t)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v128 - v22;
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v128 - v24;
  uint64_t v141 = type metadata accessor for ErrorStateView();
  uint64_t v140 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  uint64_t v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100007620(&qword_1002F3780);
  uint64_t v148 = *(void *)(v149 - 8);
  uint64_t v28 = __chkstk_darwin(v149);
  uint64_t v139 = (char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v138 = (uint64_t)&v128 - v30;
  uint64_t v31 = sub_100007620(&qword_1002F3788);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v151 = (uint64_t)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v157 = (char *)&v128 - v34;
  uint64_t v35 = (int *)type metadata accessor for ConversationView();
  *(void *)&long long v150 = a1 + v35[8];
  uint64_t v36 = *(void **)(v150 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v37 = v36;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v160 == 3)
  {
    uint64_t v38 = 1;
    uint64_t v39 = (uint64_t)v157;
    uint64_t v40 = a1;
    uint64_t v41 = v149;
    goto LABEL_11;
  }
  *(void *)&long long v131 = v27;
  sub_1000A3C54(v160, (uint64_t)v27);
  LODWORD(v13sub_10009073C(0, 0, 0) = static Edge.Set.horizontal.getter();
  uint64_t v132 = v35;
  uint64_t v133 = a1;
  sub_100100194((uint64_t)v25);
  uint64_t v42 = v137;
  uint64_t v43 = v156;
  (*(void (**)(char *, void, uint64_t))(v137 + 104))(v23, enum case for UserInterfaceSizeClass.compact(_:), v156);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v23, 0, 1, v43);
  uint64_t v44 = (uint64_t)&v17[*(int *)(v136 + 48)];
  sub_10000C3A4((uint64_t)v25, (uint64_t)v17, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v23, v44, &qword_1002F1058);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  if (v45((uint64_t)v17, 1, v43) != 1)
  {
    uint64_t v48 = v42;
    uint64_t v49 = v135;
    sub_10000C3A4((uint64_t)v17, v135, &qword_1002F1058);
    if (v45(v44, 1, v156) != 1)
    {
      uint64_t v50 = v134;
      uint64_t v51 = v44;
      uint64_t v52 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v134, v51, v156);
      sub_1000A6844((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v53 = *(void (**)(char *, uint64_t))(v48 + 8);
      v53(v50, v52);
      sub_10000B070((uint64_t)v23, &qword_1002F1058);
      sub_10000B070((uint64_t)v25, &qword_1002F1058);
      v53((char *)v49, v52);
      sub_10000B070((uint64_t)v17, &qword_1002F1058);
      uint64_t v39 = (uint64_t)v157;
      uint64_t v40 = v133;
      uint64_t v35 = v132;
      uint64_t v41 = v149;
      uint64_t v47 = v131;
      goto LABEL_10;
    }
    sub_10000B070((uint64_t)v23, &qword_1002F1058);
    sub_10000B070((uint64_t)v25, &qword_1002F1058);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v156);
    uint64_t v39 = (uint64_t)v157;
    goto LABEL_8;
  }
  sub_10000B070((uint64_t)v23, &qword_1002F1058);
  sub_10000B070((uint64_t)v25, &qword_1002F1058);
  unsigned int v46 = v45(v44, 1, v156);
  uint64_t v39 = (uint64_t)v157;
  if (v46 != 1)
  {
LABEL_8:
    sub_10000B070((uint64_t)v17, &qword_1002F1200);
    uint64_t v40 = v133;
    uint64_t v35 = v132;
    uint64_t v41 = v149;
    uint64_t v47 = v131;
    goto LABEL_10;
  }
  sub_10000B070((uint64_t)v17, &qword_1002F1058);
  uint64_t v40 = v133;
  uint64_t v35 = v132;
  uint64_t v41 = v149;
  uint64_t v47 = v131;
LABEL_10:
  EdgeInsets.init(_all:)();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v62 = v140;
  uint64_t v63 = (uint64_t)v139;
  uint64_t v64 = v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v139, v47, v141);
  uint64_t v65 = v63 + *(int *)(v41 + 36);
  *(unsigned char *)uint64_t v65 = v130;
  *(void *)(v65 + 8) = v55;
  *(void *)(v65 + 16) = v57;
  *(void *)(v65 + 24) = v59;
  *(void *)(v65 + 32) = v61;
  *(unsigned char *)(v65 + 4sub_10009073C(0, 0, 0) = 0;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v47, v64);
  uint64_t v66 = v138;
  sub_10001323C(v63, v138, &qword_1002F3780);
  sub_10001323C(v66, v39, &qword_1002F3780);
  uint64_t v38 = 0;
LABEL_11:
  uint64_t v67 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v148 + 56))(v39, v38, 1, v41);
  uint64_t v68 = v40 + v35[12];
  char v69 = *(unsigned char *)v68;
  uint64_t v70 = *(void *)(v68 + 8);
  LOBYTE(v16sub_10009073C(0, 0, 0) = v69;
  *((void *)&v160 + 1) = v70;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.getter();
  if ((v166 & 1) == 0)
  {
    uint64_t v71 = *(void **)(v150 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v72 = v71;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v160 == 1)
    {

      int v73 = 1;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();

      swift_release();
      swift_release();
      int v73 = v160;
    }
    LODWORD(v156) = v73;
    uint64_t v74 = v150;
    unint64_t v75 = *(void **)(v150 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v76 = v75;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LODWORD(v149) = v160;
    uint64_t v77 = *(void **)(v74 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v78 = v77;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LODWORD(v148) = v160;
    uint64_t v79 = *(void **)(v74 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v80 = v79;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    LODWORD(v141) = v160;
    uint64_t v81 = v40 + v35[9];
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    LODWORD(v14sub_10009073C(0, 0, 0) = v160;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v139 = (char *)v160;
    uint64_t v82 = *(void **)(v74 + 8);
    uint64_t v138 = swift_allocObject();
    *(void *)(v138 + 16) = v82;
    uint64_t v137 = swift_allocObject();
    *(void *)(v137 + 16) = v82;
    id v83 = v82;
    LODWORD(v136) = sub_1000A0830();
    uint64_t v84 = *(void **)(v74 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v85 = v84;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    uint64_t v86 = *(void **)(v74 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v87 = v86;
    unsigned int v88 = v142;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    id v89 = *(id *)(v74 + 8);
    uint64_t v135 = sub_1000A8440();
    uint64_t v134 = v90;

    id v91 = v89;
    uint64_t v133 = sub_1000A824C();
    uint64_t v132 = v92;

    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = v91;
    uint64_t v94 = *(void **)(v74 + 8);
    uint64_t v95 = swift_allocObject();
    *(void *)(v95 + 16) = v94;
    uint64_t v96 = *(void *)(v81 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v97 = v91;
    id v98 = v94;
    swift_retain_n();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    long long v150 = v160;
    long long v131 = v161;
    long long v130 = v162;
    long long v129 = v163;
    long long v128 = v164;
    uint64_t v99 = v165;
    type metadata accessor for SharedTranslationOptions();
    sub_1000A6844(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
    *(void *)uint64_t v7 = EnvironmentObject.init()();
    *((void *)v7 + 1) = v100;
    v7[16] = v156;
    v7[17] = v149;
    v7[18] = v148;
    v7[19] = v141;
    v7[20] = v140;
    *((void *)v7 + 3) = v139;
    *((void *)v7 + 4) = 0;
    v7[40] = 1;
    uint64_t v101 = v138;
    *((void *)v7 + 6) = sub_1000A68E4;
    *((void *)v7 + 7) = v101;
    uint64_t v102 = v137;
    *((void *)v7 + 8) = sub_1000A68EC;
    *((void *)v7 + 9) = v102;
    v7[80] = v136 & 1;
    os_log_type_t v103 = (int *)v145;
    uint64_t v104 = *(void (**)(char *, char *, uint64_t))(v143 + 32);
    uint64_t v105 = v144;
    v104(&v7[*(int *)(v145 + 60)], v152, v144);
    v104(&v7[v103[16]], v88, v105);
    NSString v106 = &v7[v103[17]];
    uint64_t v107 = v134;
    *(void *)NSString v106 = v135;
    *((void *)v106 + 1) = v107;
    uint64_t v108 = (uint64_t *)&v7[v103[18]];
    uint64_t v109 = v132;
    *uint64_t v108 = v133;
    v108[1] = (uint64_t)v109;
    uint64_t v110 = (void *(**)())&v7[v103[19]];
    *uint64_t v110 = sub_1000A6910;
    v110[1] = (void *(*)())v93;
    uint64_t v111 = (void *(**)())&v7[v103[20]];
    *uint64_t v111 = sub_1000A6934;
    v111[1] = (void *(*)())v95;
    uint64_t v112 = &v7[v103[21]];
    *(void *)uint64_t v112 = 0;
    *((void *)v112 + 1) = 0;
    os_log_type_t v113 = &v7[v103[22]];
    *(void *)os_log_type_t v113 = 0;
    *((void *)v113 + 1) = 0;
    uint64_t v114 = &v7[v103[23]];
    *(void *)uint64_t v114 = sub_1000A6958;
    *((void *)v114 + 1) = v96;
    uint64_t v115 = &v7[v103[24]];
    long long v116 = v131;
    *(_OWORD *)uint64_t v115 = v150;
    *((_OWORD *)v115 + 1) = v116;
    long long v117 = v129;
    *((_OWORD *)v115 + 2) = v130;
    *((_OWORD *)v115 + 3) = v117;
    *((_OWORD *)v115 + 4) = v128;
    *((void *)v115 + 1sub_10009073C(0, 0, 0) = v99;
    static AnyTransition.move(edge:)();
    static AnyTransition.move(edge:)();
    uint64_t v118 = static AnyTransition.asymmetric(insertion:removal:)();
    swift_release();
    swift_release();
    uint64_t v119 = v147;
    sub_1000A695C((uint64_t)v7, v147, (uint64_t (*)(void))type metadata accessor for SingleOrPairSpeakButton);
    *(void *)(v119 + *(int *)(v159 + 36)) = v118;
    sub_1000A69C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SingleOrPairSpeakButton);
    uint64_t v120 = v119;
    uint64_t v121 = v146;
    sub_10001323C(v120, v146, &qword_1002F3770);
    sub_10001323C(v121, v158, &qword_1002F3770);
    uint64_t v67 = 0;
    uint64_t v39 = (uint64_t)v157;
  }
  uint64_t v122 = v158;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v158, v67, 1, v159);
  uint64_t v123 = v151;
  sub_10000C3A4(v39, v151, &qword_1002F3788);
  uint64_t v124 = v154;
  sub_10000C3A4(v122, v154, &qword_1002F3778);
  uint64_t v125 = v155;
  sub_10000C3A4(v123, v155, &qword_1002F3788);
  uint64_t v126 = sub_100007620(&qword_1002F3790);
  sub_10000C3A4(v124, v125 + *(int *)(v126 + 48), &qword_1002F3778);
  sub_10000B070(v122, &qword_1002F3778);
  sub_10000B070(v39, &qword_1002F3788);
  sub_10000B070(v124, &qword_1002F3778);
  return sub_10000B070(v123, &qword_1002F3788);
}

uint64_t sub_1000A3C54@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ErrorStateView.Context();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v22 - v14;
  if (a1)
  {
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ErrorStateView.Context.conversation(_:), v5);
    if (a1 == 1) {
      static ErrorStateView.noInternetConnection(context:)();
    }
    else {
      static ErrorStateView.missingOfflineAssets(context:)();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v16 = v2 + *(int *)(type metadata accessor for ConversationView() + 32);
    v22[1] = a2;
    uint64_t v17 = *(void **)(v16 + 8);
    swift_getKeyPath();
    swift_getKeyPath();
    id v18 = v17;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    id v19 = v18;
    static Published.subscript.getter();

    swift_release();
    swift_release();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for ErrorStateView.Context.conversation(_:), v5);
    static ErrorStateView.airplaneMode(sourceLocale:targetLocale:context:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
    v20(v13, v9);
    return ((uint64_t (*)(char *, uint64_t))v20)(v15, v9);
  }
}

void *sub_1000A3F78(uint64_t a1)
{
  uint64_t v2 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = a1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__selfAutoTranslateSessionId;
  swift_beginAccess();
  sub_1000A6A2C((uint64_t)v4, v6);
  swift_endAccess();
  return sub_1000AED04(0, 2);
}

uint64_t sub_1000A4078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v26 = sub_100007620(&qword_1002F3708);
  __chkstk_darwin(v26);
  uint64_t v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100007620(&qword_1002F3710);
  uint64_t v4 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100007620(&qword_1002F3718);
  uint64_t v10 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A02F0((uint64_t)v9);
  type metadata accessor for ConversationViewsMenu();
  sub_1000A6844(&qword_1002F3720, (void (*)(uint64_t))type metadata accessor for ConversationViewsMenu);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.navigationBarTrailing.getter();
  uint64_t v28 = a1;
  sub_100007620(&qword_1002EF4F0);
  uint64_t v13 = type metadata accessor for MoreOptionsMenu();
  uint64_t v14 = sub_100007928(&qword_1002F3728);
  uint64_t v15 = sub_1000A6844(&qword_1002F3730, (void (*)(uint64_t))type metadata accessor for MoreOptionsMenu);
  uint64_t v16 = sub_100014894(&qword_1002F3738, &qword_1002F3728);
  uint64_t v29 = v13;
  uint64_t v30 = v14;
  uint64_t v31 = v15;
  uint64_t v32 = v16;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  uint64_t v17 = v23;
  id v18 = &v24[*(int *)(v26 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v12, v23);
  id v19 = v18;
  uint64_t v20 = v25;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v19, v6, v25);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
}

uint64_t sub_1000A4448@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  sub_100007620((uint64_t *)&unk_1002F5770);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (uint64_t *)((char *)a1 + *(int *)(type metadata accessor for ConversationViewsMenu() + 20));
  type metadata accessor for SceneContext();
  sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t result = EnvironmentObject.init()();
  *uint64_t v2 = result;
  v2[1] = v4;
  return result;
}

uint64_t sub_1000A44F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for ConversationView();
  uint64_t v65 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v66 = v4;
  uint64_t v67 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = (char *)v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v68 = type metadata accessor for MoreOptionsMenu();
  __chkstk_darwin(v68);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v62) = sub_1000A0B9C();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((unint64_t)v71 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  LODWORD(v6sub_10009073C(0, 0, 0) = v13 != 0;
  uint64_t v14 = a1 + *(int *)(v3 + 36);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v59 = v71;
  uint64_t v15 = *(int *)(v3 + 32);
  uint64_t v61 = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void **)(v16 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v18 = v17;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  id v19 = *(void **)(v16 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  id v20 = v19;
  static Published.subscript.getter();

  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  long long v58 = v71;
  long long v57 = v72;
  long long v56 = v73;
  long long v55 = v74;
  long long v54 = v75;
  uint64_t v21 = v10;
  uint64_t v22 = v76;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = v71;
  uint64_t v24 = *(void *)(v14 + 8);
  type metadata accessor for SharedTranslationOptions();
  sub_1000A6844(&qword_1002F3740, (void (*)(uint64_t))type metadata accessor for SharedTranslationOptions);
  swift_retain();
  uint64_t v25 = EnvironmentObject.init()();
  uint64_t v27 = v26;
  type metadata accessor for SceneContext();
  sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
  uint64_t v28 = EnvironmentObject.init()();
  *(void *)uint64_t v12 = v25;
  *((void *)v12 + 1) = v27;
  *((void *)v12 + 2) = v28;
  *((void *)v12 + 3) = v29;
  *((_OWORD *)v12 + 2) = xmmword_10024D860;
  v12[48] = v62 & 1;
  v12[49] = v60;
  v12[50] = v59;
  uint64_t v30 = (int *)v68;
  uint64_t v31 = *(void (**)(char *, char *, char *))(v63 + 32);
  uint64_t v32 = v21;
  uint64_t v33 = v64;
  v31(&v12[*(int *)(v68 + 40)], v32, v64);
  v31(&v12[v30[11]], v8, v33);
  uint64_t v34 = &v12[v30[12]];
  long long v35 = v57;
  *(_OWORD *)uint64_t v34 = v58;
  *((_OWORD *)v34 + 1) = v35;
  long long v36 = v55;
  *((_OWORD *)v34 + 2) = v56;
  *((_OWORD *)v34 + 3) = v36;
  *((_OWORD *)v34 + 4) = v54;
  *((void *)v34 + 1sub_10009073C(0, 0, 0) = v22;
  *(void *)&v12[v30[13]] = v23;
  id v37 = &v12[v30[14]];
  *(void *)id v37 = sub_1000A6C3C;
  *((void *)v37 + 1) = v24;
  uint64_t v38 = &v12[v30[15]];
  char v70 = 0;
  State.init(wrappedValue:)();
  uint64_t v39 = *((void *)&v71 + 1);
  char *v38 = v71;
  *((void *)v38 + 1) = v39;
  uint64_t v40 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v62 = v41;
  uint64_t v63 = v40;
  int v59 = v42;
  uint64_t v60 = v43;
  uint64_t v64 = v12;
  uint64_t v44 = v61;
  uint64_t v45 = v67;
  sub_1000A695C(v61, v67, (uint64_t (*)(void))type metadata accessor for ConversationView);
  type metadata accessor for MainActor();
  uint64_t v46 = static MainActor.shared.getter();
  unint64_t v47 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v46;
  *(void *)(v48 + 24) = &protocol witness table for MainActor;
  sub_1000A5E24(v45, v48 + v47);
  sub_1000A695C(v44, v45, (uint64_t (*)(void))type metadata accessor for ConversationView);
  uint64_t v49 = static MainActor.shared.getter();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v49;
  *(void *)(v50 + 24) = &protocol witness table for MainActor;
  sub_1000A5E24(v45, v50 + v47);
  uint64_t v51 = Binding.init(get:set:)();
  __chkstk_darwin(v51);
  sub_100007620(&qword_1002F3728);
  sub_1000A6844(&qword_1002F3730, (void (*)(uint64_t))type metadata accessor for MoreOptionsMenu);
  sub_100014894(&qword_1002F3738, &qword_1002F3728);
  uint64_t v52 = (uint64_t)v64;
  View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1000A69C4(v52, (uint64_t (*)(void))type metadata accessor for MoreOptionsMenu);
}

uint64_t sub_1000A4DA8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for ConversationView();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F22B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620(&qword_1002EF0C8);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v49 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v48 = (char *)v39 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v47 = (char *)v39 - v16;
  __chkstk_darwin(v15);
  uint64_t v46 = (char *)v39 - v17;
  uint64_t v18 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v41 = v19;
  uint64_t v42 = v18;
  v39[3] = v20;
  uint64_t v40 = v21;
  static ButtonRole.destructive.getter();
  uint64_t v22 = type metadata accessor for ButtonRole();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  uint64_t v45 = v23 + 56;
  v44(v9, 0, 1, v22);
  sub_1000A695C(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConversationView);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v25 = swift_allocObject();
  sub_1000A5E24((uint64_t)v6, v25 + v24);
  Button<>.init(_:role:action:)();
  uint64_t v26 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  static ButtonRole.cancel.getter();
  v44(v9, 0, 1, v22);
  sub_1000A695C(v43, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ConversationView);
  uint64_t v28 = swift_allocObject();
  sub_1000A5E24((uint64_t)v6, v28 + v24);
  uint64_t v29 = v47;
  Button<>.init(_:role:action:)();
  uint64_t v30 = v50;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  uint64_t v32 = v48;
  uint64_t v33 = v46;
  v31(v48, v46, v10);
  uint64_t v34 = v49;
  v31(v49, v29, v10);
  long long v35 = v51;
  v31(v51, v32, v10);
  uint64_t v36 = sub_100007620(&qword_1002F3748);
  v31(&v35[*(int *)(v36 + 48)], v34, v10);
  id v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v29, v10);
  v37(v33, v10);
  v37(v34, v10);
  return ((uint64_t (*)(char *, uint64_t))v37)(v32, v10);
}

uint64_t sub_1000A5230(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + *(int *)(type metadata accessor for ConversationView() + 32) + 8)
                 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session);
  sub_100029624((void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store), *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store + 24));
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  dispatch thunk of TranslationStore.clearHistory(sessionID:completion:)();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_lidDisambiguationCounter) = 0;
  return swift_release();
}

uint64_t sub_1000A5388(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return static Published.subscript.setter();
  }
  else
  {
    type metadata accessor for SceneContext();
    sub_1000A6844((unint64_t *)&unk_1002F97F0, (void (*)(uint64_t))type metadata accessor for SceneContext);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

void sub_1000A5458(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = Notification.userInfo.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v13 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v6 + 16) && (unint64_t v7 = sub_10020384C((uint64_t)v14), (v8 & 1) != 0))
    {
      sub_10000B170(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v16);
    }
    else
    {
      long long v16 = 0u;
      long long v17 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10006E7AC((uint64_t)v14);
    if (*((void *)&v17 + 1))
    {
      sub_1000A6138();
      if (swift_dynamicCast())
      {
        if (*(unsigned char *)(*(void *)(v3 + *(int *)(type metadata accessor for ConversationView() + 32) + 8)
                      + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible) == 1)
        {
          [v13 doubleValue];
          uint64_t v9 = static Animation.easeInOut(duration:)();
          __chkstk_darwin(v9);
          withAnimation<A>(_:_:)();
          swift_release();

          return;
        }
      }
    }
    else
    {
      sub_10000B070((uint64_t)&v16, (uint64_t *)&unk_1002F02C0);
    }
  }
  uint64_t v10 = (char *)(v3 + *(int *)(type metadata accessor for ConversationView() + 48));
  char v11 = *v10;
  uint64_t v12 = *((void *)v10 + 1);
  v14[0] = v11;
  uint64_t v15 = v12;
  LOBYTE(v16) = a2 & 1;
  sub_100007620(&qword_1002F1168);
  State.wrappedValue.setter();
}

void sub_1000A5658(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
  v1[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible] = 1;
  unint64_t v7 = &type metadata for TranslateFeatures;
  unint64_t v2 = sub_10000AB14();
  unint64_t v8 = v2;
  v6[0] = 8;
  char v3 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v6);
  if (v3)
  {
    unint64_t v7 = &type metadata for TranslateFeatures;
    unint64_t v8 = v2;
    v6[0] = 8;
    uint64_t v4 = v1;
    char v5 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v6);
    if (v5) {
      sub_1000BB438();
    }
  }
}

void sub_1000A5730(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
  v1[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible] = 0;
  unint64_t v2 = v1;
  sub_1000AD9C0();

  char v11 = &type metadata for TranslateFeatures;
  unint64_t v3 = sub_10000AB14();
  unint64_t v12 = v3;
  v10[0] = 8;
  char v4 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v10);
  if (v4)
  {
    char v11 = &type metadata for TranslateFeatures;
    unint64_t v12 = v3;
    v10[0] = 8;
    char v5 = v2;
    char v6 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v10);
    if (v6)
    {
      uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_deviceHelper];
      char v11 = &type metadata for TranslateFeatures;
      unint64_t v12 = v3;
      v10[0] = 8;
      char v8 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v10);
      if (v8)
      {
        uint64_t v9 = *(char **)(v7 + 24);
        *(void *)(v7 + 24) = 0;

        char v5 = v9;
      }
    }
  }
}

void sub_1000A5848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v4 = type metadata accessor for ScenePhase();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  char v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  uint64_t v10 = &v29[-v9 - 8];
  char v11 = *(void (**)(unsigned char *, void, uint64_t))(v5 + 104);
  v11(&v29[-v9 - 8], enum case for ScenePhase.active(_:), v4);
  char v12 = static ScenePhase.== infix(_:_:)();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v10, v4);
  if (v12)
  {
    uint64_t v30 = &type metadata for TranslateFeatures;
    unint64_t v14 = sub_10000AB14();
    unint64_t v31 = v14;
    v29[0] = 8;
    char v15 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v29);
    if ((v15 & 1) == 0) {
      return;
    }
    long long v16 = *(void **)(v28 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
    uint64_t v30 = &type metadata for TranslateFeatures;
    unint64_t v31 = v14;
    v29[0] = 8;
    long long v17 = v16;
    char v18 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v29);
    if (v18) {
      sub_1000BB438();
    }
    goto LABEL_12;
  }
  v11(v10, enum case for ScenePhase.inactive(_:), v4);
  char v19 = static ScenePhase.== infix(_:_:)();
  v13(v10, v4);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
  if (v19)
  {
    v13(v8, v4);
  }
  else
  {
    v11(v10, enum case for ScenePhase.background(_:), v4);
    char v20 = static ScenePhase.== infix(_:_:)();
    v13(v10, v4);
    v13(v8, v4);
    if ((v20 & 1) == 0) {
      return;
    }
  }
  id v21 = *(id *)(v28 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
  sub_1000AD9C0();

  uint64_t v30 = &type metadata for TranslateFeatures;
  unint64_t v22 = sub_10000AB14();
  unint64_t v31 = v22;
  v29[0] = 8;
  char v23 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)v29);
  if (v23)
  {
    uint64_t v30 = &type metadata for TranslateFeatures;
    unint64_t v31 = v22;
    v29[0] = 8;
    long long v17 = (char *)v21;
    char v24 = isFeatureEnabled(_:)();
    sub_10000AB68((uint64_t)v29);
    if (v24)
    {
      uint64_t v25 = *(void *)&v17[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_deviceHelper];
      uint64_t v30 = &type metadata for TranslateFeatures;
      unint64_t v31 = v22;
      v29[0] = 8;
      char v26 = isFeatureEnabled(_:)();
      sub_10000AB68((uint64_t)v29);
      if (v26)
      {
        uint64_t v27 = *(char **)(v25 + 24);
        *(void *)(v25 + 24) = 0;

        long long v17 = v27;
      }
    }
LABEL_12:
  }
}

void sub_1000A5BC0(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + *(int *)(type metadata accessor for ConversationView() + 32) + 8);
  v1[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible] = 0;
  unint64_t v2 = v1;
  sub_1000AD9C0();
}

uint64_t sub_1000A5C30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConversationView();
  uint64_t v3 = qword_1002EE5D0;
  *(id *)(a1 + *(int *)(v2 + 32) + 8);
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E978);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting ConversationViewModel", v7, 2u);
    swift_slowDealloc();
  }

  sub_1000AB7B0();
  sub_1000AC2B0(3, 1, 1);
  sub_100234200();
  swift_getKeyPath();
  swift_getKeyPath();
  return static Published.subscript.setter();
}

uint64_t sub_1000A5D98()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1000A5E18@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A4078(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000A5E24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConversationView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000A5E88(uint64_t a1)
{
}

void sub_1000A5E94(uint64_t a1)
{
}

void sub_1000A5E9C(uint64_t a1, char a2)
{
}

uint64_t sub_1000A5F14()
{
  return sub_1000A67B8((uint64_t (*)(uint64_t))sub_1000A5658);
}

uint64_t sub_1000A5F30()
{
  return sub_1000A67B8((uint64_t (*)(uint64_t))sub_1000A5730);
}

void sub_1000A5F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ConversationView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1000A5848(a1, a2, v6);
}

unint64_t sub_1000A5FCC()
{
  unint64_t result = qword_1002F36E8;
  if (!qword_1002F36E8)
  {
    sub_100007928(&qword_1002F36A0);
    sub_1000A6048();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F36E8);
  }
  return result;
}

unint64_t sub_1000A6048()
{
  unint64_t result = qword_1002F36F0;
  if (!qword_1002F36F0)
  {
    sub_100007928(&qword_1002F3698);
    sub_100014894(&qword_1002F36F8, &qword_1002F3690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F36F0);
  }
  return result;
}

uint64_t sub_1000A60F4()
{
  return sub_1000A67B8((uint64_t (*)(uint64_t))sub_1000A5BC0);
}

uint64_t sub_1000A6120()
{
  return sub_1000A67B8(sub_1000A5C30);
}

unint64_t sub_1000A6138()
{
  unint64_t result = qword_1002F3430;
  if (!qword_1002F3430)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1002F3430);
  }
  return result;
}

uint64_t sub_1000A6178()
{
  return sub_1000A5D98();
}

uint64_t sub_1000A6198@<X0>(uint64_t a1@<X8>)
{
  return sub_1000A44F4(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000A61D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ConversationView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000A0E80(v4, a1);
}

uint64_t sub_1000A624C()
{
  uint64_t v1 = (int *)type metadata accessor for ConversationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = v0 + v3;

  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[7];
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000A64AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for ConversationView() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000A1070(a1, v4, v5, v6);
}

uint64_t sub_1000A6520@<X0>(char *a1@<X8>)
{
  return sub_1000A4DA8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1000A652C()
{
  return sub_1000A67B8(sub_1000A5230);
}

uint64_t sub_1000A6548()
{
  uint64_t v1 = (int *)type metadata accessor for ConversationView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;

  swift_release();
  uint64_t v6 = v0 + v3 + v1[6];
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v5 + v1[7];
  sub_100007620(&qword_1002F3598);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ScenePhase();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000A67A0()
{
  return sub_1000A67B8(sub_1000A5388);
}

uint64_t sub_1000A67B8(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for ConversationView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000A6844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000A68AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1000A68E4()
{
  return sub_1000A3F78(*(void *)(v0 + 16));
}

void *sub_1000A68EC(char a1)
{
  return sub_1000AEE64(a1);
}

void *sub_1000A6910()
{
  return sub_1000AE9D8();
}

void *sub_1000A6934()
{
  return sub_1000AE8DC();
}

uint64_t sub_1000A695C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A69C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000A6A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620((uint64_t *)&unk_1002F33E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000A6A98()
{
  unint64_t result = qword_1002F3798;
  if (!qword_1002F3798)
  {
    sub_100007928(&qword_1002F36B8);
    sub_100007928(&qword_1002F36A8);
    sub_100007928(&qword_1002F36A0);
    type metadata accessor for ScenePhase();
    sub_1000A5FCC();
    sub_1000A6844(&qword_1002F3700, (void (*)(uint64_t))&type metadata accessor for ScenePhase);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1000A6BE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3798);
  }
  return result;
}

unint64_t sub_1000A6BE8()
{
  unint64_t result = qword_1002F37A0;
  if (!qword_1002F37A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F37A0);
  }
  return result;
}

uint64_t sub_1000A6C4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A6D14(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

double sub_1000A6D78@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000A6DB4(a1);
}

uint64_t sub_1000A6D8C(uint64_t a1, void **a2)
{
  return sub_1000A6E44(a1, a2);
}

double sub_1000A6DA0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000A6DB4(a1);
}

double sub_1000A6DB4@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1000A6E30(uint64_t a1, void **a2)
{
  return sub_1000A6E44(a1, a2);
}

uint64_t sub_1000A6E44(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1000A6EC0()
{
  return sub_100056CA8();
}

uint64_t sub_1000A6ED4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A6F30(a1, a2, a3, a4, (uint64_t)&unk_10024DF38, (uint64_t)&unk_10024DF60, 0x800000010025D1C0);
}

uint64_t sub_1000A6EF8()
{
  return sub_100056CA8();
}

uint64_t sub_1000A6F0C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A6F30(a1, a2, a3, a4, (uint64_t)&unk_10024E178, (uint64_t)&unk_10024E1A0, 0x800000010025D230);
}

uint64_t sub_1000A6F30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v19[2] = a6;
  void v19[3] = a7;
  v19[1] = a5;
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)v19 - v14;
  long long v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)v19 - v14, a1, v9);
  long long v17 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v16(v13, (uint64_t)v15, v9);
  v17;
  static Published.subscript.setter();
  sub_1000A74E8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1000A70C0(uint64_t a1)
{
  uint64_t v33 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v33 - 8);
  uint64_t v4 = __chkstk_darwin(v33);
  uint64_t v32 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v31 = (char *)v27 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (!v7) {
    return (uint64_t)v8;
  }
  v27[0] = v1;
  uint64_t v34 = _swiftEmptyArrayStorage;
  sub_1000B2CE4(0, v7, 0);
  uint64_t result = sub_1000B4D2C(a1);
  int64_t v10 = result;
  int v12 = v11;
  char v14 = v13 & 1;
  uint64_t v29 = a1;
  uint64_t v30 = a1 + 56;
  uint64_t v27[2] = v3 + 32;
  v27[3] = v3 + 16;
  v27[1] = v3 + 8;
  uint64_t v28 = v3;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v30 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_16;
    }
    int64_t v15 = *(void *)(a1 + 48) + *(void *)(v3 + 72) * v10;
    long long v16 = v31;
    uint64_t v17 = v33;
    (*(void (**)(char *, int64_t, uint64_t))(v3 + 16))(v31, v15, v33);
    char v18 = v32;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v32, v16, v17);
    uint64_t v19 = Locale.identifier.getter();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v17);
    uint64_t v8 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B2CE4(0, v8[2] + 1, 1);
      uint64_t v8 = v34;
    }
    unint64_t v23 = v8[2];
    unint64_t v22 = v8[3];
    if (v23 >= v22 >> 1)
    {
      sub_1000B2CE4(v22 > 1, v23 + 1, 1);
      uint64_t v8 = v34;
    }
    _OWORD v8[2] = v23 + 1;
    char v24 = &v8[2 * v23];
    void v24[4] = v19;
    v24[5] = v21;
    a1 = v29;
    uint64_t result = sub_1000B4DCC(v10, v12, v14 & 1, v29);
    int64_t v10 = result;
    int v12 = v25;
    char v14 = v26 & 1;
    --v7;
    uint64_t v3 = v28;
    if (!v7)
    {
      sub_1000B5CA8(result, v25, v26 & 1);
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1000A7388@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000A739C(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

char *sub_1000A73B0()
{
  uint64_t v1 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel____lazy_storage___textManager;
  if (*(void *)&v0[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel____lazy_storage___textManager])
  {
    uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel____lazy_storage___textManager];
  }
  else
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translator];
    type metadata accessor for TextStreamingTranslationManager(0);
    uint64_t v4 = (char *)swift_allocObject();
    id v5 = v3;
    uint64_t v2 = sub_1000B5CF4(v5, (uint64_t)v0, v4, (uint64_t (*)(void))type metadata accessor for ConversationViewModel, (uint64_t)&off_1002CCA68, (uint64_t)sub_1000B6B00, (uint64_t)&unk_1002CCBF0);

    *(void *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000A748C()
{
  return sub_1000A74E8();
}

uint64_t sub_1000A74B0()
{
  return sub_10005770C();
}

uint64_t sub_1000A74C4()
{
  return sub_1000A74E8();
}

uint64_t sub_1000A74E8()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v4 = [self standardUserDefaults];
  Locale.identifier.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setObject:v5 forKey:v6];

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1000A7670()
{
  return sub_10005770C();
}

id sub_1000A7684()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  NSString v6 = (char *)&v13 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v7 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v9 = Locale._bridgeToObjectiveC()().super.isa;
  id v10 = [v7 initWithSourceLocale:isa targetLocale:v9];

  int v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  return v10;
}

uint64_t sub_1000A7858()
{
  return sub_100057C6C();
}

uint64_t sub_1000A786C()
{
  return sub_100057C6C();
}

uint64_t sub_1000A7880()
{
  return sub_100057C6C();
}

double sub_1000A7894@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000A7918()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000A7990()
{
  return sub_100057B20();
}

uint64_t sub_1000A79A4()
{
  return sub_100057B20();
}

uint64_t sub_1000A79B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1000A7A2C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1 | (v2 << 16);
}

uint64_t sub_1000A7AA8()
{
  return sub_100057C6C();
}

uint64_t sub_1000A7ABC(unsigned __int8 *a1, char *a2)
{
  return sub_100236CC0(*a1, *a2);
}

Swift::Int sub_1000A7AC8()
{
  return Hasher._finalize()();
}

uint64_t sub_1000A7BC4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A7CA8()
{
  return Hasher._finalize()();
}

unint64_t sub_1000A7DA0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1000B6250(*a1);
  *a2 = result;
  return result;
}

void sub_1000A7DD0(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x70615472657375;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED0000726F727245;
      uint64_t v3 = 0x6465766965636572;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "receivedFinal");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x7465736572;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 4:
      *(void *)a1 = 0x69647541706F7473;
      *(void *)(a1 + 8) = 0xE90000000000006FLL;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1000A7EA4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3) {
    goto LABEL_3;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
LABEL_3:
    char v0 = 1;
  }
  else
  {
    int v2 = sub_1000A73B0()[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState];
    swift_release();
    if (v2 == 1) {
      char v0 = 1;
    }
    else {
      char v0 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  return v0 & 1;
}

id sub_1000A8060()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  NSString v6 = (char *)&v14 - v5;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v7 = objc_allocWithZone((Class)_LTLocalePair);
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  Class v9 = Locale._bridgeToObjectiveC()().super.isa;
  id v10 = [v7 initWithSourceLocale:isa targetLocale:v9];

  int v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v11(v6, v0);
  id v12 = [v10 isPassthrough];

  return v12;
}

uint64_t sub_1000A824C()
{
  uint64_t v0 = 0x6C69662E706F7473;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v0 = 0x6C6C69662E63696DLL;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v6)
    {
      uint64_t v1 = v5;
      uint64_t v2 = v7;
      uint64_t v3 = v8;
      if ((v11 == 4 || v11 == 1) && (v12 & 0xFFFFFFFFFFFFFFFELL) == 2)
      {
        swift_bridgeObjectRetain();
        uint64_t v3 = v8;
        uint64_t v2 = v7;
        uint64_t v1 = v5;
        uint64_t v0 = v9;
      }
      sub_1000194BC(v1, v6, v2, v3, v9, v10, v11, v12, v13, v14, v15);
    }
  }
  return v0;
}

uint64_t sub_1000A8440()
{
  uint64_t v0 = 0x6C69662E706F7473;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v3 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (!v2) {
      return 0x6C6C69662E63696DLL;
    }
  }
  return v0;
}

void *sub_1000A854C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v137 = a8;
  uint64_t v195 = a6;
  uint64_t v196 = a7;
  uint64_t v136 = a5;
  uint64_t v193 = a3;
  uint64_t v194 = a4;
  uint64_t v192 = a2;
  uint64_t v135 = a1;
  uint64_t v181 = sub_100007620(&qword_1002F20D0);
  uint64_t v179 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  id v177 = (char *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100007620(&qword_1002F3190);
  uint64_t v180 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  UIFontTextStyle v178 = (char *)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100007620(&qword_1002F3198);
  uint64_t v184 = *(void *)(v12 - 8);
  uint64_t v185 = v12;
  __chkstk_darwin(v12);
  uint64_t v183 = (char *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100007620(&qword_1002F20C0);
  uint64_t v171 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v168 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_100007620(&qword_1002FAED0);
  uint64_t v169 = *(void *)(v170 - 8);
  uint64_t v15 = __chkstk_darwin(v170);
  uint64_t v167 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v166 = (char *)&v134 - v17;
  uint64_t v176 = sub_100007620(&qword_1002F20C8);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v173 = (char *)&v134 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100007620(&qword_1002F2128);
  uint64_t v158 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v157 = (char *)&v134 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_100007620(&qword_1002F3970);
  uint64_t v162 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  long long v160 = (char *)&v134 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100007620(&qword_1002F3978);
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  long long v161 = (char *)&v134 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100007620(&qword_1002FAEF0);
  __chkstk_darwin(v22 - 8);
  uint64_t v174 = (char *)&v134 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = (void *)sub_100007620(&qword_1002EF7B8);
  uint64_t v152 = *(v153 - 1);
  __chkstk_darwin(v153);
  uint64_t v151 = (char *)&v134 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100007620(&qword_1002EF7C0);
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v154 = (char *)&v134 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for Locale();
  uint64_t v138 = *(void **)(v191 - 8);
  uint64_t v26 = __chkstk_darwin(v191);
  uint64_t v187 = (char *)&v134 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v186 = (char *)&v134 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v189 = (char *)&v134 - v31;
  __chkstk_darwin(v30);
  uint64_t v147 = (char *)&v134 - v32;
  uint64_t v190 = (void *)sub_100007620(&qword_1002F2148);
  long long v150 = (void (**)(void, void, void))*(v190 - 1);
  __chkstk_darwin(v190);
  uint64_t v149 = (char *)&v134 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100007620(&qword_1002F2150);
  unint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v145 = (char *)&v134 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100007620(&qword_1002EF7C8);
  uint64_t v144 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v36 = (char *)&v134 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100007620(&qword_1002F3980);
  uint64_t v141 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v140 = (char *)&v134 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100007620(&qword_1002F31E0);
  uint64_t v38 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v40 = (char *)&v134 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100007620((uint64_t *)&unk_1002FCB50);
  uint64_t v42 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v134 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v9[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel____lazy_storage___textManager] = 0;
  uint64_t v45 = &v9[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__disableMicrophone];
  LOBYTE(v199) = 0;
  uint64_t v46 = v9;
  Published.init(initialValue:)();
  unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  v47(v45, v44, v41);
  uint64_t v48 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__isListeningToPartner];
  LOBYTE(v199) = 0;
  Published.init(initialValue:)();
  v47(v48, v44, v41);
  uint64_t v142 = v47;
  uint64_t v49 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__isListeningToDeviceOwner];
  LOBYTE(v199) = 0;
  Published.init(initialValue:)();
  v47(v49, v44, v41);
  uint64_t v50 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__partialSpeechResult];
  uint64_t v201 = 0;
  long long v199 = 0u;
  long long v200 = 0u;
  sub_100007620(&qword_1002F2E18);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v50, v40, v139);
  uint64_t v51 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__partialTextResult];
  long long v199 = 0uLL;
  *(void *)&long long v200 = 0;
  sub_100007620(&qword_1002F38D8);
  uint64_t v52 = v140;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v51, v52, v143);
  unint64_t v53 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__deviceOwnerText];
  long long v199 = 0uLL;
  sub_100007620(&qword_1002F1378);
  Published.init(initialValue:)();
  long long v54 = *(void (**)(char *, char *, uint64_t))(v144 + 32);
  uint64_t v55 = v188;
  v54(v53, v36, v188);
  long long v56 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__partnerText];
  long long v199 = 0uLL;
  Published.init(initialValue:)();
  v54(v56, v36, v55);
  long long v57 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__stateError];
  LOBYTE(v199) = 3;
  sub_100007620(&qword_1002F1568);
  long long v58 = v145;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v57, v58, v148);
  int v59 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__transactionalError];
  BYTE2(v199) = 8;
  LOWORD(v199) = 0;
  sub_100007620(&qword_1002F1578);
  uint64_t v60 = v149;
  Published.init(initialValue:)();
  ((void (**)(char *, char *, void *))v150)[4](v59, v60, v190);
  uint64_t v61 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__showErrorAlert];
  LOBYTE(v199) = 0;
  Published.init(initialValue:)();
  uint64_t v148 = v41;
  v142(v61, v44, v41);
  v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible] = 0;
  v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_hasPerformedStopTone] = 0;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentRecordingStopTonePlaybackTask] = 0;
  *(_WORD *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation] = 512;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v62 = (void *)sub_10011050C((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v62 = &_swiftEmptySetSingleton;
  }
  uint64_t v63 = v138;
  uint64_t v64 = v137;
  uint64_t v65 = v136;
  uint64_t v66 = v135;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_subscriptions] = v62;
  uint64_t v67 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation;
  type metadata accessor for SELFLoggingInvocationWrapper(0);
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = 0;
  uint64_t v69 = v68 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_parameters;
  uint64_t v70 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 1, 1, v70);
  UUID.init()();
  *(unsigned char *)(v68 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_hasLoggedGenderCoreAnalytics) = 0;
  *(void *)(v68 + OBJC_IVAR____TtC17SequoiaTranslator28SELFLoggingInvocationWrapper_tabName) = 3;
  *(void *)&v46[v67] = v68;
  long long v71 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText];
  *(void *)long long v71 = 0;
  *((void *)v71 + 1) = 0;
  long long v72 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v63[7];
  uint64_t v73 = v191;
  v72(&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSourceLocale], 1, 1, v191);
  v72(&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastTargetLocale], 1, 1, v73);
  v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible] = 0;
  v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_redactTargetText] = 0;
  long long v74 = &v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__selfAutoTranslateSessionId];
  UUID.init()();
  uint64_t v75 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v74, 0, 1, v75);
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translator] = v66;
  uint64_t v76 = v193;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_languagesService] = v192;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session] = v76;
  id v77 = objc_allocWithZone((Class)type metadata accessor for SpeechManager());
  id v78 = v66;
  swift_retain();
  swift_retain();
  id v79 = v65;
  uint64_t v190 = v78;
  long long v150 = (void (**)(void, void, void))v79;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_speechManager] = sub_1001B6728(v78, v79);
  uint64_t v80 = v196;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_ttsManager] = v195;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_errorStateContext] = v80;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions] = v64;
  *(void *)&v46[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_deviceHelper] = v194;
  uint64_t v81 = self;
  swift_retain();
  swift_retain();
  uint64_t v149 = v64;
  swift_retain();
  id v82 = [v81 standardUserDefaults];
  NSString v83 = String._bridgeToObjectiveC()();
  id v84 = [v82 stringForKey:v83];

  if (v84)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v85 = v147;
  Locale.init(identifier:)();
  swift_beginAccess();
  uint64_t v86 = (void (*)(char *, char *, uint64_t))v63[2];
  uint64_t v87 = v191;
  v86(v189, v85, v191);
  Published.init(initialValue:)();
  unsigned int v88 = (void (*)(char *, uint64_t))v63[1];
  v88(v85, v87);
  swift_endAccess();
  id v89 = [v81 standardUserDefaults];
  NSString v90 = String._bridgeToObjectiveC()();
  id v91 = [v89 stringForKey:v90];

  if (v91)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v92 = v186;
  Locale.init(identifier:)();
  swift_beginAccess();
  uint64_t v93 = v189;
  uint64_t v94 = v191;
  v86(v189, v92, v191);
  Published.init(initialValue:)();
  v88(v92, v94);
  swift_endAccess();

  uint64_t v95 = (objc_class *)type metadata accessor for ConversationViewModel();
  v198.receiver = v46;
  v198.super_class = v95;
  uint64_t v96 = (char *)[super init];
  *(void *)(*(void *)&v96[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_speechManager]
            + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate
            + 8) = &off_1002CCA78;
  swift_unknownObjectWeakAssign();
  swift_getKeyPath();
  swift_getKeyPath();
  id v97 = v96;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v98 = v187;
  uint64_t v99 = v97;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100164AB8();
  v88(v98, v94);
  v88(v93, v94);
  swift_beginAccess();
  uint64_t v100 = v151;
  Published.projectedValue.getter();
  swift_endAccess();
  unint64_t v101 = sub_100022324();
  *(void *)&long long v199 = static OS_dispatch_queue.main.getter();
  uint64_t v191 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v102 = *(void *)(v191 - 8);
  uint64_t v189 = *(char **)(v102 + 56);
  uint64_t v103 = v102 + 56;
  uint64_t v104 = (uint64_t)v174;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v189)(v174, 1, 1, v191);
  uint64_t v188 = v103;
  uint64_t v147 = (char *)&protocol conformance descriptor for Published<A>.Publisher;
  sub_100014894(&qword_1002EF7D0, &qword_1002EF7B8);
  uint64_t v187 = (char *)sub_1000B6908((unint64_t *)&qword_1002F9840, (void (*)(uint64_t))sub_100022324);
  uint64_t v105 = v154;
  NSString v106 = v153;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v104, &qword_1002FAEF0);

  (*(void (**)(char *, void *))(v152 + 8))(v100, v106);
  swift_allocObject();
  uint64_t v186 = v99;
  swift_unknownObjectWeakInit();
  uint64_t v153 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100014894(&qword_1002EF7D8, &qword_1002EF7C0);
  uint64_t v107 = v156;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v105, v107);
  uint64_t v108 = (uint64_t)&v99[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_subscriptions];
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v109 = v157;
  Published.projectedValue.getter();
  swift_endAccess();
  sub_100014894(&qword_1002F2170, &qword_1002F2128);
  uint64_t v110 = v160;
  uint64_t v111 = v159;
  Publisher<>.removeDuplicates()();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v109, v111);
  unint64_t v146 = v101;
  *(void *)&long long v199 = static OS_dispatch_queue.main.getter();
  uint64_t v112 = v191;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v189)(v104, 1, 1, v191);
  sub_100014894(&qword_1002F3988, &qword_1002F3970);
  os_log_type_t v113 = v161;
  uint64_t v114 = v163;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v104, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v162 + 8))(v110, v114);
  sub_100014894(&qword_1002F3990, &qword_1002F3978);
  uint64_t v115 = v165;
  Publisher<>.sink(receiveValue:)();
  (*(void (**)(char *, uint64_t))(v164 + 8))(v113, v115);
  uint64_t v156 = v108;
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100007620(&qword_1002F34A0);
  uint64_t v116 = (uint64_t)v166;
  Published.projectedValue.getter();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v117 = (uint64_t)v167;
  Published.projectedValue.getter();
  swift_endAccess();
  uint64_t v118 = (uint64_t)v168;
  LanguagesService.$models.getter();
  uint64_t v119 = sub_1000D2FE8(v116, v117, v118);
  (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v118, v172);
  uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v169 + 8);
  uint64_t v121 = v117;
  uint64_t v122 = v170;
  v120(v121, v170);
  v120(v116, v122);
  *(void *)&long long v199 = v119;
  id v197 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v123 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v189;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v189)(v104, 1, 1, v112);
  sub_100007620(&qword_1002F21D0);
  sub_100014894(&qword_1002F21D8, &qword_1002F21D0);
  uint64_t v124 = v173;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v104, &qword_1002FAEF0);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F21E0, &qword_1002F20C8);
  uint64_t v125 = v176;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v175 + 8))(v124, v125);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_100007620(&qword_1002EF7B0);
  uint64_t v126 = v177;
  Published.projectedValue.getter();
  swift_endAccess();
  *(void *)&long long v199 = static OS_dispatch_queue.main.getter();
  v123(v104, 1, 1, v191);
  sub_100014894(&qword_1002F21B0, &qword_1002F20D0);
  uint64_t v127 = v178;
  uint64_t v128 = v181;
  Publisher.receive<A>(on:options:)();
  sub_10000B070(v104, &qword_1002FAEF0);

  (*(void (**)(char *, uint64_t))(v179 + 8))(v126, v128);
  sub_100014894(&qword_1002F3218, &qword_1002F3190);
  long long v129 = v183;
  uint64_t v130 = v182;
  Publisher.dropFirst(_:)();
  (*(void (**)(char *, uint64_t))(v180 + 8))(v127, v130);
  swift_allocObject();
  long long v131 = v186;
  swift_unknownObjectWeakInit();
  sub_100014894(&qword_1002F3220, &qword_1002F3198);
  uint64_t v132 = v185;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v184 + 8))(v129, v132);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return v131;
}

uint64_t sub_1000AA348(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (v1) {
      sub_1000AB918();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000AA3EC()
{
  if (qword_1002EE528 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_100007620(&qword_1002EEEE8);
  sub_100011554(v0, (uint64_t)qword_10030E658);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.setter();
  return swift_endAccess();
}

uint64_t sub_1000AA494()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

void sub_1000AA520()
{
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E978);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Clearing input fields since the session timed out", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1000AD7D4(1);
  }
}

uint64_t sub_1000AA634(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 112) = a2;
  *(void *)(v4 + 12sub_10009073C(0, 0, 0) = v3;
  *(unsigned char *)(v4 + 233) = a3;
  *(void *)(v4 + 104) = a1;
  sub_100007620((uint64_t *)&unk_1002F4110);
  *(void *)(v4 + 128) = swift_task_alloc();
  *(void *)(v4 + 136) = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  *(void *)(v4 + 144) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  *(void *)(v4 + 152) = v5;
  *(void *)(v4 + 16sub_10009073C(0, 0, 0) = *(void *)(v5 - 8);
  *(void *)(v4 + 168) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  *(void *)(v4 + 176) = v6;
  *(void *)(v4 + 184) = *(void *)(v6 - 8);
  *(void *)(v4 + 192) = swift_task_alloc();
  *(void *)(v4 + 20sub_10009073C(0, 0, 0) = swift_task_alloc();
  *(void *)(v4 + 208) = swift_task_alloc();
  *(void *)(v4 + 216) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 224) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000AA814, v8, v7);
}

void *sub_1000AA814()
{
  uint64_t v1 = *(void *)(v0 + 104);
  unint64_t v2 = *(void *)(v0 + 112);
  swift_release();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    unint64_t v38 = v2;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    uint64_t v39 = *(void *)(v0 + 216);
    uint64_t v9 = *(void *)(v0 + 200);
    uint64_t v41 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v44 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v46 = *(void *)(v0 + 152);
    uint64_t v14 = *(int **)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 120);
    swift_release();
    swift_release();
    uint64_t v40 = *(void *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    v16(v9, v39, v12);
    v16(v11, v41, v12);
    uint64_t v17 = 1;
    if (!*(unsigned char *)(v15 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible)) {
      uint64_t v17 = 2;
    }
    uint64_t v42 = v17;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v18 = *(unsigned char *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v13 + v14[14], 1, 1, v46);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    v19(v13, v9, v12);
    v19(v13 + v14[5], v11, v12);
    *(void *)(v13 + v14[6]) = 1;
    *(void *)(v13 + v14[7]) = 1;
    *(void *)(v13 + v14[8]) = v42;
    *(unsigned char *)(v13 + v14[9]) = v18;
    uint64_t v20 = v13 + v14[10];
    *(void *)uint64_t v20 = 0;
    *(unsigned char *)(v20 + 8) = 1;
    *(unsigned char *)(v13 + v14[11]) = 0;
    *(void *)(v13 + v14[12]) = 0;
    uint64_t v21 = v13 + v14[13];
    *(void *)uint64_t v21 = 0;
    *(unsigned char *)(v21 + 8) = 1;
    sub_1001A1344(v13);
    uint64_t result = *(void **)(v40 + 16);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v48 = *(void *)(v0 + 216);
    uint64_t v23 = *(void *)(v0 + 184);
    uint64_t v37 = *(void *)(v0 + 176);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v43 = *(void *)(v0 + 160);
    uint64_t v25 = *(void *)(v0 + 144);
    uint64_t v45 = *(void *)(v0 + 152);
    uint64_t v47 = *(void *)(v0 + 208);
    uint64_t v26 = *(void *)(v0 + 120);
    uint64_t v27 = *(void *)(v0 + 128);
    uint64_t v28 = *(void *)(v0 + 104);
    unint64_t v29 = *(void *)(v0 + 112);
    id v30 = [result invocationId];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    sub_1000B68AC(v25);
    sub_1000A73B0();
    sub_1001DCB0C(v28, v29, v48, v47, 0, v24);
    swift_release();
    swift_retain();
    sub_1001A16F0(v28, v38, v48, v47, 1);
    swift_release();
    uint64_t v31 = (void *)(v26 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText);
    *uint64_t v31 = 0;
    v31[1] = 0;
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v32(v27, 1, 1, v37);
    uint64_t v33 = v26 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSourceLocale;
    swift_beginAccess();
    sub_1000344BC(v27, v33, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    v32(v27, 1, 1, v37);
    uint64_t v34 = v26 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastTargetLocale;
    swift_beginAccess();
    sub_1000344BC(v27, v34, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v24, v45);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v35(v47, v37);
    v35(v48, v37);
  }
  else
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030E978);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TextView's text was empty or just whitespaces when trying to start text translation", v7, 2u);
      swift_slowDealloc();
    }

    *(void *)(v0 + 4sub_10009073C(0, 0, 0) = &type metadata for TranslateFeatures;
    *(void *)(v0 + 48) = sub_10000AB14();
    *(unsigned char *)(v0 + 16) = 4;
    char v8 = isFeatureEnabled(_:)();
    sub_10000AB68(v0 + 16);
    if (v8) {
      sub_1000AB7B0();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return (void *)v36();
}

uint64_t sub_1000AAEB8(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = v3;
  *(unsigned char *)(v4 + 217) = a3;
  *(void *)(v4 + 88) = a1;
  sub_100007620((uint64_t *)&unk_1002F4110);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 12sub_10009073C(0, 0, 0) = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  *(void *)(v4 + 128) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = *(void *)(v5 - 8);
  *(void *)(v4 + 152) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  *(void *)(v4 + 16sub_10009073C(0, 0, 0) = v6;
  *(void *)(v4 + 168) = *(void *)(v6 - 8);
  *(void *)(v4 + 176) = swift_task_alloc();
  *(void *)(v4 + 184) = swift_task_alloc();
  *(void *)(v4 + 192) = swift_task_alloc();
  *(void *)(v4 + 20sub_10009073C(0, 0, 0) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 208) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000AB098, v8, v7);
}

void *sub_1000AB098()
{
  uint64_t v1 = *(void *)(v0 + 88);
  unint64_t v2 = *(void *)(v0 + 96);
  swift_release();
  uint64_t v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_1000A73B0();
    uint64_t v8 = sub_1001D7AF0();
    unint64_t v10 = v9;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!v11 && (sub_1000A8060() & 1) == 0)
    {
      uint64_t v12 = *(unsigned char **)(v0 + 104);
      uint64_t v13 = *(void *)(v0 + 88);
      uint64_t v14 = *(unsigned char *)(v0 + 217) & 1;
      v12[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_redactTargetText] = 1;
      swift_getKeyPath();
      swift_getKeyPath();
      *(void *)(v0 + 64) = v14;
      *(void *)(v0 + 72) = v13;
      *(void *)(v0 + 8sub_10009073C(0, 0, 0) = v2;
      swift_bridgeObjectRetain();
      uint64_t v15 = v12;
      static Published.subscript.setter();
    }
    uint64_t v46 = v2;
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 160);
    uint64_t v18 = *(void *)(v0 + 168);
    uint64_t v48 = *(void *)(v0 + 144);
    uint64_t v49 = *(void *)(v0 + 184);
    uint64_t v20 = *(void *)(v0 + 128);
    uint64_t v53 = *(void *)(v0 + 136);
    uint64_t v21 = *(int **)(v0 + 120);
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v47 = *(void *)(v22 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation);
    uint64_t v23 = *(void (**)(void))(v18 + 16);
    v23();
    uint64_t v45 = v23;
    ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v17, v16, v19);
    uint64_t v24 = 1;
    if (!*(unsigned char *)(v22 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible)) {
      uint64_t v24 = 2;
    }
    uint64_t v50 = v24;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v25 = *(unsigned char *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v20 + v21[14], 1, 1, v53);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    v26(v20, v49, v19);
    v26(v20 + v21[5], v17, v19);
    *(void *)(v20 + v21[6]) = 1;
    *(void *)(v20 + v21[7]) = 1;
    *(void *)(v20 + v21[8]) = v50;
    *(unsigned char *)(v20 + v21[9]) = v25;
    uint64_t v27 = v20 + v21[10];
    *(void *)uint64_t v27 = 0;
    *(unsigned char *)(v27 + 8) = 1;
    *(unsigned char *)(v20 + v21[11]) = 0;
    *(void *)(v20 + v21[12]) = 0;
    uint64_t v28 = v20 + v21[13];
    *(void *)uint64_t v28 = 0;
    *(unsigned char *)(v28 + 8) = 1;
    sub_1001A1344(v20);
    uint64_t result = *(void **)(v47 + 16);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v30 = *(void *)(v0 + 192);
    uint64_t v54 = *(void *)(v0 + 200);
    uint64_t v31 = *(void *)(v0 + 160);
    uint64_t v55 = *(void *)(v0 + 168);
    uint64_t v32 = *(void *)(v0 + 152);
    uint64_t v33 = *(void *)(v0 + 128);
    uint64_t v51 = *(void *)(v0 + 144);
    uint64_t v52 = *(void *)(v0 + 136);
    uint64_t v34 = *(void *)(v0 + 112);
    uint64_t v44 = *(void *)(v0 + 104);
    uint64_t v35 = *(void *)(v0 + 88);
    unint64_t v36 = *(void *)(v0 + 96);
    id v37 = [result invocationId];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    sub_1000B68AC(v33);
    sub_1000A73B0();
    sub_1001DBD5C(v35, v36, v54, v30, v32);
    swift_release();
    unint64_t v38 = (uint64_t *)(v44 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText);
    uint64_t *v38 = v35;
    v38[1] = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v54, v31);
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56);
    v39(v34, 0, 1, v31);
    uint64_t v40 = v44 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSourceLocale;
    swift_beginAccess();
    sub_1000344BC(v34, v40, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v34, v30, v31);
    v39(v34, 0, 1, v31);
    uint64_t v41 = v44 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastTargetLocale;
    swift_beginAccess();
    sub_1000344BC(v34, v41, (uint64_t *)&unk_1002F4110);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v32, v52);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v42(v30, v31);
    v42(v54, v31);
  }
  else
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100011554(v4, (uint64_t)qword_10030E978);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TextView's text was empty or just whitespaces when trying to do streaming text translation", v7, 2u);
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
  return (void *)v43();
}

uint64_t sub_1000AB7B0()
{
  uint64_t v1 = v0;
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E978);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Resetting text streaming", v5, 2u);
    swift_slowDealloc();
  }

  swift_getKeyPath();
  swift_getKeyPath();
  os_log_type_t v6 = v1;
  static Published.subscript.setter();
  v6[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_redactTargetText] = 0;
  sub_1000A73B0();
  sub_1001D7F84(0);
  swift_release();
  uint64_t v7 = &v6[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText];
  *uint64_t v7 = 0;
  v7[1] = 0;
  return swift_bridgeObjectRelease();
}

BOOL sub_1000AB918()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v3 != 1) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  os_log_type_t v6 = &type metadata for TranslateFeatures;
  unint64_t v7 = sub_10000AB14();
  LOBYTE(v3) = 8;
  char v0 = isFeatureEnabled(_:)();
  sub_10000AB68((uint64_t)&v3);
  if ((v0 & 1) == 0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (!v4) {
    return 1;
  }
  uint64_t v1 = v10;
  sub_1000194BC(v3, v4, v5, (uint64_t)v6, v7, v8, v9, v10, v11, v12, v13);
  return (unint64_t)(v1 - 4) < 0xFFFFFFFFFFFFFFFELL;
}

void *sub_1000ABAC0(int a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v65 = (uint64_t)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v68 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  long long v71 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v56 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v56 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v56 - v21;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v73 << 16 != 0x80000)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    unsigned __int8 v73 = 8;
    __int16 v72 = 0;
    uint64_t v23 = v2;
    static Published.subscript.setter();
  }
  if (a2) {
    __int16 v24 = 256;
  }
  else {
    __int16 v24 = 0;
  }
  *(_WORD *)&v2[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation] = v24 & 0xFF00 | a1;
  int v62 = a2;
  int v58 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v25 = *(void *)&v2[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation];
  uint64_t v26 = v68;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  int v59 = v22;
  v27(v70, v22, v13);
  uint64_t v60 = v20;
  uint64_t v69 = v13;
  v27(v71, v20, v13);
  swift_retain();
  if (sub_1000AB918()) {
    uint64_t v28 = 11;
  }
  else {
    uint64_t v28 = 2;
  }
  uint64_t v29 = 1;
  if (!v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible]) {
    uint64_t v29 = 2;
  }
  uint64_t v64 = v29;
  uint64_t v30 = *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_translationOptions];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v31 = v72;
  uint64_t v63 = sub_1000AF29C();
  BOOL v32 = sub_1000AB918();
  uint64_t v57 = v30;
  uint64_t v33 = v28;
  if (v32)
  {
    uint64_t v34 = (uint64_t)&v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__selfAutoTranslateSessionId];
    swift_beginAccess();
    uint64_t v35 = v65;
    sub_10000C3A4(v34, v65, (uint64_t *)&unk_1002F33E0);
  }
  else
  {
    uint64_t v35 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 56))(v65, 1, 1, v67);
  }
  unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  uint64_t v37 = v69;
  v36(v10, v70, v69);
  v36(&v10[v8[5]], v71, v37);
  *(void *)&v10[v8[6]] = v33;
  *(void *)&v10[v8[7]] = 2;
  uint64_t v38 = v63;
  *(void *)&v10[v8[8]] = v64;
  v10[v8[9]] = v31;
  uint64_t v39 = &v10[v8[10]];
  *(void *)uint64_t v39 = 0;
  char v39[8] = 1;
  v10[v8[11]] = 0;
  *(void *)&v10[v8[12]] = v38;
  uint64_t v40 = &v10[v8[13]];
  *(void *)uint64_t v40 = 0;
  v40[8] = 1;
  sub_10001323C(v35, (uint64_t)&v10[v8[14]], (uint64_t *)&unk_1002F33E0);
  sub_1001A1344((uint64_t)v10);
  uint64_t result = *(void **)(v25 + 16);
  if (result)
  {
    char v42 = v58;
    int v43 = v58;
    id v44 = [result invocationId];
    uint64_t v45 = (uint64_t)v61;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_release();
    sub_1000B68AC((uint64_t)v10);
    v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_hasPerformedStopTone] = 0;
    *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentRecordingStopTonePlaybackTask] = 0;
    swift_release();
    uint64_t v46 = sub_1000B61B8(v57, v42);
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v43 == 2)
    {
      uint64_t v48 = v74;
      uint64_t v47 = v75;
      BOOL v49 = sub_1000AB918();
      char v50 = (sub_1000A8060() & 1) == 0;
      int v51 = v49;
      uint64_t v53 = (uint64_t)v59;
      uint64_t v52 = (uint64_t)v60;
      sub_1001B689C((uint64_t)v59, (uint64_t)v60, v48, v47, v51, v50, v62 & 1, 0, 1u, 0, v46, v45);
    }
    else
    {
      uint64_t v53 = (uint64_t)v59;
      uint64_t v52 = (uint64_t)v60;
      sub_1001B689C((uint64_t)v59, (uint64_t)v60, v74, v75, 0, 0, v62 & 1, 0, 1u, 0, v46, v45);
    }
    uint64_t v54 = v69;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v45, v67);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    v55(v52, v54);
    return (void *)((uint64_t (*)(uint64_t, uint64_t))v55)(v53, v54);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000AC2B0(char a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_speechManager];
  if (a2)
  {
    sub_1001B7638();
  }
  else
  {
    uint64_t v8 = v7 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void, void, uint64_t, uint64_t))(v9 + 16))(0, 0, ObjectType, v9);
      swift_unknownObjectRelease();
    }
    uint64_t v11 = *(void *)(v7 + OBJC_IVAR____TtC17SequoiaTranslator13SpeechManager_resultContainer);
    if (v11) {
      [*(id *)(v11 + 48) endAudio];
    }
    sub_10018A180();
  }
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100011554(v12, (uint64_t)qword_10030E978);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v16 = String.init<A>(describing:)();
    sub_100202FD4(v16, v17, (uint64_t *)&v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "StopSpeech with source: %s.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *((void *)&v24 + 1) = &type metadata for TranslateFeatures;
  unint64_t v25 = sub_10000AB14();
  LOBYTE(v23) = 9;
  char v18 = isFeatureEnabled(_:)();
  uint64_t result = sub_10000AB68((uint64_t)&v23);
  if (v18)
  {
    uint64_t v20 = OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_hasPerformedStopTone;
    if ((v4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_hasPerformedStopTone] & 1) == 0)
    {
      switch(a1)
      {
        case 2:
          swift_bridgeObjectRelease();
          goto LABEL_17;
        default:
          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0) {
            goto LABEL_19;
          }
LABEL_17:
          if (!sub_1000AB918()
            || (swift_getKeyPath(),
                swift_getKeyPath(),
                static Published.subscript.getter(),
                swift_release(),
                uint64_t result = swift_release(),
                v23 == 1))
          {
LABEL_19:
            *(void *)&v4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentRecordingStopTonePlaybackTask] = sub_10018C7EC();
            uint64_t result = swift_release();
          }
          v4[v20] = 1;
          break;
      }
    }
  }
  if (a3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v25 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
    uint64_t v22 = v4;
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000AC6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 8sub_10009073C(0, 0, 0) = a6;
  *(void *)(v7 + 88) = a7;
  *(unsigned char *)(v7 + 193) = a5;
  *(void *)(v7 + 72) = a4;
  uint64_t v8 = type metadata accessor for Locale();
  *(void *)(v7 + 96) = v8;
  *(void *)(v7 + 104) = *(void *)(v8 - 8);
  *(void *)(v7 + 112) = swift_task_alloc();
  *(void *)(v7 + 12sub_10009073C(0, 0, 0) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 128) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 136) = v10;
  *(void *)(v7 + 144) = v9;
  return _swift_task_switch(sub_1000AC804, v10, v9);
}

uint64_t sub_1000AC804()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    *(void *)(v0 + 4sub_10009073C(0, 0, 0) = &type metadata for TranslateFeatures;
    unint64_t v1 = sub_10000AB14();
    *(unsigned char *)(v0 + 16) = 9;
    *(void *)(v0 + 48) = v1;
    char v2 = isFeatureEnabled(_:)();
    sub_10000AB68(v0 + 16);
    if (v2)
    {
      uint64_t v3 = *(void *)(*(void *)(v0 + 72)
                     + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentRecordingStopTonePlaybackTask);
      *(void *)(v0 + 152) = v3;
      if (v3)
      {
        uint64_t v4 = qword_1002EE5D0;
        swift_retain();
        if (v4 != -1) {
          swift_once();
        }
        uint64_t v5 = type metadata accessor for Logger();
        sub_100011554(v5, (uint64_t)qword_10030E978);
        uint64_t v6 = Logger.logObject.getter();
        os_log_type_t v7 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v6, v7))
        {
          uint64_t v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v8 = 0;
          _os_log_impl((void *)&_mh_execute_header, v6, v7, "Waiting for existing recording stop task to finish.", v8, 2u);
          swift_slowDealloc();
        }

        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 16sub_10009073C(0, 0, 0) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_1000ACDBC;
        return Task<>.value.getter(v0 + 56, v3, &type metadata for String);
      }
    }
    if (*(unsigned char *)(v0 + 193) == 1)
    {
      __int16 v13 = *(_WORD *)(*(void *)(v0 + 72)
                     + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation);
      uint64_t v14 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
      BOOL v15 = (v13 & 0xFF00) == 0x200 || v13 == 2;
      if (v15) {
        char v16 = 0;
      }
      else {
        char v16 = v13 & 1;
      }
      BOOL v17 = !v15 && (v13 & 1) == 0;
      goto LABEL_37;
    }
    uint64_t v18 = *(void *)(v0 + 112);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v20 = *(void *)(v0 + 104);
    sub_100029624(*(void **)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24));
    dispatch thunk of TranslationResult.locale.getter();
    uint64_t v21 = Locale.ltIdentifier.getter();
    uint64_t v23 = v22;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v24 = Locale.ltIdentifier.getter();
    uint64_t v26 = v25;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v27(v18, v19);
    if (v21 == v24 && v23 == v26)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0)
      {
        v27(*(void *)(v0 + 120), *(void *)(v0 + 96));
        uint64_t v14 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
        char v16 = 0;
        BOOL v17 = 1;
        goto LABEL_37;
      }
    }
    v27(*(void *)(v0 + 120), *(void *)(v0 + 96));
    uint64_t v14 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
    BOOL v17 = 0;
    char v16 = 1;
LABEL_37:
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v34 = (char *)&dword_1002F3920 + dword_1002F3920;
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_1000AD3D8;
    uint64_t v31 = *(void *)(v0 + 72);
    uint64_t v32 = *(void *)(v0 + 88);
    return ((uint64_t (*)(uint64_t, void, BOOL, void, uint64_t, uint64_t, uint64_t, uint64_t))v34)(v32, 0, v17, v16 & 1, 1, v31, ObjectType, v14);
  }
  swift_release();
  if (*(unsigned char *)(v0 + 193) == 1 && sub_1000AB918())
  {
    uint64_t v10 = *(void *)(v0 + 72);
    if (*(unsigned char *)(v10 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible) == 1)
    {
      if ((*(_WORD *)(v10 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation) & 0xFF00) == 0x200) {
        int v11 = 2;
      }
      else {
        int v11 = *(unsigned __int16 *)(v10
      }
                                  + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation);
      sub_1000ABAC0(v11, 1);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1000ACDBC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1000ACEF4, v3, v2);
}

uint64_t sub_1000ACEF4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000ACF8C;
  return static Task<>.sleep(nanoseconds:)(100000000);
}

uint64_t sub_1000ACF8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1000AD5C0;
  }
  else {
    uint64_t v5 = sub_1000AD0C8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000AD0C8()
{
  swift_release();
  if (*(unsigned char *)(v0 + 193) == 1)
  {
    __int16 v1 = *(_WORD *)(*(void *)(v0 + 72)
                  + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation);
    uint64_t v2 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
    BOOL v3 = (v1 & 0xFF00) == 0x200 || v1 == 2;
    if (v3) {
      char v4 = 0;
    }
    else {
      char v4 = v1 & 1;
    }
    BOOL v5 = !v3 && (v1 & 1) == 0;
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 104);
  sub_100029624(*(void **)(v0 + 80), *(void *)(*(void *)(v0 + 80) + 24));
  dispatch thunk of TranslationResult.locale.getter();
  uint64_t v9 = Locale.ltIdentifier.getter();
  uint64_t v11 = v10;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v12 = Locale.ltIdentifier.getter();
  uint64_t v14 = v13;
  BOOL v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v15(v6, v7);
  if (v9 == v12 && v11 == v14)
  {
    swift_bridgeObjectRelease_n();
LABEL_15:
    v15(*(void *)(v0 + 120), *(void *)(v0 + 96));
    uint64_t v2 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
    BOOL v5 = 0;
    char v4 = 1;
    goto LABEL_17;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_15;
  }
  v15(*(void *)(v0 + 120), *(void *)(v0 + 96));
  uint64_t v2 = sub_1000B6908(&qword_1002EF2E0, (void (*)(uint64_t))&type metadata accessor for PersistedTranslation);
  char v4 = 0;
  BOOL v5 = 1;
LABEL_17:
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = (char *)&dword_1002F3920 + dword_1002F3920;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1000AD3D8;
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v20 = *(void *)(v0 + 88);
  return ((uint64_t (*)(uint64_t, void, BOOL, void, uint64_t, uint64_t, uint64_t, uint64_t))v22)(v20, 0, v5, v4 & 1, 1, v19, ObjectType, v2);
}

uint64_t sub_1000AD3D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_1000AD4F8, v3, v2);
}

uint64_t sub_1000AD4F8()
{
  swift_release();
  if (*(unsigned char *)(v0 + 193) == 1 && sub_1000AB918())
  {
    uint64_t v1 = *(void *)(v0 + 72);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_isVisible) == 1)
    {
      if ((*(_WORD *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation) & 0xFF00) == 0x200) {
        int v2 = 2;
      }
      else {
        int v2 = *(unsigned __int16 *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSpeechTranslation);
      }
      sub_1000ABAC0(v2, 1);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1000AD5C0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AD64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_10000B070(a1, &qword_1002F33C0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1000AD7D4(char a1)
{
  int v2 = v1;
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E978);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Resetting ConversationViewModel", v7, 2u);
    swift_slowDealloc();
  }

  sub_1000AB7B0();
  sub_1000AC2B0(3, 1, 1);
  sub_100234200();
  swift_getKeyPath();
  swift_getKeyPath();
  id v8 = v2;
  uint64_t result = static Published.subscript.setter();
  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v10 = v8;
    static Published.subscript.setter();
    swift_getKeyPath();
    swift_getKeyPath();
    id v11 = v10;
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_1000AD9C0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v1 & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        v1 == 1))
  {
    sub_1000AC2B0(4, 0, 1);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2) {
    return sub_100234200();
  }
  return result;
}

void sub_1000ADAFC()
{
  type metadata accessor for PersistedTranslation();
  if (swift_dynamicCastClass())
  {
    sub_100029624((void *)(*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session)+ OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store), *(void *)(*(void *)(v0 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session)+ OBJC_IVAR____TtC17SequoiaTranslator21TranslationSession_RD_store+ 24));
    swift_unknownObjectRetain();
    dispatch thunk of TranslationStore.toggleFavoriteBackground(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030E978);
    swift_unknownObjectRetain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136446210;
      swift_getObjectType();
      uint64_t v5 = _typeName(_:qualified:)();
      sub_100202FD4(v5, v6, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Attempt to favorite an unknown translation type %{public}s", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1000ADD3C()
{
  type metadata accessor for PersistedTranslation();
  uint64_t v0 = swift_dynamicCastClass();
  if (v0)
  {
    uint64_t v1 = (void *)v0;
    swift_unknownObjectRetain();
    sub_100229680(v1);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100011554(v2, (uint64_t)qword_10030E978);
    swift_unknownObjectRetain_n();
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      swift_getObjectType();
      uint64_t v6 = _typeName(_:qualified:)();
      sub_100202FD4(v6, v7, &v8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Attempt to delete an unknown translation type %{public}s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1000ADF54()
{
  uint64_t v1 = v0;
  id v2 = (id)_convertErrorToNSError(_:)();
  int v3 = sub_10000A1FC(v2);
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100011554(v4, (uint64_t)qword_10030E978);
  id v5 = v2;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    int v27 = v3;
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v10 = String.init<A>(describing:)();
    sub_100202FD4(v10, v11, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    id v12 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received error with reason '%{public}s': %@", (uint8_t *)v8, 0x16u);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    int v3 = v27;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v0;
    swift_slowDealloc();
  }
  else
  {
  }
  switch(BYTE2(v3))
  {
    case 1u:
      goto LABEL_9;
    case 6u:
      swift_getKeyPath();
      swift_getKeyPath();
      BYTE2(v28) = 6;
      LOWORD(v28) = v3;
      id v13 = v1;
      static Published.subscript.setter();
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v28) = 1;
      id v14 = v13;
      static Published.subscript.setter();

      break;
    case 5u:
LABEL_9:
      swift_getKeyPath();
      swift_getKeyPath();
      BYTE2(v28) = BYTE2(v3);
      LOWORD(v28) = v3;
      v1;
      static Published.subscript.setter();
      sub_1000AC2B0(1, 1, 0);

      return;
    default:
      id v15 = v5;
      char v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136446466;
        uint64_t v20 = String.init<A>(describing:)();
        sub_100202FD4(v20, v21, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2112;
        id v22 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v19 = v15;

        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Ignoring displaying an error because it's not allow-listed to display to the user: reason '%{public}s': %@", (uint8_t *)v18, 0x16u);
        sub_100007620((uint64_t *)&unk_1002F6DE0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Resetting ConversationViewModel", v25, 2u);
        swift_slowDealloc();
      }

      sub_1000AB7B0();
      sub_1000AC2B0(3, 1, 1);
      sub_100234200();
      swift_getKeyPath();
      swift_getKeyPath();
      BYTE2(v28) = 8;
      LOWORD(v28) = 0;
      id v26 = v1;
      static Published.subscript.setter();

      break;
  }
}

void sub_1000AE538()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)NSError);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithDomain:v1 code:14 userInfo:0];

  if (sub_1000A7EA4())
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100011554(v3, (uint64_t)qword_10030E978);
    id v4 = v2;
    id v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v7 = 138412290;
      id v9 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v8 = v4;

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Conversation view was active during XPC interruption: %@", v7, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v16 = v4;
    sub_1000ADF54();
  }
  else
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100011554(v10, (uint64_t)qword_10030E978);
    id v11 = v2;
    oslog = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      id v14 = (void *)swift_slowAlloc();
      *(_DWORD *)id v13 = 138412290;
      id v15 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v14 = v11;

      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "Conversation view was idle during XPC interruption, ignoring XPC error: %@", v13, 0xCu);
      sub_100007620((uint64_t *)&unk_1002F6DE0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void *sub_1000AE8DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 == 1) {
    return (void *)sub_1000AC2B0(0, 0, 1);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1) {
    sub_1000AC2B0(0, 1, 1);
  }
  return sub_1000ABAC0(0, 1);
}

void *sub_1000AE9D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v14 == 1)
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_100011554(v0, (uint64_t)qword_10030E978);
    char v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ending speech recognition for partner in partner tap", v3, 2u);
      swift_slowDealloc();
    }

    return (void *)sub_1000AC2B0(0, 0, 1);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v13 == 1)
    {
      if (qword_1002EE5D0 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100011554(v5, (uint64_t)qword_10030E978);
      os_log_type_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ending speech recognition for owner in partner tap", v8, 2u);
        swift_slowDealloc();
      }

      sub_1000AC2B0(0, 1, 1);
    }
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100011554(v9, (uint64_t)qword_10030E978);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting speech recognition for partner in partner tap", v12, 2u);
      swift_slowDealloc();
    }

    return sub_1000ABAC0(1, 1);
  }
}

void *sub_1000AED04(char a1, int a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v6) {
    return (void *)sub_1000AD9C0();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5) {
    return (void *)sub_1000AC2B0(a1, 0, 1);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v5 == 1) {
    return (void *)sub_1000AC2B0(a1, 0, 1);
  }
  else {
    return sub_1000ABAC0(a2, 1);
  }
}

void *sub_1000AEE64(char a1)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__selfAutoTranslateSessionId;
  swift_beginAccess();
  sub_1000344BC((uint64_t)v5, v7, (uint64_t *)&unk_1002F33E0);
  swift_endAccess();
  if (sub_1000AB918()) {
    return sub_1000AED04(0, 2);
  }
  if (a1) {
    return sub_1000ABAC0(2, 0);
  }
  return (void *)sub_1000AC2B0(0, 0, 1);
}

uint64_t sub_1000AEFA4()
{
  uint64_t v1 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  os_log_type_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v13 = (char *)&v22 - v12;
  uint64_t v23 = v0;
  uint64_t v14 = v0 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSourceLocale;
  swift_beginAccess();
  sub_10000C3A4(v14, (uint64_t)v6, (uint64_t *)&unk_1002F4110);
  id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1, v7) == 1) {
    return sub_10000B070((uint64_t)v6, (uint64_t *)&unk_1002F4110);
  }
  os_log_type_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  uint64_t v18 = v23 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastTargetLocale;
  swift_beginAccess();
  sub_10000C3A4(v18, (uint64_t)v4, (uint64_t *)&unk_1002F4110);
  if (v15(v4, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return sub_10000B070((uint64_t)v4, (uint64_t *)&unk_1002F4110);
  }
  else
  {
    v17(v11, v4, v7);
    uint64_t v19 = *(void *)(v23 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText);
    uint64_t v20 = *(void *)(v23 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1001A1818(v19, v20, (uint64_t)v13, (uint64_t)v11);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v11, v7);
    return ((uint64_t (*)(char *, uint64_t))v21)(v13, v7);
  }
}

uint64_t sub_1000AF29C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v2 && (sub_1000194BC(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11), (v9 & 0xFC) == 0)) {
    return qword_10024E510[(char)v9];
  }
  else {
    return 1;
  }
}

id sub_1000AF394()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ConversationViewModel();
  [super dealloc];
}

uint64_t sub_1000AF7B0()
{
  return type metadata accessor for ConversationViewModel();
}

uint64_t type metadata accessor for ConversationViewModel()
{
  uint64_t result = qword_1002F38A8;
  if (!qword_1002F38A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000AF804()
{
  sub_1000AFC2C(319, (unint64_t *)&qword_1002F1528, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    sub_1000AFBD4();
    if (v1 <= 0x3F)
    {
      sub_100022CC4(319, &qword_1002F38C8, &qword_1002F2E18);
      if (v2 <= 0x3F)
      {
        sub_100022CC4(319, &qword_1002F38D0, &qword_1002F38D8);
        if (v3 <= 0x3F)
        {
          sub_100022CC4(319, (unint64_t *)&qword_1002F32F0, &qword_1002F1378);
          if (v4 <= 0x3F)
          {
            sub_100022CC4(319, &qword_1002F1560, &qword_1002F1568);
            if (v5 <= 0x3F)
            {
              sub_100022CC4(319, &qword_1002F1570, &qword_1002F1578);
              if (v6 <= 0x3F)
              {
                sub_1000AFC2C(319, (unint64_t *)&qword_1002F6D40, (uint64_t (*)(uint64_t))&type metadata accessor for Locale, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
                if (v7 <= 0x3F)
                {
                  sub_1000AFC2C(319, (unint64_t *)&qword_1002F38E0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
                  if (v8 <= 0x3F) {
                    swift_updateClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1000AFBD4()
{
  if (!qword_1002F9EF0)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002F9EF0);
    }
  }
}

void sub_1000AFC2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ConversationViewModel.Side(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AFD5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationViewModel.Side()
{
  return &type metadata for ConversationViewModel.Side;
}

unint64_t sub_1000AFD98()
{
  unint64_t result = qword_1002F38E8;
  if (!qword_1002F38E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1002F38E8);
  }
  return result;
}

uint64_t sub_1000AFDEC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ConversationViewModel();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000AFE30(char a1, uint64_t a2)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  id v9 = v2;
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  *(unsigned char *)(v11 + 32) = a1;
  *(void *)(v11 + 4sub_10009073C(0, 0, 0) = a2;
  *(void *)(v11 + 48) = v9;
  sub_100056780((uint64_t)v7, (uint64_t)&unk_1002F3940, v11);
  return swift_release();
}

uint64_t sub_1000AFF64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1000295C0(a1, (uint64_t)v14);
  sub_10000C3A4(a2, (uint64_t)v13, (uint64_t *)&unk_1002F33F0);
  type metadata accessor for MainActor();
  id v9 = v2;
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  sub_100048DE4(v14, (uint64_t)(v11 + 4));
  sub_10001323C((uint64_t)v13, (uint64_t)(v11 + 9), (uint64_t *)&unk_1002F33F0);
  v11[14] = v9;
  sub_100056780((uint64_t)v7, (uint64_t)&unk_1002F3930, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1000B00D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1000295C0(a1, (uint64_t)v14);
  sub_1000295C0(a2, (uint64_t)v13);
  type metadata accessor for MainActor();
  id v9 = v2;
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  sub_100048DE4(v14, (uint64_t)(v11 + 5));
  sub_100048DE4(v13, (uint64_t)(v11 + 10));
  sub_100056780((uint64_t)v7, (uint64_t)&unk_1002F3908, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1000B022C(uint64_t a1)
{
  uint64_t v3 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_errorRetain();
  id v7 = v1;
  uint64_t v8 = static MainActor.shared.getter();
  id v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  void v9[4] = a1;
  void v9[5] = v7;
  sub_100056780((uint64_t)v5, (uint64_t)&unk_1002F38F8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1000B0358(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v23 = a3;
  uint64_t v8 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v15 = *v4;
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_10000C3A4(a2, (uint64_t)v24, (uint64_t *)&unk_1002F33F0);
  sub_1000B63E4(a1, (uint64_t)v11);
  type metadata accessor for MainActor();
  swift_errorRetain();
  id v17 = v15;
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 89) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v18;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  *(void *)(v20 + 32) = a4;
  sub_10001323C((uint64_t)v24, v20 + 40, (uint64_t *)&unk_1002F33F0);
  *(void *)(v20 + 8sub_10009073C(0, 0, 0) = v17;
  *(unsigned char *)(v20 + 88) = v23;
  sub_1000B65F4((uint64_t)v11, v20 + v19);
  sub_100056780((uint64_t)v14, (uint64_t)&unk_1002F3950, v20);
  return swift_release();
}

uint64_t sub_1000B0570(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 4sub_10009073C(0, 0, 0) = a5;
  *(void *)(v6 + 48) = a6;
  *(unsigned char *)(v6 + 94) = a4;
  uint64_t v7 = type metadata accessor for Locale();
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = *(void *)(v7 - 8);
  *(void *)(v6 + 72) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 8sub_10009073C(0, 0, 0) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B0668, v9, v8);
}

uint64_t sub_1000B0668()
{
  uint64_t v27 = v0;
  swift_release();
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030E978);
  swift_bridgeObjectRetain_n();
  unint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 40);
    int v5 = *(unsigned __int8 *)(v0 + 94);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 67109378;
    *(_DWORD *)(v0 + 88) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 8) = 2082;
    *(void *)(v0 + 24) = v4;
    sub_100007620(&qword_1002F2058);
    uint64_t v7 = Optional.debugDescription.getter();
    *(void *)(v0 + 32) = sub_100202FD4(v7, v8, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Speech: listening status changed to %{BOOL}d, locales: %{public}s", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(v0 + 40))
  {
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = (void *)sub_1000A70C0(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v14 = *(void **)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v15 = Locale.identifier.getter();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v18(v11, v13);
  LOBYTE(v15) = sub_1000A6C4C(v15, v17, v10);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 92) = v15 & 1;
  id v19 = v14;
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v20 = Locale.identifier.getter();
  uint64_t v22 = v21;
  v18(v11, v13);
  LOBYTE(v13) = sub_1000A6C4C(v20, v22, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 93) = v13 & 1;
  id v23 = v19;
  static Published.subscript.setter();
  swift_task_dealloc();
  os_log_type_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1000B0A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  uint64_t v7 = type metadata accessor for Locale();
  v6[20] = v7;
  v6[21] = *(void *)(v7 - 8);
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  unsigned char v6[24] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B0B78, v9, v8);
}

uint64_t sub_1000B0B78()
{
  unint64_t v2 = *(void **)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  sub_100029624(v2, v2[3]);
  uint64_t v3 = AnnotatedResult.displayString.getter();
  uint64_t v5 = v4;
  sub_10000C3A4(v1, v0 + 56, (uint64_t *)&unk_1002F33F0);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v31 = v3;
  if (!v6)
  {
    uint64_t v8 = (uint64_t *)&unk_1002F33F0;
    uint64_t v9 = v0 + 56;
LABEL_9:
    sub_10000B070(v9, v8);
    unint64_t v29 = 0xE000000000000000;
    uint64_t v30 = 0;
    goto LABEL_10;
  }
  sub_100029624((void *)(v0 + 56), v6);
  uint64_t v7 = dispatch thunk of TranslationResult.alternatives.getter();
  if (*(void *)(v7 + 16))
  {
    sub_1000295C0(v7 + 32, v0 + 16);
  }
  else
  {
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
    sub_10000AB68(v0 + 56);
    uint64_t v8 = &qword_1002FA730;
    uint64_t v9 = v0 + 16;
    goto LABEL_9;
  }
  sub_100029624((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v10 = TranslationAlternative.displayString.getter();
  unint64_t v29 = v11;
  uint64_t v30 = v10;
  sub_10000AB68(v0 + 16);
  sub_10000AB68(v0 + 56);
LABEL_10:
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v12 = *(void *)(v0 + 184);
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 168);
  sub_100029624(*(void **)(v0 + 136), v2[3]);
  dispatch thunk of AnnotatedResult.locale.getter();
  uint64_t v16 = Locale.identifier.getter();
  uint64_t v18 = v17;
  id v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v19(v12, v15);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v20 = Locale.identifier.getter();
  uint64_t v22 = v21;
  v19(v13, v15);
  if (v16 == v20 && v18 == v22)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v23 = 0;
  }
  else
  {
    int v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = ~v24 & 1;
  }
  uint64_t v25 = *(void **)(v0 + 152);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 96) = v23;
  *(void *)(v0 + 104) = v31;
  *(void *)(v0 + 112) = v5;
  *(void *)(v0 + 12sub_10009073C(0, 0, 0) = v30;
  *(void *)(v0 + 128) = v29;
  id v26 = v25;
  static Published.subscript.setter();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1000B0E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  void v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B0F38, v8, v7);
}

uint64_t sub_1000B0F38()
{
  uint64_t v1 = (void *)v0[4];
  unint64_t v2 = (char *)v0[2];
  uint64_t v3 = (void *)v0[3];
  swift_release();
  sub_1000AC2B0(2, 0, 1);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  uint64_t v6 = sub_100029624(v3, v4);
  sub_1000B5348((uint64_t)v6, v1, 1, v2, v4, v5);
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000B0FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B107C, v7, v6);
}

uint64_t sub_1000B107C()
{
  swift_release();
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030E978);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Speech manager failed to translate: %@", v4, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1000ADF54();
  sub_1000AC2B0(1, 0, 1);
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000B1294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 296) = a7;
  *(void *)(v8 + 184) = a6;
  *(void *)(v8 + 192) = a8;
  *(void *)(v8 + 168) = a4;
  *(void *)(v8 + 176) = a5;
  uint64_t v9 = type metadata accessor for SpeechResultOrigin();
  *(void *)(v8 + 20sub_10009073C(0, 0, 0) = v9;
  *(void *)(v8 + 208) = *(void *)(v9 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Locale();
  *(void *)(v8 + 224) = v10;
  *(void *)(v8 + 232) = *(void *)(v10 - 8);
  *(void *)(v8 + 24sub_10009073C(0, 0, 0) = swift_task_alloc();
  *(void *)(v8 + 248) = swift_task_alloc();
  *(void *)(v8 + 256) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for StoredSpeechResult();
  *(void *)(v8 + 264) = v11;
  *(void *)(v8 + 272) = *(void *)(v11 - 8);
  *(void *)(v8 + 28sub_10009073C(0, 0, 0) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 288) = static MainActor.shared.getter();
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B1464, v13, v12);
}

uint64_t sub_1000B1464()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  if (!v1)
  {
    sub_10000C3A4(*(void *)(v0 + 176), v0 + 56, (uint64_t *)&unk_1002F33F0);
    if (!*(void *)(v0 + 80))
    {
      sub_10000B070(v0 + 56, (uint64_t *)&unk_1002F33F0);
      if (qword_1002EE5D0 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_100011554(v21, (uint64_t)qword_10030E978);
      os_log_type_t v3 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v3, v22)) {
        goto LABEL_7;
      }
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v22, "Expected a translation result, but received nil instead", v23, 2u);
LABEL_6:
      swift_slowDealloc();
LABEL_7:

      goto LABEL_34;
    }
    uint64_t v7 = v0 + 16;
    sub_100048DE4((long long *)(v0 + 56), v0 + 16);
    sub_1000A73B0();
    uint64_t v8 = sub_1001D7AF0();
    unint64_t v10 = v9;
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0) {
      uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (v11 || (sub_1000A8060() & 1) != 0) {
      *(unsigned char *)(*(void *)(v0 + 184) + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_redactTargetText) = 0;
    }
    if (*(unsigned char *)(v0 + 296) == 1)
    {
      uint64_t v12 = *(void *)(v0 + 272);
      uint64_t v13 = *(void *)(v0 + 280);
      uint64_t v14 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 264);
      uint64_t v15 = *(void *)(v0 + 224);
      uint64_t v16 = *(void *)(v0 + 232);
      uint64_t v18 = *(void *)(v0 + 208);
      uint64_t v17 = *(void *)(v0 + 216);
      uint64_t v19 = *(void *)(v0 + 192);
      uint64_t v43 = *(void *)(v0 + 200);
      uint64_t v45 = *(char **)(v0 + 184);
      uint64_t v20 = type metadata accessor for StreamingRequestInfo(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, v19 + *(int *)(v20 + 24), v15);
      (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, enum case for SpeechResultOrigin.text(_:), v43);
      swift_bridgeObjectRetain();
      uint64_t v7 = v0 + 16;
      StoredSpeechResult.init(text:sanitizedText:locale:origin:)();
      sub_1000B4EB0(v13, (void *)(v0 + 16), 0, v45);
      sub_1000AB7B0();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v47);
LABEL_33:
      sub_10000AB68(v7);
      goto LABEL_34;
    }
    sub_100029624((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v24 = dispatch thunk of TranslationResult.alternatives.getter();
    if (*(void *)(v24 + 16))
    {
      sub_1000295C0(v24 + 32, v0 + 96);
    }
    else
    {
      *(void *)(v0 + 128) = 0;
      *(_OWORD *)(v0 + 96) = 0u;
      *(_OWORD *)(v0 + 112) = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v0 + 120);
    if (!v25)
    {
      sub_10000B070(v0 + 96, &qword_1002FA730);
      goto LABEL_33;
    }
    uint64_t v26 = *(void *)(v0 + 240);
    uint64_t v27 = *(void *)(v0 + 232);
    uint64_t v44 = *(void *)(v0 + 224);
    sub_100029624((void *)(v0 + 96), v25);
    uint64_t v46 = TranslationAlternative.displayString.getter();
    uint64_t v29 = v28;
    sub_10000AB68(v0 + 96);
    sub_100029624((void *)(v0 + 16), *(void *)(v0 + 40));
    dispatch thunk of TranslationResult.locale.getter();
    uint64_t v30 = Locale.ltIdentifier.getter();
    uint64_t v32 = v31;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v33 = Locale.ltIdentifier.getter();
    uint64_t v35 = v34;
    unint64_t v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v36(v26, v44);
    if (v30 == v33 && v32 == v35)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0)
      {
        uint64_t v38 = 0;
        goto LABEL_32;
      }
    }
    uint64_t v38 = 1;
LABEL_32:
    uint64_t v39 = *(void **)(v0 + 184);
    v36(*(void *)(v0 + 248), *(void *)(v0 + 224));
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)(v0 + 136) = v38;
    *(void *)(v0 + 144) = v46;
    *(void *)(v0 + 152) = v29;
    id v40 = v39;
    static Published.subscript.setter();
    uint64_t v7 = v0 + 16;
    goto LABEL_33;
  }
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100011554(v2, (uint64_t)qword_10030E978);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16sub_10009073C(0, 0, 0) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v48 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Exception while creating partial translation: %@", v5, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_6;
  }
  swift_errorRelease();
  swift_errorRelease();

LABEL_34:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

void *sub_1000B1AF4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v67 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v68 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v66 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100007620((uint64_t *)&unk_1002F4110);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = type metadata accessor for Locale();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v20 = __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText + 8);
  if (!v25) {
    goto LABEL_7;
  }
  uint64_t v63 = v24;
  uint64_t v64 = v23;
  uint64_t v65 = (char *)&v54 - v21;
  uint64_t v61 = v25;
  int v62 = v22;
  uint64_t v60 = v8;
  uint64_t v69 = a1;
  uint64_t v26 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastEnteredText);
  uint64_t v27 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastSourceLocale;
  swift_beginAccess();
  sub_10000C3A4(v27, (uint64_t)v15, (uint64_t *)&unk_1002F4110);
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v28(v15, 1, v16) == 1)
  {
    uint64_t v13 = v15;
LABEL_6:
    sub_10000B070((uint64_t)v13, (uint64_t *)&unk_1002F4110);
    a1 = v69;
LABEL_7:
    uint64_t v32 = type metadata accessor for SELFLoggingInvocationDescription();
    return (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a1, 1, 1, v32);
  }
  int v58 = v7;
  int v59 = (int *)v5;
  uint64_t v57 = v26;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v30 = v65;
  v29(v65, v15, v16);
  uint64_t v31 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_lastTargetLocale;
  swift_beginAccess();
  sub_10000C3A4(v31, (uint64_t)v13, (uint64_t *)&unk_1002F4110);
  if (v28(v13, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v16);
    goto LABEL_6;
  }
  uint64_t v34 = v62;
  uint64_t v56 = v17 + 32;
  uint64_t v55 = (void (*)(uint64_t, uint64_t, uint64_t))v29;
  v29(v62, v13, v16);
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation);
  unint64_t v36 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  v36(v63, v30, v16);
  v36(v64, v34, v16);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible)) {
    uint64_t v37 = 1;
  }
  else {
    uint64_t v37 = 2;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  uint64_t v54 = v35;
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v38 = v70;
  if (sub_1000AB918())
  {
    uint64_t v39 = v1 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel__selfAutoTranslateSessionId;
    swift_beginAccess();
    uint64_t v40 = v67;
    sub_10000C3A4(v39, v67, (uint64_t *)&unk_1002F33E0);
    uint64_t v41 = v60;
    uint64_t v42 = v68;
  }
  else
  {
    uint64_t v40 = v67;
    uint64_t v42 = v68;
    uint64_t v41 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v67, 1, 1, v60);
  }
  uint64_t v43 = (uint64_t)v58;
  uint64_t v44 = v55;
  v55((uint64_t)v58, v63, v16);
  uint64_t v45 = v59;
  v44(v43 + v59[5], v64, v16);
  *(void *)(v43 + v45[6]) = 1;
  *(void *)(v43 + v45[7]) = 1;
  *(void *)(v43 + v45[8]) = v37;
  *(unsigned char *)(v43 + v45[9]) = v38;
  uint64_t v46 = v43 + v45[10];
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  *(unsigned char *)(v43 + v45[11]) = 0;
  *(void *)(v43 + v45[12]) = 0;
  uint64_t v47 = v43 + v45[13];
  *(void *)uint64_t v47 = 0;
  *(unsigned char *)(v47 + 8) = 1;
  sub_10001323C(v40, v43 + v45[14], (uint64_t *)&unk_1002F33E0);
  uint64_t v48 = v54;
  sub_1001A1344(v43);
  uint64_t result = *(void **)(v48 + 16);
  if (result)
  {
    id v49 = [result invocationId];
    char v50 = v66;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    swift_release();

    sub_1000B68AC(v43);
    int v51 = (int *)type metadata accessor for SELFLoggingInvocationDescription();
    uint64_t v52 = (char *)v69;
    v44((uint64_t)v69 + v51[6], (uint64_t)v65, v16);
    v44((uint64_t)&v52[v51[7]], (uint64_t)v62, v16);
    uint64_t v53 = v61;
    *(void *)uint64_t v52 = v57;
    *((void *)v52 + 1) = v53;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v52[v51[5]], v50, v41);
    return (void *)(*(uint64_t (**)(char *, void, uint64_t, int *))(*((void *)v51 - 1) + 56))(v52, 0, 1, v51);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1000B222C@<X0>(void *a1@<X8>)
{
  return sub_1000B1AF4(a1);
}

uint64_t sub_1000B2250()
{
  swift_retain();
  sub_1001A1A44();

  return swift_release();
}

uint64_t sub_1000B229C()
{
  swift_unknownObjectRelease();
  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B22E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000496A4;
  return sub_1000B0FE4(a1, v4, v5, v7, v6);
}

uint64_t sub_1000B23A4@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

void sub_1000B23B8(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  v2;
  static Published.subscript.setter();
  sub_1001A5BD0();
}

void sub_1000B2434(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1000B24A0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B24B4(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B24C8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B24DC(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B24F0@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B2504(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B2518(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

double sub_1000B2584@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1000B260C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10008B75C(v2, v3, v4);
  id v6 = v5;
  return static Published.subscript.setter();
}

double sub_1000B26B4@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_1000B273C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1000B27C4@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000B2844(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1000B28B4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *(unsigned char *)(a1 + 2) = v4;
  *(_WORD *)a1 = v3;
  return result;
}

uint64_t sub_1000B293C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static Published.subscript.setter();
}

uint64_t sub_1000B29BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000B29D0()
{
  return static Published.subscript.setter();
}

double sub_1000B2A44@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 8sub_10009073C(0, 0, 0) = v8;
  return result;
}

uint64_t sub_1000B2ADC(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  uint64_t v12 = *a1;
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v8 = (void *)a1[9];
  uint64_t v10 = (void *)a1[10];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001959C(v12, v1, v2, v3, v4, v5, v6, v7, v9, v8, v10);
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1000B2BC8()
{
  swift_unknownObjectRelease();

  sub_10000AB68(v0 + 40);
  sub_10000AB68(v0 + 80);

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1000B2C18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100021B58;
  return sub_1000B0E9C(a1, v4, v5, v6, (uint64_t)(v1 + 5), (uint64_t)(v1 + 10));
}

uint64_t sub_1000B2CE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B2F1C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2D04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3088(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2D24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3364(a1, a2, a3, (void *)*v3, &qword_1002F39B8, &qword_1002F39C0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2D54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3364(a1, a2, a3, (void *)*v3, &qword_1002F39C8, &qword_1002F39D0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2D84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3364(a1, a2, a3, (void *)*v3, &qword_1002F39D8, &qword_1002F39E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2DB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B31F4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2DD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3364(a1, a2, a3, (void *)*v3, &qword_1002F39F0, &qword_1002F39F8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2E04(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B350C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2E24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3698(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2E44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3ADC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2E64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3C3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2E84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3DC8(a1, a2, a3, (void *)*v3, &qword_1002F39E8, (uint64_t (*)(void))&type metadata accessor for StoredTranslationAlternative);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2EC0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B3DC8(a1, a2, a3, (void *)*v3, &qword_1002FC500, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000B2EFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B4010(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1000B2F1C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002EE8A0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3088(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002FCAC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B31F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3968);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3364(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100007620(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    long long v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_100007620(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B350C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F39A8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100007620(&qword_1002F39B0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3698(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3148);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3804(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002FC4D0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B398C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3998);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3ADC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3A10);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3C3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3A08);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B3DC8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100007620(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  os_log_type_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B4010(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100007620(&qword_1002F3960);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B4170(uint64_t a1, char a2, char a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 232) = a7;
  *(void *)(v8 + 24sub_10009073C(0, 0, 0) = a8;
  *(unsigned char *)(v8 + 354) = a5;
  *(unsigned char *)(v8 + 353) = a4;
  *(unsigned char *)(v8 + 352) = a3;
  *(unsigned char *)(v8 + 351) = a2;
  *(void *)(v8 + 216) = a1;
  *(void *)(v8 + 224) = a6;
  uint64_t v9 = type metadata accessor for UUID();
  *(void *)(v8 + 248) = v9;
  *(void *)(v8 + 256) = *(void *)(v9 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  sub_100007620((uint64_t *)&unk_1002F33E0);
  *(void *)(v8 + 272) = swift_task_alloc();
  *(void *)(v8 + 28sub_10009073C(0, 0, 0) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 288) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 296) = v11;
  *(void *)(v8 + 304) = v10;
  return _swift_task_switch(sub_1000B42B8, v11, v10);
}

uint64_t sub_1000B42B8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((*(unsigned char *)(v0 + 350) & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        *(unsigned char *)(v0 + 349) == 1))
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100011554(v1, (uint64_t)qword_10030E978);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Resetting ConversationViewModel", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void **)(v0 + 224);

    sub_1000AB7B0();
    sub_1000AC2B0(3, 1, 1);
    sub_100234200();
    swift_getKeyPath();
    swift_getKeyPath();
    *(unsigned char *)(v0 + 346) = 8;
    *(_WORD *)(v0 + 344) = 0;
    id v6 = v5;
    static Published.subscript.setter();
  }
  *(void *)(v0 + 312) = *(void *)(*(void *)(v0 + 224)
                                    + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_deviceHelper);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v7 = *(void *)(v0 + 112);
  if (v7)
  {
    uint64_t v8 = *(void *)(v0 + 160);
    sub_1000194BC(*(void *)(v0 + 104), v7, *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), v8, *(void *)(v0 + 168), *(void **)(v0 + 176), *(void **)(v0 + 184));
    char v9 = *(unsigned char *)(v0 + 352);
    if (v8 == 2)
    {
      if (*(unsigned char *)(v0 + 352))
      {
LABEL_18:
        char v12 = 1;
        goto LABEL_20;
      }
    }
    else
    {
      if (v8 != 3) {
        char v9 = 0;
      }
      if (v9) {
        goto LABEL_18;
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 347) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v10 = *(void *)(v0 + 24);
    if (v10)
    {
      uint64_t v11 = *(void *)(v0 + 72);
      sub_1000194BC(*(void *)(v0 + 16), v10, *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v11, *(void *)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96));
      char v12 = (unint64_t)(v11 - 4) < 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  char v12 = 0;
LABEL_20:
  *(unsigned char *)(v0 + 355) = v12;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 200);
  *(void *)(v0 + 32sub_10009073C(0, 0, 0) = v14;
  unint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v15;
  *unint64_t v15 = v0;
  v15[1] = sub_1000B4754;
  uint64_t v16 = *(void *)(v0 + 240);
  char v17 = *(unsigned char *)(v0 + 351);
  uint64_t v18 = *(void *)(v0 + 216);
  return sub_100231610(v18, v16, v17, v13, v14, 0, v12, 1);
}

uint64_t sub_1000B4754()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_1000B4B18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_1000B4870;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000B4870()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 355);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_faceToFaceVisible) == 1)
  {
    if ((*(unsigned char *)(v0 + 348) & (v1 ^ 1) & 1) == 0)
    {
LABEL_3:
      uint64_t v3 = 1;
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(v0 + 348) & (v1 ^ 1) & *(unsigned char *)(v0 + 353) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v3 = sub_1000AF29C();
LABEL_6:
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  int v6 = *(unsigned __int8 *)(v0 + 351);
  (*(void (**)(uint64_t, uint64_t))(v4 + 128))(v5, v4);
  if (v6) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = 2;
  }
  double v8 = (*(double (**)(uint64_t, uint64_t))(v4 + 96))(v5, v4);
  uint64_t v9 = 2;
  uint64_t v10 = 3;
  uint64_t v11 = 3;
  if (v8 == 1.25) {
    uint64_t v11 = 4;
  }
  if (v8 != 1.0) {
    uint64_t v10 = v11;
  }
  if (v8 != 0.75) {
    uint64_t v9 = v10;
  }
  if (v8 == 0.5) {
    uint64_t v12 = 1;
  }
  else {
    uint64_t v12 = v9;
  }
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 248);
  uint64_t v15 = *(void *)(v0 + 256);
  sub_10000C3A4(*(void *)(v0 + 280), v13, (uint64_t *)&unk_1002F33E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10000B070(*(void *)(v0 + 272), (uint64_t *)&unk_1002F33E0);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 248);
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v19 = *(unsigned __int8 *)(v0 + 354);
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v16, *(void *)(v0 + 272), v17);
    uint64_t v20 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v20 translationTTSPlayedWithInvocationId:isa sourceOrTargetLanguage:v7 isAutoplayTranslation:v19 ttsPlaybackSpeed:v12 audioChannel:v3];

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }
  sub_10000B070(*(void *)(v0 + 280), (uint64_t *)&unk_1002F33E0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1000B4B18()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100011554(v1, (uint64_t)qword_10030E978);
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    uint64_t v6 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 208) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Exception while toggling TTS: %@", v4, 0xCu);
    sub_100007620((uint64_t *)&unk_1002F6DE0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1000B4D2C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1000B4DCC(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1000B4EB0(uint64_t a1, void *a2, int a3, char *a4)
{
  int v43 = a3;
  uint64_t v44 = a2;
  uint64_t v6 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StoredSpeechResult();
  uint64_t v47 = v12;
  uint64_t v13 = sub_1000B6908(&qword_1002F0F78, (void (*)(uint64_t))&type metadata accessor for StoredSpeechResult);
  uint64_t v48 = v13;
  uint64_t v14 = sub_100014830(v46);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v14, a1, v12);
  uint64_t v15 = *(void **)(*(void *)&a4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation]
                 + 16);
  if (v15)
  {
    swift_retain();
    id v16 = [v15 invocationId];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
    swift_release();
  }
  else
  {
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  swift_retain();
  sub_1001A1C14();
  swift_release();
  sub_100029624(v46, v47);
  uint64_t v19 = (uint64_t)v14;
  if ((dispatch thunk of SpeechResult.isEmpty()() & 1) == 0)
  {
    uint64_t v20 = *(void *)&a4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session];
    uint64_t v41 = v13;
    uint64_t v42 = v8;
    uint64_t v21 = (uint64_t)v11;
    uint64_t v23 = v44[3];
    uint64_t v22 = v44[4];
    uint64_t v24 = sub_100029624(v44, v23);
    uint64_t v40 = v22;
    unint64_t v11 = (char *)v21;
    uint64_t v25 = v12;
    uint64_t v26 = v23;
    char v27 = v43;
    uint64_t v28 = (uint64_t)v42;
    uint64_t v29 = sub_10022C1C4(v19, (uint64_t)v24, 0, v21, v20, v25, v26, v41, v40);
    if (v29)
    {
      uint64_t v30 = (void *)v29;
      uint64_t v31 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v28, 1, 1, v31);
      sub_1000295C0((uint64_t)v44, (uint64_t)v45);
      type metadata accessor for MainActor();
      uint64_t v32 = a4;
      uint64_t v33 = v30;
      uint64_t v34 = static MainActor.shared.getter();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      *(void *)(v35 + 24) = &protocol witness table for MainActor;
      *(void *)(v35 + 32) = v32;
      *(unsigned char *)(v35 + 4sub_10009073C(0, 0, 0) = v27 & 1;
      sub_100048DE4(v45, v35 + 48);
      *(void *)(v35 + 88) = v33;
      sub_1000AD64C(v28, (uint64_t)&unk_1002F3958, v35);
      swift_release();
LABEL_12:

      goto LABEL_13;
    }
  }
  if (dispatch thunk of SpeechResult.isEmpty()())
  {
    if (qword_1002EE5D0 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100011554(v36, (uint64_t)qword_10030E978);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v37))
    {
      char v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v37, "Not storing speech translation result, as speech result is empty.", v38, 2u);
      swift_slowDealloc();
    }
    goto LABEL_12;
  }
LABEL_13:
  sub_10000B070((uint64_t)v11, (uint64_t *)&unk_1002F33E0);
  return sub_10000AB68((uint64_t)v46);
}

uint64_t sub_1000B5348(uint64_t a1, void *a2, int a3, char *a4, uint64_t a5, uint64_t a6)
{
  int v46 = a3;
  uint64_t v47 = a2;
  uint64_t v10 = sub_100007620(&qword_1002F33C0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100007620((uint64_t *)&unk_1002F33E0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  id v16 = sub_100014830(v49);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v16, a1, a5);
  uint64_t v17 = *(void **)(*(void *)&a4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_currentSelfLoggingInvocation]
                 + 16);
  if (v17)
  {
    swift_retain();
    id v18 = [v17 invocationId];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 0, 1, v19);
    swift_release();
  }
  else
  {
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 1, 1, v20);
  }
  swift_retain();
  sub_1001A1C14();
  swift_release();
  sub_100029624(v49, v50);
  uint64_t v21 = (uint64_t)v16;
  if (dispatch thunk of SpeechResult.isEmpty()()) {
    goto LABEL_7;
  }
  uint64_t v22 = *(void *)&a4[OBJC_IVAR____TtC17SequoiaTranslator21ConversationViewModel_session];
  uint64_t v44 = a6;
  uint64_t v45 = a4;
  uint64_t v23 = v15;
  uint64_t v25 = v47[3];
  uint64_t v24 = v47[4];
  uint64_t v26 = sub_100029624(v47, v25);
  uint64_t v43 = v24;
  uint64_t v15 = v23;
  uint64_t v27 = (uint64_t)v23;
  uint64_t v28 = v25;
  char v29 = v46;
  uint64_t v30 = v45;
  uint64_t v31 = sub_10022C1C4(v21, (uint64_t)v26, 0, v27, v22, a5, v28, v44, v43);
  if (!v31)
  {
LABEL_7:
    if (dispatch thunk of SpeechResult.isEmpty()())
    {
      if (qword_1002EE5D0 != -1) {
        swift_once();
      }
      uint64_t v38 = type metadata accessor for Logger();
      sub_100011554(v38, (uint64_t)qword_10030E978);
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Not storing speech translation result, as speech result is empty.", v41, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    uint64_t v32 = (void *)v31;
    uint64_t v33 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    sub_1000295C0((uint64_t)v47, (uint64_t)v48);
    type metadata accessor for MainActor();
    id v34 = v30;
    id v35 = v32;
    uint64_t v36 = static MainActor.shared.getter();
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = &protocol witness table for MainActor;
    *(void *)(v37 + 32) = v34;
    *(unsigned char *)(v37 + 4sub_10009073C(0, 0, 0) = v29 & 1;
    sub_100048DE4(v48, v37 + 48);
    *(void *)(v37 + 88) = v35;
    sub_1000AD64C((uint64_t)v12, (uint64_t)&unk_1002F3918, v37);

    swift_release();
  }
  sub_10000B070((uint64_t)v15, (uint64_t *)&unk_1002F33E0);
  return sub_10000AB68((uint64_t)v49);
}

uint64_t sub_1000B57C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = v1 + 48;
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000496A4;
  return sub_1000AC6F8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000B589C@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000B58C8()
{
  return sub_100056CA8();
}

uint64_t sub_1000B58F0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A6F30(a1, a2, a3, a4, (uint64_t)&unk_10024DF38, (uint64_t)&unk_10024DF60, 0x800000010025D1C0);
}

uint64_t sub_1000B5928@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B5950(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B5978@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B59A0(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B59D0@<X0>(unsigned char *a1@<X8>)
{
  return sub_10007860C(a1);
}

uint64_t sub_1000B5A0C()
{
  swift_unknownObjectRelease();
  sub_10000AB68(v0 + 32);
  if (*(void *)(v0 + 96)) {
    sub_10000AB68(v0 + 72);
  }

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1000B5A64(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = (uint64_t)(v1 + 9);
  uint64_t v8 = v1[14];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1000B0A70(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1000B5B38()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000B5B80(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000496A4;
  return sub_1000B0570(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1000B5C48()
{
  return sub_100056CA8();
}

uint64_t sub_1000B5C70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000A6F30(a1, a2, a3, a4, (uint64_t)&unk_10024E178, (uint64_t)&unk_10024E1A0, 0x800000010025D230);
}

uint64_t sub_1000B5CA8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1000B5CB8(void *a1, uint64_t a2, char *a3)
{
  return sub_1000B5CF4(a1, a2, a3, type metadata accessor for ComposeTranslationViewModel, (uint64_t)&off_1002CB410, (uint64_t)sub_1000B6B00, (uint64_t)&unk_1002CCC18);
}

char *sub_1000B5CF4(void *a1, uint64_t a2, char *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  uint64_t v37 = a1;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100007620(&qword_1002F39A0);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46[3] = a4(0);
  v46[4] = a5;
  v46[0] = a2;
  *((void *)a3 + 2) = [objc_allocWithZone((Class)_LTTextStreamingConfiguration) init];
  *((void *)a3 + 3) = 0;
  *((void *)a3 + 4) = 0x3FF8000000000000;
  *((void *)a3 + 5) = 0;
  uint64_t v21 = &a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSourceLocale];
  uint64_t v22 = type metadata accessor for Locale();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v23(&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTargetLocale], 1, 1, v22);
  uint64_t v24 = &a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation];
  *((void *)v24 + 4) = 0;
  *(_OWORD *)uint64_t v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  uint64_t v25 = &a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest];
  uint64_t v26 = type metadata accessor for StreamingRequestInfo(0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v25, 1, 1, v26);
  a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_streamingManagerState] = 0;
  v27(&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_partialTranslationRequest], 1, 1, v26);
  *(void *)&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_finalTranslationRequestsQueue] = _swiftEmptyArrayStorage;
  uint64_t v28 = v37;
  *(void *)&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_translator] = v37;
  sub_1000295C0((uint64_t)v46, (uint64_t)&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_delegate]);
  id v29 = v28;
  static Date.now.getter();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedTimestamp], v20, v17);
  uint64_t v30 = &a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastSubmittedText];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0xE000000000000000;
  uint64_t v44 = 0;
  long long aBlock = 0u;
  long long v43 = 0u;
  uint64_t v31 = (uint64_t)&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslation];
  swift_beginAccess();
  sub_1000344BC((uint64_t)&aBlock, v31, (uint64_t *)&unk_1002F33F0);
  swift_endAccess();
  v27(v16, 1, 1, v26);
  uint64_t v32 = (uint64_t)&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_lastTranslatedRequest];
  swift_beginAccess();
  sub_1000344BC((uint64_t)v16, v32, &qword_1002F39A0);
  swift_endAccess();
  UUID.init()();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&a3[OBJC_IVAR____TtC17SequoiaTranslator31TextStreamingTranslationManager_currentRequestId], v13, v39);
  sub_1001D88B4();
  uint64_t v33 = self;
  uint64_t v44 = v40;
  uint64_t v45 = a3;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v43 = sub_1000B2434;
  *((void *)&v43 + 1) = v41;
  id v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v33 textStreamingConfigurationWithCompletion:v34];
  _Block_release(v34);
  sub_10000AB68((uint64_t)v46);
  return a3;
}

uint64_t sub_1000B61B8(uint64_t a1, char a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v3 = 8;
  if (!v6) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 65;
  if ((a2 & 1) == 0) {
    uint64_t v4 = 1;
  }
  return v3 | v4;
}

unint64_t sub_1000B6250(Swift::String string)
{
  id object = string._object;
  v2._id countAndFlagsBits = string._countAndFlagsBits;
  v2._id object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1002C84C0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

void sub_1000B629C()
{
  if (qword_1002EE5D0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100011554(v0, (uint64_t)qword_10030E978);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    Swift::String v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::String v2 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Speech: input detected at %f level.", v2, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000B63E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B6448()
{
  os_log_type_t v1 = (int *)type metadata accessor for StreamingRequestInfo(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  swift_errorRelease();
  if (*(void *)(v0 + 64)) {
    sub_10000AB68(v0 + 40);
  }
  uint64_t v4 = (v2 + 89) & ~v2;
  uint64_t v12 = v4 + v3;

  uint64_t v5 = v0 + v4;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = v5 + v1[6];
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v5 + v1[7], v9);
  v7(v5 + v1[10], v6);

  return _swift_deallocObject(v0, v12, v2 | 7);
}

uint64_t sub_1000B65F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreamingRequestInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B6658(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StreamingRequestInfo(0) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = v1 + 40;
  uint64_t v9 = *(void *)(v1 + 80);
  char v10 = *(unsigned char *)(v1 + 88);
  uint64_t v11 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 89) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000496A4;
  return sub_1000B1294(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1000B6780()
{
  swift_unknownObjectRelease();

  sub_10000AB68(v0 + 48);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000B67D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = v1 + 48;
  uint64_t v9 = *(void *)(v1 + 88);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *char v10 = v2;
  v10[1] = sub_100021B58;
  return sub_1000AC6F8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1000B68AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SELFLoggingInvocationWrapper.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000B6908(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B6950()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B6988(uint64_t a1)
{
  return sub_1000AA348(a1);
}

uint64_t sub_1000B6990()
{
  return sub_1000AA494();
}

void sub_1000B6998()
{
}

uint64_t sub_1000B69A8@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B69D0(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

uint64_t sub_1000B6A00@<X0>(unsigned char *a1@<X8>)
{
  return sub_100069440(a1);
}

uint64_t sub_1000B6A28(uint64_t a1, void **a2)
{
  return sub_1000B2518(a1, a2);
}

double sub_1000B6A50@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000A6DB4(a1);
}

uint64_t sub_1000B6A78(uint64_t a1, void **a2)
{
  return sub_1000A6E44(a1, a2);
}

double sub_1000B6AA0@<D0>(_OWORD *a1@<X8>)
{
  return sub_1000A6DB4(a1);
}

uint64_t sub_1000B6AC8(uint64_t a1, void **a2)
{
  return sub_1000A6E44(a1, a2);
}

void sub_1000B6B00(void *a1)
{
  sub_1001D7D68(a1, v1);
}

uint64_t sub_1000B6B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_10009073C(0, 0, 0) = v2;
  return swift_retain();
}

uint64_t sub_1000B6B18()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for ConversationViewModel.ToggleSpeechActionOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000B6BECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConversationViewModel.ToggleSpeechActionOrigin()
{
  return &type metadata for ConversationViewModel.ToggleSpeechActionOrigin;
}

unint64_t sub_1000B6C28()
{
  unint64_t result = qword_1002F3A00;
  if (!qword_1002F3A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3A00);
  }
  return result;
}

uint64_t *sub_1000B6C84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    *uint64_t v12 = v14;
    v12[1] = v15;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1000B6E54(uint64_t a1)
{
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v3 = *(void *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_1000B6F4C(void *a1, void *a2, uint64_t a3)
{
  sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_100007620(&qword_1002F1058);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  *uint64_t v10 = v12;
  v10[1] = v13;
  swift_retain();
  return a1;
}

void *sub_1000B70D0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, (uint64_t *)&unk_1002F5770);
    sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  swift_retain();
  swift_release();
  *((void *)v10 + 1) = *((void *)v11 + 1);
  return a1;
}

char *sub_1000B7280(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5770);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100007620(&qword_1002F1058);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1000B7400(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10000B070((uint64_t)a1, (uint64_t *)&unk_1002F5770);
    uint64_t v6 = sub_100007620((uint64_t *)&unk_1002F5770);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100007620(&qword_1002F1058);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)&a1[v10] = *(void *)v12;
  swift_release();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  return a1;
}

uint64_t sub_1000B75B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000B75C4);
}

uint64_t sub_1000B75C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100007620(&qword_1002F1068);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v1sub_10009073C(0, 0, 0) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1000B7694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000B76A8);
}

uint64_t sub_1000B76A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100007620(&qword_1002F1068);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ConversationViewsMenu()
{
  uint64_t result = qword_1002F3A70;
  if (!qword_1002F3A70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000B77B4()
{
  sub_1000542E0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1000B7848()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B7864()
{
  return Picker.init(selection:label:content:)();
}

uint64_t sub_1000B7A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v122 = sub_100007620(&qword_1002F3AD8);
  __chkstk_darwin(v122);
  uint64_t v123 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v90 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100007620(&qword_1002F1200);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v113 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v11 = (char *)&v89 - v10;
  uint64_t v12 = sub_100007620(&qword_1002F1058);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v89 = (uint64_t)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v118 = (uint64_t)&v89 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v108 = (uint64_t)&v89 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v89 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v89 - v23;
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v89 - v25;
  uint64_t v121 = sub_100007620(&qword_1002EED40);
  uint64_t v27 = *(void *)(v121 - 8);
  uint64_t v28 = __chkstk_darwin(v121);
  uint64_t v112 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v114 = (char *)&v89 - v30;
  uint64_t v120 = sub_100007620(&qword_1002F3AE0);
  uint64_t v31 = __chkstk_darwin(v120);
  uint64_t v111 = (uint64_t)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v105 = (uint64_t)&v89 - v33;
  uint64_t v34 = sub_100007620(&qword_1002F3AE8);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v116 = (uint64_t)&v89 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v115 = (uint64_t)&v89 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v109 = (char *)&v89 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v110 = (uint64_t)&v89 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v102 = (char *)&v89 - v44;
  __chkstk_darwin(v43);
  uint64_t v119 = (uint64_t)&v89 - v45;
  uint64_t v96 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v95 = v46;
  LODWORD(v93) = v47;
  uint64_t v94 = v48;
  uint64_t v107 = a1;
  sub_100100194((uint64_t)v26);
  id v49 = *(void (**)(void))(v5 + 104);
  unsigned int v101 = enum case for UserInterfaceSizeClass.compact(_:);
  uint64_t v100 = v5 + 104;
  uint64_t v99 = (void (*)(uint64_t, void, uint64_t))v49;
  v49(v24);
  uint64_t v50 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
  uint64_t v98 = v5 + 56;
  id v97 = v50;
  v50((uint64_t)v24, 0, 1, v4);
  uint64_t v106 = v7;
  uint64_t v51 = (uint64_t)&v11[*(int *)(v7 + 48)];
  sub_10000C3A4((uint64_t)v26, (uint64_t)v11, &qword_1002F1058);
  sub_10000C3A4((uint64_t)v24, v51, &qword_1002F1058);
  uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  unsigned int v53 = v52(v11, 1, v4);
  uint64_t v103 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
  uint64_t v91 = v5;
  uint64_t v104 = v4;
  if (v53 == 1)
  {
    sub_10000B070((uint64_t)v24, &qword_1002F1058);
    sub_10000B070((uint64_t)v26, &qword_1002F1058);
    if (v52((char *)v51, 1, v4) == 1)
    {
      sub_10000B070((uint64_t)v11, &qword_1002F1058);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_10000C3A4((uint64_t)v11, (uint64_t)v21, &qword_1002F1058);
  if (v52((char *)v51, 1, v4) == 1)
  {
    sub_10000B070((uint64_t)v24, &qword_1002F1058);
    sub_10000B070((uint64_t)v26, &qword_1002F1058);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v4);
LABEL_6:
    sub_10000B070((uint64_t)v11, &qword_1002F1200);
    goto LABEL_8;
  }
  uint64_t v54 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v90, v51, v4);
  sub_1000B8BF8((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  int v92 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v5 + 8);
  v55(v54, v4);
  sub_10000B070((uint64_t)v24, &qword_1002F1058);
  sub_10000B070((uint64_t)v26, &qword_1002F1058);
  v55(v21, v4);
  sub_10000B070((uint64_t)v11, &qword_1002F1058);
LABEL_8:
  uint64_t v56 = v114;
  Label<>.init(_:systemImage:)();
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v58 = (uint64_t)v123;
  uint64_t v59 = v121;
  uint64_t v96 = v27 + 16;
  uint64_t v95 = v57;
  v57(v123, v56, v121);
  *(unsigned char *)(v58 + *(int *)(v122 + 36)) = 1;
  uint64_t v60 = v105;
  sub_10000C3A4(v58, v105, &qword_1002F3AD8);
  *(unsigned char *)(v60 + *(int *)(v120 + 36)) = 1;
  sub_10000B070(v58, &qword_1002F3AD8);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v114 = (char *)(v27 + 8);
  uint64_t v94 = v61;
  v61(v56, v59);
  sub_1000B8A2C();
  uint64_t v62 = (uint64_t)v102;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v60, &qword_1002F3AE0);
  sub_1000B8B90(v62, v119);
  uint64_t v105 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v102 = v63;
  int v92 = v64;
  uint64_t v93 = v65;
  uint64_t v66 = v108;
  sub_100100194(v108);
  uint64_t v67 = v118;
  uint64_t v68 = v104;
  v99(v118, v101, v104);
  v97(v67, 0, 1, v68);
  uint64_t v69 = v113;
  uint64_t v70 = v113 + *(int *)(v106 + 48);
  sub_10000C3A4(v66, v113, &qword_1002F1058);
  sub_10000C3A4(v67, v70, &qword_1002F1058);
  long long v71 = v103;
  if (v103(v69, 1, v68) != 1)
  {
    uint64_t v72 = v89;
    sub_10000C3A4(v69, v89, &qword_1002F1058);
    if (v71(v70, 1, v68) != 1)
    {
      uint64_t v73 = v91;
      uint64_t v74 = v66;
      uint64_t v75 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v90, v70, v68);
      sub_1000B8BF8((unint64_t *)&qword_1002F1240, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v76 = *(void (**)(char *, uint64_t))(v73 + 8);
      v76(v75, v68);
      sub_10000B070(v118, &qword_1002F1058);
      sub_10000B070(v74, &qword_1002F1058);
      v76((char *)v72, v68);
      sub_10000B070(v69, &qword_1002F1058);
      goto LABEL_15;
    }
    sub_10000B070(v67, &qword_1002F1058);
    sub_10000B070(v66, &qword_1002F1058);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v72, v68);
    goto LABEL_13;
  }
  sub_10000B070(v67, &qword_1002F1058);
  sub_10000B070(v66, &qword_1002F1058);
  if (v71(v70, 1, v68) != 1)
  {
LABEL_13:
    sub_10000B070(v69, &qword_1002F1200);
    goto LABEL_15;
  }
  sub_10000B070(v69, &qword_1002F1058);
LABEL_15:
  id v77 = v112;
  Label<>.init(_:systemImage:)();
  uint64_t v78 = (uint64_t)v123;
  uint64_t v79 = v121;
  v95(v123, v77, v121);
  *(unsigned char *)(v78 + *(int *)(v122 + 36)) = 0;
  uint64_t v80 = v111;
  sub_10000C3A4(v78, v111, &qword_1002F3AD8);
  *(unsigned char *)(v80 + *(int *)(v120 + 36)) = 0;
  sub_10000B070(v78, &qword_1002F3AD8);
  v94(v77, v79);
  uint64_t v81 = (uint64_t)v109;
  View.accessibilityIdentifier(_:)();
  sub_10000B070(v80, &qword_1002F3AE0);
  uint64_t v82 = v110;
  sub_1000B8B90(v81, v110);
  uint64_t v83 = v119;
  uint64_t v84 = v115;
  sub_10000C3A4(v119, v115, &qword_1002F3AE8);
  uint64_t v85 = v116;
  sub_10000C3A4(v82, v116, &qword_1002F3AE8);
  uint64_t v86 = v117;
  sub_10000C3A4(v84, v117, &qword_1002F3AE8);
  uint64_t v87 = sub_100007620(&qword_1002F3B20);
  sub_10000C3A4(v85, v86 + *(int *)(v87 + 48), &qword_1002F3AE8);
  sub_10000B070(v82, &qword_1002F3AE8);
  sub_10000B070(v83, &qword_1002F3AE8);
  sub_10000B070(v85, &qword_1002F3AE8);
  return sub_10000B070(v84, &qword_1002F3AE8);
}

uint64_t sub_1000B87C0()
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v0 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v2 = v1;
  char v4 = v3 & 1;
  View.accessibilityIdentifier(_:)();
  sub_10001FC84(v0, v2, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B8894()
{
  return Menu.init(content:label:)();
}

uint64_t sub_1000B8968()
{
  return sub_1000B7864();
}

unint64_t sub_1000B8970()
{
  unint64_t result = qword_1002F3AB8;
  if (!qword_1002F3AB8)
  {
    sub_100007928(&qword_1002F3AA8);
    sub_1000B8BF8((unint64_t *)&qword_1002EEF80, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3AB8);
  }
  return result;
}

uint64_t sub_1000B8A24@<X0>(uint64_t a1@<X8>)
{
  return sub_1000B7A2C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000B8A2C()
{
  unint64_t result = qword_1002F3AF0;
  if (!qword_1002F3AF0)
  {
    sub_100007928(&qword_1002F3AE0);
    sub_1000B8ACC();
    sub_100014894(&qword_1002F3B10, &qword_1002F3B18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3AF0);
  }
  return result;
}

unint64_t sub_1000B8ACC()
{
  unint64_t result = qword_1002F3AF8;
  if (!qword_1002F3AF8)
  {
    sub_100007928(&qword_1002F3AD8);
    sub_100014894(&qword_1002EED78, &qword_1002EED40);
    sub_100014894(&qword_1002F3B00, &qword_1002F3B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3AF8);
  }
  return result;
}

uint64_t sub_1000B8B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100007620(&qword_1002F3AE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B8BF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000B8C40()
{
  return sub_100014894(&qword_1002F3B28, &qword_1002F3B30);
}

uint64_t initializeWithCopy for CopyButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CopyButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CopyButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CopyButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CopyButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CopyButton()
{
  return &type metadata for CopyButton;
}

uint64_t sub_1000B8E18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000B8E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  swift_getWitnessTable();
  type metadata accessor for _ViewModifier_Content();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v17 = type metadata accessor for _MaskAlignmentEffect();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v17 - v11;
  static Alignment.leading.getter();
  uint64_t v21 = v5;
  uint64_t v22 = v6;
  uint64_t v23 = v3;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.mask<A>(alignment:_:)();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v24 = WitnessTable;
  uint64_t v25 = v14;
  swift_getWitnessTable();
  sub_100169664(v10);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v18 + 8);
  v15(v10, v7);
  sub_100169664(v12);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v7);
}

uint64_t sub_1000B9070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = __chkstk_darwin();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100169664(v4);
  sub_100169664(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, a2);
}

void sub_1000B9150(void *a1@<X8>)
{
  *a1 = &off_1002C8558;
}

uint64_t sub_1000B9160(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_retain();
  sub_100007620(&qword_1002F3B50);
  uint64_t result = State.wrappedValue.getter();
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    State.wrappedValue.setter();
    uint64_t v5 = swift_release();
    return a3(v5);
  }
  return result;
}

uint64_t sub_1000B9208()
{
  return PhaseAnimator.init<A, B>(_:trigger:content:animation:)();
}

double sub_1000B934C@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  sub_1000B93D4(v3, (uint64_t)v14);
  uint64_t v7 = v14[0];
  double result = *(double *)&v14[1];
  uint64_t v9 = v14[2];
  uint64_t v10 = v14[3];
  char v11 = v16;
  char v12 = v17;
  long long v13 = v15;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  *(double *)(a2 + 24) = result;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 4sub_10009073C(0, 0, 0) = v10;
  *(_OWORD *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 64) = v11;
  *(unsigned char *)(a2 + 65) = v12;
  return result;
}

uint64_t sub_1000B93D4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for OpacityTransition();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = Image.init(systemName:)();
  uint64_t v12 = Image.init(systemName:)();
  if (a1)
  {
    if (a1 != 1)
    {
      uint64_t v18 = Image.init(systemName:)();
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      *(void *)&long long v28 = v32;
      BYTE8(v28) = BYTE8(v32);
      uint64_t v29 = v33;
      char v30 = v34;
      long long v31 = v35;
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v23 = v36;
      LOBYTE(v24) = BYTE8(v36);
      uint64_t v25 = v37;
      char v26 = v38;
      long long v27 = v39;
      sub_100007620(&qword_1002F3B80);
      sub_100014894(&qword_1002F3B88, &qword_1002F3B80);
      static AnyTransition.modifier<A>(active:identity:)();
      static AnyTransition.opacity.getter();
      uint64_t v19 = static AnyTransition.asymmetric(insertion:removal:)();
      swift_release();
      swift_release();
      uint64_t v23 = v18;
      uint64_t v24 = v19;
      LOWORD(v25) = 256;
      sub_100007620(&qword_1002F3B90);
      sub_100007620(&qword_1002F3B98);
      sub_1000B9BA4();
      sub_1000B9C20();
      _ConditionalContent<>.init(storage:)();
      long long v15 = v28;
      char v16 = v29;
      char v17 = BYTE1(v29);
      goto LABEL_7;
    }
    long long v32 = 0uLL;
    LOBYTE(v33) = 1;
    sub_100007620(&qword_1002F3B98);
    sub_1000B9C20();
    _ConditionalContent<>.init(storage:)();
    long long v32 = v36;
    LOWORD(v33) = v37;
    sub_100007620(&qword_1002F3B90);
    sub_1000B9BA4();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v13 = Image.init(systemName:)();
    OpacityTransition.init()();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_1000B9E00();
    uint64_t v14 = AnyTransition.init<A>(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    *(void *)&long long v32 = v13;
    *((void *)&v32 + 1) = v14;
    LOBYTE(v33) = 0;
    swift_retain();
    swift_retain();
    sub_100007620(&qword_1002F3B98);
    sub_1000B9C20();
    _ConditionalContent<>.init(storage:)();
    long long v32 = v36;
    LOWORD(v33) = v37;
    sub_100007620(&qword_1002F3B90);
    sub_1000B9BA4();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
  }
  long long v15 = v36;
  char v16 = v37;
  char v17 = BYTE1(v37);
LABEL_7:
  long long v22 = v15;
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 48) = v16;
  *(unsigned char *)(a2 + 49) = v17;
  swift_retain();
  swift_retain();
  long long v20 = v22;
  sub_1000B9CC0(v22, *((uint64_t *)&v22 + 1), v16, v17);
  sub_1000B9D60(v20, *((uint64_t *)&v20 + 1), v16, v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1000B98DC()
{
  static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v0 = Animation.logicallyComplete(after:)();
  swift_release();
  return v0;
}

uint64_t sub_1000B9944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100007620(&qword_1002F3B38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v8;
  v11[3] = v7;
  v11[4] = v10;
  void v11[5] = v9;
  uint64_t v14 = v8;
  uint64_t v15 = v7;
  uint64_t v16 = v10;
  uint64_t v17 = v9;
  swift_retain();
  swift_retain();
  sub_100007620(&qword_1002F3B40);
  sub_100014894(&qword_1002F3B48, &qword_1002F3B40);
  Button.init(action:label:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1000B9AF8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B9B38()
{
  return sub_1000B9160(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1000B9B44()
{
  return sub_1000B9208();
}

unint64_t sub_1000B9B50()
{
  unint64_t result = qword_1002F3B68;
  if (!qword_1002F3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3B68);
  }
  return result;
}

unint64_t sub_1000B9BA4()
{
  unint64_t result = qword_1002F3BA0;
  if (!qword_1002F3BA0)
  {
    sub_100007928(&qword_1002F3B90);
    sub_1000B9C20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3BA0);
  }
  return result;
}

unint64_t sub_1000B9C20()
{
  unint64_t result = qword_1002F3BA8;
  if (!qword_1002F3BA8)
  {
    sub_100007928(&qword_1002F3B98);
    sub_100014894(&qword_1002F3BB0, &qword_1002F3BB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1002F3BA8);
  }
  return result;
}

uint64_t sub_1000B9CC0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  if (a4)
  {
    swift_retain();
    return swift_retain();
  }
  else
  {
    char v5 = a3 & 1;
    return sub_1000B9D20(a1, a2, v5);
  }
}